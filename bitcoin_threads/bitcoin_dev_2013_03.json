[
    {
        "title": "[Bitcoin-development] Secure download",
        "thread_messages": [
            {
                "author": "webmaster",
                "date": "2013-03-02T19:39:54",
                "message_text_only": "Hi,\n\nI am a newbie trying to get my first wallet up.  But I have a \nsecurity/crypto background and so I know enough not to trust a http \ndownload.  But I don't see any other option to download bitcoin software \nfrom sourceforge.\n\nI can check the SHA256 hashes, but how do I verify those?\n\nI am familiar with gpg.  Where can I find signatures and the signing \nkeys?  Hopefully, the keys are on multiple independent servers.\n\nOr is read-only ssh/sftp/scp access possible?\n\nThanks in advance,\n\nChris"
            },
            {
                "author": "Gavin Andresen",
                "date": "2013-03-02T21:09:38",
                "message_text_only": "My gpg key is on the bitcoin.org homepage: http://bitcoin.org/gavinandresen.asc\n.... which you can access securely (and see the history of) at:\n  https://github.com/bitcoin/bitcoin.org/blob/master/gavinandresen.asc\n\nIf you're really super-duper paranoid, you could also fetch it from\nthe MIT pgp keyserver or look for it in the bitcointalk forums\narchives.\n\nImport it into pgp/gpg, then you can verify that the download\nchecksums you have are correct with:\n\ngpg --verify SHA256SUMS.asc\n\nAll that assuming you're running Linux.  If you're Windows or OSX, the\nlatest downloads are code-signed and checked for integrity\nautomatically by Windows/OSX.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1.4.9 (Darwin)\n\nmQGiBEy8srURBADlAamWM3TkgAKyVBVftUsg5aZ3zOA5UAlg+yI/6bzfTkYLtspA\nLQ6typamac9re+lqnWdDMa4qVwSmaOMxLOlGhCWWfmA38QprU+ZfuesnxWrVAMG8\nTDHLT2vBCa+9iC50soo/imsDqqe6ujm7a+Pd1KSNvFR5KXgEgeEHSiyEqwCg3iAa\nDH3lNWzNOgJgi8PUiszqbcsD/2mfNBYJsazYabXcbNdh8VheNnyK2KLUE8Lg1WzU\nld/Sd1gu67oPSFfTiFZ5OBjdHI/XmlFAT4r4eNy1IIf0nELJWWQ6hlzm0a0/DO4b\nBUoapjUjAYWDyeeeALDHK7EQboqtwWBlRONyY/+yB9usgbvAK2khRlzBhQonGJEs\nFpdQA/9bQzVgpEE1q/ZSnvLp0nOFA3E51SS9uvGGnAdQMjwDp7iGBzh7gRz4ko1k\nLG3Sa5fNe21VvlKFcMTaZN9Pd5fDd7gEoDkjUDlf9lRX+YT5zf+SSoeCIGuNMVzs\nf8Z2H414dYDOJPBkhYWcqFhGhz11QtWgug5n8GaewC2YOiPU8LQoR2F2aW4gQW5k\ncmVzZW4gPGdhdmluYW5kcmVzZW5AZ21haWwuY29tPohmBBMRAgAmBQJMvLK1AhsD\nBQku/geABgsJCAcDAgQVAggDBBYCAwECHgECF4AACgkQdYgkL74406h8rwCgyMwS\nbwfJ+t3B2IRbhnDIsLo4UtAAnRqMmznLBNLe97fbWYjkcgiAkr2UiEYEEBECAAYF\nAk27fCgACgkQl4dAZyhxEe45KACfTqAoiv2rN9ldH/+raMK00+YH8dMAnjVTISQC\nsKdTAx+mSRFiwwihwoddiEYEEBECAAYFAk5So7UACgkQxahj/GpMqhTOOwCgr5LT\nx36zFHXpooPaoALP4Sk6j94AmgIJXMR8LBmpkomNWqEl5k3hWf3WiEYEEhECAAYF\nAk6JJUoACgkQ5/k4vslVlLLjUQCfT2t7n7wIE0V/H8ZITuyIb4/YMxkAni4uJXXq\n9OMoOOVbdUpEgx0FOA6qiQEcBBABAgAGBQJOGL1xAAoJEHNq4Lhm3vtS8MEIAI0w\ndw9FpjQWQ1k98+Z8gLs3HFB/b1sVH7wgeLqpY+5k8t//wCZBusQOUnzADqZsCdap\nqx1xdlECfcX8LL4SmM/rwfxBye0wGTLk7ebZbNmA1uE+jGfXm0g7UZbL1S49+N1E\nexh06eW4h49mv9XGaaoMt1+JzMyPcnF9/cGnKVN9+ltczzWwYaGyRe8dDdGzJ+CQ\nNIqLpCNqBMkcY5ROdVJgfg2XrupqCrrf7IMcfzqtINPTwYdOQrUEv3H1CpOKTFe4\n1kTfoioTuqMUQ1cLsJoEzV8tBSi+eTQ8q86s73JCCS4S7mzaV9woh8R0Pkimbpe4\nSpoOD5Bad1Y7np9NUv2JARwEEAECAAYFAk7qbCwACgkQdIELASNGyabnkAgAnGec\nQXTwy7HU4fo1nu61grtNk1MUSSYCk3Aq/Zg4jRTKs3TMw8HMu8x8CLBXMNv9ZxFg\nzkL/SUDh9WxLONA62M+iTxm+SgOsXyVlgNM5+Ez2WZLUtaQfJpaR9R0IVLpiBrW6\ncLb6KOcOInvh8hhbYNJk5NFFlmbHHkNd4C28QYtPuHRK3nPzIQ8SNtiLEqzrvT+0\nC256bFJOvFlIy/TMj0YpBzNq2pf/PqGrZGxP84ZSEWKNU/foyC27M9Bx8coWX3Yd\nOIM5KRHpH3yqYcklxvL/+vXCLyzWDUHcnp3Pqg/nWHkhQNhJnLdNcpELjMP/axy6\nWNxrWs1QddLYhi1nb4kBIAQQAQgACgUCTq9S4QMFAXgACgkQqdCZPgQUM2LT7Af/\nZxRy+/w6Iqac/VlyGxIV8wyv03dAHsKvI4LZoCuOFtopeky4tHjp3zPaI7o6goVE\nbK1l1Z9uKc7T57dbnOEwlyF+bImkfBMgecCjiA51ru2sGluzqJyQPF2vG/pMH/m8\npcoATYhDLyM51EQ7P/3d1q2GCi1PCHZschc2sfOoz6bS2Xmx0IahKO1m5Im+rX3M\n2RmJ0cAgaqhwtalXiHEd7sYfbNlu3AL9g2sRsXQOgV8fgrDS9UlBHrOtgEnzl7Op\nnRkbq90F99fHm8aYryUwUg1MGXHFHV1CjKmXHBMJXLi9uul4xj/UPy0i/WIFCvtP\ngoi7YV/dVT57JSsA4UD3dIkCHAQQAQIABgUCTeFcygAKCRAa4dNQQ+COVDJCEADI\nIcTkaEqQXKNIvLgIdjloMZzzJLCk6wZac69W2imflNwdkFjikulbzGbZ28w67Fms\nniksYnQPdI3fKL4u+I4jORr4bEW/JY/ZfoZ06JsmJCGnkfUtkOzGLXlBtx1KDcQ3\nGVex8gNicS2sP8Kn49JsrrjNL9RC0un41ufjoMJ16quO+DurpELRyWzlqPUyepKw\nmcmDPypa2VI/Yl5fO36AG0U9ICZl1dQlWR+4qvHH2ivlSbdXw5e+jhRsfZEYDM9F\nMYXbEI9OWiUNhcNzSpJ51Y0bSlraxbhDo/ctHl/9O5T5L1tZO7fGYHgzt4OSxpjH\n6LBpocyD77zKvcHZsOLgvVKiJ4T8sTkMEv0vnAqh9OBgVPRefcjyIx8nIyWL66M9\nhi/FiK0jwkNgpWef05KSfTHeXKNHl0+Fl8UtE6/VZ+BdeI7Zc37oAmbxX8Rl/1Ou\n/ko5cJVCrIjVwwB8M+NvxJsPLZ/FSJVPZGy2+epwcl0PZANcI7/oCwoS9VCJhTiO\nZAUnnP3rKkmfNcu+ODX4HM+bSCKWQvZPivAn4LrzNyZnLjHeeZrOEbPt6WkvIXmQ\nORUaYHEV/eFYJWc54S7mKS+xXOVEOmRyCK/szfB0yec37yeF8Ddn0llk8TJ1gxrw\nOSizxu5ugbKmJuwnbX/O9QGqByA91tC57fBDocEkYokCHAQQAQIABgUCTevzkQAK\nCRCcxbkull1pqQ1KD/0VmN/S6yHnHEZZeFJOnNIDOGS1p0UsB4OOLMuA1TLjuWuO\nxNXKsTlyTBQyjFHxTmasC9IpUgt501HhLiXEblAZi/SL7U4hbJyP4eeDFCBJEG+P\njEK2KWPWVBUubmLqdAQ093d2hgik+gzBMMEtGdXSyivIV/vgFeEXemDI7zZOBrcr\ntq1fDIOiliCKAYzWIZltCt/Mb5u9BY+k7Ny45Nt9olYeDDnPzerNZbqAZor4ndZM\nZ3feux2IzNcW8rk1plJrP2vVeWgVt9kKCmQyY8ctcaA4B8G7T4wZC2zaryFeygVq\nwKswdUqvvnsSRQqimCnCkBHHzzcJuvDEcOUFZL09pwIaIH9RZKPomLJvsYhouONr\npKyUYiaCtyV3t0jQTaQi8ASqkowY02XGPxbDw0hHsJHWsPjemNzi7HZoItqn9D9G\n8L3dbpoeWRUjk3BjgZczHA+U/esET6jZO6AZYi6cbTPLSAe5ZJFuNyQYt6MWBxtK\nQJaxtpOYxFayy8joY2ZSeN/1YYKF52GB59J0rjZ7vvgQd3JbmpJLpQTabJvhIrR8\nWeaoWiIDYW1HUXFKEAqEPxnMMc8N3RMHnhaCz9FuZq1o/VR+3SwSdB17Jidl9/KD\njtgRiWZQHrcX18dY8LbQwf8AGyLZWrQtNhcvkUzT1/UI+YD/R3S3wo00I2oidrkC\nDQRMvLK1EAgAy3S2DxBcM/QxDB6ECA/1EhukAT/C11VgsvvOGlrEf0jD9pOwZqrY\ngRDgGb6vY03+P+lqGJFPvrw1IqtkHn5gp1EnzYg+03FQEDput9SoO05AkFN02WOa\n8yfAwKIdg7zLmIVla9IK75SXBesdANv2KKX0dQTu0javOy6Bv2anWxYIozTXjwVx\nHwxhtE9HYF5GQCrH+r/64EGFo0oDsdY5/3B+6KaLpuMchi1QxPrFN2igVMGljldY\nS1B1lcIAuxcF7Pp8Vj1YrUeEYummBpRU66pfQ260IqWsmxU0bG3ZQq0hKcM+bCiv\nxRN2kUqOfvl+n4+fdLjhDx7bvUQ7QXAnjwADBQf/f4Qs5fDlWREdn2sjk8AmrmG7\nf9tQ/kb0Ceu2xTDIj8RIFnMrnmZqRdmeSl3Otc/JjGvN9cFDXZJHK9gUq9hRCAK5\naaMp8GBz3iss8tYYYV8Xcu7jjm4nIDzJzsfeGUbr3P8Q/CzAy20NraQGZ/kwl78B\nO37yMTgp6+iSlJndhqUClZxUm30vbaN6SJp2XvDi8KBaAV0NwgVYiaOb2C1Bxx/j\noCLNvD1fvH3EFSU1EKZAzozYN3zxXfP2Bs2hOefjE6mnK+VaEkemlMHjKUQhRzW+\nTxL/x7GOpuEOcqVyQTMFmWZQ7YjyZ502lj8AmSxaI98xBNlYFRkrqMVDA4rD0YhP\nBBgRAgAPBQJMvLK1AhsMBQku/geAAAoJEHWIJC++ONOoMQkAn2t1BRd9TteFCpp8\nriRVE4opPmAbAKC4guQeg4TduXyUSloXb4odoUFq15kCDQRO6k81ARAA0CgPXUA9\nmag6L2mI8vprK5OA4UT4bsiX4YyXaqlYnpTMBSBlWgiBLd7LykH9Gk9h90fl/nbH\nEN0Ez+zCQe1r+ZEHg3bK1tOWN+sqJWBh8hX/WLPsZV5307wRoR3mJCD5btG30OPK\ny8ahkPXszNJPwaGLLtSrSzv/weo6KZtLaGn4rfMPn2ZRFheMwEOGGJ+D3YxcRNga\n5AI6W6jOn8ivlmDTBfpBhIvyleEa46OAzX+qLlT7GHRvU16TEcHl1oLoCw/s2z5n\nbCDWqKEp7pOtLhHTYK+E3KZE84yZX1FDZ0eTF2EZBG+32fvKvSDfxTgAVkddHNRO\nolwl4GaclOd5XXqNC6jmJa29tcpb4mAn2gE/OxqRcwWgAFJUsbG9HH3l3YPuneRP\nY5I9b3jBCD2ylkp+YJuAZ56q+Kc29PTIG33hBHgZfeNGMBXe9iKCf38CWmp2g4n7\nNt8DHrLZw7Xh3wn05zKPTUo7cB1Piraul1q3KdvLoHKlwaixH9RnTzwbKoicYq0y\nQBj/FzFcyehjvMYpnVOGto6Q8ZrpuZQgE7vVbNNCNLaaw/lQbctNNG0lIu/tbogm\no2Nee+5YT+iXvPM7pIvVOmCSQGAULXQL0Ck7LMoKE2DNACeGiR/kR/iexA48raje\nliW64XConsLhVJKm+9by9t2j48JTUaiASFkAEQEAAbQ7R2F2aW4gQW5kcmVzZW4g\nKENPREUgU0lHTklORyBLRVkpIDxnYXZpbmFuZHJlc2VuQGdtYWlsLmNvbT6JAjgE\nEwECACIFAk7qTzUCGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJECnZ7msf\nxzDBg0kP/2rbD+Vv29uKl4CYDGt/ChI1HlffIgCCv2EnFEnezM9ajBWdOxphWpaa\n2CcrMtbA4YiwLPmAOQXE3Q+0b2uVMlGbpS8fqP1lxAGaTHhuxiI4DjkM10KgvKSG\nq8Wxyv1sl7l07IfpeUHYHcaOGCZ8Y4ylDzdxvkmUY0QXPjzJnnvmfJmrjgKl6hg/\nNmTEdg2Mx3pxLiduEhtvUfIv3rWoc3VtYVXwD07FPJkofoRCJtWHrVIh91uD3efW\neyxNqMzbUSFe5AeN9195cBg52KEOzaLMKGJo8k6opwlxS1zVo8l9R3x9uowh+Exn\n9rCXf65YmhupdZvXegibpAkuiwiaBX2ojNXsEFDuqsIWWpyqUgb8uEMRfSdyf+lJ\nXXVhvn9GbQot08v/CAcaHlAv2Zc7Dimu3JDYn0N0QyeOOs9Z5iKvTcbC05m/j7+y\nV57lT/AzZjZIh/TumNRujFVilZLvcal5YKwE9JOQcJ6sFvvG66Bx8nZv2tIqk3tJ\nB9SIJ7z6nYR3N5BwHluJcU/BDFXhyT5qAntfBKVclGEMVeITAflJHkFUT+5fixAs\ntkzBvBSkXA9VzzmfZ+zTCYMUCLC/+begYVT18Rcuemek0miknSCQXYbcgV7Ogjb5\nTW851EFgznxRZc61HNuyDLOjzhkiY2qsULjwwhyhbuh8cytYzas9iEYEEBEKAAYF\nAk7qVlsACgkQdYgkL74406gS6ACeIp++Yb5wnAf4SpPj2s3ArhE9+VUAoN0iL0dq\n0eUvj4LiDSPUNB+UHhhpiQIxBBMBAgAbAhsDAh4BAheABQJO6lEpBQsJCAcDBRUK\nCQgLAAoJECnZ7msfxzDBlHcP/0LfIH1RTd+FTz+wdiWH7KiSJJthH1iLtnBKb6F0\n5iM+GXeGflJkJeSbcQUoHtcdyjVqVZdM9Af73C7HoMz1b4moBlfCFb+5lWTqZvxc\nAU0eXTyum2afXOhu88PQVYdPwPJNNBEbHFNnllG/FtEn7BAm1JsAUpehkI7iNPqY\nbzD6xyi+aZ/yZWfNSHbeOXLAgzxH0NFkvfxYusLijNmTwoBO0ZbzYeE7SOSMdUdU\nUmEHv22lv9m4RtrrdRbslhuphPJXnG6ITaP1o9NhCMth8M2P00v1rfLWA3noS9WX\n6gU6CUWd7er7u8uQYR5PKFxPWK1AL3tc4yz4+iZFW9f/3PmJRDAW2x7vH08LWqM1\nXSvK3sa8Akz4mgLIXxBOAoGkyPUswpTEhICIL8vsxTYhdIjwhlLfiTZdDFnJCChC\n2dLi/iDc+Edw64m4UMI5vq2DTzNF2X2HFBQMjeim/zWKwZzAB7apT5TZsDOztXJA\nVD9LRwoKzgNpefGQclbAXP9PoeE/1jBNRpSZiYSx3MWdSbmoGK/KWMh+6isR+hhk\nkziOGK6a1S8hN3uQBT5l9g88g0DIh0E9OA3Ns+LfydQBcqpKN2DzrjYDN5Q7YBhs\n/6yuU3cM5ZinaddwKsc/LuQWHFFJeibNyj2Lta4XirORkXI2US+D3iduHQYCcZti\nJuCpiQEcBBABAgAGBQJO6m08AAoJEHSBCwEjRsmmNIkH/1NzEGLPr0LoXV24VHTr\nJMRFIVmRwoEIO9+URyhCa2gt9BEE4RSQ46Azx5RbWCaHYUAJ0GFucttsQUGXbwSA\nqd4xaBF6pGsINqyUcTCBcFQmiY910KHZSuGJLB/Hg5K3ZTlC17+IXJRaPXXkL7Ti\njbJ6KO6uHnVGGA5CM+ss7x9ZgnXff94DrXpnyldWalIoqVhjyxPe90727rvyeuWg\nX9tLn7e8BKw2Ld8n+jilT4rvGD321CeUvljz7stQrwqx1lnQaWR9/fmEc63B2fW0\nHjaGMLvjPrdmGDB5aso7GQszOk2qmzYeKBm8+/6VrBG2GP+RHIVjmtJ7t5W+9UmA\nQs25Ag0ETupPNQEQAKMfFa0+dyXJFpk+uQR0E+gT62x0UlVStUy2V3BCHMerPJWF\nFySgLwKTyui0+L1I9X+PaPBzuSPhadbWUZg96YogNrXxY7/xD/q1DkBIZMWEiPUX\noltI6rRRrrqTIuIVmpZN/yrSv64q03s6A0XabhCPJpXEPdTTfptNBbcm3tgRLSKi\naBUXiUAeTA/HAHmM9281e1WyDhyVD51zb24l1S6GC+e/SOLJDdgFSt1ZbhrjF7b0\noRH/AIkLS5DToAkV4PreVBpwBfYTVZpNMz3UOvPOfkG8/vFeJY+xmM+8I1YPGgsn\np5JBgtQh8ROu9OuEf8Gmkc9hZ+EA8ZGElgIbiSagZ14z8qlnAXjpKqA5DRADlW1z\nVLVj0rUTmav7PtBMwe5MtaxS9e/ojbhcA6DEvjVn5CUo6akmZEZRnxfaKRd8CScm\nnoHUU+1MHNd6kEg4E/z/udQUPrNzxiu06Rrb443rdHSEls97q+ortpNOmOtD6Tsf\nf8w2F63wAiUM0jpzD8cLDUlt9HcXkbkfW8GLxxsHyzdH6nnKYycufpQtcaDAP0Bo\nTJi1q59vk3nC5IsfCu3cmI0YNwlSAliHIAPHPnNYkOrqidNSlqfQRi5YeD/42G4H\nBriIBJBkq4k+JtWBWl9eyx9cSeV1jaOuiG3HPlhQFWiXTunWaeaipdYfnqOlABEB\nAAGJAh8EGAECAAkFAk7qTzUCGwwACgkQKdnuax/HMMFmbw//bgskeTV+NcNMk7fl\nKCWNlMOXp3bfxeA3UyIJbPjxzyYWqvf79ASXOWJRaqtlZE6458NzCE+b7V6febwv\nqgq5AvDZW3gdFP1TssAbKVykGaeLkJkbitD5ZF5dkaknuOu5ogr2JIekUgBT2zrm\nvOwnk7XSClFN9ozKDUwkF31EvLeb38iTXU3UxMpmlYBr/3P3dpTWzlcWBdiwEhO4\nf9F/DwpnDRR9DzIwIS8ufHCDnyu24XD9ZdUGtWQ39Nwj5QylZpzn8lV4Ja3PJ6K4\nPEsSdkMeY2XOpuPfmSHDUr/Pbhs5wiIg9REoRZGQtshsK6Ktba7TCjAT6KsiZi6T\nXQ5H8tDyA6iY+9SFY0VEJM3VztKYWG0qTOAKVyFykI7PybfhD3kJsNxbt8xUtYwR\nqWFCfF5JH5QWK7D2S7aXhEPvGOXwh3eitQrEmGqX0ntqD/nMMJHfjKfoPnu3EhRw\nPDrDaaH8iWUgSyfVYH3tpIc7Ah7uUXboSCxQLndXh5OwGsD4rfGMZAYNIhRgRtey\nqvkaZK8jmVdwYSN7AOtMbUsyvG0nuw+tYf9IpME8vM3FT1aw3Q+kgQdpZExUeTXi\nsd2ZgJA13csMt6oV7lO5G+j4f/l0Xx1tkr9toil5FSRVIgrkmA1nhcKGXInAh1ia\n80ggoWu0sSl50HlpOWEGJukmbFw=\n=7mXQ\n-----END PGP PUBLIC KEY BLOCK-----"
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-03T18:54:46",
                "message_text_only": "On Sat, Mar 02, 2013 at 04:09:38PM -0500, Gavin Andresen wrote:\n> My gpg key is on the bitcoin.org homepage: http://bitcoin.org/gavinandresen.asc\n> .... which you can access securely (and see the history of) at:\n>   https://github.com/bitcoin/bitcoin.org/blob/master/gavinandresen.asc\n\nWould be nice to have a secure page at bitcoin.org, though, rathar\nthan having to go to github - certs from somewhere like Namecheap\nshould cost you next to nothing.  For those of us too lazy (not\nparanoid enough) to bother with GPG, a (secure) page on bitoin.org\nwith the MD5 hashes of the binaries would be awesome...\n\nroy"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-03T20:02:24",
                "message_text_only": "On Sun, Mar 3, 2013 at 10:54 AM, Roy Badami <roy at gnomon.org.uk> wrote:\n> Would be nice to have a secure page at bitcoin.org, though, rathar\n> than having to go to github - certs from somewhere like Namecheap\n> should cost you next to nothing.  For those of us too lazy (not\n> paranoid enough) to bother with GPG, a (secure) page on bitoin.org\n> with the MD5 hashes of the binaries would be awesome...\n\nWhile I think that it's silly that we don't have a HTTPS (only!) page,\nit should be noted that an HTTPS page is in no way a replacement for\nGPG, sadly:  Anyone who can MITM the server to the whole internet can\ntrivially obtain a fraudulent cert with only moderate cost and time.\n\n(The reason for this is that (many? most? all?) CAs verify authority\nby having you place a file at some HTTP path on the domain in\nquestion. Effectively the current CA model only prevents those from\nintercepting who cannot intercept the traffic generally. Basically\nonly helps with the evil hotspot/tor_exit problem.)"
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-03T20:25:41",
                "message_text_only": "> (The reason for this is that (many? most? all?) CAs verify authority\n> by having you place a file at some HTTP path on the domain in\n> question.\n\nIME most CAs verify by emailing hostmaster/webaster@ or one of the\ncontacts in the WHOIS.  But you're right, still subject to a MitM.\nStill better than nothing though.\n\nI would have suggested an EV cert, but that's more expensive (and\nstill far from foolproof)\n\n> Basically only helps with the evil hotspot/tor_exit problem.\n\nAlso helps protect against DNS spoofing attacks, but yes, you're\nright.  I should be checking GPG sigs but I'm lazy :-)\n\nroy"
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-05T12:37:50",
                "message_text_only": "> Would be nice to have a secure page at bitcoin.org, though, rathar\n> than having to go to github - certs from somewhere like Namecheap\n> should cost you next to nothing.\n\nAnd Namecheap now accept Bitcoin :-)\n\n(Complete coincidence - I didn't know that when I posted)\n\nroy"
            }
        ],
        "thread_summary": {
            "title": "Secure download",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gregory Maxwell",
                "Roy Badami",
                "webmaster",
                "Gavin Andresen"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 12602
        }
    },
    {
        "title": "[Bitcoin-development] Large-blocks and censorship",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2013-03-07T11:00:18",
                "message_text_only": "So with UTXO merkle-sum-fee-trees and fraud notices(1) we can\neffectively audit the blocks produced by miners and provide a way for\nSPV nodes to reject invalid blocks without requiring the whole\nblockchain data.\n\nNext step: How do we prevent censorship? Can we at all?\n\nBasically while UTXO-style proofs allow anyone to determine if a block\nis valid, it's fundementally still miners that choose what transactions\nto accept into blocks in the first place. Unfortunately the very nature\nof a blockchain is that it is meant to prove that transactions are\npublic and that a consensus exists about what transactions are\nspendable, thus any attempt to hide the bare technical details, txins\nand txouts, is futile.  Even using encryption doesn't work, because\nassuming you convinced a miner to accept your encrypted transaction,\nthat just shifts the part that makes the transaction public to the act\nof revealing the key, which again must be done publicly in the\nblockchain to prove consensus.\n\nAs transaction volume makes running a validating node more expensive, we\ncan expect the number of independent pools to decrease, or at the very\nleast make monitoring those pools easier as volumes grow beyond what\ntechnologies such as Tor can effectively accomodate. This provides the\nopportunity to pressure the remaining, identifiable, independent miners\ninto accepting restrictions on what transactions can be mined.\n\nIt's also notably that auditable off-chain transaction systems are\nvulnerable. All of the trustworthy ones that don't rely on trusted\nhardware require at least some of their on-chain transactions to be\npublicly known, specifically so that the total amount of reserves held\nby off-chain transaction providers can be audited. At best you can use\nGregory Maxwell's suggestion of maintaining a \"reserve\" account backed\nby funds that rarely move, where new deposits go to non-public addresses\nand result in the depositor receiving funds from the reserve account,\nbut again, if the spendability of those funds is in question, the value\nof the reserve itself is also in question. Additionally miners can block\nfidelity bond sacrifice transactions easily; again a critical\ntechnologies required to implement some types of off-chain transaction\nsystems, as well as for many other purposes.\n\nOf course we can just assume that the current pseudo-anonymity of\ntransactions is \"good enough\", but consider the case of stolen coins:\neven if the bulk of transactions are effectively anonymous, transactions\ncan always be made public delibrately and miners pressured into\npreventing the movement of coins declared tainted.\n\nFinally it's possible that some kind of chaum token system could be\nimplemented directly in the blockchain, but this has the problem that A:\nno efficient ones are yet known, let alone demonstrated, and B: unless\nnon-chaum token systems are prohibited by a hard-fork with wide\nadoption, the censorship risk is miners deciding to not mine any chaum\ntoken transactions. It's easy to imagine a government deciding that\nwhile they will accept transactions that occure on the public block\nchain, and are thus at best pseudo-anonymous, are acceptable any attempt\nto conduct truely anonymous transactions will be forbidden.\n\n\nOn the other hand, with small blocks the barriers to entry to becoming a\nminer remain low, and mining anonymously behind low-bandwidth\nanti-censorship technologies such as Tor remains feasible. Any attempt\nby a major pool to censor, IE choose not to mine, a transaction will\nnaturally lead to an opportunity for an anonymous miner to get a profit\nmining that transaction, thus we can expect transactions to be treated\nfairly equally on a fee per KB basis. In addition, the ever present\npossibility of this happening, further discourages large miners from\ndoing so in the first place, and in turn gives those miners additional\nincentive to resist attempts to restrict what transactions they are\nallowed to mine.\n\nOf course off-chain transaction systems can still practice censorship of\ntransactions on their own, but because the decentralized blockchain\nstill exists communities subject to such censorship can always create\ntheir own auditable and secure off-chain transaction systems for their\nown use. Again, the existence of such systems creates economic\nincentives to find ways to move value between all off-chain transaction\nsystems regardless of imposed restrictions, and again the overall\nability to transfer value freely is maintained.\n\n1) https://bitcointalk.org/index.php?topic=137933.0\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/edafec29/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-07T11:34:55",
                "message_text_only": "On Thu, Mar 07, 2013 at 06:00:18AM -0500, Peter Todd wrote:\n> It's also notably that auditable off-chain transaction systems are\n> vulnerable. All of the trustworthy ones that don't rely on trusted\n> hardware require at least some of their on-chain transactions to be\n> publicly known, specifically so that the total amount of reserves held\n> by off-chain transaction providers can be audited. At best you can use\n> Gregory Maxwell's suggestion of maintaining a \"reserve\" account backed\n> by funds that rarely move, where new deposits go to non-public addresses\n> and result in the depositor receiving funds from the reserve account,\n> but again, if the spendability of those funds is in question, the value\n> of the reserve itself is also in question. Additionally miners can block\n> fidelity bond sacrifice transactions easily; again a critical\n> technologies required to implement some types of off-chain transaction\n> systems, as well as for many other purposes.\n\nOh, and it occured to me: merge-mining is also vulnerable to the exact\nsame censorship forces. Again, with small blocks running P2Pool is\nfeasible, and P2Pool does merge-mining just fine. With large blocks it's\neasy for the pool to ignore shares that try to merge mine, so your\nalt-chains competition is also censored.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/aa576c3d/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-07T17:42:32",
                "message_text_only": "To summarize your post - it's another go at arguing for strongly\nlimited block sizes, this time on the grounds that large blocks make\nit easier for $AUTHORITY to censor transactions? Is that right?"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-07T18:30:35",
                "message_text_only": "On Thu, Mar 07, 2013 at 06:42:32PM +0100, Mike Hearn wrote:\n> To summarize your post - it's another go at arguing for strongly\n> limited block sizes, this time on the grounds that large blocks make\n> it easier for $AUTHORITY to censor transactions? Is that right?\n\nYes.\n\nNow, can we solve this problem robustly with clever technology, as is\ndone with UTXO fraud proofs? I can't see a way - can you?\n\nGavin asked me to do a projection for what block sizes could be based on\ntechnology improving, and I think that analysis should consider\ncarefully to what degree the current system's quite strong censorship\nresistance will be impacted.\n\nIt's interesting to be talking about censorship of transactions, right\nas the support for implementing technical means to block SatoshiDice\ntransactions is highest. If anything, I think Gregory Maxwell's findings\nhe has posted on IRC showing roughly three quarters of transactions in\nblocks are SatoshiDice related shows how the current large number of\nvalidating nodes makes any effort at even discouraging unwanted traffic\nquite difficult. In other words, it's a strong sign the censorship\nresistance of Bitcoin works as intended.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 198 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/987793d7/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-07T21:19:24",
                "message_text_only": "As an aside, there's a paper coming out in perhaps a few months that\ndescribes a new way to provide Chaum-style privacy integrated with\nBitcoin, but without the use of blinding and without any need for\nbanks. It's quite smart, I was reviewing the paper this week.\nUnfortunately the technique is too slow and too complicated to\nactually integrate, but you'd probably get a kick out of it. It's\nbased on zero knowledge proofs. You can talk to Ian Miers if you like,\nperhaps he'll send you a copy for review.\n\nBack on topic.\n\nThis idea is not new. I proposed the idea of regulating miners to\nfreeze certain outputs two years ago:\n\n   https://bitcointalk.org/index.php?action=printpage;topic=5979.0\n\nI concluded that it was not a real risk because both mining and\ntransactions can be done anonymously.\n\nYour argument rests on the assumption that you can't mine large blocks\nanonymously because Tor doesn't scale. Even if we go along with the\nidea that Tor is the only way to escape regulation (it's not), you\nshould maybe take up its inability to move data sufficiently fast with\nthe developers. Given that they routinely push two gigabits/second\ntoday, with an entirely volunteer run network, I think they'll be\nsurprised to learn that their project is doomed to never be usable by\nminers."
            },
            {
                "author": "Daniel Lidstrom",
                "date": "2013-03-07T21:31:10",
                "message_text_only": "My views on censorship resistance in the face of scaling:\n\n1) I expect if I'm not careful about preserving my privacy with the way I\nuse Bitcoin, then I will always run the risk of being censored by miners.\nThis means connecting to the network anonymously, not reusing addresses,\nand perhaps even mixing my coins.  The onus is on me here to avoid\ncensorship, but I'm optimistic that this privacy preservation can be made\npretty automatic.\n\n2) I expect anonymity systems to scale to accommodate Bitcoin full nodes,\nnot Bitcoin to stay small to avoid putting pressure on anonymity systems to\nscale.\n\n3) If 2 is too tall an order, then mining in a pool is always an option.\nThere should always be some countries in the world free enough to allow\nmining pools to operate, and miners in countries that ban Bitcoin can\nsimply connect to these anonymously.  If not, then Bitcoin is toast anyway,\nis it not?  If these miners are really interested in avoiding censoring\ntransactions, then they will do their due diligence and choose a pool that\ndoesn't do this.  But even if they don't, censorship can be personally\navoided by following 1.\n\nOn Thu, Mar 7, 2013 at 2:19 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> As an aside, there's a paper coming out in perhaps a few months that\n> describes a new way to provide Chaum-style privacy integrated with\n> Bitcoin, but without the use of blinding and without any need for\n> banks. It's quite smart, I was reviewing the paper this week.\n> Unfortunately the technique is too slow and too complicated to\n> actually integrate, but you'd probably get a kick out of it. It's\n> based on zero knowledge proofs. You can talk to Ian Miers if you like,\n> perhaps he'll send you a copy for review.\n>\n> Back on topic.\n>\n> This idea is not new. I proposed the idea of regulating miners to\n> freeze certain outputs two years ago:\n>\n>    https://bitcointalk.org/index.php?action=printpage;topic=5979.0\n>\n> I concluded that it was not a real risk because both mining and\n> transactions can be done anonymously.\n>\n> Your argument rests on the assumption that you can't mine large blocks\n> anonymously because Tor doesn't scale. Even if we go along with the\n> idea that Tor is the only way to escape regulation (it's not), you\n> should maybe take up its inability to move data sufficiently fast with\n> the developers. Given that they routinely push two gigabits/second\n> today, with an entirely volunteer run network, I think they'll be\n> surprised to learn that their project is doomed to never be usable by\n> miners.\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130307/5873f60a/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-10T08:18:57",
                "message_text_only": "On Thu, Mar 07, 2013 at 02:31:10PM -0700, Daniel Lidstrom wrote:\n> My views on censorship resistance in the face of scaling:\n> \n> 1) I expect if I'm not careful about preserving my privacy with the way I\n> use Bitcoin, then I will always run the risk of being censored by miners.\n> This means connecting to the network anonymously, not reusing addresses,\n> and perhaps even mixing my coins.  The onus is on me here to avoid\n> censorship, but I'm optimistic that this privacy preservation can be made\n> pretty automatic.\n\nYes, but keep in mind the meta risk, which is that as Bitcoin becomes\ncentralized one of the types of transactions that will be censored are\nones that preserve your privacy. For instance, as it costs thousands of\ndollars to setup a mining pool, and hence mining pools also become quite\nvisible, it would be very easy for local governments to start doing\nthings like specifying that transactions must be accompanied with a\nproof of identification. With that proof of course Bitcoin can remain\ntotally legal, and the pool in business.\n\n> 2) I expect anonymity systems to scale to accommodate Bitcoin full nodes,\n> not Bitcoin to stay small to avoid putting pressure on anonymity systems to\n> scale.\n\nWhy do you expect that? It's always harder to hide a large amount of\nbandwidth than a small one, and stenography is limited by the bandwidth\nof the data it's hiding it. HD video streams aren't going to require\nmore bandwidth in the future.\n\n> 3) If 2 is too tall an order, then mining in a pool is always an option.\n> There should always be some countries in the world free enough to allow\n> mining pools to operate, and miners in countries that ban Bitcoin can\n> simply connect to these anonymously.  If not, then Bitcoin is toast anyway,\n> is it not?  If these miners are really interested in avoiding censoring\n> transactions, then they will do their due diligence and choose a pool that\n> doesn't do this.  But even if they don't, censorship can be personally\n> avoided by following 1.\n\nRight now the thing that keeps pools honest is that setting up another\npool is pretty easy; note how most pools are run as hobbyist projects.\nSimilarly you can always use P2Pool, which is totally decentralized.\nBut if running the validating node required to run a pool costs\nthousands of dollars that competition just isn't there anymore and\nstarting a new pool isn't an option. Remember there will be a chicken\nand egg problem in that the new pool has thousands of dollars in costs,\nyet no hashing power yet.\n\nAs for constantly moving countries, The Pirate Bay is in the same\nposition, and as well as they've done, they still wind up getting shut\ndown periodically. Do you really want access to your funds contingent on\nsome highly visible mining pools, constantly wondering if their local\ngovernment will change their mind?\n\n\nAnyway, seems that my question was answered: There aren't any clever\ntechnical ways to avoid censorship if validating nodes and mining pools\nare centralized.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130310/b286a9f1/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Large-blocks and censorship",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Peter Todd",
                "Daniel Lidstrom"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 16028
        }
    },
    {
        "title": "[Bitcoin-development] python-bitcoinlib: Comprehensive bitcoin library for python",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2013-03-08T03:19:05",
                "message_text_only": "GitHub URL: https://github.com/jgarzik/python-bitcoinlib\nRepository: git://github.com/jgarzik/python-bitcoinlib.git\n\nThe python library for pynode has matured sufficiently to have a home\nof its own.  The python-bitcoinlib project attempts to present a\nlightweight, modular, a la carte interface to bitcoin data structures\nand network protocols.\n\nFeatures:\n\n *   Easy object interface to all bitcoin core data structures: block,\ntransaction, addresses, ...\n *   Full transaction script engine\n *   Fully verifies main and testnet block chains (via pynode)\n *   ECDSA verification (OpenSSL wrapper)\n *   Object interface to all known network messages\n *   Binary encoding/decoding (serialization) for full bitcoin\nprotocol interoperability\n *   Passes many of the tests shipped with the bitcoin reference\nclient (bitcoind/Bitcoin-Qt)\n\nLike pynode, this library is currently a developer-only release, not\nrecommended for highly secure production sites.\n\nPull requests, comments, questions and donations always welcome.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "python-bitcoinlib: Comprehensive bitcoin library for python",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1069
        }
    },
    {
        "title": "[Bitcoin-development] Blockchain torrent on SourceForge d/l area?",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2013-03-08T17:04:56",
                "message_text_only": "Would like to upload bootstrap.dat.torrent to\nsourceforge.net/projects/bitcoin/files/Bitcoin/blockchain/ or\nthereabouts.\n\nAny objections?\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "Blockchain torrent on SourceForge d/l area?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 191
        }
    },
    {
        "title": "[Bitcoin-development] Blocking uneconomical UTXO creation",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2013-03-10T04:31:55",
                "message_text_only": "As discussed endlessly data in the UTXO set is more costly, especially\nin the long run, than transaction data itself. The fee system is per KB\nin a block, and thus doesn't properly capture the long-term costs of\nUTXO creation.\n\nIt's also been suggested multiple times to make transaction outputs with\na value less than the transaction fee non-standard, either with a fixed\nconstant or by some sort of measurement.\n\nhttps://github.com/petertodd/bitcoin/tree/block-uneconomic-utxo-creation\n\nThe above patch that implements the latter approach, and thus will not\naccept into the mempool any txout whose value is <= the fee per KB paid\nby the transaction. That fee is then bounded between MIN_TX_FEE and\nCOIN_DUST, 0.0005BTC and 0.01BTC respectively. The former due to the\nfact that the fee can be zero, and the latter so that delibrate high-fee\ncreation is still allowed. (provably unspendable txouts can of course be\nhandled specially later)\n\nBy basing the calculation on the fee per KB the transaction itself pays\nthe limit automatically adjustes as the market for blockchain space\nchanges, and the value of Bitcoins change.\n\nSince scriptSigs greater than 500 bytes are non-standard the marginal\nbytes required to spend a txout is always less than 540 bytes. For\nstandard transactions the marginal cost is usually just a 80+1 byte\nsignature, and a 33+1 byte pubkey, or 155 bytes. Thus the choice of the\nfee for 1000bytes allows a margin to ensure a net positive return, even\nif tx fees become more expensive. In particular I think a reasonable\nmargin is important to deter users from simply deleting wallets filled\nwith dust-spam, something which gets reported as happening frequently.\nIt also protects users who do not understand how Bitcoin works from\nthinking that repeated small amounts of coins collected from sites\ngiving away small amounts will add up to an amount that they can\nusefully use, and equally protects the long-term health of the network\nfrom those services.\n\nBy basing the threshold for what is considered a too-low output value on\nensuring that spending outputs has a net positive return, rather than\ntrying to come up with some sort of model of UTXO cost, we make the\nlogic significantly easier to reason about. In particular, it means that\nBitcoin clients can use an unchanging rule based on fees paid, rather\nthan some constant subject to change as the economics of UTXO costs\nchange. Note how the total cost of maintaining the UTXO set is\ndetermined by the number of validating nodes, and what that number will\nbe in the future heavily debated with a possible range spanning many\norders of magnitude.\n\n\nShort-term\n----------\n\nSatoshiDice will have to change their betting system to have their\n\"failed bet\" messages return enough coins to be economically spendable.\nIt's notable that Satoshidice seems to have already changed their system\nto return what appear to be randomly chosen amounts, likely to get\naround the users who have applied custom patches to consider 1 satoshi\noutput values non-standard. Because this patch does not block\nSatoshiDice, nor do I expect it to result in less SatoshiDice traffic, I\nexpect pool operators to be open to applying it.\n\nOther services such as CoinAd will also have to make changes to either\ncollect multiple payments together, or use off-chain transactions. I've\nspoken with a person who runs one of these sites, CoinAd IIRC, and he\nwas open to opening an instawallet or easywallet account and using it to\ndo direct off-chain transactions for users who wanted to be paid\nimmediately.\n\nPart of the patch includes code that sends change to fees if creating a\nchange output would produce an uneconomic txout. This will likely\noccasionally generate confusion from users, especially as it will only\nhappen if they try to send almost all of their wallet.\n\n\nSecurity\n--------\n\nFor a non-upgraded client, accepting zero-confirmation transactions\nbecomes more risky as the change represents yet another way of creating\na transaction that won't be mined. Fortnately the nLockTime problem has\nserved to warn people yet again about those dangers.\n\n\nLong-term\n---------\n\nIf fees required on transactions go up in numerical value, the patch\nadapts the minimum output size as required.\n\nIf fees go down numerically, the minimum output size is also adjusted as\nrequired. If they go down sufficiently that MIN_TX_FEE requires\nchanging, only one constant needs to change. In particular, the\nMIN_RELAY_TX_FEE blocks relaying small output values with small fees\nanyway, and it's set to one fifth of MIN_TX_FEE. Additionally most\nminers follow the MIN_TX_FEE default, so using that value ensures that\nthe logic holds true for the more likely case that fees numerically stay\nstable or rise. In any case, Bitcoin will never be a good\nmicrotransaction system.\n\n\nOuputs representing other assets; \"colored coins\" and \"smartcoins\"\n------------------------------------------------------------------\n\nThe colored coin ideas being passed around on the forums often used\nfixed representations of assets, that is 1 bond unit == 1 satoshi or\nsimilar. Since proving the state of a colored coin to an SPV client\nrequires providing the full transaction history changing these protocols\nto allow a floating numerical ratio Bitcoins to assets is always\npossible by allowing for ordinary, non-marked, transaction inputs and\noutputs to add or remove coins as required. This has the additional\nadvantage of making divisibility easy.\n\nIf the asset itself is worth less than a tx fee, moving it will still\nincur a net loss. Equally if the asset is worth more than a tx fee, the\nquickly the burden of requiring an additional tx fee to be locked up by\nthe asset becomes minor.\n\n\n\nTesting Required\n----------------\n\nTo be written after more consensus. Essentially a UI testing script, and\nunittests in wallet_tests.cpp need to be written.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130309/b11db46f/attachment.sig>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-11T11:01:09",
                "message_text_only": "On 3/10/13, Peter Todd <pete at petertodd.org> wrote:\n> It's also been suggested multiple times to make transaction outputs with\n> a value less than the transaction fee non-standard, either with a fixed\n> constant or by some sort of measurement.\n\nAs said on the bitcointalk thread, I think this is the wrong approach.\nThis way you effectively disable legitimate use cases for payments\nthat \"are worth\" less than the fees like smart property/colored coins.\nWhile the transactions pay fees, they should not be considered spam\nregardless of how little the quantities being moved are.\n\nThen your only concern are unspent outputs and comparing fees with\nvalues doesn't help in any way. Just activate a non-proportional\ndemurrage (well, I won't complain if you just turn bitcoin into\nfreicoin, just think that non-proportional would be more acceptable by\nmost bitcoiners) that incentives old transactions to be moved and\ndestroys unspent transactions with small amounts that don't move to\nanother address periodically. This has been proposed many times before\ntoo, and I think it makes a lot more sense."
            },
            {
                "author": "Gavin Andresen",
                "date": "2013-03-11T15:36:08",
                "message_text_only": "> Just activate a non-proportional demurrage\n\ndemurrage of any kind will never, ever happen, just give up on that idea.\n\nThe negative publicity of \"the bitcoin developers are destroying YOUR\ncoins!\" would be devastating.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-11T16:45:15",
                "message_text_only": "\"The Bitcoin network will destroy your coins IF you don't move your coins\"\nIs pretty different. By the way, doesn't have to destroy them, can\njust give them to miners.\n\nIn any case, what's wrong with my reasoning?\nSmart property/colored coins are not spam transactions because they pay fees.\n\nThe problem for the network are not transactions that move less coins\nthan they pay fees, but old UNSPENT OUTPUTS. So why don't you focus on\nthat instead of a formula to check what transactions make \"economic\nsense\"?\n\nI even prefer the sudden \"destruction\" (or re-generation by miners) of\nthe account after the X period (killerstorm's proposal) instead of\njust rejecting great potential use cases for the chain.\n\nI mean, I still prefer a small fixed demurrage fee after those X\nblocks without moving them, but since this community is demurrage\nallergic and that possibility cannot even be considered (doesn't\nmatter what reflects better the costs for miners/the network I guess),\nI'll go with the second best option IMO.\n\nThis would be just a fee for a resource that users are enjoying and\nhas real costs for the network. Why would constant demurrage fees\nafter a free storage period would be perceived so different from\ntransaction fees?\n\nI haven't heard anyone complaining about \"the bitcoin developers are\ndestroying part of YOUR coins every time you move them!!\"\n\n\nOn 3/11/13, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>> Just activate a non-proportional demurrage\n>\n> demurrage of any kind will never, ever happen, just give up on that idea.\n>\n> The negative publicity of \"the bitcoin developers are destroying YOUR\n> coins!\" would be devastating.\n>\n> --\n> --\n> Gavin Andresen\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/\nhttp://archive.ripple-project.org/"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-11T16:46:38",
                "message_text_only": "Unless of course everlasting physical \"bitcoins\" are much more\nimportant than smart property and colored coins...\n\n\nOn 3/11/13, Jorge Tim\u00f3n <jtimonmv at gmail.com> wrote:\n> \"The Bitcoin network will destroy your coins IF you don't move your coins\"\n> Is pretty different. By the way, doesn't have to destroy them, can\n> just give them to miners.\n>\n> In any case, what's wrong with my reasoning?\n> Smart property/colored coins are not spam transactions because they pay\n> fees.\n>\n> The problem for the network are not transactions that move less coins\n> than they pay fees, but old UNSPENT OUTPUTS. So why don't you focus on\n> that instead of a formula to check what transactions make \"economic\n> sense\"?\n>\n> I even prefer the sudden \"destruction\" (or re-generation by miners) of\n> the account after the X period (killerstorm's proposal) instead of\n> just rejecting great potential use cases for the chain.\n>\n> I mean, I still prefer a small fixed demurrage fee after those X\n> blocks without moving them, but since this community is demurrage\n> allergic and that possibility cannot even be considered (doesn't\n> matter what reflects better the costs for miners/the network I guess),\n> I'll go with the second best option IMO.\n>\n> This would be just a fee for a resource that users are enjoying and\n> has real costs for the network. Why would constant demurrage fees\n> after a free storage period would be perceived so different from\n> transaction fees?\n>\n> I haven't heard anyone complaining about \"the bitcoin developers are\n> destroying part of YOUR coins every time you move them!!\"\n>\n>\n> On 3/11/13, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>>> Just activate a non-proportional demurrage\n>>\n>> demurrage of any kind will never, ever happen, just give up on that idea.\n>>\n>> The negative publicity of \"the bitcoin developers are destroying YOUR\n>> coins!\" would be devastating.\n>>\n>> --\n>> --\n>> Gavin Andresen\n>>\n>\n>\n> --\n> Jorge Tim\u00f3n\n>\n> http://freico.in/\n> http://archive.ripple-project.org/\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/\nhttp://archive.ripple-project.org/"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-11T16:54:51",
                "message_text_only": "Why does demurrage even still come up? The base rules of Bitcoin will\nnot be changing in such a fundamental way.\n\nWith regards to trying to minimize the size of the UTXO set, this\nagain feels like a solution in search of a problem. Even with SD\nabusing micropayments as messages, it's only a few hundred megabytes\ntoday. That fits in RAM, let alone disk. If one day people do get\nconcerned about the working set size, miners can independently set\ntheir own policies for what they confirm, for instance maybe they just\nbump the priority of any transaction that has fewer outputs than\ninputs. An IsStandard() rule now that tries to ban micropayments will\njust risk hurting interesting applications for no real benefit. It's\nlike trying to anticipate and fix problems we might face in 2020.\n\nThere are lots of less invasive changes for improving scalability,\nlike making transaction validation multi-threaded in every case,\ntransmitting merkle blocks instead of full blocks, moving blocking\ndisk IO off the main loop so nodes don't go unresponsive when somebody\ndownloads the chain from them, and finishing the payment protocol work\nso there's less incentive to replicate the SD \"transactions as\nmessages\" design."
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-11T17:08:03",
                "message_text_only": "Well, my initial idea was that nothing was really needed too.\nBut if something must be done, I dislike very much the \"ban\nmicropayments\" approach. I was just offering other solutions that I\nconsider much better, but if nothing is done I won't be pushing for\nthose alternative solutions (to a problem that we may not even have).\n\n\nOn 3/11/13, Mike Hearn <mike at plan99.net> wrote:\n> Why does demurrage even still come up? The base rules of Bitcoin will\n> not be changing in such a fundamental way.\n>\n> With regards to trying to minimize the size of the UTXO set, this\n> again feels like a solution in search of a problem. Even with SD\n> abusing micropayments as messages, it's only a few hundred megabytes\n> today. That fits in RAM, let alone disk. If one day people do get\n> concerned about the working set size, miners can independently set\n> their own policies for what they confirm, for instance maybe they just\n> bump the priority of any transaction that has fewer outputs than\n> inputs. An IsStandard() rule now that tries to ban micropayments will\n> just risk hurting interesting applications for no real benefit. It's\n> like trying to anticipate and fix problems we might face in 2020.\n>\n> There are lots of less invasive changes for improving scalability,\n> like making transaction validation multi-threaded in every case,\n> transmitting merkle blocks instead of full blocks, moving blocking\n> disk IO off the main loop so nodes don't go unresponsive when somebody\n> downloads the chain from them, and finishing the payment protocol work\n> so there's less incentive to replicate the SD \"transactions as\n> messages\" design.\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/\nhttp://archive.ripple-project.org/"
            },
            {
                "author": "Benjamin Lindner",
                "date": "2013-03-11T18:17:04",
                "message_text_only": "On Mar 11, 2013, at 12:54 PM, Mike Hearn <mike at plan99.net> wrote:\n> With regards to trying to minimize the size of the UTXO set, this\n> again feels like a solution in search of a problem. Even with SD\n> abusing micropayments as messages, it's only a few hundred megabytes\n> today. That fits in RAM, let alone disk. If one day people do get\n\nThe problem of UTXO in principal scales with the block size limit. Thus it should be fixed BEFORE you consider increasing the block size limit. Otherwise you just kick the can down the road, making it bigger.\n\n> concerned about the working set size, miners can independently set\n> their own policies for what they confirm, for instance maybe they just\n\nProblem is the skewed incentive structure. Rational miners will always include dust output with fees, because the eternal cost of UTXO is payed by the network and future miners, not the current/individual miner.\n\nOn Mar 11, 2013, at 7:01 AM, \tJorge Tim\u00f3n <jtimonmv at gmail.com> wrote:\n\n> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:\n>> It's also been suggested multiple times to make transaction outputs with\n>> a value less than the transaction fee non-standard, either with a fixed\n>> constant or by some sort of measurement.\n> \n> As said on the bitcointalk thread, I think this is the wrong approach.\n> This way you effectively disable legitimate use cases for payments\n> that \"are worth\" less than the fees like smart property/colored coins.\n\nthis.\n\n> Just activate a non-proportional\n> demurrage (well, I won't complain if you just turn bitcoin into\n> freicoin, just think that non-proportional would be more acceptable by\n> most bitcoiners) that incentives old transactions to be moved \n\nYou could delegate the decision to the user with a rule like:\n\nif (output<fee):\n limit lifetime of the UTXO to 10 years.\nif (output>fee):\n unlimited lifetime\n\nThen, when a user creates a transaction, he can decide whether he wants to have limited or unlimited lifetime. The rationale for limiting the lifetime for (output<fee) transactions is that they may have no inherent economic incentive to be spend."
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-03-11T18:59:14",
                "message_text_only": "On Mon, Mar 11, 2013 at 11:17 AM, Benjamin Lindner <ben at benlabs.net> wrote:\n\n> > Just activate a non-proportional\n> > demurrage (well, I won't complain if you just turn bitcoin into\n> > freicoin, just think that non-proportional would be more acceptable by\n> > most bitcoiners) that incentives old transactions to be moved\n>\n> You could delegate the decision to the user with a rule like:\n>\n> if (output<fee):\n>  limit lifetime of the UTXO to 10 years.\n> if (output>fee):\n>  unlimited lifetime\n>\n> Then, when a user creates a transaction, he can decide whether he wants to\n> have limited or unlimited lifetime. The rationale for limiting the lifetime\n> for (output<fee) transactions is that they may have no inherent economic\n> incentive to be spend.\n>\n\nIf you think demurrage has a bad rep, wait until you see the response to\nescheatment (which is what's really being proposed here).\n\nUTXO growth over time is worst-case linear, while computational resources\nincrease exponentially. Mike nailed it on the head: all of this is a\nsolution in search of a problem.\n\nMark\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/bf5a29f5/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-11T18:59:32",
                "message_text_only": "That solution seems good enough to me.\nSmartcoin users would just need to move their assets before 10 years,\ntotally acceptable.\nAnd regular users don't need to think about it since they're probably\nalways sending more than they pay in fees.\n\n\nOn 3/11/13, Benjamin Lindner <ben at benlabs.net> wrote:\n>\n> On Mar 11, 2013, at 12:54 PM, Mike Hearn <mike at plan99.net> wrote:\n>> With regards to trying to minimize the size of the UTXO set, this\n>> again feels like a solution in search of a problem. Even with SD\n>> abusing micropayments as messages, it's only a few hundred megabytes\n>> today. That fits in RAM, let alone disk. If one day people do get\n>\n> The problem of UTXO in principal scales with the block size limit. Thus it\n> should be fixed BEFORE you consider increasing the block size limit.\n> Otherwise you just kick the can down the road, making it bigger.\n>\n>> concerned about the working set size, miners can independently set\n>> their own policies for what they confirm, for instance maybe they just\n>\n> Problem is the skewed incentive structure. Rational miners will always\n> include dust output with fees, because the eternal cost of UTXO is payed by\n> the network and future miners, not the current/individual miner.\n>\n> On Mar 11, 2013, at 7:01 AM, \tJorge Tim\u00f3n <jtimonmv at gmail.com> wrote:\n>\n>> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:\n>>> It's also been suggested multiple times to make transaction outputs with\n>>> a value less than the transaction fee non-standard, either with a fixed\n>>> constant or by some sort of measurement.\n>>\n>> As said on the bitcointalk thread, I think this is the wrong approach.\n>> This way you effectively disable legitimate use cases for payments\n>> that \"are worth\" less than the fees like smart property/colored coins.\n>\n> this.\n>\n>> Just activate a non-proportional\n>> demurrage (well, I won't complain if you just turn bitcoin into\n>> freicoin, just think that non-proportional would be more acceptable by\n>> most bitcoiners) that incentives old transactions to be moved\n>\n> You could delegate the decision to the user with a rule like:\n>\n> if (output<fee):\n>  limit lifetime of the UTXO to 10 years.\n> if (output>fee):\n>  unlimited lifetime\n>\n> Then, when a user creates a transaction, he can decide whether he wants to\n> have limited or unlimited lifetime. The rationale for limiting the lifetime\n> for (output<fee) transactions is that they may have no inherent economic\n> incentive to be spend.\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/\nhttp://archive.ripple-project.org/"
            },
            {
                "author": "Tadas Varanavi\u010dius",
                "date": "2013-03-11T19:08:54",
                "message_text_only": "On 03/11/2013 08:17 PM, Benjamin Lindner wrote:\n> The problem of UTXO in principal scales with the block size limit. Thus it should be fixed BEFORE you consider increasing the block size limit. Otherwise you just kick the can down the road, making it bigger.\n\nLet's assume bitcoin has scaled up to 2000 tx/s. We all want this, \nright? https://en.bitcoin.it/wiki/Scalability. Block size is 500 MB. \nCPU, network and archival blockchain storage seem to solvable.\n\nLet's say SatoshiDice-like systems are doing informational transactions \nthat produce unspendable outputs, because they can and users are paying \nfor it anyway (proved in real life). 400 unspendable outputs per second \nwould be realistic.\n\nThis would be bloating UTXO data at a speed of 52 GB/year. That's a very \nbig memory leak. And this is just the unspendable outputs.\n\nBitcoin cannot scale up until such dust output spamming is discouraged \nat the protocol level."
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-11T22:19:07",
                "message_text_only": "> This would be bloating UTXO data at a speed of 52 GB/year. That's a very\n> big memory leak. And this is just the unspendable outputs.\n\nFirstly, the UTXO set is a LevelDB, it's not stored in memory. Outputs\nthat never get spent are not in the working set by definition, after a\nwhile they just end up in the bottom levels and hardly ever get\naccessed. If need be we can always help LevelDB out a bit by moving\noutputs that we suspect are unlikely to get spent into a separate\ndatabase, but I doubt it's needed.\n\nSecondly, if an output can be proven unspendable it can be pruned\nimmediately. We already reached consensus on adding some standard\ntemplate using OP_RETURN that results in insta-pruning. So people who\nwant to create unspendable outputs can do so with the only side-effect\nbeing long term chain storage. It would be effectively \"free\" to\npruning nodes.\n\nSo the issue is not really with unspendable outputs but with low-value\nspendable outputs. Wallets with lots of tiny outputs end up generating\nlarge transactions that take a long time to verify, in situations\nwhere the network redlines those transactions would end up at the\nbottom of the priority queue and might take longer to confirm. So\nwallet apps already have incentives to try and find a good balance in\noutput sizes and defragment themselves if their average output gets\ntoo low in value, eg, by send-to-self transactions at night."
            },
            {
                "author": "Tadas Varanavi\u010dius",
                "date": "2013-03-11T22:25:50",
                "message_text_only": "On 03/12/2013 12:19 AM, Mike Hearn wrote:\n> Firstly, the UTXO set is a LevelDB, it's not stored in memory. Outputs\n> that never get spent are not in the working set by definition, after a\n> while they just end up in the bottom levels and hardly ever get\n> accessed. If need be we can always help LevelDB out a bit by moving\n> outputs that we suspect are unlikely to get spent into a separate\n> database, but I doubt it's needed.\nIsn't there danger of an attack if UTXO is not stored in fast storage?"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-11T22:39:17",
                "message_text_only": "> Isn't there danger of an attack if UTXO is not stored in fast storage?\n\nRAM is used as a database cache.\n\nBut regardless, what kind of attack are you thinking of? Using up all\navailable disk seeks by sending a node a lot of fake transactions that\nconnect to unspent outputs, but have invalid transactions? You'll get\nyourself disconnected and the IP banned even with todays code.\n\nIt's much easier to hose a node by just asking it to send you the\nblock chain. Watch your own node when something is syncing the chain\nfrom it. Ping times go through the roof because there's only one\nnetwork thread. If you're worried about DoS attacks on Bitcoin, it'd\nbe better to fix that first."
            },
            {
                "author": "Tadas Varanavi\u010dius",
                "date": "2013-03-11T23:26:07",
                "message_text_only": "On 03/12/2013 12:39 AM, Mike Hearn wrote:\n> RAM is used as a database cache.\n>\n> But regardless, what kind of attack are you thinking of? Using up all\n> available disk seeks by sending a node a lot of fake transactions that\n> connect to unspent outputs, but have invalid transactions? You'll get\n> yourself disconnected and the IP banned even with todays code.\nI'm thinking that (assuming 2000 tx/s and UTXO growing 50 GB/year) a \nmalicious miner could create 1 GB of unspent outputs and then spam nodes \nwith valid transactions. This would not be dangerous, if UTXO were \nsmaller and fit on RAM.\n\nThank you for reading and correcting me :)"
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-03-11T17:18:41",
                "message_text_only": "On Mon, Mar 11, 2013 at 11:36 AM, Gavin Andresen\n<gavinandresen at gmail.com> wrote:\n>> Just activate a non-proportional demurrage\n>\n> demurrage of any kind will never, ever happen, just give up on that idea.\n>\n> The negative publicity of \"the bitcoin developers are destroying YOUR\n> coins!\" would be devastating.\n\nWhile 100% agreed, I do think there is space in the alt-currency world\nfor a well-done coin THAT IS NOT BITCOIN (i.e. merge-mined or\nwhatever) with a finite lifespan.  Call it \"tempcoin\"   For example:\nany coin older than (144 * 365 * 4) blocks may be reclaimed by a\nminer.\n\nEven though, sadly, many of the alt-coins have been pre-mined scams,\nthe alt-coin concept in general is great for experimenting.  If the\nidea can be proven in the field without modifying mainnet bitcoind,\nthen perhaps it should go onto the mainnet hard fork wishlist, many\nyears in the future.\n\nThat's the great thing about open source.  People can experiment with\nthese ideas, and bitcoin.git need not change at all :)\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Rune Kj\u00e6r Svendsen",
                "date": "2013-03-11T20:08:10",
                "message_text_only": "On Mon, Mar 11, 2013 at 12:01 PM, Jorge Tim\u00f3n <jtimonmv at gmail.com> wrote:\n\n> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:\n> > It's also been suggested multiple times to make transaction outputs with\n> > a value less than the transaction fee non-standard, either with a fixed\n> > constant or by some sort of measurement.\n>\n> As said on the bitcointalk thread, I think this is the wrong approach.\n> This way you effectively disable legitimate use cases for payments\n> that \"are worth\" less than the fees like smart property/colored coins.\n> While the transactions pay fees, they should not be considered spam\n> regardless of how little the quantities being moved are.\n>\n> Then your only concern are unspent outputs and comparing fees with\n> values doesn't help in any way.\n\n\n\n\n> Just activate a non-proportional\n> demurrage (well, I won't complain if you just turn bitcoin into\n> freicoin, just think that non-proportional would be more acceptable by\n> most bitcoiners) that incentives old transactions to be moved and\n> destroys unspent transactions with small amounts that don't move to\n> another address periodically. This has been proposed many times before\n> too, and I think it makes a lot more sense.\n>\n\n>From an economic point of view this *does* make sense, in my opinion.\nStoring an unspent transaction in the block chain costs money because we\ncan't prune it. However, it would completely destroy confidence in Bitcoin,\nas far as I can see. It makes sense economically, but it  isn't feasible if\nwe want to maintain people's confidence in Bitcoin.\n\nI like Jeff's proposal of letting an alt-coin implement this. If it gets to\nthe point where Bitcoin can't function without this functionality, it'll be\na lot easier to make the transition, instead of now, when it's not really\nneeded, and the trust in Bitcoin really isn't that great.\n\n/Rune\n\n\n\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/28af919c/attachment.html>"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-11T20:36:05",
                "message_text_only": "The point with UTXO is in the long run to be able to switch from a p2p network where everyone stores, validates and verifies everything to a DHT where the load of storing, validating and verifying can be shared. \n\nIf we succeed with that then I don't see a problem in a growing set of UTXO, may that be due to abuse/misuse or just massive use. A properly designed DHT should be able to scale to this.\n\nHowever, that being said, if you worry about the size of the UTXO set you should change the current coin choosing algorithm to simply get rid of dust. \n\nThe current algorithm (ApproximateBestSubset) tend to accumulate dust as dust tend to be on an other scale than a real transactions and hence it is never included.\n\nRegarding the demurrage/escheatment road, I agree that this is for another project. However, if users/developers like this idea, they can just implement a coin choosing algorithm donating dust as miner fee and use it on their satoshi-dice polluted wallet ;)\n\n/M\n  \nOn 11/03/2013, at 21:08, Rune Kj\u00e6r Svendsen <runesvend at gmail.com> wrote:\n\n> On Mon, Mar 11, 2013 at 12:01 PM, Jorge Tim\u00f3n <jtimonmv at gmail.com> wrote:\n> On 3/10/13, Peter Todd <pete at petertodd.org> wrote:\n> > It's also been suggested multiple times to make transaction outputs with\n> > a value less than the transaction fee non-standard, either with a fixed\n> > constant or by some sort of measurement.\n> \n> As said on the bitcointalk thread, I think this is the wrong approach.\n> This way you effectively disable legitimate use cases for payments\n> that \"are worth\" less than the fees like smart property/colored coins.\n> While the transactions pay fees, they should not be considered spam\n> regardless of how little the quantities being moved are.\n> \n> Then your only concern are unspent outputs and comparing fees with\n> values doesn't help in any way.\n> \n>  \n> Just activate a non-proportional\n> demurrage (well, I won't complain if you just turn bitcoin into\n> freicoin, just think that non-proportional would be more acceptable by\n> most bitcoiners) that incentives old transactions to be moved and\n> destroys unspent transactions with small amounts that don't move to\n> another address periodically. This has been proposed many times before\n> too, and I think it makes a lot more sense.\n> \n> From an economic point of view this *does* make sense, in my opinion. Storing an unspent transaction in the block chain costs money because we can't prune it. However, it would completely destroy confidence in Bitcoin, as far as I can see. It makes sense economically, but it  isn't feasible if we want to maintain people's confidence in Bitcoin.\n> \n> I like Jeff's proposal of letting an alt-coin implement this. If it gets to the point where Bitcoin can't function without this functionality, it'll be a lot easier to make the transition, instead of now, when it's not really needed, and the trust in Bitcoin really isn't that great.\n> \n> /Rune\n> \n>  \n> \n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  \n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the  \n> endpoint security space. For insight on selecting the right partner to \n> tackle endpoint security challenges, access the full report. \n> http://p.sf.net/sfu/symantec-dev2dev_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-11T21:01:20",
                "message_text_only": "On Mon, Mar 11, 2013 at 1:36 PM, Michael Gronager <gronager at ceptacle.com> wrote:\n> The point with UTXO is in the long run to be able to switch from a p2p network where everyone stores, validates and verifies everything to a DHT where the load of storing, validating and verifying can be shared.\n\nI believe you are confusing disjoint things."
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-11T21:15:23",
                "message_text_only": ">> The point with UTXO is in the long run to be able to switch from a p2p network where everyone stores, validates and verifies everything to a DHT where the load of storing, validating and verifying can be shared.\n> \n> I believe you are confusing disjoint things.\n\nNope, ahh well, I agree that the use of UTXOs in the Satoshi client today by no means a directed towards a DHT, though it does help speeding up validation (db lookup to check if an output is indeed unspent).\n\nHowever, an alternative way to bootstrap and validate transactions exist, needing only the UTXOs and not the rest of the blockchain history: An authenticated data structure storing the UTXOs in a DHT. \n\n/M\n\n\n> \n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  \n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the  \n> endpoint security space. For insight on selecting the right partner to \n> tackle endpoint security challenges, access the full report. \n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-12T07:49:45",
                "message_text_only": "On Sat, Mar 09, 2013 at 11:31:55PM -0500, Peter Todd wrote:\n> As discussed endlessly data in the UTXO set is more costly, especially\n> in the long run, than transaction data itself. The fee system is per KB\n> in a block, and thus doesn't properly capture the long-term costs of\n> UTXO creation.\n\nThere's been a lot of discussion about this issue, and many people have\nasked that Bitcoin not arbitrarily block interesting potential uses of\nprovably unspendable txouts for data applications, and similarly\nspendable txouts representing assets. I've changed my hardline position\nand now think we should support all that stuff. However, there is one\nremaining class of txout not yet talked about, unspendable but not\nprovably so txouts. For instance we could make the following a standard\ntransaction type:\n\nscriptPubKey: OP_HASH160 <20 byte digest> OP_EQUALVERIFY <data>\nscriptSig: <data>\n\nOf course, usually the 20 byte digest would be picked randomly, but it\nmight not be, and thus all validating nodes will always have a copy of\nthe data. With the 10KB limit on script sizes you can fit 9974 bytes of\ndata per transaction output with very little waste.\n\nA good application is timestamping, with the advantage over\ncoinbase/merkle tree systems in that you don't have to wait until your\ntimestamp confirms, or even store the timestamp at all. Another\napplication, quite possible with large block sizes and hence cheap or\nfree transactions, is secure data backups. In particular such a service,\nperhaps called Google Chain Storage, can offer the unique guarantee that\nyou can know you're data is secure by simply performing a successful\nBitcoin transaction.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/10b7fde5/attachment.sig>"
            },
            {
                "author": "Stephen Pair",
                "date": "2013-03-13T05:31:18",
                "message_text_only": "Instead of thinking in terms of blocking uneconomical transactions (how\nwould a node even determine what's economical?), what about thinking in\nterms of paying for a feed of economical (i.e. profitable) transactions?\nThere is a market for fee bearing, profitable transactions...if there is no\none willing to pay to receive a transaction, then no one will bother\npropagating it.  Such a system would make it possible to determine the\nprobability of confirmation in a given timeframe for a given fee.\n\n\nOn Tue, Mar 12, 2013 at 3:49 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Sat, Mar 09, 2013 at 11:31:55PM -0500, Peter Todd wrote:\n> > As discussed endlessly data in the UTXO set is more costly, especially\n> > in the long run, than transaction data itself. The fee system is per KB\n> > in a block, and thus doesn't properly capture the long-term costs of\n> > UTXO creation.\n>\n> There's been a lot of discussion about this issue, and many people have\n> asked that Bitcoin not arbitrarily block interesting potential uses of\n> provably unspendable txouts for data applications, and similarly\n> spendable txouts representing assets. I've changed my hardline position\n> and now think we should support all that stuff. However, there is one\n> remaining class of txout not yet talked about, unspendable but not\n> provably so txouts. For instance we could make the following a standard\n> transaction type:\n>\n> scriptPubKey: OP_HASH160 <20 byte digest> OP_EQUALVERIFY <data>\n> scriptSig: <data>\n>\n> Of course, usually the 20 byte digest would be picked randomly, but it\n> might not be, and thus all validating nodes will always have a copy of\n> the data. With the 10KB limit on script sizes you can fit 9974 bytes of\n> data per transaction output with very little waste.\n>\n> A good application is timestamping, with the advantage over\n> coinbase/merkle tree systems in that you don't have to wait until your\n> timestamp confirms, or even store the timestamp at all. Another\n> application, quite possible with large block sizes and hence cheap or\n> free transactions, is secure data backups. In particular such a service,\n> perhaps called Google Chain Storage, can offer the unique guarantee that\n> you can know you're data is secure by simply performing a successful\n> Bitcoin transaction.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nStephen Pair, Co-Founder, CTO\n\nDoes *your* website accept cash? bitpay.com\n\n[image: bitpay-small]\n\nABC6 C11B BF75 9E2B FC6A  B3E0 7B96 40B2 CAC0 C158\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/3ef0e305/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image001.png\nType: image/png\nSize: 6560 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/3ef0e305/attachment.png>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-13T09:20:17",
                "message_text_only": "I'm not sure I understand your proposal, but its sounds good.\nCan you elaborate with an example?\nAre you considering colored coins/smart property?\n\n\nOn 3/13/13, Stephen Pair <stephen at bitpay.com> wrote:\n> Instead of thinking in terms of blocking uneconomical transactions (how\n> would a node even determine what's economical?), what about thinking in\n> terms of paying for a feed of economical (i.e. profitable) transactions?\n> There is a market for fee bearing, profitable transactions...if there is no\n> one willing to pay to receive a transaction, then no one will bother\n> propagating it.  Such a system would make it possible to determine the\n> probability of confirmation in a given timeframe for a given fee.\n>\n>\n> On Tue, Mar 12, 2013 at 3:49 AM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> On Sat, Mar 09, 2013 at 11:31:55PM -0500, Peter Todd wrote:\n>> > As discussed endlessly data in the UTXO set is more costly, especially\n>> > in the long run, than transaction data itself. The fee system is per KB\n>> > in a block, and thus doesn't properly capture the long-term costs of\n>> > UTXO creation.\n>>\n>> There's been a lot of discussion about this issue, and many people have\n>> asked that Bitcoin not arbitrarily block interesting potential uses of\n>> provably unspendable txouts for data applications, and similarly\n>> spendable txouts representing assets. I've changed my hardline position\n>> and now think we should support all that stuff. However, there is one\n>> remaining class of txout not yet talked about, unspendable but not\n>> provably so txouts. For instance we could make the following a standard\n>> transaction type:\n>>\n>> scriptPubKey: OP_HASH160 <20 byte digest> OP_EQUALVERIFY <data>\n>> scriptSig: <data>\n>>\n>> Of course, usually the 20 byte digest would be picked randomly, but it\n>> might not be, and thus all validating nodes will always have a copy of\n>> the data. With the 10KB limit on script sizes you can fit 9974 bytes of\n>> data per transaction output with very little waste.\n>>\n>> A good application is timestamping, with the advantage over\n>> coinbase/merkle tree systems in that you don't have to wait until your\n>> timestamp confirms, or even store the timestamp at all. Another\n>> application, quite possible with large block sizes and hence cheap or\n>> free transactions, is secure data backups. In particular such a service,\n>> perhaps called Google Chain Storage, can offer the unique guarantee that\n>> you can know you're data is secure by simply performing a successful\n>> Bitcoin transaction.\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n>> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n>> endpoint security space. For insight on selecting the right partner to\n>> tackle endpoint security challenges, access the full report.\n>> http://p.sf.net/sfu/symantec-dev2dev\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> --\n> Stephen Pair, Co-Founder, CTO\n>\n> Does *your* website accept cash? bitpay.com\n>\n> [image: bitpay-small]\n>\n> ABC6 C11B BF75 9E2B FC6A  B3E0 7B96 40B2 CAC0 C158\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/\nhttp://archive.ripple-project.org/"
            }
        ],
        "thread_summary": {
            "title": "Blocking uneconomical UTXO creation",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Tadas Varanavi\u010dius",
                "Jeff Garzik",
                "Michael Gronager",
                "Mike Hearn",
                "Peter Todd",
                "Stephen Pair",
                "Jorge Tim\u00f3n",
                "Rune Kj\u00e6r Svendsen",
                "Gregory Maxwell",
                "Gavin Andresen",
                "Mark Friedenbach",
                "Benjamin Lindner"
            ],
            "messages_count": 23,
            "total_messages_chars_count": 43387
        }
    },
    {
        "title": "[Bitcoin-development] [PATCH] Change recommended fee to 0.001 BTC",
        "thread_messages": [
            {
                "author": "Rune K. Svendsen",
                "date": "2013-03-11T19:27:51",
                "message_text_only": "From: \"Rune K. Svendsen\" <runesvend at gmail.com>\n\nOn the Main tab in the Options dialog, it previously said a minimum\nfee of 0.01 is recommended. This amounts to about $0.50 at today's\nprice. Change this to 0.001 to be more sensible. We could even go\nlower, perhaps.\n---\n src/qt/forms/optionsdialog.ui  |    2 +-\n src/qt/locale/bitcoin_bg.ts    |    2 +-\n src/qt/locale/bitcoin_ca_ES.ts |    2 +-\n src/qt/locale/bitcoin_cs.ts    |    4 ++--\n src/qt/locale/bitcoin_da.ts    |    4 ++--\n src/qt/locale/bitcoin_de.ts    |    4 ++--\n src/qt/locale/bitcoin_el_GR.ts |    4 ++--\n src/qt/locale/bitcoin_en.ts    |    4 ++--\n src/qt/locale/bitcoin_es.ts    |    2 +-\n src/qt/locale/bitcoin_es_CL.ts |    4 ++--\n src/qt/locale/bitcoin_et.ts    |    2 +-\n src/qt/locale/bitcoin_eu_ES.ts |    2 +-\n src/qt/locale/bitcoin_fa.ts    |    4 ++--\n src/qt/locale/bitcoin_fa_IR.ts |    2 +-\n src/qt/locale/bitcoin_fi.ts    |    4 ++--\n src/qt/locale/bitcoin_fr.ts    |    4 ++--\n src/qt/locale/bitcoin_fr_CA.ts |    2 +-\n src/qt/locale/bitcoin_gu_IN.ts |    2 +-\n src/qt/locale/bitcoin_he.ts    |    4 ++--\n src/qt/locale/bitcoin_hi_IN.ts |    2 +-\n src/qt/locale/bitcoin_hr.ts    |    4 ++--\n src/qt/locale/bitcoin_hu.ts    |    2 +-\n src/qt/locale/bitcoin_it.ts    |    2 +-\n src/qt/locale/bitcoin_ja.ts    |    2 +-\n src/qt/locale/bitcoin_lt.ts    |    2 +-\n src/qt/locale/bitcoin_nb.ts    |    4 ++--\n src/qt/locale/bitcoin_nl.ts    |    2 +-\n src/qt/locale/bitcoin_pl.ts    |    4 ++--\n src/qt/locale/bitcoin_pt_BR.ts |    4 ++--\n src/qt/locale/bitcoin_pt_PT.ts |    4 ++--\n src/qt/locale/bitcoin_ro_RO.ts |    2 +-\n src/qt/locale/bitcoin_ru.ts    |    4 ++--\n src/qt/locale/bitcoin_sk.ts    |    4 ++--\n src/qt/locale/bitcoin_sr.ts    |    2 +-\n src/qt/locale/bitcoin_sv.ts    |    4 ++--\n src/qt/locale/bitcoin_th_TH.ts |    2 +-\n src/qt/locale/bitcoin_tr.ts    |    4 ++--\n src/qt/locale/bitcoin_uk.ts    |    2 +-\n src/qt/locale/bitcoin_zh_CN.ts |    4 ++--\n src/qt/locale/bitcoin_zh_TW.ts |    4 ++--\n 40 files changed, 61 insertions(+), 61 deletions(-)\n\ndiff --git a/src/qt/forms/optionsdialog.ui b/src/qt/forms/optionsdialog.ui\nindex 3771f9d..1d2f553 100644\n--- a/src/qt/forms/optionsdialog.ui\n+++ b/src/qt/forms/optionsdialog.ui\n@@ -33,7 +33,7 @@\n        <item>\n         <widget class=\"QLabel\" name=\"transactionFeeInfoLabel\">\n          <property name=\"text\">\n-          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</string>\n+          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</string>\n          </property>\n          <property name=\"textFormat\">\n           <enum>Qt::PlainText</enum>\ndiff --git a/src/qt/locale/bitcoin_bg.ts b/src/qt/locale/bitcoin_bg.ts\nindex 39b41ab..163637e 100644\n--- a/src/qt/locale/bitcoin_bg.ts\n+++ b/src/qt/locale/bitcoin_bg.ts\n@@ -820,7 +820,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>\u0422\u0430\u043a\u0441\u0430 \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u043d\u0430 kB. \u041f\u043e\u0434\u043f\u043e\u043c\u0430\u0433\u0430 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u0446\u0438\u0442\u0435 \u0432 \u043c\u0440\u0435\u0436\u0430\u0442\u0430, \u043a\u043e\u0438\u0442\u043e \u0432\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u0430\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 (miners). \u041f\u043e-\u0432\u0438\u0441\u043e\u043a\u0430 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442 \u0431\u0438 \u0442\u0440\u044f\u0431\u0432\u0430\u043b\u043e \u0434\u0430 \u0443\u0441\u043a\u043e\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u0442\u0430 \u043d\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. \u041f\u043e\u0432\u0435\u0447\u0435\u0442\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0441\u0430 \u043e\u043a\u043e\u043b\u043e 1 kB. \u041f\u0440\u0435\u043f\u043e\u0440\u044a\u0447\u0438\u0442\u0435\u043b\u043d\u0430 \u0441\u0442\u043e\u0439\u043d\u043e\u0441\u0442 - 0.0005 BTC.</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_ca_ES.ts b/src/qt/locale/bitcoin_ca_ES.ts\nindex e005ef2..25d3090 100644\n--- a/src/qt/locale/bitcoin_ca_ES.ts\n+++ b/src/qt/locale/bitcoin_ca_ES.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_cs.ts b/src/qt/locale/bitcoin_cs.ts\nindex c4c6c72..18f907e 100644\n--- a/src/qt/locale/bitcoin_cs.ts\n+++ b/src/qt/locale/bitcoin_cs.ts\n@@ -824,8 +824,8 @@ Adresa: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Dobrovoln\u00fd transak\u010dn\u00ed poplatek za ka\u017ed\u00fd zapo\u010dat\u00fd kB dopom\u00e1h\u00e1 k rychl\u00e9mu zpracov\u00e1n\u00ed tv\u00fdch transakc\u00ed. V\u011bt\u0161ina transakc\u00ed m\u00e1 do 1 kB. Doporu\u010den\u00e1 v\u00fd\u0161e poplatku je 0.01.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Dobrovoln\u00fd transak\u010dn\u00ed poplatek za ka\u017ed\u00fd zapo\u010dat\u00fd kB dopom\u00e1h\u00e1 k rychl\u00e9mu zpracov\u00e1n\u00ed tv\u00fdch transakc\u00ed. V\u011bt\u0161ina transakc\u00ed m\u00e1 do 1 kB. Doporu\u010den\u00e1 v\u00fd\u0161e poplatku je 0.001.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_da.ts b/src/qt/locale/bitcoin_da.ts\nindex 01f9c8a..7038873 100644\n--- a/src/qt/locale/bitcoin_da.ts\n+++ b/src/qt/locale/bitcoin_da.ts\n@@ -825,8 +825,8 @@ Adresse: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Valgfri transaktionsgebyr pr. kB, der hj\u00e6lper dine transaktioner med at blive behandlet hurtigt. De fleste transaktioner er p\u00e5 1 kB. Gebyr p\u00e5 0.01 anbefales.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Valgfri transaktionsgebyr pr. kB, der hj\u00e6lper dine transaktioner med at blive behandlet hurtigt. De fleste transaktioner er p\u00e5 1 kB. Gebyr p\u00e5 0.001 anbefales.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_de.ts b/src/qt/locale/bitcoin_de.ts\nindex 27168c8..368bf33 100644\n--- a/src/qt/locale/bitcoin_de.ts\n+++ b/src/qt/locale/bitcoin_de.ts\n@@ -823,8 +823,8 @@ Adresse: %4</translation>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Optionale Transaktionsgeb\u00fchr pro kB, die sicherstellt, dass Ihre Transaktionen schnell bearbeitet werden. Die meisten Transaktionen sind 1 kB gro\u00df. Eine Geb\u00fchr von 0.01 BTC wird empfohlen.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Optionale Transaktionsgeb\u00fchr pro kB, die sicherstellt, dass Ihre Transaktionen schnell bearbeitet werden. Die meisten Transaktionen sind 1 kB gro\u00df. Eine Geb\u00fchr von 0.001 BTC wird empfohlen.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_el_GR.ts b/src/qt/locale/bitcoin_el_GR.ts\nindex ba5f0ac..470a837 100644\n--- a/src/qt/locale/bitcoin_el_GR.ts\n+++ b/src/qt/locale/bitcoin_el_GR.ts\n@@ -819,8 +819,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>\u0397 \u03c0\u03c1\u03bf\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03b1\u03bc\u03bf\u03b9\u03b2\u03ae \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 kB \u03b5\u03c0\u03b9\u03c3\u03c0\u03b5\u03cd\u03b4\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ce\u03bd \u03c3\u03b1\u03c2. \u039f\u03b9 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 1 kB. \u03a0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b1\u03bc\u03bf\u03b9\u03b2\u03ae 0.01.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>\u0397 \u03c0\u03c1\u03bf\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03b1\u03bc\u03bf\u03b9\u03b2\u03ae \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 kB \u03b5\u03c0\u03b9\u03c3\u03c0\u03b5\u03cd\u03b4\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ce\u03bd \u03c3\u03b1\u03c2. \u039f\u03b9 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 1 kB. \u03a0\u03c1\u03bf\u03c4\u03b5\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b1\u03bc\u03bf\u03b9\u03b2\u03ae 0.001.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_en.ts b/src/qt/locale/bitcoin_en.ts\nindex 39062d0..1f255b0 100644\n--- a/src/qt/locale/bitcoin_en.ts\n+++ b/src/qt/locale/bitcoin_en.ts\n@@ -849,8 +849,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_es.ts b/src/qt/locale/bitcoin_es.ts\nindex a330cbf..6ab6e33 100644\n--- a/src/qt/locale/bitcoin_es.ts\n+++ b/src/qt/locale/bitcoin_es.ts\n@@ -827,7 +827,7 @@ Direcci\u00f3n: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>Tarifa de transacci\u00f3n por KB opcional que ayuda a asegurarse de que sus transacciones se procesan r\u00e1pidamente. La mayor\u00eda de las transacciones son de 1 KB. Tarifa de 0,01 recomendada.</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_es_CL.ts b/src/qt/locale/bitcoin_es_CL.ts\nindex c7ce99e..39fc6b3 100644\n--- a/src/qt/locale/bitcoin_es_CL.ts\n+++ b/src/qt/locale/bitcoin_es_CL.ts\n@@ -827,8 +827,8 @@ Direcci\u00f3n: %4</translation>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Comisi\u00f3n opcional por kB que ayuda a asegurar que sus transacciones son procesadas r\u00e1pidamente. La mayoria de transacciones son de 1 KB. Se recomienda comisi\u00f3n de 0.01 </translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Comisi\u00f3n opcional por kB que ayuda a asegurar que sus transacciones son procesadas r\u00e1pidamente. La mayoria de transacciones son de 1 KB. Se recomienda comisi\u00f3n de 0.001 </translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_et.ts b/src/qt/locale/bitcoin_et.ts\nindex b75e617..9d0a179 100644\n--- a/src/qt/locale/bitcoin_et.ts\n+++ b/src/qt/locale/bitcoin_et.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_eu_ES.ts b/src/qt/locale/bitcoin_eu_ES.ts\nindex fb13cff..f746c34 100644\n--- a/src/qt/locale/bitcoin_eu_ES.ts\n+++ b/src/qt/locale/bitcoin_eu_ES.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_fa.ts b/src/qt/locale/bitcoin_fa.ts\nindex 441710a..4371d01 100644\n--- a/src/qt/locale/bitcoin_fa.ts\n+++ b/src/qt/locale/bitcoin_fa.ts\n@@ -820,8 +820,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>\u0646\u0631\u062e \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u0647\u0631 \u06a9\u06cc\u0644\u0648\u0628\u0627\u06cc\u062a \u06a9\u0647 \u0628\u0647 \u0634\u0645\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u062f \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u067e\u06cc\u062f\u0627 \u06a9\u0646\u06cc\u062f \u06a9\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u0628\u0647 \u0633\u0631\u0639\u062a \u067e\u0631\u062f\u0627\u0632\u0634 \u0645\u06cc\u200c\u0634\u0648\u0646\u062f. \u0628\u06cc\u0634\u062a\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u06f1 \u06a9\u06cc\u0644\u0648\u0628\u0627\u06cc\u062a \u0647\u0633\u062a\u0646\u062f. \u0646\u0631\u062e 0.01 \u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0645\u06cc\u200c\u0634\u0648\u062f.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>\u0646\u0631\u062e \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u062a\u0631\u0627\u06a9\u0646\u0634 \u0647\u0631 \u06a9\u06cc\u0644\u0648\u0628\u0627\u06cc\u062a \u06a9\u0647 \u0628\u0647 \u0634\u0645\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u062f \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u067e\u06cc\u062f\u0627 \u06a9\u0646\u06cc\u062f \u06a9\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u0628\u0647 \u0633\u0631\u0639\u062a \u067e\u0631\u062f\u0627\u0632\u0634 \u0645\u06cc\u200c\u0634\u0648\u0646\u062f. \u0628\u06cc\u0634\u062a\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u06f1 \u06a9\u06cc\u0644\u0648\u0628\u0627\u06cc\u062a \u0647\u0633\u062a\u0646\u062f. \u0646\u0631\u062e 0.001 \u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0645\u06cc\u200c\u0634\u0648\u062f.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_fa_IR.ts b/src/qt/locale/bitcoin_fa_IR.ts\nindex 74e1445..c1dd38c 100644\n--- a/src/qt/locale/bitcoin_fa_IR.ts\n+++ b/src/qt/locale/bitcoin_fa_IR.ts\n@@ -824,7 +824,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_fi.ts b/src/qt/locale/bitcoin_fi.ts\nindex 0838c6d..83de70c 100644\n--- a/src/qt/locale/bitcoin_fi.ts\n+++ b/src/qt/locale/bitcoin_fi.ts\n@@ -824,8 +824,8 @@ Osoite: %4</translation>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Vapaaehtoinen rahansiirtopalkkio per kB auttaa nopeuttamaan siirtoja. Useimmat rahansiirrot ovat 1 kB. 0.01 palkkio on suositeltava.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Vapaaehtoinen rahansiirtopalkkio per kB auttaa nopeuttamaan siirtoja. Useimmat rahansiirrot ovat 1 kB. 0.001 palkkio on suositeltava.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_fr.ts b/src/qt/locale/bitcoin_fr.ts\nindex 0c02062..06961b5 100644\n--- a/src/qt/locale/bitcoin_fr.ts\n+++ b/src/qt/locale/bitcoin_fr.ts\n@@ -824,8 +824,8 @@ Adresse\u00a0: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Frais de transaction optionnels par ko qui aident \u00e0 garantir un traitement rapide des transactions. La plupart des transactions occupent 1 ko. Des frais de 0.01 sont recommand\u00e9s.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Frais de transaction optionnels par ko qui aident \u00e0 garantir un traitement rapide des transactions. La plupart des transactions occupent 1 ko. Des frais de 0.001 sont recommand\u00e9s.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_fr_CA.ts b/src/qt/locale/bitcoin_fr_CA.ts\nindex 6fde4d3..80adead 100644\n--- a/src/qt/locale/bitcoin_fr_CA.ts\n+++ b/src/qt/locale/bitcoin_fr_CA.ts\n@@ -820,7 +820,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_gu_IN.ts b/src/qt/locale/bitcoin_gu_IN.ts\nindex 1205c86..7645131 100644\n--- a/src/qt/locale/bitcoin_gu_IN.ts\n+++ b/src/qt/locale/bitcoin_gu_IN.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_he.ts b/src/qt/locale/bitcoin_he.ts\nindex 52d7dc7..eef515b 100644\n--- a/src/qt/locale/bitcoin_he.ts\n+++ b/src/qt/locale/bitcoin_he.ts\n@@ -823,8 +823,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>\u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4 \u05d0\u05d5\u05e4\u05e6\u05d9\u05d5\u05e0\u05dc\u05d9\u05ea \u05dc\u05db\u05dc kB \u05ea\u05d1\u05d8\u05d9\u05d7 \u05e9\u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e9\u05dc\u05da \u05ea\u05e2\u05d5\u05d1\u05d3 \u05d1\u05d6\u05e8\u05d9\u05d6\u05d5\u05ea. \u05e8\u05d5\u05d1 \u05d4\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05d4\u05df 1 kB. \u05de\u05d5\u05de\u05dc\u05e6\u05ea \u05e2\u05de\u05dc\u05d4 \u05d1\u05e1\u05da 0.01.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>\u05e2\u05de\u05dc\u05ea \u05e4\u05e2\u05d5\u05dc\u05d4 \u05d0\u05d5\u05e4\u05e6\u05d9\u05d5\u05e0\u05dc\u05d9\u05ea \u05dc\u05db\u05dc kB \u05ea\u05d1\u05d8\u05d9\u05d7 \u05e9\u05d4\u05e4\u05e2\u05d5\u05dc\u05d4 \u05e9\u05dc\u05da \u05ea\u05e2\u05d5\u05d1\u05d3 \u05d1\u05d6\u05e8\u05d9\u05d6\u05d5\u05ea. \u05e8\u05d5\u05d1 \u05d4\u05e4\u05e2\u05d5\u05dc\u05d5\u05ea \u05d4\u05df 1 kB. \u05de\u05d5\u05de\u05dc\u05e6\u05ea \u05e2\u05de\u05dc\u05d4 \u05d1\u05e1\u05da 0.001.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_hi_IN.ts b/src/qt/locale/bitcoin_hi_IN.ts\nindex 304be77..ff601ea 100644\n--- a/src/qt/locale/bitcoin_hi_IN.ts\n+++ b/src/qt/locale/bitcoin_hi_IN.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_hr.ts b/src/qt/locale/bitcoin_hr.ts\nindex f4b47ce..587f3bc 100644\n--- a/src/qt/locale/bitcoin_hr.ts\n+++ b/src/qt/locale/bitcoin_hr.ts\n@@ -819,8 +819,8 @@ Adresa:%4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Neobavezna naknada za transakciju po kB koja omogu\u0107uje da se va\u0161a transakcija obavi br\u017ee. Ve\u0107ina transakcija ima 1 kB.  Preporu\u010dena naknada je 0.01.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Neobavezna naknada za transakciju po kB koja omogu\u0107uje da se va\u0161a transakcija obavi br\u017ee. Ve\u0107ina transakcija ima 1 kB.  Preporu\u010dena naknada je 0.001.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_hu.ts b/src/qt/locale/bitcoin_hu.ts\nindex e91b5aa..1e166a6 100644\n--- a/src/qt/locale/bitcoin_hu.ts\n+++ b/src/qt/locale/bitcoin_hu.ts\n@@ -824,7 +824,7 @@ C\u00edm: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>Opcion\u00e1lis, kB-onk\u00e9nti tranzakci\u00f3s d\u00edj a tranzakci\u00f3id min\u00e9l gyorsabb feldolgoz\u00e1s\u00e1nak el\u0151seg\u00edt\u00e9s\u00e9re.  A legt\u00f6bb tranzakci\u00f3 1 kB-os.  0,01 BTC aj\u00e1nlott.</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_it.ts b/src/qt/locale/bitcoin_it.ts\nindex 868eb58..c98175f 100644\n--- a/src/qt/locale/bitcoin_it.ts\n+++ b/src/qt/locale/bitcoin_it.ts\n@@ -826,7 +826,7 @@ Indirizzo: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>Commissione di transazione per kB; \u00e8 opzionale e contribuisce ad assicurare che le transazioni siano elaborate velocemente. Le transazioni sono per la maggior parte da 1 kB. Commissione raccomandata 0,01.</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_ja.ts b/src/qt/locale/bitcoin_ja.ts\nindex f586b2c..3477468 100644\n--- a/src/qt/locale/bitcoin_ja.ts\n+++ b/src/qt/locale/bitcoin_ja.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_lt.ts b/src/qt/locale/bitcoin_lt.ts\nindex 7b0a4b4..d224a8e 100644\n--- a/src/qt/locale/bitcoin_lt.ts\n+++ b/src/qt/locale/bitcoin_lt.ts\n@@ -822,7 +822,7 @@ Adresas: %4</translation>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>Neprivalomas sandorio mokestis u\u017e KB, kuris padeda grei\u010diau sutvarkyti sandorius. Daugelis sandori\u0173 yra tik 1KB dyd\u017eio. Rekomenduojamas 0,01 mokestis.</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_nb.ts b/src/qt/locale/bitcoin_nb.ts\nindex 08cae8c..76d44f3 100644\n--- a/src/qt/locale/bitcoin_nb.ts\n+++ b/src/qt/locale/bitcoin_nb.ts\n@@ -825,8 +825,8 @@ Adresse: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Valgfritt transaksjonsgebyr per kB som sikrer at dine transaksjoner blir raskt prosessert. De fleste transaksjoner er 1 kB. Et gebyr p\u00e5 0.01 er anbefalt.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Valgfritt transaksjonsgebyr per kB som sikrer at dine transaksjoner blir raskt prosessert. De fleste transaksjoner er 1 kB. Et gebyr p\u00e5 0.001 er anbefalt.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_nl.ts b/src/qt/locale/bitcoin_nl.ts\nindex 26883a8..c740caf 100644\n--- a/src/qt/locale/bitcoin_nl.ts\n+++ b/src/qt/locale/bitcoin_nl.ts\n@@ -826,7 +826,7 @@ Adres: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>Optionele transactiekosten per kB die helpen om uw transacties snel te verwerken. De meeste transacties zijn 1 kB. Transactiekosten van 0,01 wordt aangeraden</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_pl.ts b/src/qt/locale/bitcoin_pl.ts\nindex 02c7c59..921863e 100644\n--- a/src/qt/locale/bitcoin_pl.ts\n+++ b/src/qt/locale/bitcoin_pl.ts\n@@ -824,8 +824,8 @@ Adres: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Opcjonalna prowizja za transakcje za kB, wspomaga ona szybko\u015b\u0107 przebiegu transakcji. Wi\u0119kszo\u015b\u0107 transakcji jest 1 kB. Zalecana prowizja 0.01 .</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Opcjonalna prowizja za transakcje za kB, wspomaga ona szybko\u015b\u0107 przebiegu transakcji. Wi\u0119kszo\u015b\u0107 transakcji jest 1 kB. Zalecana prowizja 0.001 .</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_pt_BR.ts b/src/qt/locale/bitcoin_pt_BR.ts\nindex d13ce2c..40f5d5c 100644\n--- a/src/qt/locale/bitcoin_pt_BR.ts\n+++ b/src/qt/locale/bitcoin_pt_BR.ts\n@@ -818,8 +818,8 @@ Endere\u00e7o: %4</translation>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Taxa opcional de transa\u00e7\u00f5es por kB que ajuda a garantir que suas transa\u00e7\u00f5es ser\u00e3o processadas rapidamente. A maior parte das transa\u00e7\u00f5es \u00e9 de 1 kB. Taxa de 0.01 recomendada.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Taxa opcional de transa\u00e7\u00f5es por kB que ajuda a garantir que suas transa\u00e7\u00f5es ser\u00e3o processadas rapidamente. A maior parte das transa\u00e7\u00f5es \u00e9 de 1 kB. Taxa de 0.001 recomendada.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_pt_PT.ts b/src/qt/locale/bitcoin_pt_PT.ts\nindex 72f5b4a..dca9f08 100644\n--- a/src/qt/locale/bitcoin_pt_PT.ts\n+++ b/src/qt/locale/bitcoin_pt_PT.ts\n@@ -824,8 +824,8 @@ Endere\u00e7o: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Taxa de transa\u00e7\u00e3o opcional por KB que ajuda a assegurar que as suas transa\u00e7\u00f5es ser\u00e3o processadas rapidamente. A maioria das transa\u00e7\u00f5es tem 1 kB. Taxa de 0.01 recomendada.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Taxa de transa\u00e7\u00e3o opcional por KB que ajuda a assegurar que as suas transa\u00e7\u00f5es ser\u00e3o processadas rapidamente. A maioria das transa\u00e7\u00f5es tem 1 kB. Taxa de 0.001 recomendada.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_ro_RO.ts b/src/qt/locale/bitcoin_ro_RO.ts\nindex 3a9239e..b293d02 100644\n--- a/src/qt/locale/bitcoin_ro_RO.ts\n+++ b/src/qt/locale/bitcoin_ro_RO.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_ru.ts b/src/qt/locale/bitcoin_ru.ts\nindex bd60aba..39bb84d 100644\n--- a/src/qt/locale/bitcoin_ru.ts\n+++ b/src/qt/locale/bitcoin_ru.ts\n@@ -824,8 +824,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u041a\u0411 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c, \u0447\u0442\u043e \u0412\u0430\u0448\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u0431\u044b\u0441\u0442\u0440\u043e.  \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0437\u0430\u043d\u0438\u043c\u0430\u044e\u0442 1\u041a\u0411.  \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f 0.01.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u041a\u0411 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u043c, \u0447\u0442\u043e \u0412\u0430\u0448\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u0431\u044b\u0441\u0442\u0440\u043e.  \u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0437\u0430\u043d\u0438\u043c\u0430\u044e\u0442 1\u041a\u0411.  \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f 0.001.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_sk.ts b/src/qt/locale/bitcoin_sk.ts\nindex 1343b53..e5c4262 100644\n--- a/src/qt/locale/bitcoin_sk.ts\n+++ b/src/qt/locale/bitcoin_sk.ts\n@@ -818,8 +818,8 @@ Adresa: %4</translation>\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Volite\u013en\u00fd transak\u010dn\u00fd poplatok za kB ktor\u00fd pom\u00f4\u017ee r\u00fdchlemu spracovaniu transakcie. V\u00e4\u010d\u0161ina transakci\u00ed m\u00e1 1 kB. Poplatok 0.01 je odpor\u00fa\u010dan\u00fd.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Volite\u013en\u00fd transak\u010dn\u00fd poplatok za kB ktor\u00fd pom\u00f4\u017ee r\u00fdchlemu spracovaniu transakcie. V\u00e4\u010d\u0161ina transakci\u00ed m\u00e1 1 kB. Poplatok 0.001 je odpor\u00fa\u010dan\u00fd.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_sr.ts b/src/qt/locale/bitcoin_sr.ts\nindex f12e815..8df8633 100644\n--- a/src/qt/locale/bitcoin_sr.ts\n+++ b/src/qt/locale/bitcoin_sr.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_sv.ts b/src/qt/locale/bitcoin_sv.ts\nindex 88ad923..8796998 100644\n--- a/src/qt/locale/bitcoin_sv.ts\n+++ b/src/qt/locale/bitcoin_sv.ts\n@@ -825,8 +825,8 @@ Adress: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Valfri transaktionsavgift per kB som ser till att dina transaktioner behandlas snabbt. De flesta transaktioner \u00e4r 1 kB. Avgift 0.01 rekommenderas.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Valfri transaktionsavgift per kB som ser till att dina transaktioner behandlas snabbt. De flesta transaktioner \u00e4r 1 kB. Avgift 0.001 rekommenderas.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_th_TH.ts b/src/qt/locale/bitcoin_th_TH.ts\nindex a12eb56..f087a56 100644\n--- a/src/qt/locale/bitcoin_th_TH.ts\n+++ b/src/qt/locale/bitcoin_th_TH.ts\n@@ -815,7 +815,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_tr.ts b/src/qt/locale/bitcoin_tr.ts\nindex 08e94bf..bc344e9 100644\n--- a/src/qt/locale/bitcoin_tr.ts\n+++ b/src/qt/locale/bitcoin_tr.ts\n@@ -824,8 +824,8 @@ Adres: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Muamelelerin h\u0131zl\u0131 i\u015flenmesini garantilemeye yard\u0131m eden, se\u00e7ime dayal\u0131 kB ba\u015f\u0131 muamele \u00fccreti. Muamelelerin \u00e7o\u011funlu\u011funun boyutu 1 kB&apos;dir. 0.01 \u00fccreti tavsiye edilir.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>Muamelelerin h\u0131zl\u0131 i\u015flenmesini garantilemeye yard\u0131m eden, se\u00e7ime dayal\u0131 kB ba\u015f\u0131 muamele \u00fccreti. Muamelelerin \u00e7o\u011funlu\u011funun boyutu 1 kB&apos;dir. 0.001 \u00fccreti tavsiye edilir.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_uk.ts b/src/qt/locale/bitcoin_uk.ts\nindex 02b5d2e..5298094 100644\n--- a/src/qt/locale/bitcoin_uk.ts\n+++ b/src/qt/locale/bitcoin_uk.ts\n@@ -825,7 +825,7 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n         <translation>\u0414\u043e\u0431\u0440\u043e\u0432\u0456\u043b\u044c\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f \u0437\u0430 \u043a\u043e\u0436\u0435\u043d \u041a\u0431 \u043f\u0435\u0440\u0435\u043a\u0430\u0437\u0443, \u044f\u043a\u0430 \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454 \u0431\u0443\u0442\u0438 \u0432\u043f\u0435\u0432\u043d\u0435\u043d\u0438\u043c \u0443 \u0442\u043e\u043c\u0443, \u0449\u043e \u0432\u0430\u0448 \u043f\u0435\u0440\u0435\u043a\u0430\u0437 \u0431\u0443\u0434\u0435 \u043e\u0431\u0440\u043e\u0431\u043b\u0435\u043d\u043e \u0448\u0432\u0438\u0434\u043a\u043e. \u0420\u043e\u0437\u043c\u0456\u0440 \u0431\u0456\u043b\u044c\u0448\u043e\u0441\u0442\u0456 \u043f\u0435\u0440\u0435\u043a\u0430\u0437\u0456\u0432 \u0440\u0456\u0432\u0435\u043d 1 \u041a\u0431. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d\u0430 \u043a\u043e\u043c\u0456\u0441\u0456\u044f: 0,01.</translation>\n     </message>\n     <message>\ndiff --git a/src/qt/locale/bitcoin_zh_CN.ts b/src/qt/locale/bitcoin_zh_CN.ts\nindex 640f353..c61d89e 100644\n--- a/src/qt/locale/bitcoin_zh_CN.ts\n+++ b/src/qt/locale/bitcoin_zh_CN.ts\n@@ -825,8 +825,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>\u5efa\u8bae\u652f\u4ed8\u4ea4\u6613\u8d39\u7528\uff0c\u6709\u52a9\u4e8e\u60a8\u7684\u4ea4\u6613\u5f97\u5230\u5c3d\u5feb\u5904\u7406.  \u7edd\u5927\u591a\u6570\u4ea4\u6613\u7684\u5b57\u8282\u6570\u4e3a 1 kB. \u5efa\u8bae\u652f\u4ed80.01\u4e2a\u6bd4\u7279\u5e01.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>\u5efa\u8bae\u652f\u4ed8\u4ea4\u6613\u8d39\u7528\uff0c\u6709\u52a9\u4e8e\u60a8\u7684\u4ea4\u6613\u5f97\u5230\u5c3d\u5feb\u5904\u7406.  \u7edd\u5927\u591a\u6570\u4ea4\u6613\u7684\u5b57\u8282\u6570\u4e3a 1 kB. \u5efa\u8bae\u652f\u4ed80.001\u4e2a\u6bd4\u7279\u5e01.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\ndiff --git a/src/qt/locale/bitcoin_zh_TW.ts b/src/qt/locale/bitcoin_zh_TW.ts\nindex 2aa6d7c..b52f462 100644\n--- a/src/qt/locale/bitcoin_zh_TW.ts\n+++ b/src/qt/locale/bitcoin_zh_TW.ts\n@@ -824,8 +824,8 @@ Address: %4\n     </message>\n     <message>\n         <location line=\"+6\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>\u975e\u5fc5\u8981\u7684\u4ea4\u6613\u624b\u7e8c\u8cbb, \u4ee5 kB \u70ba\u8a08\u8cbb\u55ae\u4f4d, \u4e14\u6709\u52a9\u65bc\u7e2e\u77ed\u4f60\u7684\u4ea4\u6613\u8655\u7406\u6642\u9593. \u5927\u90e8\u4efd\u4ea4\u6613\u7684\u8cc7\u6599\u5927\u5c0f\u662f 1 kB. \u5efa\u8b70\u8a2d\u5b9a\u70ba 0.01 \u5143.</translation>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.001 recommended.</source>\n+        <translation>\u975e\u5fc5\u8981\u7684\u4ea4\u6613\u624b\u7e8c\u8cbb, \u4ee5 kB \u70ba\u8a08\u8cbb\u55ae\u4f4d, \u4e14\u6709\u52a9\u65bc\u7e2e\u77ed\u4f60\u7684\u4ea4\u6613\u8655\u7406\u6642\u9593. \u5927\u90e8\u4efd\u4ea4\u6613\u7684\u8cc7\u6599\u5927\u5c0f\u662f 1 kB. \u5efa\u8b70\u8a2d\u5b9a\u70ba 0.001 \u5143.</translation>\n     </message>\n     <message>\n         <location line=\"+15\"/>\n-- \n1.7.10.4"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-11T19:35:54",
                "message_text_only": "On Monday, March 11, 2013 7:27:51 PM Rune K. Svendsen wrote:\n> From: \"Rune K. Svendsen\" <runesvend at gmail.com>\n> \n> On the Main tab in the Options dialog, it previously said a minimum\n> fee of 0.01 is recommended. This amounts to about $0.50 at today's\n> price. Change this to 0.001 to be more sensible. We could even go\n> lower, perhaps.\n\nPlease use GitHub pull requests (or at least publish a git repository) rather \nthan mailing patches..\n\nI'd suggest two commits for this:\n1. Move the recommended fee outside the translatable string (bonus points to \nformat it using the user's preferred unit)\n2. Change the recommended fee in one place\n\nWhether the recommended fee *should* be changed or not, I have no opinion on.\nEligius uses a lower minimum fee, but I believe most pools/miners will treat \nanything under 0.01 BTC as if it were no fee at all...\n\nLuke"
            },
            {
                "author": "Rune Kj\u00e6r Svendsen",
                "date": "2013-03-11T20:34:52",
                "message_text_only": "Ok. I'll fork on Github. Looking at the source, and some Qt documentation,\nit should be doable to do string substitution for both the value and the\nunit.\n\nThe question is if we should define a new value, that we use solely to\ndisplay in this text, or if we should use MIN_TX_FEE or MIN_RELAY_TX_FEE in\nsome way. What are the dev's thoughts?\n\nI'd like to get some more dev opinions on whether this should even be done\nbefore I go ahead and write the code.\n\n/Rune\n\nOn Mon, Mar 11, 2013 at 8:35 PM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Monday, March 11, 2013 7:27:51 PM Rune K. Svendsen wrote:\n> > From: \"Rune K. Svendsen\" <runesvend at gmail.com>\n> >\n> > On the Main tab in the Options dialog, it previously said a minimum\n> > fee of 0.01 is recommended. This amounts to about $0.50 at today's\n> > price. Change this to 0.001 to be more sensible. We could even go\n> > lower, perhaps.\n>\n> Please use GitHub pull requests (or at least publish a git repository)\n> rather\n> than mailing patches..\n>\n> I'd suggest two commits for this:\n> 1. Move the recommended fee outside the translatable string (bonus points\n> to\n> format it using the user's preferred unit)\n> 2. Change the recommended fee in one place\n>\n> Whether the recommended fee *should* be changed or not, I have no opinion\n> on.\n> Eligius uses a lower minimum fee, but I believe most pools/miners will\n> treat\n> anything under 0.01 BTC as if it were no fee at all...\n>\n> Luke\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/64a72b8a/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-11T20:45:02",
                "message_text_only": "On Mon, Mar 11, 2013 at 1:34 PM, Rune Kj\u00e6r Svendsen <runesvend at gmail.com> wrote:\n> The question is if we should define a new value, that we use solely to\n> display in this text, or if we should use MIN_TX_FEE or MIN_RELAY_TX_FEE in\n> some way. What are the dev's thoughts?\n\nIt should be a new value."
            },
            {
                "author": "Rune Kj\u00e6r Svendsen",
                "date": "2013-03-11T21:17:25",
                "message_text_only": "On Mon, Mar 11, 2013 at 9:46 PM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Monday, March 11, 2013 8:34:52 PM Rune Kj\u00e6r Svendsen wrote:\n> > Ok. I'll fork on Github. Looking at the source, and some Qt\n> documentation,\n> > it should be doable to do string substitution for both the value and the\n> > unit.\n>\n> Side note: I imagine you'd be substituting a formatted string, and using\n> some\n> other function to format the string (which already exists to decide how to\n> display units elsewhere).\n>\n\nI'm not entirely sure what you mean by this. I plan on using the method\ndescribed on this page http://doc.qt.digia.com/3.1/i18n.html under \"Use\nQString::arg() for Simple Arguments\" and then just putting a %1 and %2 in\nthe translation strings and substituting for value and unit, respectively.\nHaven't tested it yet, but that's what I plan to do.\n\nWhere do you want the constant defined? In main.h alongside MIN_TX_FEE\nand MIN_RELAY_TX_FEE?\n\n\n/Rune\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130311/3304d5ed/attachment.html>"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-11T21:29:29",
                "message_text_only": "On Monday, March 11, 2013 9:17:25 PM Rune Kj\u00e6r Svendsen wrote:\n> On Mon, Mar 11, 2013 at 9:46 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > On Monday, March 11, 2013 8:34:52 PM Rune Kj\u00e6r Svendsen wrote:\n> > > Ok. I'll fork on Github. Looking at the source, and some Qt\n> > \n> > documentation,\n> > \n> > > it should be doable to do string substitution for both the value and\n> > > the unit.\n> > \n> > Side note: I imagine you'd be substituting a formatted string, and using\n> > some\n> > other function to format the string (which already exists to decide how\n> > to display units elsewhere).\n> \n> I'm not entirely sure what you mean by this. I plan on using the method\n> described on this page http://doc.qt.digia.com/3.1/i18n.html under \"Use\n> QString::arg() for Simple Arguments\" and then just putting a %1 and %2 in\n> the translation strings and substituting for value and unit, respectively.\n> Haven't tested it yet, but that's what I plan to do.\n\neg, use a single %1 with\nBitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), amount)\n\n> Where do you want the constant defined? In main.h alongside MIN_TX_FEE\n> and MIN_RELAY_TX_FEE?\n\nSounds reasonable."
            }
        ],
        "thread_summary": {
            "title": "Change recommended fee to 0.001 BTC",
            "categories": [
                "Bitcoin-development",
                "PATCH"
            ],
            "authors": [
                "Gregory Maxwell",
                "Luke-Jr",
                "Rune Kj\u00e6r Svendsen",
                "Rune K. Svendsen"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 43935
        }
    },
    {
        "title": "[Bitcoin-development] Can this tx be formed?",
        "thread_messages": [
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-11T23:03:55",
                "message_text_only": "Say Alice signs and broadcasts a tx with input Ai, with SIGHASH_SINGLE\nto Ao and SIGHASH_ANYONECANPAY\nBob signs and broadcasts a tx with input Bi, with SIGHASH_SINGLE to Bo\nand SIGHASH_ANYONECANPAY\n\nCan Carol complete the tx so that it is valid to be published in the chain?\nIt only has to make Ai + Bi + Ci + F = Ao + Bo + Co\nbut it all must be contained in a single transaction."
            }
        ],
        "thread_summary": {
            "title": "Can this tx be formed?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jorge Tim\u00f3n"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 380
        }
    },
    {
        "title": "[Bitcoin-development] Warning: many 0.7 nodes break on large number of tx/block; fork risk",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2013-03-12T00:18:10",
                "message_text_only": "Hello everyone,\n\n\u00cd've just seen many reports of 0.7 nodes getting stuck around block 225430,\ndue to running out of lock entries in the BDB database. 0.8 nodes do not\nseem to have a problem.\n\nIn any case, if you do not have this block:\n\n  2013-03-12 00:00:10 SetBestChain: new\nbest=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c\n height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11\n23:49:08\n\nyou're likely stuck. Check debug.log and db.log (look for 'Lock table is\nout of available lock entries').\n\nIf this is a widespread problem, it is an emergency. We risk having\n(several) forked chains with smaller blocks, which are accepted by 0.7\nnodes. Can people contact pool operators to see which fork they are on?\nBlockexplorer and blockchain.info seem to be stuck as well.\n\nImmediate solution is upgrading to 0.8, or manually setting the number of\nlock objects higher in your database. I'll follow up with more concrete\ninstructions.\n\nIf you're unsure, please stop processing transactions.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/657f5fcc/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2013-03-12T01:01:35",
                "message_text_only": "Hello again,\n\nblock 000000000000015c50b165fcdd33556f8b44800c5298943ac70b112df480c023\n(height=225430) seems indeed to have cause pre-0.8 and 0.8 nodes to fork\n(at least mostly). Both chains are being mined on - the 0.8 one growing\nfaster.\n\nAfter some emergency discussion on #bitcoin-dev, it seems best to try to\nget the majority mining power back on the \"old\" chain, that is, the one\nwhich 0.7 accepts\n(with 00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932 at\nheight 225430). That is the only chain every client out there will accept.\nBTC Guild is switching to 0.7, so majority should abandon the 0.8 chain\nsoon.\n\nShort advice: if you're a miner, please revert to 0.7 until we at least\nunderstand exactly what causes this. If you're a merchant, and are on 0.8,\nstop processing transactions until both sides have switched to the same\nchain again. We'll see how to proceed afterwards.\n\n-- \nPieter\n\n\n\nOn Tue, Mar 12, 2013 at 1:18 AM, Pieter Wuille <pieter.wuille at gmail.com>wrote:\n\n> Hello everyone,\n>\n> \u00cd've just seen many reports of 0.7 nodes getting stuck around block\n> 225430, due to running out of lock entries in the BDB database. 0.8 nodes\n> do not seem to have a problem.\n>\n> In any case, if you do not have this block:\n>\n>   2013-03-12 00:00:10 SetBestChain: new\n> best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c\n>  height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11\n> 23:49:08\n>\n> you're likely stuck. Check debug.log and db.log (look for 'Lock table is\n> out of available lock entries').\n>\n> If this is a widespread problem, it is an emergency. We risk having\n> (several) forked chains with smaller blocks, which are accepted by 0.7\n> nodes. Can people contact pool operators to see which fork they are on?\n> Blockexplorer and blockchain.info seem to be stuck as well.\n>\n> Immediate solution is upgrading to 0.8, or manually setting the number of\n> lock objects higher in your database. I'll follow up with more concrete\n> instructions.\n>\n> If you're unsure, please stop processing transactions.\n>\n> --\n> Pieter\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/9a987241/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-12T09:10:15",
                "message_text_only": "Just so we're all on the same page, can someone confirm my\nunderstanding  - are any of the following statements untrue?\n\nBDB ran out of locks.\nHowever, only on some 0.7 nodes. Others, perhaps nodes using different\nflags, managed it.\nWe have processed 1mb sized blocks on the testnet.\nTherefore it isn't presently clear why that particular block caused\nlock exhaustion when other larger blocks have not.\n\nThe reason for increasing the soft limit is still present (we have run\nout of space).\nTherefore transactions are likely to start stacking up in the memory\npool again very shortly, as they did last week.\nThere are no bounds on the memory pool size. If too many transactions\nenter the pool then nodes will start to die with OOM failures.\nTherefore it is possible that we have a very limited amount of time\nuntil nodes start dying en-masse.\nEven if nodes do not die, users have no way to find out what the\ncurrent highest fees/bids for block space are, nor any way to change\nthe fee on sent transactions.\nTherefore Bitcoin will shortly start to break for the majority of\nusers who don't have a deep understanding of the system.\n\n\nIf all the above statements are true, we appear to be painted into a\ncorner - can't roll forward and can't roll back, with very limited\ntime to come up with a solution. I see only a small number of\nalternatives:\n\n1) Start aggressively trying to block or down-prioritize SatoshiDice\ntransactions at the network level, to buy time and try to avoid\nmempool exhaustion. I don't know a good way to do this, although it\nappears that virtually all their traffic is actually coming via\nblockchain.infos My Wallet service. During their last outage block\nsizes seemed to drop to around 50kb. Alternatively, ask SD to\ntemporarily suspend their service (this seems like a long shot).\n\n2) Perform a crash hard fork as soon as possible, probably with no\nchanges in it except a new block size limit. Question - try to lift\nthe 1mb limit at the same time, or not?\n\n\n\n\nOn Tue, Mar 12, 2013 at 2:01 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n> Hello again,\n>\n> block 000000000000015c50b165fcdd33556f8b44800c5298943ac70b112df480c023\n> (height=225430) seems indeed to have cause pre-0.8 and 0.8 nodes to fork (at\n> least mostly). Both chains are being mined on - the 0.8 one growing faster.\n>\n> After some emergency discussion on #bitcoin-dev, it seems best to try to get\n> the majority mining power back on the \"old\" chain, that is, the one which\n> 0.7 accepts (with\n> 00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932 at height\n> 225430). That is the only chain every client out there will accept. BTC\n> Guild is switching to 0.7, so majority should abandon the 0.8 chain soon.\n>\n> Short advice: if you're a miner, please revert to 0.7 until we at least\n> understand exactly what causes this. If you're a merchant, and are on 0.8,\n> stop processing transactions until both sides have switched to the same\n> chain again. We'll see how to proceed afterwards.\n>\n> --\n> Pieter\n>\n>\n>\n> On Tue, Mar 12, 2013 at 1:18 AM, Pieter Wuille <pieter.wuille at gmail.com>\n> wrote:\n>>\n>> Hello everyone,\n>>\n>> \u00cd've just seen many reports of 0.7 nodes getting stuck around block\n>> 225430, due to running out of lock entries in the BDB database. 0.8 nodes do\n>> not seem to have a problem.\n>>\n>> In any case, if you do not have this block:\n>>\n>>   2013-03-12 00:00:10 SetBestChain: new\n>> best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c\n>> height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11\n>> 23:49:08\n>>\n>> you're likely stuck. Check debug.log and db.log (look for 'Lock table is\n>> out of available lock entries').\n>>\n>> If this is a widespread problem, it is an emergency. We risk having\n>> (several) forked chains with smaller blocks, which are accepted by 0.7\n>> nodes. Can people contact pool operators to see which fork they are on?\n>> Blockexplorer and blockchain.info seem to be stuck as well.\n>>\n>> Immediate solution is upgrading to 0.8, or manually setting the number of\n>> lock objects higher in your database. I'll follow up with more concrete\n>> instructions.\n>>\n>> If you're unsure, please stop processing transactions.\n>>\n>> --\n>> Pieter\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-12T09:53:44",
                "message_text_only": "On 3/12/13, Mike Hearn <mike at plan99.net> wrote:\n> 1) Start aggressively trying to block or down-prioritize SatoshiDice\n> transactions at the network level, to buy time and try to avoid\n> mempool exhaustion. I don't know a good way to do this, although it\n> appears that virtually all their traffic is actually coming via\n> blockchain.infos My Wallet service. During their last outage block\n> sizes seemed to drop to around 50kb. Alternatively, ask SD to\n> temporarily suspend their service (this seems like a long shot).\n\nThey have a vested interested in bitcoin's success. Can't they be\nasked to suspend their operations temporarily until the new hard-fork\nis properly prepared?\n\nI thought they have stopped them already."
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-12T09:57:49",
                "message_text_only": "On Tue, Mar 12, 2013 at 10:10:15AM +0100, Mike Hearn wrote:\n> There are no bounds on the memory pool size. If too many transactions\n> enter the pool then nodes will start to die with OOM failures.\n> Therefore it is possible that we have a very limited amount of time\n> until nodes start dying en-masse.\n\nNote that nodes dying en-mass due to OOM failures is a relatively benign\nfailure mode as the point as which any particular node would die is\nuncorrelated with other nodes - it won't cause a network fork.\n\nImplementing a simple and stupid \"while [ true ] do ; ./bitcoind ; done\"\nloop combined with ulimit to keep total memory usage to something sane\nis a perfectly acceptable hack until proper mempool code with expiration\ncan be written. Gavin can talk more about his ideas in that regard.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/59beb2ae/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-12T10:10:47",
                "message_text_only": "However, most nodes are not running in such a loop today. Probably\nalmost no nodes are.\n\nI suppose you could consider mass node death to be more benign than a\nhard fork, but both are pretty damn serious and warrant immediate\naction. Otherwise we're going to see the number of nodes drop sharply\nover the coming days as unattended nodes die and then don't get\nrestarted."
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-12T10:17:24",
                "message_text_only": "On Tue, Mar 12, 2013 at 11:10:47AM +0100, Mike Hearn wrote:\n> However, most nodes are not running in such a loop today. Probably\n> almost no nodes are.\n> \n> I suppose you could consider mass node death to be more benign than a\n> hard fork, but both are pretty damn serious and warrant immediate\n> action. Otherwise we're going to see the number of nodes drop sharply\n> over the coming days as unattended nodes die and then don't get\n> restarted.\n\nI'm sure if \"mass node death\" becomes an issue miners will have plenty\nof incentive to temporarily, or permanently, setup some high-memory and\nhigh-bandwidth nodes to accept transactions. The DNS seeds sort by\nreliability so it won't be long before nodes are connecting to them.\n\nMy home machine has 16GB of ram, bigger than the whole blockchain.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/2505f7cd/attachment.sig>"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-12T10:13:09",
                "message_text_only": "Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.\n\nMore space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:\n\n1. if they gets to old >24hr\n2. if the client is running out of space, then the oldest should probably be pruned \n\nclients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).\n\nFollowing that, increase the soft and hard limit to 1 and eg 10MB, but miners should be the last to upgrade.\n\n/M\n\n\nOn 12/03/2013, at 10:10, Mike Hearn <mike at plan99.net> wrote:\n\n> Just so we're all on the same page, can someone confirm my\n> understanding  - are any of the following statements untrue?\n> \n> BDB ran out of locks.\n> However, only on some 0.7 nodes. Others, perhaps nodes using different\n> flags, managed it.\n> We have processed 1mb sized blocks on the testnet.\n> Therefore it isn't presently clear why that particular block caused\n> lock exhaustion when other larger blocks have not.\n> \n> The reason for increasing the soft limit is still present (we have run\n> out of space).\n> Therefore transactions are likely to start stacking up in the memory\n> pool again very shortly, as they did last week.\n> There are no bounds on the memory pool size. If too many transactions\n> enter the pool then nodes will start to die with OOM failures.\n> Therefore it is possible that we have a very limited amount of time\n> until nodes start dying en-masse.\n> Even if nodes do not die, users have no way to find out what the\n> current highest fees/bids for block space are, nor any way to change\n> the fee on sent transactions.\n> Therefore Bitcoin will shortly start to break for the majority of\n> users who don't have a deep understanding of the system.\n> \n> \n> If all the above statements are true, we appear to be painted into a\n> corner - can't roll forward and can't roll back, with very limited\n> time to come up with a solution. I see only a small number of\n> alternatives:\n> \n> 1) Start aggressively trying to block or down-prioritize SatoshiDice\n> transactions at the network level, to buy time and try to avoid\n> mempool exhaustion. I don't know a good way to do this, although it\n> appears that virtually all their traffic is actually coming via\n> blockchain.infos My Wallet service. During their last outage block\n> sizes seemed to drop to around 50kb. Alternatively, ask SD to\n> temporarily suspend their service (this seems like a long shot).\n> \n> 2) Perform a crash hard fork as soon as possible, probably with no\n> changes in it except a new block size limit. Question - try to lift\n> the 1mb limit at the same time, or not?\n> \n> \n> \n> \n> On Tue, Mar 12, 2013 at 2:01 AM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n>> Hello again,\n>> \n>> block 000000000000015c50b165fcdd33556f8b44800c5298943ac70b112df480c023\n>> (height=225430) seems indeed to have cause pre-0.8 and 0.8 nodes to fork (at\n>> least mostly). Both chains are being mined on - the 0.8 one growing faster.\n>> \n>> After some emergency discussion on #bitcoin-dev, it seems best to try to get\n>> the majority mining power back on the \"old\" chain, that is, the one which\n>> 0.7 accepts (with\n>> 00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932 at height\n>> 225430). That is the only chain every client out there will accept. BTC\n>> Guild is switching to 0.7, so majority should abandon the 0.8 chain soon.\n>> \n>> Short advice: if you're a miner, please revert to 0.7 until we at least\n>> understand exactly what causes this. If you're a merchant, and are on 0.8,\n>> stop processing transactions until both sides have switched to the same\n>> chain again. We'll see how to proceed afterwards.\n>> \n>> --\n>> Pieter\n>> \n>> \n>> \n>> On Tue, Mar 12, 2013 at 1:18 AM, Pieter Wuille <pieter.wuille at gmail.com>\n>> wrote:\n>>> \n>>> Hello everyone,\n>>> \n>>> \u00cd've just seen many reports of 0.7 nodes getting stuck around block\n>>> 225430, due to running out of lock entries in the BDB database. 0.8 nodes do\n>>> not seem to have a problem.\n>>> \n>>> In any case, if you do not have this block:\n>>> \n>>>  2013-03-12 00:00:10 SetBestChain: new\n>>> best=000000000000015aab28064a4c521d6a5325ff6e251e8ca2edfdfe6cb5bf832c\n>>> height=225439  work=853779625563004076992  tx=14269257  date=2013-03-11\n>>> 23:49:08\n>>> \n>>> you're likely stuck. Check debug.log and db.log (look for 'Lock table is\n>>> out of available lock entries').\n>>> \n>>> If this is a widespread problem, it is an emergency. We risk having\n>>> (several) forked chains with smaller blocks, which are accepted by 0.7\n>>> nodes. Can people contact pool operators to see which fork they are on?\n>>> Blockexplorer and blockchain.info seem to be stuck as well.\n>>> \n>>> Immediate solution is upgrading to 0.8, or manually setting the number of\n>>> lock objects higher in your database. I'll follow up with more concrete\n>>> instructions.\n>>> \n>>> If you're unsure, please stop processing transactions.\n>>> \n>>> --\n>>> Pieter\n>> \n>> \n>> \n>> ------------------------------------------------------------------------------\n>> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n>> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n>> endpoint security space. For insight on selecting the right partner to\n>> tackle endpoint security challenges, access the full report.\n>> http://p.sf.net/sfu/symantec-dev2dev\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n> \n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  \n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the  \n> endpoint security space. For insight on selecting the right partner to \n> tackle endpoint security challenges, access the full report. \n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-12T10:26:27",
                "message_text_only": "On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:\n> Following that, increase the soft and hard limit to 1 and eg 10MB, but miners should be the last to upgrade.\n\nWe just saw a hard-fork happen because we ran into previously unknown\nscaling issues with the current codebase. Why follow that up immediately\nwith yet another jump into unknown scaling territory?\n\nI suspect the PR fallout from another chain split, let alone multiple\nsplits, will be far damaging to Bitcoin than stories along the lines of\n\"Gee, actually it'd kinda expensive to do a Bitcoin transaction these\ndays due to all the competition. I dunno, I guess it must be really\npopular and valuable or something?\"\n\nLets let the issue rest for a while, and we can all have some time to\nwork on our various approaches to solving the problem. The worst that\nwill happen is growth temporarily slows - hardly a disaster I think.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/fab470f3/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-12T10:43:52",
                "message_text_only": "> We just saw a hard-fork happen because we ran into previously unknown\n> scaling issues with the current codebase.\n\nTechnically, it with the previous codebase ;)"
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-12T10:40:00",
                "message_text_only": "> clients are anyway keeping, and re-relaying, their own transactions\n> and hence it would mean only little, and only little for clients.\n\nNot all end-user clients are always-on though"
            },
            {
                "author": "Pieter Wuille",
                "date": "2013-03-12T11:44:28",
                "message_text_only": "On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:\n> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.\n\nWe're using \"0.7\" as a short moniker for all clients, but this was a limitation that all\nBDB-based bitcoins ever had. The bug is simply a limit in the number of lock objects\nthat was reached.\n\nIt's ironic that 0.8 was supposed to solve all problems we had due to BDB (except the\nwallet...), but now it seems it's still coming back to haunt us. I really hated telling\nminers to go back to 0.7, given all efforts to make 0.8 signficantly more tolerable...\n\n> More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:\n> \n> 1. if they gets to old >24hr\n> 2. if the client is running out of space, then the oldest should probably be pruned \n> \n> clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).\n\nRight now, mempools are relatively small in memory usage, but with small block sizes,\nit indeed risks going up. In 0.8, conflicting (=double spending) transactions in the\nchain cause clearing the mempool of conflicts, so at least the mempool is bounded by\nthe size of the UTXO subset being spent. Dropping transactions from the memory pool\nwhen they run out of space seems a correct solution. I'm less convinced about a\ndeterministic time-based rule, as that creates a double spending incentive at that\ntime, and a counter incentive to spam the network with your risking-to-be-cleared\ntransaction as well.\n\nRegarding the block space, we've seen the pct% of one single block chain space consumer\ngrow simultaneously with the introduction of larger blocks, so I'm not actually convinced\nthere is right now a big need for larger blocks (note: right now). The competition for\nblock chain space is mostly an issue for client software which doesn't deal correctly\nwith non-confirming transactions, and misleading users. It's mostly a usability problem\nnow, but increasing block sizes isn't guaranteed to fix that; it may just make more\nspace for spam.\n\nHowever, the presence of this bug, and the fact that a full solution is available (0.8),\nprobably helps achieving consensus fixing it (=a hardfork) is needed, and we should take\nadvantage of that. But please, let's not rush things...\n\n-- \nPiter"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-03-12T12:11:34",
                "message_text_only": "I'm not even sure I'd say the upgrade \"went wrong\". The problem if\nanything is the upgrade didn't happen fast enough. If we had run out\nof block space a few months from now, or if miners/merchants/exchanges\nhad upgraded faster, it'd have made more sense to just roll forward\nand tolerate the loss of the older clients.\n\nThis really reinforces the importance of keeping nodes up to date.\n\nOn Tue, Mar 12, 2013 at 12:44 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n> On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:\n>> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.\n>\n> We're using \"0.7\" as a short moniker for all clients, but this was a limitation that all\n> BDB-based bitcoins ever had. The bug is simply a limit in the number of lock objects\n> that was reached.\n>\n> It's ironic that 0.8 was supposed to solve all problems we had due to BDB (except the\n> wallet...), but now it seems it's still coming back to haunt us. I really hated telling\n> miners to go back to 0.7, given all efforts to make 0.8 signficantly more tolerable...\n>\n>> More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:\n>>\n>> 1. if they gets to old >24hr\n>> 2. if the client is running out of space, then the oldest should probably be pruned\n>>\n>> clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).\n>\n> Right now, mempools are relatively small in memory usage, but with small block sizes,\n> it indeed risks going up. In 0.8, conflicting (=double spending) transactions in the\n> chain cause clearing the mempool of conflicts, so at least the mempool is bounded by\n> the size of the UTXO subset being spent. Dropping transactions from the memory pool\n> when they run out of space seems a correct solution. I'm less convinced about a\n> deterministic time-based rule, as that creates a double spending incentive at that\n> time, and a counter incentive to spam the network with your risking-to-be-cleared\n> transaction as well.\n>\n> Regarding the block space, we've seen the pct% of one single block chain space consumer\n> grow simultaneously with the introduction of larger blocks, so I'm not actually convinced\n> there is right now a big need for larger blocks (note: right now). The competition for\n> block chain space is mostly an issue for client software which doesn't deal correctly\n> with non-confirming transactions, and misleading users. It's mostly a usability problem\n> now, but increasing block sizes isn't guaranteed to fix that; it may just make more\n> space for spam.\n>\n> However, the presence of this bug, and the fact that a full solution is available (0.8),\n> probably helps achieving consensus fixing it (=a hardfork) is needed, and we should take\n> advantage of that. But please, let's not rush things...\n>\n> --\n> Piter"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-12T12:27:32",
                "message_text_only": "Well a reversed upgrade is an upgrade that went wrong ;)\n\nAnyway, the incident makes it even more important for people to upgrade, well except, perhaps, for miners...\n\nForks are caused by rejection criteria, hence: \n1. If you introduce new rejection criteria in an upgrade miners should upgrade _first_.\n2. If you loosen some rejection criteria miners should upgrade _last_.\n3. If you keep the same criteria assume 2.\n\n/M\n\nOn 12/03/2013, at 13:11, Mike Hearn <mike at plan99.net> wrote:\n\n> I'm not even sure I'd say the upgrade \"went wrong\". The problem if\n> anything is the upgrade didn't happen fast enough. If we had run out\n> of block space a few months from now, or if miners/merchants/exchanges\n> had upgraded faster, it'd have made more sense to just roll forward\n> and tolerate the loss of the older clients.\n> \n> This really reinforces the importance of keeping nodes up to date.\n> \n> On Tue, Mar 12, 2013 at 12:44 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n>> On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:\n>>> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and unknown criteria for block rejection, hence the upgrade went wrong.\n>> \n>> We're using \"0.7\" as a short moniker for all clients, but this was a limitation that all\n>> BDB-based bitcoins ever had. The bug is simply a limit in the number of lock objects\n>> that was reached.\n>> \n>> It's ironic that 0.8 was supposed to solve all problems we had due to BDB (except the\n>> wallet...), but now it seems it's still coming back to haunt us. I really hated telling\n>> miners to go back to 0.7, given all efforts to make 0.8 signficantly more tolerable...\n>> \n>>> More space in the block is needed indeed, but the real problem you are describing is actually not missing space in the block, but proper handling of mem-pool transactions. They should be pruned on two criteria:\n>>> \n>>> 1. if they gets to old >24hr\n>>> 2. if the client is running out of space, then the oldest should probably be pruned\n>>> \n>>> clients are anyway keeping, and re-relaying, their own transactions and hence it would mean only little, and only little for clients. Dropping free / old transaction is a much a better behavior than dying... Even a scheme where the client dropped all or random mempool txes would be a tolerable way of handling things (dropping all is similar to a restart, except for no user intervention).\n>> \n>> Right now, mempools are relatively small in memory usage, but with small block sizes,\n>> it indeed risks going up. In 0.8, conflicting (=double spending) transactions in the\n>> chain cause clearing the mempool of conflicts, so at least the mempool is bounded by\n>> the size of the UTXO subset being spent. Dropping transactions from the memory pool\n>> when they run out of space seems a correct solution. I'm less convinced about a\n>> deterministic time-based rule, as that creates a double spending incentive at that\n>> time, and a counter incentive to spam the network with your risking-to-be-cleared\n>> transaction as well.\n>> \n>> Regarding the block space, we've seen the pct% of one single block chain space consumer\n>> grow simultaneously with the introduction of larger blocks, so I'm not actually convinced\n>> there is right now a big need for larger blocks (note: right now). The competition for\n>> block chain space is mostly an issue for client software which doesn't deal correctly\n>> with non-confirming transactions, and misleading users. It's mostly a usability problem\n>> now, but increasing block sizes isn't guaranteed to fix that; it may just make more\n>> space for spam.\n>> \n>> However, the presence of this bug, and the fact that a full solution is available (0.8),\n>> probably helps achieving consensus fixing it (=a hardfork) is needed, and we should take\n>> advantage of that. But please, let's not rush things...\n>> \n>> --\n>> Piter\n> \n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester  \n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the  \n> endpoint security space. For insight on selecting the right partner to \n> tackle endpoint security challenges, access the full report. \n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-03-12T12:18:21",
                "message_text_only": "A related question...some people mentioned yesterday on #bitcoin-dev\nthat 0.5 appeared to be compatible with 0.8.\nWas that only for the \"fatal block\" and would have forked 0.8 later\ntoo or is it something else?\nI'm having a hard time understanding this 0.5 thing, if someone can\nbring some light to it I would appreciate it.\n\nThanks in advance\n\nOn 3/12/13, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n> On Tue, Mar 12, 2013 at 11:13:09AM +0100, Michael Gronager wrote:\n>> Yes, 0.7 (yes 0.7!) was not sufficiently tested it had an undocumented and\n>> unknown criteria for block rejection, hence the upgrade went wrong.\n>\n> We're using \"0.7\" as a short moniker for all clients, but this was a\n> limitation that all\n> BDB-based bitcoins ever had. The bug is simply a limit in the number of lock\n> objects\n> that was reached.\n>\n> It's ironic that 0.8 was supposed to solve all problems we had due to BDB\n> (except the\n> wallet...), but now it seems it's still coming back to haunt us. I really\n> hated telling\n> miners to go back to 0.7, given all efforts to make 0.8 signficantly more\n> tolerable...\n>\n>> More space in the block is needed indeed, but the real problem you are\n>> describing is actually not missing space in the block, but proper handling\n>> of mem-pool transactions. They should be pruned on two criteria:\n>>\n>> 1. if they gets to old >24hr\n>> 2. if the client is running out of space, then the oldest should probably\n>> be pruned\n>>\n>> clients are anyway keeping, and re-relaying, their own transactions and\n>> hence it would mean only little, and only little for clients. Dropping\n>> free / old transaction is a much a better behavior than dying... Even a\n>> scheme where the client dropped all or random mempool txes would be a\n>> tolerable way of handling things (dropping all is similar to a restart,\n>> except for no user intervention).\n>\n> Right now, mempools are relatively small in memory usage, but with small\n> block sizes,\n> it indeed risks going up. In 0.8, conflicting (=double spending)\n> transactions in the\n> chain cause clearing the mempool of conflicts, so at least the mempool is\n> bounded by\n> the size of the UTXO subset being spent. Dropping transactions from the\n> memory pool\n> when they run out of space seems a correct solution. I'm less convinced\n> about a\n> deterministic time-based rule, as that creates a double spending incentive\n> at that\n> time, and a counter incentive to spam the network with your\n> risking-to-be-cleared\n> transaction as well.\n>\n> Regarding the block space, we've seen the pct% of one single block chain\n> space consumer\n> grow simultaneously with the introduction of larger blocks, so I'm not\n> actually convinced\n> there is right now a big need for larger blocks (note: right now). The\n> competition for\n> block chain space is mostly an issue for client software which doesn't deal\n> correctly\n> with non-confirming transactions, and misleading users. It's mostly a\n> usability problem\n> now, but increasing block sizes isn't guaranteed to fix that; it may just\n> make more\n> space for spam.\n>\n> However, the presence of this bug, and the fact that a full solution is\n> available (0.8),\n> probably helps achieving consensus fixing it (=a hardfork) is needed, and we\n> should take\n> advantage of that. But please, let's not rush things...\n>\n> --\n> Piter\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/\nhttp://archive.ripple-project.org/"
            },
            {
                "author": "Jay F",
                "date": "2013-03-12T12:40:59",
                "message_text_only": "On 3/12/2013 5:18 AM, Jorge Tim\u00f3n wrote:\n> A related question...some people mentioned yesterday on #bitcoin-dev\n> that 0.5 appeared to be compatible with 0.8.\n> Was that only for the \"fatal block\" and would have forked 0.8 later\n> too or is it something else?\n> I'm having a hard time understanding this 0.5 thing, if someone can\n> bring some light to it I would appreciate it.\n>\n> Thanks in advance\n>\nIt was reported that not all 0.7 died from the BDB error either. This \nwill likely take a post-mortem to determine exactly what build \nenvironments and versions are incompatible, by feeding each the bloated \nblock (hopefully there are lots of snapshots of the bad chain being the \nbest height for testing; I forgot to get one)."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-12T12:38:25",
                "message_text_only": "On Tue, Mar 12, 2013 at 2:10 AM, Mike Hearn <mike at plan99.net> wrote:\n> BDB ran out of locks.\n> However, only on some 0.7 nodes. Others, perhaps nodes using different\n> flags, managed it.\n> We have processed 1mb sized blocks on the testnet.\n> Therefore it isn't presently clear why that particular block caused\n> lock exhaustion when other larger blocks have not.\n\nLocks are only mostly related to block size, once I heard what was\nhappening I was unsurprised the max sized test blocks hadn't triggered\nit.\n\n> Therefore it is possible that we have a very limited amount of time\nuntil nodes start dying en-masse.\n\nScaremongering much? Egads.\n\nOn Tue, Mar 12, 2013 at 5:27 AM, Michael Gronager <gronager at ceptacle.com> wrote:\n> Forks are caused by rejection criteria, hence:\n> 1. If you introduce new rejection criteria in an upgrade miners should upgrade _first_.\n> 2. If you loosen some rejection criteria miners should upgrade _last_.\n> 3. If you keep the same criteria assume 2.\n\nAnd ... if you aren't aware that you're making a change ???"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-12T13:00:13",
                "message_text_only": ">> Forks are caused by rejection criteria, hence:\n>> 1. If you introduce new rejection criteria in an upgrade miners should upgrade _first_.\n>> 2. If you loosen some rejection criteria miners should upgrade _last_.\n>> 3. If you keep the same criteria assume 2.\n> \n> And ... if you aren't aware that you're making a change ???\n\nthen only half should upgrade :-P\n\nWell I thought I covered that by 3... But, question is of course if we could have been in a situation where 0.8 had been the one rejecting blocks? \n\nSo miners could go with a filtering approach: only connect to the network through a node of a version one less than the current. That would still have caused block 225430 to be created, but it would never have been relayed and hence no harm. (and if the issue had been in 0.8 the block would not even have been accepted there in the first place). Downside is some lost seconds.\n\n/M"
            }
        ],
        "thread_summary": {
            "title": "Warning: many 0.7 nodes break on large number of tx/block; fork risk",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Michael Gronager",
                "Mike Hearn",
                "Roy Badami",
                "Peter Todd",
                "Jorge Tim\u00f3n",
                "Gregory Maxwell",
                "Jay F",
                "Pieter Wuille"
            ],
            "messages_count": 18,
            "total_messages_chars_count": 37114
        }
    },
    {
        "title": "[Bitcoin-development] Some PR preparation",
        "thread_messages": [
            {
                "author": "Alan Reiner",
                "date": "2013-03-12T07:03:54",
                "message_text_only": "I'm sure it won't be long before Slashdot and a variety of sources start\nreporting on this event.  Bitcoin has been in the media a lot lately, so\nthis story is likely to get some attention.  The blowback of this event\nis mostly psychological, so I think it would be exceptionally wise to\nstart preparing PR comments that can be posted on articles immediately\nafter they go public.  This event is likely draw much more negative\nattention than it deserves, and getting some positive&informed comments\nposted up front will potentially make a difference in the way the story\nis received. \n\nUndoubtedly, many articles (and especially commenters) will shape this\ninto \"the end of Bitcoin\".   I would describe it as \"there was a short\nand mostly-harmless lapse in the ability of the network to reach a\nconsensus, causing transactions to get delayed by a few hours.\"   It\n*really* needs to be emphasized that coins are safe, and nothing anyone\nhas/could do will change that.  And that it would've been extremely\ndifficult to exploit for gain.  Transactions got delayed while a bug was\nfixed.  End of story.\n\nHell, someone here should submit their own slashdot article about it! \n100% chance this hits slashdot -- it might as well be written by someone\nwho understands it.  Similarly, we could be sending sources information\nto pre-empt misinformation being spread about it.  Unfortunately, I have\nto go to bed, so I can't really do much.  I just wanted folks to be on\nthe lookout and be ready to respond to the crazy stuff that's going to\nhit the media in the next 12 hours.\n\n-Alan"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-12T12:10:32",
                "message_text_only": "On Tuesday, March 12, 2013 7:03:54 AM Alan Reiner wrote:\n> I'm sure it won't be long before Slashdot and a variety of sources start\n> reporting on this event.  Bitcoin has been in the media a lot lately, so\n> this story is likely to get some attention.  The blowback of this event\n> is mostly psychological, so I think it would be exceptionally wise to\n> start preparing PR comments that can be posted on articles immediately\n> after they go public.  This event is likely draw much more negative\n> attention than it deserves, and getting some positive&informed comments\n> posted up front will potentially make a difference in the way the story\n> is received.\n> \n> Undoubtedly, many articles (and especially commenters) will shape this\n> into \"the end of Bitcoin\".   I would describe it as \"there was a short\n> and mostly-harmless lapse in the ability of the network to reach a\n> consensus, causing transactions to get delayed by a few hours.\"   It\n> *really* needs to be emphasized that coins are safe, and nothing anyone\n> has/could do will change that.  And that it would've been extremely\n> difficult to exploit for gain.  Transactions got delayed while a bug was\n> fixed.  End of story.\n\nI think we should be careful not to downplay the reality either.\nFor a number of hours, transactions could have received up to N confirmations \nand then still been reversed. While we could contact the bigger payment \nprocessors, I saw people still trying to buy/sell on OTC, whom could have been \nscammed even by taking standard precautions.\n\nLuke"
            },
            {
                "author": "Alan Reiner",
                "date": "2013-03-12T16:55:26",
                "message_text_only": "On Tue, Mar 12, 2013 at 8:10 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n>\n>\n> I think we should be careful not to downplay the reality either.\n> For a number of hours, transactions could have received up to N\n> confirmations\n> and then still been reversed. While we could contact the bigger payment\n> processors, I saw people still trying to buy/sell on OTC, whom could have\n> been\n> scammed even by taking standard precautions.\n>\n>\nI don't want to misrepresent what happened, but how much of that was really\na risk?  The block was rejected, but the transactions were not.  Any valid\ntransactions to hit the network would get added to everyone's memory pool\nand mined in both chains.  Thus all nodes would still reject double-spend\nattempts.  As far as I understood it, you would've had to have majority\nmining power on one of the chains (and both had non-negligible computing\npower on them), so double-spending still required an exceptional amount of\nresources -- just not the normal 50% that is normally needed.  Perhaps...\n10%?   But how many people can even have 10%?  In addition to that, a\nvictim needs to be found that hasn't seen the alert, is willing to execute\na large transaction, and is on the wrong side of the chain.\n\nIs this incorrect?  Yes, there was less resources needed to execute an\nattack -- but it still required a very powerful attacker, way outside the\nscope of \"regular users.\"\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/417265d3/attachment.html>"
            },
            {
                "author": "Peter Vessenes",
                "date": "2013-03-12T17:35:21",
                "message_text_only": "Can some enterprising soul determine if there were any double-spend\nattempts?\n\nI'm assuming no, and if that's the case, we should talk about that publicly.\n\nEither way, I think it's generally another test well done by everyone;\npeople pitched in on PR, tech, communication, yay Bitcoin!\n\n\n\nOn Tue, Mar 12, 2013 at 9:55 AM, Alan Reiner <etotheipi at gmail.com> wrote:\n\n> On Tue, Mar 12, 2013 at 8:10 AM, Luke-Jr <luke at dashjr.org> wrote:\n>\n>>\n>>\n>> I think we should be careful not to downplay the reality either.\n>> For a number of hours, transactions could have received up to N\n>> confirmations\n>> and then still been reversed. While we could contact the bigger payment\n>> processors, I saw people still trying to buy/sell on OTC, whom could have\n>> been\n>> scammed even by taking standard precautions.\n>>\n>>\n> I don't want to misrepresent what happened, but how much of that was\n> really a risk?  The block was rejected, but the transactions were not.  Any\n> valid transactions to hit the network would get added to everyone's memory\n> pool and mined in both chains.  Thus all nodes would still reject\n> double-spend attempts.  As far as I understood it, you would've had to have\n> majority mining power on one of the chains (and both had non-negligible\n> computing power on them), so double-spending still required an exceptional\n> amount of resources -- just not the normal 50% that is normally needed.\n>  Perhaps... 10%?   But how many people can even have 10%?  In addition to\n> that, a victim needs to be found that hasn't seen the alert, is willing to\n> execute a large transaction, and is on the wrong side of the chain.\n>\n> Is this incorrect?  Yes, there was less resources needed to execute an\n> attack -- but it still required a very powerful attacker, way outside the\n> scope of \"regular users.\"\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Symantec Endpoint Protection 12 positioned as A LEADER in The Forrester\n> Wave(TM): Endpoint Security, Q1 2013 and \"remains a good choice\" in the\n> endpoint security space. For insight on selecting the right partner to\n> tackle endpoint security challenges, access the full report.\n> http://p.sf.net/sfu/symantec-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/0e69d2ec/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-12T18:09:06",
                "message_text_only": "On Tue, Mar 12, 2013 at 9:55 AM, Alan Reiner <etotheipi at gmail.com> wrote:\n> I don't want to misrepresent what happened, but how much of that was really\n> a risk?  The block was rejected, but the transactions were not.\n\nSome but not much.  If someone flooded a bunch of duplicate\nconcurrently announcing both spends to as many nodes as they could\nreach they would almost certainly gotten some conflicts into both\nchains. Then both chains would have gotten >6 confirms. Then one chain\nwould pop and anyone on the popped side would see >6 confirm\ntransactions undo.\n\nThis attack would not require any particular resources, and only\nenough technical sophistication to run something like pynode to give\nraw txn to nodes at random.\n\nThe biggest barriers against it were people being uninterested in\nattacking (as usual for all things) and there not being many (any?)\ngood targets who hadn't shut down their deposits.  They would have to\nhave accepted deposits with <12 confirms and let you withdraw. During\nthe event an attacker could have gotten  of their deposit-able funds.\n\nOn Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com> wrote:\n> Can some enterprising soul determine if there were any double-spend attempts?\n> I'm assuming no, and if that's the case, we should talk about that publicly.\n\nThere were circulating double-spends during the fork (as were visible\non blockchain.info). I don't know if any conflicts made it into the\nlosing chain, however. It's not too hard to check to see what inputs\nwere consumed in the losing fork and see if any have been consumed by\ndifferent transactions now.\n\nI agree it would be good to confirm no one was ripped off, even though\nwe can't say there weren't any attempts."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-12T18:39:48",
                "message_text_only": "On Tue, Mar 12, 2013 at 11:09 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com> wrote:\n>> Can some enterprising soul determine if there were any double-spend attempts?\n>> I'm assuming no, and if that's the case, we should talk about that publicly.\n[snip]\n> I agree it would be good to confirm no one was ripped off, even though\n> we can't say there weren't any attempts.\n\nhttps://bitcointalk.org/index.php?topic=152348.msg1616747#msg1616747"
            },
            {
                "author": "Christian Decker",
                "date": "2013-03-12T19:53:55",
                "message_text_only": "Just a quick and dirty check if something bad actually happened. 430\ntransactions that were confirmed in the alt-chain, are not confirmed\nin the true blockchain. The good news is that as far as I can tell\nmost of them are low volume transactions destined for SD.\n\n7 transactions were true double spends, or to be more precise\ntransactions in which an conflicting transaction was confirmed in the\nnew chain (with their respective amount):\n\n12814b8ad57ce5654ba69eb26a52ddae1bff42093ca20cef3ad96fe7fd85d195 261 BTC\ncb36ba33b3ecd4d3177d786209670c9e6cdf95eb62be54986f0b49ca292714af 0.06 BTC\n7192807f952b252081d0db0aa7575c4695b945820adaf7776b7189e6b3d86f96 0.01 BTC\n355d4ea51c3b780cf0b10e8099a06a31484e0060bc140b63f3d6e5fb713ace5e 0.05 BTC\nb961bc0c663a46893afd3166a604e7e2639533522d9fec61fdb95eb665e86f5a 0.61 BTC\n138063e4bdb76feaa511f1e7f9c681eb468ef9140c141671741c965e503b84c6 1.62 BTC\na10bd194cdbf9aa4c12eb0b120056998a081a9b0d93d70570edff24dec831f90 0.81\n\nSo the one transaction that really hurt was the one published on\nBitcoinTalk. We're not yet out of the woods as some of the 423\ntransactions still have a chance of being doublespent, but looks like\nit's not that bad after all.\n\nCheers,\nChris\n\nP.S.: For a complete list of transactions see http://pastebin.com/wctJU3Ln\n--\nChristian Decker\n\n\nOn Tue, Mar 12, 2013 at 7:39 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> On Tue, Mar 12, 2013 at 11:09 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n>> On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com> wrote:\n>>> Can some enterprising soul determine if there were any double-spend attempts?\n>>> I'm assuming no, and if that's the case, we should talk about that publicly.\n> [snip]\n>> I agree it would be good to confirm no one was ripped off, even though\n>> we can't say there weren't any attempts.\n>\n> https://bitcointalk.org/index.php?topic=152348.msg1616747#msg1616747\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Peter Vessenes",
                "date": "2013-03-12T20:09:17",
                "message_text_only": "Thanks Chris.\n\nYep, looks like an honest-ish user managed to accidentally get one tx into\none chain and another into the other.\n\nI think I'd cautiously say that if OKPay gets their cash back, or freezes\nhis balance nobody is out BTC for last night, (instead just time and\neffort).\n\nI'm doing a little FUD-fighting right now, but will try and pick up a bit\nmore if necessary tonight after my flight lands. I think this is mostly\nover the heads of a lot of our typical media contacts, though.\n\nPeter\n\n\nOn Tue, Mar 12, 2013 at 12:53 PM, Christian Decker <\ndecker.christian at gmail.com> wrote:\n\n> Just a quick and dirty check if something bad actually happened. 430\n> transactions that were confirmed in the alt-chain, are not confirmed\n> in the true blockchain. The good news is that as far as I can tell\n> most of them are low volume transactions destined for SD.\n>\n> 7 transactions were true double spends, or to be more precise\n> transactions in which an conflicting transaction was confirmed in the\n> new chain (with their respective amount):\n>\n> 12814b8ad57ce5654ba69eb26a52ddae1bff42093ca20cef3ad96fe7fd85d195 261 BTC\n> cb36ba33b3ecd4d3177d786209670c9e6cdf95eb62be54986f0b49ca292714af 0.06 BTC\n> 7192807f952b252081d0db0aa7575c4695b945820adaf7776b7189e6b3d86f96 0.01 BTC\n> 355d4ea51c3b780cf0b10e8099a06a31484e0060bc140b63f3d6e5fb713ace5e 0.05 BTC\n> b961bc0c663a46893afd3166a604e7e2639533522d9fec61fdb95eb665e86f5a 0.61 BTC\n> 138063e4bdb76feaa511f1e7f9c681eb468ef9140c141671741c965e503b84c6 1.62 BTC\n> a10bd194cdbf9aa4c12eb0b120056998a081a9b0d93d70570edff24dec831f90 0.81\n>\n> So the one transaction that really hurt was the one published on\n> BitcoinTalk. We're not yet out of the woods as some of the 423\n> transactions still have a chance of being doublespent, but looks like\n> it's not that bad after all.\n>\n> Cheers,\n> Chris\n>\n> P.S.: For a complete list of transactions see http://pastebin.com/wctJU3Ln\n> --\n> Christian Decker\n>\n>\n> On Tue, Mar 12, 2013 at 7:39 PM, Gregory Maxwell <gmaxwell at gmail.com>\n> wrote:\n> > On Tue, Mar 12, 2013 at 11:09 AM, Gregory Maxwell <gmaxwell at gmail.com>\n> wrote:\n> >> On Tue, Mar 12, 2013 at 10:35 AM, Peter Vessenes <peter at coinlab.com>\n> wrote:\n> >>> Can some enterprising soul determine if there were any double-spend\n> attempts?\n> >>> I'm assuming no, and if that's the case, we should talk about that\n> publicly.\n> > [snip]\n> >> I agree it would be good to confirm no one was ripped off, even though\n> >> we can't say there weren't any attempts.\n> >\n> > https://bitcointalk.org/index.php?topic=152348.msg1616747#msg1616747\n> >\n> >\n> ------------------------------------------------------------------------------\n> > Everyone hates slow websites. So do we.\n> > Make your web apps faster with AppDynamics\n> > Download AppDynamics Lite for free today:\n> > http://p.sf.net/sfu/appdyn_d2d_mar\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/4b6ea7e8/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Some PR preparation",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Peter Vessenes",
                "Alan Reiner",
                "Gregory Maxwell",
                "Christian Decker"
            ],
            "messages_count": 8,
            "total_messages_chars_count": 15965
        }
    },
    {
        "title": "[Bitcoin-development] Changing the fee on already sent transactions",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2013-03-12T09:47:00",
                "message_text_only": "We can allow for transaction replacement for the purpose of adding fees\nto existing transactions safely, and while not increasing the risk of\ndouble-spends by taking advantage of the stubbed out replacement code.\n\nSpecifically the replacement code allows for the replacement of a\ntransaction if a transaction spending the tx that is being replaced is\nnot in the mempool. Specifically:\n\n664     // Check for conflicts with in-memory transactions\n665     CTransaction* ptxOld = NULL;\n666     for (unsigned int i = 0; i < tx.vin.size(); i++)\n667     {\n668         COutPoint outpoint = tx.vin[i].prevout;\n669         if (mapNextTx.count(outpoint)){\n\nFollowed by the actual replacement logic. We could change this logic to\ninstead evaluate if the candidate replacement does not remove or\ndecrease the value of any existing outputs. Adding outputs is ok.\nChanging the set of inputs is also ok, provided that there are no\nconflicts with other spent transactions. DoS attacks would be prevented\nby only forwarding/accepting into the mempool replacements that increase\nthe fees paid by at least MIN_RELAY_TX_FEE * size - essentially the same\ndecision to allow the broadcast of the transaction in the first place.\n\nBecause a transaction can not be replaced if another transaction already\ndepends on it the change would not increse double-spend risks for\nunconfirmed transactions.\n\nAlong with this change code can be added to clients to examine the\nmempool and recent blocks to determine what fee would be required to get\na transaction confirmed in what time.\n\n\nOf course, considering our recent \"fun\" last night, I'll be the first to\nadmit that this change needs a lot of testing and careful thought.\nHowever the ability to increase fees on already broadcast transactions\nwould be very valuable to users as competition for blockchain space\nincreases.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130312/f5b5dbc0/attachment.sig>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-12T13:06:49",
                "message_text_only": "On Tue, Mar 12, 2013 at 2:47 AM, Peter Todd <pete at petertodd.org> wrote:\n> Followed by the actual replacement logic. We could change this logic to\n> instead evaluate if the candidate replacement does not remove or\n> decrease the value of any existing outputs. Adding outputs is ok.\n> Changing the set of inputs is also ok, provided that there are no\n> conflicts with other spent transactions. DoS attacks would be prevented\n> by only forwarding/accepting into the mempool replacements that increase\n> the fees paid by at least MIN_RELAY_TX_FEE * size - essentially the same\n> decision to allow the broadcast of the transaction in the first place.\n\nI _strongly_  prefer this method of addressing this concern.  I think\nyou've hit the required requirements: pay at least all the same\ninputs, increase fee by at least the min_relay_tx_fee*size.\n\nThe discussion we had on IRC where some were proposing fast expiration\nwould practically lower the security of Bitcoin.\n\nWhile there is complexity and testing required here, getting full\nbranch coverage of this code would be fairly straight forward.  Doing\nthis correctly will be easier than child-pays-for-parent and although\nit does not replace child-pays-for-parent (the two techniques are\ncomplimentary in my view) it would reduce the urgency of getting\nchild-pays-for-parent included."
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-12T13:10:20",
                "message_text_only": "On Tuesday, March 12, 2013 9:47:00 AM Peter Todd wrote:\n> We can allow for transaction replacement for the purpose of adding fees\n> to existing transactions safely, and while not increasing the risk of\n> double-spends by taking advantage of the stubbed out replacement code.\n\nSide note: Adding fees is already possible by respending change, at least for \nminers running an Eligius branch (both 0.6.0 and 0.8.0).\n\nLuke"
            }
        ],
        "thread_summary": {
            "title": "Changing the fee on already sent transactions",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Gregory Maxwell",
                "Peter Todd"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 3900
        }
    },
    {
        "title": "[Bitcoin-development] 0.8.1 ideas",
        "thread_messages": [
            {
                "author": "Luke-Jr",
                "date": "2013-03-13T12:56:29",
                "message_text_only": "Here's a simple proposal to start discussion from...\n\nBEFORE block 262144:\n- Never make a block that, combined with the previous 4 blocks, results in \nover 4500 transaction modifications.\n- Reject any block that includes more than 4500 transaction modifications on \nits own (slight soft-fork)\n- (these rules should make older clients safe under most circumstances)\n\nFROM block 262144 to block 393216 (hard fork #1):\n- Never make, and reject any block that includes more than 24391 transaction \nmodifications on its own (this *should* be equivalent to 1 MB)\n- (this rules can make older client backports safe unless a reorg is more than \n6 blocks deep)\n\nFROM block 393216 onward (hard fork #2):\n- Never make, and reject any block that includes more than 48781 transaction \nmodifications on its own (this *should* be equivalent to 2 MB)\n- Accept blocks up to 2 MB in data size\n- Discontinue support for clients prior to 0.8.1\n\nI intentionally set the block numbers conservatively to try to account for the \nyet-unseen ASIC upgrade.\n\nThoughts?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-13T13:14:00",
                "message_text_only": "On Wed, Mar 13, 2013 at 5:56 AM, Luke-Jr <luke at dashjr.org> wrote:\n> FROM block 262144 to block 393216 (hard fork #1):\n> - Never make, and reject any block that includes more than 24391 transaction\n> modifications on its own (this *should* be equivalent to 1 MB)\n> - (this rules can make older client backports safe unless a reorg is more than\n> 6 blocks deep)\n\nI'm not a fan of the two stages, your before block 262144 part sounds\nfine to me, though I thought the safe number was closer to 5000.\nPerhaps 4911?\nThe goal here is to pick something which is _absolutely sure_ to be\nless than what pre-0.8 accepts (so that its is just a soft fork), but\nit need not be needlessly smaller than that.\n\nI think we can accept some small risk of \"backport\" clients getting\nstuck after large reorgs after there has been sufficient upgrade time.\n Performance reasons mean that its very likely no one will be mining\non those nodes by then, and so if they get stuck they'll just need to\nmanually unstick them. Difficulty is high enough that its unlikely\nanything important will remain stuck long enough for a malicious party\nto exploit them by mining blocks on the stuck fork.\n\nBy allowing that risk you halve the complexity of your change by not\nrequiring two hard forks.  The 'never make' half of it would probably\nbe fine.\n\nAs far as the size change, that should be a separate process after\nwe've proven the ability to make a hardforking change with something\nlow risk/low controversy like this, and only after someone has\nactually shown that the software is stable under those conditions lest\nwe get another issue like we have now where the increase in block\ntarget from 500k/250k to 1MB by a miner exposed inadequate testing."
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-13T15:05:01",
                "message_text_only": "On Wed, Mar 13, 2013 at 12:56:29PM +0000, Luke-Jr wrote:\n> Here's a simple proposal to start discussion from...\n> \n> BEFORE block 262144:\n> - Never make a block that, combined with the previous 4 blocks, results in \n> over 4500 transaction modifications.\n> - Reject any block that includes more than 4500 transaction modifications on \n> its own (slight soft-fork)\n> - (these rules should make older clients safe under most circumstances)\n> \n> FROM block 262144 to block 393216 (hard fork #1):\n> - Never make, and reject any block that includes more than 24391 transaction \n> modifications on its own (this *should* be equivalent to 1 MB)\n> - (this rules can make older client backports safe unless a reorg is more than \n> 6 blocks deep)\n> \n> FROM block 393216 onward (hard fork #2):\n> - Never make, and reject any block that includes more than 48781 transaction \n> modifications on its own (this *should* be equivalent to 2 MB)\n> - Accept blocks up to 2 MB in data size\n\nIf we're going to consider doing this, at minimum we need to also\ninclude a separate limit for how much the UTXO set can be grown by each\nblock, calculated as the size of the scriptPubKey + constant metadata.\n(tx hash, index #, nValue, nVersion, nHeight should cover it)\n\nA P2SH transaction txout would measure 71bytes under that model. Given\nthat we haven't even shown we can limit the creation of txouts that can\nnot be spent economically caution would dictate setting the UTXO growth\nlimit fairly low, say 1/4th of the block limit.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/2c3d7d5f/attachment.sig>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-13T15:18:36",
                "message_text_only": "On Wed, Mar 13, 2013 at 8:05 AM, Peter Todd <pete at petertodd.org> wrote:\n> If we're going to consider doing this, at minimum we need to also\n\nI beg people to not derail discussion about fixing things with\ndiscussion of other controversial changes.\n\nLuke-jr, any chance in getting you to revise your proposal to narrow\nthe scope to things that don't need serious debate?"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-13T15:26:14",
                "message_text_only": "On Wednesday, March 13, 2013 3:18:36 PM Gregory Maxwell wrote:\n> On Wed, Mar 13, 2013 at 8:05 AM, Peter Todd <pete at petertodd.org> wrote:\n> > If we're going to consider doing this, at minimum we need to also\n> \n> I beg people to not derail discussion about fixing things with\n> discussion of other controversial changes.\n\nI figured 2 MB in 2-3 years was fairly uncontroversial.\nIf not, let's scrap that idea for now.\n\n> Luke-jr, any chance in getting you to revise your proposal to narrow\n> the scope to things that don't need serious debate?\n\nIt was a one-time \"start the conversation\" proposal.\nI expect what we end up going with may be substantially different.\n\nLuke"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-13T16:04:21",
                "message_text_only": "On Wed, Mar 13, 2013 at 03:26:14PM +0000, Luke-Jr wrote:\n> On Wednesday, March 13, 2013 3:18:36 PM Gregory Maxwell wrote:\n> > On Wed, Mar 13, 2013 at 8:05 AM, Peter Todd <pete at petertodd.org> wrote:\n> > > If we're going to consider doing this, at minimum we need to also\n> > \n> > I beg people to not derail discussion about fixing things with\n> > discussion of other controversial changes.\n> \n> I figured 2 MB in 2-3 years was fairly uncontroversial.\n> If not, let's scrap that idea for now.\n\nThe very statement that we're willing to increase the blocksize as our\nsolution to increased transaction volume rather go down the path of\noff-chain transactions is incredibly controversial.\n\nFuck it, I'll make this public: I've had at least one person who went to\nthe trouble of finding my personal phone number just so they could leave\na few text messages saying I was going to do serious harm to Bitcoin. At\nthe same time I've also had a few people asking questions along the line\nof had started and/or was considering starting a formal group opposing\nthe blocksize increase. I even got a significant anonymous donation a\nfew weeks ago. (rather fittingly this was done by emailing me an\neasywallet URL from a throwaway account)\n\nIt's not just forum trolls who care about the issue, even if they make\nthe most noise about it.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 198 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/b5539f99/attachment.sig>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-03-13T17:41:29",
                "message_text_only": "I'm not sure I understand the need for hard forks. We can get through this\ncrisis by mining pool collusion to prevent forking blocks until there is\nwidespread adoption of patched clients.\n\nProposal:\n\n1) Patch the pre-0.8 branches to support an increased lock count, whatever\nnumber is required to make sure that this problem never shows up again at\nthe current block size (I defer to Luke-Jr and gmaxwell's numbers on this).\n\n2) Patch all branches to not *generate* blocks which trigger the lock count\nlimit. A larger block would still be accepted as valid, however, if it is\non the longest chain.\n\n3) Simultaneously, provide an additional non-standard patch to mining pool\noperators (>>50% network hash) *rejecting* blocks that trigger the lock\ncount limit. This keeps miners in collusion with each other to stay on a\n'compatibility fork'.\n\n4) At some point in the future once we've crossed an acceptable adoption\nthreshold, the miners remove the above patch in a coordinated way.\n\nDoes that not get us past this crisis without a hard-fork?\n\nMark\n\n(Aside: I'm for BOTH raising the block-size limit and off-chain\ntransactions, but like it or not there are political sides to that debate\nand we should keep politics out of crisis management.)\n\n\nOn Wed, Mar 13, 2013 at 5:56 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n> Here's a simple proposal to start discussion from...\n>\n> BEFORE block 262144:\n> - Never make a block that, combined with the previous 4 blocks, results in\n> over 4500 transaction modifications.\n> - Reject any block that includes more than 4500 transaction modifications\n> on\n> its own (slight soft-fork)\n> - (these rules should make older clients safe under most circumstances)\n>\n> FROM block 262144 to block 393216 (hard fork #1):\n> - Never make, and reject any block that includes more than 24391\n> transaction\n> modifications on its own (this *should* be equivalent to 1 MB)\n> - (this rules can make older client backports safe unless a reorg is more\n> than\n> 6 blocks deep)\n>\n> FROM block 393216 onward (hard fork #2):\n> - Never make, and reject any block that includes more than 48781\n> transaction\n> modifications on its own (this *should* be equivalent to 2 MB)\n> - Accept blocks up to 2 MB in data size\n> - Discontinue support for clients prior to 0.8.1\n>\n> I intentionally set the block numbers conservatively to try to account for\n> the\n> yet-unseen ASIC upgrade.\n>\n> Thoughts?\n>\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/adae378a/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2013-03-13T17:58:36",
                "message_text_only": "On Wed, Mar 13, 2013 at 10:41:29AM -0700, Mark Friedenbach wrote:\n> 4) At some point in the future once we've crossed an acceptable adoption\n> threshold, the miners remove the above patch in a coordinated way.\n> \n> Does that not get us past this crisis without a hard-fork?\n\nThis is a hardfork: it means some nodes will have to accept blocks they formerly considered invalid.\n\n-- \nPieter"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-03-13T18:27:13",
                "message_text_only": "This may be a semantic issue. I meant that it's not a hard-fork of the\nbitcoin protocol, which I'm taking to mean the way in which we all\n*expected* every version of the Satoshi client to behave: the rules which\nwe have documented informally on the wiki, this mailing list, and in code\ncomments, etc. I'm just trying to prevent protocol-creep.\n\nLuke-Jr is suggesting that we add-to/modify the bitcoin protocol rules\nwhich all verifying implementations must adhere to. I'm suggesting that we\ninstead change the old codebase to do what we expected it to do all along\n(what 0.8 does and what every other verifying implementation does), and\nthrough miner collusion buy ourselves enough time for people to update\ntheir own installations.\n\nI know there's people here who will jump in saying that the bitcoin\nprotocol is the behavior of the Satoshi client, period. But which Satoshi\nclient? 0.7 or 0.8? How do you resolve that without being arbitrary? And\nregardless, we are moving very quickly towards a multi-client future. This\nproblem is very clearly a *bug* in the old codebase. So let's be forward\nthinking and do what we would do in any other situation: fix the bug,\nresponsibly notify people and give them time to react, then move on. Let's\nnot codify the bug in the protocol.\n\nMark\n\n\n\nOn Wed, Mar 13, 2013 at 10:58 AM, Pieter Wuille <pieter.wuille at gmail.com>wrote:\n\n> On Wed, Mar 13, 2013 at 10:41:29AM -0700, Mark Friedenbach wrote:\n> > 4) At some point in the future once we've crossed an acceptable adoption\n> > threshold, the miners remove the above patch in a coordinated way.\n> >\n> > Does that not get us past this crisis without a hard-fork?\n>\n> This is a hardfork: it means some nodes will have to accept blocks they\n> formerly considered invalid.\n>\n> --\n> Pieter\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/a05a7b10/attachment.html>"
            },
            {
                "author": "slush",
                "date": "2013-03-13T18:35:11",
                "message_text_only": "Agree. I quite like Mark's proposal. Yes, formally it is hard fork. But the\nstep 4) can come very far in the future, when the penetration of <0.8\nclients will be mininimal.\n\nslush\n\nOn Wed, Mar 13, 2013 at 7:27 PM, Mark Friedenbach <mark at monetize.io> wrote:\n\n> This problem is very clearly a *bug* in the old codebase. So let's be\n> forward thinking and do what we would do in any other situation: fix the\n> bug, responsibly notify people and give them time to react, then move on.\n> Let's not codify the bug in the protocol.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/b9c1b3c2/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2013-03-13T18:38:25",
                "message_text_only": "On Wed, Mar 13, 2013 at 11:27:13AM -0700, Mark Friedenbach wrote:\n> I know there's people here who will jump in saying that the bitcoin\n> protocol is the behavior of the Satoshi client, period. But which Satoshi\n> client? 0.7 or 0.8?\n\nThe protocol is whatever the network enforces - and that is some mix of versions of the\nreference client right now, but doesn't need to remain that way.\n\nI would very much like to have a text book of rules that is authorative, and every client\nthat follows it would be correct. Unfortunately, that is not how a consensus system works.\nAll (full) clients validate all rules, and all must independently come to the same\nsolution. Consensus is of utmost importance, more than some theoretical \"correctness\".\nIf we'd have a specification document, and it was discovered that a lot of\nnodes on the network were doing something different than the document, those nodes would\nbe buggy, but it would be the specification that is wrong.\n\nThat is what happened: 0.7 and before had a bug, but 0.8 was wrong for not following the\nrules of the network (which I hate to say, as I'm responsible for many changes in 0.8).\n\nAs said in another thread, the problem in the old versions needs fixing (this would even\nbe the case if no 0.8 existed at all, and no fork risk existed at all). But let's please\ndo it in a way we can all agree about, in a controlled fashion.\n\n-- \nPieter"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-13T19:30:24",
                "message_text_only": "On Wed, Mar 13, 2013 at 11:27 AM, Mark Friedenbach <mark at monetize.io> wrote:\n> This may be a semantic issue. I meant that it's not a hard-fork of the\n> bitcoin protocol, which I'm taking to mean the way in which we all\n> *expected* every version of the Satoshi client to behave: the rules which we\n\nIn our common language a hardfork is a rule difference that can cause\nirreconcilable failure in consensus; it's not some political change or\nsome change in the user's understanding or something fuzzy like that.\nPlease don't creep the definitions... but arguments over definitions\nare silly.  If you really object to calling the causes consensus\nfailure thing something else okay, then suggest a name, but whatever\nits called thats what we're talking about here.\n\nYour proposal of having a hardfork but only on the mining nodes has\ncoordination problems. What happens if we don't know how to contact a\nmajority of the hashpower to get them to turn off their special\nvalidation code?  This is especially a concern because it's not\nunlikely that in a few months there may be solo miners with tens of\nTH/s... already we have a single party with nearly a majority, though\nat the moment they happen to be mining on the largest couple pools.\n\nFar better to have this special code just triggered on a deadline,\nwhich can be widely advertised as \"you must upgrade to 0.7.4 or >0.8.1\nbefore this time\" and then all switch at once... and then we\ndemonstrate the viability of a general mechanism that doesn't depend\non poor miner decentralization."
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-13T20:18:23",
                "message_text_only": "On Wednesday, March 13, 2013 6:27:13 PM Mark Friedenbach wrote:\n> Luke-Jr is suggesting that we add-to/modify the bitcoin protocol rules\n> which all verifying implementations must adhere to. I'm suggesting that we\n> instead change the old codebase to do what we expected it to do all along\n> (what 0.8 does and what every other verifying implementation does), and\n> through miner collusion buy ourselves enough time for people to update\n> their own installations.\n\nCuriously enough, at least MtGox's custom implementation stuck with the \ncanonical blockchain despite 0.8's accidental rule change.\n\n> I know there's people here who will jump in saying that the bitcoin\n> protocol is the behavior of the Satoshi client, period. But which Satoshi\n> client? 0.7 or 0.8? How do you resolve that without being arbitrary? And\n> regardless, we are moving very quickly towards a multi-client future. This\n> problem is very clearly a *bug* in the old codebase. So let's be forward\n> thinking and do what we would do in any other situation: fix the bug,\n> responsibly notify people and give them time to react, then move on. Let's\n> not codify the bug in the protocol.\n\nNo, if any other client released diverged from the consensus of all \npast/existing clients, we would do the same thing: call it a formerly unknown \nprotocol rule, that this new client has a bug implementing, and be done with \nit.\n\nThe only reason this particular issue needs special treatment is because the \nimplications of the new rule mean that we're up against a hard limit in the \nprotocol today rather than 2 years from now.\n\nLuke"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-13T18:04:08",
                "message_text_only": "On Wednesday, March 13, 2013 5:41:29 PM you wrote:\n> I'm not sure I understand the need for hard forks. We can get through this\n> crisis by mining pool collusion to prevent forking blocks until there is\n> widespread adoption of patched clients.\n\nAnything requiring widespread adoption of patched clients *is by definition* a \nhard fork.\n\n> Proposal:\n> \n> 1) Patch the pre-0.8 branches to support an increased lock count, whatever\n> number is required to make sure that this problem never shows up again at\n> the current block size (I defer to Luke-Jr and gmaxwell's numbers on this).\n\nThis is a hard fork.\n\nThe only way to avoid a hard fork is to apply the existing lock limit to all \nclients forever. That would be fine, except that pre-0.8 clients cannot reorg \nN blocks without dividing that limit by (N * 2) + 1; that leaves us with the \nlimit of around 1000 locks per block on average. Each transaction uses at \nleast 3 locks on average (many times more). So about 300 transactions per \nblock. This is a much smaller limit than the 1 MB we've been assuming is the \nbottleneck so far, and the need to increase it is much more urgent - as Pieter \nnoted on IRC, we are probably already using more than that even ignoring DP \nspam. The only reason pre-0.8 clients have survived as well as they have thus \nfar is because the blockchain has managed to avoid very deep reorgs.\n\nLuke"
            },
            {
                "author": "Andy Parkins",
                "date": "2013-03-13T21:06:44",
                "message_text_only": "On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:\n> Here's a simple proposal to start discussion from...\n\nIt seems to me that the biggest failure was not the development of two \nchains, but the assurance to users (by the client) that their transactions \nwere confirmed.\n\nIs it possible to change the definition of \"6 confirmations\" so that it's \nsomething like: \"six confirmations clear of any other chain\".  While there \nare two competing chains, it's possible that one will go pop at any moment.  \nThat makes the confirmation count of any transaction on one of those chains, \nzero.\n\nIt doesn't seem impossible that clients could be made far more permissive \nabout acknowledging the existence of blockchains that they wouldn't \nnecessarily accept themselves (if the proof of work was valid) and warning \nthe users that it's going on.\n\n\n\nAndy\n\n-- \nDr Andy Parkins\nandyparkins at gmail.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-13T21:14:03",
                "message_text_only": "On Wednesday, March 13, 2013 9:06:44 PM Andy Parkins wrote:\n> On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:\n> > Here's a simple proposal to start discussion from...\n> \n> It seems to me that the biggest failure was not the development of two\n> chains, but the assurance to users (by the client) that their transactions\n> were confirmed.\n\nThese are both the same thing.\n\nLuke"
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-13T21:22:43",
                "message_text_only": "On Wed, Mar 13, 2013 at 09:14:03PM +0000, Luke-Jr wrote:\n> On Wednesday, March 13, 2013 9:06:44 PM Andy Parkins wrote:\n> > On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:\n> > > Here's a simple proposal to start discussion from...\n> > \n> > It seems to me that the biggest failure was not the development of two\n> > chains, but the assurance to users (by the client) that their transactions\n> > were confirmed.\n> \n> These are both the same thing.\n\nThe idea of the client detecting/warning about not-trivial forking\nseems worthwhile too, though, assuming it doesn't already (AIUI it\ndoesn't).\n\nI don't know if there's any automatic monitoring for forks, but if not\nI would assume that the core devs and/or Bitcoin Foundation would be\nplanning to put some in place.  But there's no reason I can see why\nend users clients should't be warning of such situations, too, when\nthey can (obviously they won't always be aware of the fork).\n\nroy"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-13T21:27:01",
                "message_text_only": "On Wed, Mar 13, 2013 at 2:22 PM, Roy Badami <roy at gnomon.org.uk> wrote:\n> The idea of the client detecting/warning about not-trivial forking\n> seems worthwhile too, though, assuming it doesn't already (AIUI it\n> doesn't).\n\nIt does warn\u2014 if its heard the fork and its on the lower difficulty\nside. Extending that to also alert if its on the winning side and the\nfork is long enough might be wise, though I have a little concern that\nit'll be mistaken to be more dependable than it would be."
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-13T21:36:08",
                "message_text_only": "On Wed, Mar 13, 2013 at 02:27:01PM -0700, Gregory Maxwell wrote:\n> On Wed, Mar 13, 2013 at 2:22 PM, Roy Badami <roy at gnomon.org.uk> wrote:\n> > The idea of the client detecting/warning about not-trivial forking\n> > seems worthwhile too, though, assuming it doesn't already (AIUI it\n> > doesn't).\n> \n> It does warn??? if its heard the fork and its on the lower difficulty\n> side. Extending that to also alert if its on the winning side and the\n> fork is long enough might be wise, though I have a little concern that\n> it'll be mistaken to be more dependable than it would be.\n\nStill, it would have meant that all 0.8 users would have immediatley\nbeen told that something was wrong.  I don't know to what extent it\nwas luck that this was dealt with as promptly and efficiently as it\nwas, but to the extent that luck was involved, a slew of 0.8 users\nshouting in various places \"wtf is going on\" couldn't but help in\nreducing the element of luck if something similar were to happen again.\n\nroy"
            },
            {
                "author": "Cameron Garnham",
                "date": "2013-03-14T00:18:12",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\nI think that the course of action is quite simple:\n\n1.  Upgrade all the clients to implement the lock limits. (in code,\nnot at the DB exception layer).  A bit of research is needed to work\nout exactly what these limits are so we can maximise the number of\ntransactions.\n\n2. Fix the DB layer, and test that all the clients can support 1MB blocks.\n\n3. Once we are confident that the network supports 1MB blocks, set a\ndate where the lock limits are removed.\n\nFor me, everyone signed up to bitcoin thinking that there was a 1MB /\nblock limit.  The lock limits were unexpected, and could be considered\nextremely uncontroversial to remove.\n\nThe discussion of larger blocks (i.e. > 1MB ),  that I happen to\ndisagree with,  is not relevant to the discussion of the removal of\nthe lock limits.\n\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.19 (MingW32)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niF4EAREIAAYFAlFBF0QACgkQBJ8cMDO159aWbwEAs8Ldt8hRpzjS4HdrH3U9Jnaq\nMWhifXqkJuVC0TVCz3EBAOAfSogdSS7rJvtfV8FqTIox1ek/xJxuHvZdonUnQN1K\n=I5Cf\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Benjamin Lindner",
                "date": "2013-03-15T17:06:20",
                "message_text_only": "On Mar 13, 2013, at 8:18 PM, Cameron Garnham <da2ce7 at gmail.com> wrote:\n> For me, everyone signed up to bitcoin thinking that there was a 1MB /\n> block limit.  The lock limits were unexpected, and could be considered\n> extremely uncontroversial to remove.\n\nThis. Software behavior which is not described by the source code should not be considered an integral part of the rule set.\nAny influence of external libraries on the consensus mechanism is unacceptable."
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-15T19:23:00",
                "message_text_only": "On Friday, March 15, 2013 5:06:20 PM Benjamin Lindner wrote:\n> On Mar 13, 2013, at 8:18 PM, Cameron Garnham <da2ce7 at gmail.com> wrote:\n> > For me, everyone signed up to bitcoin thinking that there was a 1MB /\n> > block limit.  The lock limits were unexpected, and could be considered\n> > extremely uncontroversial to remove.\n> \n> This. Software behavior which is not described by the source code should\n> not be considered an integral part of the rule set. Any influence of\n> external libraries on the consensus mechanism is unacceptable.\n\nNote that the lock limits were explicitly set in the bitcoind source code."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-15T19:52:18",
                "message_text_only": "On Fri, Mar 15, 2013 at 10:06 AM, Benjamin Lindner <ben at benlabs.net> wrote:\n> This. Software behavior which is not described by the source code should not be considered an integral part of the rule set.\n> Any influence of external libraries on the consensus mechanism is unacceptable.\n\nNo one thinks its controversial to remove it or that it's a good thing\nto have\u2014 only that its technically somewhat complicated and risky to\nremove it."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-13T20:24:50",
                "message_text_only": "On Wed, Mar 13, 2013 at 1:10 PM, Matthew Mitchell\n<matthewmitchell at thelibertyportal.com> wrote:\n> Why would it be a difficulty in getting people to update away from 0.7 and earlier? How long would that roughly take? If people are hesitant to update, imagine if a more serious vulnerability is found. It could be disastrous.\n\nThe development community backports critical fixes which makes\nupdating instead of upgrading possible, but that still is not free.\nMany people are carrying patches against Bitcoin which require\nintegration and time for testing\u2014 even if its just an update. Small\nbehavior changes can still break things for the users. For example, a\nmajor mining pool lost well over 1000 BTC when upgrading to 0.8\nbecause the reindex interacted poorly with their pool server software\nand caused them to pay people 25 BTC per share, an update or upgrade\nis just a risky even whos risk can be minimized if its done at your\nown pace.\n\nSometimes when there is a vulnerability what people will do is isolate\ntheir production nodes from the internet using upgraded nodes, so they\navoid touching the production systems. Other times the vulnerability\nis only a DOS attack so they ignore it unless the attack happens, or\nonly applies to something else they don't care about.\n\nAnother point is that if everyone instantly upgrades in response to\ndevelopers claim that an urgent is needed (as opposed to implementing\nother workarounds) then the security of the system much more obviously\nreduces to the ability to compromise a developer\u2014 something no one\nshould want. When roll outs take time there is more time for review to\ncatch things, fewer nodes harmed by an introduced flaw, etc."
            }
        ],
        "thread_summary": {
            "title": "0.8.1 ideas",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "slush",
                "Roy Badami",
                "Peter Todd",
                "Gregory Maxwell",
                "Andy Parkins",
                "Mark Friedenbach",
                "Benjamin Lindner",
                "Pieter Wuille",
                "Cameron Garnham"
            ],
            "messages_count": 24,
            "total_messages_chars_count": 27263
        }
    },
    {
        "title": "[Bitcoin-development] Blocksize and off-chain transactions",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2013-03-13T17:01:43",
                "message_text_only": "> The very statement that we're willing to increase the blocksize as our\n> solution to increased transaction volume rather go down the path of\n> off-chain transactions is incredibly controversial.\n\nI really don't understand this either/or mentality.\n\nOF COURSE we're going to raise the block size limit. Limiting the main\nblockchain to single-digit transactions-per-second is not an option,\nthe vision FOREVER has been to scale it up.\n\nAnd OF COURSE there will be off-chain transactions-- at the very\nleast, we need them for \"instantly confirmed\" transactions.\n\nBut lets table that whole discussion until 0.8.1 is out the door.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-13T17:48:38",
                "message_text_only": "On Wed, Mar 13, 2013 at 01:01:43PM -0400, Gavin Andresen wrote:\n> > The very statement that we're willing to increase the blocksize as our\n> > solution to increased transaction volume rather go down the path of\n> > off-chain transactions is incredibly controversial.\n> \n> I really don't understand this either/or mentality.\n\nYou said it best yourself:\n\n10:48 < gavinandresen> Luke-Jr: argument for another day, but I can\nalmost guarantee that the blocksize limit will be raised in less than 2\nyears, just based on pressure from the big businesses using the chain\n(and no, NOT satoshidice)\n\nDecentralization offers big businesses nothing; they're a regulation\ntarget already by virtue of size alone.\n\n> OF COURSE we're going to raise the block size limit. Limiting the main\n> blockchain to single-digit transactions-per-second is not an option,\n> the vision FOREVER has been to scale it up.\n> \n> And OF COURSE there will be off-chain transactions-- at the very\n> least, we need them for \"instantly confirmed\" transactions.\n> \n> But lets table that whole discussion until 0.8.1 is out the door.\n> \n> -- \n> --\n> Gavin Andresen\n> \n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 198 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/9b7de93c/attachment.sig>"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-13T18:01:02",
                "message_text_only": "Please note that it was not 0.8 that had issues, but 0.7(and downwards).\n\nI really think changing features in 0.8 aiming for a fluffy limit to avoid lock object errors on 0.7 is the wrong way to go, and it will never cover for a similar situations in the future.\n\nInstead I would like to propose a setup for \"considerate mining\":\n* Run pools either on newest or second newest version (up to you depending on which features you like as a pool admin) - say e.g. 0.8\n* Connect to the rest of the bitcoin network _only_ through a node of the other version - say e.g. 0.7\n\nThis guarantees that no blocks will get into the network that will not be accepted by both 0.8 and 0.7. Those two  versions together should add up to say >90%.\n\nOnce everyone else (90%) have upgraded to the newest, (0.8), drop the 0.7 and start to introduce 0.9 instead.\n\n/M"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-13T18:08:17",
                "message_text_only": "On Wednesday, March 13, 2013 6:01:02 PM Michael Gronager wrote:\n> Please note that it was not 0.8 that had issues, but 0.7(and downwards).\n\nWhile 0.7 and earlier do have issues, they also define the Bitcoin protocol. \n0.8's failure to comply with the protocol is an issue."
            },
            {
                "author": "Pieter Wuille",
                "date": "2013-03-13T18:28:06",
                "message_text_only": "On Wed, Mar 13, 2013 at 07:01:02PM +0100, Michael Gronager wrote:\n> Please note that it was not 0.8 that had issues, but 0.7(and downwards).\n> \n> I really think changing features in 0.8 aiming for a fluffy limit to avoid lock object errors on 0.7 is the wrong way to go, and it will never cover for a similar situations in the future.\n\nThe current behaviour in 0.7 and before is indeed broken, and we cannot afford to keep\nthat as an implicitly-defined rule on the network. I fully agree with that, but it will\nrequire a hardfork.\n\nBut we cannot just drop support for old nodes. It is completely unreasonable to put the\n_majority_ of the network on a fork, without even as much as a discussion about it.\n\"Oh, you didn't get the memo? The rules implemented in your client are outdated.\" - that\nis not how Bitcoin works: the network defines the rules.\n\nIMHO, the way to go is first get a 0.8.1 out that mimics the old behaviour - just as a\nstopgap solution. That will allow miners to safely use 0.8-based code at least. We can\nalso get patches for 0.7 and previous branches that fix the lock limit issue, but enforce\nthe same limit as 0.8.1 does, simply as band-aid for those who do not yet wish to upgrade\nto 0.8.\n\nFinally, we'll have to schedule a hard fork to drop the 0.8.1 limit. This is something\nthat requires widespread community consensus - far more than just miners and developers -\nbut as this is about fixing a bug that would otherwise prevent most evolution, I hope it\ncan be a very non-controversial one. To that end, I would prefer to limit this hard fork\nto only direct bug fixes, and leave the block limit issue for later. By now, I think it\nis clear that a hard fork will be inevitable, and by doing one, I think we can learn a\nlot that can make later ones easier.\n\n-- \nPieter"
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-13T19:29:52",
                "message_text_only": "On Wed, Mar 13, 2013 at 07:28:06PM +0100, Pieter Wuille wrote:\n\n> IMHO, the way to go is first get a 0.8.1 out that mimics the old\n> behaviour - just as a stopgap solution.\n\nPresumably not emulate too precisely, at least if your initial report\nthat the block caused 0.7 to 'get stuck' was correct.  A network that\nhas a mix of 0.8.1 nodes (which will reject the block) and 0.7 nodes\n(which will hang when receiving the block?) would appear to remove the\nfork risk.  Is it obvious that no other serious problems remain in\nsuch a network?\n\n(Although I note your proposal to patch 0.7 too, so hopefully the\nnetwork wouldn't remain in that state for very long)\n\nroy"
            },
            {
                "author": "Stephen Pair",
                "date": "2013-03-13T19:43:15",
                "message_text_only": "On Wed, Mar 13, 2013 at 2:28 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:\n\n> But we cannot just drop support for old nodes. It is completely\n> unreasonable to put the\n> _majority_ of the network on a fork, without even as much as a discussion\n> about it.\n> \"Oh, you didn't get the memo? The rules implemented in your client are\n> outdated.\" - that\n> is not how Bitcoin works: the network defines the rules.\n> ...\n> Finally, we'll have to schedule a hard fork to drop the 0.8.1 limit. This\n> is something\n> that requires widespread community consensus - far more than just miners\n> and developers\n\n\nThe way I've started thinking about it is that there is a market for\nsecuring a payment network.  In that market you have consumers (users of\nbitcoin) and providers (miners).  It's not clear to me that if the\noverwhelming majority of miners stayed on 0.8 that the 0.7 fork wouldn't\nhave still won out in the long run because effectively what you would have\nhad is a situation where the providers abandon a large portion of their\ncustomers (0.7 users) and start providing a service that is in much less\ndemand.  Would everyone have upgraded to 0.8?  Maybe, but maybe not.  Maybe\nmany people would have made the rational decision to stay on earlier\nversions and the small minority of miners that choose to service the 0.7\nfork could have earned more Bitcoin on that fork...and maybe in the long\nrun, the majority of miners on 0.8 would realize this situation and start\nto trickle back over to the 0.7 fork.  The flip side of the equation is\nthat the users have a pretty compelling reasons to use the services of the\nmost secure network (less risk of double spends).  So, the users very well\ncould have made the rational decision to consume the services of the most\npowerful network and made the switch to 0.8.\n\nWhat happened in reality is that the majority of the mining community made\nthe rational decision to service the largest pool of customers (0.8 as well\nas 0.7 and earlier users).  It was rational because the risk of servicing\nonly the 0.8 users would have been much greater.\n\nBecause of this dynamic, I doubt there would ever be multiple forks of any\nconsequence in permanent coexistence.  I would even go so far as to say\nthat at this point, a successful competitor to Bitcoin would have to arise\nas a fork of the UTXOs in the block chain (even if the competitor didn't\neven use a block chain).  That competitor might even have to begin life in\nlock step co-existence with Bitcoin, recognizing all Bitcoin transactions\nfor some period of time while it attempts to gain market share.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130313/6dcc7347/attachment.html>"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-13T20:14:24",
                "message_text_only": "I hear consensus that at some point we need a hardfork (== creating blocks that will not be accepted by <0.7 clients).\n\nMiners generate block, hence they are the ones who should filter themselves though some consensus. \n\n\n> But we cannot just drop support for old nodes. It is completely unreasonable to put the\n> _majority_ of the network on a fork, without even as much as a discussion about it.\n> \"Oh, you didn't get the memo? The rules implemented in your client are outdated.\" - that\n> is not how Bitcoin works: the network defines the rules.\n\nConsensus was rapidly reached a day ago: To ensure the majority (all of?) the network could accept the blocks mined, and not just 0.8. This was the right decision! Too many was dependent on <=0.7\n\nSo, the question is not if, but when to do a hardfork. We need to define and monitor the % of nodes running different versions (preferably a weighted average - some nodes, like e.g. blockchain.info & mtgox serve many...). Once there was the rowit bitcoinstatus page - do we have another resource for this ?\n\nThen the second question is how to ensure we don't create a fork again? Pieter (and others?) are of the opinion that we should mimic a 0.7 lock-object-starvation-reject-rule. I don't like this for three reasons:\n1. I find it hard to ensure we have actually coined the bug precisely\n2. I expect that similar issues will happen again\n3. The current issue was between two versions, but in the future it could be between two implementations - then trying implement or even to coordinate strange rules becomes very unlikely.\n\nHence the scheme for \"considerate mining\" - it is the only scheme that guarantees 100% that no block are released that will not be accepted by a supermajority of the install base.\n\nAnother nice thing about it - it requires no development :)\n\nSo simply run in serial in front of all considerate miners nodes of different versions until a certain threshold of the install base is reached.\n\n/M"
            }
        ],
        "thread_summary": {
            "title": "Blocksize and off-chain transactions",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Michael Gronager",
                "Roy Badami",
                "Peter Todd",
                "Stephen Pair",
                "Gavin Andresen",
                "Pieter Wuille"
            ],
            "messages_count": 8,
            "total_messages_chars_count": 10397
        }
    },
    {
        "title": "[Bitcoin-development] On fork awareness Was: 0.8.1 ideas",
        "thread_messages": [
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-13T21:15:22",
                "message_text_only": "On Wed, Mar 13, 2013 at 2:06 PM, Andy Parkins <andyparkins at gmail.com> wrote:\n> On Wednesday 13 Mar 2013 12:56:29 Luke-Jr wrote:\n>> Here's a simple proposal to start discussion from...\n>\n> It seems to me that the biggest failure was not the development of two\n> chains, but the assurance to users (by the client) that their transactions\n\nThe development of two chains was maximally bad because the state was\nirreconcilable without the manual intervention. The only reason you're\nsaying that it was only the false confirms that were bad is because\nmanual intervention resolved the worse badness. :)  A whole bunch of\npeople spending coins that can only exist in the different exclusive\nchains would have been very bad indeed.\n\n> Is it possible to change the definition of \"6 confirmations\" so that it's\n> something like: \"six confirmations clear of any other chain\".  While there\n> are two competing chains, it's possible that one will go pop at any moment.\n> That makes the confirmation count of any transaction on one of those chains,\n> zero.\n\nNot reliably, you will only hear of a competing chain if some of your\npeers have accepted it. If your peers were all pre-0.8 or all 0.8 you\nonly would have heard of one chain.\n\nRelaying non-primary chains has some obvious and subtle challenges\u2014\nObviously you need some way of preventing it from being a DOS vector,\nbut thats not a fundamental issue\u2014 you could rate limit by only\nrelaying chains which are close to the current best in sum difficulty\u2014\njust a software engineering one.\n\nA more subtle issue is it that it's not in a node's self-interest to\ntell peers about a chain it thinks is invalid: it wants its peers on\n_its_ view of the consensus, not some other one.  Though perhaps this\ncould be addressed by only relaying headers for non-primary chains."
            }
        ],
        "thread_summary": {
            "title": "On fork awareness Was: 0.8.1 ideas",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gregory Maxwell"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1806
        }
    },
    {
        "title": "[Bitcoin-development] Ok to use 0.8.x?",
        "thread_messages": [
            {
                "author": "grarpamp",
                "date": "2013-03-14T02:49:36",
                "message_text_only": "Assuming a new install and first time connection to the net,\nis using 0.8.x [1] safe to use, for all (or select?) purposes,\nregarding the current fork issue?\n\nIf not, is there a recommended branch, tag, or commit, for\nall such (or select?) purposes, until such time as an upgrade\nalert is broadcasted?\n\nThanks.\n\n[1] Regarding possible 0.8.x flavors...\n\nThere are only 'branch master' and 'tag v0.8.0' here:\nhttps://github.com/bitcoin/bitcoin\n\nThere are no 0.8.x branch or tags here yet:\nhttps://git.gitorious.org/bitcoin/bitcoind-stable"
            },
            {
                "author": "Gavin Andresen",
                "date": "2013-03-14T04:01:46",
                "message_text_only": "Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.\n\nSo: safe for everybody except solo miners / pool operators.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Michael Gronager",
                "date": "2013-03-14T08:33:24",
                "message_text_only": "> Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.\n> \n> So: safe for everybody except solo miners / pool operators.\n\nAnd even solo miners / pool operators can use it if connected to the network only through a 0.7 node."
            },
            {
                "author": "grarpamp",
                "date": "2013-03-16T22:04:18",
                "message_text_only": ">> Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.\n>>\n>> So: safe for everybody except solo miners / pool operators.\n>\n> And even solo miners / pool operators can use it if connected to the network only through a 0.7 node.\n\nI'll go ahead and use 0.8.x since it will be just transactions and queries.\n\nI'm guessing this will all be fixed in a couple weeks and that ASIC and FPGA\nminers will have their softcode updated, as will the pure softminers (GPU)."
            },
            {
                "author": "Peter Todd",
                "date": "2013-03-16T22:17:09",
                "message_text_only": "Hardware mining rigs do not need updating - they all are designed to connect directly to a pool and it is the pool that makes all block related decisions. All the miner, or as I prefer to call them hasher, sees is an 80 byte block header and possibly with stratum and getblocktemplate enough other information like a partial merkle tree to roll the extranonce.\n\nOn 2013-03-16, at 18:04, grarpamp <grarpamp at gmail.com> wrote:\n\n>>> Bitcoin version 0.8.0 is safe to use for everything EXCEPT creating blocks.\n>>> \n>>> So: safe for everybody except solo miners / pool operators.\n>> \n>> And even solo miners / pool operators can use it if connected to the network only through a 0.7 node.\n> \n> I'll go ahead and use 0.8.x since it will be just transactions and queries.\n> \n> I'm guessing this will all be fixed in a couple weeks and that ASIC and FPGA\n> miners will have their softcode updated, as will the pure softminers (GPU).\n> \n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            }
        ],
        "thread_summary": {
            "title": "Ok to use 0.8.x?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Todd",
                "Gavin Andresen",
                "Michael Gronager",
                "grarpamp"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 2800
        }
    },
    {
        "title": "[Bitcoin-development] 0.8.1 plan",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2013-03-17T01:13:51",
                "message_text_only": "Here's the plan for the 0.8.1 release:\n\nA new CheckBlock() rule, in effect until 15 May, that ensure only\nblocks compatible with old releases are accepted into the main chain\n(only blocks that touch 4,500 or fewer distinct txids are allowed).\n\nA limit of 500k to blocks created, also in effect until 15 May.\n\nAlerts will be sent to pre-0.8 releases over the next two months,\ntelling people to either upgrade or create a DB_CONFIG file so they\ncan handle large blocks.\n\nCode is : https://github.com/bitcoin/bitcoin/pull/2373\n\nI chose May 15 arbitrarily; two months seems like a reasonable 'quick'\namount of time to give people to upgrade/workaround.\n\nThe fix was written to be trivial to port to previous versions, and to\nbe as simple as possible.\n\nSome of the exact details may still change before the 0.8.1 release\n(e.g. it might not be exactly 4,500 distinct txids).\n\nSchedule:\n\n0.8.1 binaries late tomorrow or Monday.  An expires-after-24-hours\nAlert sent on Tuesday to everybody running pre-0.8, pointing to\nhttp://bitcoin.org/may15.html\n\nAnother 24-hour Alert sent on April 15, reminding everybody again they\nwill need to upgrade or workaround.\n\nA final Alert that never expires sent on May 8th.\n\nAfter May 15, miners will be free to create blocks up to 1MB, and\nanybody running old versions who ignored the alerts may be left\nbehind.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Alan Reiner",
                "date": "2013-03-17T02:03:31",
                "message_text_only": "On 03/16/2013 09:13 PM, Gavin Andresen wrote:\n> I chose May 15 arbitrarily; two months seems like a reasonable 'quick'\n> amount of time to give people to upgrade/workaround.\n>\n\nMaybe you should wait until after the Bitcoin Conference -- if something\ngoes wacky on May 15th but then everyone is getting on a plane to go to\nSan Jose two days later, it may create unnecessary stress.  It's\nprobably not a big deal, but if the date is arbitrary anyway, why not\njust push back one more week?\n\n-Alan"
            },
            {
                "author": "Frank F",
                "date": "2013-03-17T02:20:14",
                "message_text_only": "On Sat, Mar 16, 2013 at 9:03 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n\n> On 03/16/2013 09:13 PM, Gavin Andresen wrote:\n> > I chose May 15 arbitrarily; two months seems like a reasonable 'quick'\n> > amount of time to give people to upgrade/workaround.\n> >\n>\n> Maybe you should wait until after the Bitcoin Conference -- if something\n> goes wacky on May 15th but then everyone is getting on a plane to go to\n> San Jose two days later, it may create unnecessary stress.  It's\n> probably not a big deal, but if the date is arbitrary anyway, why not\n> just push back one more week?\n>\n\nWell, he did make the bitcoin.org/may15.html page already. It would be\ncrazy to change that now.\n\n>\n> -Alan\n>\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n*MONEY IS OVER!*\n                                IF YOU WANT IT<http://www.zeitgeistmovie.com/>\n=====================================================\nThe causes of my servitude can be traced to the tyranny of money.\n-Serj Tankian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130316/c50f31c4/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2013-03-17T02:31:38",
                "message_text_only": "> Well, he did make the bitcoin.org/may15.html page already. It would be crazy\n> to change that now.\n\nNot crazy, just inconvenient, and possibly confusing.\n\nI'm going to be pretty stubborn about the dates. I'm just not\ninterested in lots of discussion about what the perfect times/dates\nwill be, there are much more important things that need to get done\nsoon.\n\nLike hard-forking to increase the 1MB blocksize limit.  This will be\ngood practice for that.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-17T15:29:37",
                "message_text_only": "On Sunday, March 17, 2013 2:20:14 AM Frank F wrote:\n> Well, he did make the bitcoin.org/may15.html page already. It would be\n> crazy to change that now.\n\nOTOH, the page's recommended config isn't really too ideal. While the new lock \nlimit should be good for up to 2 block deep reorgs, I doubt merchants/miners \nwant to get stuck if someone pulls off a 3-block deep reorg. Since we usually \nconsider 6 blocks to be \"confirmed beyond impossibility of reversal\", a limit \nof at least 292692 should probably be recommended. Additionally, I suspect \nset_lg_max may need bumping upward - but I'm not quite sure how to calculate \nthe correct value there.\n\nWhy does the example config do set_lg_dir? That will screw things up should \nthe client be using some other directory for any reason..\n\nAlso, please add a note that 0.4.x, 0.5.x, 0.6.x, and 0.7.x will be receiving \nbackports in their next stable releases sometime before May 15.\n\nLuke"
            }
        ],
        "thread_summary": {
            "title": "0.8.1 plan",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Alan Reiner",
                "Gavin Andresen",
                "Frank F"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 4834
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin-Qt/bitcoind version 0.8.1 available",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2013-03-18T15:32:49",
                "message_text_only": "Bitcoin-Qt/bitcoind version 0.8.1 is available from:\n  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n\nThis is a maintenance release that adds a new network rule to avoid a\nchain-forking incompatibility with versions 0.7.2 and earlier.\n\nSource code for this release is in a 0.8.1 tree branched directly from\nthe 0.8.0 release:\n  https://github.com/bitcoin/bitcoin/tree/0.8.1\n\n-- \n--\nGavin Andresen\nChief Scientist, Bitcoin Foundation\nhttps://www.bitcoinfoundation.org/"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin-Qt/bitcoind version 0.8.1 available",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gavin Andresen"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 491
        }
    },
    {
        "title": "[Bitcoin-development] [ANNOUNCE] bitcoin erlang daemon",
        "thread_messages": [
            {
                "author": "Randy Willis",
                "date": "2013-03-18T18:41:11",
                "message_text_only": "Hello all!\nFor some time I was working on bitcoin daemon implementation in erlang. \nNow it's in the early stage of development. I'm trying to implement protocol not looking into bitcoind source, but using specification from https://en.bitcoin.it/wiki (found one bug so far), original paper and looking at the protocol messages which I get from peers.\n\nMy goal is to make scalable bitcoin daemon, capable of serving many thousands of peers on relatively low-end servers.\nAt current state it's capable of connecting and parsing messages from 3000+ peers on 256M RAM VPS without swap. It does not do much besides protocol parsing and peer discovery now, but it's only several days old. Chances are that it connected to your machine - check for /ebtcd:0.0.1/ user-agent in logs.\nShort term pans: accept incoming connections, announce own address via addr message.\nMid term plans: add validation and routing (test on testnet), release source under open license (AGPL sounds good).\nLong term: full-featured daemon.\n\nP.S. In case someone wants to encourage me with some BTC, I set up donation adress:\n1GVmS56pvVL7YZA7YqMBXmaDedCoputKuJ"
            }
        ],
        "thread_summary": {
            "title": "bitcoin erlang daemon",
            "categories": [
                "Bitcoin-development",
                "ANNOUNCE"
            ],
            "authors": [
                "Randy Willis"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1128
        }
    },
    {
        "title": "[Bitcoin-development] New webpage:  Offline Backups",
        "thread_messages": [
            {
                "author": "Alan Reiner",
                "date": "2013-03-21T19:39:23",
                "message_text_only": "I noticed the new webpage is up on bitcoin.org.   I still have mixed\nfeelings about it, but I noticed there is a \"You need to know!\" section\nthat suggests offline backups.\n\nAs long as you are featuring Armory and Electrum on the \"wallets\" page,\nyou should be including them in that blurb as options for offline\nstorage.  It's kind of silly to say \"/You must do this!  But we have no\nrecommendations for how.  At all.  Good luck/!\"  At least have a\ndedicated page or (not-ideally, forum post) describing the various\noptions and leads for them to follow for actually doing it. \n\n-Alan\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130321/6ddafe9a/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "New webpage:  Offline Backups",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Alan Reiner"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 765
        }
    },
    {
        "title": "[Bitcoin-development] A bitcoin UDP P2P protocol extension",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2013-03-23T07:17:06",
                "message_text_only": "Here is a rough draft implementation of a UDP P2P protocol extension\nfor bitcoin:\n\n     https://github.com/jgarzik/bitcoin/tree/udp\n     http://yyz.us/bitcoin/udp-v0.patch\n\nProtocol specification (such that it is):\n\n- UDP, bound to same port as TCP P2P (normally 8333)\n- Active, simultaneous TCP P2P connection required (useful against DoS\nand other attacks)\n- Same message format as TCP P2P, same pchMessageStart conventions,\netc. (my CNetMessage pull req would be helpful here)\n- Multiple P2P messages per UDP packet permitted\n- Max UDP packet size 100*1024 bytes\n- Advertises NODE_UDP in nServices\n- New \"getudpcook\" TCP P2P command returns a \"udpcook\" message,\ncontaining a yummy cookie\n- UDP P2P commands \"inv\", \"tx\" and \"addr\" are handled as if received via TCP\n- UDP P2P command \"udpsub\" sets a mask, that subscribes to one or more\ndata broadcasts.\n- When USM_INV_BCAST mask bit is set, receive \"inv\" messages via UDP\nrather than TCP.\n\nProject and design goals (or, why do this?):\n\n- It is theorized that UDP may be useful for some messages we\nbroadcast throughout the network\n- A productive discussion STARTS with code, otherwise discussion\ncontinues forever.\n- Investigate improving \"inv\" relay speed\n- Investigate unconditional \"tx\" broadcasting via UDP, as \"inv\"\nalternative, for small tx's.\n- Investigate improving block relay speed (or perhaps block header relay speed)\n- Open up new design avenues, for P2P patterns more suited to UDP than\nTCP in general.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Randy Willis",
                "date": "2013-03-23T10:42:26",
                "message_text_only": "Not looked at code yet, some thoughts:\n\n1) In IPv4 max UDP data size is 65507 bytes.\n2) What about big messages (block)?\n3) I think relay speed can be increased only by reducing network diameter. \n\nIntroducing super-nodes with thousands of connected peers can greatly help here.\n4) The only (IMO) UDP advantage: hole punching. But requirement of active \n\nTCP connection defies it. And hole punching will need protocol extension.\n5) unsolicited tx broadcast will increase traffic of nodes (especially well-connected)\nand less people will run them.\n\n\n---- Original Message -----\n\nFrom: Jeff Garzik <jgarzik at exmulti.com>\nTo: Bitcoin Development <bitcoin-development at lists.sourceforge.net>\nCc: \nSent: Saturday, March 23, 2013 7:17 AM\nSubject: [Bitcoin-development] A bitcoin UDP P2P protocol extension\n\nHere is a rough draft implementation of a UDP P2P protocol extension\nfor bitcoin:\n\n\u00a0 \u00a0 https://github.com/jgarzik/bitcoin/tree/udp\n\u00a0 \u00a0  http://yyz.us/bitcoin/udp-v0.patch\n\nProtocol specification (such that it is):\n\n- UDP, bound to same port as TCP P2P (normally 8333)\n- Active, simultaneous TCP P2P connection required (useful against DoS\nand other attacks)\n- Same message format as TCP P2P, same pchMessageStart conventions,\netc. (my CNetMessage pull req would be helpful here)\n- Multiple P2P messages per UDP packet permitted\n- Max UDP packet size 100*1024 bytes\n- Advertises NODE_UDP in nServices\n- New \"getudpcook\" TCP P2P command returns a \"udpcook\" message,\ncontaining a yummy cookie\n- UDP P2P commands \"inv\", \"tx\" and \"addr\" are handled as if received via TCP\n- UDP P2P command \"udpsub\" sets a mask, that subscribes to one or more\ndata broadcasts.\n- When USM_INV_BCAST mask bit is set, receive \"inv\" messages via UDP\nrather than TCP.\n\nProject and design goals (or, why do this?):\n\n- It is theorized that UDP may be useful for some messages we\nbroadcast throughout the network\n- A productive discussion STARTS with code, otherwise discussion\ncontinues forever.\n- Investigate improving \"inv\" relay speed\n- Investigate unconditional \"tx\" broadcasting via UDP, as \"inv\"\nalternative, for small tx's.\n- Investigate improving block relay speed (or perhaps block header relay speed)\n- Open up new design avenues, for P2P patterns more suited to UDP than\nTCP in general.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com\n\n------------------------------------------------------------------------------\nEveryone hates slow websites. So do we.\nMake your web apps faster with AppDynamics\nDownload AppDynamics Lite for free today:\nhttp://p.sf.net/sfu/appdyn_d2d_mar\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-23T14:52:20",
                "message_text_only": "On Saturday, March 23, 2013 10:42:26 AM Randy Willis wrote:\n> Introducing super-nodes with thousands of connected peers can greatly help\n> here.\n\nUDP is connectionless.\nI would hope any UDP bitcoin protocol doesn't try to emulate a connection. :/\n\nLuke"
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-03-23T15:24:41",
                "message_text_only": "On Sat, Mar 23, 2013 at 10:52 AM, Luke-Jr <luke at dashjr.org> wrote:\n> On Saturday, March 23, 2013 10:42:26 AM Randy Willis wrote:\n>> Introducing super-nodes with thousands of connected peers can greatly help\n>> here.\n>\n> UDP is connectionless.\n> I would hope any UDP bitcoin protocol doesn't try to emulate a connection. :/\n\nIt depends on the usage.  Simply broadcasting a TX or INV to a remote\npeer does not require a connection, clearly...  but you probably want\nto signal acceptance of those messages somehow.\n\nBut other uses, like subscribing to a broadcast, does require some\nnotion of an association.\n\nIn the rough draft, a parallel TCP connection with version/verack\nsequence is required, and you may make use of it if a connection is\nneeded.\n\nBut that is just one approach.  A more robust, heavyweight UDP P2P\nmight be a hole-punching TCP alternative.  It's up to the community\nand results of experimentation.\n\nBittorrent has evolved a full transfer protocol over UDP, to get\naround firewalls and the like.\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Caleb James DeLisle",
                "date": "2013-03-23T22:01:45",
                "message_text_only": "On 03/23/2013 11:24 AM, Jeff Garzik wrote:\n> On Sat, Mar 23, 2013 at 10:52 AM, Luke-Jr <luke at dashjr.org> wrote:\n>> On Saturday, March 23, 2013 10:42:26 AM Randy Willis wrote:\n>>> Introducing super-nodes with thousands of connected peers can greatly help\n>>> here.\n>>\n>> UDP is connectionless.\n>> I would hope any UDP bitcoin protocol doesn't try to emulate a connection. :/\n> \n> It depends on the usage.  Simply broadcasting a TX or INV to a remote\n> peer does not require a connection, clearly...  but you probably want\n> to signal acceptance of those messages somehow.\n> \n> But other uses, like subscribing to a broadcast, does require some\n> notion of an association.\n> \n> In the rough draft, a parallel TCP connection with version/verack\n> sequence is required, and you may make use of it if a connection is\n> needed.\n> \n> But that is just one approach.  A more robust, heavyweight UDP P2P\n> might be a hole-punching TCP alternative.  It's up to the community\n> and results of experimentation.\n> \n> Bittorrent has evolved a full transfer protocol over UDP, to get\n> around firewalls and the like.\n> \n\nBittorrent uses UDP in 2 ways and for different reasons.\n\nThe tracker protocol is now UDP because large trackers are under such\nenormous strain from short lived HTTP connections (40Gb/s) that there\nhave been instances of upstream routers becoming overloaded from the\nstorm of SYN, ACK and FIN messages. UDP helps solve that.\n\nThe inter-peer protocol is now UDP because TCP does not play nice in\nthe context of bufferbloat and Bittorrent needs lots of active TCP\nconnections to work, exacerbating the problem. In this instance\nBittorrent uses a full userspace TCP stack which just sends w/ UDP.\n\n\n+1 for experimenting with UDP, we might learn some interesting things.\n\nIt's worthwhile to actually speed test UDP v. TCP because the time to\nsend an INV on an established TCP connection with Nagle disabled may\nnot be significantly longer than that for sending with UDP.\n\nAlso +1 for experimentation with sending a small transaction instead\nof an INV, if INVs are not being grouped because we want the fastest\npossible network propagation, they are mostly overhead anyway. If\nb/w is more important than propagation speed then of course TCP/Nagle\nis the way to go.\n\nThanks,\nCaleb"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-03-23T22:30:22",
                "message_text_only": "If you're considering a datagram protocol, you might be interested in some\nmore modern alternatives to UDP:\n\nUDT: Breaking the Data Transfer Bottleneck\nhttp://udt.sourceforge.net/\n\nStream Control Transmission Protocol\nhttp://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol\n\n\n\nOn Sat, Mar 23, 2013 at 12:17 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> Here is a rough draft implementation of a UDP P2P protocol extension\n> for bitcoin:\n>\n>      https://github.com/jgarzik/bitcoin/tree/udp\n>      http://yyz.us/bitcoin/udp-v0.patch\n>\n> Protocol specification (such that it is):\n>\n> - UDP, bound to same port as TCP P2P (normally 8333)\n> - Active, simultaneous TCP P2P connection required (useful against DoS\n> and other attacks)\n> - Same message format as TCP P2P, same pchMessageStart conventions,\n> etc. (my CNetMessage pull req would be helpful here)\n> - Multiple P2P messages per UDP packet permitted\n> - Max UDP packet size 100*1024 bytes\n> - Advertises NODE_UDP in nServices\n> - New \"getudpcook\" TCP P2P command returns a \"udpcook\" message,\n> containing a yummy cookie\n> - UDP P2P commands \"inv\", \"tx\" and \"addr\" are handled as if received via\n> TCP\n> - UDP P2P command \"udpsub\" sets a mask, that subscribes to one or more\n> data broadcasts.\n> - When USM_INV_BCAST mask bit is set, receive \"inv\" messages via UDP\n> rather than TCP.\n>\n> Project and design goals (or, why do this?):\n>\n> - It is theorized that UDP may be useful for some messages we\n> broadcast throughout the network\n> - A productive discussion STARTS with code, otherwise discussion\n> continues forever.\n> - Investigate improving \"inv\" relay speed\n> - Investigate unconditional \"tx\" broadcasting via UDP, as \"inv\"\n> alternative, for small tx's.\n> - Investigate improving block relay speed (or perhaps block header relay\n> speed)\n> - Open up new design avenues, for P2P patterns more suited to UDP than\n> TCP in general.\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130323/8332c01d/attachment.html>"
            },
            {
                "author": "Jay F",
                "date": "2013-03-24T00:57:09",
                "message_text_only": "My first concern was that I and about everyone else only has TCP/UDP \nport forwarding, but at least for the first:\n\nUDT uses UDP to transfer bulk data with its own reliability control and \ncongestion control mechanisms. Multiple UDT flows can share a single UDP \nport, thus a firewall can open only one UDP port for all UDT connections.\n\nThe latter appears not so friendly to NAT.\n\n\nOn 3/23/2013 3:30 PM, Mark Friedenbach wrote:\n> If you're considering a datagram protocol, you might be interested in \n> some more modern alternatives to UDP:\n>\n> UDT: Breaking the Data Transfer Bottleneck\n> http://udt.sourceforge.net/\n>\n> Stream Control Transmission Protocol\n> http://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol\n>\n>\n>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-24T01:22:24",
                "message_text_only": "On Sat, Mar 23, 2013 at 5:57 PM, Jay F <jayf at outlook.com> wrote:\n> My first concern was that I and about everyone else only has TCP/UDP\n> port forwarding,\n\nYou tunnel it!\nhttp://tools.ietf.org/html/draft-tuexen-tsvwg-sctp-dtls-encaps-00\n\nYou could do worse to have a data stream that looks like WEBRTC traffic\u2026\n\nIn some ways SCTP is a pretty optimal transport for Bitcoin like messaging."
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-03-24T02:08:41",
                "message_text_only": "On Sat, Mar 23, 2013 at 9:22 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> In some ways SCTP is a pretty optimal transport for Bitcoin like messaging.\n\nDarn near everything can be shoehorned into a \"message\"   So\nabsolutely agreed... in theory.  Been an SCTP fan for years.\n\nFirewall practices tend to put a damper on cool new protocols like that, though.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Ralph J.Mayer",
                "date": "2013-03-24T09:11:24",
                "message_text_only": "> Been an SCTP fan for years.\n\nI have never seen SCTP out there. \nAny example where it is used?\n\n> Firewall practices tend to put a damper on cool new protocols like that, though.\n\nWe are a bit old fashioned, indeed. \n\n\nrm\nsec-guy"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-03-24T02:27:31",
                "message_text_only": "Nearly all of these new(er) user-mode transports run over UDP, so you can\nhole-punch and port forward just the same. Some which don't can\nnevertheless be tunneled, to the same effect.\n\nUltimately I don't have any skin in this game though. Just trying to save\nsomeone from reinventing a perfectly good wheel ;)\n\n\nOn Sat, Mar 23, 2013 at 5:57 PM, Jay F <jayf at outlook.com> wrote:\n\n> My first concern was that I and about everyone else only has TCP/UDP\n> port forwarding, but at least for the first:\n>\n> UDT uses UDP to transfer bulk data with its own reliability control and\n> congestion control mechanisms. Multiple UDT flows can share a single UDP\n> port, thus a firewall can open only one UDP port for all UDT connections.\n>\n> The latter appears not so friendly to NAT.\n>\n>\n> On 3/23/2013 3:30 PM, Mark Friedenbach wrote:\n> > If you're considering a datagram protocol, you might be interested in\n> > some more modern alternatives to UDP:\n> >\n> > UDT: Breaking the Data Transfer Bottleneck\n> > http://udt.sourceforge.net/\n> >\n> > Stream Control Transmission Protocol\n> > http://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol\n> >\n> >\n> >\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_d2d_mar\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130323/882902c5/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "A bitcoin UDP P2P protocol extension",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr",
                "Caleb James DeLisle",
                "Ralph J.Mayer",
                "Randy Willis",
                "Gregory Maxwell",
                "Jay F",
                "Mark Friedenbach"
            ],
            "messages_count": 11,
            "total_messages_chars_count": 14047
        }
    },
    {
        "title": "[Bitcoin-development] Upcoming network event: block v2 lock-in",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2013-03-23T16:16:19",
                "message_text_only": "Once a supermajority (95%) of mining reaches block version 2,\nnVersion==1 blocks will be rejected.  This event seems likely to occur\nin the next week.\n\nVersion 2 block specification: https://en.bitcoin.it/wiki/BIP_0034\n\nWatching for the event: http://blockorigin.pfoe.be/top.php  The text\nis at the bottom:\n\"We are currently at 100 out of the latest 1000 blocks on version 1\n(10.00%) and 899 out of the latest 1000 blocks on version 2 (89.90%)\"\n\nUsers should not be impacted.  Some ancient miners will produce\nnewly-invalid blocks (v1), that will get ignored.  The easy solution\nis to mine using a recent bitcoind (0.7 or later).  If you are a miner\nand need help upgrading to v2, ping us on #bitcoin-dev or\nbitcoin-development at lists.sourceforge.net.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-23T17:09:05",
                "message_text_only": "On Saturday, March 23, 2013 4:16:19 PM Jeff Garzik wrote:\n> Users should not be impacted.  Some ancient miners will produce\n> newly-invalid blocks (v1), that will get ignored.  The easy solution\n> is to mine using a recent bitcoind (0.7 or later).  If you are a miner\n> and need help upgrading to v2, ping us on #bitcoin-dev or\n> bitcoin-development at lists.sourceforge.net.\n\nI don't think anyone is mining using bitcoind 0.7 or later? Deepbit is the \nonly pool I know of using bitcoind at all, and it's based on 0.3.21 (or about \nthat)...\n\np2pool has supported v2 blocks since 2012 Aug 8.\nEloipool has supported v2 blocks since 2012 Sep 1.\nslush's stratum server has supported v2 blocks since it was written.\n\nI'm not aware of any other maintained open source poolservers.\nAt least PoolServerJ and ecoinpool are known to break when v2 blocks become \nmandatory."
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-03-23T17:28:55",
                "message_text_only": "On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:\n> I don't think anyone is mining using bitcoind 0.7 or later?\n\nslush, BTC Guild, ozcoin too I think, several others.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-23T17:43:57",
                "message_text_only": "On Saturday, March 23, 2013 5:28:55 PM Jeff Garzik wrote:\n> On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > I don't think anyone is mining using bitcoind 0.7 or later?\n> \n> slush, BTC Guild, ozcoin too I think, several others.\n\nNot for producing coinbases (where BIP 34 is implemented)."
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-03-23T17:47:46",
                "message_text_only": "On Sat, Mar 23, 2013 at 1:43 PM, Luke-Jr <luke at dashjr.org> wrote:\n> On Saturday, March 23, 2013 5:28:55 PM Jeff Garzik wrote:\n>> On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:\n>> > I don't think anyone is mining using bitcoind 0.7 or later?\n>>\n>> slush, BTC Guild, ozcoin too I think, several others.\n>\n> Not for producing coinbases (where BIP 34 is implemented).\n\nSure, that is largely the pool server layer.  But it is misleading to\nimply that bitcoind is nowhere in the stack.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-23T17:51:47",
                "message_text_only": "On Saturday, March 23, 2013 5:47:46 PM Jeff Garzik wrote:\n> On Sat, Mar 23, 2013 at 1:43 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > On Saturday, March 23, 2013 5:28:55 PM Jeff Garzik wrote:\n> >> On Sat, Mar 23, 2013 at 1:09 PM, Luke-Jr <luke at dashjr.org> wrote:\n> >> > I don't think anyone is mining using bitcoind 0.7 or later?\n> >> \n> >> slush, BTC Guild, ozcoin too I think, several others.\n> > \n> > Not for producing coinbases (where BIP 34 is implemented).\n> \n> Sure, that is largely the pool server layer.  But it is misleading to\n> imply that bitcoind is nowhere in the stack.\n\nContext is everything.\nbitcoind is nowhere in the implementation of the miner end of BIP 34."
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-03-23T18:21:32",
                "message_text_only": "On Sat, Mar 23, 2013 at 1:51 PM, Luke-Jr <luke at dashjr.org> wrote:\n> bitcoind is nowhere in the implementation of the miner end of BIP 34.\n\nAgain, not strictly true.\n\nbitcoind's 'getblocktemplate' RPC call used by some supplies the block\nversion, selects transactions for the miner, and other tasks integral\nto the implementation of the miner and BIP 34.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-03-23T18:27:20",
                "message_text_only": "On Saturday, March 23, 2013 6:21:32 PM Jeff Garzik wrote:\n> On Sat, Mar 23, 2013 at 1:51 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > bitcoind is nowhere in the implementation of the miner end of BIP 34.\n> \n> Again, not strictly true.\n> \n> bitcoind's 'getblocktemplate' RPC call used by some supplies the block\n> version, selects transactions for the miner, and other tasks integral\n> to the implementation of the miner and BIP 34.\n\nTransaction selection and everything else bitcoind does, is irrelevant to BIP \n34. It is incompatible with getblocktemplate for coinbase-creating software to \nproduce v2 blocks without implementing BIP 34 themselves, even if the upstream \nGBT server specifies it."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-23T19:18:03",
                "message_text_only": "On Sat, Mar 23, 2013 at 10:47 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> On Sat, Mar 23, 2013 at 1:43 PM, Luke-Jr <luke at dashjr.org> wrote:\n>> Not for producing coinbases (where BIP 34 is implemented).\n> Sure, that is largely the pool server layer.  But it is misleading to\n> imply that bitcoind is nowhere in the stack.\n\nYou're both right: BIP34's addition of the height is implemented in\nthe coinbase generator, so for almost everyone the Bitcoind version is\nnot very relevant for that.  Rejection of invalid chains, however, is\nin the Bitcoin daemon.  Upgrading bitcoind alone should be sufficient\nto prevent the creation of forks, though if miners would like to avoid\nlosing income they must update _both_ so that they don't create\ninvalid blocks or mine on invalid forks."
            }
        ],
        "thread_summary": {
            "title": "Upcoming network event: block v2 lock-in",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr",
                "Gregory Maxwell"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 5347
        }
    },
    {
        "title": "[Bitcoin-development] Key retirement and key compromise",
        "thread_messages": [
            {
                "author": "Roy Badami",
                "date": "2013-03-25T20:49:11",
                "message_text_only": "On Fri, Feb 22, 2013 at 11:08:51PM +0000, I wrote:\n\n> What would be really nice is for bitcoin to have a big key compromise\n> button, which would automatically transfer all coins to newly\n> generated addresses (optionally with a pause between generation and\n> transaction - to allow for a new wallet backup).  Optionally, too, the\n> compromised/retired addresses could be marked with a flag such that if\n> someone sends coins to that address bitcoind immediately generates a\n> transaction to transfer the coins to address(es) which are good.\n\nOn Mon, Feb 25, 2013 at 09:23:53AM -0800, Andrew Poelstra wrote:\n\n> The problem with automatic transactions would be: by repeatedly sending\n> money to an address and seeing if it always moves quickly, an attacker\n> can identify (a) that an address is in use, (b) which public key it has\n> (if this isn't already public), and (c) that the key is believed to be\n> compromised.\n\nI realise on reflection that what I really want is not automatic\ntransmissions, but a means to revoke an address.\n\nThe problem is that after transfering the coins from the compromised\naddresses to a new, hopefully safe address, what to do about the fact\nthat third parties might still try to send me coins to an old,\ncompromised address.  So what I think I'm suggesting is that there\nshould be an address revocation protocol, such that clients will give\nan error if their user tries to send coins to a revoked address.\n\nUnless we think that direct payments to addresses will become\ncompletely obsolete once the payment protocol is in use, in which case\n(maybe) this functionality belongs in the payment protocol instead -\nbut I remain unconvinced of that.\n\nI'm not envisaging something as drastic as changing the rules to make\ntransactions to revoked addresses invalid - just an overlay protocol.\nAlthough to be useful such a protocol would have to be pretty much\nuniversally implemented by clients.\n\nThoughts?\n\nroy"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-03-25T21:10:53",
                "message_text_only": "On Mon, Mar 25, 2013 at 1:49 PM, Roy Badami <roy at gnomon.org.uk> wrote:\n> I'm not envisaging something as drastic as changing the rules to make\n> transactions to revoked addresses invalid - just an overlay protocol.\n> Although to be useful such a protocol would have to be pretty much\n> universally implemented by clients.\n\nThat is quite drastic enough, as it requires adding more perpetual\ndata that must remain in fast lookup for all validating nodes (the set\nof revoked 'addresses').\n\nKeep in mind that this is only improvement for what is a usually\ninadvisable usage of Bitcoin to begin with... you should not be\nreusing addresses."
            },
            {
                "author": "Roy Badami",
                "date": "2013-03-25T21:35:45",
                "message_text_only": "On Mon, Mar 25, 2013 at 02:10:53PM -0700, Gregory Maxwell wrote:\n> On Mon, Mar 25, 2013 at 1:49 PM, Roy Badami <roy at gnomon.org.uk> wrote:\n> > I'm not envisaging something as drastic as changing the rules to make\n> > transactions to revoked addresses invalid - just an overlay protocol.\n> > Although to be useful such a protocol would have to be pretty much\n> > universally implemented by clients.\n> \n> That is quite drastic enough, as it requires adding more perpetual\n> data that must remain in fast lookup for all validating nodes (the set\n> of revoked 'addresses').\n\nMaybe it should be possible for addresses to contain expiry dates, so\nthat revocation lists don't need to hang around forever.\n\n> Keep in mind that this is only improvement for what is a usually\n> inadvisable usage of Bitcoin to begin with... you should not be\n> reusing addresses.\n\nIt may be inadvisable but in many cases it is pretty much unavoidable\nas Bitcoin stands today.  Granted, the payment protocol will help with\nthat in many use cases...\n\nroy"
            }
        ],
        "thread_summary": {
            "title": "Key retirement and key compromise",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Roy Badami",
                "Gregory Maxwell"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 3598
        }
    }
]