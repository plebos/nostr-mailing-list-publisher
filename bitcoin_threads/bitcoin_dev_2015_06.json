[
    {
        "title": "[Bitcoin-development] Fwd: Block Size Increase Requirements",
        "thread_messages": [
            {
                "author": "Pindar Wong",
                "date": "2015-06-01T00:03:36",
                "message_text_only": "On Mon, Jun 1, 2015 at 7:58 AM, Ricardo Filipe <ricardojdfilipe at gmail.com>\nwrote:\n\n> 2015-06-01 0:40 GMT+01:00 Pindar Wong <pindar.wong at gmail.com>:\n> >\n> >\n> > On Mon, Jun 1, 2015 at 7:23 AM, Ricardo Filipe <\n> ricardojdfilipe at gmail.com>\n> > wrote:\n> >>\n> >> He also said that the equation for miners has many variables, as it\n> >> should. There is no disadvantage if the network speed is the same\n> >> between the miners.\n> >\n> >\n> > Hi,\n> >\n> > Is that an assumption?\n> no, let me rephrase: The disadvantage alex refers to only exists if\n> miners do not have the same network speed.\n>\n> >\n> >> If there is a difference in network speed, the\n> >> miner is incentivized to invest in their network infrastructure.\n> >\n> >\n> > Perhaps it's best not to  assume that investing in Internet network\n> > infrastructure's a free or open market everywhere.\n> Just like easy ASIC access, low price electricity, etc are not a free\n> and open market.\n>\n\n-- point well made and taken.\n\np.\n\n\n>\n> >\n> > p.\n> >\n> >>\n> >>\n> >> 2015-05-31 23:55 GMT+01:00 Alex Mizrahi <alex.mizrahi at gmail.com>:\n> >> >> Yes, if you are on a slow network then you are at a (slight)\n> >> >> disadvantage.\n> >> >> So?\n> >> >\n> >> >\n> >> > Chun mentioned that his pool is on a slow network, and thus bigger\n> >> > blocks\n> >> > give it an disadvantage. (Orphan rate is proportional to block size.)\n> >> > You said that no, on contrary those who make big blocks have a\n> >> > disadvantage.\n> >> > And now you say that yes, this disadvantage exist.\n> >> >\n> >> > Did you just lie to Chun?\n> >> >\n> >> >\n> >> >\n> >> >\n> ------------------------------------------------------------------------------\n> >> >\n> >> > _______________________________________________\n> >> > Bitcoin-development mailing list\n> >> > Bitcoin-development at lists.sourceforge.net\n> >> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >> >\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/80dd82e6/attachment.html>"
            },
            {
                "author": "Alex Mizrahi",
                "date": "2015-06-01T07:57:03",
                "message_text_only": "> He also said that the equation for miners has many variables, as it\n> should.\n\n\nHe only said that AFTER I called him on his bullshit.\nBefore that he wrote it like there is 100% certainty that only the party\nproducing big blocks is punished:\n\n\"That orphan rate increase will go to whoever is producing the 20MB blocks,\nNOT you.\"\n\n\n> There is no disadvantage if the network speed is the same\n> between the miners.\n\n\nWhich is exactly not the situation they were discussing. This assumption is\nnot reasonable.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/f222ed42/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T10:13:55",
                "message_text_only": "Whilst it would be nice if miners in China can carry on forever regardless\nof their internet situation, nobody has any inherent \"right\" to mine if\nthey can't do the job - if miners in China can't get the trivial amounts of\nbandwidth required through their firewall and end up being outcompeted then\nOK, too bad, we'll have to carry on without them.\n\nBut I'm not sure why it should be a big deal. They can always run a node on\na server in Taiwan and connect the hardware to it via a VPN or so.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/0d79eaed/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-01T10:42:05",
                "message_text_only": "On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> Whilst it would be nice if miners in China can carry on forever regardless\n> of their internet situation, nobody has any inherent \"right\" to mine if\n> they can't do the job - if miners in China can't get the trivial amounts of\n> bandwidth required through their firewall and end up being outcompeted then\n> OK, too bad, we'll have to carry on without them.\n>\n\nI'd rather think of mining as a responsibility than a right per se, but\nyou're right in so far as it's competitive and self-correcting.\n\n\n>\n> But I'm not sure why it should be a big deal. They can always run a node\n> on a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n>\n Let's agree to disagree on this point.\n\np.\n\n------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/46657e6a/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-01T11:26:34",
                "message_text_only": "On Mon, Jun 01, 2015 at 06:42:05PM +0800, Pindar Wong wrote:\n> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n> \n> > Whilst it would be nice if miners in China can carry on forever regardless\n> > of their internet situation, nobody has any inherent \"right\" to mine if\n> > they can't do the job - if miners in China can't get the trivial amounts of\n> > bandwidth required through their firewall and end up being outcompeted then\n> > OK, too bad, we'll have to carry on without them.\n> >\n> \n> I'd rather think of mining as a responsibility than a right per se, but\n> you're right in so far as it's competitive and self-correcting.\n\nIt's important to remember that the service Bitcoin miners are providing\nus is *not* transaction validation, but rather decentralization.\nValidation is something every full node does already; there's no\nshortage of it. What's tricky is designing a Bitcoin protocol that\ncreates the appropriate incentives for mining to remain decentralized,\nso we get good value for the large amount of money being sent to miners.\n\nI've often likened this task to building a robot to go to the grocery\nstore to buy milk for you. If that robot doesn't have a nose, before\nlong store owners are going to realise it can't tell the difference\nbetween unspoilt and spoilt milk, and you're going to get ripped off\npaying for a bunch of spoiled milk.\n\nDesigning a Bitcoin protocol where we expect \"competition\" to result in\nsmaller miners in more geographically decentralized places to get\noutcompeted by larger miners who are more geographically centralized\ngets us bad value for our money. Sure it's \"self-correcting\", but not in\na way that we want.\n\n> > But I'm not sure why it should be a big deal. They can always run a node\n> > on a server in Taiwan and connect the hardware to it via a VPN or so.\n> >\n> >\n>  Let's agree to disagree on this point.\n\nNote how that VPN, and likely VPS it's connected too, immediately adds\nanother one or two points of failure to the whole system. Not only does\nthis decrease reliability, it also decreases security by making attacks\nsignificantly easier - VPS security is orders of magnitude worse than\nthe security of physical hardware.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000e187b95a9159d04a3586dd4cbc068be88a3eafcb5b885f9\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/9505014d/attachment.sig>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-01T12:19:12",
                "message_text_only": "Two very valid and important points. Thank you for making these\nobservations Peter.\n\np.\n\n\nOn Mon, Jun 1, 2015 at 7:26 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Mon, Jun 01, 2015 at 06:42:05PM +0800, Pindar Wong wrote:\n> > On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n> >\n> > > Whilst it would be nice if miners in China can carry on forever\n> regardless\n> > > of their internet situation, nobody has any inherent \"right\" to mine if\n> > > they can't do the job - if miners in China can't get the trivial\n> amounts of\n> > > bandwidth required through their firewall and end up being outcompeted\n> then\n> > > OK, too bad, we'll have to carry on without them.\n> > >\n> >\n> > I'd rather think of mining as a responsibility than a right per se, but\n> > you're right in so far as it's competitive and self-correcting.\n>\n> It's important to remember that the service Bitcoin miners are providing\n> us is *not* transaction validation, but rather decentralization.\n> Validation is something every full node does already; there's no\n> shortage of it. What's tricky is designing a Bitcoin protocol that\n> creates the appropriate incentives for mining to remain decentralized,\n> so we get good value for the large amount of money being sent to miners.\n>\n> I've often likened this task to building a robot to go to the grocery\n> store to buy milk for you. If that robot doesn't have a nose, before\n> long store owners are going to realise it can't tell the difference\n> between unspoilt and spoilt milk, and you're going to get ripped off\n> paying for a bunch of spoiled milk.\n>\n> Designing a Bitcoin protocol where we expect \"competition\" to result in\n> smaller miners in more geographically decentralized places to get\n> outcompeted by larger miners who are more geographically centralized\n> gets us bad value for our money. Sure it's \"self-correcting\", but not in\n> a way that we want.\n>\n> > > But I'm not sure why it should be a big deal. They can always run a\n> node\n> > > on a server in Taiwan and connect the hardware to it via a VPN or so.\n> > >\n> > >\n> >  Let's agree to disagree on this point.\n>\n> Note how that VPN, and likely VPS it's connected too, immediately adds\n> another one or two points of failure to the whole system. Not only does\n> this decrease reliability, it also decreases security by making attacks\n> significantly easier - VPS security is orders of magnitude worse than\n> the security of physical hardware.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 00000000000000000e187b95a9159d04a3586dd4cbc068be88a3eafcb5b885f9\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/495ef5e9/attachment.html>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-01T11:02:05",
                "message_text_only": "On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n> Whilst it would be nice if miners in China can carry on forever regardless\n> of their internet situation, nobody has any inherent \"right\" to mine if they\n> can't do the job - if miners in China can't get the trivial amounts of\n> bandwidth required through their firewall and end up being outcompeted then\n> OK, too bad, we'll have to carry on without them.\n>\n> But I'm not sure why it should be a big deal. They can always run a node on\n> a server in Taiwan and connect the hardware to it via a VPN or so.\n\nIgnorant. You seem do not understand the current situation. We\nsuffered from orphans a lot when we started in 2013. It is now your\nturn. If Western miners do not find a China-based VPN into China, or\nif Western pools do not manage to improve their connectivity to China,\nor run a node in China, it would be them to have higher orphans, not\nus. Because we have 50%+."
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-01T11:09:13",
                "message_text_only": "I think it would be helpful if we could all *chill* and focus on the solid\nengineering necessary to make Bitcoin succeed.\n\np.\n\n\nOn Mon, Jun 1, 2015 at 7:02 PM, Chun Wang <1240902 at gmail.com> wrote:\n\n> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n> > Whilst it would be nice if miners in China can carry on forever\n> regardless\n> > of their internet situation, nobody has any inherent \"right\" to mine if\n> they\n> > can't do the job - if miners in China can't get the trivial amounts of\n> > bandwidth required through their firewall and end up being outcompeted\n> then\n> > OK, too bad, we'll have to carry on without them.\n> >\n> > But I'm not sure why it should be a big deal. They can always run a node\n> on\n> > a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n> Ignorant. You seem do not understand the current situation. We\n> suffered from orphans a lot when we started in 2013. It is now your\n> turn. If Western miners do not find a China-based VPN into China, or\n> if Western pools do not manage to improve their connectivity to China,\n> or run a node in China, it would be them to have higher orphans, not\n> us. Because we have 50%+.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/e773ec57/attachment.html>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-01T11:20:46",
                "message_text_only": "I cannot believe why Gavin (who seems to have difficulty to spell my\nname correctly.) insists on his 20MB proposal regardless the\ncommunity. BIP66 has been introduced for a long time and no one knows\nwhen the 95% goal can be met. This change to the block max size must\ntake one year or more to be adopted. We should increase the limit and\nincrease it now. 20MB is simply too big and too risky, sometimes we\nneed compromise and push things forward. I agree with any solution\nlower than 10MB in its first two years.\n\nOn Mon, Jun 1, 2015 at 7:02 PM, Chun Wang <1240902 at gmail.com> wrote:\n> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n>> Whilst it would be nice if miners in China can carry on forever regardless\n>> of their internet situation, nobody has any inherent \"right\" to mine if they\n>> can't do the job - if miners in China can't get the trivial amounts of\n>> bandwidth required through their firewall and end up being outcompeted then\n>> OK, too bad, we'll have to carry on without them.\n>>\n>> But I'm not sure why it should be a big deal. They can always run a node on\n>> a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n> Ignorant. You seem do not understand the current situation. We\n> suffered from orphans a lot when we started in 2013. It is now your\n> turn. If Western miners do not find a China-based VPN into China, or\n> if Western pools do not manage to improve their connectivity to China,\n> or run a node in China, it would be them to have higher orphans, not\n> us. Because we have 50%+.\n\nOn Mon, Jun 1, 2015 at 7:02 PM, Chun Wang <1240902 at gmail.com> wrote:\n> On Mon, Jun 1, 2015 at 6:13 PM, Mike Hearn <mike at plan99.net> wrote:\n>> Whilst it would be nice if miners in China can carry on forever regardless\n>> of their internet situation, nobody has any inherent \"right\" to mine if they\n>> can't do the job - if miners in China can't get the trivial amounts of\n>> bandwidth required through their firewall and end up being outcompeted then\n>> OK, too bad, we'll have to carry on without them.\n>>\n>> But I'm not sure why it should be a big deal. They can always run a node on\n>> a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n> Ignorant. You seem do not understand the current situation. We\n> suffered from orphans a lot when we started in 2013. It is now your\n> turn. If Western miners do not find a China-based VPN into China, or\n> if Western pools do not manage to improve their connectivity to China,\n> or run a node in China, it would be them to have higher orphans, not\n> us. Because we have 50%+."
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-01T13:59:31",
                "message_text_only": "On Mon, Jun 1, 2015 at 7:20 AM, Chun Wang <1240902 at gmail.com> wrote:\n\n> I cannot believe why Gavin (who seems to have difficulty to spell my\n> name correctly.) insists on his 20MB proposal regardless the\n> community. BIP66 has been introduced for a long time and no one knows\n> when the 95% goal can be met. This change to the block max size must\n> take one year or more to be adopted. We should increase the limit and\n> increase it now. 20MB is simply too big and too risky, sometimes we\n> need compromise and push things forward. I agree with any solution\n> lower than 10MB in its first two years.\n>\n>\nThanks, that's useful!\n\nWhat do other people think?  Would starting at a max of 8 or 4 get\nconsensus?  Scaling up a little less than Nielsen's Law of Internet\nBandwidth predicts for the next 20 years?  (I think predictability is\nREALLY important).\n\nI chose 20 because all of my testing shows it to be safe, and all of my\nback-of-the-envelope calculations indicate the costs are reasonable.\n\nIf consensus is \"8 because more than order-of-magnitude increases are\nscary\" -- ok.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6b7b4f7c/attachment.html>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-01T14:08:29",
                "message_text_only": "That is good. I oppose 20MB because I estimate it may increase the\noverall orphan rate to an unacceptable level. 5MB, 8MB or probably\n10MB should be ok.\n\nOn Mon, Jun 1, 2015 at 9:59 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> On Mon, Jun 1, 2015 at 7:20 AM, Chun Wang <1240902 at gmail.com> wrote:\n>>\n>> I cannot believe why Gavin (who seems to have difficulty to spell my\n>> name correctly.) insists on his 20MB proposal regardless the\n>> community. BIP66 has been introduced for a long time and no one knows\n>> when the 95% goal can be met. This change to the block max size must\n>> take one year or more to be adopted. We should increase the limit and\n>> increase it now. 20MB is simply too big and too risky, sometimes we\n>> need compromise and push things forward. I agree with any solution\n>> lower than 10MB in its first two years.\n>>\n>\n> Thanks, that's useful!\n>\n> What do other people think?  Would starting at a max of 8 or 4 get\n> consensus?  Scaling up a little less than Nielsen's Law of Internet\n> Bandwidth predicts for the next 20 years?  (I think predictability is REALLY\n> important).\n>\n> I chose 20 because all of my testing shows it to be safe, and all of my\n> back-of-the-envelope calculations indicate the costs are reasonable.\n>\n> If consensus is \"8 because more than order-of-magnitude increases are scary\"\n> -- ok.\n>\n> --\n> --\n> Gavin Andresen"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T15:33:41",
                "message_text_only": "I'm OK with a smaller size + a formula that ramps it up over time. We are\nfar from having enough demand to fill 10MB blocks, let alone 20MB today.\n\nTo put it in perspective, to be feeling squeezed inside 10MB within two\nyears, we would need to double usage five times. I wish I knew a way to\nmake that happen. So the chances of us going to 20MB blocks full of real\ntransactions any time soon is close to zero short of some amazing killer\napp that takes the world by storm (in which case: yay, nice problem to\nhave). As long as capacity significantly outpaces organic growth, we should\navoid problems.\n\nThe reason to pick 20MB then is merely one of expedience: we have to pick a\nnumber, 20 is tested and seems to work, and we don't want to get caught by\nsurprise if demand does outstrip expectations.\n\nStill, I question the underlying logic. We have no idea what connectivity\ninto China will look like a few years from now: it's seems to be a function\nof politics rather than hardware trends. It might go down rather than up.\nSo 10 vs 20 feels a bit arbitrary. We can't let the Chinese government\ndictate how Bitcoin is used, that would never be accepted by the rest of\nthe world. But if we optimistically assume things don't get worse, and 10\n== more acceptance, then alright - it should make no difference in practice.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/e1fcd67d/attachment.html>"
            },
            {
                "author": "\u00c1ngel Jos\u00e9 Riesgo",
                "date": "2015-06-01T16:06:14",
                "message_text_only": "Hi everyone,\n\nI'm a long-time lurker of this mailing list but it's the first time I post\nhere, so first of all I'd like to thank all of the usual contributors for\nthe great insights and technical discussions that can be found here. As\nthis is such a momentous point in the history of Bitcoin, I'd just like to\nthrow in my opinion too.\n\nFirst, I agree with Oliver Egginger's message that it's much more elegant\nto keep the numbers as powers of 2 rather than introducing somewhat\narbitrary numbers like 20. This also makes it easier to count the level of\nsupport for what would be a clear spectrum of discrete levels (1, 2, 4, ...\n32, 64, ..., infinite). If a temporary peace accord can be reached with a\nvalue like 8 or 16, this will buy us some time for both the user base to\ncontinue growing without hitting the limit and for newer technologies like\nthe lightning network to be developed and tested. We will also see whether\nthe relatively small increase causes any unexpected harm or whether (as I\nexpect) everything continues to run smoothly.\n\nPersonally, I'd like to see Bitcoin grow and become what I think most\nBitcoin users like myself expect from it: that it should be a payment\nnetwork directly accessible to people all over the world. In my opinion, it\nis the proposition of Bitcoin as a form of electronic money that\nadditionally makes it a good store of value. I don't believe in the idea\nthat it can exist as just some sort of digital gold for a geeky financial\nelite. And I haven't been persuaded by those who claim the scarcity of\nblock space is an economic fundamental of Bitcoin either. It seems to me\nthere's a lot of batty economic ideas being bandied about regarding the\nsupposed long-term value of the cap without much justification. In this\nsense, my sympathies are with those who want to remove the maximum block\nsize cap. This was after all the original idea, so it's not fair for the\n1MB camp to claim that they're the ones preserving the essences of Bitcoin.\n\nBut, anyway, I also think that a consensus at this point would be much\nbetter than a head-on confrontation between two incompatible pieces of\nsoftware competing to gain the favour of a majority of exchanges and\nmerchants. With this in mind, can't we accept the consensus that raising\nthe hard-coded limit to a value like 8MB buys us a bit of time and should\nbe at least palatable to everyone? This may not be what the staunch\nsupporters of the 1MB limit want, but it's also not what I and others would\nwant, so we're talking about finding some common ground here, and not about\none side getting their way to the detriment or humiliation of the other.\n\nThe problem with a compromise based on a one-off maximum-size increase, of\ncourse, is that we're just kicking the can down the road and the discussion\nwill continue. It's not a solution I like, but how can we get people like\nsay Greg Maxwell or Pieter Wuille to accept something more drastic? If they\nfind a new maximum-size cap acceptable, then it could be a reasonable\ncompromise. A new cap will let us test the situation and see how the\nBitcoin environment reacts. The next time the discussion crops up (probably\nvery soon, I know...), we may all have a better understanding of the\nimplications.\n\n\u00c1ngel Jos\u00e9 Riesgo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/f631e338/attachment.html>"
            },
            {
                "author": "Oliver Egginger",
                "date": "2015-06-01T14:46:15",
                "message_text_only": "On Mon, Jun 1, 2015 at 3:59 PM, Gavin Andresen wrote:\n> What do other people think?  Would starting at a max of 8 or 4 get\n> consensus?  Scaling up a little less than Nielsen's Law of Internet\n> Bandwidth predicts for the next 20 years?  (I think predictability is\n> REALLY important).\n> \n> I chose 20 because all of my testing shows it to be safe, and all of my\n> back-of-the-envelope calculations indicate the costs are reasonable.\n> \n> If consensus is \"8 because more than order-of-magnitude increases are\n> scary\" -- ok.\n\nIt would feel better for me if you would keep the power of two:\n\n2^0 = 1MB\n2^1 = 2MB\n2^2 = 4MB\n2^3 = 8MB\n.\n.\n.\n\nBut that's only personal. Maybe other people feeling the same.\n\n- oliver"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-01T14:48:45",
                "message_text_only": "The current max block size of 1000000 bytes is not power of two anyway.\n\nOn Mon, Jun 1, 2015 at 10:46 PM, Oliver Egginger <bitcoin at olivere.de> wrote:\n> On Mon, Jun 1, 2015 at 3:59 PM, Gavin Andresen wrote:\n>> What do other people think?  Would starting at a max of 8 or 4 get\n>> consensus?  Scaling up a little less than Nielsen's Law of Internet\n>> Bandwidth predicts for the next 20 years?  (I think predictability is\n>> REALLY important).\n>>\n>> I chose 20 because all of my testing shows it to be safe, and all of my\n>> back-of-the-envelope calculations indicate the costs are reasonable.\n>>\n>> If consensus is \"8 because more than order-of-magnitude increases are\n>> scary\" -- ok.\n>\n> It would feel better for me if you would keep the power of two:\n>\n> 2^0 = 1MB\n> 2^1 = 2MB\n> 2^2 = 4MB\n> 2^3 = 8MB\n> .\n> .\n> .\n>\n> But that's only personal. Maybe other people feeling the same.\n>\n> - oliver\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Yifu Guo",
                "date": "2015-06-01T16:43:38",
                "message_text_only": "Nielsen's Law of Internet Bandwidth is simply not true, but if you look at\ndata points like http://www.netindex.com/upload/ which will show we are at\nleast on the right track, but this is flawed still.\n\nThe fact of the matter is these speed tests are done from local origin to\nlocal destination within the city, let alone the country ( see note about\nhow these test are only conducted 300 miles within the server). and our\ncurrent internet infrastructure is set up with CDNs for the web and media\nconsumption.\nthese data points can not and should not be used to model the connectivity\nof a peer to peer network.\n\nUplink bandwidth is scarce is China and expensive, avg about $37 per 1mbps\nafter 5, but this is not the real problem. the true issue lies in the\nISP transparent proxy they run. this is not a problem isolated in just\nChina, Thailand and various other countries in Asia like Lebanon. I have\nalso heard in various IRCs that southern France also face this similar\nissue due to poor routing configurations they have that prevents\nconnections to certain parts of the world, unsure if this is a mistake or a\ngeopolitical by-product.\n\nAs for your question earlier Gavin, from Dallas TX to a VPS in Shanghai\non \u4e0a\u6d77\u7535\u4fe1/Shanghai telecom, which is capped at 5mbps the data results match\nmy concerns, I've gotten low as 83 Kbits/sec and as high as 9.24 Mbits/sec.\nand other ranges in between, none are consistent. ping avg is about 250ms.\n\nThe temporary solution I recommend again from earlier is MPTCP:\nhttp://www.multipath-tcp.org/ which allows you to multiple\ninterfaces/networks for a single TCP connection, this is mainly developed\nfor mobile3g/wifi transition but I found uses to improve bandwidth and\nconnection stability on the go by combining a local wifi/ethernet\nconnection with my 3g phone tether. this allows you to set up a middlebox\nsomewhere, put shadowsocks server on it, and on your local machine you can\nroute all TCP traffic over the shadow socks client and MPTCP will\nautomatically pick the best path for upload and download.\n\n\n\nOn Mon, Jun 1, 2015 at 9:59 AM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> On Mon, Jun 1, 2015 at 7:20 AM, Chun Wang <1240902 at gmail.com> wrote:\n>\n>> I cannot believe why Gavin (who seems to have difficulty to spell my\n>> name correctly.) insists on his 20MB proposal regardless the\n>> community. BIP66 has been introduced for a long time and no one knows\n>> when the 95% goal can be met. This change to the block max size must\n>> take one year or more to be adopted. We should increase the limit and\n>> increase it now. 20MB is simply too big and too risky, sometimes we\n>> need compromise and push things forward. I agree with any solution\n>> lower than 10MB in its first two years.\n>>\n>>\n> Thanks, that's useful!\n>\n> What do other people think?  Would starting at a max of 8 or 4 get\n> consensus?  Scaling up a little less than Nielsen's Law of Internet\n> Bandwidth predicts for the next 20 years?  (I think predictability is\n> REALLY important).\n>\n> I chose 20 because all of my testing shows it to be safe, and all of my\n> back-of-the-envelope calculations indicate the costs are reasonable.\n>\n> If consensus is \"8 because more than order-of-magnitude increases are\n> scary\" -- ok.\n>\n> --\n> --\n> Gavin Andresen\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \n*Yifu Guo*\n*\"Life is an everlasting self-improvement.\"*\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/3c8e46e8/attachment.html>"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-01T20:01:50",
                "message_text_only": "> What do other people think?  Would starting at a max of 8 or 4 get\n> consensus?  Scaling up a little less than Nielsen's Law of Internet\n> Bandwidth predicts for the next 20 years?  (I think predictability is\n> REALLY important).\n\nTL;DR: Personally I'm in favour of doing something relatively\nuncontroversial (say, a simple increase in the block size to something\nin the 4-8GB range) with no further increases without a further hard\nfork.\n\nI'm not sure how relevent Nielsen's Law really is.  The only relevent\ndata points Nielsen has really boil down to a law about how the speed\nof his cable modem connection has changed during the period 1998-2014.\n\nInteresting though that is, it's not hugely relevent to\nbandwidth-intensive operations like running a full node.  The problem\nis he's only looking at the actual speed of his connection in Mbps,\nnot the amount of data usage in GB/month that his provider permits -\nand there's no particular reason to expect that both of those two\nfigures follow the same curve.  In particular, we're more interested\nin the cost of backhaul and IP transit (which is what drives the\nGB/month figure) than we are in improvements in DOCSIS technology,\nwhich have little relevence to node operators even on cable modem, and\nnone to any other kind of full node operator, be it on DSL or in a\ndatacentre.\n\nMore importantly, I also think a scheduled ramp up is an unnecessary\ncomplication.  Why do we need to commit now to future block size\nincreases perhaps years into the future?  I'd rather schedule an\nuncontroversial hard fork now (if such thing is possible) even if\nthere's a very real expectation - even an assumption - that by the\ntime the fork has taken place, it's already time to start discussing\nthe next one.  Any curve or schedule of increases that stretches years\ninto the future is inevitably going to be controversial - and more so\nthe further into the future it stretches - simply because the\nuncertainties around the Bitcoin landscape are going to be greater the\nfurther ahead we look.\n\nIf a simple increase from 1GB to 4GB or 8GB will solve the problem for\nnow, why not do that?  Yes, it's quite likely we'll have to do it\nagain, but we'll be able to make that decision in the light of the\n2016 or 2017 landscape and can again make a simple, hopefully\nuncontroversial, increase in the limit at that time.\n\nSo, with the proviso that I think this is all bike shedding, if I had\nto pick my favourite colour for the bike shed, it would be to schedule\na hard fork that increases the 1GB limit (to something in the 4-8GB\nrange) but with no further increases without a further hard fork.\n\nPersonally I think trying to pick the best value of the 2035 block\nsize now is about as foolish as trying to understand now the economics\nof Bitcoin mining many halvings hence.\n\nNB: this is not saying that I think we shouldn't go above 8GB in the\nrelatively foreseeable future; quite the contrary, I strongly expect\nthat we will.  I just don't see the need to pick the 2020 block size\nnow when we can easily make a far better informed decision as to the\n2020 block size in 2018 or even 2019.\n\nAs to knowing what the block size is going to be for the next 20 years\nbeing \"REALLY important\"?  100% disagree.  I also think it's\nimpossible, because even if you manage to get consensus on a block\nsize increase schedule that stretches out to 2035 (and my prediction\nis you won't) the reality is that that block size schedule will have\nbeen modified by a future hard fork long before we get to 2035.\n\nWhat I personally think is REALLY important is that the Bitcoin\ncommunity demonstrates an ability to react appropriately to changing\nrequirements and conditions - and we'll only be able to react to those\nconditions when we know what they are!  My expectation is that there\nwill be several (hopefully _relatively_ uncontroversial) scheduled\nhard forks between now and 2035, and each of those will be discussed\nin suitable detail before being agreed.  And that's as it should be.\n\nroy"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-01T20:15:03",
                "message_text_only": "On Mon, Jun 01, 2015 at 09:01:49PM +0100, Roy Badami wrote:\n> > What do other people think?  Would starting at a max of 8 or 4 get\n> > consensus?  Scaling up a little less than Nielsen's Law of Internet\n> > Bandwidth predicts for the next 20 years?  (I think predictability is\n> > REALLY important).\n> \n> TL;DR: Personally I'm in favour of doing something relatively\n> uncontroversial (say, a simple increase in the block size to something\n> in the 4-8GB range) with no further increases without a further hard\n> fork.\n\nAnd the other bit I should have added to my TL;DR:\n\nIf we end up spending a significant proportion of the next 20 years\ndiscussing the then _next_ hard fork, that's a *good* thing, not a\n*bad* thing.  Hard forks need to become, if not entirely routine, then\ncertainly less scary.  A sequence of (relatively) uncontroversial hard\nforks over time is way more likely to gain consensus than a single\nhard fork that attempts to set a schedule for block size increases out\nto 2035.  IMHO.\n\n> \n> I'm not sure how relevent Nielsen's Law really is.  The only relevent\n> data points Nielsen has really boil down to a law about how the speed\n> of his cable modem connection has changed during the period 1998-2014.\n> \n> Interesting though that is, it's not hugely relevent to\n> bandwidth-intensive operations like running a full node.  The problem\n> is he's only looking at the actual speed of his connection in Mbps,\n> not the amount of data usage in GB/month that his provider permits -\n> and there's no particular reason to expect that both of those two\n> figures follow the same curve.  In particular, we're more interested\n> in the cost of backhaul and IP transit (which is what drives the\n> GB/month figure) than we are in improvements in DOCSIS technology,\n> which have little relevence to node operators even on cable modem, and\n> none to any other kind of full node operator, be it on DSL or in a\n> datacentre.\n> \n> More importantly, I also think a scheduled ramp up is an unnecessary\n> complication.  Why do we need to commit now to future block size\n> increases perhaps years into the future?  I'd rather schedule an\n> uncontroversial hard fork now (if such thing is possible) even if\n> there's a very real expectation - even an assumption - that by the\n> time the fork has taken place, it's already time to start discussing\n> the next one.  Any curve or schedule of increases that stretches years\n> into the future is inevitably going to be controversial - and more so\n> the further into the future it stretches - simply because the\n> uncertainties around the Bitcoin landscape are going to be greater the\n> further ahead we look.\n> \n> If a simple increase from 1GB to 4GB or 8GB will solve the problem for\n> now, why not do that?  Yes, it's quite likely we'll have to do it\n> again, but we'll be able to make that decision in the light of the\n> 2016 or 2017 landscape and can again make a simple, hopefully\n> uncontroversial, increase in the limit at that time.\n> \n> So, with the proviso that I think this is all bike shedding, if I had\n> to pick my favourite colour for the bike shed, it would be to schedule\n> a hard fork that increases the 1GB limit (to something in the 4-8GB\n> range) but with no further increases without a further hard fork.\n> \n> Personally I think trying to pick the best value of the 2035 block\n> size now is about as foolish as trying to understand now the economics\n> of Bitcoin mining many halvings hence.\n> \n> NB: this is not saying that I think we shouldn't go above 8GB in the\n> relatively foreseeable future; quite the contrary, I strongly expect\n> that we will.  I just don't see the need to pick the 2020 block size\n> now when we can easily make a far better informed decision as to the\n> 2020 block size in 2018 or even 2019.\n> \n> As to knowing what the block size is going to be for the next 20 years\n> being \"REALLY important\"?  100% disagree.  I also think it's\n> impossible, because even if you manage to get consensus on a block\n> size increase schedule that stretches out to 2035 (and my prediction\n> is you won't) the reality is that that block size schedule will have\n> been modified by a future hard fork long before we get to 2035.\n> \n> What I personally think is REALLY important is that the Bitcoin\n> community demonstrates an ability to react appropriately to changing\n> requirements and conditions - and we'll only be able to react to those\n> conditions when we know what they are!  My expectation is that there\n> will be several (hopefully _relatively_ uncontroversial) scheduled\n> hard forks between now and 2035, and each of those will be discussed\n> in suitable detail before being agreed.  And that's as it should be.\n> \n> roy"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T13:21:39",
                "message_text_only": ">\n> Ignorant. You seem do not understand the current situation. We\n> suffered from orphans a lot when we started in 2013. It is now your\n> turn.\n\n\nThen please enlighten me. You're unable to download block templates from a\ntrusted node outside of the country because the bandwidth requirements are\ntoo high? Or due to some other problem?\n\nWith respect to \"now it's your turn\". Let's imagine the hard fork goes\nahead. Let us assume that almost all exchanges, payment processors and\nother businesses go with larger blocks, but Chinese miners do not.\n\nThen you will mine coins that will not be recognised on trading platforms\nand cannot be sold. Your losses will be much larger than from orphans.\n\nThis can happen *even* if Chinese miners who can't/won't scale up are >50%\nhashrate. SPV clients would need a forced checkpoint, which would be messy\nand undesirable, but it's technically feasible. The smaller side of the\nchain would cease to exist from the perspective of people actually trading\ncoins.\n\nIf your internet connectivity situation is really so poor that you cannot\nhandle one or two megabits out of the country then you're hanging on by\nyour fingernails anyway: your connection to the main internet could become\ncompletely unusable at any time. If that's really the case, it seems to me\nthat Chinese Bitcoin is unsustainable and what you really need is a\nChina-specific alt coin that can run entirely within the Chinese internet.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/cf20069e/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-01T12:29:19",
                "message_text_only": "Whilst it would be nice if miners in *outside* China can carry on forever\nregardless of their internet situation, nobody has any inherent \"right\" to\nmine if they can't do the job - if miners in *outside* China can't get the\ntrivial amounts of bandwidth required through their firewall *TO THE\nMAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too bad,\nwe'll have to carry on without them.\n\n\nOn Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Whilst it would be nice if miners in China can carry on forever regardless\n> of their internet situation, nobody has any inherent \"right\" to mine if\n> they can't do the job - if miners in China can't get the trivial amounts of\n> bandwidth required through their firewall and end up being outcompeted then\n> OK, too bad, we'll have to carry on without them.\n>\n> But I'm not sure why it should be a big deal. They can always run a node\n> on a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/a156e424/attachment.html>"
            },
            {
                "author": "Thy Shizzle",
                "date": "2015-06-01T11:12:34",
                "message_text_only": "WOW!!!! Way to burn your biggest adopters who put your transactions into the chain.......what a douche.\n________________________________\nFrom: Mike Hearn<mailto:mike at plan99.net>\nSent: \u200e1/\u200e06/\u200e2015 8:15 PM\nTo: Alex Mizrahi<mailto:alex.mizrahi at gmail.com>\nCc: Bitcoin Dev<mailto:bitcoin-development at lists.sourceforge.net>\nSubject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n\nWhilst it would be nice if miners in China can carry on forever regardless\nof their internet situation, nobody has any inherent \"right\" to mine if\nthey can't do the job - if miners in China can't get the trivial amounts of\nbandwidth required through their firewall and end up being outcompeted then\nOK, too bad, we'll have to carry on without them.\n\nBut I'm not sure why it should be a big deal. They can always run a node on\na server in Taiwan and connect the hardware to it via a VPN or so.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/85fbfd51/attachment.html>\n-------------- next part --------------\n------------------------------------------------------------------------------\n-------------- next part --------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Thy Shizzle",
                "date": "2015-06-01T13:06:21",
                "message_text_only": "Doesn't mean you should build something that says \"fuck you\" to the companies that have invested in farms of ASICS. To say \"Oh yea if they can't mine it how we want stuff 'em\" is naive. I get decentralisation, but don't dis incentivise mining. If miners are telling you that you're going to hurt them, esp. Miners that combined hold > 50% hashing power, why would you say too bad so sad? Why not just start stripping bitcoin out of adopters wallets? Same thing.\n________________________________\nFrom: Warren Togami Jr.<mailto:wtogami at gmail.com>\nSent: \u200e1/\u200e06/\u200e2015 10:30 PM\nCc: Bitcoin Dev<mailto:bitcoin-development at lists.sourceforge.net>\nSubject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n\nWhilst it would be nice if miners in *outside* China can carry on forever\nregardless of their internet situation, nobody has any inherent \"right\" to\nmine if they can't do the job - if miners in *outside* China can't get the\ntrivial amounts of bandwidth required through their firewall *TO THE\nMAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too bad,\nwe'll have to carry on without them.\n\n\nOn Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Whilst it would be nice if miners in China can carry on forever regardless\n> of their internet situation, nobody has any inherent \"right\" to mine if\n> they can't do the job - if miners in China can't get the trivial amounts of\n> bandwidth required through their firewall and end up being outcompeted then\n> OK, too bad, we'll have to carry on without them.\n>\n> But I'm not sure why it should be a big deal. They can always run a node\n> on a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/eca65e9f/attachment.html>\n-------------- next part --------------\n------------------------------------------------------------------------------\n-------------- next part --------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-01T18:19:40",
                "message_text_only": "By reversing Mike's language to the reality of the situation I had hoped\npeople would realize how abjectly ignorant and insensitive his statement\nwas.  I am sorry to those in the community if they misunderstood my post. I\nthought it was obvious that it was sarcasm where I do not seriously believe\nparticular participants should be excluded.\n\nOn Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com> wrote:\n\n>  Doesn't mean you should build something that says \"fuck you\" to the\n> companies that have invested in farms of ASICS. To say \"Oh yea if they\n> can't mine it how we want stuff 'em\" is naive. I get decentralisation, but\n> don't dis incentivise mining. If miners are telling you that you're going\n> to hurt them, esp. Miners that combined hold > 50% hashing power, why would\n> you say too bad so sad? Why not just start stripping bitcoin out of\n> adopters wallets? Same thing.\n>  ------------------------------\n> From: Warren Togami Jr. <wtogami at gmail.com>\n> Sent: \u200e1/\u200e06/\u200e2015 10:30 PM\n> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>\n> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n>\n>   Whilst it would be nice if miners in *outside* China can carry on\n> forever regardless of their internet situation, nobody has any inherent\n> \"right\" to mine if they can't do the job - if miners in *outside* China\n> can't get the trivial amounts of bandwidth required through their firewall *TO\n> THE MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too\n> bad, we'll have to carry on without them.\n>\n>\n> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:\n>\n>  Whilst it would be nice if miners in China can carry on forever\n> regardless of their internet situation, nobody has any inherent \"right\" to\n> mine if they can't do the job - if miners in China can't get the trivial\n> amounts of bandwidth required through their firewall and end up being\n> outcompeted then OK, too bad, we'll have to carry on without them.\n>\n>  But I'm not sure why it should be a big deal. They can always run a node\n> on a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/4604b753/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T18:30:20",
                "message_text_only": "I don't see this as an issue of sensitivity or not. Miners are businesses\nthat sell a service to Bitcoin users - the service of ordering transactions\nchronologically. They aren't charities.\n\nIf some miners can't provide the service Bitcoin users need any more, then\nOK, they should not/cannot mine. Lots of miners have come and gone since\nBitcoin started as different technology generations came and went. That's\njust business.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/f2f7017a/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-01T18:44:22",
                "message_text_only": "So lets rephrase that and say instead more correctly it is the job of\nminers (collectively) to be well connected globally - and indeed there\nare incentivised to be or they tend to receive blocks at higher\nlatency and so are at increased risk of orphans.  And miner groups\nwith good block latency in-group and high hashrate are definitionally\nthe well connected, so the cost of getting good connectivity to high\nhashrate groups is naturally borne by people outside of those groups.\nOr thats the incentive anyway.\n\nAdam\n\n\nOn 1 June 2015 at 19:30, Mike Hearn <mike at plan99.net> wrote:\n> I don't see this as an issue of sensitivity or not. Miners are businesses\n> that sell a service to Bitcoin users - the service of ordering transactions\n> chronologically. They aren't charities.\n>\n> If some miners can't provide the service Bitcoin users need any more, then\n> OK, they should not/cannot mine. Lots of miners have come and gone since\n> Bitcoin started as different technology generations came and went. That's\n> just business.\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Btc Drak",
                "date": "2015-06-01T19:23:43",
                "message_text_only": "I did wonder what the post actually meant, I recommend appending /s after\nsarcasm so it's clear. Lots gets lost in text. But I agree with you btw his\nresponse was not particularly tactful.\n\nOn Mon, Jun 1, 2015 at 7:19 PM, Warren Togami Jr. <wtogami at gmail.com> wrote:\n\n> By reversing Mike's language to the reality of the situation I had hoped\n> people would realize how abjectly ignorant and insensitive his statement\n> was.  I am sorry to those in the community if they misunderstood my post. I\n> thought it was obvious that it was sarcasm where I do not seriously believe\n> particular participants should be excluded.\n>\n> On Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com>\n> wrote:\n>\n>>  Doesn't mean you should build something that says \"fuck you\" to the\n>> companies that have invested in farms of ASICS. To say \"Oh yea if they\n>> can't mine it how we want stuff 'em\" is naive. I get decentralisation, but\n>> don't dis incentivise mining. If miners are telling you that you're going\n>> to hurt them, esp. Miners that combined hold > 50% hashing power, why would\n>> you say too bad so sad? Why not just start stripping bitcoin out of\n>> adopters wallets? Same thing.\n>>  ------------------------------\n>> From: Warren Togami Jr. <wtogami at gmail.com>\n>> Sent: \u200e1/\u200e06/\u200e2015 10:30 PM\n>> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>\n>> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n>>\n>>   Whilst it would be nice if miners in *outside* China can carry on\n>> forever regardless of their internet situation, nobody has any inherent\n>> \"right\" to mine if they can't do the job - if miners in *outside* China\n>> can't get the trivial amounts of bandwidth required through their\n>> firewall *TO THE MAJORITY OF THE HASHRATE* and end up being outcompeted\n>> then OK, too bad, we'll have to carry on without them.\n>>\n>>\n>> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:\n>>\n>>  Whilst it would be nice if miners in China can carry on forever\n>> regardless of their internet situation, nobody has any inherent \"right\" to\n>> mine if they can't do the job - if miners in China can't get the trivial\n>> amounts of bandwidth required through their firewall and end up being\n>> outcompeted then OK, too bad, we'll have to carry on without them.\n>>\n>>  But I'm not sure why it should be a big deal. They can always run a\n>> node on a server in Taiwan and connect the hardware to it via a VPN or so.\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/ecb5f0df/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-01T13:15:18",
                "message_text_only": "On Sun, May 31, 2015 at 6:55 PM, Alex Mizrahi <alex.mizrahi at gmail.com>\nwrote:\n\n> Yes, if you are on a slow network then you are at a (slight) disadvantage.\n>> So?\n>>\n>\n> Chun mentioned that his pool is on a slow network, and thus bigger blocks\n> give it an disadvantage. (Orphan rate is proportional to block size.)\n>\nYou said that no, on contrary those who make big blocks have a disadvantage.\n> And now you say that yes, this disadvantage exist.\n>\n>\nDid you just lie to Chun?\n>\n\nChun said that if somebody produced a big block it would take them at least\n6 seconds to process it.\n\nHe also said he has nodes outside the great firewall (\"We also use Aliyun\nand Linode cloud services for block\npropagation.\").\n\nSo I assumed that he was talking about the \"what if somebody produces a\nblock that takes a long time to process\" attack -- which doesn't work (the\nattacker just increases their own orphan rate).\n\nIf the whole network is creating blocks that takes everybody (except the\nperson creating the blocks) six seconds to broadcast+validate, then the\nincrease in orphan rate is spread out over the whole network. The\nnetwork-wide orphan rate goes up, everybody suffers a little (fewer blocks\ncreated over time) until the next difficulty adjustment, then the\ndifficulty drops, then everybody is back in the same boat.\n\nIf it takes six seconds to validate because of limited bandwidth, then he\nshould connect via Matt's fast relay network, which optimize new block\nannouncements so they take a couple orders of magnitude less bandwidth.\n\nIf it takes six seconds because he's trying to validate on a raspberry\npi.... then he should buy a better validating machine, and/or help test the\ncurrent pending pull requests to make validation faster (e.g.\nhttps://github.com/bitcoin/bitcoin/pull/5835 or\nhttps://github.com/bitcoin/bitcoin/pull/6077 ).\n\nIf Chun had six seconds of latency, and he can't pay for a lower-latency\nconnection (or it is insanely expensive), then there's nothing he can do,\nhe'll have to live with a higher orphan rate no matter the block size.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/29cd43fc/attachment.html>"
            },
            {
                "author": "Thy Shizzle",
                "date": "2015-06-01T21:32:47",
                "message_text_only": "Ah sorry, I just thought you were saying doesn't matter which side let 'em burn.\n\nIf I were the Chinese and people moved to 20mb MAX size blocks and said stuff you, I'd just start firing out small coinbase only blocks now, if they truly have >50% hashing power and they collaborate chances are they can build a longer chain of just coinbase for themselves then the rest of the network doing big blocks. They don't even have to propagate this chain to you in a hurry right? And then they never have to receive a 20mb block from you because they have a longer chain without 20mb blocks and always ahead of your big blocks. As long as it is the longest chain it is Authority so let you guys transact your coinbase from the blocks you create etc. then whamo along come the chinese and supply a longer chain of just coinbase only blocks which invalidates all your previous transactions and gives them all the coinbase they stamped, while invalidating yours.\n\nBut who cares about them right :p\n________________________________\nFrom: Warren Togami Jr.<mailto:wtogami at gmail.com>\nSent: \u200e2/\u200e06/\u200e2015 4:19 AM\nCc: Bitcoin Dev<mailto:bitcoin-development at lists.sourceforge.net>\nSubject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n\nBy reversing Mike's language to the reality of the situation I had hoped\npeople would realize how abjectly ignorant and insensitive his statement\nwas.  I am sorry to those in the community if they misunderstood my post. I\nthought it was obvious that it was sarcasm where I do not seriously believe\nparticular participants should be excluded.\n\nOn Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com> wrote:\n\n>  Doesn't mean you should build something that says \"fuck you\" to the\n> companies that have invested in farms of ASICS. To say \"Oh yea if they\n> can't mine it how we want stuff 'em\" is naive. I get decentralisation, but\n> don't dis incentivise mining. If miners are telling you that you're going\n> to hurt them, esp. Miners that combined hold > 50% hashing power, why would\n> you say too bad so sad? Why not just start stripping bitcoin out of\n> adopters wallets? Same thing.\n>  ------------------------------\n> From: Warren Togami Jr. <wtogami at gmail.com>\n> Sent: \u200e1/\u200e06/\u200e2015 10:30 PM\n> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>\n> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n>\n>   Whilst it would be nice if miners in *outside* China can carry on\n> forever regardless of their internet situation, nobody has any inherent\n> \"right\" to mine if they can't do the job - if miners in *outside* China\n> can't get the trivial amounts of bandwidth required through their firewall *TO\n> THE MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too\n> bad, we'll have to carry on without them.\n>\n>\n> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:\n>\n>  Whilst it would be nice if miners in China can carry on forever\n> regardless of their internet situation, nobody has any inherent \"right\" to\n> mine if they can't do the job - if miners in China can't get the trivial\n> amounts of bandwidth required through their firewall and end up being\n> outcompeted then OK, too bad, we'll have to carry on without them.\n>\n>  But I'm not sure why it should be a big deal. They can always run a node\n> on a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/bc3d7499/attachment.html>\n-------------- next part --------------\n------------------------------------------------------------------------------\n-------------- next part --------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-01T22:13:58",
                "message_text_only": "It would be helpful to hear from the other miners, and perhaps arrange some\ntesting and telemetry in China with 8 ...  that's even a Chinese lucky\nnumber ;)\n\np.\n\n\nOn Tue, Jun 2, 2015 at 5:32 AM, Thy Shizzle <thyshizzle at outlook.com> wrote:\n\n>  Ah sorry, I just thought you were saying doesn't matter which side let\n> 'em burn.\n>\n> If I were the Chinese and people moved to 20mb MAX size blocks and said\n> stuff you, I'd just start firing out small coinbase only blocks now, if\n> they truly have >50% hashing power and they collaborate chances are they\n> can build a longer chain of just coinbase for themselves then the rest of\n> the network doing big blocks. They don't even have to propagate this chain\n> to you in a hurry right? And then they never have to receive a 20mb block\n> from you because they have a longer chain without 20mb blocks and always\n> ahead of your big blocks. As long as it is the longest chain it is\n> Authority so let you guys transact your coinbase from the blocks you create\n> etc. then whamo along come the chinese and supply a longer chain of just\n> coinbase only blocks which invalidates all your previous transactions and\n> gives them all the coinbase they stamped, while invalidating yours.\n>\n> But who cares about them right :p\n>  ------------------------------\n> From: Warren Togami Jr. <wtogami at gmail.com>\n> Sent: \u200e2/\u200e06/\u200e2015 4:19 AM\n> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>\n> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n>\n>  By reversing Mike's language to the reality of the situation I had hoped\n> people would realize how abjectly ignorant and insensitive his statement\n> was.  I am sorry to those in the community if they misunderstood my post. I\n> thought it was obvious that it was sarcasm where I do not seriously believe\n> particular participants should be excluded.\n>\n> On Mon, Jun 1, 2015 at 3:06 AM, Thy Shizzle <thyshizzle at outlook.com>\n> wrote:\n>\n>  Doesn't mean you should build something that says \"fuck you\" to the\n> companies that have invested in farms of ASICS. To say \"Oh yea if they\n> can't mine it how we want stuff 'em\" is naive. I get decentralisation, but\n> don't dis incentivise mining. If miners are telling you that you're going\n> to hurt them, esp. Miners that combined hold > 50% hashing power, why would\n> you say too bad so sad? Why not just start stripping bitcoin out of\n> adopters wallets? Same thing.\n>  ------------------------------\n> From: Warren Togami Jr. <wtogami at gmail.com>\n> Sent: \u200e1/\u200e06/\u200e2015 10:30 PM\n> Cc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>\n> Subject: Re: [Bitcoin-development] Fwd: Block Size Increase Requirements\n>\n>    Whilst it would be nice if miners in *outside* China can carry on\n> forever regardless of their internet situation, nobody has any inherent\n> \"right\" to mine if they can't do the job - if miners in *outside* China\n> can't get the trivial amounts of bandwidth required through their firewall *TO\n> THE MAJORITY OF THE HASHRATE* and end up being outcompeted then OK, too\n> bad, we'll have to carry on without them.\n>\n>\n> On Mon, Jun 1, 2015 at 12:13 AM, Mike Hearn <mike at plan99.net> wrote:\n>\n>  Whilst it would be nice if miners in China can carry on forever\n> regardless of their internet situation, nobody has any inherent \"right\" to\n> mine if they can't do the job - if miners in China can't get the trivial\n> amounts of bandwidth required through their firewall and end up being\n> outcompeted then OK, too bad, we'll have to carry on without them.\n>\n>  But I'm not sure why it should be a big deal. They can always run a node\n> on a server in Taiwan and connect the hardware to it via a VPN or so.\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/c082d1e3/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Fwd: Block Size Increase Requirements",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Yifu Guo",
                "\u00c1ngel Jos\u00e9 Riesgo",
                "Warren Togami Jr.",
                "Mike Hearn",
                "Roy Badami",
                "Adam Back",
                "Peter Todd",
                "Alex Mizrahi",
                "Btc Drak",
                "Chun Wang",
                "Gavin Andresen",
                "Oliver Egginger",
                "Pindar Wong",
                "Thy Shizzle"
            ],
            "messages_count": 29,
            "total_messages_chars_count": 62180
        }
    },
    {
        "title": "[Bitcoin-development] Proposed alternatives to the 20MB step function",
        "thread_messages": [
            {
                "author": "Ricardo Filipe",
                "date": "2015-06-01T11:30:40",
                "message_text_only": "I've been following the discussion of the block size limit and IMO it\nis clear that any constant block size limit is, as many have said\nbefore, just kicking the can down the road.\nMy problem with the dynamic lower limit solution based on past blocks\nis that it doesn't account for usage spikes. I would like to propose\nanother dynamic lower limit scheme:\nLet the block size limit be a function of the number of current\ntransactions in the mempool. This way, bitcoin usage regulates the\nblock size limit.\n\nI'm sorry i don't have the knowledge of the code base or time to make\nsimulations on this kind of approach, but nevertheless I would like to\nleave it here for discussion or foster other ideas.\n\ncheers"
            },
            {
                "author": "Marcel Jamin",
                "date": "2015-06-01T11:46:30",
                "message_text_only": "> Let the block size limit be a function of the number of current transactions\nin the mempool.\n\nThere is no single mempool which transactions could be counted and there is\nno consensus about the average number of unconfirmed transactions.\n\n2015-06-01 13:30 GMT+02:00 Ricardo Filipe <ricardojdfilipe at gmail.com>:\n\n> I've been following the discussion of the block size limit and IMO it\n> is clear that any constant block size limit is, as many have said\n> before, just kicking the can down the road.\n> My problem with the dynamic lower limit solution based on past blocks\n> is that it doesn't account for usage spikes. I would like to propose\n> another dynamic lower limit scheme:\n> Let the block size limit be a function of the number of current\n> transactions in the mempool. This way, bitcoin usage regulates the\n> block size limit.\n>\n> I'm sorry i don't have the knowledge of the code base or time to make\n> simulations on this kind of approach, but nevertheless I would like to\n> leave it here for discussion or foster other ideas.\n>\n> cheers\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/7027163a/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Proposed alternatives to the 20MB step function",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Marcel Jamin",
                "Ricardo Filipe"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 2222
        }
    },
    {
        "title": "[Bitcoin-development] Proposed alternatives to the 20MB step",
        "thread_messages": [
            {
                "author": "J\u00e9r\u00f4me Legoupil",
                "date": "2015-06-01T12:45:21",
                "message_text_only": ">What do other people think?\n>\n>\n>If we can't come to an agreement soon, then I'll ask for help\n>reviewing/submitting patches to Mike's Bitcoin-Xt project that implement a\n>big increase now that grows over time so we may never have to go through\n>all this rancor and debate again.\"\n>\n>\n>I'll then ask for help lobbying the merchant services and exchanges and\n>hosted wallet companies and other bitcoind-using-infrastructure companies\n\n\nIt's surprising to see a core dev going to the public to defend a proposal\nmost other core devs disagree on, and then lobbying the Bitcoin ecosystem.\n\nThis is an very unhealthy way to go because it incentives the other core\ndevs to stop their technical work and go public and lobby too (cf G.Maxwell\ntrying to raise redditters awareness).\n\nWe need core devs to work on technical issues, not waste time doing\npolitics, but Gavin's confrontational approach doesn't give them much of a\nchoice.\n\nI fear that because of this approach, in the next monthes, core devs with\nbe lobbying and doing politics : precious time will be wasted for everyone\nhaving stake in Bitcoin.\n\n\nRegarding the 20MB proposal content:\n\nDecentralization is the core of Bitcoin's security model and thus that's\nwhat gives Bitcoin its value.\n\nThe danger is that decentralization tends naturally towards centralization,\nbecause centralization is more efficient. Going from decentralization to\ncentralization is easy, going the other way is a lot harder :\ndecentralization we lose, may never be gained back.\n\nRegarding \"the urgency to do something\":\n\nI believe it would be extremely healthy for the network to bump into any\nlimit ASAP ... (let it be 1MB) : to incentive layer 2 and offchain\nsolutions to scale Bitcoin : there are promising designs/solutions out\nthere (LN, ChainDB, OtherCoin protocole, ...), but most don't get much\nattention, because there is right now no need for them. And, I am sure new\nsolutions will be invented.\n\nIf during the \"1MB bumpy period\" something goes wrong, consensus among the\ncommunity would be reached easily if necessary.\n\nPretending there is urgency and that Apocalypse is approaching is a fallacy.\n\nThe Gavin 20MB proposal is compromising Bitcoin's long-term security in an\nirreversible way, for gaining short-term better user experience.\n\nI oppose the Gavin proposal in both content and form.\n\nCheers,\nJerome\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/2c17e1f9/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-01T13:00:49",
                "message_text_only": "Agree with everything you said.  Spot on observations on all counts.\nThank you for speaking up.\n\nAdam\n\nOn 1 June 2015 at 13:45, J\u00e9r\u00f4me Legoupil <jjlegoupil at gmail.com> wrote:\n>>What do other people think?\n>>\n>>\n>>If we can't come to an agreement soon, then I'll ask for help\n>>reviewing/submitting patches to Mike's Bitcoin-Xt project that implement a\n>>big increase now that grows over time so we may never have to go through\n>>all this rancor and debate again.\"\n>>\n>>\n>>I'll then ask for help lobbying the merchant services and exchanges and\n>>hosted wallet companies and other bitcoind-using-infrastructure companies\n>\n>\n> It's surprising to see a core dev going to the public to defend a proposal\n> most other core devs disagree on, and then lobbying the Bitcoin ecosystem.\n>\n> This is an very unhealthy way to go because it incentives the other core\n> devs to stop their technical work and go public and lobby too (cf G.Maxwell\n> trying to raise redditters awareness).\n>\n> We need core devs to work on technical issues, not waste time doing\n> politics, but Gavin's confrontational approach doesn't give them much of a\n> choice.\n>\n> I fear that because of this approach, in the next monthes, core devs with be\n> lobbying and doing politics : precious time will be wasted for everyone\n> having stake in Bitcoin.\n>\n>\n> Regarding the 20MB proposal content:\n>\n> Decentralization is the core of Bitcoin's security model and thus that's\n> what gives Bitcoin its value.\n>\n> The danger is that decentralization tends naturally towards centralization,\n> because centralization is more efficient. Going from decentralization to\n> centralization is easy, going the other way is a lot harder :\n> decentralization we lose, may never be gained back.\n>\n> Regarding \"the urgency to do something\":\n>\n> I believe it would be extremely healthy for the network to bump into any\n> limit ASAP ... (let it be 1MB) : to incentive layer 2 and offchain solutions\n> to scale Bitcoin : there are promising designs/solutions out there (LN,\n> ChainDB, OtherCoin protocole, ...), but most don't get much attention,\n> because there is right now no need for them. And, I am sure new solutions\n> will be invented.\n>\n> If during the \"1MB bumpy period\" something goes wrong, consensus among the\n> community would be reached easily if necessary.\n>\n> Pretending there is urgency and that Apocalypse is approaching is a fallacy.\n>\n> The Gavin 20MB proposal is compromising Bitcoin's long-term security in an\n> irreversible way, for gaining short-term better user experience.\n>\n> I oppose the Gavin proposal in both content and form.\n>\n> Cheers,\n> Jerome\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-01T13:37:11",
                "message_text_only": "RE: going to the public:\n\nI started pushing privately for SOMETHING, ANYTHING to be done, or at the\nvery least for there to be some coherent plan besides \"wait and see\" back\nin February.\n\nAs for it being unhealthy for me to write the code that I think should be\nwritten and asking people to run it:\n\nOk. What would you suggest I do? I believe scaling up is the number one\npriority right now. I think core devs SHOULD be taking time to solve it,\nbecause I think the uncertainty of how it will be solved (or if it will be\nsolved) is bad for Bitcoin.\n\nI think working on things like fixing transaction malleability is great...\nbut the reason to work on that is to enable smart contracts and all sorts\nof other interesting new uses of the blockchain. But if we're stuck with\n1MB blocks then there won't be room for all of those interesting new uses\non the blockchain.\n\nOthers disagree, and have the advantage of status-quo : if nothing is done,\nthey get what they want.\n\nBased on some comments I've seen, I think there is also concern that \"my\nown personal network/computer connection might not be able to handle more\ntransaction volume.\" That is NOT a good reason to limit scalability, but I\nthink it is clouding the judgement of many of the core contributors who\nstarted contributing as a spare-time hobby from their homes (where maybe\nthey have crappy DSL connections).\n\n\nRE: decentralization:\n\nI think this is a red-herring. I'll quote something I said on reddit\nyesterday:\n\n\"I don't believe a 20MB max size will increase centralization to any\nsignificant degree.\n\nSee\nhttp://gavinandresen.ninja/does-more-transactions-necessarily-mean-more-centralized\n\nand http://gavinandresen.ninja/are-bigger-blocks-better-for-bigger-miners\n\nAnd I think we will have a lot LESS centralization of payments via services\nlike Coinbase (or hubs in some future StrawPay/Lightning network) if the\nbitcoin network can directly handle more payment volume.\n\nThe centralization trade-offs seems very clear to me, and I think the \"big\nblocks mean more centralized\" arguments are either just wrong or are\nexaggerated or ignore the tradeoff with payment centralization (I think\nthat is a lot more important for privacy and censorship resistance).\"\n\n\nRE: incentives for off-chain solutions:\n\nI'll quote myself again from\nhttp://gavinandresen.ninja/it-must-be-done-but-is-not-a-panacea :\n\n\"The \u201clayer 2\u201d services that are being built on top of the blockchain are\nabsolutely necessary to get nearly instant real-time payments,\nmicropayments and high volume machine-to-machine payments, to pick just\nthree examples. The ten-minute settlement time of blocks on the network is\nnot fast enough for those problems, and it will be the ten minute block\ninterval that drives development of those off-chain innovations more than\nthe total number of transactions supported.\"\n\nOn Mon, Jun 1, 2015 at 8:45 AM, J\u00e9r\u00f4me Legoupil <jjlegoupil at gmail.com>\nwrote:\n\n> If during the \"1MB bumpy period\" something goes wrong, consensus among the\n> community would be reached easily if necessary.\n>\n\nThat is the problem: this will be a \"frog in boiling water\" problem. I\nbelieve there will be no sudden crisis-- instead, transactions will just\nget increasingly unreliable and expensive, driving more and more people\naway from Bitcoin towards... I don't know what. Some less expensive, more\nreliable, probably more-centralized solution.\n\nThe Gavin 20MB proposal is compromising Bitcoin's long-term security in an\n> irreversible way, for gaining short-term better user experience.\n>\n\nIf by long-term security you mean \"will transaction fees be high enough to\npay for enough hashing power to secure the network if there are bigger\nblocks\" I've written about that:\nhttp://gavinandresen.ninja/block-size-and-miner-fees-again\n\n\nIf you mean something else, then please be specific.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/4417e2e4/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T15:55:39",
                "message_text_only": ">\n> It's surprising to see a core dev going to the public to defend a proposal\n> most other core devs disagree on, and then lobbying the Bitcoin ecosystem.\n>\n\nI agree that it is a waste of time. Many agree. The Bitcoin ecosystem\ndoesn't really need lobbying - my experience from talking to businesses and\nwallet developers months ago is they virtually all see raising capacity as\na no brainer ... and some of them see this \"debate\" as despair-inducing\ninsanity.\n\nWhat's happened here is that a small number of people have come to believe\nthey have veto power over changes to Bitcoin, and they have also become\n*wildly* out of step with what the wider community wants. That cannot last.\nSo, short of some sudden change of heart that lets us kick the can down the\nroad a bit longer, a fork is inevitable.\n\nJust be glad it's Gavin driving this and not me ... or a faceless coalition\nof startups.\n\n\n> Decentralization is the core of Bitcoin's security model and thus that's\n> what gives Bitcoin its value.\n>\n\nNo. Usage is what gives Bitcoin value.\n\nIt's kind of maddening that I have to point this out. Decentralisation is a\nmeans to an end. I first used Bitcoin in April 2009 and it was perfectly\ndecentralised back then: every wallet was a full node and every computer\nwas capable of mining.\n\nSo if you believe what you just wrote, I guess Bitcoin's value has gone\ndown every day since.\n\nOn the other hand, if you believe the markets, Bitcoin's value has gone up.\n\nApparently the question of what gives Bitcoin its value is a bit more\ncomplicated than that.\n\n\n\n\n> : to incentive layer 2 and offchain solutions to scale Bitcoin : there are\n> promising designs/solutions out there (LN, ChainDB, OtherCoin protocole,\n> ...), but most don't get much attention, because there is right now no need\n> for them. And, I am sure new solutions will be invented.\n>\n\nI have seen this notion a few times. I would like to dispose of it right\nnow.\n\nI am one of the wallet developers you would be trying to \"incentivise\" by\nletting Bitcoin break, and I say: get real. Developers are not some\nbottomless fountain of work that will spit out whatever you like for free\nif you twist their arms badly enough.\n\nThe problems that incentivised the creation of Bitcoin existed for decades\nbefore Bitcoin was actually invented. Incentives are not enough. Someone\nhas to actually do the work, too. All proposals on the table would:\n\n   - Involve enormous amounts of effort from many different people\n   - Be technically risky (read: we don't know if they would even work)\n   - Not be Bitcoin\n\nThe last point is important: people who got interested in Bitcoin and\ndecided to devote their time to it might not feel the same way about some\nnetwork of payment hubs or whatever today's fashion is. Faced with their\nwork being broken by armchair developers on some mailing list, they might\njust say screw it and walk away completely.\n\nAfter all, as the arguments for these systems are not particularly logical,\nthey might slave over hot keyboards for a year to support the Lightning\nNetwork or whatever and then discover that it's no longer the fashionable\nthing ... and that suddenly an even more convoluted design is being\n\"incentivised\".\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/cfb40524/attachment.html>"
            },
            {
                "author": "Jameson Lopp",
                "date": "2015-06-01T16:41:50",
                "message_text_only": "The overlapping consensus mechanisms between the Core Developers, the\nminers, the block chain based businesses, and the end users make it such\nthat the very definition of Bitcoin is not just what any single one of\nthose groups comes to a consensus about. We must ALL be in consensus about\njust what Bitcoin actually is and what its goals should be. As such, the\nonus is on the Core Developers to convince the other groups to either\naccept or reject major changes to the protocol.\n\nGreg made a great point regarding the difficulty in determining the\ndefinition of Bitcoin:\nhttps://twitter.com/lopp/status/596135982539395073/photo/1\n\nMy point being that Bitcoin is inherently a political phenomenon; we're\njust trying to describe the human politics behind Bitcoin with computer\ncode that is reasonably secure against attack.\n\n- Jameson\n\nOn Mon, Jun 1, 2015 at 8:55 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> It's surprising to see a core dev going to the public to defend a proposal\n>> most other core devs disagree on, and then lobbying the Bitcoin ecosystem.\n>>\n>\n> I agree that it is a waste of time. Many agree. The Bitcoin ecosystem\n> doesn't really need lobbying - my experience from talking to businesses and\n> wallet developers months ago is they virtually all see raising capacity as\n> a no brainer ... and some of them see this \"debate\" as despair-inducing\n> insanity.\n>\n> What's happened here is that a small number of people have come to believe\n> they have veto power over changes to Bitcoin, and they have also become\n> *wildly* out of step with what the wider community wants. That cannot\n> last. So, short of some sudden change of heart that lets us kick the can\n> down the road a bit longer, a fork is inevitable.\n>\n> Just be glad it's Gavin driving this and not me ... or a faceless\n> coalition of startups.\n>\n>\n>> Decentralization is the core of Bitcoin's security model and thus that's\n>> what gives Bitcoin its value.\n>>\n>\n> No. Usage is what gives Bitcoin value.\n>\n> It's kind of maddening that I have to point this out. Decentralisation is\n> a means to an end. I first used Bitcoin in April 2009 and it was perfectly\n> decentralised back then: every wallet was a full node and every computer\n> was capable of mining.\n>\n> So if you believe what you just wrote, I guess Bitcoin's value has gone\n> down every day since.\n>\n> On the other hand, if you believe the markets, Bitcoin's value has gone up.\n>\n> Apparently the question of what gives Bitcoin its value is a bit more\n> complicated than that.\n>\n>\n>\n>\n>> : to incentive layer 2 and offchain solutions to scale Bitcoin : there\n>> are promising designs/solutions out there (LN, ChainDB, OtherCoin\n>> protocole, ...), but most don't get much attention, because there is right\n>> now no need for them. And, I am sure new solutions will be invented.\n>>\n>\n> I have seen this notion a few times. I would like to dispose of it right\n> now.\n>\n> I am one of the wallet developers you would be trying to \"incentivise\" by\n> letting Bitcoin break, and I say: get real. Developers are not some\n> bottomless fountain of work that will spit out whatever you like for free\n> if you twist their arms badly enough.\n>\n> The problems that incentivised the creation of Bitcoin existed for decades\n> before Bitcoin was actually invented. Incentives are not enough. Someone\n> has to actually do the work, too. All proposals on the table would:\n>\n>    - Involve enormous amounts of effort from many different people\n>    - Be technically risky (read: we don't know if they would even work)\n>    - Not be Bitcoin\n>\n> The last point is important: people who got interested in Bitcoin and\n> decided to devote their time to it might not feel the same way about some\n> network of payment hubs or whatever today's fashion is. Faced with their\n> work being broken by armchair developers on some mailing list, they might\n> just say screw it and walk away completely.\n>\n> After all, as the arguments for these systems are not particularly\n> logical, they might slave over hot keyboards for a year to support the\n> Lightning Network or whatever and then discover that it's no longer the\n> fashionable thing ... and that suddenly an even more convoluted design is\n> being \"incentivised\".\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/e4b3d878/attachment.html>"
            },
            {
                "author": "Eric Voskuil",
                "date": "2015-06-02T00:09:10",
                "message_text_only": "On 06/01/2015 08:55 AM, Mike Hearn wrote:\n>> Decentralization is the core of Bitcoin's security model and thus\nthat's what gives Bitcoin its value.\n> No. Usage is what gives Bitcoin value.\n\nNonsense.\n\nVisa, Dollar, Euro, Yuan, Peso have usage.\n\nThe value in Bitcoin is *despite* it's far lesser usage.\n\nYes, the price is a function of demand, but demand is a function of\nutility. Despite orders of magnitude less usage than state currencies,\nBitcoin has utility. This premium *only* exists due to its lack of\ncentralized control. I would not work full time, or at all, on Bitcoin\nif it was not for decentralization; nor would I hold any of it. I doubt\nanyone would show an interest in Bitcoin if it was not decentralized. If\nit centralized even you would be forced to find something else to do,\nbecause Bitcoin \"usage\" would drop to zero.\n\n> It's kind of maddening that I have to point this out. Decentralisation\nis a means to an end.\n\nNo, it was/is the primary objective. Paypal had already been done. If\nanything is maddening it's that you of all people can't see this. When\npeople talk about the core innovation of Bitcoin, it's a conversation\nabout Byzantine Generals, not wicked growth hacking.\n\n> in April 2009 and it was perfectly decentralised [...] every wallet\nwas a full node and every computer was capable of mining. So if you\nbelieve what you just wrote [...] Bitcoin's value has gone down every\nday since\n\nAn obvious non sequitur. By way of example, if 10 of 10 participants are\ncapable of mining it is not more decentralized than if 1,000 in 100,000\nare doing so. 1,000 *people* in control vs. 10 is two orders of\nmagnitude more decentralized. The *percentage* of the community that\nmines is totally irrelevant, it's the absolute number of (independent)\npeople that matters.\n\nI'm not making a statement on block size, just trying to help ensure\nthat ill-considered ideas, like this inversion of the core value\nproposition, stay on the margins.\n\ne\n\n\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 473 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/d5eed166/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-02T11:03:55",
                "message_text_only": ">\n>  1,000 *people* in control vs. 10 is two orders of\n\nmagnitude more decentralized.\n\n\nYet Bitcoin has got worse by all these metrics: there was a time before\nmining pools when there were ~thousands of people mining with their local\nCPUs and GPUs. Now the number of full nodes that matter for block selection\nnumber in the dozens, and all the other miners just follow their blocks\nblindly.\n\nIf you really believe that decentralisation is, itself, the end, then why\nnot go use an \"ASIC resistant\" alt coin with no SPV or web wallets which\nresembles Bitcoin at the end of 2009? That'd be a whole lot more\ndecentralised than what you have now.\n\nThe *percentage* of the community that mines is totally irrelevant, it's\n> the absolute number of (independent) people that matters.\n>\n\nSo usage does matter, then? You'd rather have a coin that has power\nconcentrated in a far smaller elite, proportionally, but has overall more\nusage? If there are say, 5000 full nodes today, and in ten years there are\n6000, and they all run in vast datacenters and are owned by large\ncompanies, you'll feel like Bitcoin is more decentralised than ever?\n(n.b. I do not think this situation will ever happen, it's just an example).\n\nThat's not the vibe I'm getting from most people on this list. What I'm\nseeing is complaints about how in the good old days back when Core was the\nonly wallet and ASICs hadn't been made,  there were lots of nodes and lots\nof people mining solo and since then it's all been downhill and woe is us\n... and let's throw on the brakes in case it gets worse.\n\nNot for the first time, these discussions remind me very strongly of the\nold desktop Linux/free software debates.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/0a67d49c/attachment.html>"
            },
            {
                "author": "Eric Voskuil",
                "date": "2015-06-02T16:18:56",
                "message_text_only": "On 06/02/2015 04:03 AM, Mike Hearn wrote:\n>\n>      1,000 *people* in control vs. 10 is two orders of\n>\n>     magnitude more decentralized. \n>\n>\n> Yet Bitcoin has got worse by all these metrics: there was a time\n> before mining pools when there were ~thousands of people mining with\n> their local CPUs and GPUs. Now the number of full nodes that matter\n> for block selection number in the dozens, and all the other miners\n> just follow their blocks blindly.\n\nA mining pool is not a person, a full node is not a miner, and\ncooperation is not control.\n\nhttp://bravenewcoin.com/news/number-of-bitcoin-miners-far-higher-than-popular-estimates/\n\nThe entire Bitcoin ecosystem cooperates, that is what consensus means.\nEstablishing proof of that cooperation is the purpose of Bitcoin.\n\nDecentralization is about keeping control out of the hands of the state\n(any entity that would substitute violence for consensus). Nobody has\nthe power to compel the cooperation of individual miners in a pool. When\nstate power is applied to a pool operator the miners (people) retain\ntheir vote.\n\ne\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/228e8429/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 473 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/228e8429/attachment.sig>"
            },
            {
                "author": "odinn",
                "date": "2015-06-13T06:05:35",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n\n\nOn 06/02/2015 04:03 AM, Mike Hearn wrote:\n(...)\n> \n> If you really believe that decentralisation is, itself, the end,\n> then why not go use an \"ASIC resistant\" alt coin with no SPV or web\n> wallets which resembles Bitcoin at the end of 2009? That'd be a\n> whole lot more decentralised than what you have now.\n> \n> The *percentage* of the community that mines is totally\n> irrelevant, it's the absolute number of (independent) people that\n> matters.\n> \n> \n> So usage does matter, then? You'd rather have a coin that has\n> power concentrated in a far smaller elite, proportionally, but has\n> overall more usage? If there are say, 5000 full nodes today, and in\n> ten years there are 6000, and they all run in vast datacenters and\n> are owned by large companies, you'll feel like Bitcoin is more\n> decentralised than ever?   (n.b. I do not think this situation will\n> ever happen, it's just an example).\n> \n\nSomething you said about \"power concentrated,\" made me think I should\npost this here:\n\nhttps://twitter.com/adam3us/status/608920099609817088\n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVe8gvAAoJEGxwq/inSG8CcykH/0d+WuPnzFWooCRJR+FwaI4w\nAd0z5GSLfYKGnmMMbbqkLsIA2GsfRAvivrsfZYd4slF5C7HEDGa3J/NC72U46dk6\nqVm07UNBO3V+loLJtStIQQkg3tVGWjXeiySf4E4b8wlaZiBMS9WW0sAOWUJiGMDQ\njKNRpjXobkQGd8C+VJXDpgtmiY60bS4l6j7bbYv+mU6LxhLwCVCqjRJSEN08BH4E\nAOwJg1qlORHPnrepfeJrB6TVxeHuLjCjWodXQ0jHbNchVQw7zc81gKrD40BJTzyO\nTTtGPu3JUkcHtx7MVLbIdYNVElqxMS5Li+j9j3h+m9eGSaNgOOl3+8VGJexKPKI=\n=j5Fh\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Proposed alternatives to the 20MB step",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "odinn",
                "Eric Voskuil",
                "J\u00e9r\u00f4me Legoupil",
                "Adam Back",
                "Mike Hearn",
                "Gavin Andresen",
                "Jameson Lopp"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 24933
        }
    },
    {
        "title": "[Bitcoin-development] Version bits proposal",
        "thread_messages": [
            {
                "author": "Potter QQ",
                "date": "2015-06-01T14:50:28",
                "message_text_only": "oh my God ...\n\n\u53d1\u81ea\u6211\u7684 iPhone\n\n> \u5728 2015\u5e745\u670827\u65e5\uff0c19:26\uff0cTier Nolan <tier.nolan at gmail.com> \u5199\u9053\uff1a\n> \n> \n> \n>> On Wed, May 27, 2015 at 11:15 AM, Peter Todd <pete at petertodd.org> wrote:\n>> The median time mechanism is basically a way for hashing power to show\n>> what time they think it is. Equally, the nVersion soft-fork mechanism is\n>> a way for hashing power to show what features they want to support.\n> \n> Fair enough.  It means slightly more processing, but the median time could be cached in the header index, so no big deal.\n> \n>> Block counts are inconvenient for planning, as there's no guarantee\n>> they'll actually happen in any particular time frame, forward and back.\n> \n> I don't think the deadline needs to be set that accurately.  A roughly 6 month deadline should be fine, but as you say a majority of miners is needed to abuse the median time and it is already a miner poll.\n> \n> Perhaps the number of blocks used in the median could be increased to reduce \"noise\".\n> \n> The median time could be median of the last 144 blocks plus 12 hours.\n>  \n>> If you assume no large reorganizations, your table of known BIPs can\n>> just as easily be a list of block heights even if the median time\n>> mechanism is used.\n> \n> I think it makes it easier to write the code.  It reduced the state that needs to be stored per BIP.  You don't need to check if the previous bips were all accepted.\n> \n> Each bit is assigned to a particular BIP for a particular range of times (or blocks).\n> \n> If block numbers were used for the deadline, you just need to check the block index for the deadline block.\n> \n> enum {\n>     BIP_INACTIVE = 0,\n>     BIP_ACTIVE,\n>     BIP_LOCKED\n>     BIP_INVALID_BLOCK,\n> }\n> \n> int GetBIPState(block, bip) \n> {\n>     if (block.height == bip.deadline)  // Bit must be set to match locked/unlocked at deadline\n>     {\n>         int bipState = check_supermajority(...);\n>         if (bipState == BIP_LOCKED && (block.nVersion & bip.bit)\n>             return BIP_LOCKED;\n> \n>         if (bipState != BIP_LOCKED && (block.nVersion & (~bip.bit)))\n>             return BIP_INACTIVE;\n> \n>         return BIP_INVALID_BLOCK;\n>     }\n> \n>     if (block.height > deadline) // Look at the deadline block to determine if the BIP is locked\n>         return (block_index[deadline].nVersion & bip_bit) != 0 ? BIP_LOCKED : BIP_INACTIVE;\n> \n>     if (block.height < startline + I) // BIP cannot activate/lock until startline + implicit window size\n>         return INACTIVE;\n> \n>     return check_supermajority(....) // Check supermajority of bit\n> }\n> \n> The block at height deadline would indicate if the BIP was locked in.\n> \n> Block time could still be used as long as the block height was set after that.  The deadline_time could be in six months.  The startline height could be the current block height and the deadline_height could be startline + 35000.  \n> \n> The gives roughly\n> \n> start time = now\n> deadline time = now + six months\n> deadline height = now + eight months\n> \n> The deadline height is the block height when the bit is returned to the pool but the deadline time is when the BIP has to be accepted.\n> \n> It also helps with the warning system.  For each block height, there is a set of known BIP bits that are allowed.  Once the final deadline is passed, the expected mask is zeros.\n> \n>> On Wed, May 27, 2015 at 11:15 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n>> On May 27, 2015 11:35 AM, \"Tier Nolan\" <tier.nolan at gmail.com> wrote:\n>> \n>> > Was the intention to change the 95% rule.  You need 750 of the last 1000 to activate and then must wait at least 1000 for implication?\n>> \n>> You need 75% to start applying it, 95% to start rejecting blocks that don't apply it.\n> \n> I think the phrasing is ambiguous.  I was just asking for clarification.\n> \n> \"Whenever I out of any W subsequent blocks (regardless of the block itself) have bit B set,\"\n> \n> That suggests that the I of W blocks for the 95% rule must happen after activation.  This makes the rule checking harder.  Easier to use the current system, where blocks that were part of the 750 rule also count towards the 95% rule.\n> ------------------------------------------------------------------------------\n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/c8bd5163/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-03T20:42:44",
                "message_text_only": "Thanks for all the comments.\n\nI plan to address the feedback and work on an implementation next week.\n\nOn Tue, May 26, 2015 at 6:48 PM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> Hello everyone,\n>\n> here is a proposal for how to coordinate future soft-forking consensus\n> changes: https://gist.github.com/sipa/bf69659f43e763540550\n>\n> It supports multiple parallel changes, as well as changes that get\n> permanently rejected without obstructing the rollout of others.\n>\n> Feel free to comment. As the gist does not support notifying participants\n> of new comments, I would suggest using the mailing list instead.\n>\n> This is joint work with Peter Todd and Greg Maxwell.\n>\n> --\n> Pieter\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/f0fe1bfb/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Version bits proposal",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Pieter Wuille",
                "Potter QQ"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 5464
        }
    },
    {
        "title": "[Bitcoin-development] soft-fork block size increase (extension blocks)",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2015-06-01T15:40:17",
                "message_text_only": "Hi Gavin\n\nSorry for slow response & broken threading - mailbox filled up & only\nsaw your response on archive.\n\nI do earnestly think opt-in block-size increases are politically\ncleaner (gives different people different sized blocks by their own\nvolition without forcing a compromise) and less risky than hard forks.\nParticularly if a hard-fork were really provoked without clear and\nwide consensus - dragons lay there.\n\n> Then ask the various wallet developer how long it would take them to update\n> their software to support something like this,\n\nI don't think thats any particular concern, extension block payments\nare forwards and backwards compatible.  Businesses who are keen to\nhave more transactions, would make it their problem to implement in\ntheir wallet, or ask the wallet vendor/maintainer they're working with\nto do it.  Nothing breaks if they dont use it.  The people that have\nthe need for it will work on it.  Market at work.  If it turns out\nthey dont really have a need for it, just projected huge numbers for\ntheir business plan that say dont materialise, well no foul.\n\n> and do some UI mockups of what the experience would look like for users.\n\nI am not a UX guy, but for example it might be appropriate for tipping\nservices or other micropayments to use an extension block.  Or small\nretail payments.  They can choose what address they use.  Merchants,\nintegrators etc can do likewise.\nIt gives plenty enough scope that people can work with useful\ntrade-offs while others work on lightning.\n\n> If there are two engineering solutions to a problem, one really simple, and\n> one complex, why would you pick the complex one?\n\nBecause the more complex one is safer, more flexible, more future\nproof and better for decentralisation (and so as a bonus and might\nactually get done without more months of argument as its less\ncontentious because it gives users choice to opt-in).  Bitcoin itself\nis complex, a central ledger is simpler but as we know uninteresting\nwhich is to say this is a security tradeoff.\n\nObviously I do appreciate KISS as a design principle, and utility of\nincremental improvements, but this is a security trade-off we're\ndiscussing here.  I am proposing a way to not weaken security, while\ngetting what you think is important - access to more TPS with a higher\ncentralisation tradeoff (for those who opt-in to it, rather than for\neveryone whether that tradeoff is strongly against their interests or\nnot).\n\nThe decentralisation metrics are getting worse, not better, see Greg\nMaxwell's comments\nhttp://www.reddit.com/r/Bitcoin/comments/37vg8y/is_the_blockstream_company_the_reason_why_4_core/crqg381\n\nThis would not by those metrics be a good moment in history to make\nthe situation worse.\n\n> Especially if the complex solution has all of the problems of the simple\n> one (20MB extension blocks are just as \"dangerous\" as 20MB main blocks,\n> yes? If not, why not?)\n\nNot at all, thats the point.  Bitcoin has a one-size fits all\nblocksize.  People can pool mine the 8MB extension block, while solo\nor GBT mining the 1MB block.  Thats more centralising than staying at\n1MB (because to get the fees from the extension block some people\nwithout that kind of bandwidth are pool mining 8/9th of the lower\nsecurity/decentralisation transactions.  But its less centralising\nthan a fixed blocksize of 9MB (1+8 for apples/apples) because\nrealistically if those transactions are not spam, they would've\nhappened offchain, and offchain until we get lightning like systems\nup, means central systems which are worse than the slight\ncentralisation of 8MB blocks being single servers and prone to custody\n& security failure.  I think you made that point yourself in a recent\npost also.\n\nSound good? ;)  Seriously I think its the least bad idea I've heard on\nthis topic.\n\nAs an aside, a risk with using companies as a sounding board, is that\nyou can get a misleading sense of consensus.  Did they understand the\ntradeoff between security (decentralisation) and blocksize.  Did they\ncare?  Do they represent users interests?  Would they have \"voted\"\ninstead for extension blocks if it was presented in similar terms?  (I\nhave to imagine they might have preferred extension blocks given the\nbetter story if you gloss over complexity and tradeoffs).\n\nAdam"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T16:12:28",
                "message_text_only": "Hi Adam,\n\nI have more experience than Gavin of building consumer wallets, so I'll\nmake an attempt to answer your questions.\n\n> Then ask the various wallet developer how long it would take them to\n> update\n> > their software to support something like this,\n>\n> I don't think thats any particular concern\n\n\nI am a wallet developer and I am telling you that it is.\n\n\n> Businesses who are keen to\n> have more transactions, would make it their problem to implement in\n> their wallet, or ask the wallet vendor/maintainer they're working with\n> to do it.  Nothing breaks if they dont use it.\n\n\nI don't see how this is the case. If an exchange supports extension blocks\nand I withdraw from that to a wallet that doesn't, the money will never\narrive from my perspective. Yet the exchange will claim they sent it and\nthey will wash their hands of the matter. Disaster.\n\nI am not a UX guy\n>\n\nBut I am. I've designed both consumer and engineering UI's at Google, and\nalso more recently for Lighthouse.\n\nAttempting to explain to a user why they sent money that didn't show up on\nthe other end is a non starter. It's bad enough when things take a long\ntime to confirm or bugs cause propagation failures. Doing it\ndeliberately is not going to work. Payments *must* be reliable and wallets\n*must* be compatible with each other.\n\nThis is one reason why a Lightning style approach also isn't going to work\nany time soon. For example, it would require people to abandon Bitcoin\naddresses. I pushed for that before, around the P2SH time, and Gavin\ncorrectly intuited that the community wasn't ready for it yet. I'm not sure\nmuch has changed.\n\n\n> Because the more complex one is safer, more flexible, more future\n> proof and better for decentralisation\n\n\nI disagree with all of those points. I find Lightning/Stroem etc to be more\ndangerous, less flexible, and worse for decentralisation. I explain why\nhere:\n\nhttps://medium.com/@octskyward/the-capacity-cliff-586d1bf7715e\n\nYou mentioned decentralisation metrics. Gregory's post is ignoring one of\nthe most important decentralisation metrics, which is number of wallets\nmade by independent developers. That has got dramatically better over time.\nIt would get worse if wallets became more complex very suddenly.\n\n\n> As an aside, a risk with using companies as a sounding board, is that\n> you can get a misleading sense of consensus.\n\n\n>From what I can tell Blockstream employees are just ignoring those\ncompanies entirely, which will give you a radically more distorted view of\nthe consensus. As companies providing services to our community have\nserious economic weight, it stands to reason that their opinions would\nmatter a great deal. Yet on this mailing list I see zero effort to even\nrecognise their concerns, let alone care about them.\n  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\nAnyway, let me repeat again to make it clear - as someone who has spent\nfive years writing SPV wallets, I am not on board with extension blocks or\nany other Rube Goldberg contraption that exists purely to work around\ntheoretical objections by Blockstream employees+Peter Todd, which is what\nthis feels like to me.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/044693d8/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-01T17:21:15",
                "message_text_only": "Mike wrote:\n>> Businesses who are keen to\n>> have more transactions, would make it their problem to implement in\n>> their wallet, or ask the wallet vendor/maintainer they're working with\n>> to do it.  Nothing breaks if they dont use it.\n>\n>\n> I don't see how this is the case. If an exchange supports extension blocks\n> and I withdraw from that to a wallet that doesn't, the money will never\n> arrive from my perspective. Yet the exchange will claim they sent it and\n> they will wash their hands of the matter. Disaster.\n\nTo be clear in case you are missing part of the mechanism.: it is\nforward and backwards compatible meaning a 1MB address can receive\npayments from an 8MB address (at reduced security if it has software\nthat doesnt understand it) and a 1MB address can pay an 8MB address by\npaying to an OP_TRUE that has meaning to the extension block nodes.\n\nA 1MB client wont even understand the difference between a 1MB and 8MB\nout payment.  An 8MB client will understand and pay 1MB addresses in a\ndifferent way (moving the coin back to the 1MB chain).\n\nSo its opt-in and incrementally deployable.  Exchanges could encourage\ntheir users to use wallets that support 8MB blocks, eg by charging a\nfee for 1MB transactions.  If 1MB blocks experience significant fee\npressure, this will be persuasive.  Or they could chose not to and eat\nthe cost.  This is all normal market adoption of a new cheaper\ntechnical option (in this case with a tradeoff of reduced\nsecurity/more centralisation for those opting in to it).\n\n>> Because the more complex one is safer, more flexible, more future\n>> proof and better for decentralisation\n>\n> I disagree with all of those points. I find Lightning/Stroem etc to be more\n> dangerous, less flexible, and worse for decentralisation. I explain why\n> here:\n\nExtension blocks & lightning are unrelated things.\n\nWhile I understand the need for being practical, there is IMO, amongst\nengineering maxims something as far as being too pragmatic,\ndangerously pragmatic even.  We cant do stuff in bitcoin that has bad\ncarry costs, nor throw out the baby with the bathwater.\n\nThe situation is just that we are facing a security vs volume tradeoff\nand different people will have different requirements and comfort\nzones.  If I am not misremembering, I think you've sided typically\nwith the huge block, big data center only end of the spectrum.  What I\nam proposing empowers you to do experiments in that direction without\ngetting into a requirements conflict with people who value more\nstrongly the bitcoin properties arising from it being robustly\ndecentralised.\n\nI am not sure personally where the blocksize discussion comes out - if\nit stays as is for a year, in a wait and see, reduce spam, see\nfee-pressure take effect as it has before, work on improving improve\ndecentralisation metrics, relay latency, and do a blocksize increment\nto kick the can if-and-when it becomes necessary and in the mean-time\ntry to do something more long-term ambitious about scale rather than\nvolume.  Bitcoin without scale improvements probably wont get the\nvolume people would like.  So scale is more important than volume; and\nsecurity (decentralisation) is important too.  To the extreme analogy\nwe could fix scale tomorrow by throwing up a single high perf\ndatabase, but then we'd break the security properties arising from\ndecentralisation.  We should improve both within an approximately safe\nenvelope IMO.\n\nAdam"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-01T18:01:53",
                "message_text_only": ">\n> (at reduced security if it has software that doesnt understand it)\n\n\nWell, yes. Isn't that rather key to the issue?  Whereas by simply\nincreasing the block size, SPV wallets don't care (same security and\nprotocol as before) and fully validating wallets can be updated with a very\nsmall code change.\n\n\n> A 1MB client wont even understand the difference between a 1MB and 8MB\n> out payment.\n\n\nLet's say an old client makes a payment that only gets confirmed in an\nextension block. The wallet will think the payment is unconfirmed and show\nthat to the user forever, no?\n\nCan you walk through the UX for each case?\n\n\n> If I am not misremembering, I think you've sided typically\n> with the huge block, big data center only end of the spectrum.\n\n\nIt would be Satoshi, that argued that.\n\nI think there must be a communication issue here somewhere. I'm not sure\nhow this meme has taken hold amongst you guys, as I am the guy who wrote\nthe scalability page back in 2011:\n\nhttps://en.bitcoin.it/wiki/Scalability\n\nIt says:\n\n*The core Bitcoin network can scale to much higher transaction rates than\nare seen today, assuming that nodes in the network are primarily running on\nhigh end servers rather than desktops. *\n\n\nBy \"much higher rates\" I meant VISA scale and by \"high end server\" I meant\nhigh end by today's standards not tomorrows. There's a big difference\nbetween a datacenter and a single server! By definition a single server is\nnot a datacenter, although it would be conventional to place it in\none. But even\nwith the most wildly optimistic growth imaginable, I couldn't foresee a\ntime when you needed more than a single machine to keep up with the\ntransaction stream.\n\nAnd we're not going to get to VISA scale any time soon: I don't think I've\never argued we will. If it does happen it would presumably be decades away.\nAgain, short of some currently unimagined killer app.\n\nSo I don't believe I've ever argued this, and honestly I kinda feel people\nare putting words in my mouth.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/a93d6e3d/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-02T00:42:41",
                "message_text_only": "On 6/1/2015 10:21 AM, Adam Back wrote:\n> if it stays as is for a year, in a wait and see, reduce spam, see\n> fee-pressure take effect as it has before, work on improving improve\n> decentralisation metrics, relay latency, and do a blocksize increment\n> to kick the can if-and-when it becomes necessary and in the mean-time\n> try to do something more long-term ambitious about scale rather than\n> volume.\n\nWhat's your estimate of the lead time required to kick the can,\nif-and-when it becomes necessary?\n\nThe other time-series I've seen all plot an average block size.  That's\nmisleading, because there's a distribution of block sizes.  If you bin\nby retarget interval and plot every single block, you get this\n\nhttp://i.imgur.com/5Gfh9CW.png\n\nThe max block size has clearly been in play for 8 months already."
            },
            {
                "author": "Richard Moore",
                "date": "2015-06-17T16:17:22",
                "message_text_only": "Awesome graph!\n\nIt would be interesting if you could use your Excel voodoo (or whatever graph app you use) to add density as a heat map, making areas with more blocks red and regions with less blocks blue\u2026\n\n\n> On Jun 1, 2015, at 8:42 PM, Tom Harding <tomh at thinlink.com> wrote:\n> \n> On 6/1/2015 10:21 AM, Adam Back wrote:\n>> if it stays as is for a year, in a wait and see, reduce spam, see\n>> fee-pressure take effect as it has before, work on improving improve\n>> decentralisation metrics, relay latency, and do a blocksize increment\n>> to kick the can if-and-when it becomes necessary and in the mean-time\n>> try to do something more long-term ambitious about scale rather than\n>> volume.\n> \n> What's your estimate of the lead time required to kick the can,\n> if-and-when it becomes necessary?\n> \n> The other time-series I've seen all plot an average block size.  That's\n> misleading, because there's a distribution of block sizes.  If you bin\n> by retarget interval and plot every single block, you get this\n> \n> http://i.imgur.com/5Gfh9CW.png\n> \n> The max block size has clearly been in play for 8 months already.\n> \n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8><(((\u00ba>\n\nRichard Moore ~ Founder\nGenetic Mistakes Software inc.\nphone: (778) 882-6125\nemail: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>\nwww: http://GeneticMistakes.com <http://geneticmistakes.com/>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/2b106d0e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "soft-fork block size increase (extension blocks)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Adam Back",
                "Mike Hearn",
                "Richard Moore",
                "Tom Harding"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 15870
        }
    },
    {
        "title": "[Bitcoin-development] soft-fork block size increase (extensionblocks)",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-01T18:39:31",
                "message_text_only": "> And we're not going to get to VISA scale any time soon\n\nNo, not at these block size limits.  The closer we get to the maximum block size, the slower we grow the average block size toward it.  Number of transactions per day is of course highly correlated with average block size.  Based on these graphs we can expect that hitting 1 million transactions per day will be impossible without raising the maximum block size.\n\n\nhttps://blockchain.info/charts/avg-block-size?showDataPoints=false&show_header=true&daysAverageString=7&timespan=all&scale=1&address=\n\n\n\nhttps://blockchain.info/charts/n-transactions?showDataPoints=false&timespan=all&show_header=true&daysAverageString=7&scale=1&address= \n\n\n\nFrom: Mike Hearn \nSent: Monday, June 01, 2015 11:01 AM\nTo: Adam Back \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)\n\n  (at reduced security if it has software that doesnt understand it) \n\nWell, yes. Isn't that rather key to the issue?  Whereas by simply increasing the block size, SPV wallets don't care (same security and protocol as before) and fully validating wallets can be updated with a very small code change.\n\n  A 1MB client wont even understand the difference between a 1MB and 8MB\n  out payment. \n\nLet's say an old client makes a payment that only gets confirmed in an extension block. The wallet will think the payment is unconfirmed and show that to the user forever, no?\n\nCan you walk through the UX for each case?\n\n  If I am not misremembering, I think you've sided typically\n  with the huge block, big data center only end of the spectrum.  \n\nIt would be Satoshi, that argued that.\n\nI think there must be a communication issue here somewhere. I'm not sure how this meme has taken hold amongst you guys, as I am the guy who wrote the scalability page back in 2011:\n\nhttps://en.bitcoin.it/wiki/Scalability\n\n\nIt says:\n\n  The core Bitcoin network can scale to much higher transaction rates than are seen today, assuming that nodes in the network are primarily running on high end servers rather than desktops. \n\n\nBy \"much higher rates\" I meant VISA scale and by \"high end server\" I meant high end by today's standards not tomorrows. There's a big difference between a datacenter and a single server! By definition a single server is not a datacenter, although it would be conventional to place it in one. But even with the most wildly optimistic growth imaginable, I couldn't foresee a time when you needed more than a single machine to keep up with the transaction stream. \n\n\nAnd we're not going to get to VISA scale any time soon: I don't think I've ever argued we will. If it does happen it would presumably be decades away. Again, short of some currently unimagined killer app.\n\n\nSo I don't believe I've ever argued this, and honestly I kinda feel people are putting words in my mouth.\n\n\n--------------------------------------------------------------------------------\n------------------------------------------------------------------------------\n\n\n\n--------------------------------------------------------------------------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6ea5f791/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image[2].png\nType: image/png\nSize: 53618 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6ea5f791/attachment.png>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image[12].png\nType: image/png\nSize: 50593 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/6ea5f791/attachment-0001.png>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-01T19:02:44",
                "message_text_only": "I also need to argue for increasing the default block limit to the full 1MB in the next release.  We\u2019re already hitting that limit in bursts of transactions, which puts pressure on the average displayed in the below graphs.\n\nFrom: raystonn at hotmail.com \nSent: Monday, June 01, 2015 11:39 AM\nTo: Mike Hearn ; Adam Back \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)\n\n> And we're not going to get to VISA scale any time soon\n\nNo, not at these block size limits.  The closer we get to the maximum block size, the slower we grow the average block size toward it.  Number of transactions per day is of course highly correlated with average block size.  Based on these graphs we can expect that hitting 1 million transactions per day will be impossible without raising the maximum block size.\n\n\nhttps://blockchain.info/charts/avg-block-size?showDataPoints=false&show_header=true&daysAverageString=7&timespan=all&scale=1&address=\n\n\n\nhttps://blockchain.info/charts/n-transactions?showDataPoints=false&timespan=all&show_header=true&daysAverageString=7&scale=1&address= \n\n\n\nFrom: Mike Hearn \nSent: Monday, June 01, 2015 11:01 AM\nTo: Adam Back \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)\n\n  (at reduced security if it has software that doesnt understand it) \n\nWell, yes. Isn't that rather key to the issue?  Whereas by simply increasing the block size, SPV wallets don't care (same security and protocol as before) and fully validating wallets can be updated with a very small code change.\n\n  A 1MB client wont even understand the difference between a 1MB and 8MB\n  out payment. \n\nLet's say an old client makes a payment that only gets confirmed in an extension block. The wallet will think the payment is unconfirmed and show that to the user forever, no?\n\nCan you walk through the UX for each case?\n\n  If I am not misremembering, I think you've sided typically\n  with the huge block, big data center only end of the spectrum.  \n\nIt would be Satoshi, that argued that.\n\nI think there must be a communication issue here somewhere. I'm not sure how this meme has taken hold amongst you guys, as I am the guy who wrote the scalability page back in 2011:\n\nhttps://en.bitcoin.it/wiki/Scalability\n\n\nIt says:\n\n  The core Bitcoin network can scale to much higher transaction rates than are seen today, assuming that nodes in the network are primarily running on high end servers rather than desktops. \n\n\nBy \"much higher rates\" I meant VISA scale and by \"high end server\" I meant high end by today's standards not tomorrows. There's a big difference between a datacenter and a single server! By definition a single server is not a datacenter, although it would be conventional to place it in one. But even with the most wildly optimistic growth imaginable, I couldn't foresee a time when you needed more than a single machine to keep up with the transaction stream. \n\n\nAnd we're not going to get to VISA scale any time soon: I don't think I've ever argued we will. If it does happen it would presumably be decades away. Again, short of some currently unimagined killer app.\n\n\nSo I don't believe I've ever argued this, and honestly I kinda feel people are putting words in my mouth.\n\n\n--------------------------------------------------------------------------------\n------------------------------------------------------------------------------\n\n\n\n--------------------------------------------------------------------------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/555a8150/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image[2].png\nType: image/png\nSize: 53618 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/555a8150/attachment.png>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image[12].png\nType: image/png\nSize: 50593 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/555a8150/attachment-0001.png>"
            }
        ],
        "thread_summary": {
            "title": "soft-fork block size increase (extensionblocks)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Raystonn ."
            ],
            "messages_count": 2,
            "total_messages_chars_count": 8412
        }
    },
    {
        "title": "[Bitcoin-development] Why do we need a MAX_BLOCK_SIZE at all?",
        "thread_messages": [
            {
                "author": "Jim Phillips",
                "date": "2015-06-01T18:32:24",
                "message_text_only": "Ok, I understand at least some of the reason that blocks have to be kept to\na certain size. I get that blocks which are too big will be hard to\npropagate by relays. Miners will have more trouble uploading the large\nblocks to the network once they've found a hash. We need block size\nconstraints to create a fee economy for the miners.\n\nBut these all sound to me like issues that affect some, but not others. So\nit seems to me like it ought to be a configurable setting. We've already\nwitnessed with last week's stress test that most miners aren't even\ncreating 1MB blocks but are still using the software defaults of 730k. If\nthere are configurable limits, why does there have to be a hard limit?\nCan't miners just use the configurable limit to decide what size blocks\nthey can afford to and are thus willing to create? They could just as\neasily use that to create a fee economy. If the miners with the most\nhashpower are not willing to mine blocks larger than 1 or 2 megs, then they\nare able to slow down confirmations of transactions. It may take several\nblocks before a miner willing to include a particular transaction finds a\nblock. This would actually force miners to compete with each other and find\na block size naturally instead of having it forced on them by the protocol.\nRelays would be able to participate in that process by restricting the\nminers ability to propagate large blocks. You know, like what happens in a\nFREE MARKET economy, without burdensome regulation which can be manipulated\nthrough politics? Isn't that what's really happening right now? Different\npolitical factions with different agendas are fighting over how best to\nregulate the Bitcoin protocol.\n\nI know the limit was originally put in place to prevent spamming. But that\nwas when we were mining with CPUs and just beginning to see the occasional\nGPU which could take control over the network and maliciously spam large\nblocks. But with ASIC mining now catching up to Moore's Law, that's not\nreally an issue anymore. No one malicious entity can really just take over\nthe network now without spending more money than it's worth -- and that's\njust going to get truer with time as hashpower continues to grow. And it's\nnot like the hard limit really does anything anymore to prevent spamming.\nIf a spammer wants to create thousands or millions of transactions, a hard\nlimit on the block size isn't going to stop him.. He'll just fill up the\nmempool or UTXO database instead of someone's block database.. And block\nstorage media is generally the cheapest storage.. I mean they could be\nwritten to tape and be just as valid as if they're stored in DRAM. Combine\nthat with pruning, and block storage costs are almost a non-issue for\nanyone who isn't running an archival node.\n\nAnd can't relay nodes just configure a limit on the size of blocks they\nwill relay? Sure they'd still need to download a big block occasionally,\nbut that's not really that big a deal, and they're under no obligation to\npropagate it.. Even if it's a 2GB block, it'll get downloaded eventually.\nIt's only if it gets to the point where the average home connection is too\nslow to keep up with the transaction & block flow that there's any real\nissue there, and that would happen regardless of how big the blocks are. I\npersonally would much prefer to see hardware limits act as the bottleneck\nthan to introduce an artificial bottleneck into the protocol that has to be\nadjusted regularly. The software and protocol are TECHNICALLY capable of\nscaling to handle the world's entire transaction set. The real issue with\nscaling to this size is limitations on hardware, which are regulated by\nMoore's Law. Why do we need arbitrary soft limits? Why can't we allow\nBitcoin to grow naturally within the ever increasing limits of our\nhardware? Is it because nobody will ever need more than 640k of RAM?\n\nAm I missing something here? Is there some big reason that I'm overlooking\nwhy there has to be some hard-coded limit on the block size that affects\nthe entire network and creates ongoing issues in the future?\n\n--\n\n*James G. Phillips IV*\n<https://plus.google.com/u/0/113107039501292625391/posts>\n\n*\"Don't bunt. Aim out of the ball park. Aim for the company of immortals.\"\n-- David Ogilvy*\n\n *This message was created with 100% recycled electrons. Please think twice\nbefore printing.*\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/82b314f9/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-01T19:02:12",
                "message_text_only": "This exact question came up on the Bitcoin Stack Exchange once. I gave an\nanswer here:\nhttp://bitcoin.stackexchange.com/questions/37292/whats-the-purpose-of-a-maximum-block-size/37303#37303\n\nOn Mon, Jun 1, 2015 at 2:32 PM, Jim Phillips <jim at ergophobia.org> wrote:\n\n> Ok, I understand at least some of the reason that blocks have to be kept\n> to a certain size. I get that blocks which are too big will be hard to\n> propagate by relays. Miners will have more trouble uploading the large\n> blocks to the network once they've found a hash. We need block size\n> constraints to create a fee economy for the miners.\n>\n> But these all sound to me like issues that affect some, but not others. So\n> it seems to me like it ought to be a configurable setting. We've already\n> witnessed with last week's stress test that most miners aren't even\n> creating 1MB blocks but are still using the software defaults of 730k. If\n> there are configurable limits, why does there have to be a hard limit?\n> Can't miners just use the configurable limit to decide what size blocks\n> they can afford to and are thus willing to create? They could just as\n> easily use that to create a fee economy. If the miners with the most\n> hashpower are not willing to mine blocks larger than 1 or 2 megs, then they\n> are able to slow down confirmations of transactions. It may take several\n> blocks before a miner willing to include a particular transaction finds a\n> block. This would actually force miners to compete with each other and find\n> a block size naturally instead of having it forced on them by the protocol.\n> Relays would be able to participate in that process by restricting the\n> miners ability to propagate large blocks. You know, like what happens in a\n> FREE MARKET economy, without burdensome regulation which can be manipulated\n> through politics? Isn't that what's really happening right now? Different\n> political factions with different agendas are fighting over how best to\n> regulate the Bitcoin protocol.\n>\n> I know the limit was originally put in place to prevent spamming. But that\n> was when we were mining with CPUs and just beginning to see the occasional\n> GPU which could take control over the network and maliciously spam large\n> blocks. But with ASIC mining now catching up to Moore's Law, that's not\n> really an issue anymore. No one malicious entity can really just take over\n> the network now without spending more money than it's worth -- and that's\n> just going to get truer with time as hashpower continues to grow. And it's\n> not like the hard limit really does anything anymore to prevent spamming.\n> If a spammer wants to create thousands or millions of transactions, a hard\n> limit on the block size isn't going to stop him.. He'll just fill up the\n> mempool or UTXO database instead of someone's block database.. And block\n> storage media is generally the cheapest storage.. I mean they could be\n> written to tape and be just as valid as if they're stored in DRAM. Combine\n> that with pruning, and block storage costs are almost a non-issue for\n> anyone who isn't running an archival node.\n>\n> And can't relay nodes just configure a limit on the size of blocks they\n> will relay? Sure they'd still need to download a big block occasionally,\n> but that's not really that big a deal, and they're under no obligation to\n> propagate it.. Even if it's a 2GB block, it'll get downloaded eventually.\n> It's only if it gets to the point where the average home connection is too\n> slow to keep up with the transaction & block flow that there's any real\n> issue there, and that would happen regardless of how big the blocks are. I\n> personally would much prefer to see hardware limits act as the bottleneck\n> than to introduce an artificial bottleneck into the protocol that has to be\n> adjusted regularly. The software and protocol are TECHNICALLY capable of\n> scaling to handle the world's entire transaction set. The real issue with\n> scaling to this size is limitations on hardware, which are regulated by\n> Moore's Law. Why do we need arbitrary soft limits? Why can't we allow\n> Bitcoin to grow naturally within the ever increasing limits of our\n> hardware? Is it because nobody will ever need more than 640k of RAM?\n>\n> Am I missing something here? Is there some big reason that I'm overlooking\n> why there has to be some hard-coded limit on the block size that affects\n> the entire network and creates ongoing issues in the future?\n>\n> --\n>\n> *James G. Phillips IV*\n> <https://plus.google.com/u/0/113107039501292625391/posts>\n>\n> *\"Don't bunt. Aim out of the ball park. Aim for the company of immortals.\"\n> -- David Ogilvy*\n>\n>  *This message was created with 100% recycled electrons. Please think\n> twice before printing.*\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/1eead1a9/attachment.html>"
            },
            {
                "author": "Jim Phillips",
                "date": "2015-06-01T20:02:31",
                "message_text_only": ">\n> 1. To Maintaining Consensus\n>\n\n\nThere has to be clearly defined rules about which blocks are valid and\n> which are not for the network to agree. Obviously no node will accept a\n> block that is 10 million terabytes, it would be near impossible to download\n> even if it were valid. So where do you set the limit? And what if one nodes\n> sets their limit differently than other nodes on the network? If this were\n> to happen, the network would no longer be in consensus about which blocks\n> were valid when a block was broadcasted that met some nodes' size limits\n> and did not meet others.\n> Setting a network limit on the maximum block size ensures that everyone is\n> in agreement about which blocks are valid and which are not, so that\n> consensus is achieved.\n\n\nIt is as impossible to upload a 10 million terabyte block as it is to\ndownload it. But even on a more realistic scale, of say a 2GB block, there\nare other factors that prevent a rogue miner from being able to flood the\nnetwork using large blocks -- such as the ability to get that block\npropagated before it can be orphaned. A simple solution to these large\nblocks is for relays to set configurable limits on the size of blocks that\nthey will relay. If the rogue miner can't get his megablock propagated\nbefore it is orphaned, his attack will not succeed. It doesn't make the\nblock invalid, just useless as a DoS tool. And over time, relays can raise\nthe limits they set on block sizes they will propagate according to what\nthey can handle. As more and more relays accept larger and larger blocks,\nthe true maximum block size can grow naturally and not require a hard fork.\n\n2. To Avoid (further) Centralization of Pools\n\n\n\nSuppose we remove the 1 MB cap entirely. A large pool says to itself, \"I\n> wish I had a larger percentage of the network hashrate so I could make more\n> profit.\"\n>\n\n\nThen they realize that since there's no block size limit, they can make a\n> block that is 4 GB large by filling it with nonsense. They and a few other\n> pools have bandwidth large enough to download a block of this size in a\n> reasonable time, but a smaller pool does not. The tiny pool is then stuck\n> trying to download a block that is too large, and continuing to mine on\n> their previous block until they finish downloading the new block. This\n> means the small pool is now wasting their time mining blocks that are\n> likely never to be accepted even if they were solved, since they wouldn't\n> be in the 'longest' chain. Since their hash power is wasted, the original\n> pool operator now has effectively forced smaller pools out of the network,\n> and simultaneously increased their percentage of the network hashrate.\n\n\n\nYet another issue that can be addressed by allowing relays to restrict\npropagation. Relays are just as impacted by large blocks filled with\nnonsense as small miners. If a relay downloads a block and sees that it's\nfull of junk or comes from a miner notorious for producing bad blocks, he\ncan refuse to relay it. If a bad block doesn't propagate, it can't hurt\nanyone. Large miners also typically have to use static IPs. Anonymizing\nnetworks like TOR aren't geared towards handling that type of traffic. They\ncan't afford to have the reputation of the IPs they release blocks with\ntarnished, so why would they risk getting blacklisted by relays?\n\n> 3. To Make Full Nodes Feasible\n>\n\n\nEssentially, larger blocks means fewer people that can download and verify\n> the chain, which results fewer people willing to run full nodes and store\n> all of the blockchain data.\n>\n\n\nIf there were no block size limit, malicious persons could artificially\n> bloat the block with nonsense and increase the server costs for everyone\n> running a full node, in addition to making it infeasible for people with\n> just home computers to even keep up with the network.\n> The goal is to find a block size limit with the right tradeoff between\n> resource restrictions (so that someone on their home computer can still run\n> a full node), and functional requirements (being able to process X number\n> of transactions per second). Eventually, transactions will likely be done\n> off-chain using micropayment channels, but no such solution currently\n> exists.\n\n\nThis same attack could be achieved simply by sending lots of spam\ntransactions and bloating the UTXO database or the mempool. In fact, given\nthat block storage is substantially cheaper than UTXO/mempool storage, I'd\nbe far more concerned with that type of attack. And this particular attack\nvector has already been largely mitigated by pruning and could be further\nmitigated by allowing relays to decide which blocks they propagate.\n\n\n--\n*James G. Phillips IV*\n<https://plus.google.com/u/0/113107039501292625391/posts>\n<http://www.linkedin.com/in/ergophobe>\n\n*\"Don't bunt. Aim out of the ball park. Aim for the company of immortals.\"\n-- David Ogilvy*\n\n *This message was created with 100% recycled electrons. Please think twice\nbefore printing.*\n\nOn Mon, Jun 1, 2015 at 2:02 PM, Stephen Morse <stephencalebmorse at gmail.com>\nwrote:\n\n> This exact question came up on the Bitcoin Stack Exchange once. I gave an\n> answer here:\n> http://bitcoin.stackexchange.com/questions/37292/whats-the-purpose-of-a-maximum-block-size/37303#37303\n>\n> On Mon, Jun 1, 2015 at 2:32 PM, Jim Phillips <jim at ergophobia.org> wrote:\n>\n>> Ok, I understand at least some of the reason that blocks have to be kept\n>> to a certain size. I get that blocks which are too big will be hard to\n>> propagate by relays. Miners will have more trouble uploading the large\n>> blocks to the network once they've found a hash. We need block size\n>> constraints to create a fee economy for the miners.\n>>\n>> But these all sound to me like issues that affect some, but not others.\n>> So it seems to me like it ought to be a configurable setting. We've already\n>> witnessed with last week's stress test that most miners aren't even\n>> creating 1MB blocks but are still using the software defaults of 730k. If\n>> there are configurable limits, why does there have to be a hard limit?\n>> Can't miners just use the configurable limit to decide what size blocks\n>> they can afford to and are thus willing to create? They could just as\n>> easily use that to create a fee economy. If the miners with the most\n>> hashpower are not willing to mine blocks larger than 1 or 2 megs, then they\n>> are able to slow down confirmations of transactions. It may take several\n>> blocks before a miner willing to include a particular transaction finds a\n>> block. This would actually force miners to compete with each other and find\n>> a block size naturally instead of having it forced on them by the protocol.\n>> Relays would be able to participate in that process by restricting the\n>> miners ability to propagate large blocks. You know, like what happens in a\n>> FREE MARKET economy, without burdensome regulation which can be manipulated\n>> through politics? Isn't that what's really happening right now? Different\n>> political factions with different agendas are fighting over how best to\n>> regulate the Bitcoin protocol.\n>>\n>> I know the limit was originally put in place to prevent spamming. But\n>> that was when we were mining with CPUs and just beginning to see the\n>> occasional GPU which could take control over the network and maliciously\n>> spam large blocks. But with ASIC mining now catching up to Moore's Law,\n>> that's not really an issue anymore. No one malicious entity can really just\n>> take over the network now without spending more money than it's worth --\n>> and that's just going to get truer with time as hashpower continues to\n>> grow. And it's not like the hard limit really does anything anymore to\n>> prevent spamming. If a spammer wants to create thousands or millions of\n>> transactions, a hard limit on the block size isn't going to stop him..\n>> He'll just fill up the mempool or UTXO database instead of someone's block\n>> database.. And block storage media is generally the cheapest storage.. I\n>> mean they could be written to tape and be just as valid as if they're\n>> stored in DRAM. Combine that with pruning, and block storage costs are\n>> almost a non-issue for anyone who isn't running an archival node.\n>>\n>> And can't relay nodes just configure a limit on the size of blocks they\n>> will relay? Sure they'd still need to download a big block occasionally,\n>> but that's not really that big a deal, and they're under no obligation to\n>> propagate it.. Even if it's a 2GB block, it'll get downloaded eventually.\n>> It's only if it gets to the point where the average home connection is too\n>> slow to keep up with the transaction & block flow that there's any real\n>> issue there, and that would happen regardless of how big the blocks are. I\n>> personally would much prefer to see hardware limits act as the bottleneck\n>> than to introduce an artificial bottleneck into the protocol that has to be\n>> adjusted regularly. The software and protocol are TECHNICALLY capable of\n>> scaling to handle the world's entire transaction set. The real issue with\n>> scaling to this size is limitations on hardware, which are regulated by\n>> Moore's Law. Why do we need arbitrary soft limits? Why can't we allow\n>> Bitcoin to grow naturally within the ever increasing limits of our\n>> hardware? Is it because nobody will ever need more than 640k of RAM?\n>>\n>> Am I missing something here? Is there some big reason that I'm\n>> overlooking why there has to be some hard-coded limit on the block size\n>> that affects the entire network and creates ongoing issues in the future?\n>>\n>> --\n>>\n>> *James G. Phillips IV*\n>> <https://plus.google.com/u/0/113107039501292625391/posts>\n>>\n>> *\"Don't bunt. Aim out of the ball park. Aim for the company of\n>> immortals.\" -- David Ogilvy*\n>>\n>>  *This message was created with 100% recycled electrons. Please think\n>> twice before printing.*\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/b87b3b04/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Why do we need a MAX_BLOCK_SIZE at all?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jim Phillips",
                "Stephen Morse"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 20070
        }
    },
    {
        "title": "[Bitcoin-development] We are filling most blocks right now - Let's change the max blocksize default",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-01T20:18:01",
                "message_text_only": "We seem to be experiencing bursts of high transaction rate right now.  https://blockchain.info/ shows nearly all blocks full.  We should increase the default max block size to 1MB to give us more space where we see the 731MB blocks, as we don\u2019t want to be limited by those who don\u2019t bother to change the settings from the default, and thus probably aren\u2019t paying attention to this whole discussion.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/85679428/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "We are filling most blocks right now - Let's change the max blocksize default",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Raystonn ."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 581
        }
    },
    {
        "title": "[Bitcoin-development] soft-fork block size increase(extensionblocks)",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-17T15:28:07",
                "message_text_only": "Wow.  That email was delayed by the list for quite some time.  It was sent on 6/1.\nFrom: Raystonn . \nSent: Monday, June 01, 2015 12:02 PM\nTo: Mike Hearn ; Adam Back \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] soft-fork block size increase(extensionblocks)\n\nI also need to argue for increasing the default block limit to the full 1MB in the next release.  We\u2019re already hitting that limit in bursts of transactions, which puts pressure on the average displayed in the below graphs.\n\nFrom: raystonn at hotmail.com \nSent: Monday, June 01, 2015 11:39 AM\nTo: Mike Hearn ; Adam Back \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)\n\n> And we're not going to get to VISA scale any time soon\n\nNo, not at these block size limits.  The closer we get to the maximum block size, the slower we grow the average block size toward it.  Number of transactions per day is of course highly correlated with average block size.  Based on these graphs we can expect that hitting 1 million transactions per day will be impossible without raising the maximum block size.\n\n\nhttps://blockchain.info/charts/avg-block-size?showDataPoints=false&show_header=true&daysAverageString=7&timespan=all&scale=1&address=\n\n\n\nhttps://blockchain.info/charts/n-transactions?showDataPoints=false&timespan=all&show_header=true&daysAverageString=7&scale=1&address= \n\n\n\nFrom: Mike Hearn \nSent: Monday, June 01, 2015 11:01 AM\nTo: Adam Back \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] soft-fork block size increase (extensionblocks)\n\n  (at reduced security if it has software that doesnt understand it) \n\nWell, yes. Isn't that rather key to the issue?  Whereas by simply increasing the block size, SPV wallets don't care (same security and protocol as before) and fully validating wallets can be updated with a very small code change.\n\n  A 1MB client wont even understand the difference between a 1MB and 8MB\n  out payment. \n\nLet's say an old client makes a payment that only gets confirmed in an extension block. The wallet will think the payment is unconfirmed and show that to the user forever, no?\n\nCan you walk through the UX for each case?\n\n  If I am not misremembering, I think you've sided typically\n  with the huge block, big data center only end of the spectrum.  \n\nIt would be Satoshi, that argued that.\n\nI think there must be a communication issue here somewhere. I'm not sure how this meme has taken hold amongst you guys, as I am the guy who wrote the scalability page back in 2011:\n\nhttps://en.bitcoin.it/wiki/Scalability\n\n\nIt says:\n\n  The core Bitcoin network can scale to much higher transaction rates than are seen today, assuming that nodes in the network are primarily running on high end servers rather than desktops. \n\n\nBy \"much higher rates\" I meant VISA scale and by \"high end server\" I meant high end by today's standards not tomorrows. There's a big difference between a datacenter and a single server! By definition a single server is not a datacenter, although it would be conventional to place it in one. But even with the most wildly optimistic growth imaginable, I couldn't foresee a time when you needed more than a single machine to keep up with the transaction stream. \n\n\nAnd we're not going to get to VISA scale any time soon: I don't think I've ever argued we will. If it does happen it would presumably be decades away. Again, short of some currently unimagined killer app.\n\n\nSo I don't believe I've ever argued this, and honestly I kinda feel people are putting words in my mouth.\n\n\n--------------------------------------------------------------------------------\n------------------------------------------------------------------------------\n\n\n\n--------------------------------------------------------------------------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n--------------------------------------------------------------------------------\n------------------------------------------------------------------------------\n\n\n\n--------------------------------------------------------------------------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/ad3b151f/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-18T00:04:38",
                "message_text_only": "\"Increase DEFAULT_BLOCK_MAX_SIZE to 1MB\"\nhttps://github.com/bitcoin/bitcoin/pull/6231\n\nOn 6/17/2015 8:28 AM, Raystonn . wrote:\n> Wow.  That email was delayed by the list for quite some time.  It was \n> sent on 6/1.\n>\n>> I also need to argue for increasing the default block limit to the \n>> full 1MB in the next release. We\u2019re already hitting that limit in \n>> bursts of transactions, which puts pressure on the average displayed \n>> in the below graphs.\n>\n>"
            }
        ],
        "thread_summary": {
            "title": "soft-fork block size increase(extensionblocks)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Raystonn .",
                "Tom Harding"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 5057
        }
    },
    {
        "title": "[Bitcoin-development] Meta suggestions for this block size debate",
        "thread_messages": [
            {
                "author": "Mats Henricson",
                "date": "2015-06-01T22:22:01",
                "message_text_only": "Hi!\n\nMy fingers have been itching many times now, this debate\ndrives me nuts.\n\nI just wish all posters could follow two simple principles:\n\n1. Read up. Yes. All of what has been written. Yes, it will\n   take many hours. But if you're rehashing what other\n   smarter people have said over and over before, you're\n   wasting hundreds of peoples time. Please don't.\n\n2. Be helpful. Suggest alternatives. Just cristizising is\n   just destructive. If you want no change, then say so.\n\nMats"
            },
            {
                "author": "gabe appleton",
                "date": "2015-06-02T03:02:15",
                "message_text_only": "Also, can we try to get a wiki page for the debate? That way we could\ncondense the information as much as possible. I'll be willing to assist if\nthe page gets approval.\nOn Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n\n> Hi!\n>\n> My fingers have been itching many times now, this debate\n> drives me nuts.\n>\n> I just wish all posters could follow two simple principles:\n>\n> 1. Read up. Yes. All of what has been written. Yes, it will\n>    take many hours. But if you're rehashing what other\n>    smarter people have said over and over before, you're\n>    wasting hundreds of peoples time. Please don't.\n>\n> 2. Be helpful. Suggest alternatives. Just cristizising is\n>    just destructive. If you want no change, then say so.\n>\n> Mats\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/5a5d0607/attachment.html>"
            },
            {
                "author": "Ethan Heilman",
                "date": "2015-06-02T03:32:58",
                "message_text_only": "I second this, I don't have time to read the large number of emails\ngenerated every day from the block size debate. A summary of the various\npositions and arguments would be extremely helpful.\n\nOn Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com> wrote:\n\n> Also, can we try to get a wiki page for the debate? That way we could\n> condense the information as much as possible. I'll be willing to assist if\n> the page gets approval.\n> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>\n>> Hi!\n>>\n>> My fingers have been itching many times now, this debate\n>> drives me nuts.\n>>\n>> I just wish all posters could follow two simple principles:\n>>\n>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>    take many hours. But if you're rehashing what other\n>>    smarter people have said over and over before, you're\n>>    wasting hundreds of peoples time. Please don't.\n>>\n>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>    just destructive. If you want no change, then say so.\n>>\n>> Mats\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/223152c1/attachment.html>"
            },
            {
                "author": "gabe appleton",
                "date": "2015-06-02T03:52:14",
                "message_text_only": "I don't have permission to create a page. If someone else does, I'll\nhappily get a framework started.\n\nOn Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:\n\n> I second this, I don't have time to read the large number of emails\n> generated every day from the block size debate. A summary of the various\n> positions and arguments would be extremely helpful.\n>\n> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>\n> wrote:\n>\n>> Also, can we try to get a wiki page for the debate? That way we could\n>> condense the information as much as possible. I'll be willing to assist if\n>> the page gets approval.\n>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>\n>>> Hi!\n>>>\n>>> My fingers have been itching many times now, this debate\n>>> drives me nuts.\n>>>\n>>> I just wish all posters could follow two simple principles:\n>>>\n>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>    take many hours. But if you're rehashing what other\n>>>    smarter people have said over and over before, you're\n>>>    wasting hundreds of peoples time. Please don't.\n>>>\n>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>    just destructive. If you want no change, then say so.\n>>>\n>>> Mats\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/c00b9834/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-06T03:34:22",
                "message_text_only": "Gabe,\n\nDid you ever get an answer to this?\n\nI\"ll have some time tomorrow to be able to help with some work on this and\nwill need to do it myself anyways since I'm not sure I understand the\nnuances, where bitcoin XT fits into the scheme of things (or not) etc.\n\nI would have thought that there would be a testnet4 by now using 8mb\nblocks... but hey that's just me.\n\np.\n\n\n\n\nOn Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com> wrote:\n\n> I don't have permission to create a page. If someone else does, I'll\n> happily get a framework started.\n>\n> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:\n>\n>> I second this, I don't have time to read the large number of emails\n>> generated every day from the block size debate. A summary of the various\n>> positions and arguments would be extremely helpful.\n>>\n>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>\n>> wrote:\n>>\n>>> Also, can we try to get a wiki page for the debate? That way we could\n>>> condense the information as much as possible. I'll be willing to assist if\n>>> the page gets approval.\n>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>>\n>>>> Hi!\n>>>>\n>>>> My fingers have been itching many times now, this debate\n>>>> drives me nuts.\n>>>>\n>>>> I just wish all posters could follow two simple principles:\n>>>>\n>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>    take many hours. But if you're rehashing what other\n>>>>    smarter people have said over and over before, you're\n>>>>    wasting hundreds of peoples time. Please don't.\n>>>>\n>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>    just destructive. If you want no change, then say so.\n>>>>\n>>>> Mats\n>>>>\n>>>>\n>>>> ------------------------------------------------------------------------------\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/6c6ff215/attachment.html>"
            },
            {
                "author": "gabe appleton",
                "date": "2015-06-06T06:28:35",
                "message_text_only": "Yeah. We made a git repo instead, so we don't have to bother with the\nexclusive-by-default wiki policies. It's linked in this email chain.\n\nI'll be getting home tomorrow, so I should be able to start back up on\nthis. A few days from now we should throw this on /r/Bitcoin so we can get\nsome more public comment on it. They already gave me a few leads to chase.\nOn Jun 5, 2015 11:34 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n\n> Gabe,\n>\n> Did you ever get an answer to this?\n>\n> I\"ll have some time tomorrow to be able to help with some work on this and\n> will need to do it myself anyways since I'm not sure I understand the\n> nuances, where bitcoin XT fits into the scheme of things (or not) etc.\n>\n> I would have thought that there would be a testnet4 by now using 8mb\n> blocks... but hey that's just me.\n>\n> p.\n>\n>\n>\n>\n> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>\n> wrote:\n>\n>> I don't have permission to create a page. If someone else does, I'll\n>> happily get a framework started.\n>>\n>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:\n>>\n>>> I second this, I don't have time to read the large number of emails\n>>> generated every day from the block size debate. A summary of the various\n>>> positions and arguments would be extremely helpful.\n>>>\n>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>\n>>> wrote:\n>>>\n>>>> Also, can we try to get a wiki page for the debate? That way we could\n>>>> condense the information as much as possible. I'll be willing to assist if\n>>>> the page gets approval.\n>>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>>>\n>>>>> Hi!\n>>>>>\n>>>>> My fingers have been itching many times now, this debate\n>>>>> drives me nuts.\n>>>>>\n>>>>> I just wish all posters could follow two simple principles:\n>>>>>\n>>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>>    take many hours. But if you're rehashing what other\n>>>>>    smarter people have said over and over before, you're\n>>>>>    wasting hundreds of peoples time. Please don't.\n>>>>>\n>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>>    just destructive. If you want no change, then say so.\n>>>>>\n>>>>> Mats\n>>>>>\n>>>>>\n>>>>> ------------------------------------------------------------------------------\n>>>>> _______________________________________________\n>>>>> Bitcoin-development mailing list\n>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>\n>>>>\n>>>>\n>>>> ------------------------------------------------------------------------------\n>>>>\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>>>>\n>>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/3995a234/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-06T06:34:12",
                "message_text_only": "Thanks Gabe.\n\nhttps://github.com/gappleto97/BlockSizeDebate\n\ngithub's reachable via vpn.\n\np.\n\n\nOn Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com> wrote:\n\n> Yeah. We made a git repo instead, so we don't have to bother with the\n> exclusive-by-default wiki policies. It's linked in this email chain.\n>\n> I'll be getting home tomorrow, so I should be able to start back up on\n> this. A few days from now we should throw this on /r/Bitcoin so we can get\n> some more public comment on it. They already gave me a few leads to chase.\n> On Jun 5, 2015 11:34 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>\n>> Gabe,\n>>\n>> Did you ever get an answer to this?\n>>\n>> I\"ll have some time tomorrow to be able to help with some work on this\n>> and will need to do it myself anyways since I'm not sure I understand the\n>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.\n>>\n>> I would have thought that there would be a testnet4 by now using 8mb\n>> blocks... but hey that's just me.\n>>\n>> p.\n>>\n>>\n>>\n>>\n>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>\n>> wrote:\n>>\n>>> I don't have permission to create a page. If someone else does, I'll\n>>> happily get a framework started.\n>>>\n>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com> wrote:\n>>>\n>>>> I second this, I don't have time to read the large number of emails\n>>>> generated every day from the block size debate. A summary of the various\n>>>> positions and arguments would be extremely helpful.\n>>>>\n>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>\n>>>> wrote:\n>>>>\n>>>>> Also, can we try to get a wiki page for the debate? That way we could\n>>>>> condense the information as much as possible. I'll be willing to assist if\n>>>>> the page gets approval.\n>>>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>>>>\n>>>>>> Hi!\n>>>>>>\n>>>>>> My fingers have been itching many times now, this debate\n>>>>>> drives me nuts.\n>>>>>>\n>>>>>> I just wish all posters could follow two simple principles:\n>>>>>>\n>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>>>    take many hours. But if you're rehashing what other\n>>>>>>    smarter people have said over and over before, you're\n>>>>>>    wasting hundreds of peoples time. Please don't.\n>>>>>>\n>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>>>    just destructive. If you want no change, then say so.\n>>>>>>\n>>>>>> Mats\n>>>>>>\n>>>>>>\n>>>>>> ------------------------------------------------------------------------------\n>>>>>> _______________________________________________\n>>>>>> Bitcoin-development mailing list\n>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>\n>>>>>\n>>>>>\n>>>>> ------------------------------------------------------------------------------\n>>>>>\n>>>>> _______________________________________________\n>>>>> Bitcoin-development mailing list\n>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>\n>>>>>\n>>>>\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/b05fb4c8/attachment.html>"
            },
            {
                "author": "gabe appleton",
                "date": "2015-06-06T06:37:26",
                "message_text_only": "Please use the one it's originally forked from that Ethan made. I don't\nwant to be the one who sorts through what's valid and what isn't, as I\ndon't have as low-level an understanding as I'd like. I don't feel\nqualified.\nOn Jun 6, 2015 2:34 AM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n\n> Thanks Gabe.\n>\n> https://github.com/gappleto97/BlockSizeDebate\n>\n> github's reachable via vpn.\n>\n> p.\n>\n>\n> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>\n> wrote:\n>\n>> Yeah. We made a git repo instead, so we don't have to bother with the\n>> exclusive-by-default wiki policies. It's linked in this email chain.\n>>\n>> I'll be getting home tomorrow, so I should be able to start back up on\n>> this. A few days from now we should throw this on /r/Bitcoin so we can get\n>> some more public comment on it. They already gave me a few leads to chase.\n>> On Jun 5, 2015 11:34 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>>\n>>> Gabe,\n>>>\n>>> Did you ever get an answer to this?\n>>>\n>>> I\"ll have some time tomorrow to be able to help with some work on this\n>>> and will need to do it myself anyways since I'm not sure I understand the\n>>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.\n>>>\n>>> I would have thought that there would be a testnet4 by now using 8mb\n>>> blocks... but hey that's just me.\n>>>\n>>> p.\n>>>\n>>>\n>>>\n>>>\n>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>\n>>> wrote:\n>>>\n>>>> I don't have permission to create a page. If someone else does, I'll\n>>>> happily get a framework started.\n>>>>\n>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>\n>>>> wrote:\n>>>>\n>>>>> I second this, I don't have time to read the large number of emails\n>>>>> generated every day from the block size debate. A summary of the various\n>>>>> positions and arguments would be extremely helpful.\n>>>>>\n>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>\n>>>>> wrote:\n>>>>>\n>>>>>> Also, can we try to get a wiki page for the debate? That way we could\n>>>>>> condense the information as much as possible. I'll be willing to assist if\n>>>>>> the page gets approval.\n>>>>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>>>>>\n>>>>>>> Hi!\n>>>>>>>\n>>>>>>> My fingers have been itching many times now, this debate\n>>>>>>> drives me nuts.\n>>>>>>>\n>>>>>>> I just wish all posters could follow two simple principles:\n>>>>>>>\n>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>>>>    take many hours. But if you're rehashing what other\n>>>>>>>    smarter people have said over and over before, you're\n>>>>>>>    wasting hundreds of peoples time. Please don't.\n>>>>>>>\n>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>>>>    just destructive. If you want no change, then say so.\n>>>>>>>\n>>>>>>> Mats\n>>>>>>>\n>>>>>>>\n>>>>>>> ------------------------------------------------------------------------------\n>>>>>>> _______________________________________________\n>>>>>>> Bitcoin-development mailing list\n>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>\n>>>>>>\n>>>>>>\n>>>>>> ------------------------------------------------------------------------------\n>>>>>>\n>>>>>> _______________________________________________\n>>>>>> Bitcoin-development mailing list\n>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>\n>>>>>>\n>>>>>\n>>>>\n>>>>\n>>>> ------------------------------------------------------------------------------\n>>>>\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>>>>\n>>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/5cd23952/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-06T06:39:48",
                "message_text_only": "OK... sorry for my confusion.\n\nhttps://github.com/EthanHeilman/BlockSizeDebate\n\nit is.\n\np.\n\n\nOn Sat, Jun 6, 2015 at 2:37 PM, gabe appleton <gappleto97 at gmail.com> wrote:\n\n> Please use the one it's originally forked from that Ethan made. I don't\n> want to be the one who sorts through what's valid and what isn't, as I\n> don't have as low-level an understanding as I'd like. I don't feel\n> qualified.\n> On Jun 6, 2015 2:34 AM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>\n>> Thanks Gabe.\n>>\n>> https://github.com/gappleto97/BlockSizeDebate\n>>\n>> github's reachable via vpn.\n>>\n>> p.\n>>\n>>\n>> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>\n>> wrote:\n>>\n>>> Yeah. We made a git repo instead, so we don't have to bother with the\n>>> exclusive-by-default wiki policies. It's linked in this email chain.\n>>>\n>>> I'll be getting home tomorrow, so I should be able to start back up on\n>>> this. A few days from now we should throw this on /r/Bitcoin so we can get\n>>> some more public comment on it. They already gave me a few leads to chase.\n>>> On Jun 5, 2015 11:34 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>>>\n>>>> Gabe,\n>>>>\n>>>> Did you ever get an answer to this?\n>>>>\n>>>> I\"ll have some time tomorrow to be able to help with some work on this\n>>>> and will need to do it myself anyways since I'm not sure I understand the\n>>>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.\n>>>>\n>>>> I would have thought that there would be a testnet4 by now using 8mb\n>>>> blocks... but hey that's just me.\n>>>>\n>>>> p.\n>>>>\n>>>>\n>>>>\n>>>>\n>>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>\n>>>> wrote:\n>>>>\n>>>>> I don't have permission to create a page. If someone else does, I'll\n>>>>> happily get a framework started.\n>>>>>\n>>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>\n>>>>> wrote:\n>>>>>\n>>>>>> I second this, I don't have time to read the large number of emails\n>>>>>> generated every day from the block size debate. A summary of the various\n>>>>>> positions and arguments would be extremely helpful.\n>>>>>>\n>>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com>\n>>>>>> wrote:\n>>>>>>\n>>>>>>> Also, can we try to get a wiki page for the debate? That way we\n>>>>>>> could condense the information as much as possible. I'll be willing to\n>>>>>>> assist if the page gets approval.\n>>>>>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>>>>>>\n>>>>>>>> Hi!\n>>>>>>>>\n>>>>>>>> My fingers have been itching many times now, this debate\n>>>>>>>> drives me nuts.\n>>>>>>>>\n>>>>>>>> I just wish all posters could follow two simple principles:\n>>>>>>>>\n>>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>>>>>    take many hours. But if you're rehashing what other\n>>>>>>>>    smarter people have said over and over before, you're\n>>>>>>>>    wasting hundreds of peoples time. Please don't.\n>>>>>>>>\n>>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>>>>>    just destructive. If you want no change, then say so.\n>>>>>>>>\n>>>>>>>> Mats\n>>>>>>>>\n>>>>>>>>\n>>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>> _______________________________________________\n>>>>>>>> Bitcoin-development mailing list\n>>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>>\n>>>>>>>\n>>>>>>>\n>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>\n>>>>>>> _______________________________________________\n>>>>>>> Bitcoin-development mailing list\n>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>\n>>>>>>>\n>>>>>>\n>>>>>\n>>>>>\n>>>>> ------------------------------------------------------------------------------\n>>>>>\n>>>>> _______________________________________________\n>>>>> Bitcoin-development mailing list\n>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>\n>>>>>\n>>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/481091c5/attachment.html>"
            },
            {
                "author": "gabe appleton",
                "date": "2015-06-06T06:41:40",
                "message_text_only": "Nothing to apologize for. And yes, that's the correct one.\nOn Jun 6, 2015 2:39 AM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n\n> OK... sorry for my confusion.\n>\n> https://github.com/EthanHeilman/BlockSizeDebate\n>\n> it is.\n>\n> p.\n>\n>\n> On Sat, Jun 6, 2015 at 2:37 PM, gabe appleton <gappleto97 at gmail.com>\n> wrote:\n>\n>> Please use the one it's originally forked from that Ethan made. I don't\n>> want to be the one who sorts through what's valid and what isn't, as I\n>> don't have as low-level an understanding as I'd like. I don't feel\n>> qualified.\n>> On Jun 6, 2015 2:34 AM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>>\n>>> Thanks Gabe.\n>>>\n>>> https://github.com/gappleto97/BlockSizeDebate\n>>>\n>>> github's reachable via vpn.\n>>>\n>>> p.\n>>>\n>>>\n>>> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>\n>>> wrote:\n>>>\n>>>> Yeah. We made a git repo instead, so we don't have to bother with the\n>>>> exclusive-by-default wiki policies. It's linked in this email chain.\n>>>>\n>>>> I'll be getting home tomorrow, so I should be able to start back up on\n>>>> this. A few days from now we should throw this on /r/Bitcoin so we can get\n>>>> some more public comment on it. They already gave me a few leads to chase.\n>>>> On Jun 5, 2015 11:34 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>>>>\n>>>>> Gabe,\n>>>>>\n>>>>> Did you ever get an answer to this?\n>>>>>\n>>>>> I\"ll have some time tomorrow to be able to help with some work on this\n>>>>> and will need to do it myself anyways since I'm not sure I understand the\n>>>>> nuances, where bitcoin XT fits into the scheme of things (or not) etc.\n>>>>>\n>>>>> I would have thought that there would be a testnet4 by now using 8mb\n>>>>> blocks... but hey that's just me.\n>>>>>\n>>>>> p.\n>>>>>\n>>>>>\n>>>>>\n>>>>>\n>>>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>\n>>>>> wrote:\n>>>>>\n>>>>>> I don't have permission to create a page. If someone else does, I'll\n>>>>>> happily get a framework started.\n>>>>>>\n>>>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>\n>>>>>> wrote:\n>>>>>>\n>>>>>>> I second this, I don't have time to read the large number of emails\n>>>>>>> generated every day from the block size debate. A summary of the various\n>>>>>>> positions and arguments would be extremely helpful.\n>>>>>>>\n>>>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <gappleto97 at gmail.com\n>>>>>>> > wrote:\n>>>>>>>\n>>>>>>>> Also, can we try to get a wiki page for the debate? That way we\n>>>>>>>> could condense the information as much as possible. I'll be willing to\n>>>>>>>> assist if the page gets approval.\n>>>>>>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se> wrote:\n>>>>>>>>\n>>>>>>>>> Hi!\n>>>>>>>>>\n>>>>>>>>> My fingers have been itching many times now, this debate\n>>>>>>>>> drives me nuts.\n>>>>>>>>>\n>>>>>>>>> I just wish all posters could follow two simple principles:\n>>>>>>>>>\n>>>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>>>>>>    take many hours. But if you're rehashing what other\n>>>>>>>>>    smarter people have said over and over before, you're\n>>>>>>>>>    wasting hundreds of peoples time. Please don't.\n>>>>>>>>>\n>>>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>>>>>>    just destructive. If you want no change, then say so.\n>>>>>>>>>\n>>>>>>>>> Mats\n>>>>>>>>>\n>>>>>>>>>\n>>>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>>> _______________________________________________\n>>>>>>>>> Bitcoin-development mailing list\n>>>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>>>\n>>>>>>>>\n>>>>>>>>\n>>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>>\n>>>>>>>> _______________________________________________\n>>>>>>>> Bitcoin-development mailing list\n>>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>>\n>>>>>>>>\n>>>>>>>\n>>>>>>\n>>>>>>\n>>>>>> ------------------------------------------------------------------------------\n>>>>>>\n>>>>>> _______________________________________________\n>>>>>> Bitcoin-development mailing list\n>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>\n>>>>>>\n>>>>>\n>>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/a055a668/attachment.html>"
            },
            {
                "author": "gabe appleton",
                "date": "2015-06-08T00:55:44",
                "message_text_only": "Just pushed the template for Arguments 3, 4, 6, and a full Argument 2.\nArgument 5 should be pro, but is currently not defined. Argument 6 may be\nmerged with Argument 4 if you think that's necessary.\n\nOn Sat, Jun 6, 2015 at 2:41 AM, gabe appleton <gappleto97 at gmail.com> wrote:\n\n> Nothing to apologize for. And yes, that's the correct one.\n> On Jun 6, 2015 2:39 AM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>\n>> OK... sorry for my confusion.\n>>\n>> https://github.com/EthanHeilman/BlockSizeDebate\n>>\n>> it is.\n>>\n>> p.\n>>\n>>\n>> On Sat, Jun 6, 2015 at 2:37 PM, gabe appleton <gappleto97 at gmail.com>\n>> wrote:\n>>\n>>> Please use the one it's originally forked from that Ethan made. I don't\n>>> want to be the one who sorts through what's valid and what isn't, as I\n>>> don't have as low-level an understanding as I'd like. I don't feel\n>>> qualified.\n>>> On Jun 6, 2015 2:34 AM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>>>\n>>>> Thanks Gabe.\n>>>>\n>>>> https://github.com/gappleto97/BlockSizeDebate\n>>>>\n>>>> github's reachable via vpn.\n>>>>\n>>>> p.\n>>>>\n>>>>\n>>>> On Sat, Jun 6, 2015 at 2:28 PM, gabe appleton <gappleto97 at gmail.com>\n>>>> wrote:\n>>>>\n>>>>> Yeah. We made a git repo instead, so we don't have to bother with the\n>>>>> exclusive-by-default wiki policies. It's linked in this email chain.\n>>>>>\n>>>>> I'll be getting home tomorrow, so I should be able to start back up on\n>>>>> this. A few days from now we should throw this on /r/Bitcoin so we can get\n>>>>> some more public comment on it. They already gave me a few leads to chase.\n>>>>> On Jun 5, 2015 11:34 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n>>>>>\n>>>>>> Gabe,\n>>>>>>\n>>>>>> Did you ever get an answer to this?\n>>>>>>\n>>>>>> I\"ll have some time tomorrow to be able to help with some work on\n>>>>>> this and will need to do it myself anyways since I'm not sure I understand\n>>>>>> the nuances, where bitcoin XT fits into the scheme of things (or not) etc.\n>>>>>>\n>>>>>> I would have thought that there would be a testnet4 by now using 8mb\n>>>>>> blocks... but hey that's just me.\n>>>>>>\n>>>>>> p.\n>>>>>>\n>>>>>>\n>>>>>>\n>>>>>>\n>>>>>> On Tue, Jun 2, 2015 at 11:52 AM, gabe appleton <gappleto97 at gmail.com>\n>>>>>> wrote:\n>>>>>>\n>>>>>>> I don't have permission to create a page. If someone else does, I'll\n>>>>>>> happily get a framework started.\n>>>>>>>\n>>>>>>> On Mon, Jun 1, 2015 at 11:32 PM, Ethan Heilman <eth3rs at gmail.com>\n>>>>>>> wrote:\n>>>>>>>\n>>>>>>>> I second this, I don't have time to read the large number of emails\n>>>>>>>> generated every day from the block size debate. A summary of the various\n>>>>>>>> positions and arguments would be extremely helpful.\n>>>>>>>>\n>>>>>>>> On Mon, Jun 1, 2015 at 11:02 PM, gabe appleton <\n>>>>>>>> gappleto97 at gmail.com> wrote:\n>>>>>>>>\n>>>>>>>>> Also, can we try to get a wiki page for the debate? That way we\n>>>>>>>>> could condense the information as much as possible. I'll be willing to\n>>>>>>>>> assist if the page gets approval.\n>>>>>>>>> On Jun 1, 2015 6:41 PM, \"Mats Henricson\" <mats at henricson.se>\n>>>>>>>>> wrote:\n>>>>>>>>>\n>>>>>>>>>> Hi!\n>>>>>>>>>>\n>>>>>>>>>> My fingers have been itching many times now, this debate\n>>>>>>>>>> drives me nuts.\n>>>>>>>>>>\n>>>>>>>>>> I just wish all posters could follow two simple principles:\n>>>>>>>>>>\n>>>>>>>>>> 1. Read up. Yes. All of what has been written. Yes, it will\n>>>>>>>>>>    take many hours. But if you're rehashing what other\n>>>>>>>>>>    smarter people have said over and over before, you're\n>>>>>>>>>>    wasting hundreds of peoples time. Please don't.\n>>>>>>>>>>\n>>>>>>>>>> 2. Be helpful. Suggest alternatives. Just cristizising is\n>>>>>>>>>>    just destructive. If you want no change, then say so.\n>>>>>>>>>>\n>>>>>>>>>> Mats\n>>>>>>>>>>\n>>>>>>>>>>\n>>>>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>>>> _______________________________________________\n>>>>>>>>>> Bitcoin-development mailing list\n>>>>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>>>>\n>>>>>>>>>\n>>>>>>>>>\n>>>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>>>\n>>>>>>>>> _______________________________________________\n>>>>>>>>> Bitcoin-development mailing list\n>>>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>>>\n>>>>>>>>>\n>>>>>>>>\n>>>>>>>\n>>>>>>>\n>>>>>>> ------------------------------------------------------------------------------\n>>>>>>>\n>>>>>>> _______________________________________________\n>>>>>>> Bitcoin-development mailing list\n>>>>>>> Bitcoin-development at lists.sourceforge.net\n>>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>>\n>>>>>>>\n>>>>>>\n>>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150607/101b37a2/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Meta suggestions for this block size debate",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Pindar Wong",
                "gabe appleton",
                "Ethan Heilman",
                "Mats Henricson"
            ],
            "messages_count": 11,
            "total_messages_chars_count": 33493
        }
    },
    {
        "title": "[Bitcoin-development] [BIP draft] Consensus-enforced transaction replacement signalled via sequence numbers",
        "thread_messages": [
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-02T01:49:33",
                "message_text_only": "I have written a reference implementation and BIP draft for a soft-fork\nchange to the consensus-enforced behaviour of sequence numbers for the\npurpose of supporting transaction replacement via per-input relative\nlock-times. This proposal was previously discussed on the mailing list in\nthe following thread:\n\nhttp://sourceforge.net/p/bitcoin/mailman/message/34146752/\n\nIn short summary, this proposal seeks to enable safe transaction\nreplacement by re-purposing the nSequence field of a transaction input to\nbe a consensus-enforced relative lock-time.\n\nThe advantages of this approach is that it makes use of the full range of\nthe 32-bit sequence number which until now has rarely been used for\nanything other than a boolean control over absolute nLockTime, and it does\nso in a way that is semantically compatible with the originally envisioned\nuse of sequence numbers for fast mempool transaction replacement.\n\nThe disadvantages are that external constraints often prevent the full\nrange of sequence numbers from being used when interpreted as a relative\nlock-time, and re-purposing nSequence as a relative lock-time precludes its\nuse in other contexts. The latter point has been partially addressed by\nhaving the relative lock-time semantics be enforced only if the\nmost-significant bit of nSequence is set. This preserves 31 bits for\nalternative use when relative lock-times are not required.\n\nThe BIP draft can be found at the following gist:\n\nhttps://gist.github.com/maaku/be15629fe64618b14f5a\n\nThe reference implementation is available at the following git repository:\n\nhttps://github.com/maaku/bitcoin/tree/sequencenumbers\n\nI request that the BIP editor please assign a BIP number for this work.\n\nSincerely,\nMark Friedenbach\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/14698846/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-02T03:45:46",
                "message_text_only": "Hi Mark,\n\nOverall, I like this idea in every way except for one: unless I am missing\nsomething, we may still need an OP_RCLTV even with this being implemented.\n\nIn use cases such as micropayment channels where the funds are locked up by\nmultiple parties, the enforcement of the relative locktime can be done by\nthe first-signing party. So, while your solution would probably work in\ncases like this, where multiple signing parties are involved, there may be\nother, seen or unforeseen, use cases that require putting the relative\nlocktime right into the spending contract (the scriptPubKey itself). When\nthere is only one signer, there's nothing that enforces using an nSequence\nand nVersion=2 that would prevent spending the output until a certain time.\n\nI hope this is received as constructive criticism, I do think this is an\ninnovative idea. In my view, though, it seems to be less fully-featured\nthan just repurposing an OP_NOP to create OP_RCLTV. The benefits are\nobviously that it saves transaction space by repurposing unused space, and\nwould likely work for most cases where an OP_RCLTV would be needed.\n\nBest,\nStephen\n\nOn Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> I have written a reference implementation and BIP draft for a soft-fork\n> change to the consensus-enforced behaviour of sequence numbers for the\n> purpose of supporting transaction replacement via per-input relative\n> lock-times. This proposal was previously discussed on the mailing list in\n> the following thread:\n>\n> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>\n> In short summary, this proposal seeks to enable safe transaction\n> replacement by re-purposing the nSequence field of a transaction input to\n> be a consensus-enforced relative lock-time.\n>\n> The advantages of this approach is that it makes use of the full range of\n> the 32-bit sequence number which until now has rarely been used for\n> anything other than a boolean control over absolute nLockTime, and it does\n> so in a way that is semantically compatible with the originally envisioned\n> use of sequence numbers for fast mempool transaction replacement.\n>\n> The disadvantages are that external constraints often prevent the full\n> range of sequence numbers from being used when interpreted as a relative\n> lock-time, and re-purposing nSequence as a relative lock-time precludes its\n> use in other contexts. The latter point has been partially addressed by\n> having the relative lock-time semantics be enforced only if the\n> most-significant bit of nSequence is set. This preserves 31 bits for\n> alternative use when relative lock-times are not required.\n>\n> The BIP draft can be found at the following gist:\n>\n> https://gist.github.com/maaku/be15629fe64618b14f5a\n>\n> The reference implementation is available at the following git repository:\n>\n> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>\n> I request that the BIP editor please assign a BIP number for this work.\n>\n> Sincerely,\n> Mark Friedenbach\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/70c32838/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-02T04:16:03",
                "message_text_only": "You are correct! I am maintaining a 'checksequenceverify' branch in my git\nrepository as well, an OP_RCLTV using sequence numbers:\n\nhttps://github.com/maaku/bitcoin/tree/checksequenceverify\n\nMost of the interesting use cases for relative lock-time require an RCLTV\nopcode. What is interesting about this architecture is that it possible to\ncleanly separate the relative lock-time (sequence numbers) from the RCLTV\nopcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like\nCLTV, the CSV opcode only checks transaction data and requires no\ncontextual knowledge about block headers, a weakness of the other RCLTV\nproposals that violate the clean separation between libscript and\nlibconsensus. In a similar way, this BIP proposal only touches the\ntransaction validation logic without any impact to script.\n\nI would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY\nopcode and its enabling applications. But, well, one thing at a time.\n\nOn Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com>\nwrote:\n\n> Hi Mark,\n>\n> Overall, I like this idea in every way except for one: unless I am missing\n> something, we may still need an OP_RCLTV even with this being\n> implemented.\n>\n> In use cases such as micropayment channels where the funds are locked up\n> by multiple parties, the enforcement of the relative locktime can be done\n> by the first-signing party. So, while your solution would probably work in\n> cases like this, where multiple signing parties are involved, there may be\n> other, seen or unforeseen, use cases that require putting the relative\n> locktime right into the spending contract (the scriptPubKey itself). When\n> there is only one signer, there's nothing that enforces using an nSequence\n> and nVersion=2 that would prevent spending the output until a certain time.\n>\n> I hope this is received as constructive criticism, I do think this is an\n> innovative idea. In my view, though, it seems to be less fully-featured\n> than just repurposing an OP_NOP to create OP_RCLTV. The benefits are\n> obviously that it saves transaction space by repurposing unused space, and\n> would likely work for most cases where an OP_RCLTV would be needed.\n>\n> Best,\n> Stephen\n>\n> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>\n> wrote:\n>\n>> I have written a reference implementation and BIP draft for a soft-fork\n>> change to the consensus-enforced behaviour of sequence numbers for the\n>> purpose of supporting transaction replacement via per-input relative\n>> lock-times. This proposal was previously discussed on the mailing list in\n>> the following thread:\n>>\n>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>>\n>> In short summary, this proposal seeks to enable safe transaction\n>> replacement by re-purposing the nSequence field of a transaction input to\n>> be a consensus-enforced relative lock-time.\n>>\n>> The advantages of this approach is that it makes use of the full range of\n>> the 32-bit sequence number which until now has rarely been used for\n>> anything other than a boolean control over absolute nLockTime, and it does\n>> so in a way that is semantically compatible with the originally envisioned\n>> use of sequence numbers for fast mempool transaction replacement.\n>>\n>> The disadvantages are that external constraints often prevent the full\n>> range of sequence numbers from being used when interpreted as a relative\n>> lock-time, and re-purposing nSequence as a relative lock-time precludes its\n>> use in other contexts. The latter point has been partially addressed by\n>> having the relative lock-time semantics be enforced only if the\n>> most-significant bit of nSequence is set. This preserves 31 bits for\n>> alternative use when relative lock-times are not required.\n>>\n>> The BIP draft can be found at the following gist:\n>>\n>> https://gist.github.com/maaku/be15629fe64618b14f5a\n>>\n>> The reference implementation is available at the following git repository:\n>>\n>> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>>\n>> I request that the BIP editor please assign a BIP number for this work.\n>>\n>> Sincerely,\n>> Mark Friedenbach\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150601/b2e1f6dc/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-02T04:34:34",
                "message_text_only": "I see, so OP_SEQUENCEVERIFY will have a value pushed on the stack right\nbefore, and then check that the input spending the prevout has nSequence\ncorresponds to at least the sequence specified by the stack value. Good\nidea! Keeps the script code from depending on external chain specific data,\nwhich is nice.\n\nHopefully we can repurpose one of the OP_NOPs for CHECKLOCKTIMEVERIFY and\none for OP_CHECKSEQUENCEVERIFY. Very complementary.\n\nBest,\nStephen\n\n\nOn Tue, Jun 2, 2015 at 12:16 AM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> You are correct! I am maintaining a 'checksequenceverify' branch in my git\n> repository as well, an OP_RCLTV using sequence numbers:\n>\n> https://github.com/maaku/bitcoin/tree/checksequenceverify\n>\n> Most of the interesting use cases for relative lock-time require an RCLTV\n> opcode. What is interesting about this architecture is that it possible to\n> cleanly separate the relative lock-time (sequence numbers) from the RCLTV\n> opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like\n> CLTV, the CSV opcode only checks transaction data and requires no\n> contextual knowledge about block headers, a weakness of the other RCLTV\n> proposals that violate the clean separation between libscript and\n> libconsensus. In a similar way, this BIP proposal only touches the\n> transaction validation logic without any impact to script.\n>\n> I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY\n> opcode and its enabling applications. But, well, one thing at a time.\n>\n> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com\n> > wrote:\n>\n>> Hi Mark,\n>>\n>> Overall, I like this idea in every way except for one: unless I am\n>> missing something, we may still need an OP_RCLTV even with this being\n>> implemented.\n>>\n>> In use cases such as micropayment channels where the funds are locked up\n>> by multiple parties, the enforcement of the relative locktime can be done\n>> by the first-signing party. So, while your solution would probably work in\n>> cases like this, where multiple signing parties are involved, there may be\n>> other, seen or unforeseen, use cases that require putting the relative\n>> locktime right into the spending contract (the scriptPubKey itself).\n>> When there is only one signer, there's nothing that enforces using an\n>> nSequence and nVersion=2 that would prevent spending the output until a\n>> certain time.\n>>\n>> I hope this is received as constructive criticism, I do think this is an\n>> innovative idea. In my view, though, it seems to be less fully-featured\n>> than just repurposing an OP_NOP to create OP_RCLTV. The benefits are\n>> obviously that it saves transaction space by repurposing unused space, and\n>> would likely work for most cases where an OP_RCLTV would be needed.\n>>\n>> Best,\n>> Stephen\n>>\n>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>\n>> wrote:\n>>\n>>> I have written a reference implementation and BIP draft for a soft-fork\n>>> change to the consensus-enforced behaviour of sequence numbers for the\n>>> purpose of supporting transaction replacement via per-input relative\n>>> lock-times. This proposal was previously discussed on the mailing list in\n>>> the following thread:\n>>>\n>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>>>\n>>> In short summary, this proposal seeks to enable safe transaction\n>>> replacement by re-purposing the nSequence field of a transaction input to\n>>> be a consensus-enforced relative lock-time.\n>>>\n>>> The advantages of this approach is that it makes use of the full range\n>>> of the 32-bit sequence number which until now has rarely been used for\n>>> anything other than a boolean control over absolute nLockTime, and it does\n>>> so in a way that is semantically compatible with the originally envisioned\n>>> use of sequence numbers for fast mempool transaction replacement.\n>>>\n>>> The disadvantages are that external constraints often prevent the full\n>>> range of sequence numbers from being used when interpreted as a relative\n>>> lock-time, and re-purposing nSequence as a relative lock-time precludes its\n>>> use in other contexts. The latter point has been partially addressed by\n>>> having the relative lock-time semantics be enforced only if the\n>>> most-significant bit of nSequence is set. This preserves 31 bits for\n>>> alternative use when relative lock-times are not required.\n>>>\n>>> The BIP draft can be found at the following gist:\n>>>\n>>> https://gist.github.com/maaku/be15629fe64618b14f5a\n>>>\n>>> The reference implementation is available at the following git\n>>> repository:\n>>>\n>>> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>>>\n>>> I request that the BIP editor please assign a BIP number for this work.\n>>>\n>>> Sincerely,\n>>> Mark Friedenbach\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/de17029c/attachment.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-02T15:42:45",
                "message_text_only": "I am glad to see the transaction version number increase.  The commit\ndoesn't update the default transaction version though.  The node would\nstill produce version 1 transactions.\n\nDoes the reference client already produce transactions with final sequence\nnumbers?  If so, then they will be valid version 2 transactions.  If it\nsets the sequence to all zeros, then it won't trigger the new code either.\nI think simply bumping the default version number to 2 would be safe.\n\nFor the timestamp locktime, median block time would be better than raw\nblock time.  Median time is the median timestamp of the previous 11\nblocks.  This reduces the incentive to mess with the timestamp.  Median\ntime is earlier than block time, but since things are relative, it should\nbalance out.\n\nMiners have around 2 hours worth of flexibility when setting the\ntimestamps, so it may not be that big a deal.\n\n\n\nOn Tue, Jun 2, 2015 at 5:34 AM, Stephen Morse <stephencalebmorse at gmail.com>\nwrote:\n\n> I see, so OP_SEQUENCEVERIFY will have a value pushed on the stack right\n> before, and then check that the input spending the prevout has nSequence\n> corresponds to at least the sequence specified by the stack value. Good\n> idea! Keeps the script code from depending on external chain specific data,\n> which is nice.\n>\n> Hopefully we can repurpose one of the OP_NOPs for CHECKLOCKTIMEVERIFY and\n> one for OP_CHECKSEQUENCEVERIFY. Very complementary.\n>\n> Best,\n> Stephen\n>\n>\n> On Tue, Jun 2, 2015 at 12:16 AM, Mark Friedenbach <mark at friedenbach.org>\n> wrote:\n>\n>> You are correct! I am maintaining a 'checksequenceverify' branch in my\n>> git repository as well, an OP_RCLTV using sequence numbers:\n>>\n>> https://github.com/maaku/bitcoin/tree/checksequenceverify\n>>\n>> Most of the interesting use cases for relative lock-time require an RCLTV\n>> opcode. What is interesting about this architecture is that it possible to\n>> cleanly separate the relative lock-time (sequence numbers) from the RCLTV\n>> opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like\n>> CLTV, the CSV opcode only checks transaction data and requires no\n>> contextual knowledge about block headers, a weakness of the other RCLTV\n>> proposals that violate the clean separation between libscript and\n>> libconsensus. In a similar way, this BIP proposal only touches the\n>> transaction validation logic without any impact to script.\n>>\n>> I would like to propose an additional BIP covering the\n>> CHECKSEQUENCEVERIFY opcode and its enabling applications. But, well, one\n>> thing at a time.\n>>\n>> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <\n>> stephencalebmorse at gmail.com> wrote:\n>>\n>>> Hi Mark,\n>>>\n>>> Overall, I like this idea in every way except for one: unless I am\n>>> missing something, we may still need an OP_RCLTV even with this being\n>>> implemented.\n>>>\n>>> In use cases such as micropayment channels where the funds are locked up\n>>> by multiple parties, the enforcement of the relative locktime can be done\n>>> by the first-signing party. So, while your solution would probably work in\n>>> cases like this, where multiple signing parties are involved, there may be\n>>> other, seen or unforeseen, use cases that require putting the relative\n>>> locktime right into the spending contract (the scriptPubKey itself).\n>>> When there is only one signer, there's nothing that enforces using an\n>>> nSequence and nVersion=2 that would prevent spending the output until a\n>>> certain time.\n>>>\n>>> I hope this is received as constructive criticism, I do think this is an\n>>> innovative idea. In my view, though, it seems to be less fully-featured\n>>> than just repurposing an OP_NOP to create OP_RCLTV. The benefits are\n>>> obviously that it saves transaction space by repurposing unused space, and\n>>> would likely work for most cases where an OP_RCLTV would be needed.\n>>>\n>>> Best,\n>>> Stephen\n>>>\n>>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>\n>>> wrote:\n>>>\n>>>> I have written a reference implementation and BIP draft for a soft-fork\n>>>> change to the consensus-enforced behaviour of sequence numbers for the\n>>>> purpose of supporting transaction replacement via per-input relative\n>>>> lock-times. This proposal was previously discussed on the mailing list in\n>>>> the following thread:\n>>>>\n>>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>>>>\n>>>> In short summary, this proposal seeks to enable safe transaction\n>>>> replacement by re-purposing the nSequence field of a transaction input to\n>>>> be a consensus-enforced relative lock-time.\n>>>>\n>>>> The advantages of this approach is that it makes use of the full range\n>>>> of the 32-bit sequence number which until now has rarely been used for\n>>>> anything other than a boolean control over absolute nLockTime, and it does\n>>>> so in a way that is semantically compatible with the originally envisioned\n>>>> use of sequence numbers for fast mempool transaction replacement.\n>>>>\n>>>> The disadvantages are that external constraints often prevent the full\n>>>> range of sequence numbers from being used when interpreted as a relative\n>>>> lock-time, and re-purposing nSequence as a relative lock-time precludes its\n>>>> use in other contexts. The latter point has been partially addressed by\n>>>> having the relative lock-time semantics be enforced only if the\n>>>> most-significant bit of nSequence is set. This preserves 31 bits for\n>>>> alternative use when relative lock-times are not required.\n>>>>\n>>>> The BIP draft can be found at the following gist:\n>>>>\n>>>> https://gist.github.com/maaku/be15629fe64618b14f5a\n>>>>\n>>>> The reference implementation is available at the following git\n>>>> repository:\n>>>>\n>>>> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>>>>\n>>>> I request that the BIP editor please assign a BIP number for this work.\n>>>>\n>>>> Sincerely,\n>>>> Mark Friedenbach\n>>>>\n>>>>\n>>>> ------------------------------------------------------------------------------\n>>>>\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>>>>\n>>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/b83d303f/attachment.html>"
            },
            {
                "author": "Stephen",
                "date": "2015-06-02T12:52:58",
                "message_text_only": "Do you think it would be useful to have an inverted version of both CSV and CLTV? To verify if an output is spent before a specific time. CLTV and CSV could be implemented by taking two stack arguments, an integer for the comparison and TRUE/FALSE. \n\nNow that I think about this more, the problem is that, for example, just having a lock time of less than some value doesn't actually mean it has to be spent before that script value, so this might not work. Likely any implementations of such a feature would have to provide the script execution environment with access to information that it doesn't have now, which is what we are trying to avoid. \n\nBest,\nStephen\n\n\n\n> On Jun 2, 2015, at 12:16 AM, Mark Friedenbach <mark at friedenbach.org> wrote:\n> \n> You are correct! I am maintaining a 'checksequenceverify' branch in my git repository as well, an OP_RCLTV using sequence numbers:\n> \n> https://github.com/maaku/bitcoin/tree/checksequenceverify\n> \n> Most of the interesting use cases for relative lock-time require an RCLTV opcode. What is interesting about this architecture is that it possible to cleanly separate the relative lock-time (sequence numbers) from the RCLTV opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like CLTV, the CSV opcode only checks transaction data and requires no contextual knowledge about block headers, a weakness of the other RCLTV proposals that violate the clean separation between libscript and libconsensus. In a similar way, this BIP proposal only touches the transaction validation logic without any impact to script.\n> \n> I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY opcode and its enabling applications. But, well, one thing at a time.\n> \n>> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com> wrote:\n>> Hi Mark,\n>> \n>> Overall, I like this idea in every way except for one: unless I am missing something, we may still need an OP_RCLTV even with this being implemented. \n>> \n>> In use cases such as micropayment channels where the funds are locked up by multiple parties, the enforcement of the relative locktime can be done by the first-signing party. So, while your solution would probably work in cases like this, where multiple signing parties are involved, there may be other, seen or unforeseen, use cases that require putting the relative locktime right into the spending contract (the scriptPubKey itself). When there is only one signer, there's nothing that enforces using an nSequence and nVersion=2 that would prevent spending the output until a certain time. \n>> \n>> I hope this is received as constructive criticism, I do think this is an innovative idea. In my view, though, it seems to be less fully-featured than just repurposing an OP_NOP to create OP_RCLTV. The benefits are obviously that it saves transaction space by repurposing unused space, and would likely work for most cases where an OP_RCLTV would be needed.\n>> \n>> Best,\n>> Stephen\n>> \n>>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org> wrote:\n>>> I have written a reference implementation and BIP draft for a soft-fork change to the consensus-enforced behaviour of sequence numbers for the purpose of supporting transaction replacement via per-input relative lock-times. This proposal was previously discussed on the mailing list in the following thread:\n>>> \n>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>>> \n>>> In short summary, this proposal seeks to enable safe transaction replacement by re-purposing the nSequence field of a transaction input to be a consensus-enforced relative lock-time.\n>>> \n>>> The advantages of this approach is that it makes use of the full range of the 32-bit sequence number which until now has rarely been used for anything other than a boolean control over absolute nLockTime, and it does so in a way that is semantically compatible with the originally envisioned use of sequence numbers for fast mempool transaction replacement.\n>>> \n>>> The disadvantages are that external constraints often prevent the full range of sequence numbers from being used when interpreted as a relative lock-time, and re-purposing nSequence as a relative lock-time precludes its use in other contexts. The latter point has been partially addressed by having the relative lock-time semantics be enforced only if the most-significant bit of nSequence is set. This preserves 31 bits for alternative use when relative lock-times are not required.\n>>> \n>>> The BIP draft can be found at the following gist:\n>>> \n>>> https://gist.github.com/maaku/be15629fe64618b14f5a\n>>> \n>>> The reference implementation is available at the following git repository:\n>>> \n>>> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>>> \n>>> I request that the BIP editor please assign a BIP number for this work.\n>>> \n>>> Sincerely,\n>>> Mark Friedenbach\n>>> \n>>> ------------------------------------------------------------------------------\n>>> \n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/7b87e165/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-02T13:11:23",
                "message_text_only": "That would also introduce the anomaly of a script that was once valid\nbecoming later invalid, when nothing varies other than time.  That is\nnot super compatible with the current model of reprocessing\ntransactions in later blocks if the block they were first in gets\nreorged.\n\n(Not a huge flexibility loss as you can implement \"not after\" by\nmaking it the previous holders responsibility to spend a \"not before\"\nback to themselves.)\n\nAdam\n\nOn 2 June 2015 at 13:52, Stephen <stephencalebmorse at gmail.com> wrote:\n> Do you think it would be useful to have an inverted version of both CSV and\n> CLTV? To verify if an output is spent before a specific time. CLTV and CSV\n> could be implemented by taking two stack arguments, an integer for the\n> comparison and TRUE/FALSE.\n>\n> Now that I think about this more, the problem is that, for example, just\n> having a lock time of less than some value doesn't actually mean it has to\n> be spent before that script value, so this might not work. Likely any\n> implementations of such a feature would have to provide the script execution\n> environment with access to information that it doesn't have now, which is\n> what we are trying to avoid.\n>\n> Best,\n> Stephen\n>\n>\n>\n> On Jun 2, 2015, at 12:16 AM, Mark Friedenbach <mark at friedenbach.org> wrote:\n>\n> You are correct! I am maintaining a 'checksequenceverify' branch in my git\n> repository as well, an OP_RCLTV using sequence numbers:\n>\n> https://github.com/maaku/bitcoin/tree/checksequenceverify\n>\n> Most of the interesting use cases for relative lock-time require an RCLTV\n> opcode. What is interesting about this architecture is that it possible to\n> cleanly separate the relative lock-time (sequence numbers) from the RCLTV\n> opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation. Like\n> CLTV, the CSV opcode only checks transaction data and requires no contextual\n> knowledge about block headers, a weakness of the other RCLTV proposals that\n> violate the clean separation between libscript and libconsensus. In a\n> similar way, this BIP proposal only touches the transaction validation logic\n> without any impact to script.\n>\n> I would like to propose an additional BIP covering the CHECKSEQUENCEVERIFY\n> opcode and its enabling applications. But, well, one thing at a time.\n>\n> On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <stephencalebmorse at gmail.com>\n> wrote:\n>>\n>> Hi Mark,\n>>\n>> Overall, I like this idea in every way except for one: unless I am missing\n>> something, we may still need an OP_RCLTV even with this being implemented.\n>>\n>> In use cases such as micropayment channels where the funds are locked up\n>> by multiple parties, the enforcement of the relative locktime can be done by\n>> the first-signing party. So, while your solution would probably work in\n>> cases like this, where multiple signing parties are involved, there may be\n>> other, seen or unforeseen, use cases that require putting the relative\n>> locktime right into the spending contract (the scriptPubKey itself). When\n>> there is only one signer, there's nothing that enforces using an nSequence\n>> and nVersion=2 that would prevent spending the output until a certain time.\n>>\n>> I hope this is received as constructive criticism, I do think this is an\n>> innovative idea. In my view, though, it seems to be less fully-featured than\n>> just repurposing an OP_NOP to create OP_RCLTV. The benefits are obviously\n>> that it saves transaction space by repurposing unused space, and would\n>> likely work for most cases where an OP_RCLTV would be needed.\n>>\n>> Best,\n>> Stephen\n>>\n>> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>\n>> wrote:\n>>>\n>>> I have written a reference implementation and BIP draft for a soft-fork\n>>> change to the consensus-enforced behaviour of sequence numbers for the\n>>> purpose of supporting transaction replacement via per-input relative\n>>> lock-times. This proposal was previously discussed on the mailing list in\n>>> the following thread:\n>>>\n>>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>>>\n>>> In short summary, this proposal seeks to enable safe transaction\n>>> replacement by re-purposing the nSequence field of a transaction input to be\n>>> a consensus-enforced relative lock-time.\n>>>\n>>> The advantages of this approach is that it makes use of the full range of\n>>> the 32-bit sequence number which until now has rarely been used for anything\n>>> other than a boolean control over absolute nLockTime, and it does so in a\n>>> way that is semantically compatible with the originally envisioned use of\n>>> sequence numbers for fast mempool transaction replacement.\n>>>\n>>> The disadvantages are that external constraints often prevent the full\n>>> range of sequence numbers from being used when interpreted as a relative\n>>> lock-time, and re-purposing nSequence as a relative lock-time precludes its\n>>> use in other contexts. The latter point has been partially addressed by\n>>> having the relative lock-time semantics be enforced only if the\n>>> most-significant bit of nSequence is set. This preserves 31 bits for\n>>> alternative use when relative lock-times are not required.\n>>>\n>>> The BIP draft can be found at the following gist:\n>>>\n>>> https://gist.github.com/maaku/be15629fe64618b14f5a\n>>>\n>>> The reference implementation is available at the following git\n>>> repository:\n>>>\n>>> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>>>\n>>> I request that the BIP editor please assign a BIP number for this work.\n>>>\n>>> Sincerely,\n>>> Mark Friedenbach\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-02T14:10:30",
                "message_text_only": ">\n> That would also introduce the anomaly of a script that was once valid\n> becoming later invalid, when nothing varies other than time.  That is\n> not super compatible with the current model of reprocessing\n> transactions in later blocks if the block they were first in gets\n> reorged.\n>\n\nVery good point.\n\n\n>\n> (Not a huge flexibility loss as you can implement \"not after\" by\n> making it the previous holders responsibility to spend a \"not before\"\n> back to themselves.)\n>\n\nDo you mean something like the below?\n\nscriptPubKey:\n  IF\n    {A's pub} CHECKSIGVERIFY\n  ELSE\n    {curr_height + 100} CLTV {B's pub} CHECKSIGVERIFY\n\nThis ensures that Alice has to spend the output in the next 100 blocks or\nrisk it being taken from her (she just has to put an OP_TRUE on the end of\nher scriptSig). So, it seems we can forget about an inverted CLTV/CSV,\ngreat!\n\nBest,\nStephen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/16a5e2ae/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-02T15:44:53",
                "message_text_only": "Oh it is far worse than that. There is nothing preventing those coins from\nbeing spent somewhere else, so actually an expiry would enable coin theft\nin a reorg -- you make your spends expire right after they hit the chain\nthe first time, and then if there is a reorg the spend and subsequent\ntransactions are invalidated. This is an exploitable means of theft.\n\nFor this reason it is very important to male sure that once a transaction\nmakes it on the chain, it cannot be invalidated by means of a reorg.\nOn Jun 2, 2015 6:11 AM, \"Adam Back\" <adam at cypherspace.org> wrote:\n\n> That would also introduce the anomaly of a script that was once valid\n> becoming later invalid, when nothing varies other than time.  That is\n> not super compatible with the current model of reprocessing\n> transactions in later blocks if the block they were first in gets\n> reorged.\n>\n> (Not a huge flexibility loss as you can implement \"not after\" by\n> making it the previous holders responsibility to spend a \"not before\"\n> back to themselves.)\n>\n> Adam\n>\n> On 2 June 2015 at 13:52, Stephen <stephencalebmorse at gmail.com> wrote:\n> > Do you think it would be useful to have an inverted version of both CSV\n> and\n> > CLTV? To verify if an output is spent before a specific time. CLTV and\n> CSV\n> > could be implemented by taking two stack arguments, an integer for the\n> > comparison and TRUE/FALSE.\n> >\n> > Now that I think about this more, the problem is that, for example, just\n> > having a lock time of less than some value doesn't actually mean it has\n> to\n> > be spent before that script value, so this might not work. Likely any\n> > implementations of such a feature would have to provide the script\n> execution\n> > environment with access to information that it doesn't have now, which is\n> > what we are trying to avoid.\n> >\n> > Best,\n> > Stephen\n> >\n> >\n> >\n> > On Jun 2, 2015, at 12:16 AM, Mark Friedenbach <mark at friedenbach.org>\n> wrote:\n> >\n> > You are correct! I am maintaining a 'checksequenceverify' branch in my\n> git\n> > repository as well, an OP_RCLTV using sequence numbers:\n> >\n> > https://github.com/maaku/bitcoin/tree/checksequenceverify\n> >\n> > Most of the interesting use cases for relative lock-time require an RCLTV\n> > opcode. What is interesting about this architecture is that it possible\n> to\n> > cleanly separate the relative lock-time (sequence numbers) from the RCLTV\n> > opcode (OP_CHECKSEQUENCEVERIFY) both in concept and in implementation.\n> Like\n> > CLTV, the CSV opcode only checks transaction data and requires no\n> contextual\n> > knowledge about block headers, a weakness of the other RCLTV proposals\n> that\n> > violate the clean separation between libscript and libconsensus. In a\n> > similar way, this BIP proposal only touches the transaction validation\n> logic\n> > without any impact to script.\n> >\n> > I would like to propose an additional BIP covering the\n> CHECKSEQUENCEVERIFY\n> > opcode and its enabling applications. But, well, one thing at a time.\n> >\n> > On Mon, Jun 1, 2015 at 8:45 PM, Stephen Morse <\n> stephencalebmorse at gmail.com>\n> > wrote:\n> >>\n> >> Hi Mark,\n> >>\n> >> Overall, I like this idea in every way except for one: unless I am\n> missing\n> >> something, we may still need an OP_RCLTV even with this being\n> implemented.\n> >>\n> >> In use cases such as micropayment channels where the funds are locked up\n> >> by multiple parties, the enforcement of the relative locktime can be\n> done by\n> >> the first-signing party. So, while your solution would probably work in\n> >> cases like this, where multiple signing parties are involved, there may\n> be\n> >> other, seen or unforeseen, use cases that require putting the relative\n> >> locktime right into the spending contract (the scriptPubKey itself).\n> When\n> >> there is only one signer, there's nothing that enforces using an\n> nSequence\n> >> and nVersion=2 that would prevent spending the output until a certain\n> time.\n> >>\n> >> I hope this is received as constructive criticism, I do think this is an\n> >> innovative idea. In my view, though, it seems to be less fully-featured\n> than\n> >> just repurposing an OP_NOP to create OP_RCLTV. The benefits are\n> obviously\n> >> that it saves transaction space by repurposing unused space, and would\n> >> likely work for most cases where an OP_RCLTV would be needed.\n> >>\n> >> Best,\n> >> Stephen\n> >>\n> >> On Mon, Jun 1, 2015 at 9:49 PM, Mark Friedenbach <mark at friedenbach.org>\n> >> wrote:\n> >>>\n> >>> I have written a reference implementation and BIP draft for a soft-fork\n> >>> change to the consensus-enforced behaviour of sequence numbers for the\n> >>> purpose of supporting transaction replacement via per-input relative\n> >>> lock-times. This proposal was previously discussed on the mailing list\n> in\n> >>> the following thread:\n> >>>\n> >>> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n> >>>\n> >>> In short summary, this proposal seeks to enable safe transaction\n> >>> replacement by re-purposing the nSequence field of a transaction input\n> to be\n> >>> a consensus-enforced relative lock-time.\n> >>>\n> >>> The advantages of this approach is that it makes use of the full range\n> of\n> >>> the 32-bit sequence number which until now has rarely been used for\n> anything\n> >>> other than a boolean control over absolute nLockTime, and it does so\n> in a\n> >>> way that is semantically compatible with the originally envisioned use\n> of\n> >>> sequence numbers for fast mempool transaction replacement.\n> >>>\n> >>> The disadvantages are that external constraints often prevent the full\n> >>> range of sequence numbers from being used when interpreted as a\n> relative\n> >>> lock-time, and re-purposing nSequence as a relative lock-time\n> precludes its\n> >>> use in other contexts. The latter point has been partially addressed by\n> >>> having the relative lock-time semantics be enforced only if the\n> >>> most-significant bit of nSequence is set. This preserves 31 bits for\n> >>> alternative use when relative lock-times are not required.\n> >>>\n> >>> The BIP draft can be found at the following gist:\n> >>>\n> >>> https://gist.github.com/maaku/be15629fe64618b14f5a\n> >>>\n> >>> The reference implementation is available at the following git\n> >>> repository:\n> >>>\n> >>> https://github.com/maaku/bitcoin/tree/sequencenumbers\n> >>>\n> >>> I request that the BIP editor please assign a BIP number for this work.\n> >>>\n> >>> Sincerely,\n> >>> Mark Friedenbach\n> >>>\n> >>>\n> >>>\n> ------------------------------------------------------------------------------\n> >>>\n> >>> _______________________________________________\n> >>> Bitcoin-development mailing list\n> >>> Bitcoin-development at lists.sourceforge.net\n> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>>\n> >>\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> >\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/989508d0/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-17T01:00:45",
                "message_text_only": "Given that we have had more than two weeks of public discussion, code is\navailable and reviewed, and several community identified issues resolved, I\nwould like to formally request a BIP number be assigned for this work. Will\nthe BIP editor be so kind as to do so to allow the BIP consensus process to\nproceed?\n\nThank you,\nMark Friedenbach\n\nOn Mon, Jun 1, 2015 at 6:49 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> I have written a reference implementation and BIP draft for a soft-fork\n> change to the consensus-enforced behaviour of sequence numbers for the\n> purpose of supporting transaction replacement via per-input relative\n> lock-times. This proposal was previously discussed on the mailing list in\n> the following thread:\n>\n> http://sourceforge.net/p/bitcoin/mailman/message/34146752/\n>\n> In short summary, this proposal seeks to enable safe transaction\n> replacement by re-purposing the nSequence field of a transaction input to\n> be a consensus-enforced relative lock-time.\n>\n> The advantages of this approach is that it makes use of the full range of\n> the 32-bit sequence number which until now has rarely been used for\n> anything other than a boolean control over absolute nLockTime, and it does\n> so in a way that is semantically compatible with the originally envisioned\n> use of sequence numbers for fast mempool transaction replacement.\n>\n> The disadvantages are that external constraints often prevent the full\n> range of sequence numbers from being used when interpreted as a relative\n> lock-time, and re-purposing nSequence as a relative lock-time precludes its\n> use in other contexts. The latter point has been partially addressed by\n> having the relative lock-time semantics be enforced only if the\n> most-significant bit of nSequence is set. This preserves 31 bits for\n> alternative use when relative lock-times are not required.\n>\n> The BIP draft can be found at the following gist:\n>\n> https://gist.github.com/maaku/be15629fe64618b14f5a\n>\n> The reference implementation is available at the following git repository:\n>\n> https://github.com/maaku/bitcoin/tree/sequencenumbers\n>\n> I request that the BIP editor please assign a BIP number for this work.\n>\n> Sincerely,\n> Mark Friedenbach\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/f58c91ad/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-17T01:20:25",
                "message_text_only": "On Wed, Jun 17, 2015 at 1:00 AM, Mark Friedenbach <mark at friedenbach.org> wrote:\n> Given that we have had more than two weeks of public discussion, code is\n> available and reviewed, and several community identified issues resolved, I\n> would like to formally request a BIP number be assigned for this work. Will\n> the BIP editor be so kind as to do so to allow the BIP consensus process to\n> proceed?\n\nBIP 68, unless you have objections."
            }
        ],
        "thread_summary": {
            "title": "Consensus-enforced transaction replacement signalled via sequence numbers",
            "categories": [
                "Bitcoin-development",
                "BIP draft"
            ],
            "authors": [
                "Stephen Morse",
                "Adam Back",
                "Stephen",
                "Tier Nolan",
                "Gregory Maxwell",
                "Mark Friedenbach"
            ],
            "messages_count": 11,
            "total_messages_chars_count": 44652
        }
    },
    {
        "title": "[Bitcoin-development] Fwd: Block Size Increase Requirements\u200f",
        "thread_messages": [
            {
                "author": "cipher anthem",
                "date": "2015-06-02T11:19:48",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/e400a186/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-02T11:26:54",
                "message_text_only": ">\n> But the majority of the hashrate can now perform double spends on your\n> chain! They can send bitcoins to exchanges, sell it, extract the money and\n> build a new longer chain to get their bitcoins back.\n>\nObviously if the majority of the mining hash rate is doing double spending\nattacks on exchanges then the Bitcoin experiment is resolved as a failure\nand it will become abandoned. This has been known since day one: it's in\nthe white paper. The basic assumption behind Bitcoin is that only a\nminority of actors are dishonest - if the majority are then Satoshi's\nscheme does not work.\n\nSo you are not stating anything new here.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/385eabc4/attachment.html>"
            },
            {
                "author": "Nathan Cook",
                "date": "2015-06-02T11:43:29",
                "message_text_only": "On 2 June 2015 at 14:26, Mike Hearn <mike at plan99.net> wrote:\n\n> But the majority of the hashrate can now perform double spends on your\n>> chain! They can send bitcoins to exchanges, sell it, extract the money and\n>> build a new longer chain to get their bitcoins back.\n>>\n> Obviously if the majority of the mining hash rate is doing double spending\n> attacks on exchanges then the Bitcoin experiment is resolved as a failure\n> and it will become abandoned. This has been known since day one: it's in\n> the white paper. The basic assumption behind Bitcoin is that only a\n> minority of actors are dishonest - if the majority are then Satoshi's\n> scheme does not work.\n>\n> So you are not stating anything new here.\n>\n\nIt's both consistent and credible for an agent to commit to honesty on a\nchain that it openly supports and dishonesty on a chain that it openly\nopposes. (Moral? Legal? Perhaps not.) That said, majority hashpower doesn't\nneed to be dishonest to stop a change to large blocks. It just needs to\nrefuse to build on blocks that it doesn't like. The minority isn't going to\nmine blocks larger than 1MB if it knows they'll be orphaned.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/727c8409/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Fwd: Block Size Increase Requirements\u200f",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "cipher anthem",
                "Mike Hearn",
                "Nathan Cook"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 2287
        }
    },
    {
        "title": "[Bitcoin-development] DevCore London",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2015-06-02T14:20:47",
                "message_text_only": "Hi there,\n\nI got some requests to re-record the tutorial talk I gave at DevCore 2015,\n\"How to build a timestamping smart contracts app in 30 minutes\". It's now\navailable here:\n\n    https://bitcoinj.github.io/document-timestamp-app\n\nIt covers:\n\n   - How to customise the wallet-template app for this use case\n   - How to construct a complex multi-stage SPV proof of block chain\n   inclusion\n   - How to save and then verify proof files\n   - How to bind transaction confidence state to the user interface\n   - How to create a Mac DMG bundle with a custom icon\n\nI hope someone finds it enjoyable!\n\n\n\nOn Thu, Apr 9, 2015 at 10:23 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> Next week on April 15th Gavin, Wladimir, Corey and myself will be at\n> DevCore London:\n>\n>    https://everyeventgives.com/event/devcore-london\n>\n> If you're in town why not come along?\n>\n> It's often the case that conferences can be just talking shops, without\n> much meat for real developers. So in the afternoon I'll be doing two things:\n>\n>    1. Running a hackathon/workshop type event. The theme is contracts,\n>    but we can hack on whatever you all feel like.\n>\n>    2. My \"talk\" will actually be a live coding event. Writing contracts\n>    apps has become a lot easier in the past few years, and to prove it to you\n>    I will write a decentralised cross-platform Tor supporting document\n>    timestamping app that uses OP_RETURN outputs and has a nice GUI ..... in 30\n>    minutes, on stage.\n>\n>    Don't think it can be done? Turn up and see for yourself.\n>\n> See you there!\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/4a459d44/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "DevCore London",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1741
        }
    },
    {
        "title": "[Bitcoin-development] Max Block Size: Simple Voting Procedure",
        "thread_messages": [
            {
                "author": "Matt Whitlock",
                "date": "2015-06-02T21:26:27",
                "message_text_only": "Why do it as an OP_RETURN output? It could be a simple token in the coinbase input script, similar to how support for P2SH was signaled among miners. And why should there be an explicit token for voting for the status quo? Simply omitting any indication should be an implicit vote for the status quo. A miner would only need to insert an indicator into their block if they wished for a larger block.\n\nThat said, proposals of this type have been discussed before, and the objection is always that miners would want larger blocks than the rest of the network could bear. Unless you want Bitcoin to become centralized in the hands of a few large mining pools, you shouldn't hand control over the block size limits to the miners.\n\n\nOn Sunday, 31 May 2015, at 3:04 pm, Stephen Morse wrote:\n> This is likely very similar to other proposals, but I want to bring voting\n> procedures back into the discussion. The goal here is to create a voting\n> procedure that is as simple as possible to increase the block size limit.\n> \n> Votes are aggregated over each 2016 block period. Each coinbase transaction\n> may have an output at tx.vout[0] with OP_RETURN data in it of the format:\n> \n>   OP_RETURN {OP_1 or OP_2}\n> \n> OP_2 means the miner votes to increase the block size limit. OP_1 means the\n> miner votes to not increase the block size limit. *Not including such a\n> vote is equivalent to voting to NOT increase the block size. *I first\n> thought that not voting should mean that you vote with your block size, but\n> then decided that it would be too gameable by others broadcasting\n> transactions to affect your block size.\n> \n> If in a 2016 block round there were more than 1008 blocks that voted to\n> increase the block size limit, then the max block size increases by 500 kb.\n> The votes can start when there is a supermajority of miners signaling\n> support for the voting procedure.\n> \n> A few important properties of this simple voting:\n> \n>    - It's not gameable via broadcasting transactions (assuming miners don't\n>    set their votes to be automatic, based on the size of recent blocks).\n>    - Miners don't have to bloat their blocks artificially just to place a\n>    vote for larger block sizes, and, similarly, don't need to exclude\n>    transactions even when they think the block size does not need to be raised.\n>    - The chain up until the point that this goes into effect may be\n>    interpreted as just lacking votes to increase the block size.\n> \n> We can't trust all miners, but we have to trust that >50% of them are\n> honest for the system to work. This system makes it so that altering the\n> maximum block size requires >50% of miners (hash power) to vote to increase\n> the consensus-limit.\n> \n> Thanks for your time. I think this is an important time in Bitcoin's\n> history. I'm not married to this proposal, but I think it would work. I\n> think a lot of the proposals mentioned on this mailing list would work. I\n> think it's time we just pick one and run with it.\n> \n> Please let me know your thoughts. I will start working on a pull request if\n> this receives any support from miners/core devs/community members, unless\n> someone with more experience volunteers.\n> \n> Best,\n> Stephen"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-03T00:30:58",
                "message_text_only": ">\n> Why do it as an OP_RETURN output? It could be a simple token in the\n> coinbase input script, similar to how support for P2SH was signaled among\n> miners. And why should there be an explicit token for voting for the status\n> quo? Simply omitting any indication should be an implicit vote for the\n> status quo. A miner would only need to insert an indicator into their block\n> if they wished for a larger block.\n>\n\nI don't really care the exact location it's put in. I just thought there\nwasn't an explicit need to put it in the header (via a bit of nVersion),\nand the scriptSig is already used for many things (block height, merged\nmining hash, \"\\\"P2SH\\\"\", miner identifier). And voting to keep the block\nsize the same by not voting is fine by me.\n\n\n> That said, proposals of this type have been discussed before, and the\n> objection is always that miners would want larger blocks than the rest of\n> the network could bear. Unless you want Bitcoin to become centralized in\n> the hands of a few large mining pools, you shouldn't hand control over the\n> block size limits to the miners.\n>\n\nYeah, that was the conclusion we came to chatting on #bitcoin-wizards the\nother day. I now think that this could be useful to dynamically increase a\nlower limit, but that there should still be a hard upper limit like 20 MB.\nI think that just changing the upper limit might be simpler and better,\nthough.\n\n- Stephen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/71c4ecb9/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-03T02:33:51",
                "message_text_only": "Pindar,\n\nyes and it's a good idea to separate the hard/soft fork upgrades. The point\n> being here is that we're also establishing a process for the community to\n> self-determine the way forward in a transparent and verifiable manner.\n>\n> What's not to like? :)\n>\n> I'll probably have some time on Sunday to help hack something up but I\n> don't think this is that heavy a coding lift? What am I missing?\n>\n\nAs Matt mentioned, many members of the bitcoin community would be hesitant\nabout giving miners this much power. It essentially lets them vote to\nchange the rules of the system. But miners are not the only part of this\necosystem, and they are not the only ones affected by the choice of block\nsize limit, so they probably shouldn't be the only ones with a vote.\nInstead, we vote with the software we run, and all upgrade.\n\nSo, while I think an idea like this has its merits, I would bet that it's\nfairly unlikely to get enough support to be merged into bitcoin core.\n\nBest,\nStephen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/12a7e17a/attachment.html>"
            },
            {
                "author": "Vincent Truong",
                "date": "2015-06-03T03:08:17",
                "message_text_only": "Some changes:\n\nVotes need to be 100%, not 50.01%. That way small miners have a fair\nchance. A 50.01% vote means large miners call the shots.\n\nUsers (people who make transactions) need to vote. A vote by a miner\nshouldn't count without user votes. Fee incentives should attract\nlegitimate votes from miners. A cheating miner will be defeated by another\nminer who includes those votes, and take the fees.\n\nThis lets wallet providers and exchanges cast votes (few wallets will\nimplement prompts and will just auto vote, so if you don't agree, switch\nwallets. Vote with your wallet).\n\n~Vince\nOn Jun 3, 2015 12:34 PM, \"Stephen Morse\" <stephencalebmorse at gmail.com>\nwrote:\n\n> Pindar,\n>\n> yes and it's a good idea to separate the hard/soft fork upgrades. The\n>> point being here is that we're also establishing a process for the\n>> community to self-determine the way forward in a transparent and verifiable\n>> manner.\n>>\n>> What's not to like? :)\n>>\n>> I'll probably have some time on Sunday to help hack something up but I\n>> don't think this is that heavy a coding lift? What am I missing?\n>>\n>\n> As Matt mentioned, many members of the bitcoin community would be hesitant\n> about giving miners this much power. It essentially lets them vote to\n> change the rules of the system. But miners are not the only part of this\n> ecosystem, and they are not the only ones affected by the choice of block\n> size limit, so they probably shouldn't be the only ones with a vote.\n> Instead, we vote with the software we run, and all upgrade.\n>\n> So, while I think an idea like this has its merits, I would bet that it's\n> fairly unlikely to get enough support to be merged into bitcoin core.\n>\n> Best,\n> Stephen\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/9795292e/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-03T04:18:22",
                "message_text_only": "On Wed, Jun 3, 2015 at 10:33 AM, Stephen Morse <stephencalebmorse at gmail.com>\nwrote:\n\n> Pindar,\n>\n> yes and it's a good idea to separate the hard/soft fork upgrades. The\n>> point being here is that we're also establishing a process for the\n>> community to self-determine the way forward in a transparent and verifiable\n>> manner.\n>>\n>> What's not to like? :)\n>>\n>> I'll probably have some time on Sunday to help hack something up but I\n>> don't think this is that heavy a coding lift? What am I missing?\n>>\n>\n> As Matt mentioned, many members of the bitcoin community would be hesitant\n> about giving miners this much power.\n>\n\nI understand this concern and it's a valid one, including other dimensions\nsuch as better decentralization. Some might argue that the mining pools in\nChina currently have such power and that's a bad thing:-\n\nhttps://blockchain.info/pools\n\nI happen to think  that it's unhealthy for the network but the irony is\nthat they are huge bitcoin fanbase that perhaps should be involved in this,\nand other,  decisions. The question is how.\n\nThus far our friends from f2pool have chimed in with some data from their\nperspective. It would be interesting to hear from the others and I'm\nfinding ways to do exactly that.\n\nSo let's find a way to involve, and not alienate them or others. Let's find\na way to get more data and test assumptions and boundaries.\n\n\nIt essentially lets them vote to change the rules of the system.\n>\n\nIt's data and yes, it gives then a very visible, verifiable 'vote' ...\nthough I prefer to think of this as 'voice'  as in a ' hummmm. '\n\nBut miners are not the only part of this ecosystem, and they are not the\n> only ones affected by the choice of block size limit, so they probably\n> shouldn't be the only ones with a vote.\n>\n\nI fully agree and it doesn't have to be the only voice ...  think 'choir'\n...  after all this is an ecosystem with each party playing their\nrespective roles. But sustainable ecosystems have 'keystone' species, and I\nbelieve these to be the 'honest' miners that help secure the network.\n\nInstead, we vote with the software we run, and all upgrade.\n>\n\nor not as the case may be.   I think we're trying to find a level of rough\nconsensus where members of the community feel comfortable enough to do this\nupgrade in their respective codebase.\n\n\n>\n> So, while I think an idea like this has its merits, I would bet that it's\n> fairly unlikely to get enough support to be merged into bitcoin core.\n>\n\nBitcoin was 'unlikely' ...  yet it happened.\n\nNevertheless you raise the possibility of a different possible path forward\nand that's positive. So thank you for doing that!\n\nBitcoin's humming in China, behind an GFW ... who could have guessed?\n\n'Connect and Liberate' :)\n\np.\n\n\n>\n> Best,\n> Stephen\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/addc9f1d/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-03T03:36:00",
                "message_text_only": "Vincent,\n\n> Some changes:\n>\n> Votes need to be 100%, not 50.01%. That way small miners have a fair\n> chance. A 50.01% vote means large miners call the shots.\n>\nWhile I like the idea of possibly requiring more than 50%, you wouldn't\nwant to have a situation where a minority of uncooperative (or just lazy)\nminers don't add their votes and hold up progress. Maybe 2/3 instead of\n1/2, though.\n\n> Users (people who make transactions) need to vote. A vote by a miner\n> shouldn't count without user votes. Fee incentives should attract\n> legitimate votes from miners. A cheating miner will be defeated by another\n> miner who includes those votes, and take the fees.\n>\n> This lets wallet providers and exchanges cast votes (few wallets will\n> implement prompts and will just auto vote, so if you don't agree, switch\n> wallets. Vote with your wallet).\n>\nThe idea of voting with your wallet, while appealing, is technically\ninfeasible. Miners can fill their blocks with any type of transactions,\nincluding their own specially designed transactions. And any fees from\nthese transactions can be collected right back into their coinbase\ntransaction.\n\n- Stephen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150602/ff5448a5/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Max Block Size: Simple Voting Procedure",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matt Whitlock",
                "Pindar Wong",
                "Stephen Morse",
                "Vincent Truong"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 12413
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin-development Digest, Vol 49, Issue 16",
        "thread_messages": [
            {
                "author": "Ron",
                "date": "2015-06-03T05:50:32",
                "message_text_only": "Subject: Bitcoin-development Digest, Vol 49, Issue 16\n   \u00a0 1. Re: Proposed alternatives to the 20MB step (Eric Voskuil)\n----------------------------------------------------------------------\n\nMessage: 1\nDate: Mon, 01 Jun 2015 17:09:10 -0700\nFrom: Eric Voskuil <eric at voskuil.org>\nSubject: Re: [Bitcoin-development] Proposed alternatives to the 20MB\n\u00a0\u00a0\u00a0 step\nTo: Mike Hearn <mike at plan99.net>, J?r?me Legoupil\n\u00a0\u00a0\u00a0 <jjlegoupil at gmail.com>\nCc: Bitcoin Dev <bitcoin-development at lists.sourceforge.net>\nMessage-ID: <556CF426.3030204 at voskuil.org>\nContent-Type: text/plain; charset=\"iso-8859-1\"\n\nOn 06/01/2015 08:55 AM, Mike Hearn wrote:\n>> Decentralization is the core of Bitcoin's security model and thus\nthat's what gives Bitcoin its value.\n> No. Usage is what gives Bitcoin value.\n\nNonsense.\n\nVisa, Dollar, Euro, Yuan, Peso have usage.\n\nThe value in Bitcoin is *despite* it's far lesser usage.\n\nYes, the price is a function of demand, but demand is a function of\nutility. Despite orders of magnitude less usage than state currencies,\nBitcoin has utility. This premium *only* exists due to its lack of\ncentralized control. I would not work full time, or at all, on Bitcoin\nif it was not for decentralization; nor would I hold any of it. I doubt\nanyone would show an interest in Bitcoin if it was not decentralized. If\nit centralized even you would be forced to find something else to do,\nbecause Bitcoin \"usage\" would drop to zero.\n\n> It's kind of maddening that I have to point this out. Decentralisation\nis a means to an end.\n\nNo, it was/is the primary objective.\n...\ne\n________________________________________________________I agree Eric, but I would add that demand is more a function of one's\u00a0 lack\u00a0of faith in one's government and its fiat currency.\u00a0 The value of Bitcoin is \nits independence and constancy.\u00a0 Its value doesn't change, only the worth \nor worthlessness of corrupt states and their currencies that it's compared \nto / exchanged with.\u00a0 I hesitate to say money since money is supposed to \nbe a store of value over time.\nRon\n\n\n\n\n  \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150603/f01f9ec6/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin-development Digest, Vol 49, Issue 16",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Ron"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2238
        }
    },
    {
        "title": "[Bitcoin-development] Tough questions for Peter Todd, Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet | Viacoin}",
        "thread_messages": [
            {
                "author": "Sven Berg",
                "date": "2015-06-04T21:52:16",
                "message_text_only": "1) Hours/week have you devoted to each project out of a 40hr work week\n\n2) Upfront and ongoing fees for use of your name\n\n3) Break down total amounts for each project\n\n4) Start dates of contracts for each project\n\n5) End dates (if applicable)\n\n6) Current and past holdings of altcoins/appcoins (including liquidation \ndates)\n\n7) Describe return on investment to investors related to your activities \nduring employment\n    (other than marketing/price pump)\n\n8) Describe your involvement with Initial Coin Offers (ICO) of \napplicable\n\n9) Explain rational for pursuit of ICO fund sources rather than \ncommunity/established\n    businesses (Lighthouse, legit startups, etc.)\n\n-- \nBerg Investigations LLC."
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-04T21:54:12",
                "message_text_only": "Why is this your business or the business of anyone on this list? Take it\nsomewhere else.\n\nOn Thu, Jun 4, 2015 at 2:52 PM, Sven Berg <svenberg at airmail.cc> wrote:\n\n> 1) Hours/week have you devoted to each project out of a 40hr work week\n>\n> 2) Upfront and ongoing fees for use of your name\n>\n> 3) Break down total amounts for each project\n>\n> 4) Start dates of contracts for each project\n>\n> 5) End dates (if applicable)\n>\n> 6) Current and past holdings of altcoins/appcoins (including liquidation\n> dates)\n>\n> 7) Describe return on investment to investors related to your activities\n> during employment\n>     (other than marketing/price pump)\n>\n> 8) Describe your involvement with Initial Coin Offers (ICO) of\n> applicable\n>\n> 9) Explain rational for pursuit of ICO fund sources rather than\n> community/established\n>     businesses (Lighthouse, legit startups, etc.)\n>\n> --\n> Berg Investigations LLC.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/842dd351/attachment.html>"
            },
            {
                "author": "Daniel Stadulis",
                "date": "2015-06-04T22:02:17",
                "message_text_only": "Off topic and inappropriate\n\nOn a meta level, all the anti-Todd comments are originating from\n*@airmail.cc accounts.\n\nOn Thu, Jun 4, 2015 at 2:54 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> Why is this your business or the business of anyone on this list? Take it\n> somewhere else.\n>\n> On Thu, Jun 4, 2015 at 2:52 PM, Sven Berg <svenberg at airmail.cc> wrote:\n>\n>> 1) Hours/week have you devoted to each project out of a 40hr work week\n>>\n>> 2) Upfront and ongoing fees for use of your name\n>>\n>> 3) Break down total amounts for each project\n>>\n>> 4) Start dates of contracts for each project\n>>\n>> 5) End dates (if applicable)\n>>\n>> 6) Current and past holdings of altcoins/appcoins (including liquidation\n>> dates)\n>>\n>> 7) Describe return on investment to investors related to your activities\n>> during employment\n>>     (other than marketing/price pump)\n>>\n>> 8) Describe your involvement with Initial Coin Offers (ICO) of\n>> applicable\n>>\n>> 9) Explain rational for pursuit of ICO fund sources rather than\n>> community/established\n>>     businesses (Lighthouse, legit startups, etc.)\n>>\n>> --\n>> Berg Investigations LLC.\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/2eeea72f/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-04T22:39:25",
                "message_text_only": "On Thu, Jun 4, 2015 at 6:02 PM, Daniel Stadulis <dstadulis at gmail.com> wrote:\n\n> Off topic and inappropriate\n>\n\nIndeed.\n\nTake this somewhere else, Mr. Berg.  This is a technical mailing list.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/bb46d84d/attachment.html>"
            },
            {
                "author": "Sven Berg",
                "date": "2015-06-04T22:04:42",
                "message_text_only": "On 2015-06-04 21:54, Mark Friedenbach wrote:\n> Why is this your business or the business of anyone on this list? Take\n> it somewhere else.\n\nDo you have a better avenue? Todd refuses to answer reasonable questions \nabout his involvement in these scams and failures elsewhere. The \ncommunity deserves answers when someone so prominent is involved in so \nmany shady projects with huge losses most recently the failure of \nDarkWallet.\n\n-- \nBerg Investigations LLC"
            },
            {
                "author": "Braun Brelin",
                "date": "2015-06-04T22:14:03",
                "message_text_only": "I'm sorry.  Are you a federal prosecutor? or a state prosecutor? Or\ninvolved with law enforcement in any way?\nOr involved in a civil suit against Mr. Todd?\n\nThe \"community\" doesn't deserve anything in this regard.  The appropriate\nresponse to your questions is:  \"F*** off\".\n\nBraun Brelin\n\n\n\nOn Fri, Jun 5, 2015 at 1:04 AM, Sven Berg <svenberg at airmail.cc> wrote:\n\n> On 2015-06-04 21:54, Mark Friedenbach wrote:\n> > Why is this your business or the business of anyone on this list? Take\n> > it somewhere else.\n>\n> Do you have a better avenue? Todd refuses to answer reasonable questions\n> about his involvement in these scams and failures elsewhere. The\n> community deserves answers when someone so prominent is involved in so\n> many shady projects with huge losses most recently the failure of\n> DarkWallet.\n>\n> --\n> Berg Investigations LLC\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/14dd8e67/attachment.html>"
            },
            {
                "author": "Sven Berg",
                "date": "2015-06-04T22:21:54",
                "message_text_only": "On 2015-06-04 22:14, Braun Brelin wrote:\n> I'm sorry.\u00a0 Are you a federal prosecutor? or a state prosecutor? Or\n> involved with law enforcement in any way?\n> Or involved in a civil suit against Mr. Todd? \u00a0\n\nDepending on Todd's answers I'm sure all of the above will be involved.\n\n> The \"community\" doesn't deserve anything in this regard.\u00a0 The\n> appropriate response to your questions is: \u00a0\"F*** off\".\n\nStrong words to some reasonable questions.\n\n--\nBerg Investigations LLC"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-04T22:32:50",
                "message_text_only": "Why would Peter be accountable to you in any shape or form? What contact\ndid he sign onto with you?\n\n-Kr\nOn Jun 4, 2015 5:52 PM, \"Sven Berg\" <svenberg at airmail.cc> wrote:\n\n> 1) Hours/week have you devoted to each project out of a 40hr work week\n>\n> 2) Upfront and ongoing fees for use of your name\n>\n> 3) Break down total amounts for each project\n>\n> 4) Start dates of contracts for each project\n>\n> 5) End dates (if applicable)\n>\n> 6) Current and past holdings of altcoins/appcoins (including liquidation\n> dates)\n>\n> 7) Describe return on investment to investors related to your activities\n> during employment\n>     (other than marketing/price pump)\n>\n> 8) Describe your involvement with Initial Coin Offers (ICO) of\n> applicable\n>\n> 9) Explain rational for pursuit of ICO fund sources rather than\n> community/established\n>     businesses (Lighthouse, legit startups, etc.)\n>\n> --\n> Berg Investigations LLC.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150604/d324704f/attachment.html>"
            },
            {
                "author": "Gavin",
                "date": "2015-06-04T22:47:57",
                "message_text_only": "Completely off-topic for this mailing list, which is about coding/technology not people.\n\nStop or I will excercise my moderator superpowers and remove you from this list.\n\n--\nGavin Andresen\n\n\n> On Jun 4, 2015, at 5:52 PM, Sven Berg <svenberg at airmail.cc> wrote:\n> \n> 1) Hours/week have ....."
            }
        ],
        "thread_summary": {
            "title": "Tough questions for Peter Todd, Chief Scientist {Mastercoin | Counterparty | Coinkite | Darkwallet | Viacoin}",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Daniel Stadulis",
                "Gavin",
                "Kristov Atlas",
                "Sven Berg",
                "Braun Brelin",
                "Mark Friedenbach"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 8375
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin core 0.11.0 release candidate 1 available",
        "thread_messages": [
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-05T08:59:49",
                "message_text_only": "Hello,\n\nI've just uploaded Bitcoin Core 0.11.0rc1 executables to:\n\nhttps://bitcoin.org/bin/bitcoin-core-0.11.0/test/\n\nThe source code can be found in the source tarball or in git under the tag 'v0.11.0rc1'\n\nPreliminary release notes can be found here:\n\nhttps://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md\n\nThanks to everyone that participated in development or in the gitian build process,\n\nWladimir"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin core 0.11.0 release candidate 1 available",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Wladimir J. van der Laan"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 413
        }
    },
    {
        "title": "[Bitcoin-development] Lexicographical Indexing of Transaction Inputs and Outputs",
        "thread_messages": [
            {
                "author": "Kristov Atlas",
                "date": "2015-06-06T00:12:08",
                "message_text_only": "Hello all,\n\nI have written a draft of a BIP to standardize the sorting of tx inputs and\noutputs for privacy and security reasons. A few colleagues have reviewed\nthis and provided feedback privately, but now it's ready for feedback from\na wider audience.\n\nIf there is positive sentiment about the proposal after feedback is\nintegrated, I aim for a bip number to be assigned and have it accepted into\nhttps://github.com/bitcoin/bips\n\nLink:\nhttps://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki\n\nFor your convenience, here's the abstract:\n\n\"Currently there is no standard for bitcoin wallet clients when ordering\ntransaction inputs and outputs. As a result, wallet clients often have a\ndiscernible blockchain fingerprint, and can leak private information about\ntheir users. By contrast, a standard for non-deterministic sorting could be\ndifficult to audit. This document proposes deterministic lexicographical\nsorting, using hashes of previous transactions and output indices to sort\ntransaction inputs, as well as value and locking scripts to sort\ntransaction outputs.\"\n\nThanks,\n\nKristov Atlas\nOpen Bitcoin Privacy Project Contributor, Blockchain.info Security\nEngineer, etc.\nTwitter: @kristovatlas\nBlog: kristovatlas.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/9ba7bf54/attachment.html>"
            },
            {
                "author": "Stephen",
                "date": "2015-06-06T03:20:38",
                "message_text_only": "Hi Kristov,\n\nI like the idea. Mainly because having a standard reminds developers to consider this issue. In addition, we would have visibility into the portion of the network that adopts this strategy to enhance privacy. A few points of feedback:\n\n - I think your explanation of sorting could be significantly shortened and clarified by simply saying that the TXIDs of inputs should be compared as uint256 integers. \n - The malleability of input TXIDs, as mentioned in the proposal, could cause inputs to be ordered in a non-standard way. Reordering then them would invalidate the signatures (assuming SIGHASH_ALL), so the transaction would be left with improperly ordered inputs. While not a huge issue, it's not ideal. I think the best way to get around this would be to use normalized TXIDs, but you might also be able to sort based on the previous outputs that each of the inputs are spending? These both require information that may not be readily available, however, and use of normalized transaction IDs is not fully developed yet. \n\nBest,\nStephen \n\n\n\n> On Jun 5, 2015, at 8:12 PM, Kristov Atlas <kristovatlas.lists at gmail.com> wrote:\n> \n> Hello all,\n> \n> I have written a draft of a BIP to standardize the sorting of tx inputs and outputs for privacy and security reasons. A few colleagues have reviewed this and provided feedback privately, but now it's ready for feedback from a wider audience.\n> \n> If there is positive sentiment about the proposal after feedback is integrated, I aim for a bip number to be assigned and have it accepted into https://github.com/bitcoin/bips \n> \n> Link: https://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki\n> \n> For your convenience, here's the abstract:\n> \n> \"Currently there is no standard for bitcoin wallet clients when ordering transaction inputs and outputs. As a result, wallet clients often have a discernible blockchain fingerprint, and can leak private information about their users. By contrast, a standard for non-deterministic sorting could be difficult to audit. This document proposes deterministic lexicographical sorting, using hashes of previous transactions and output indices to sort transaction inputs, as well as value and locking scripts to sort transaction outputs.\"\n> \n> Thanks,\n> \n> Kristov Atlas\n> Open Bitcoin Privacy Project Contributor, Blockchain.info Security Engineer, etc.\n> Twitter: @kristovatlas\n> Blog: kristovatlas.com\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/6364f4b4/attachment.html>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-06T06:24:47",
                "message_text_only": "Hey Stephen,\n\nThanks for your feedback\n\nOn Fri, Jun 5, 2015 at 11:20 PM, Stephen <stephencalebmorse at gmail.com>\nwrote:\n\n>  - I think your explanation of sorting could be significantly shortened\n> and clarified by simply saying that the TXIDs of inputs should be compared\n> as uint256 integers.\n>\n\nI considered defining the comparison of txids in terms of integers;\nhowever, I am concerned that this definition may be ambiguous when applied\nto a variety of languages and platforms without a similar amount of\nexplanation as currently exists. For example, if a web wallet uses an API\nto receive transaction information, this is traditionally expressed in\nterms tx id strings rather than 256-bit integers. My intent is that wallets\ncan implement the algorithm however they wish, but should ensure that their\noutput is compliant with the BIP definition. IMHO the algorithm stated in\nthe BIP should target test cases rather than implementation, and should\nleave as little room for ambiguity as possible.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/964566ef/attachment.html>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-07T00:06:56",
                "message_text_only": "I've updated the draft BIP in two ways:\n-Making it clear that sorting is algorithmically agnostic, but should\nconform to the output of the example algorithms written in python\n-The BIP now handles schemes that create an input/output dependency, such\nas SIGHASH_SINGLE:\n\nHandling Input/Output Dependencies\n\nSome uncommon forms of transactions create an ordering dependency between\ninputs and outputs of a transaction. Wallets forming these transactions\nshould first sort inputs according to the methodology outlined in section\n\u201cTransaction Inputs\u201d of this BIP. Then, they should fix the output indices\nthat depend on the input order, and sort the remaining outputs around them.\nIf there are no outputs that do not depend on input order, then all outputs\nwill simply be ordered based on the expected scheme. The following are the\nknown cases of input/output dependency that must be handled specially:\n\n* SIGHASH_SINGLE hash type. [5] Clients seeking to verify LI01 compliance\nfor a transaction must inspect the last byte of the scriptSig of each input\nto determine the signature hash type. In the case of SIGHASH_SINGLE (0x03)\nfor input \u201cn\u201d, the verifier should expect that output \u201cn\u201d will be fixed\nwhen considering output ordering.\n\nhttps://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki\n\nI'm satisfied with this adjustment, as it is unlikely that any software\nthat wants to verify compliance with the BIP will not have access to the\nscriptSig of each input.\n\n-Kristov\n\nOn Sat, Jun 6, 2015 at 2:24 AM, Kristov Atlas <kristovatlas.lists at gmail.com>\nwrote:\n\n> Hey Stephen,\n>\n> Thanks for your feedback\n>\n> On Fri, Jun 5, 2015 at 11:20 PM, Stephen <stephencalebmorse at gmail.com>\n> wrote:\n>\n>>  - I think your explanation of sorting could be significantly shortened\n>> and clarified by simply saying that the TXIDs of inputs should be compared\n>> as uint256 integers.\n>>\n>\n> I considered defining the comparison of txids in terms of integers;\n> however, I am concerned that this definition may be ambiguous when applied\n> to a variety of languages and platforms without a similar amount of\n> explanation as currently exists. For example, if a web wallet uses an API\n> to receive transaction information, this is traditionally expressed in\n> terms tx id strings rather than 256-bit integers. My intent is that wallets\n> can implement the algorithm however they wish, but should ensure that their\n> output is compliant with the BIP definition. IMHO the algorithm stated in\n> the BIP should target test cases rather than implementation, and should\n> leave as little room for ambiguity as possible.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/022fec3a/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-07T02:35:23",
                "message_text_only": "On Sat, Jun 06, 2015 at 08:06:56PM -0400, Kristov Atlas wrote:\n\nIn general I think this is a good idea, and should be implemented; we've\nhad a depressing number of wallets fail to implement randomization\nproperly, if at all.\n\n> I've updated the draft BIP in two ways:\n> -Making it clear that sorting is algorithmically agnostic, but should\n> conform to the output of the example algorithms written in python\n> -The BIP now handles schemes that create an input/output dependency, such\n> as SIGHASH_SINGLE:\n> \n> Handling Input/Output Dependencies\n> \n> Some uncommon forms of transactions create an ordering dependency between\n> inputs and outputs of a transaction. Wallets forming these transactions\n> should first sort inputs according to the methodology outlined in section\n> \u201cTransaction Inputs\u201d of this BIP. Then, they should fix the output indices\n> that depend on the input order, and sort the remaining outputs around them.\n> If there are no outputs that do not depend on input order, then all outputs\n> will simply be ordered based on the expected scheme. The following are the\n> known cases of input/output dependency that must be handled specially:\n> \n> * SIGHASH_SINGLE hash type. [5] Clients seeking to verify LI01 compliance\n> for a transaction must inspect the last byte of the scriptSig of each input\n> to determine the signature hash type. In the case of SIGHASH_SINGLE (0x03)\n> for input \u201cn\u201d, the verifier should expect that output \u201cn\u201d will be fixed\n> when considering output ordering.\n\nWhy mention SIGHASH_SINGLE at all? Its use-case is highly specialized\nprotocols; you haven't taken into account the needs of those protocols.\nFor BIP's it's better to stick to the use-cases where the need is clear\nand there exists running code that to speculate too much on future uses.\nWith signature hashing in particular it's not yet clear at all what\nfuture OP_CHECKSIG's will look like, let alone the various ways people\nwill use sighash for smart contract type stuff.\n\nYou'd be better off presenting the BIP in terms of a generic statement\nthat \"except when otherwise prevented by advanced signature hashing\nrequirements, wallet software must emit transactions sorted according to\nthe following\" You can then specify the two common cases in detail:\n\n1) SIGHASH_ALL: input and output order signed, so sort appropriately\n\n2) SIGHASH_ANYONECANPAY: input order not signed, so software should emit\n   transactions sorted, recognising that the actual mined order may be\n   changed.\n\nAs for IsStandard() rules - let alone soft forks - better to leave\ndiscussion of them out for now. In particular, for the soft-fork case\nmandating certain transaction orders will very likely cause problems in\nthe future for future OP_CHECKSIG upgrades. For SIGHASH_ANYONECANPAY, it\nmight be appropriate for nodes to enforce a certain ordering, but that\ncan be a separate BIP. (actually implementing that in Bitcoin Core would\nbe annoying and ugly right now; without replace-by-fee ANYONECANPAY has\na silly DoS attack (adding low-fee inputs) so I can't recommend wallets\nuse it in the general case yet)\n\n\"and a sequence number currently set to 0xFFFFFFFF.\" <- Actually, this\nwill be changed in Bitcoin Core as of v0.11.0, which implements\nanti-fee-sniping w/ nLockTime.(1) (I need to write up a full BIP\ndescribing it)\n\n\nDo you have a patch implementing deterministic tx ordering for Bitcoin\nCore yet?\n\n1) https://github.com/bitcoin/bitcoin/pull/2340\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000079693d8d175b476081a04af9c1d00ea2dbe0efb011bd79e\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/d3560629/attachment.sig>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-08T22:53:54",
                "message_text_only": "Hey Peter, thanks for your experienced feedback.\n\nOn Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized\n> protocols; you haven't taken into account the needs of those protocols.\n> For BIP's it's better to stick to the use-cases where the need is clear\n> and there exists running code that to speculate too much on future uses.\n> With signature hashing in particular it's not yet clear at all what\n> future OP_CHECKSIG's will look like, let alone the various ways people\n> will use sighash for smart contract type stuff.\n>\n> You'd be better off presenting the BIP in terms of a generic statement\n> that \"except when otherwise prevented by advanced signature hashing\n> requirements, wallet software must emit transactions sorted according to\n> the following\" You can then specify the two common cases in detail:\n>\n> 1) SIGHASH_ALL: input and output order signed, so sort appropriately\n>\n> 2) SIGHASH_ANYONECANPAY: input order not signed, so software should emit\n>    transactions sorted, recognising that the actual mined order may be\n>    changed.\n>\n\nThat makes sense. I updated the language as follows -- your thoughts? Keep\nin mind this BIP is informational, and so people are free to ignore it.\n\n\"Applicability: This BIP applies to all transactions of signature hash type\nSIGHASH_ALL. Additionally,  software compliant with this BIP that allows\nlater parties to update the transaction (e.g. using signature hash types\nSIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit\nlexicographically sorted inputs and outputs, although they may later be\nmodified. Transactions that have index dependencies between transactions or\nwithin the same transaction are covered under the section of this BIP\nentitled \u201cHandling Input/Output Dependencies.\u201d\"\n\n\n> As for IsStandard() rules - let alone soft forks - better to leave\n> discussion of them out for now. In particular, for the soft-fork case\n> mandating certain transaction orders will very likely cause problems in\n> the future for future OP_CHECKSIG upgrades. For SIGHASH_ANYONECANPAY, it\n> might be appropriate for nodes to enforce a certain ordering, but that\n> can be a separate BIP. (actually implementing that in Bitcoin Core would\n> be annoying and ugly right now; without replace-by-fee ANYONECANPAY has\n> a silly DoS attack (adding low-fee inputs) so I can't recommend wallets\n> use it in the general case yet)\n>\n> \"and a sequence number currently set to 0xFFFFFFFF.\" <- Actually, this\n> will be changed in Bitcoin Core as of v0.11.0, which implements\n> anti-fee-sniping w/ nLockTime.(1) (I need to write up a full BIP\n> describing it)\n>\n\nThanks for the heads-up; removed.\n\n\n> Do you have a patch implementing deterministic tx ordering for Bitcoin\n> Core yet?\n>\n\nI'm not a frequent C programmer, so I'd prefer to let someone else take\ncare of it, as a frequent committer of code would do a faster and more\nstylistically consistent job of it. If no one else will, however, I will.\n\n-Kristov\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/0d043ebb/attachment.html>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-08T22:55:57",
                "message_text_only": ">\n> As for IsStandard() rules - let alone soft forks - better to leave\n> discussion of them out for now.\n\n\nRemoved that bit as well.\n\n Latest version:\nhttps://github.com/kristovatlas/rfc/blob/master/bips/bip-li01.mediawiki\n\n-Kristov\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/683bd48c/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-09T20:14:36",
                "message_text_only": "On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:\n\nTwo other things:\n\n\n\n> On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:\n> \n> > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized\n> > protocols; you haven't taken into account the needs of those protocols.\n> > For BIP's it's better to stick to the use-cases where the need is clear\n> > and there exists running code that to speculate too much on future uses.\n> > With signature hashing in particular it's not yet clear at all what\n> > future OP_CHECKSIG's will look like, let alone the various ways people\n> > will use sighash for smart contract type stuff.\n> >\n> > You'd be better off presenting the BIP in terms of a generic statement\n> > that \"except when otherwise prevented by advanced signature hashing\n> > requirements, wallet software must emit transactions sorted according to\n> > the following\" You can then specify the two common cases in detail:\n> >\n> > 1) SIGHASH_ALL: input and output order signed, so sort appropriately\n> >\n> > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should emit\n> >    transactions sorted, recognising that the actual mined order may be\n> >    changed.\n> >\n> \n> That makes sense. I updated the language as follows -- your thoughts? Keep\n> in mind this BIP is informational, and so people are free to ignore it.\n> \n> \"Applicability: This BIP applies to all transactions of signature hash type\n> SIGHASH_ALL. Additionally,  software compliant with this BIP that allows\n> later parties to update the transaction (e.g. using signature hash types\n> SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit\n> lexicographically sorted inputs and outputs, although they may later be\n> modified. Transactions that have index dependencies between transactions or\n> within the same transaction are covered under the section of this BIP\n> entitled \u201cHandling Input/Output Dependencies.\u201d\"\n\nI'd keep it even simpler than that, and just say for now that such\nuse-cases are out of the scope of this BIP, however those standards\nshould come up with some kind of deterministic standard that meets the\nneeds of the protocol. Again, there's a bunch of possible use-cases here\nand we just can't predict them; focus on the fact that the *spirit* of\nwhat this BIP is about is applicable and future standards should be\ndeveloped.\n\nSo I'd change the \"Applicability\" section to:\n\nThis BIP applies to all transactions where the order of inputs and\noutputs does not matter. This is true for the vast majority of\ntransactions as they simply move funds from one place to another.\n\nCurrently this generally refers to transactions where SIGHASH_ALL is\nused, in which case the signatures commit to the exact order of input\nand outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE\nhas been used (e.g. crowdfunds) the order of inputs and/or outputs may\nnot be signed, however compliant software should still emit transactions\nwith sorted inputs and outputs, even though they may later be modified\nby others.\n\nIn the event that future protocol upgrades introduce new signature hash\ntypes, compliant software should apply the lexographic ordering\nprinciple analogously.\n\nWhile out of scope of this BIP, protocols that do require a specified\norder of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should\nconsider the goals of this BIP and how best to adapt them to the\nspecifics needs of those protocols.\n\n\nThen remove the \"handling input/output deps\" section.\n\n> > Do you have a patch implementing deterministic tx ordering for Bitcoin\n> > Core yet?\n> >\n> \n> I'm not a frequent C programmer, so I'd prefer to let someone else take\n> care of it, as a frequent committer of code would do a faster and more\n> stylistically consistent job of it. If no one else will, however, I will.\n\n\n\nre: the actual ordering algorithm, having txids be sorted by with the\nhex-based algorithm is odd. I'd simply say they're sorted as\nlittle-endian byte arrays, or in other words, with the bytearr_cmp()\nfunction, but with the order of bytes reversed. You also should say that\nwe're doing that to make the user see them in visually sorted order to\nmatch expectations because txids are displayed as little-endian.\n\nFor outputs, don't say \"locking script\", say \"scriptPubKey\". Secondly,\nscriptPubKeys are not in little-endian representation - they have no\nendianness to them. With output amount, there's no need to say that\nthey're unsigned or little-endian satoshies, just say they're sorted\nlargest/smallest amount first.\n\n\"For the sake of efficiency, amounts will be considered first for\nsorting, since they contain fewer bytes of information (7 bytes)\ncompared to a standard P2PKH locking script (800 bytes).\" <- where the\nheck did you get these numbers from? Amounts are 8 bytes, and P2PKH\nscriptPubKeys are 25 bytes.\n\n\n\"Backwards Compatibility\" <- I'd just remove this whole section; we're\nunlikely to make this an IsStandard() rule anytime soon.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/d2847d2f/attachment.sig>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-10T23:36:22",
                "message_text_only": "Thanks for the feedback. I think I have reflected all of your requested\nchanges in the latest version, in the BIP and sample code:\n\nhttps://github.com/kristovatlas/rfc/tree/master/bips\n\n-Kr\n\nOn Tue, Jun 9, 2015 at 4:14 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:\n>\n> Two other things:\n>\n>\n>\n> > On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:\n> >\n> > > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized\n> > > protocols; you haven't taken into account the needs of those protocols.\n> > > For BIP's it's better to stick to the use-cases where the need is clear\n> > > and there exists running code that to speculate too much on future\n> uses.\n> > > With signature hashing in particular it's not yet clear at all what\n> > > future OP_CHECKSIG's will look like, let alone the various ways people\n> > > will use sighash for smart contract type stuff.\n> > >\n> > > You'd be better off presenting the BIP in terms of a generic statement\n> > > that \"except when otherwise prevented by advanced signature hashing\n> > > requirements, wallet software must emit transactions sorted according\n> to\n> > > the following\" You can then specify the two common cases in detail:\n> > >\n> > > 1) SIGHASH_ALL: input and output order signed, so sort appropriately\n> > >\n> > > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should\n> emit\n> > >    transactions sorted, recognising that the actual mined order may be\n> > >    changed.\n> > >\n> >\n> > That makes sense. I updated the language as follows -- your thoughts?\n> Keep\n> > in mind this BIP is informational, and so people are free to ignore it.\n> >\n> > \"Applicability: This BIP applies to all transactions of signature hash\n> type\n> > SIGHASH_ALL. Additionally,  software compliant with this BIP that allows\n> > later parties to update the transaction (e.g. using signature hash types\n> > SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit\n> > lexicographically sorted inputs and outputs, although they may later be\n> > modified. Transactions that have index dependencies between transactions\n> or\n> > within the same transaction are covered under the section of this BIP\n> > entitled \u201cHandling Input/Output Dependencies.\u201d\"\n>\n> I'd keep it even simpler than that, and just say for now that such\n> use-cases are out of the scope of this BIP, however those standards\n> should come up with some kind of deterministic standard that meets the\n> needs of the protocol. Again, there's a bunch of possible use-cases here\n> and we just can't predict them; focus on the fact that the *spirit* of\n> what this BIP is about is applicable and future standards should be\n> developed.\n>\n> So I'd change the \"Applicability\" section to:\n>\n> This BIP applies to all transactions where the order of inputs and\n> outputs does not matter. This is true for the vast majority of\n> transactions as they simply move funds from one place to another.\n>\n> Currently this generally refers to transactions where SIGHASH_ALL is\n> used, in which case the signatures commit to the exact order of input\n> and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE\n> has been used (e.g. crowdfunds) the order of inputs and/or outputs may\n> not be signed, however compliant software should still emit transactions\n> with sorted inputs and outputs, even though they may later be modified\n> by others.\n>\n> In the event that future protocol upgrades introduce new signature hash\n> types, compliant software should apply the lexographic ordering\n> principle analogously.\n>\n> While out of scope of this BIP, protocols that do require a specified\n> order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should\n> consider the goals of this BIP and how best to adapt them to the\n> specifics needs of those protocols.\n>\n>\n> Then remove the \"handling input/output deps\" section.\n>\n> > > Do you have a patch implementing deterministic tx ordering for Bitcoin\n> > > Core yet?\n> > >\n> >\n> > I'm not a frequent C programmer, so I'd prefer to let someone else take\n> > care of it, as a frequent committer of code would do a faster and more\n> > stylistically consistent job of it. If no one else will, however, I will.\n>\n>\n>\n> re: the actual ordering algorithm, having txids be sorted by with the\n> hex-based algorithm is odd. I'd simply say they're sorted as\n> little-endian byte arrays, or in other words, with the bytearr_cmp()\n> function, but with the order of bytes reversed. You also should say that\n> we're doing that to make the user see them in visually sorted order to\n> match expectations because txids are displayed as little-endian.\n>\n> For outputs, don't say \"locking script\", say \"scriptPubKey\". Secondly,\n> scriptPubKeys are not in little-endian representation - they have no\n> endianness to them. With output amount, there's no need to say that\n> they're unsigned or little-endian satoshies, just say they're sorted\n> largest/smallest amount first.\n>\n> \"For the sake of efficiency, amounts will be considered first for\n> sorting, since they contain fewer bytes of information (7 bytes)\n> compared to a standard P2PKH locking script (800 bytes).\" <- where the\n> heck did you get these numbers from? Amounts are 8 bytes, and P2PKH\n> scriptPubKeys are 25 bytes.\n>\n>\n> \"Backwards Compatibility\" <- I'd just remove this whole section; we're\n> unlikely to make this an IsStandard() rule anytime soon.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/51baef2a/attachment.html>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-12T21:36:56",
                "message_text_only": "Since everyone's busy, I went ahead and made a pull request to add this as\nan informational BIP 79 to the bips directory.\n\nhttps://github.com/bitcoin/bips/pull/157\n\nRegards,\nKristov\n\nOn Tue, Jun 9, 2015 at 4:14 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:\n>\n> Two other things:\n>\n>\n>\n> > On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:\n> >\n> > > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized\n> > > protocols; you haven't taken into account the needs of those protocols.\n> > > For BIP's it's better to stick to the use-cases where the need is clear\n> > > and there exists running code that to speculate too much on future\n> uses.\n> > > With signature hashing in particular it's not yet clear at all what\n> > > future OP_CHECKSIG's will look like, let alone the various ways people\n> > > will use sighash for smart contract type stuff.\n> > >\n> > > You'd be better off presenting the BIP in terms of a generic statement\n> > > that \"except when otherwise prevented by advanced signature hashing\n> > > requirements, wallet software must emit transactions sorted according\n> to\n> > > the following\" You can then specify the two common cases in detail:\n> > >\n> > > 1) SIGHASH_ALL: input and output order signed, so sort appropriately\n> > >\n> > > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should\n> emit\n> > >    transactions sorted, recognising that the actual mined order may be\n> > >    changed.\n> > >\n> >\n> > That makes sense. I updated the language as follows -- your thoughts?\n> Keep\n> > in mind this BIP is informational, and so people are free to ignore it.\n> >\n> > \"Applicability: This BIP applies to all transactions of signature hash\n> type\n> > SIGHASH_ALL. Additionally,  software compliant with this BIP that allows\n> > later parties to update the transaction (e.g. using signature hash types\n> > SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit\n> > lexicographically sorted inputs and outputs, although they may later be\n> > modified. Transactions that have index dependencies between transactions\n> or\n> > within the same transaction are covered under the section of this BIP\n> > entitled \u201cHandling Input/Output Dependencies.\u201d\"\n>\n> I'd keep it even simpler than that, and just say for now that such\n> use-cases are out of the scope of this BIP, however those standards\n> should come up with some kind of deterministic standard that meets the\n> needs of the protocol. Again, there's a bunch of possible use-cases here\n> and we just can't predict them; focus on the fact that the *spirit* of\n> what this BIP is about is applicable and future standards should be\n> developed.\n>\n> So I'd change the \"Applicability\" section to:\n>\n> This BIP applies to all transactions where the order of inputs and\n> outputs does not matter. This is true for the vast majority of\n> transactions as they simply move funds from one place to another.\n>\n> Currently this generally refers to transactions where SIGHASH_ALL is\n> used, in which case the signatures commit to the exact order of input\n> and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE\n> has been used (e.g. crowdfunds) the order of inputs and/or outputs may\n> not be signed, however compliant software should still emit transactions\n> with sorted inputs and outputs, even though they may later be modified\n> by others.\n>\n> In the event that future protocol upgrades introduce new signature hash\n> types, compliant software should apply the lexographic ordering\n> principle analogously.\n>\n> While out of scope of this BIP, protocols that do require a specified\n> order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should\n> consider the goals of this BIP and how best to adapt them to the\n> specifics needs of those protocols.\n>\n>\n> Then remove the \"handling input/output deps\" section.\n>\n> > > Do you have a patch implementing deterministic tx ordering for Bitcoin\n> > > Core yet?\n> > >\n> >\n> > I'm not a frequent C programmer, so I'd prefer to let someone else take\n> > care of it, as a frequent committer of code would do a faster and more\n> > stylistically consistent job of it. If no one else will, however, I will.\n>\n>\n>\n> re: the actual ordering algorithm, having txids be sorted by with the\n> hex-based algorithm is odd. I'd simply say they're sorted as\n> little-endian byte arrays, or in other words, with the bytearr_cmp()\n> function, but with the order of bytes reversed. You also should say that\n> we're doing that to make the user see them in visually sorted order to\n> match expectations because txids are displayed as little-endian.\n>\n> For outputs, don't say \"locking script\", say \"scriptPubKey\". Secondly,\n> scriptPubKeys are not in little-endian representation - they have no\n> endianness to them. With output amount, there's no need to say that\n> they're unsigned or little-endian satoshies, just say they're sorted\n> largest/smallest amount first.\n>\n> \"For the sake of efficiency, amounts will be considered first for\n> sorting, since they contain fewer bytes of information (7 bytes)\n> compared to a standard P2PKH locking script (800 bytes).\" <- where the\n> heck did you get these numbers from? Amounts are 8 bytes, and P2PKH\n> scriptPubKeys are 25 bytes.\n>\n>\n> \"Backwards Compatibility\" <- I'd just remove this whole section; we're\n> unlikely to make this an IsStandard() rule anytime soon.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/6cbf4c0f/attachment.html>"
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-14T16:29:37",
                "message_text_only": "Update: BIP 79 has been implemented in the latest release of Electrum,\nv2.3.2:\n\nhttps://github.com/spesmilo/electrum/blob/master/RELEASE-NOTES\n\n-Kristov\n\nOn Fri, Jun 12, 2015 at 5:36 PM, Kristov Atlas <kristovatlas.lists at gmail.com\n> wrote:\n\n> Since everyone's busy, I went ahead and made a pull request to add this as\n> an informational BIP 79 to the bips directory.\n>\n> https://github.com/bitcoin/bips/pull/157\n>\n> Regards,\n> Kristov\n>\n> On Tue, Jun 9, 2015 at 4:14 PM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> On Mon, Jun 08, 2015 at 06:53:54PM -0400, Kristov Atlas wrote:\n>>\n>> Two other things:\n>>\n>>\n>>\n>> > On Sat, Jun 6, 2015 at 10:35 PM, Peter Todd <pete at petertodd.org> wrote:\n>> >\n>> > > Why mention SIGHASH_SINGLE at all? Its use-case is highly specialized\n>> > > protocols; you haven't taken into account the needs of those\n>> protocols.\n>> > > For BIP's it's better to stick to the use-cases where the need is\n>> clear\n>> > > and there exists running code that to speculate too much on future\n>> uses.\n>> > > With signature hashing in particular it's not yet clear at all what\n>> > > future OP_CHECKSIG's will look like, let alone the various ways people\n>> > > will use sighash for smart contract type stuff.\n>> > >\n>> > > You'd be better off presenting the BIP in terms of a generic statement\n>> > > that \"except when otherwise prevented by advanced signature hashing\n>> > > requirements, wallet software must emit transactions sorted according\n>> to\n>> > > the following\" You can then specify the two common cases in detail:\n>> > >\n>> > > 1) SIGHASH_ALL: input and output order signed, so sort appropriately\n>> > >\n>> > > 2) SIGHASH_ANYONECANPAY: input order not signed, so software should\n>> emit\n>> > >    transactions sorted, recognising that the actual mined order may be\n>> > >    changed.\n>> > >\n>> >\n>> > That makes sense. I updated the language as follows -- your thoughts?\n>> Keep\n>> > in mind this BIP is informational, and so people are free to ignore it.\n>> >\n>> > \"Applicability: This BIP applies to all transactions of signature hash\n>> type\n>> > SIGHASH_ALL. Additionally,  software compliant with this BIP that allows\n>> > later parties to update the transaction (e.g. using signature hash types\n>> > SIGHASH_NONE or a variant of SIGHASH_ANYONECANPAY) should emit\n>> > lexicographically sorted inputs and outputs, although they may later be\n>> > modified. Transactions that have index dependencies between\n>> transactions or\n>> > within the same transaction are covered under the section of this BIP\n>> > entitled \u201cHandling Input/Output Dependencies.\u201d\"\n>>\n>> I'd keep it even simpler than that, and just say for now that such\n>> use-cases are out of the scope of this BIP, however those standards\n>> should come up with some kind of deterministic standard that meets the\n>> needs of the protocol. Again, there's a bunch of possible use-cases here\n>> and we just can't predict them; focus on the fact that the *spirit* of\n>> what this BIP is about is applicable and future standards should be\n>> developed.\n>>\n>> So I'd change the \"Applicability\" section to:\n>>\n>> This BIP applies to all transactions where the order of inputs and\n>> outputs does not matter. This is true for the vast majority of\n>> transactions as they simply move funds from one place to another.\n>>\n>> Currently this generally refers to transactions where SIGHASH_ALL is\n>> used, in which case the signatures commit to the exact order of input\n>> and outputs. In the case where SIGHASH_ANYONECANPAY and/or SIGHASH_NONE\n>> has been used (e.g. crowdfunds) the order of inputs and/or outputs may\n>> not be signed, however compliant software should still emit transactions\n>> with sorted inputs and outputs, even though they may later be modified\n>> by others.\n>>\n>> In the event that future protocol upgrades introduce new signature hash\n>> types, compliant software should apply the lexographic ordering\n>> principle analogously.\n>>\n>> While out of scope of this BIP, protocols that do require a specified\n>> order of inputs/outputs (e.g. due to use of SIGHASH_SINGLE) should\n>> consider the goals of this BIP and how best to adapt them to the\n>> specifics needs of those protocols.\n>>\n>>\n>> Then remove the \"handling input/output deps\" section.\n>>\n>> > > Do you have a patch implementing deterministic tx ordering for Bitcoin\n>> > > Core yet?\n>> > >\n>> >\n>> > I'm not a frequent C programmer, so I'd prefer to let someone else take\n>> > care of it, as a frequent committer of code would do a faster and more\n>> > stylistically consistent job of it. If no one else will, however, I\n>> will.\n>>\n>>\n>>\n>> re: the actual ordering algorithm, having txids be sorted by with the\n>> hex-based algorithm is odd. I'd simply say they're sorted as\n>> little-endian byte arrays, or in other words, with the bytearr_cmp()\n>> function, but with the order of bytes reversed. You also should say that\n>> we're doing that to make the user see them in visually sorted order to\n>> match expectations because txids are displayed as little-endian.\n>>\n>> For outputs, don't say \"locking script\", say \"scriptPubKey\". Secondly,\n>> scriptPubKeys are not in little-endian representation - they have no\n>> endianness to them. With output amount, there's no need to say that\n>> they're unsigned or little-endian satoshies, just say they're sorted\n>> largest/smallest amount first.\n>>\n>> \"For the sake of efficiency, amounts will be considered first for\n>> sorting, since they contain fewer bytes of information (7 bytes)\n>> compared to a standard P2PKH locking script (800 bytes).\" <- where the\n>> heck did you get these numbers from? Amounts are 8 bytes, and P2PKH\n>> scriptPubKeys are 25 bytes.\n>>\n>>\n>> \"Backwards Compatibility\" <- I'd just remove this whole section; we're\n>> unlikely to make this an IsStandard() rule anytime soon.\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/5a268295/attachment.html>"
            },
            {
                "author": "Rusty Russell",
                "date": "2015-06-15T21:42:14",
                "message_text_only": "Kristov Atlas <kristovatlas.lists at gmail.com> writes:\n> Hello all,\n>\n> I have written a draft of a BIP to standardize the sorting of tx inputs and\n> outputs for privacy and security reasons. A few colleagues have reviewed\n> this and provided feedback privately, but now it's ready for feedback from\n> a wider audience.\n>\n> If there is positive sentiment about the proposal after feedback is\n> integrated, I aim for a bip number to be assigned and have it accepted into\n> https://github.com/bitcoin/bips\n\nOK, I've modified my implementation to match your proposal:\n\n        https://github.com/rustyrussell/bitcoin/tree/bip-69\n\nIt compiles, and is fairly trivial, but will need some testing.\n\nCheers,\nRusty."
            }
        ],
        "thread_summary": {
            "title": "Lexicographical Indexing of Transaction Inputs and Outputs",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Stephen",
                "Rusty Russell",
                "Kristov Atlas",
                "Peter Todd"
            ],
            "messages_count": 12,
            "total_messages_chars_count": 39369
        }
    },
    {
        "title": "[Bitcoin-development] [RFC] Canonical input and output ordering in transactions",
        "thread_messages": [
            {
                "author": "Rusty Russell",
                "date": "2015-06-06T04:42:10",
                "message_text_only": "Title: Canonical Input and Output Ordering\nAuthor: Rusty Russell <rusty at rustcorp.com.au>\nDiscussions-To: \"Bitcoin Dev\" <bitcoin-development at lists.sourceforge.net>\nStatus: Draft\nType: Standards Track\nCreated: 2015-06-06\n\nAbstract\n\nThis BIP provides a canonical ordering of inputs and outputs when\ncreating transactions.\n\nMotivation\n\nMost bitcoin wallet implementations randomize the outputs of\ntransactions they create to avoid trivial linkage analysis (especially\nchange outputs), however implementations have made mistakes in this area\nin the past.\n\nUsing a canonical ordering has the same effect, but is simpler, more\nobvious if incorrect, and can eventually be enforced by IsStandard() and\neven a soft-fork to enforce it.\n\nSpecification\n\nInputs should be ordered like so:\n        index (lower value first)\n        txid (little endian order, lower byte first)\n\nOutputs should be ordered like so:\n        amount (lower value first)\n        script (starting from first byte, lower byte first, shorter wins)\n\nRationale\n\nAny single wallet is already free to implement this, but if other\nwallets do not it would reduce privacy by making those transactions\nstand out.  Thus a BIP is appropriate, especially if this were to\nbecome an IsStandard() rule once widely adopted.\n\nBecause integers are fast to compare, they're sorted first, before the\nlexographical ordering.\n\nThe other input fields do not influence the sort order, as any valid\ntransactions cannot have two inputs with the same index and txid.\n\nReference Implementation\n\nhttps://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-06T04:46:17",
                "message_text_only": "Rusty, this doesn't play well with SIGHASH_SINGLE which is used in\nassurance contracts among other things. Sometimes the ordering is set by\nthe signing logic itself...\nOn Jun 5, 2015 9:43 PM, \"Rusty Russell\" <rusty at rustcorp.com.au> wrote:\n\n> Title: Canonical Input and Output Ordering\n> Author: Rusty Russell <rusty at rustcorp.com.au>\n> Discussions-To: \"Bitcoin Dev\" <bitcoin-development at lists.sourceforge.net>\n> Status: Draft\n> Type: Standards Track\n> Created: 2015-06-06\n>\n> Abstract\n>\n> This BIP provides a canonical ordering of inputs and outputs when\n> creating transactions.\n>\n> Motivation\n>\n> Most bitcoin wallet implementations randomize the outputs of\n> transactions they create to avoid trivial linkage analysis (especially\n> change outputs), however implementations have made mistakes in this area\n> in the past.\n>\n> Using a canonical ordering has the same effect, but is simpler, more\n> obvious if incorrect, and can eventually be enforced by IsStandard() and\n> even a soft-fork to enforce it.\n>\n> Specification\n>\n> Inputs should be ordered like so:\n>         index (lower value first)\n>         txid (little endian order, lower byte first)\n>\n> Outputs should be ordered like so:\n>         amount (lower value first)\n>         script (starting from first byte, lower byte first, shorter wins)\n>\n> Rationale\n>\n> Any single wallet is already free to implement this, but if other\n> wallets do not it would reduce privacy by making those transactions\n> stand out.  Thus a BIP is appropriate, especially if this were to\n> become an IsStandard() rule once widely adopted.\n>\n> Because integers are fast to compare, they're sorted first, before the\n> lexographical ordering.\n>\n> The other input fields do not influence the sort order, as any valid\n> transactions cannot have two inputs with the same index and txid.\n>\n> Reference Implementation\n>\n> https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150605/12c1d6ed/attachment.html>"
            },
            {
                "author": "Rusty Russell",
                "date": "2015-06-06T06:44:07",
                "message_text_only": "Mark Friedenbach <mark at friedenbach.org> writes:\n> Rusty, this doesn't play well with SIGHASH_SINGLE which is used in\n> assurance contracts among other things. Sometimes the ordering is set by\n> the signing logic itself...\n\nAh, I forgot about that particular wart. Yech.  Implies that you can\norder inputs or outputs, not both.\n\nSomething like \"outputs must be in order, inputs which do not\nCHECK(MULTI)SIG_(VERIFY) a SIGHASH_SINGLE sig must be in order with\nrespect to each other\".  But that's much less trivial since it implies\nscript evaluation.\n\nIn other news, I noticed Kristov Atlas's concurrent proposal just after\nI posted this (via reddit).  He used far more words, but didn't note\nthis issue either AFAICT.\n\nThanks!\nRusty."
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-06T08:24:48",
                "message_text_only": "On Fri, Jun 05, 2015 at 09:46:17PM -0700, Mark Friedenbach wrote:\n> Rusty, this doesn't play well with SIGHASH_SINGLE which is used in\n> assurance contracts among other things. Sometimes the ordering is set by\n> the signing logic itself...\n\nBut in that case (unconstrained) randomization can't be used either. This is posed as an alternative to randomization. So in that regard, the proposal still makes sense.\nI think this move to verifyable, deterministic methods where possible is good.\n\nWladimir"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-06T09:45:23",
                "message_text_only": "Certainly, but I would drop discussion of IsStandard or consensus rules.\nOn Jun 6, 2015 1:24 AM, \"Wladimir J. van der Laan\" <laanwj at gmail.com> wrote:\n\n> On Fri, Jun 05, 2015 at 09:46:17PM -0700, Mark Friedenbach wrote:\n> > Rusty, this doesn't play well with SIGHASH_SINGLE which is used in\n> > assurance contracts among other things. Sometimes the ordering is set by\n> > the signing logic itself...\n>\n> But in that case (unconstrained) randomization can't be used either. This\n> is posed as an alternative to randomization. So in that regard, the\n> proposal still makes sense.\n> I think this move to verifyable, deterministic methods where possible is\n> good.\n>\n> Wladimir\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/11ad8bc7/attachment.html>"
            },
            {
                "author": "Danny Thorpe",
                "date": "2015-06-08T21:25:40",
                "message_text_only": "FWIW, The Open Assets colored coin protocol (CoinPrism) places special\nsignificance on the zeroth input and the position of the OP_RETURN colored\ncoin marker output to distinguish colored coin issuance outputs from\ntransfer outputs. Reordering the inputs or the outputs breaks the colored\ncoin representation.\n\nRecommending sorting of the inputs and outputs as a best practice is fine\n(and better than random, IMO), but not as part of IsStandard() or consensus\nrules.  There are cases where the order of the inputs and outputs is\nsignificant.\n\n-Danny\n\nOn Fri, Jun 5, 2015 at 9:42 PM, Rusty Russell <rusty at rustcorp.com.au> wrote:\n\n> Title: Canonical Input and Output Ordering\n> Author: Rusty Russell <rusty at rustcorp.com.au>\n> Discussions-To: \"Bitcoin Dev\" <bitcoin-development at lists.sourceforge.net>\n> Status: Draft\n> Type: Standards Track\n> Created: 2015-06-06\n>\n> Abstract\n>\n> This BIP provides a canonical ordering of inputs and outputs when\n> creating transactions.\n>\n> Motivation\n>\n> Most bitcoin wallet implementations randomize the outputs of\n> transactions they create to avoid trivial linkage analysis (especially\n> change outputs), however implementations have made mistakes in this area\n> in the past.\n>\n> Using a canonical ordering has the same effect, but is simpler, more\n> obvious if incorrect, and can eventually be enforced by IsStandard() and\n> even a soft-fork to enforce it.\n>\n> Specification\n>\n> Inputs should be ordered like so:\n>         index (lower value first)\n>         txid (little endian order, lower byte first)\n>\n> Outputs should be ordered like so:\n>         amount (lower value first)\n>         script (starting from first byte, lower byte first, shorter wins)\n>\n> Rationale\n>\n> Any single wallet is already free to implement this, but if other\n> wallets do not it would reduce privacy by making those transactions\n> stand out.  Thus a BIP is appropriate, especially if this were to\n> become an IsStandard() rule once widely adopted.\n>\n> Because integers are fast to compare, they're sorted first, before the\n> lexographical ordering.\n>\n> The other input fields do not influence the sort order, as any valid\n> transactions cannot have two inputs with the same index and txid.\n>\n> Reference Implementation\n>\n> https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/d7100388/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-08T21:36:11",
                "message_text_only": "On Mon, Jun 08, 2015 at 02:25:40PM -0700, Danny Thorpe wrote:\n> FWIW, The Open Assets colored coin protocol (CoinPrism) places special\n> significance on the zeroth input and the position of the OP_RETURN colored\n> coin marker output to distinguish colored coin issuance outputs from\n> transfer outputs. Reordering the inputs or the outputs breaks the colored\n> coin representation.\n> \n> Recommending sorting of the inputs and outputs as a best practice is fine\n> (and better than random, IMO), but not as part of IsStandard() or consensus\n> rules.  There are cases where the order of the inputs and outputs is\n> significant.\n\nTimestamping is another case where order matters: if you put the digest\nin the last vout you can use SHA256 midstate's to reduce the size of the\ntimestamp proof.\n\nAnyway, there's no reason to rush re: changes to IsStandard()\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/6b176e01/attachment.sig>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-14T23:04:58",
                "message_text_only": "On Mon, Jun 8, 2015 at 9:25 PM, Danny Thorpe <danny.thorpe at gmail.com> wrote:\n> Recommending sorting of the inputs and outputs as a best practice is fine\n> (and better than random, IMO), but not as part of IsStandard() or consensus\n> rules.  There are cases where the order of the inputs and outputs is\n> significant.\n\nIs it your opinion that its fine if the result is that it makes the\nusage trivially distinguishable e.g. where it might be subjected to\nhigher tx fees, or might break some software which incorrectly expects\nall transactions to be ordered since most are?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-14T23:02:51",
                "message_text_only": "On Sat, Jun 6, 2015 at 4:42 AM, Rusty Russell <rusty at rustcorp.com.au> wrote:\n> Title: Canonical Input and Output Ordering\n> Author: Rusty Russell <rusty at rustcorp.com.au>\n> Discussions-To: \"Bitcoin Dev\" <bitcoin-development at lists.sourceforge.net>\n> Status: Draft\n> Type: Standards Track\n> Created: 2015-06-06\n>\n> Abstract\n>\n> This BIP provides a canonical ordering of inputs and outputs when\n> creating transactions.\n>\n> Motivation\n>\n> Most bitcoin wallet implementations randomize the outputs of\n> transactions they create to avoid trivial linkage analysis (especially\n> change outputs), however implementations have made mistakes in this area\n> in the past.\n>\n> Using a canonical ordering has the same effect, but is simpler, more\n> obvious if incorrect, and can eventually be enforced by IsStandard() and\n> even a soft-fork to enforce it.\n>\n> Specification\n>\n> Inputs should be ordered like so:\n>         index (lower value first)\n>         txid (little endian order, lower byte first)\n>\n> Outputs should be ordered like so:\n>         amount (lower value first)\n>         script (starting from first byte, lower byte first, shorter wins)\n>\n> Rationale\n>\n> Any single wallet is already free to implement this, but if other\n> wallets do not it would reduce privacy by making those transactions\n> stand out.  Thus a BIP is appropriate, especially if this were to\n> become an IsStandard() rule once widely adopted.\n>\n> Because integers are fast to compare, they're sorted first, before the\n> lexographical ordering.\n>\n> The other input fields do not influence the sort order, as any valid\n> transactions cannot have two inputs with the same index and txid.\n>\n> Reference Implementation\n>\n> https://github.com/rustyrussell/bitcoin/tree/bip-in-out-ordering\n\n\nSorry I wasn't a part of the IRC conversation where this was first\ndiscussed, though I'm very happy to see a concrete implementation\nalong with the proposal.\n\nI'm not a great fan of this proposal for two reasons: The first is\nthat the strict ordering requirements is incompatible with future\nsoft-forks that may expose additional ordering constraints. Today we\nhave _SINGLE, which as noted this interacts with poorly, but there\nhave been other constraints proposed that this would also interact\nwith poorly.\n\nThe second is that even absent consensus rules there may be invisible\nconstraints in systems-- e.g. hardware wallets that sign top down, or\nfuture transaction covenants that have constraints about ordering,  or\nproof systems that use (yuck) midstate compression for efficiency.\nRight now, with random ordering these applications are fairly\nindistinguishable from other random uses (since their imposed order\ncould come about by chance) but if everyone else was ordered, even if\nwasn't enforced.. these would be highly distinguishable. Which would\nbe unfortunate.  Worse, if most transactions are ordered the few that\naren't could be mishandled (which is, I assume, part of why you\npropose requiring the ordering-- but I think the soft fork constraints\nthere hurt it more).\n\n[Sorry for the delay in stating my views here; I wanted to talk them\nover with a few other people to see if I was just being stupid and\nmisunderstanding the proposal]\n\nI think perhaps the motivations here are understated. We have not seen\nany massive deployments of accidentally broken ordering that I'm aware\nof-- and an implementation that got this wrong in a harmful way would\nlikely make far more fatal mistakes (e.g. non random private keys).\nAs an alternative to this proposal the ordering can be privately\nderandomized in the same way DSA is, to avoid the need for an actual\nnumber source.  If getting the randomness right were really the only\nmotivation, I'd suggest we propose a simple derandomized randomization\nalgorithm--- e.g. take the order from (H(input ids||client secret)).\n\nI think there is actually an unstated motivation also driving this\n(and the other) proposal related to collaborative transaction systems\nlike coinjoins or micropayment channels; where multiple clients need\nto agree on the same ordering. Is this the case? If so we should\nprobably talk through some of the requirements there and see if there\nisn't a better way to address it."
            },
            {
                "author": "Rusty Russell",
                "date": "2015-06-15T02:29:11",
                "message_text_only": "Gregory Maxwell <gmaxwell at gmail.com> writes:\n> I'm not a great fan of this proposal for two reasons: The first is\n> that the strict ordering requirements is incompatible with future\n> soft-forks that may expose additional ordering constraints. Today we\n> have _SINGLE, which as noted this interacts with poorly, but there\n> have been other constraints proposed that this would also interact\n> with poorly.\n\nYes, I hit this when I implemented an IsStandard change; upon input\nevaluation the scriptsigs which used _SINGLE get disregarded from\nordering.  \n\n> The second is that even absent consensus rules there may be invisible\n> constraints in systems-- e.g. hardware wallets that sign top down,\n\nI think that one's pretty easy to fix (and they should fix it anyway, to\navoid leaking information due to ordering): they can receive an\nunordered tx and sign it as if it were ordered canonically.\n\n> or\n> future transaction covenants that have constraints about ordering,  or\n> proof systems that use (yuck) midstate compression for efficiency.\n\nThe softfork argument I find the most compelling, though it's tempting\nto argue that every ordering use (including SIGHASH_SINGLE) is likely\na mistake.\n\n> I think perhaps the motivations here are understated. We have not seen\n> any massive deployments of accidentally broken ordering that I'm aware\n> of-- and an implementation that got this wrong in a harmful way would\n> likely make far more fatal mistakes (e.g. non random private keys).\n\nI was prompted to propose something by this:\n\nhttps://blog.blocktrail.com/2015/05/getting-your-change-in-order/\n\nIf that's the only one though, it's less compelling.\n\n> As an alternative to this proposal the ordering can be privately\n> derandomized in the same way DSA is, to avoid the need for an actual\n> number source.  If getting the randomness right were really the only\n> motivation, I'd suggest we propose a simple derandomized randomization\n> algorithm--- e.g. take the order from (H(input ids||client secret)).\n>\n> I think there is actually an unstated motivation also driving this\n> (and the other) proposal related to collaborative transaction systems\n> like coinjoins or micropayment channels; where multiple clients need\n> to agree on the same ordering. Is this the case? If so we should\n> probably talk through some of the requirements there and see if there\n> isn't a better way to address it.\n\nIndeed.  I was implementing deterministic permutations for lightning\n(signature exchange requires both sides agree on ordering).\n\nCheers,\nRusty."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-15T02:33:03",
                "message_text_only": "On Mon, Jun 15, 2015 at 2:29 AM, Rusty Russell <rusty at rustcorp.com.au> wrote:\n> The softfork argument I find the most compelling, though it's tempting\n> to argue that every ordering use (including SIGHASH_SINGLE) is likely\n> a mistake.\n\nOh.\n\nHm.\n\nIt is the case that the generalized sighash flag design I was thinking\nabout was actually completely neutral about ordering, and yet still\nreplaced SINGLE.\n\nI need to think a bit on that."
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-15T02:47:15",
                "message_text_only": "There's another important use case which you mentioned Greg, that also\nrequires special exemption: compact commitments via mid-state compression.\n\nThe use case is an OP_RETURN output sorted last, whose last N bytes are a\ncommitment of some kind. A proof of the commitment can then use mid state\ncompression to elide the beginning of the transaction.\n\nHow do you make a special exemption for this category of outputs? I can't\nthink of a very clean way of doing so that doesn't require an ugly\nadvertising of sort-order exemptions.\n\nThe fact that we have two different existing use cases which conflict with\nsoft-fork enforcement, I'm quiet concerned that there are either other\nthings we aren't thinking of or haven't invented yet which would be\naffected.\n\nOn Sun, Jun 14, 2015 at 7:33 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n> On Mon, Jun 15, 2015 at 2:29 AM, Rusty Russell <rusty at rustcorp.com.au>\n> wrote:\n> > The softfork argument I find the most compelling, though it's tempting\n> > to argue that every ordering use (including SIGHASH_SINGLE) is likely\n> > a mistake.\n>\n> Oh.\n>\n> Hm.\n>\n> It is the case that the generalized sighash flag design I was thinking\n> about was actually completely neutral about ordering, and yet still\n> replaced SINGLE.\n>\n> I need to think a bit on that.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/cd07104d/attachment.html>"
            },
            {
                "author": "Rusty Russell",
                "date": "2015-06-15T21:01:04",
                "message_text_only": "Mark Friedenbach <mark at friedenbach.org> writes:\n> There's another important use case which you mentioned Greg, that also\n> requires special exemption: compact commitments via mid-state compression.\n>\n> The use case is an OP_RETURN output sorted last, whose last N bytes are a\n> commitment of some kind. A proof of the commitment can then use mid state\n> compression to elide the beginning of the transaction.\n>\n> How do you make a special exemption for this category of outputs? I can't\n> think of a very clean way of doing so that doesn't require an ugly\n> advertising of sort-order exemptions.\n\nYes, we can suit any one use case, but not all of them.\n\nFor example, outputs shall be sorted by:\n        1.  First byte (or 0 if script is zero length) minus 107.\n        2.  The remainder of the script in lexographical order.\n\nThis would put OP_RETURN outputs last.\n\nThough Peter Todd's more general best-effort language might make more\nsense.  It's not like you can hide an OP_RETURN transaction to make it\nlook like something else, so that transaction not going to be\ndistinguished by non-canonical ordering.\n\nCheers,\nRusty."
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-16T07:10:17",
                "message_text_only": "On Jun 15, 2015 11:43 PM, \"Rusty Russell\" <rusty at rustcorp.com.au> wrote:\n\n> Though Peter Todd's more general best-effort language might make more\n> sense.  It's not like you can hide an OP_RETURN transaction to make it\n> look like something else, so that transaction not going to be\n> distinguished by non-canonical ordering.\n\nWhat about commitments that don't use op_return (ie pay2contract\ncommitments)?\n\nIn any case, if the motivation is ordering in multi-party transactions\nthere should be ways to do it without any consequences for other\ntransaction types' privacy. For example you could have a deterministic\nmethod that depends on a random seed all parties in the transaction\npreviously share. That way the ordering is deterministic for all parties\ninvolved in the transaction (which can use whatever channel they're using\nto send the parts to also send this random seed) while at the same time the\norder looks random (or at least not cannonical in a recognisable way) to\neveryone else.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/0ce9341e/attachment.html>"
            },
            {
                "author": "Rusty Russell",
                "date": "2015-06-16T08:06:38",
                "message_text_only": "Jorge Tim\u00f3n <jtimon at jtimon.cc> writes:\n> On Jun 15, 2015 11:43 PM, \"Rusty Russell\" <rusty at rustcorp.com.au> wrote:\n>\n>> Though Peter Todd's more general best-effort language might make more\n>> sense.  It's not like you can hide an OP_RETURN transaction to make it\n>> look like something else, so that transaction not going to be\n>> distinguished by non-canonical ordering.\n>\n> What about commitments that don't use op_return (ie pay2contract\n> commitments)?\n\nI have no idea what they are? :)\n\n> In any case, if the motivation is ordering in multi-party transactions\n> there should be ways to do it without any consequences for other\n> transaction types' privacy. For example you could have a deterministic\n> method that depends on a random seed all parties in the transaction\n> previously share. That way the ordering is deterministic for all parties\n> involved in the transaction (which can use whatever channel they're using\n> to send the parts to also send this random seed) while at the same time the\n> order looks random (or at least not cannonical in a recognisable way) to\n> everyone else.\n\nYes, my plan B would be an informational bip with simple code,\nsuggesting a way to permute a transaction based on some secret.  No\npoint everyone reinventing the wheel, badly.\n\nCheers,\nRusty."
            },
            {
                "author": "Kristov Atlas",
                "date": "2015-06-15T04:01:36",
                "message_text_only": "On Sun, Jun 14, 2015 at 7:02 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n> I'm not a great fan of this proposal for two reasons: The first is\n> that the strict ordering requirements is incompatible with future\n> soft-forks that may expose additional ordering constraints. Today we\n> have _SINGLE, which as noted this interacts with poorly, but there\n> have been other constraints proposed that this would also interact\n> with poorly.\n>\n\nI'm not clear on why this is a problem, so long as the canonical ordering\nBIP is *optional*. Unless there is a specific plan to soft fork a change\nthat would break the BIP and it is fairly imminent, I see this only as a\nreason not to integrate it into isStandard().\n\n\n> The second is that even absent consensus rules there may be invisible\n> constraints in systems-- e.g. hardware wallets that sign top down, or\n> future transaction covenants that have constraints about ordering,  or\n> proof systems that use (yuck) midstate compression for efficiency. Right\n> now, with random ordering these applications are fairly\n> indistinguishable from other random uses (since their imposed order\n> could come about by chance) but if everyone else was ordered, even if\n> wasn't enforced.. these would be highly distinguishable. Which would\n> be unfortunate.\n\n\nMaybe they shouldn't be doing that. :-P\n\n\n> I think perhaps the motivations here are understated. We have not seen\n> any massive deployments of accidentally broken ordering that I'm aware\n> of-- and an implementation that got this wrong in a harmful way would\n> likely make far more fatal mistakes (e.g. non random private keys).\n>\n\nIn my reading of various wallet client sources, it is common that wallet\nclients will use cryptographically weak sources of randomness to sort\noutputs -- that is, the ones that actually bother to randomly sort. I can\nhunt down some examples if this would substantially contribute to the\ndiscussion.\n\nAs an alternative to this proposal the ordering can be privately\n> derandomized in the same way DSA is, to avoid the need for an actual\n> number source.  If getting the randomness right were really the only\n> motivation, I'd suggest we propose a simple derandomized randomization\n> algorithm--- e.g. take the order from (H(input ids||client secret)).\n>\n\nThis sounds similar to an idea that Sergio pitched to me privately, which\nwas for wallets to have a private sorting key that they can use to sort\ninputs and outputs. However, I suspect that adding yet another key which\nwill necessarily require special key rotation rules and maybe special\nbackup procedures will mean that this standard will not be widely adopted\nany time soon. Ideally, I'd like to see someone write a different BIP with\nthe sorting key idea and let them compete in the wallet client market\nrather than trying to anticipate what is best for all clients and\ndistilling two good ideas into one artificially.\n\n-Kristov\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/004fad7d/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Canonical input and output ordering in transactions",
            "categories": [
                "Bitcoin-development",
                "RFC"
            ],
            "authors": [
                "Rusty Russell",
                "Kristov Atlas",
                "Peter Todd",
                "Jorge Tim\u00f3n",
                "Gregory Maxwell",
                "Wladimir J. van der Laan",
                "Mark Friedenbach",
                "Danny Thorpe"
            ],
            "messages_count": 16,
            "total_messages_chars_count": 26322
        }
    },
    {
        "title": "[bitcoin-dev] [Bitcoin-development] [RFC] Canonical input and output ordering in transactions",
        "thread_messages": [
            {
                "author": "Kristov Atlas",
                "date": "2015-06-24T22:09:32",
                "message_text_only": "Following up on this topic...\n\ngmaxwell has reserved BIP 69 for my proposal.\n\nIt has been implemented by Electrum in v2.3.2:\nhttps://github.com/spesmilo/electrum/blob/master/RELEASE-NOTES\n\nRusty has kindly tweaked his original canonical ordering proposal\nimplementation for Bitcoin Core's wallet client to fit my proposal:\nhttps://github.com/rustyrussell/bitcoin/tree/bip-69 (needs testing)\n\nOutstanding objections appear to me to boil down to two points:\n\n1) Some transactions cannot comply with this BIP because there are input\nand/or put index dependencies.\n\nMy response: No big deal, it's informational. They simply won't be\ncompliant with the BIP, and that's fine with me.\n\n2) If we set a standard now for transactions that is not apparently random\nordering from the perspective of passive blockchain observers, transactions\nthat can't comply with this BIP will stand out. Also, if we change our\ncollective minds in the future about how ordering should be handled, those\nfuture transactions would stand out. Therefore, the \"safe\" course of action\nis to come up with another scheme that appears to be random ordering from\nthe perspective of a passive blockchain observer.\n\nMy response: Apparently-random but owner-verifiable ordering is doable.\nDiscussion of this has revolved around what I have called a \"sorting key\"\n-- sort lexicographically, and then reorder according to the bits in a\nsorting key that is impossible to predict by an attacker. This means\npassive observers cannot determine anything meaningful about the\ntransaction (e.g. which output is change, information leaked based on utxo\nselection algorithm for inputs, etc.) but the owner of the funds and the\nsorting key can verify that his transaction matches the canonical\nspecification. Ideally, I think the key should rotate for each transaction\nto avoid the possibility that a static key can link multiple transactions\ntogether. The key should be rotated in such a fashion that the next\niteration is not predictable to anyone except the key holder (e.g. put the\nkey through a secure pseudo-random function for each new iteration). This\ncould be done by generating a few bytes of entropy upon wallet creation and\nkeeping track of the current iteration of rotation. HD wallets could derive\nthe initial state of the sorting key by deriving it from the HD seed. There\nare a variety of schemes that could work here.\n\nMy main objection to this family of approaches at present is complexity. I\nsuspect that many wallet clients will not want to implement the BIP if they\nhave to maintain a sorting key.\n\nA second objection is that no one will be able to detect anomalies in BIP\ncompliance except for the sorting key holder. Most users probably will not\nbother to verify this. For code reviewers, this means that the sorting key\nis yet another aspect of the code base that must be scrutinized to ensure\nit is not being used as a covert channel or has been underhandedly weakened\nin some fashion.\n\nAlso, I will mention an ancillary benefit of a non-random canonical\nordering: it makes unit testing of transactions for Bitcoin wallets simpler.\n\nGiven all of the above, I will reiterate my preference to keep the proposal\nas it is now. The pull request is here:\nhttps://github.com/bitcoin/bips/pull/157\n\nIf there is market demand for it, a separate sorting key-based proposal\ncould be written which can compete with this BIP and over time successfully\ndeprecate it. I would currently envision that as an HD BIP with a new\npurpose code.\n\n-Kristov\n\n\nOn Mon, Jun 15, 2015 at 12:01 AM, Kristov Atlas <\nkristovatlas.lists at gmail.com> wrote:\n\n> On Sun, Jun 14, 2015 at 7:02 PM, Gregory Maxwell <gmaxwell at gmail.com>\n> wrote:\n>\n>> I'm not a great fan of this proposal for two reasons: The first is\n>> that the strict ordering requirements is incompatible with future\n>> soft-forks that may expose additional ordering constraints. Today we\n>> have _SINGLE, which as noted this interacts with poorly, but there\n>> have been other constraints proposed that this would also interact\n>> with poorly.\n>>\n>\n> I'm not clear on why this is a problem, so long as the canonical ordering\n> BIP is *optional*. Unless there is a specific plan to soft fork a change\n> that would break the BIP and it is fairly imminent, I see this only as a\n> reason not to integrate it into isStandard().\n>\n>\n>> The second is that even absent consensus rules there may be invisible\n>> constraints in systems-- e.g. hardware wallets that sign top down, or\n>> future transaction covenants that have constraints about ordering,  or\n>> proof systems that use (yuck) midstate compression for efficiency. Right\n>> now, with random ordering these applications are fairly\n>> indistinguishable from other random uses (since their imposed order\n>> could come about by chance) but if everyone else was ordered, even if\n>> wasn't enforced.. these would be highly distinguishable. Which would\n>> be unfortunate.\n>\n>\n> Maybe they shouldn't be doing that. :-P\n>\n>\n>> I think perhaps the motivations here are understated. We have not seen\n>> any massive deployments of accidentally broken ordering that I'm aware\n>> of-- and an implementation that got this wrong in a harmful way would\n>> likely make far more fatal mistakes (e.g. non random private keys).\n>>\n>\n> In my reading of various wallet client sources, it is common that wallet\n> clients will use cryptographically weak sources of randomness to sort\n> outputs -- that is, the ones that actually bother to randomly sort. I can\n> hunt down some examples if this would substantially contribute to the\n> discussion.\n>\n> As an alternative to this proposal the ordering can be privately\n>> derandomized in the same way DSA is, to avoid the need for an actual\n>> number source.  If getting the randomness right were really the only\n>> motivation, I'd suggest we propose a simple derandomized randomization\n>> algorithm--- e.g. take the order from (H(input ids||client secret)).\n>>\n>\n> This sounds similar to an idea that Sergio pitched to me privately, which\n> was for wallets to have a private sorting key that they can use to sort\n> inputs and outputs. However, I suspect that adding yet another key which\n> will necessarily require special key rotation rules and maybe special\n> backup procedures will mean that this standard will not be widely adopted\n> any time soon. Ideally, I'd like to see someone write a different BIP with\n> the sorting key idea and let them compete in the wallet client market\n> rather than trying to anticipate what is best for all clients and\n> distilling two good ideas into one artificially.\n>\n> -Kristov\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/b1579282/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Canonical input and output ordering in transactions",
            "categories": [
                "bitcoin-dev",
                "Bitcoin-development",
                "RFC"
            ],
            "authors": [
                "Kristov Atlas"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 6785
        }
    },
    {
        "title": "[Bitcoin-development] BIP for Proof of Payment",
        "thread_messages": [
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T14:35:17",
                "message_text_only": "Hi\n\nFollowing earlier posts on Proof of Payment I'm now proposing the following\nBIP (To read it formatted instead, go to\nhttps://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP).\n\nRegards,\nKalle Rosenbaum\n\n<pre>\n  BIP: <BIP number>\n  Title: Proof of Payment\n  Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n  Status: Draft\n  Type: Standards Track\n  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n</pre>\n\n== Abstract ==\n\nThis BIP describes how a wallet can prove to a server that it has the\nability to sign a certain transaction.\n\n== Motivation ==\n\nThere are several scenarios in which it would be useful to prove that you\nhave paid for something. For example:\n\n* A pre-paid hotel room where your PoP functions as a key to the door.\n* An online video rental service where you pay for a video and watch it on\nany device.\n* An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During\nthis period you can upload new content to the sign whenever you like using\nPoP.\n* Log in to a pay site using a PoP.\n* A parking lot you pay for monthly and the car authenticates itself using\nPoP.\n* A lottery where all participants pay to the same address, and the winner\nis selected among the transactions to that address. You exchange the prize\nfor a PoP for the winning transaction.\n\nWith Proof of Payment, these use cases can be achieved without any personal\ninformation (user name, password, e-mail address, etc) being involved.\n\n== Rationale ==\n\nDesirable properties:\n\n# A PoP should be generated on demand.\n# It should only be usable once to avoid issues due to theft.\n# It should be able to create a PoP for any payment, regardless of script\ntype (P2SH, P2PKH, etc.).\n# It should prove that you have enough credentials to unlock all the inputs\nof the proven transaction.\n# It should be easy to implement by wallets and servers to ease adoption.\n\nCurrent methods of proving a payment:\n\n* In BIP0070, the PaymentRequest together with the transactions fulfilling\nthe request makes some sort of proof. However, it does not meet 1, 2 or 4\nand it obviously only meets 3 if the payment is made through BIP0070. Also,\nthere's no standard way to request/provide the proof. If standardized it\nwould probably meet 5.\n* Signing messages, chosen by the server, with the private keys used to\nsign the transaction. This could meet 1 and 2 but probably not 3. This is\nnot standardized either. 4 Could be met if designed so.\n\nIf the script type is P2SH, any satisfying script should do, just like for\na payment. For M-of-N multisig scripts, that would mean that any set of M\nkeys should be sufficient, not neccesarily the same set of M keys that\nsigned the transaction. This is important because strictly demanding the\nsame set of M keys would undermine the purpose of a multisig address.\n\n== Specification ==\n\n=== Data structure ===\n\nA proof of payment for a transaction T, here called PoP(T), is used to\nprove that one has ownership of the credentials needed to unlock all the\ninputs of T. It has the exact same structure as a bitcoin transaction with\nthe same inputs and outputs as T and in the same order as in T. There is\nalso one OP_RETURN output inserted at index 0, here called the pop output.\nThis output must have the following format:\n\n OP_RETURN <version> <txid> <nonce>\n\n{|\n! Field        !! Size [B] !! Description\n|-\n| &lt;version> || 2        || Version, little endian, currently 0x01 0x00\n|-\n| &lt;txid>    || 32       || The transaction to prove\n|-\n| &lt;nonce>   || 6        || Random data\n|}\n\nThe value of the pop output is set to the same value as the transaction fee\nof T. Also, if the outputs of T contains an OP_RETURN output, that output\nmust not be included in the PoP because there can only be one OP_RETURN\noutput in a transaction. The value of that OP_RETURN output is instead\nadded to the value of the pop output.\n\nAn illustration of the PoP data structure and its original payment is shown\nbelow.\n\n<pre>\n  T\n +----------------------------------------------+\n |inputs       | outputs                        |\n |       Value | Value   Script                 |\n +----------------------------------------------+\n |input0 1     |     0   pay to A               |\n |input1 3     |     2   OP_RETURN <some data>  |\n |input2 4     |     1   pay to B               |\n |             |     4   pay to C               |\n +----------------------------------------------+\n\n  PoP(T)\n +----------------------------------------------------------+\n |inputs       | outputs                                    |\n |       Value | Value   Script                             |\n +----------------------------------------------------------+\n |input0 1     |     3   OP_RETURN <version> <txid> <nonce> |\n |input1 3     |     0   pay to A                           |\n |input2 4     |     1   pay to B                           |\n |             |     4   pay to C                           |\n +----------------------------------------------------------+\n</pre>\n\nThe PoP is signed using the same signing process that is used for bitcoin\ntransactions.\n\nThe purpose of the nonce is to make it harder to use a stolen PoP; Once the\nPoP has reached the server, that PoP is useless since the server will\ngenerate a new nonce for every PoP request.\n\nSince a PoP is indistinguishable from a bitcoin transaction, there is a\nrisk that it, accidently or maliciously, enters the bitcoin p2p network. If\nT is still unconfirmed, or if a reorg takes place, chances are that PoP(T)\nends up in a block, invalidating T. Therefore it is important that the\noutputs of the PoP are the same as in T. The zero transaction fee in PoP(T)\nis to minimize the incentives for miners to select PoP(T) for inclusion.\n\n=== Process ===\n\n# A proof of payment request is sent from the server to the wallet. The PoP\nrequest contains:\n## a random nonce\n## a destination where to send the PoP, for example a https URL\n## data hinting the wallet which transaction to create a proof for. For\nexample:\n##* txid, if known by the server\n##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\npayment)\n##* amount, label, message or other information from a BIP0021 URL\n# The wallet identifies a transaction T, if possible. Otherwise it asks the\nuser to select among the ones that match the hints in 1.iii.\n# The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\nsign it.\n# The user confirms\n# The UPoP(T) is signed by the wallet, creating PoP(T).\n# The PoP is sent to the destination in 1.ii.\n# The server receiving the PoP validates it and responds with \u201cvalid\u201d or\n\u201cinvalid\u201d.\n# The wallet displays the response in some way to the user.\n\n'''Remarks:'''\n\n* The method of transferring the PoP request at step 1 is not specified\nhere. Instead that is specified in separate specifications. See [btcpop\nscheme BIP](btcpop scheme BIP).\n* The nonce must be randomly generated by the server for every new PoP\nrequest.\n\n=== Validating a PoP ===\n\nThe server needs to validate the PoP and reply with \"valid\" or \"invalid\".\nThat process is outlined below. If any step fails, the validation is\naborted and \"invalid\" is returned:\n\n# Check the format of the PoP. It must pass normal transaction checks,\nexcept that the inputs may already be spent.\n# Check the PoP output at index 0. It must conform to the OP_RETURN output\nformat outlined above.\n# Check that the rest of the outputs exactly corresponds to the outputs of\nT and that they appear in the same order as in T. An exception to this is\nthat any OP_RETURN outputs of T must not be included in the PoP. All output\nvalue from the OP_RETURN must instead be included in the PoP output.\n# Check that the nonce is the same as the one you requested.\n# Check that the inputs of the PoP are exactly the same as in transaction\nT, and in the same order.\n# Check the scripts of all the inputs, as would be done on a normal\ntransaction.\n# Check that the txid in the PoP output is the transaction you actually\nwant proof for. If you don\u2019t know exactly what transaction you want proof\nfor, check that the transaction actually pays for the product/service you\ndeliver.\n# Return \"valid\".\n\n== Security considerations ==\n\n* Someone can intercept the PoP-request and change the PoP destination so\nthat the user sends the PoP to the bad actor.\n* Someone can intercept the PoP-request and change for example the txid to\ntrick the user to sign a PoP for another transaction than the intended.\nThis can of course be avoided if the user is actually looking at the UPoP\nbefore signing it. The bad actor could also set hints for a transaction,\nexisting or not, that the user didn\u2019t make, resulting in a broken service.\n* Someone can steal a PoP and try to use the service hoping to get a\nmatching nonce. Probability per try: 1/(2^48). The server should have a\nmechanism for detecting a brute force attack of this kind, or at least slow\ndown the process by delaying the PoP request by some 100 ms or so.\n* Even if a wallet has no funds it might still be valuable as a generator\nfor PoPs. This makes it important to keep the security of the wallet after\nit has been emptied.\n* Transaction malleability may cause the server to have another transaction\nid than the wallet for the payment. In that case the wallet will not be\nable to prove the transaction for the server. Wallets should not rely on\nthe transaction id of the outgoing transaction. Instead it should listen\nfor the transaction on the network and put that in its list of transactions.\n\nThe first two issues are the same attack vector as for traditional, ie\nBIP0021, bitcoin payments. They could be mitigated by using secure\nconnections.\n\n== Reference implementation ==\n\n[https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n\n[https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n\n== References ==\n\n[https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:\nURI Scheme\n\n[https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:\nPayment Protocol\n\n[[btcpop scheme BIP]]\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/3aae1db3/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-06T14:47:05",
                "message_text_only": "What do you gain by making PoPs actually valid transactions? You could for\nexample change the signature hashing algorithm (prepend a constant string,\nor add a second hashing step) for signing, rendering the signatures in a\nPoP unusable for actual transaction, while still committing to the same\nactual transaction. That would also remove the need for the OP_RETURN to\ncatch fees.\n\nAlso, I would call it \"proof of transaction intent\", as it's a commitment\nto a transaction and proof of its validity, but not a proof that an actual\ntransaction took place, nor a means to prevent it from being double spent.\n\n\n\nOn Sat, Jun 6, 2015 at 4:35 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:\n\n> Hi\n>\n> Following earlier posts on Proof of Payment I'm now proposing the\n> following BIP (To read it formatted instead, go to\n> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP).\n>\n> Regards,\n> Kalle Rosenbaum\n>\n> <pre>\n>   BIP: <BIP number>\n>   Title: Proof of Payment\n>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n>   Status: Draft\n>   Type: Standards Track\n>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n> </pre>\n>\n> == Abstract ==\n>\n> This BIP describes how a wallet can prove to a server that it has the\n> ability to sign a certain transaction.\n>\n> == Motivation ==\n>\n> There are several scenarios in which it would be useful to prove that you\n> have paid for something. For example:\n>\n> * A pre-paid hotel room where your PoP functions as a key to the door.\n> * An online video rental service where you pay for a video and watch it on\n> any device.\n> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During\n> this period you can upload new content to the sign whenever you like using\n> PoP.\n> * Log in to a pay site using a PoP.\n> * A parking lot you pay for monthly and the car authenticates itself using\n> PoP.\n> * A lottery where all participants pay to the same address, and the winner\n> is selected among the transactions to that address. You exchange the prize\n> for a PoP for the winning transaction.\n>\n> With Proof of Payment, these use cases can be achieved without any\n> personal information (user name, password, e-mail address, etc) being\n> involved.\n>\n> == Rationale ==\n>\n> Desirable properties:\n>\n> # A PoP should be generated on demand.\n> # It should only be usable once to avoid issues due to theft.\n> # It should be able to create a PoP for any payment, regardless of script\n> type (P2SH, P2PKH, etc.).\n> # It should prove that you have enough credentials to unlock all the\n> inputs of the proven transaction.\n> # It should be easy to implement by wallets and servers to ease adoption.\n>\n> Current methods of proving a payment:\n>\n> * In BIP0070, the PaymentRequest together with the transactions fulfilling\n> the request makes some sort of proof. However, it does not meet 1, 2 or 4\n> and it obviously only meets 3 if the payment is made through BIP0070. Also,\n> there's no standard way to request/provide the proof. If standardized it\n> would probably meet 5.\n> * Signing messages, chosen by the server, with the private keys used to\n> sign the transaction. This could meet 1 and 2 but probably not 3. This is\n> not standardized either. 4 Could be met if designed so.\n>\n> If the script type is P2SH, any satisfying script should do, just like for\n> a payment. For M-of-N multisig scripts, that would mean that any set of M\n> keys should be sufficient, not neccesarily the same set of M keys that\n> signed the transaction. This is important because strictly demanding the\n> same set of M keys would undermine the purpose of a multisig address.\n>\n> == Specification ==\n>\n> === Data structure ===\n>\n> A proof of payment for a transaction T, here called PoP(T), is used to\n> prove that one has ownership of the credentials needed to unlock all the\n> inputs of T. It has the exact same structure as a bitcoin transaction with\n> the same inputs and outputs as T and in the same order as in T. There is\n> also one OP_RETURN output inserted at index 0, here called the pop output.\n> This output must have the following format:\n>\n>  OP_RETURN <version> <txid> <nonce>\n>\n> {|\n> ! Field        !! Size [B] !! Description\n> |-\n> | &lt;version> || 2        || Version, little endian, currently 0x01 0x00\n> |-\n> | &lt;txid>    || 32       || The transaction to prove\n> |-\n> | &lt;nonce>   || 6        || Random data\n> |}\n>\n> The value of the pop output is set to the same value as the transaction\n> fee of T. Also, if the outputs of T contains an OP_RETURN output, that\n> output must not be included in the PoP because there can only be one\n> OP_RETURN output in a transaction. The value of that OP_RETURN output is\n> instead added to the value of the pop output.\n>\n> An illustration of the PoP data structure and its original payment is\n> shown below.\n>\n> <pre>\n>   T\n>  +----------------------------------------------+\n>  |inputs       | outputs                        |\n>  |       Value | Value   Script                 |\n>  +----------------------------------------------+\n>  |input0 1     |     0   pay to A               |\n>  |input1 3     |     2   OP_RETURN <some data>  |\n>  |input2 4     |     1   pay to B               |\n>  |             |     4   pay to C               |\n>  +----------------------------------------------+\n>\n>   PoP(T)\n>  +----------------------------------------------------------+\n>  |inputs       | outputs                                    |\n>  |       Value | Value   Script                             |\n>  +----------------------------------------------------------+\n>  |input0 1     |     3   OP_RETURN <version> <txid> <nonce> |\n>  |input1 3     |     0   pay to A                           |\n>  |input2 4     |     1   pay to B                           |\n>  |             |     4   pay to C                           |\n>  +----------------------------------------------------------+\n> </pre>\n>\n> The PoP is signed using the same signing process that is used for bitcoin\n> transactions.\n>\n> The purpose of the nonce is to make it harder to use a stolen PoP; Once\n> the PoP has reached the server, that PoP is useless since the server will\n> generate a new nonce for every PoP request.\n>\n> Since a PoP is indistinguishable from a bitcoin transaction, there is a\n> risk that it, accidently or maliciously, enters the bitcoin p2p network. If\n> T is still unconfirmed, or if a reorg takes place, chances are that PoP(T)\n> ends up in a block, invalidating T. Therefore it is important that the\n> outputs of the PoP are the same as in T. The zero transaction fee in PoP(T)\n> is to minimize the incentives for miners to select PoP(T) for inclusion.\n>\n> === Process ===\n>\n> # A proof of payment request is sent from the server to the wallet. The\n> PoP request contains:\n> ## a random nonce\n> ## a destination where to send the PoP, for example a https URL\n> ## data hinting the wallet which transaction to create a proof for. For\n> example:\n> ##* txid, if known by the server\n> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\n> payment)\n> ##* amount, label, message or other information from a BIP0021 URL\n> # The wallet identifies a transaction T, if possible. Otherwise it asks\n> the user to select among the ones that match the hints in 1.iii.\n> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\n> sign it.\n> # The user confirms\n> # The UPoP(T) is signed by the wallet, creating PoP(T).\n> # The PoP is sent to the destination in 1.ii.\n> # The server receiving the PoP validates it and responds with \u201cvalid\u201d or\n> \u201cinvalid\u201d.\n> # The wallet displays the response in some way to the user.\n>\n> '''Remarks:'''\n>\n> * The method of transferring the PoP request at step 1 is not specified\n> here. Instead that is specified in separate specifications. See [btcpop\n> scheme BIP](btcpop scheme BIP).\n> * The nonce must be randomly generated by the server for every new PoP\n> request.\n>\n> === Validating a PoP ===\n>\n> The server needs to validate the PoP and reply with \"valid\" or \"invalid\".\n> That process is outlined below. If any step fails, the validation is\n> aborted and \"invalid\" is returned:\n>\n> # Check the format of the PoP. It must pass normal transaction checks,\n> except that the inputs may already be spent.\n> # Check the PoP output at index 0. It must conform to the OP_RETURN output\n> format outlined above.\n> # Check that the rest of the outputs exactly corresponds to the outputs of\n> T and that they appear in the same order as in T. An exception to this is\n> that any OP_RETURN outputs of T must not be included in the PoP. All output\n> value from the OP_RETURN must instead be included in the PoP output.\n> # Check that the nonce is the same as the one you requested.\n> # Check that the inputs of the PoP are exactly the same as in transaction\n> T, and in the same order.\n> # Check the scripts of all the inputs, as would be done on a normal\n> transaction.\n> # Check that the txid in the PoP output is the transaction you actually\n> want proof for. If you don\u2019t know exactly what transaction you want proof\n> for, check that the transaction actually pays for the product/service you\n> deliver.\n> # Return \"valid\".\n>\n> == Security considerations ==\n>\n> * Someone can intercept the PoP-request and change the PoP destination so\n> that the user sends the PoP to the bad actor.\n> * Someone can intercept the PoP-request and change for example the txid to\n> trick the user to sign a PoP for another transaction than the intended.\n> This can of course be avoided if the user is actually looking at the UPoP\n> before signing it. The bad actor could also set hints for a transaction,\n> existing or not, that the user didn\u2019t make, resulting in a broken service.\n> * Someone can steal a PoP and try to use the service hoping to get a\n> matching nonce. Probability per try: 1/(2^48). The server should have a\n> mechanism for detecting a brute force attack of this kind, or at least slow\n> down the process by delaying the PoP request by some 100 ms or so.\n> * Even if a wallet has no funds it might still be valuable as a generator\n> for PoPs. This makes it important to keep the security of the wallet after\n> it has been emptied.\n> * Transaction malleability may cause the server to have another\n> transaction id than the wallet for the payment. In that case the wallet\n> will not be able to prove the transaction for the server. Wallets should\n> not rely on the transaction id of the outgoing transaction. Instead it\n> should listen for the transaction on the network and put that in its list\n> of transactions.\n>\n> The first two issues are the same attack vector as for traditional, ie\n> BIP0021, bitcoin payments. They could be mitigated by using secure\n> connections.\n>\n> == Reference implementation ==\n>\n> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n>\n> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n>\n> == References ==\n>\n> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:\n> URI Scheme\n>\n> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:\n> Payment Protocol\n>\n> [[btcpop scheme BIP]]\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/f67abf67/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T15:05:36",
                "message_text_only": "> What do you gain by making PoPs actually valid transactions? You could for\n> example change the signature hashing algorithm (prepend a constant string,\n> or add a second hashing step) for signing, rendering the signatures in a PoP\n> unusable for actual transaction, while still committing to the same actual\n> transaction. That would also remove the need for the OP_RETURN to catch\n> fees.\n\nThe idea is to simplify implementation. Existing software can be used\nas is to sign and validate PoPs. But I do agree that it would be a\ncleaner specification if we would make the PoP invalid as a\ntransaction. I'm open to changes here. I do like the idea to prepend a\nconstant string. But that would require changes in transaction signing\nand validation code, wouldn't it?\n\n>\n> Also, I would call it \"proof of transaction intent\", as it's a commitment to\n> a transaction and proof of its validity, but not a proof that an actual\n> transaction took place, nor a means to prevent it from being double spent.\n>\n\nNaming is hard. I think a simpler name that explains what its main\npurpose is (prove that you paid for something) is better than a name\nthat exactly tries to explain what it is. \"Proof of transaction\nintent\" does not help me understand what this is about. But I would\nlike to see more name suggestions. The name does not prevent people\nfrom using it for other purposes, ie internet over telephone network.\n\nThank you\n/Kalle\n\n>\n>\n> On Sat, Jun 6, 2015 at 4:35 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:\n>>\n>> Hi\n>>\n>> Following earlier posts on Proof of Payment I'm now proposing the\n>> following BIP (To read it formatted instead, go to\n>> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP).\n>>\n>> Regards,\n>> Kalle Rosenbaum\n>>\n>> <pre>\n>>   BIP: <BIP number>\n>>   Title: Proof of Payment\n>>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n>>   Status: Draft\n>>   Type: Standards Track\n>>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n>> </pre>\n>>\n>> == Abstract ==\n>>\n>> This BIP describes how a wallet can prove to a server that it has the\n>> ability to sign a certain transaction.\n>>\n>> == Motivation ==\n>>\n>> There are several scenarios in which it would be useful to prove that you\n>> have paid for something. For example:\n>>\n>> * A pre-paid hotel room where your PoP functions as a key to the door.\n>> * An online video rental service where you pay for a video and watch it on\n>> any device.\n>> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During\n>> this period you can upload new content to the sign whenever you like using\n>> PoP.\n>> * Log in to a pay site using a PoP.\n>> * A parking lot you pay for monthly and the car authenticates itself using\n>> PoP.\n>> * A lottery where all participants pay to the same address, and the winner\n>> is selected among the transactions to that address. You exchange the prize\n>> for a PoP for the winning transaction.\n>>\n>> With Proof of Payment, these use cases can be achieved without any\n>> personal information (user name, password, e-mail address, etc) being\n>> involved.\n>>\n>> == Rationale ==\n>>\n>> Desirable properties:\n>>\n>> # A PoP should be generated on demand.\n>> # It should only be usable once to avoid issues due to theft.\n>> # It should be able to create a PoP for any payment, regardless of script\n>> type (P2SH, P2PKH, etc.).\n>> # It should prove that you have enough credentials to unlock all the\n>> inputs of the proven transaction.\n>> # It should be easy to implement by wallets and servers to ease adoption.\n>>\n>> Current methods of proving a payment:\n>>\n>> * In BIP0070, the PaymentRequest together with the transactions fulfilling\n>> the request makes some sort of proof. However, it does not meet 1, 2 or 4\n>> and it obviously only meets 3 if the payment is made through BIP0070. Also,\n>> there's no standard way to request/provide the proof. If standardized it\n>> would probably meet 5.\n>> * Signing messages, chosen by the server, with the private keys used to\n>> sign the transaction. This could meet 1 and 2 but probably not 3. This is\n>> not standardized either. 4 Could be met if designed so.\n>>\n>> If the script type is P2SH, any satisfying script should do, just like for\n>> a payment. For M-of-N multisig scripts, that would mean that any set of M\n>> keys should be sufficient, not neccesarily the same set of M keys that\n>> signed the transaction. This is important because strictly demanding the\n>> same set of M keys would undermine the purpose of a multisig address.\n>>\n>> == Specification ==\n>>\n>> === Data structure ===\n>>\n>> A proof of payment for a transaction T, here called PoP(T), is used to\n>> prove that one has ownership of the credentials needed to unlock all the\n>> inputs of T. It has the exact same structure as a bitcoin transaction with\n>> the same inputs and outputs as T and in the same order as in T. There is\n>> also one OP_RETURN output inserted at index 0, here called the pop output.\n>> This output must have the following format:\n>>\n>>  OP_RETURN <version> <txid> <nonce>\n>>\n>> {|\n>> ! Field        !! Size [B] !! Description\n>> |-\n>> | &lt;version> || 2        || Version, little endian, currently 0x01 0x00\n>> |-\n>> | &lt;txid>    || 32       || The transaction to prove\n>> |-\n>> | &lt;nonce>   || 6        || Random data\n>> |}\n>>\n>> The value of the pop output is set to the same value as the transaction\n>> fee of T. Also, if the outputs of T contains an OP_RETURN output, that\n>> output must not be included in the PoP because there can only be one\n>> OP_RETURN output in a transaction. The value of that OP_RETURN output is\n>> instead added to the value of the pop output.\n>>\n>> An illustration of the PoP data structure and its original payment is\n>> shown below.\n>>\n>> <pre>\n>>   T\n>>  +----------------------------------------------+\n>>  |inputs       | outputs                        |\n>>  |       Value | Value   Script                 |\n>>  +----------------------------------------------+\n>>  |input0 1     |     0   pay to A               |\n>>  |input1 3     |     2   OP_RETURN <some data>  |\n>>  |input2 4     |     1   pay to B               |\n>>  |             |     4   pay to C               |\n>>  +----------------------------------------------+\n>>\n>>   PoP(T)\n>>  +----------------------------------------------------------+\n>>  |inputs       | outputs                                    |\n>>  |       Value | Value   Script                             |\n>>  +----------------------------------------------------------+\n>>  |input0 1     |     3   OP_RETURN <version> <txid> <nonce> |\n>>  |input1 3     |     0   pay to A                           |\n>>  |input2 4     |     1   pay to B                           |\n>>  |             |     4   pay to C                           |\n>>  +----------------------------------------------------------+\n>> </pre>\n>>\n>> The PoP is signed using the same signing process that is used for bitcoin\n>> transactions.\n>>\n>> The purpose of the nonce is to make it harder to use a stolen PoP; Once\n>> the PoP has reached the server, that PoP is useless since the server will\n>> generate a new nonce for every PoP request.\n>>\n>> Since a PoP is indistinguishable from a bitcoin transaction, there is a\n>> risk that it, accidently or maliciously, enters the bitcoin p2p network. If\n>> T is still unconfirmed, or if a reorg takes place, chances are that PoP(T)\n>> ends up in a block, invalidating T. Therefore it is important that the\n>> outputs of the PoP are the same as in T. The zero transaction fee in PoP(T)\n>> is to minimize the incentives for miners to select PoP(T) for inclusion.\n>>\n>> === Process ===\n>>\n>> # A proof of payment request is sent from the server to the wallet. The\n>> PoP request contains:\n>> ## a random nonce\n>> ## a destination where to send the PoP, for example a https URL\n>> ## data hinting the wallet which transaction to create a proof for. For\n>> example:\n>> ##* txid, if known by the server\n>> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\n>> payment)\n>> ##* amount, label, message or other information from a BIP0021 URL\n>> # The wallet identifies a transaction T, if possible. Otherwise it asks\n>> the user to select among the ones that match the hints in 1.iii.\n>> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\n>> sign it.\n>> # The user confirms\n>> # The UPoP(T) is signed by the wallet, creating PoP(T).\n>> # The PoP is sent to the destination in 1.ii.\n>> # The server receiving the PoP validates it and responds with \u201cvalid\u201d or\n>> \u201cinvalid\u201d.\n>> # The wallet displays the response in some way to the user.\n>>\n>> '''Remarks:'''\n>>\n>> * The method of transferring the PoP request at step 1 is not specified\n>> here. Instead that is specified in separate specifications. See [btcpop\n>> scheme BIP](btcpop scheme BIP).\n>> * The nonce must be randomly generated by the server for every new PoP\n>> request.\n>>\n>> === Validating a PoP ===\n>>\n>> The server needs to validate the PoP and reply with \"valid\" or \"invalid\".\n>> That process is outlined below. If any step fails, the validation is aborted\n>> and \"invalid\" is returned:\n>>\n>> # Check the format of the PoP. It must pass normal transaction checks,\n>> except that the inputs may already be spent.\n>> # Check the PoP output at index 0. It must conform to the OP_RETURN output\n>> format outlined above.\n>> # Check that the rest of the outputs exactly corresponds to the outputs of\n>> T and that they appear in the same order as in T. An exception to this is\n>> that any OP_RETURN outputs of T must not be included in the PoP. All output\n>> value from the OP_RETURN must instead be included in the PoP output.\n>> # Check that the nonce is the same as the one you requested.\n>> # Check that the inputs of the PoP are exactly the same as in transaction\n>> T, and in the same order.\n>> # Check the scripts of all the inputs, as would be done on a normal\n>> transaction.\n>> # Check that the txid in the PoP output is the transaction you actually\n>> want proof for. If you don\u2019t know exactly what transaction you want proof\n>> for, check that the transaction actually pays for the product/service you\n>> deliver.\n>> # Return \"valid\".\n>>\n>> == Security considerations ==\n>>\n>> * Someone can intercept the PoP-request and change the PoP destination so\n>> that the user sends the PoP to the bad actor.\n>> * Someone can intercept the PoP-request and change for example the txid to\n>> trick the user to sign a PoP for another transaction than the intended. This\n>> can of course be avoided if the user is actually looking at the UPoP before\n>> signing it. The bad actor could also set hints for a transaction, existing\n>> or not, that the user didn\u2019t make, resulting in a broken service.\n>> * Someone can steal a PoP and try to use the service hoping to get a\n>> matching nonce. Probability per try: 1/(2^48). The server should have a\n>> mechanism for detecting a brute force attack of this kind, or at least slow\n>> down the process by delaying the PoP request by some 100 ms or so.\n>> * Even if a wallet has no funds it might still be valuable as a generator\n>> for PoPs. This makes it important to keep the security of the wallet after\n>> it has been emptied.\n>> * Transaction malleability may cause the server to have another\n>> transaction id than the wallet for the payment. In that case the wallet will\n>> not be able to prove the transaction for the server. Wallets should not rely\n>> on the transaction id of the outgoing transaction. Instead it should listen\n>> for the transaction on the network and put that in its list of transactions.\n>>\n>> The first two issues are the same attack vector as for traditional, ie\n>> BIP0021, bitcoin payments. They could be mitigated by using secure\n>> connections.\n>>\n>> == Reference implementation ==\n>>\n>> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n>>\n>> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n>>\n>> == References ==\n>>\n>> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:\n>> URI Scheme\n>>\n>> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:\n>> Payment Protocol\n>>\n>> [[btcpop scheme BIP]]\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-06T15:13:46",
                "message_text_only": "On Sat, Jun 6, 2015 at 5:05 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:\n\n> > What do you gain by making PoPs actually valid transactions? You could\n> for\n> > example change the signature hashing algorithm (prepend a constant\n> string,\n> > or add a second hashing step) for signing, rendering the signatures in a\n> PoP\n> > unusable for actual transaction, while still committing to the same\n> actual\n> > transaction. That would also remove the need for the OP_RETURN to catch\n> > fees.\n>\n> The idea is to simplify implementation. Existing software can be used\n> as is to sign and validate PoPs. But I do agree that it would be a\n> cleaner specification if we would make the PoP invalid as a\n> transaction. I'm open to changes here. I do like the idea to prepend a\n> constant string. But that would require changes in transaction signing\n> and validation code, wouldn't it?\n>\n\nYes, of course. An alternative is adding a 21M BTC output at the end, or\nbitflipping the txin prevout hashes, or another reversible transformation\non the transaction data that is guaranteed to invalidate it.\n\nI think that the risk of asking people to sign something that is not an\nactual transaction, but could be used as one, is very scary.\n\n\n> > Also, I would call it \"proof of transaction intent\", as it's a\n> commitment to\n> > a transaction and proof of its validity, but not a proof that an actual\n> > transaction took place, nor a means to prevent it from being double\n> spent.\n>\n>\n> Naming is hard. I think a simpler name that explains what its main\n> purpose is (prove that you paid for something) is better than a name\n> that exactly tries to explain what it is.\n\n\n\"Proof of Payment\" indeed does make me think it's something that proves you\npaid. But as described, that is not what a PoP does. It proves the ability\nto create a particular transaction, and committing to it. There is no\nactual payment involved (plus, payment makes me think you're talking about\nBIP70 payments, not simple Bitcoin transactions).\n\n\n> \"Proof of transaction\n> intent\" does not help me understand what this is about. But I would\n> like to see more name suggestions. The name does not prevent people\n> from using it for other purposes, ie internet over telephone network.\n>\n\nI don't understand why something like \"Proof of Transaction Intent\" would\nbe incompatible with internet over telephone network either...\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/f9b9daa2/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T16:20:41",
                "message_text_only": ">> The idea is to simplify implementation. Existing software can be used\n>> as is to sign and validate PoPs. But I do agree that it would be a\n>> cleaner specification if we would make the PoP invalid as a\n>> transaction. I'm open to changes here. I do like the idea to prepend a\n>> constant string. But that would require changes in transaction signing\n>> and validation code, wouldn't it?\n>\n>\n> Yes, of course. An alternative is adding a 21M BTC output at the end, or\n> bitflipping the txin prevout hashes, or another reversible transformation on\n> the transaction data that is guaranteed to invalidate it.\n\nIf we do decide to make Pops invalid as transactions, there are a lot\nof ways to do that. I guess the main question is if we should make\nPops invalid as transactions or not. So far I prefer to keep them\nvalid for the above reason.\n\n>\n> I think that the risk of asking people to sign something that is not an\n> actual transaction, but could be used as one, is very scary.\n>\n\nI would feel comfortable doing it. It's just a matter of trusting your\nwallet, which you already do with your ordinary transactions.\n\n>>\n>> > Also, I would call it \"proof of transaction intent\", as it's a\n>> > commitment to\n>> > a transaction and proof of its validity, but not a proof that an actual\n>> > transaction took place, nor a means to prevent it from being double\n>> > spent.\n>>\n>>\n>> Naming is hard. I think a simpler name that explains what its main\n>> purpose is (prove that you paid for something) is better than a name\n>> that exactly tries to explain what it is.\n>\n>\n> \"Proof of Payment\" indeed does make me think it's something that proves you\n> paid. But as described, that is not what a PoP does. It proves the ability\n> to create a particular transaction, and committing to it. There is no actual\n> payment involved (plus, payment makes me think you're talking about BIP70\n> payments, not simple Bitcoin transactions).\n>\n>>\n>> \"Proof of transaction\n>> intent\" does not help me understand what this is about. But I would\n>> like to see more name suggestions. The name does not prevent people\n>> from using it for other purposes, ie internet over telephone network.\n>\n>\n> I don't understand why something like \"Proof of Transaction Intent\" would be\n> incompatible with internet over telephone network either...\n>\n\nNo, I meant that it's ok to call it Proof of Payment even though\npeople may use it for other stuff.\n\n> --\n> Pieter\n>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-06T16:10:55",
                "message_text_only": "On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n\n> I'm open to changes here.\n\nI suggest:\n\n- Don't include any real outputs.   They are redundant because the txid is\nalready referenced.\n\n- Start the proof script, which should be invalid, with a magic constant\nand include space for future expansion.  This makes PoP's easy to identify\nand extend.\n\n- \"Proof of Potential\"\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/d5ea22a1/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T17:00:39",
                "message_text_only": "2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>\n>> I'm open to changes here.\n>\n> I suggest:\n>\n> - Don't include any real outputs.   They are redundant because the txid is\n> already referenced.\n\nwith the nLocktime solution, the copied outputs are not needed.\n\n>\n> - Start the proof script, which should be invalid, with a magic constant and\n> include space for future expansion.  This makes PoP's easy to identify and\n> extend.\n\nI did remore the constant (a \"PoP\" literal ascii encoded string)\nbecause it didn't add much. The recipient will expect a pop, so it\nwill simply treat it as one. I did add a 2 byte version field to make\nit extendable.\n\n>\n> - \"Proof of Potential\"\n\nNoted :-)\n\nThank you\n/Kalle"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T21:25:02",
                "message_text_only": "Thank you all for the feedback.\n\nI will change the data structure as follows:\n\n* There will be only one output, the \"pop output\", and no outputs from\nT will be copied to the PoP.\n* The pop output will have value 0.\n* The sequence number of all inputs of the PoP will be set to 0. I\nchose to set it to 0 for all inputs for simplicity.\n* The lock_time of the PoP is always set to 499999999.\n\nAny comments on this?\n\n/Kalle\n\n2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>\n>>> I'm open to changes here.\n>>\n>> I suggest:\n>>\n>> - Don't include any real outputs.   They are redundant because the txid is\n>> already referenced.\n>\n> with the nLocktime solution, the copied outputs are not needed.\n>\n>>\n>> - Start the proof script, which should be invalid, with a magic constant and\n>> include space for future expansion.  This makes PoP's easy to identify and\n>> extend.\n>\n> I did remore the constant (a \"PoP\" literal ascii encoded string)\n> because it didn't add much. The recipient will expect a pop, so it\n> will simply treat it as one. I did add a 2 byte version field to make\n> it extendable.\n>\n>>\n>> - \"Proof of Potential\"\n>\n> Noted :-)\n>\n> Thank you\n> /Kalle"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-06T22:01:08",
                "message_text_only": "On Saturday, June 06, 2015 9:25:02 PM Kalle Rosenbaum wrote:\n> * The pop output will have value 0.\n\nWhy not have it be -1 to make it completely invalid as a transaction?\n\nLuke"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-15T09:21:06",
                "message_text_only": "Hi all!\n\nI have made the discussed changes and updated my implementation (\nhttps://github.com/kallerosenbaum/poppoc) accordingly. These are the\nchanges:\n\n* There is now only one output, the \"pop output\", of value 0.\n* The sequence number of all inputs of the PoP must be set to 0. I\nchose to set it to 0 for all inputs for simplicity.\n* The lock_time of the PoP must be set to 499999999 (max block height lock\ntime).\n\nThe comments so far has been mainly positive or neutral. Are there any\nmajor objections against any of the two proposals? If not, I will ask\nGregory Maxwell to assign them BIP numbers.\n\nThe two BIP proposals can be found at\nhttps://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\nhttps://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The source\nfor the Proof of Payment BIP proposal is also in-lined below.\n\nA number of alternative names have been proposed:\n\n* Proof of Potential\n* Proof of Control\n* Proof of Signature\n* Signatory Proof\n* Popo: Proof of payment origin\n* Pots: Proof of transaction signer\n* proof of transaction intent\n* Declaration of intent\n* Asset-access-and-action-affirmation, AAaAA, or A5\n* VeriBit\n* CertiBTC\n* VBit\n* PayID\n\nGiven this list, I still think \"Proof of Payment\" is the most descriptive\nto non-technical people.\n\nRegards,\nKalle\n\n\n#################################################\n<pre>\n  BIP: <BIP number>\n  Title: Proof of Payment\n  Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n  Status: Draft\n  Type: Standards Track\n  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n</pre>\n\n== Abstract ==\n\nThis BIP describes how a wallet can prove to a server that it has the\nability to sign a certain transaction.\n\n== Motivation ==\n\nThere are several scenarios in which it would be useful to prove that you\nhave paid for something. For example:\n\n* A pre-paid hotel room where your PoP functions as a key to the door.\n* An online video rental service where you pay for a video and watch it on\nany device.\n* An ad-sign where you pay in advance for e.g. 2 weeks exclusivity. During\nthis period you can upload new content to the sign whenever you like using\nPoP.\n* Log in to a pay site using a PoP.\n* A parking lot you pay for monthly and the car authenticates itself using\nPoP.\n* A lottery where all participants pay to the same address, and the winner\nis selected among the transactions to that address. You exchange the prize\nfor a PoP for the winning transaction.\n\nWith Proof of Payment, these use cases can be achieved without any personal\ninformation (user name, password, e-mail address, etc) being involved.\n\n== Rationale ==\n\nDesirable properties:\n\n# A PoP should be generated on demand.\n# It should only be usable once to avoid issues due to theft.\n# It should be able to create a PoP for any payment, regardless of script\ntype (P2SH, P2PKH, etc.).\n# It should prove that you have enough credentials to unlock all the inputs\nof the proven transaction.\n# It should be easy to implement by wallets and servers to ease adoption.\n\nCurrent methods of proving a payment:\n\n* In BIP0070, the PaymentRequest together with the transactions fulfilling\nthe request makes some sort of proof. However, it does not meet 1, 2 or 4\nand it obviously only meets 3 if the payment is made through BIP0070. Also,\nthere's no standard way to request/provide the proof. If standardized it\nwould probably meet 5.\n* Signing messages, chosen by the server, with the private keys used to\nsign the transaction. This could meet 1 and 2 but probably not 3. This is\nnot standardized either. 4 Could be met if designed so.\n\nIf an input script type is P2SH, any satisfying script should do, just as\nif it was a payment. For M-of-N multisig scripts, that would mean that any\nset of M keys should be sufficient, not neccesarily the same set of M keys\nthat signed the transaction. This is important because strictly demanding\nthe same set of M keys would defeat the purpose of a multisig address.\n\n== Specification ==\n\n=== Data structure ===\n\nA proof of payment for a transaction T, here called PoP(T), is used to\nprove that one has ownership of the credentials needed to unlock all the\ninputs of T. It has the exact same structure as a bitcoin transaction with\nthe same inputs as T and in the same order as in T, but with each sequence\nnumber set to 0. There is exactly one output, here called the pop output,\nwith value 0. The pop output must have the following format:\n\n OP_RETURN <version> <txid> <nonce>\n\n{|\n! Field        !! Size [B] !! Description\n|-\n| &lt;version> || 2        || Version, little endian, currently 0x01 0x00\n|-\n| &lt;txid>    || 32       || The transaction to prove\n|-\n| &lt;nonce>   || 6        || Random data\n|}\n\nThe lock_time of the PoP must be set to 499999999 to prevent the PoP from\nbeing included in a block, should it appear on the bitcoin p2p network.\nThis is also the reason for setting the sequence numbers to 0, since\nsequence number of ffffffff would make lock_time ineffective. This\nspecification demands that all input sequence numbers are 0, not just one\nof them, which would be sufficient to make lock_time effective. This is for\nsimplicity reasons.\n\nAn illustration of the PoP data structure and its original payment is shown\nbelow.\n\n<pre>\n  T\n +------------------------------------------------+\n |inputs                | outputs                 |\n |       Value,Sequence | Value,Script            |\n +------------------------------------------------+\n |input0 1,ffffffff     | 0,pay to A              |\n |input1 3,ffffffff     | 2,OP_RETURN <some data> |\n |input2 4,ffffffff     | 1,pay to B              |\n |                      | 4,pay to C              |\n +------------------------------------------------+\n\n  PoP(T)\n +-------------------------------------------------------------+\n | inputs               | outputs                              |\n |       Value,Sequence | Value,Script                         |\n +-------------------------------------------------------------+\n |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |\n |input1 3,00000000     |                                      |\n |input2 4,00000000     |                                      |\n +-------------------------------------------------------------+\n | lock_time=499999999                                         |\n +-------------------------------------------------------------+\n</pre>\n\nThe PoP is signed using the same signing process that is used for bitcoin\ntransactions.\n\nThe purpose of the nonce is to make it harder to use a stolen PoP; Once the\nPoP has reached the server, that PoP is useless since the server will\ngenerate a new nonce for every PoP request.\n\n=== Process ===\n\n# A proof of payment request is sent from the server to the wallet. The PoP\nrequest contains:\n## a random nonce\n## a destination where to send the PoP, for example a https URL\n## data hinting the wallet which transaction to create a proof for. For\nexample:\n##* txid, if known by the server\n##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\npayment)\n##* amount, label, message or other information from a BIP0021 URI\n# The wallet identifies a transaction T, if possible. Otherwise it asks the\nuser to select among the ones that match the hints in 1.iii.\n# The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\nsign it.\n# The user confirms\n# The UPoP(T) is signed by the wallet, creating PoP(T).\n# The PoP is sent to the destination in 1.ii.\n# The server receiving the PoP validates it and responds with \u201cvalid\u201d or\n\u201cinvalid\u201d.\n# The wallet displays the response in some way to the user.\n\n'''Remarks:'''\n\n* The method of transferring the PoP request at step 1 is not specified\nhere. Instead that is specified in separate specifications. See [btcpop\nscheme BIP](btcpop scheme BIP).\n* The nonce must be randomly generated by the server for every new PoP\nrequest.\n\n=== Validating a PoP ===\n\nThe server needs to validate the PoP and reply with \"valid\" or \"invalid\".\nThat process is outlined below. If any step fails, the validation is\naborted and \"invalid\" is returned:\n\n# Check the format of the PoP. It must pass normal transaction checks,\nexcept that the inputs may already be spent.\n# Check that lock_time is 499999999.\n# Check that there is exactly one output. This output must have value 0 and\nconform to the OP_RETURN output format outlined above.\n# Check that the nonce is the same as the one requested.\n# Check that the inputs of the PoP are exactly the same as in transaction\nT, except that the sequence numbers must all be 0. The ordering of the\ninputs must also be the same as in T.\n# Run the scripts of all the inputs. All scipts must return true.\n# Check that the txid in the PoP output is the transaction you actually\nwant proof for. If you don\u2019t know exactly what transaction you want proof\nfor, check that the transaction actually pays for the product/service you\ndeliver.\n# Return \"valid\".\n\n== Security considerations ==\n\n* Someone can intercept the PoP-request and change any parameter in it.\nThese can be mitigated by using secure connections. For example:\n** Pop destination - Stealing your PoP.\n** label - Trick you to sign an unintended pop or set a label that your\nwallet doesn't have any record for, resulting in a broken service. Always\ncheck the PoP before signing.\n** nonce - Your pop will not validate on server.\n* Someone can steal a PoP, for example by tampering with the PoP request,\nand try to use the service hoping to get a matching nonce. Probability per\ntry: 1/(2^48). The server should have a mechanism for detecting a brute\nforce attack of this kind, or at least slow down the process by delaying\nthe PoP request by some 100 ms or so.\n* Even if a wallet has no funds it might still be valuable as a generator\nfor PoPs. This makes it important to keep the security of the wallet after\nit has been emptied.\n* Transaction malleability may cause the server to have another transaction\nid for a payment than the client's wallet. In that case the wallet will not\nbe able to prove the transaction to the server. Wallets should not rely on\nthe transaction id of the outgoing transaction. Instead it should listen\nfor the transaction on the network and put that in its list of transactions.\n\n== Reference implementation ==\n\n[https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n\n[https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n\n== References ==\n\n[https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP0021]:\nURI Scheme\n\n[https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki BIP0070]:\nPayment Protocol\n\n[[btcpop scheme BIP]]\n\n#########################################################\n\n2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n> Thank you all for the feedback.\n>\n> I will change the data structure as follows:\n>\n> * There will be only one output, the \"pop output\", and no outputs from\n> T will be copied to the PoP.\n> * The pop output will have value 0.\n> * The sequence number of all inputs of the PoP will be set to 0. I\n> chose to set it to 0 for all inputs for simplicity.\n> * The lock_time of the PoP is always set to 499999999.\n>\n> Any comments on this?\n>\n> /Kalle\n>\n> 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>>\n>>>> I'm open to changes here.\n>>>\n>>> I suggest:\n>>>\n>>> - Don't include any real outputs.   They are redundant because the txid\nis\n>>> already referenced.\n>>\n>> with the nLocktime solution, the copied outputs are not needed.\n>>\n>>>\n>>> - Start the proof script, which should be invalid, with a magic\nconstant and\n>>> include space for future expansion.  This makes PoP's easy to identify\nand\n>>> extend.\n>>\n>> I did remore the constant (a \"PoP\" literal ascii encoded string)\n>> because it didn't add much. The recipient will expect a pop, so it\n>> will simply treat it as one. I did add a 2 byte version field to make\n>> it extendable.\n>>\n>>>\n>>> - \"Proof of Potential\"\n>>\n>> Noted :-)\n>>\n>> Thank you\n>> /Kalle\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/95a01be8/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-06T15:18:18",
                "message_text_only": "On Saturday, June 06, 2015 2:35:17 PM Kalle Rosenbaum wrote:\n> Current methods of proving a payment:\n> \n> * Signing messages, chosen by the server, with the private keys used to\n> sign the transaction. This could meet 1 and 2 but probably not 3. This is\n> not standardized either. 4 Could be met if designed so.\n\nIt's also not secure, since the signed messages only prove ownership of the \naddress associated with the private key, and does not prove ownership of \nUTXOs currently redeemable with the private key, nor prove past UTXOs spent \nwere approved by the owner of the address.\n\n> A proof of payment for a transaction T, here called PoP(T), is used to\n> prove that one has ownership of the credentials needed to unlock all the\n> inputs of T.\n\nThis appears to be incompatible with CoinJoin at least. Maybe there's some \nclean way to avoid that by using \nhttps://github.com/Blockstream/contracthashtool ?\n\n> It has the exact same structure as a bitcoin transaction with\n> the same inputs and outputs as T and in the same order as in T. There is\n> also one OP_RETURN output inserted at index 0, here called the pop output.\n\nI also agree with Pieter, that this should *not* be so cleanly compatible \nwith Bitcoin transactions. If you wish to share code, perhaps using an \ninvalid opcode rather than OP_RETURN would be appropriate.\n\nLuke"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-06T15:23:48",
                "message_text_only": "On Sat, Jun 6, 2015 at 5:18 PM, Luke Dashjr <luke at dashjr.org> wrote:\n\n> I also agree with Pieter, that this should *not* be so cleanly compatible\n> with Bitcoin transactions. If you wish to share code, perhaps using an\n> invalid opcode rather than OP_RETURN would be appropriate.\n\n\nUsing an invalid opcode would merely send funds into the void. It wouldn't\ninvalidate the transaction.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/e8ba6131/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-06T15:32:47",
                "message_text_only": "On Sat, Jun 06, 2015 at 05:23:48PM +0200, Pieter Wuille wrote:\n> On Sat, Jun 6, 2015 at 5:18 PM, Luke Dashjr <luke at dashjr.org> wrote:\n> \n> > I also agree with Pieter, that this should *not* be so cleanly compatible\n> > with Bitcoin transactions. If you wish to share code, perhaps using an\n> > invalid opcode rather than OP_RETURN would be appropriate.\n> \n> \n> Using an invalid opcode would merely send funds into the void. It wouldn't\n> invalidate the transaction.\n\nJust set nLockTime to 500000000-1 and nSequence appropriately to make\nthe transaction impossible to mine for the next 9500 years.\n\nThough I agree that this whole idea seems a bit dubious to me.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000000dd919214b66444dcebb4aa0214c1ab7c8b3b633be71f\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/3eae6c18/attachment.sig>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T16:35:50",
                "message_text_only": "2015-06-06 17:32 GMT+02:00 Peter Todd <pete at petertodd.org>:\n> On Sat, Jun 06, 2015 at 05:23:48PM +0200, Pieter Wuille wrote:\n>> On Sat, Jun 6, 2015 at 5:18 PM, Luke Dashjr <luke at dashjr.org> wrote:\n>>\n>> > I also agree with Pieter, that this should *not* be so cleanly compatible\n>> > with Bitcoin transactions. If you wish to share code, perhaps using an\n>> > invalid opcode rather than OP_RETURN would be appropriate.\n>>\n>>\n>> Using an invalid opcode would merely send funds into the void. It wouldn't\n>> invalidate the transaction.\n>\n> Just set nLockTime to 500000000-1 and nSequence appropriately to make\n> the transaction impossible to mine for the next 9500 years.\n\nActually, I suggested that on this list on april 27, but shortly after\nrejected my own idea:\n\n#######################\n\"Or a really high lock_time, but it would not make it invalid, just delayed.\"\n\nOk, this was a bad idea, since nodes would have to keep it in memory.\nPlease disregard that idea...\n########################\n\nNow I think I rejected it on based on a misunderstanding. Nodes will\nnot put them in their mempool unless it's value is near in time,\nright? From the 0.9.0 release notes: \"Accept nLockTime transactions\nthat finalize in the next block\".\n\nIn that case this is a really nice option.\n\n>\n> Though I agree that this whole idea seems a bit dubious to me.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 00000000000000000000dd919214b66444dcebb4aa0214c1ab7c8b3b633be71f\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-15T10:00:52",
                "message_text_only": "I did misunderstand that. That changes things significantly.\n\nHowever, having paid is not the same as having had access to the input\ncoins. What about shared wallets or coinjoin?\n\nAlso, if I understand correctly, there is no commitment to anything you're\ntrying to say about the sender? So once I obtain a proof-of-payment from\nyou about something you paid, I can go claim that it's mine?\n\nWhy does anyone care who paid? This is like walking into a coffeshop,\nnoticing I don't have money with me, let me friend pay for me, and then\nhave the shop insist that I can't drink it because I'm not the buyer.\n\nTrack payments, don't try to assign identities to payers.\nOn Jun 15, 2015 11:35 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n\n> Hi Pieter!\n>\n> It is intended to be a proof that you *have paid* for something. Not\n> that you have the intent to pay for something. You cannot use PoP\n> without a transaction to prove.\n>\n> So, yes, it's just a proof of access to certain coins that you no longer\n> have.\n>\n> Maybe I don't understand you correctly?\n>\n> /Kalle\n>\n> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> > Now that you have removed the outputs, I don't think it's even a intent\n> of\n> > payment, but just a proof of access to certain coins.\n> >\n> > On Jun 15, 2015 11:24 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n> >>\n> >> Hi all!\n> >>\n> >> I have made the discussed changes and updated my implementation\n> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the\n> >> changes:\n> >>\n> >> * There is now only one output, the \"pop output\", of value 0.\n> >> * The sequence number of all inputs of the PoP must be set to 0. I\n> >> chose to set it to 0 for all inputs for simplicity.\n> >> * The lock_time of the PoP must be set to 499999999 (max block height\n> lock\n> >> time).\n> >>\n> >> The comments so far has been mainly positive or neutral. Are there any\n> >> major objections against any of the two proposals? If not, I will ask\n> >> Gregory Maxwell to assign them BIP numbers.\n> >>\n> >> The two BIP proposals can be found at\n> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\n> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The\n> source\n> >> for the Proof of Payment BIP proposal is also in-lined below.\n> >>\n> >> A number of alternative names have been proposed:\n> >>\n> >> * Proof of Potential\n> >> * Proof of Control\n> >> * Proof of Signature\n> >> * Signatory Proof\n> >> * Popo: Proof of payment origin\n> >> * Pots: Proof of transaction signer\n> >> * proof of transaction intent\n> >> * Declaration of intent\n> >> * Asset-access-and-action-affirmation, AAaAA, or A5\n> >> * VeriBit\n> >> * CertiBTC\n> >> * VBit\n> >> * PayID\n> >>\n> >> Given this list, I still think \"Proof of Payment\" is the most\n> descriptive\n> >> to non-technical people.\n> >>\n> >> Regards,\n> >> Kalle\n> >>\n> >>\n> >> #################################################\n> >> <pre>\n> >>   BIP: <BIP number>\n> >>   Title: Proof of Payment\n> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n> >>   Status: Draft\n> >>   Type: Standards Track\n> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n> >> </pre>\n> >>\n> >> == Abstract ==\n> >>\n> >> This BIP describes how a wallet can prove to a server that it has the\n> >> ability to sign a certain transaction.\n> >>\n> >> == Motivation ==\n> >>\n> >> There are several scenarios in which it would be useful to prove that\n> you\n> >> have paid for something. For example:\n> >>\n> >> * A pre-paid hotel room where your PoP functions as a key to the door.\n> >> * An online video rental service where you pay for a video and watch it\n> on\n> >> any device.\n> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.\n> During\n> >> this period you can upload new content to the sign whenever you like\n> using\n> >> PoP.\n> >> * Log in to a pay site using a PoP.\n> >> * A parking lot you pay for monthly and the car authenticates itself\n> using\n> >> PoP.\n> >> * A lottery where all participants pay to the same address, and the\n> winner\n> >> is selected among the transactions to that address. You exchange the\n> prize\n> >> for a PoP for the winning transaction.\n> >>\n> >> With Proof of Payment, these use cases can be achieved without any\n> >> personal information (user name, password, e-mail address, etc) being\n> >> involved.\n> >>\n> >> == Rationale ==\n> >>\n> >> Desirable properties:\n> >>\n> >> # A PoP should be generated on demand.\n> >> # It should only be usable once to avoid issues due to theft.\n> >> # It should be able to create a PoP for any payment, regardless of\n> script\n> >> type (P2SH, P2PKH, etc.).\n> >> # It should prove that you have enough credentials to unlock all the\n> >> inputs of the proven transaction.\n> >> # It should be easy to implement by wallets and servers to ease\n> adoption.\n> >>\n> >> Current methods of proving a payment:\n> >>\n> >> * In BIP0070, the PaymentRequest together with the transactions\n> fulfilling\n> >> the request makes some sort of proof. However, it does not meet 1, 2 or\n> 4\n> >> and it obviously only meets 3 if the payment is made through BIP0070.\n> Also,\n> >> there's no standard way to request/provide the proof. If standardized it\n> >> would probably meet 5.\n> >> * Signing messages, chosen by the server, with the private keys used to\n> >> sign the transaction. This could meet 1 and 2 but probably not 3. This\n> is\n> >> not standardized either. 4 Could be met if designed so.\n> >>\n> >> If an input script type is P2SH, any satisfying script should do, just\n> as\n> >> if it was a payment. For M-of-N multisig scripts, that would mean that\n> any\n> >> set of M keys should be sufficient, not neccesarily the same set of M\n> keys\n> >> that signed the transaction. This is important because strictly\n> demanding\n> >> the same set of M keys would defeat the purpose of a multisig address.\n> >>\n> >> == Specification ==\n> >>\n> >> === Data structure ===\n> >>\n> >> A proof of payment for a transaction T, here called PoP(T), is used to\n> >> prove that one has ownership of the credentials needed to unlock all the\n> >> inputs of T. It has the exact same structure as a bitcoin transaction\n> with\n> >> the same inputs as T and in the same order as in T, but with each\n> sequence\n> >> number set to 0. There is exactly one output, here called the pop\n> output,\n> >> with value 0. The pop output must have the following format:\n> >>\n> >>  OP_RETURN <version> <txid> <nonce>\n> >>\n> >> {|\n> >> ! Field        !! Size [B] !! Description\n> >> |-\n> >> | &lt;version> || 2        || Version, little endian, currently 0x01\n> 0x00\n> >> |-\n> >> | &lt;txid>    || 32       || The transaction to prove\n> >> |-\n> >> | &lt;nonce>   || 6        || Random data\n> >> |}\n> >>\n> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP\n> from\n> >> being included in a block, should it appear on the bitcoin p2p network.\n> This\n> >> is also the reason for setting the sequence numbers to 0, since sequence\n> >> number of ffffffff would make lock_time ineffective. This specification\n> >> demands that all input sequence numbers are 0, not just one of them,\n> which\n> >> would be sufficient to make lock_time effective. This is for simplicity\n> >> reasons.\n> >>\n> >> An illustration of the PoP data structure and its original payment is\n> >> shown below.\n> >>\n> >> <pre>\n> >>   T\n> >>  +------------------------------------------------+\n> >>  |inputs                | outputs                 |\n> >>  |       Value,Sequence | Value,Script            |\n> >>  +------------------------------------------------+\n> >>  |input0 1,ffffffff     | 0,pay to A              |\n> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |\n> >>  |input2 4,ffffffff     | 1,pay to B              |\n> >>  |                      | 4,pay to C              |\n> >>  +------------------------------------------------+\n> >>\n> >>   PoP(T)\n> >>  +-------------------------------------------------------------+\n> >>  | inputs               | outputs                              |\n> >>  |       Value,Sequence | Value,Script                         |\n> >>  +-------------------------------------------------------------+\n> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |\n> >>  |input1 3,00000000     |                                      |\n> >>  |input2 4,00000000     |                                      |\n> >>  +-------------------------------------------------------------+\n> >>  | lock_time=499999999                                         |\n> >>  +-------------------------------------------------------------+\n> >> </pre>\n> >>\n> >> The PoP is signed using the same signing process that is used for\n> bitcoin\n> >> transactions.\n> >>\n> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once\n> >> the PoP has reached the server, that PoP is useless since the server\n> will\n> >> generate a new nonce for every PoP request.\n> >>\n> >> === Process ===\n> >>\n> >> # A proof of payment request is sent from the server to the wallet. The\n> >> PoP request contains:\n> >> ## a random nonce\n> >> ## a destination where to send the PoP, for example a https URL\n> >> ## data hinting the wallet which transaction to create a proof for. For\n> >> example:\n> >> ##* txid, if known by the server\n> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\n> >> payment)\n> >> ##* amount, label, message or other information from a BIP0021 URI\n> >> # The wallet identifies a transaction T, if possible. Otherwise it asks\n> >> the user to select among the ones that match the hints in 1.iii.\n> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\n> >> sign it.\n> >> # The user confirms\n> >> # The UPoP(T) is signed by the wallet, creating PoP(T).\n> >> # The PoP is sent to the destination in 1.ii.\n> >> # The server receiving the PoP validates it and responds with \u201cvalid\u201d or\n> >> \u201cinvalid\u201d.\n> >> # The wallet displays the response in some way to the user.\n> >>\n> >> '''Remarks:'''\n> >>\n> >> * The method of transferring the PoP request at step 1 is not specified\n> >> here. Instead that is specified in separate specifications. See [btcpop\n> >> scheme BIP](btcpop scheme BIP).\n> >> * The nonce must be randomly generated by the server for every new PoP\n> >> request.\n> >>\n> >> === Validating a PoP ===\n> >>\n> >> The server needs to validate the PoP and reply with \"valid\" or\n> \"invalid\".\n> >> That process is outlined below. If any step fails, the validation is\n> aborted\n> >> and \"invalid\" is returned:\n> >>\n> >> # Check the format of the PoP. It must pass normal transaction checks,\n> >> except that the inputs may already be spent.\n> >> # Check that lock_time is 499999999.\n> >> # Check that there is exactly one output. This output must have value 0\n> >> and conform to the OP_RETURN output format outlined above.\n> >> # Check that the nonce is the same as the one requested.\n> >> # Check that the inputs of the PoP are exactly the same as in\n> transaction\n> >> T, except that the sequence numbers must all be 0. The ordering of the\n> >> inputs must also be the same as in T.\n> >> # Run the scripts of all the inputs. All scipts must return true.\n> >> # Check that the txid in the PoP output is the transaction you actually\n> >> want proof for. If you don\u2019t know exactly what transaction you want\n> proof\n> >> for, check that the transaction actually pays for the product/service\n> you\n> >> deliver.\n> >> # Return \"valid\".\n> >>\n> >> == Security considerations ==\n> >>\n> >> * Someone can intercept the PoP-request and change any parameter in it.\n> >> These can be mitigated by using secure connections. For example:\n> >> ** Pop destination - Stealing your PoP.\n> >> ** label - Trick you to sign an unintended pop or set a label that your\n> >> wallet doesn't have any record for, resulting in a broken service.\n> Always\n> >> check the PoP before signing.\n> >> ** nonce - Your pop will not validate on server.\n> >> * Someone can steal a PoP, for example by tampering with the PoP\n> request,\n> >> and try to use the service hoping to get a matching nonce. Probability\n> per\n> >> try: 1/(2^48). The server should have a mechanism for detecting a brute\n> >> force attack of this kind, or at least slow down the process by\n> delaying the\n> >> PoP request by some 100 ms or so.\n> >> * Even if a wallet has no funds it might still be valuable as a\n> generator\n> >> for PoPs. This makes it important to keep the security of the wallet\n> after\n> >> it has been emptied.\n> >> * Transaction malleability may cause the server to have another\n> >> transaction id for a payment than the client's wallet. In that case the\n> >> wallet will not be able to prove the transaction to the server. Wallets\n> >> should not rely on the transaction id of the outgoing transaction.\n> Instead\n> >> it should listen for the transaction on the network and put that in its\n> list\n> >> of transactions.\n> >>\n> >> == Reference implementation ==\n> >>\n> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n> >>\n> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n> >>\n> >> == References ==\n> >>\n> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki\n> BIP0021]:\n> >> URI Scheme\n> >>\n> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki\n> BIP0070]:\n> >> Payment Protocol\n> >>\n> >> [[btcpop scheme BIP]]\n> >>\n> >> #########################################################\n> >>\n> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n> >> > Thank you all for the feedback.\n> >> >\n> >> > I will change the data structure as follows:\n> >> >\n> >> > * There will be only one output, the \"pop output\", and no outputs from\n> >> > T will be copied to the PoP.\n> >> > * The pop output will have value 0.\n> >> > * The sequence number of all inputs of the PoP will be set to 0. I\n> >> > chose to set it to 0 for all inputs for simplicity.\n> >> > * The lock_time of the PoP is always set to 499999999.\n> >> >\n> >> > Any comments on this?\n> >> >\n> >> > /Kalle\n> >> >\n> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n> >> >>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se>\n> wrote:\n> >> >>>\n> >> >>>> I'm open to changes here.\n> >> >>>\n> >> >>> I suggest:\n> >> >>>\n> >> >>> - Don't include any real outputs.   They are redundant because the\n> >> >>> txid is\n> >> >>> already referenced.\n> >> >>\n> >> >> with the nLocktime solution, the copied outputs are not needed.\n> >> >>\n> >> >>>\n> >> >>> - Start the proof script, which should be invalid, with a magic\n> >> >>> constant and\n> >> >>> include space for future expansion.  This makes PoP's easy to\n> identify\n> >> >>> and\n> >> >>> extend.\n> >> >>\n> >> >> I did remore the constant (a \"PoP\" literal ascii encoded string)\n> >> >> because it didn't add much. The recipient will expect a pop, so it\n> >> >> will simply treat it as one. I did add a 2 byte version field to make\n> >> >> it extendable.\n> >> >>\n> >> >>>\n> >> >>> - \"Proof of Potential\"\n> >> >>\n> >> >> Noted :-)\n> >> >>\n> >> >> Thank you\n> >> >> /Kalle\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >>\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/eb18f534/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-15T11:59:45",
                "message_text_only": "2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> I did misunderstand that. That changes things significantly.\n>\n> However, having paid is not the same as having had access to the input\n> coins. What about shared wallets or coinjoin?\n\nWallets will have the same ability to make PoPs as they have in making\npayments, see my motivation and rationale sections. CoinJoin is not\ncompatible with PoP, Luke-Jr brought that up a week ago:\n\n\"This appears to be incompatible with CoinJoin at least. Maybe there's some\nclean way to avoid that by using\nhttps://github.com/Blockstream/contracthashtool ?\"\n\nI'm not sure if we will be able to support PoP with CoinJoin. Maybe\nsomeone with more insight into CoinJoin have some input?\n\n>\n> Also, if I understand correctly, there is no commitment to anything you're\n> trying to say about the sender? So once I obtain a proof-of-payment from you\n> about something you paid, I can go claim that it's mine?\n\nI don't understand this. The pop includes a nonce randomly generated\nby the server. If you're very lucky, 1/(2^48) per try, you can reuse a\npop.\n\n>\n> Why does anyone care who paid? This is like walking into a coffeshop,\n> noticing I don't have money with me, let me friend pay for me, and then have\n> the shop insist that I can't drink it because I'm not the buyer.\n\nIf you pay as you use the service (ie pay for coffee upfront), there's\nno need for PoP. Please see the Motivation section. But you are right\nthat you must have the wallet(s) that paid at hand when you issue a\nPoP.\n\n>\n> Track payments, don't try to assign identities to payers.\n\nPlease elaborate, I don't understand what you mean here.\n\nRegards,\nKalle\n\n>\n> On Jun 15, 2015 11:35 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>\n>> Hi Pieter!\n>>\n>> It is intended to be a proof that you *have paid* for something. Not\n>> that you have the intent to pay for something. You cannot use PoP\n>> without a transaction to prove.\n>>\n>> So, yes, it's just a proof of access to certain coins that you no longer\n>> have.\n>>\n>> Maybe I don't understand you correctly?\n>>\n>> /Kalle\n>>\n>> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>> > Now that you have removed the outputs, I don't think it's even a intent\n>> > of\n>> > payment, but just a proof of access to certain coins.\n>> >\n>> > On Jun 15, 2015 11:24 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>> >>\n>> >> Hi all!\n>> >>\n>> >> I have made the discussed changes and updated my implementation\n>> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the\n>> >> changes:\n>> >>\n>> >> * There is now only one output, the \"pop output\", of value 0.\n>> >> * The sequence number of all inputs of the PoP must be set to 0. I\n>> >> chose to set it to 0 for all inputs for simplicity.\n>> >> * The lock_time of the PoP must be set to 499999999 (max block height\n>> >> lock\n>> >> time).\n>> >>\n>> >> The comments so far has been mainly positive or neutral. Are there any\n>> >> major objections against any of the two proposals? If not, I will ask\n>> >> Gregory Maxwell to assign them BIP numbers.\n>> >>\n>> >> The two BIP proposals can be found at\n>> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\n>> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The\n>> >> source\n>> >> for the Proof of Payment BIP proposal is also in-lined below.\n>> >>\n>> >> A number of alternative names have been proposed:\n>> >>\n>> >> * Proof of Potential\n>> >> * Proof of Control\n>> >> * Proof of Signature\n>> >> * Signatory Proof\n>> >> * Popo: Proof of payment origin\n>> >> * Pots: Proof of transaction signer\n>> >> * proof of transaction intent\n>> >> * Declaration of intent\n>> >> * Asset-access-and-action-affirmation, AAaAA, or A5\n>> >> * VeriBit\n>> >> * CertiBTC\n>> >> * VBit\n>> >> * PayID\n>> >>\n>> >> Given this list, I still think \"Proof of Payment\" is the most\n>> >> descriptive\n>> >> to non-technical people.\n>> >>\n>> >> Regards,\n>> >> Kalle\n>> >>\n>> >>\n>> >> #################################################\n>> >> <pre>\n>> >>   BIP: <BIP number>\n>> >>   Title: Proof of Payment\n>> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n>> >>   Status: Draft\n>> >>   Type: Standards Track\n>> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n>> >> </pre>\n>> >>\n>> >> == Abstract ==\n>> >>\n>> >> This BIP describes how a wallet can prove to a server that it has the\n>> >> ability to sign a certain transaction.\n>> >>\n>> >> == Motivation ==\n>> >>\n>> >> There are several scenarios in which it would be useful to prove that\n>> >> you\n>> >> have paid for something. For example:\n>> >>\n>> >> * A pre-paid hotel room where your PoP functions as a key to the door.\n>> >> * An online video rental service where you pay for a video and watch it\n>> >> on\n>> >> any device.\n>> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.\n>> >> During\n>> >> this period you can upload new content to the sign whenever you like\n>> >> using\n>> >> PoP.\n>> >> * Log in to a pay site using a PoP.\n>> >> * A parking lot you pay for monthly and the car authenticates itself\n>> >> using\n>> >> PoP.\n>> >> * A lottery where all participants pay to the same address, and the\n>> >> winner\n>> >> is selected among the transactions to that address. You exchange the\n>> >> prize\n>> >> for a PoP for the winning transaction.\n>> >>\n>> >> With Proof of Payment, these use cases can be achieved without any\n>> >> personal information (user name, password, e-mail address, etc) being\n>> >> involved.\n>> >>\n>> >> == Rationale ==\n>> >>\n>> >> Desirable properties:\n>> >>\n>> >> # A PoP should be generated on demand.\n>> >> # It should only be usable once to avoid issues due to theft.\n>> >> # It should be able to create a PoP for any payment, regardless of\n>> >> script\n>> >> type (P2SH, P2PKH, etc.).\n>> >> # It should prove that you have enough credentials to unlock all the\n>> >> inputs of the proven transaction.\n>> >> # It should be easy to implement by wallets and servers to ease\n>> >> adoption.\n>> >>\n>> >> Current methods of proving a payment:\n>> >>\n>> >> * In BIP0070, the PaymentRequest together with the transactions\n>> >> fulfilling\n>> >> the request makes some sort of proof. However, it does not meet 1, 2 or\n>> >> 4\n>> >> and it obviously only meets 3 if the payment is made through BIP0070.\n>> >> Also,\n>> >> there's no standard way to request/provide the proof. If standardized\n>> >> it\n>> >> would probably meet 5.\n>> >> * Signing messages, chosen by the server, with the private keys used to\n>> >> sign the transaction. This could meet 1 and 2 but probably not 3. This\n>> >> is\n>> >> not standardized either. 4 Could be met if designed so.\n>> >>\n>> >> If an input script type is P2SH, any satisfying script should do, just\n>> >> as\n>> >> if it was a payment. For M-of-N multisig scripts, that would mean that\n>> >> any\n>> >> set of M keys should be sufficient, not neccesarily the same set of M\n>> >> keys\n>> >> that signed the transaction. This is important because strictly\n>> >> demanding\n>> >> the same set of M keys would defeat the purpose of a multisig address.\n>> >>\n>> >> == Specification ==\n>> >>\n>> >> === Data structure ===\n>> >>\n>> >> A proof of payment for a transaction T, here called PoP(T), is used to\n>> >> prove that one has ownership of the credentials needed to unlock all\n>> >> the\n>> >> inputs of T. It has the exact same structure as a bitcoin transaction\n>> >> with\n>> >> the same inputs as T and in the same order as in T, but with each\n>> >> sequence\n>> >> number set to 0. There is exactly one output, here called the pop\n>> >> output,\n>> >> with value 0. The pop output must have the following format:\n>> >>\n>> >>  OP_RETURN <version> <txid> <nonce>\n>> >>\n>> >> {|\n>> >> ! Field        !! Size [B] !! Description\n>> >> |-\n>> >> | &lt;version> || 2        || Version, little endian, currently 0x01\n>> >> 0x00\n>> >> |-\n>> >> | &lt;txid>    || 32       || The transaction to prove\n>> >> |-\n>> >> | &lt;nonce>   || 6        || Random data\n>> >> |}\n>> >>\n>> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP\n>> >> from\n>> >> being included in a block, should it appear on the bitcoin p2p network.\n>> >> This\n>> >> is also the reason for setting the sequence numbers to 0, since\n>> >> sequence\n>> >> number of ffffffff would make lock_time ineffective. This specification\n>> >> demands that all input sequence numbers are 0, not just one of them,\n>> >> which\n>> >> would be sufficient to make lock_time effective. This is for simplicity\n>> >> reasons.\n>> >>\n>> >> An illustration of the PoP data structure and its original payment is\n>> >> shown below.\n>> >>\n>> >> <pre>\n>> >>   T\n>> >>  +------------------------------------------------+\n>> >>  |inputs                | outputs                 |\n>> >>  |       Value,Sequence | Value,Script            |\n>> >>  +------------------------------------------------+\n>> >>  |input0 1,ffffffff     | 0,pay to A              |\n>> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |\n>> >>  |input2 4,ffffffff     | 1,pay to B              |\n>> >>  |                      | 4,pay to C              |\n>> >>  +------------------------------------------------+\n>> >>\n>> >>   PoP(T)\n>> >>  +-------------------------------------------------------------+\n>> >>  | inputs               | outputs                              |\n>> >>  |       Value,Sequence | Value,Script                         |\n>> >>  +-------------------------------------------------------------+\n>> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |\n>> >>  |input1 3,00000000     |                                      |\n>> >>  |input2 4,00000000     |                                      |\n>> >>  +-------------------------------------------------------------+\n>> >>  | lock_time=499999999                                         |\n>> >>  +-------------------------------------------------------------+\n>> >> </pre>\n>> >>\n>> >> The PoP is signed using the same signing process that is used for\n>> >> bitcoin\n>> >> transactions.\n>> >>\n>> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once\n>> >> the PoP has reached the server, that PoP is useless since the server\n>> >> will\n>> >> generate a new nonce for every PoP request.\n>> >>\n>> >> === Process ===\n>> >>\n>> >> # A proof of payment request is sent from the server to the wallet. The\n>> >> PoP request contains:\n>> >> ## a random nonce\n>> >> ## a destination where to send the PoP, for example a https URL\n>> >> ## data hinting the wallet which transaction to create a proof for. For\n>> >> example:\n>> >> ##* txid, if known by the server\n>> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\n>> >> payment)\n>> >> ##* amount, label, message or other information from a BIP0021 URI\n>> >> # The wallet identifies a transaction T, if possible. Otherwise it asks\n>> >> the user to select among the ones that match the hints in 1.iii.\n>> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\n>> >> sign it.\n>> >> # The user confirms\n>> >> # The UPoP(T) is signed by the wallet, creating PoP(T).\n>> >> # The PoP is sent to the destination in 1.ii.\n>> >> # The server receiving the PoP validates it and responds with \u201cvalid\u201d\n>> >> or\n>> >> \u201cinvalid\u201d.\n>> >> # The wallet displays the response in some way to the user.\n>> >>\n>> >> '''Remarks:'''\n>> >>\n>> >> * The method of transferring the PoP request at step 1 is not specified\n>> >> here. Instead that is specified in separate specifications. See [btcpop\n>> >> scheme BIP](btcpop scheme BIP).\n>> >> * The nonce must be randomly generated by the server for every new PoP\n>> >> request.\n>> >>\n>> >> === Validating a PoP ===\n>> >>\n>> >> The server needs to validate the PoP and reply with \"valid\" or\n>> >> \"invalid\".\n>> >> That process is outlined below. If any step fails, the validation is\n>> >> aborted\n>> >> and \"invalid\" is returned:\n>> >>\n>> >> # Check the format of the PoP. It must pass normal transaction checks,\n>> >> except that the inputs may already be spent.\n>> >> # Check that lock_time is 499999999.\n>> >> # Check that there is exactly one output. This output must have value 0\n>> >> and conform to the OP_RETURN output format outlined above.\n>> >> # Check that the nonce is the same as the one requested.\n>> >> # Check that the inputs of the PoP are exactly the same as in\n>> >> transaction\n>> >> T, except that the sequence numbers must all be 0. The ordering of the\n>> >> inputs must also be the same as in T.\n>> >> # Run the scripts of all the inputs. All scipts must return true.\n>> >> # Check that the txid in the PoP output is the transaction you actually\n>> >> want proof for. If you don\u2019t know exactly what transaction you want\n>> >> proof\n>> >> for, check that the transaction actually pays for the product/service\n>> >> you\n>> >> deliver.\n>> >> # Return \"valid\".\n>> >>\n>> >> == Security considerations ==\n>> >>\n>> >> * Someone can intercept the PoP-request and change any parameter in it.\n>> >> These can be mitigated by using secure connections. For example:\n>> >> ** Pop destination - Stealing your PoP.\n>> >> ** label - Trick you to sign an unintended pop or set a label that your\n>> >> wallet doesn't have any record for, resulting in a broken service.\n>> >> Always\n>> >> check the PoP before signing.\n>> >> ** nonce - Your pop will not validate on server.\n>> >> * Someone can steal a PoP, for example by tampering with the PoP\n>> >> request,\n>> >> and try to use the service hoping to get a matching nonce. Probability\n>> >> per\n>> >> try: 1/(2^48). The server should have a mechanism for detecting a brute\n>> >> force attack of this kind, or at least slow down the process by\n>> >> delaying the\n>> >> PoP request by some 100 ms or so.\n>> >> * Even if a wallet has no funds it might still be valuable as a\n>> >> generator\n>> >> for PoPs. This makes it important to keep the security of the wallet\n>> >> after\n>> >> it has been emptied.\n>> >> * Transaction malleability may cause the server to have another\n>> >> transaction id for a payment than the client's wallet. In that case the\n>> >> wallet will not be able to prove the transaction to the server. Wallets\n>> >> should not rely on the transaction id of the outgoing transaction.\n>> >> Instead\n>> >> it should listen for the transaction on the network and put that in its\n>> >> list\n>> >> of transactions.\n>> >>\n>> >> == Reference implementation ==\n>> >>\n>> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n>> >>\n>> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n>> >>\n>> >> == References ==\n>> >>\n>> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki\n>> >> BIP0021]:\n>> >> URI Scheme\n>> >>\n>> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki\n>> >> BIP0070]:\n>> >> Payment Protocol\n>> >>\n>> >> [[btcpop scheme BIP]]\n>> >>\n>> >> #########################################################\n>> >>\n>> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>> >> > Thank you all for the feedback.\n>> >> >\n>> >> > I will change the data structure as follows:\n>> >> >\n>> >> > * There will be only one output, the \"pop output\", and no outputs\n>> >> > from\n>> >> > T will be copied to the PoP.\n>> >> > * The pop output will have value 0.\n>> >> > * The sequence number of all inputs of the PoP will be set to 0. I\n>> >> > chose to set it to 0 for all inputs for simplicity.\n>> >> > * The lock_time of the PoP is always set to 499999999.\n>> >> >\n>> >> > Any comments on this?\n>> >> >\n>> >> > /Kalle\n>> >> >\n>> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>> >> >>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se>\n>> >> >>> wrote:\n>> >> >>>\n>> >> >>>> I'm open to changes here.\n>> >> >>>\n>> >> >>> I suggest:\n>> >> >>>\n>> >> >>> - Don't include any real outputs.   They are redundant because the\n>> >> >>> txid is\n>> >> >>> already referenced.\n>> >> >>\n>> >> >> with the nLocktime solution, the copied outputs are not needed.\n>> >> >>\n>> >> >>>\n>> >> >>> - Start the proof script, which should be invalid, with a magic\n>> >> >>> constant and\n>> >> >>> include space for future expansion.  This makes PoP's easy to\n>> >> >>> identify\n>> >> >>> and\n>> >> >>> extend.\n>> >> >>\n>> >> >> I did remore the constant (a \"PoP\" literal ascii encoded string)\n>> >> >> because it didn't add much. The recipient will expect a pop, so it\n>> >> >> will simply treat it as one. I did add a 2 byte version field to\n>> >> >> make\n>> >> >> it extendable.\n>> >> >>\n>> >> >>>\n>> >> >>> - \"Proof of Potential\"\n>> >> >>\n>> >> >> Noted :-)\n>> >> >>\n>> >> >> Thank you\n>> >> >> /Kalle\n>> >>\n>> >>\n>> >>\n>> >> ------------------------------------------------------------------------------\n>> >>\n>> >> _______________________________________________\n>> >> Bitcoin-development mailing list\n>> >> Bitcoin-development at lists.sourceforge.net\n>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> >>\n>> >"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-16T14:31:34",
                "message_text_only": "On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:\n\n> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> I'm not sure if we will be able to support PoP with CoinJoin. Maybe\n> someone with more insight into CoinJoin have some input?\n>\n\nNot really. The problem is that you assume a transaction corresponds to a\nsingle payment. This is true for simple wallet use cases, but not\ncompatible with CoinJoin, or with systems that for example would want to\ncombine multiple payments in a single transaction.\n\n\n> > Also, if I understand correctly, there is no commitment to anything\n> you're\n> > trying to say about the sender? So once I obtain a proof-of-payment from\n> you\n> > about something you paid, I can go claim that it's mine?\n>\n> I don't understand this. The pop includes a nonce randomly generated\n> by the server. If you're very lucky, 1/(2^48) per try, you can reuse a\n> pop.\n>\n>\nI owe you an apology here, for judging based on the summary you posted\nrather than reading the actual text.\n\n48 bits seems low to me, but it does indeed solve the problem. Why not 128\nor 256 bits?\n\n> Why does anyone care who paid? This is like walking into a coffeshop,\n> > noticing I don't have money with me, let me friend pay for me, and then\n> have\n> > the shop insist that I can't drink it because I'm not the buyer.\n>\n> If you pay as you use the service (ie pay for coffee upfront), there's\n> no need for PoP. Please see the Motivation section. But you are right\n> that you must have the wallet(s) that paid at hand when you issue a\n> PoP.\n>\n> >\n> > Track payments, don't try to assign identities to payers.\n>\n> Please elaborate, I don't understand what you mean here.\n>\n\nI think that is a mistake. You should not assume that the wallet who held\nthe coins is the payer/buyer. That's what I said earlier; you're implicitly\ncreating an identity (the one who holds these keys) based on the\ntransaction. This seems fundamentally wrong to me, and not necessary. The\nreceiver should not care who paid or how, he should care what was payed for.\n\nThe easiest solution to this IMHO would be an extension to the payment\nprotocol that gives you (or your wallet) a token in return for paying, and\nthat knowledge of that token is used to gain access to the services you\nprovide.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/75813f1f/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-16T19:22:54",
                "message_text_only": "Thank you for your comments Pieter! Please find my answers below.\n\n2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:\n>>\n>> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>> I'm not sure if we will be able to support PoP with CoinJoin. Maybe\n>> someone with more insight into CoinJoin have some input?\n>\n>\n> Not really. The problem is that you assume a transaction corresponds to a\n> single payment. This is true for simple wallet use cases, but not compatible\n> with CoinJoin, or with systems that for example would want to combine\n> multiple payments in a single transaction.\n>\n\nYes, you are right. It's not compatible with CoinJoin and the likes.\n\n>\n> 48 bits seems low to me, but it does indeed solve the problem. Why not 128\n> or 256 bits?\n\nThe nonce is limited because of the OP_RETURN output being limited to\n40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.\n\n>\n>> > Why does anyone care who paid? This is like walking into a coffeshop,\n>> > noticing I don't have money with me, let me friend pay for me, and then\n>> > have\n>> > the shop insist that I can't drink it because I'm not the buyer.\n>>\n>> If you pay as you use the service (ie pay for coffee upfront), there's\n>> no need for PoP. Please see the Motivation section. But you are right\n>> that you must have the wallet(s) that paid at hand when you issue a\n>> PoP.\n>>\n>> >\n>> > Track payments, don't try to assign identities to payers.\n>>\n>> Please elaborate, I don't understand what you mean here.\n>\n>\n> I think that is a mistake. You should not assume that the wallet who held\n> the coins is the payer/buyer. That's what I said earlier; you're implicitly\n> creating an identity (the one who holds these keys) based on the\n> transaction. This seems fundamentally wrong to me, and not necessary. The\n> receiver should not care who paid or how, he should care what was payed for.\n\nYou are saying that it's a problem that the wallet used to pay, must\nalso be used to issue the PoP? That may very well be a problem in some\ncases. People using PoP should of course be aware of it's limitations\nand act accordingly, i.e. don't pay for concert tickets for a friend\nand expect your friend to be able to enter the arena with her wallet.\nAs Tom Harding noted, it is possible to transfer keys to your friend's\nwallet, but that might not be desirable if those keys are also used\nfor other payments. Also that would weaken the security of an HD\nwallet, since a chain code along with a private key would reveal all\nkeys in that tree. Another solution is that your friend forwards the\nPoP request to your wallet, through twitter or SMS, and you send the\nPoP for her. Maybe that forwarding mechanism can be built into wallets\nand automated so that the wallet automatically suggests to sign the\nPoP for your friend. This is probably something to investigate\nfurther, but not within the scope of this BIP.\n\nOf course the simplest solution would be to send money to your friend\nfirst so that she can pay for the ticket from her own wallet, but\nthat's not always feasible.\n\n>\n> The easiest solution to this IMHO would be an extension to the payment\n> protocol that gives you (or your wallet) a token in return for paying, and\n> that knowledge of that token is used to gain access to the services you\n> provide.\n>\n\nThat token would then be reusable. Someone stealing it would be able\nto use it as much as she wants. That is what I want to avoid with PoP.\nThe BIP proposal briefly mentions something like this in the\nrationale. I also had a discussion about this with Mike Hearn on this\nlist on Mars 13 that I think covers most pros and cons of the\ndifferent approaches.\n\nWhile your suggestion does indeed separate the transaction from the\nproof of payment, it also assumes that the token is held in the wallet\nthat pays. Otherwise you would need to keep it in another safe place,\nremember it's reusable. Where would that be? How would you transfer\nthat token to your friend?\n\nThank you again for your comments. I appreciate it.\n\nBest regards,\nKalle\n\n> --\n> Pieter\n>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-16T19:25:12",
                "message_text_only": "You can't avoid sharing the token, and you can't avoid sharing the private\nkeys used for signing either. If they are single use, you don't lose\nanything by sharing them.\n\nAlso you are not creating a real transaction. Why does the OP_RETURN\nlimitation matter?\nOn Jun 16, 2015 9:22 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n\n> Thank you for your comments Pieter! Please find my answers below.\n>\n> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se>\n> wrote:\n> >>\n> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> >> I'm not sure if we will be able to support PoP with CoinJoin. Maybe\n> >> someone with more insight into CoinJoin have some input?\n> >\n> >\n> > Not really. The problem is that you assume a transaction corresponds to a\n> > single payment. This is true for simple wallet use cases, but not\n> compatible\n> > with CoinJoin, or with systems that for example would want to combine\n> > multiple payments in a single transaction.\n> >\n>\n> Yes, you are right. It's not compatible with CoinJoin and the likes.\n>\n> >\n> > 48 bits seems low to me, but it does indeed solve the problem. Why not\n> 128\n> > or 256 bits?\n>\n> The nonce is limited because of the OP_RETURN output being limited to\n> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.\n>\n> >\n> >> > Why does anyone care who paid? This is like walking into a coffeshop,\n> >> > noticing I don't have money with me, let me friend pay for me, and\n> then\n> >> > have\n> >> > the shop insist that I can't drink it because I'm not the buyer.\n> >>\n> >> If you pay as you use the service (ie pay for coffee upfront), there's\n> >> no need for PoP. Please see the Motivation section. But you are right\n> >> that you must have the wallet(s) that paid at hand when you issue a\n> >> PoP.\n> >>\n> >> >\n> >> > Track payments, don't try to assign identities to payers.\n> >>\n> >> Please elaborate, I don't understand what you mean here.\n> >\n> >\n> > I think that is a mistake. You should not assume that the wallet who held\n> > the coins is the payer/buyer. That's what I said earlier; you're\n> implicitly\n> > creating an identity (the one who holds these keys) based on the\n> > transaction. This seems fundamentally wrong to me, and not necessary. The\n> > receiver should not care who paid or how, he should care what was payed\n> for.\n>\n> You are saying that it's a problem that the wallet used to pay, must\n> also be used to issue the PoP? That may very well be a problem in some\n> cases. People using PoP should of course be aware of it's limitations\n> and act accordingly, i.e. don't pay for concert tickets for a friend\n> and expect your friend to be able to enter the arena with her wallet.\n> As Tom Harding noted, it is possible to transfer keys to your friend's\n> wallet, but that might not be desirable if those keys are also used\n> for other payments. Also that would weaken the security of an HD\n> wallet, since a chain code along with a private key would reveal all\n> keys in that tree. Another solution is that your friend forwards the\n> PoP request to your wallet, through twitter or SMS, and you send the\n> PoP for her. Maybe that forwarding mechanism can be built into wallets\n> and automated so that the wallet automatically suggests to sign the\n> PoP for your friend. This is probably something to investigate\n> further, but not within the scope of this BIP.\n>\n> Of course the simplest solution would be to send money to your friend\n> first so that she can pay for the ticket from her own wallet, but\n> that's not always feasible.\n>\n> >\n> > The easiest solution to this IMHO would be an extension to the payment\n> > protocol that gives you (or your wallet) a token in return for paying,\n> and\n> > that knowledge of that token is used to gain access to the services you\n> > provide.\n> >\n>\n> That token would then be reusable. Someone stealing it would be able\n> to use it as much as she wants. That is what I want to avoid with PoP.\n> The BIP proposal briefly mentions something like this in the\n> rationale. I also had a discussion about this with Mike Hearn on this\n> list on Mars 13 that I think covers most pros and cons of the\n> different approaches.\n>\n> While your suggestion does indeed separate the transaction from the\n> proof of payment, it also assumes that the token is held in the wallet\n> that pays. Otherwise you would need to keep it in another safe place,\n> remember it's reusable. Where would that be? How would you transfer\n> that token to your friend?\n>\n> Thank you again for your comments. I appreciate it.\n>\n> Best regards,\n> Kalle\n>\n> > --\n> > Pieter\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/e854b9db/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-16T05:26:03",
                "message_text_only": "Shared wallets were discussed earlier as a feature.  If you pay a for\ndry cleaning with a shared wallet, a different 1-of-N signer can pick up\nthe clothes with no physical transfer of a claim check, by proving the\nmoney that paid for the cleaning was his.\n\nMany kinds of vouchers can be eliminated, because the money itself can\nbe vouched for, wirelessly, with ECDSA security.  A PoP would be much\nmore difficult to forge as a valet claim check, to steal a car.\n\nSomething like your coffee gift example was also mentioned.  The buyer\ncould export the private keys to your (the beneficiary's) wallet after\nthe purchase, by using an 'export gift claim check' function on the\nspent transaction.  Then you pick up the coffee (car, concert seats...)\njust as if you had paid.\n\nKalle goes to some trouble to describe how merchants need to ensure that\nthey only accept a PoP provided as a response to their challenge.\n\nCoinjoin or simulfunding transactions wouldn't be PoP-able (nor should\nthey be) since no one signer has all the private keys.\n\n\n\nOn 6/15/2015 3:00 AM, Pieter Wuille wrote:\n>\n> I did misunderstand that. That changes things significantly.\n>\n> However, having paid is not the same as having had access to the input\n> coins. What about shared wallets or coinjoin?\n>\n> Also, if I understand correctly, there is no commitment to anything\n> you're trying to say about the sender? So once I obtain a\n> proof-of-payment from you about something you paid, I can go claim\n> that it's mine?\n>\n> Why does anyone care who paid? This is like walking into a coffeshop,\n> noticing I don't have money with me, let me friend pay for me, and\n> then have the shop insist that I can't drink it because I'm not the buyer.\n>\n> Track payments, don't try to assign identities to payers.\n>\n> On Jun 15, 2015 11:35 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se\n> <mailto:kalle at rosenbaum.se>> wrote:\n>\n>     Hi Pieter!\n>\n>     It is intended to be a proof that you *have paid* for something. Not\n>     that you have the intent to pay for something. You cannot use PoP\n>     without a transaction to prove.\n>\n>     So, yes, it's just a proof of access to certain coins that you no\n>     longer have.\n>\n>     Maybe I don't understand you correctly?\n>\n>     /Kalle\n>\n>     2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com\n>     <mailto:pieter.wuille at gmail.com>>:\n>     > Now that you have removed the outputs, I don't think it's even a\n>     intent of\n>     > payment, but just a proof of access to certain coins.\n>     >\n>     > On Jun 15, 2015 11:24 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se\n>     <mailto:kalle at rosenbaum.se>> wrote:\n>     >>\n>     >> Hi all!\n>     >>\n>     >> I have made the discussed changes and updated my implementation\n>     >> (https://github.com/kallerosenbaum/poppoc) accordingly. These\n>     are the\n>     >> changes:\n>     >>\n>     >> * There is now only one output, the \"pop output\", of value 0.\n>     >> * The sequence number of all inputs of the PoP must be set to 0. I\n>     >> chose to set it to 0 for all inputs for simplicity.\n>     >> * The lock_time of the PoP must be set to 499999999 (max block\n>     height lock\n>     >> time).\n>     >>\n>     >> The comments so far has been mainly positive or neutral. Are\n>     there any\n>     >> major objections against any of the two proposals? If not, I\n>     will ask\n>     >> Gregory Maxwell to assign them BIP numbers.\n>     >>\n>     >> The two BIP proposals can be found at\n>     >>\n>     https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\n>     >>\n>     https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP.\n>     The source\n>     >> for the Proof of Payment BIP proposal is also in-lined below.\n>     >>\n>     >> A number of alternative names have been proposed:\n>     >>\n>     >> * Proof of Potential\n>     >> * Proof of Control\n>     >> * Proof of Signature\n>     >> * Signatory Proof\n>     >> * Popo: Proof of payment origin\n>     >> * Pots: Proof of transaction signer\n>     >> * proof of transaction intent\n>     >> * Declaration of intent\n>     >> * Asset-access-and-action-affirmation, AAaAA, or A5\n>     >> * VeriBit\n>     >> * CertiBTC\n>     >> * VBit\n>     >> * PayID\n>     >>\n>     >> Given this list, I still think \"Proof of Payment\" is the most\n>     descriptive\n>     >> to non-technical people.\n>     >>\n>     >> Regards,\n>     >> Kalle\n>     >>\n>     >>\n>     >> #################################################\n>     >> <pre>\n>     >>   BIP: <BIP number>\n>     >>   Title: Proof of Payment\n>     >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se\n>     <mailto:kalle at rosenbaum.se>>\n>     >>   Status: Draft\n>     >>   Type: Standards Track\n>     >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n>     >> </pre>\n>     >>\n>     >> == Abstract ==\n>     >>\n>     >> This BIP describes how a wallet can prove to a server that it\n>     has the\n>     >> ability to sign a certain transaction.\n>     >>\n>     >> == Motivation ==\n>     >>\n>     >> There are several scenarios in which it would be useful to\n>     prove that you\n>     >> have paid for something. For example:\n>     >>\n>     >> * A pre-paid hotel room where your PoP functions as a key to\n>     the door.\n>     >> * An online video rental service where you pay for a video and\n>     watch it on\n>     >> any device.\n>     >> * An ad-sign where you pay in advance for e.g. 2 weeks\n>     exclusivity. During\n>     >> this period you can upload new content to the sign whenever you\n>     like using\n>     >> PoP.\n>     >> * Log in to a pay site using a PoP.\n>     >> * A parking lot you pay for monthly and the car authenticates\n>     itself using\n>     >> PoP.\n>     >> * A lottery where all participants pay to the same address, and\n>     the winner\n>     >> is selected among the transactions to that address. You\n>     exchange the prize\n>     >> for a PoP for the winning transaction.\n>     >>\n>     >> With Proof of Payment, these use cases can be achieved without any\n>     >> personal information (user name, password, e-mail address, etc)\n>     being\n>     >> involved.\n>     >>\n>     >> == Rationale ==\n>     >>\n>     >> Desirable properties:\n>     >>\n>     >> # A PoP should be generated on demand.\n>     >> # It should only be usable once to avoid issues due to theft.\n>     >> # It should be able to create a PoP for any payment, regardless\n>     of script\n>     >> type (P2SH, P2PKH, etc.).\n>     >> # It should prove that you have enough credentials to unlock\n>     all the\n>     >> inputs of the proven transaction.\n>     >> # It should be easy to implement by wallets and servers to ease\n>     adoption.\n>     >>\n>     >> Current methods of proving a payment:\n>     >>\n>     >> * In BIP0070, the PaymentRequest together with the transactions\n>     fulfilling\n>     >> the request makes some sort of proof. However, it does not meet\n>     1, 2 or 4\n>     >> and it obviously only meets 3 if the payment is made through\n>     BIP0070. Also,\n>     >> there's no standard way to request/provide the proof. If\n>     standardized it\n>     >> would probably meet 5.\n>     >> * Signing messages, chosen by the server, with the private keys\n>     used to\n>     >> sign the transaction. This could meet 1 and 2 but probably not\n>     3. This is\n>     >> not standardized either. 4 Could be met if designed so.\n>     >>\n>     >> If an input script type is P2SH, any satisfying script should\n>     do, just as\n>     >> if it was a payment. For M-of-N multisig scripts, that would\n>     mean that any\n>     >> set of M keys should be sufficient, not neccesarily the same\n>     set of M keys\n>     >> that signed the transaction. This is important because strictly\n>     demanding\n>     >> the same set of M keys would defeat the purpose of a multisig\n>     address.\n>     >>\n>     >> == Specification ==\n>     >>\n>     >> === Data structure ===\n>     >>\n>     >> A proof of payment for a transaction T, here called PoP(T), is\n>     used to\n>     >> prove that one has ownership of the credentials needed to\n>     unlock all the\n>     >> inputs of T. It has the exact same structure as a bitcoin\n>     transaction with\n>     >> the same inputs as T and in the same order as in T, but with\n>     each sequence\n>     >> number set to 0. There is exactly one output, here called the\n>     pop output,\n>     >> with value 0. The pop output must have the following format:\n>     >>\n>     >>  OP_RETURN <version> <txid> <nonce>\n>     >>\n>     >> {|\n>     >> ! Field        !! Size [B] !! Description\n>     >> |-\n>     >> | &lt;version> || 2        || Version, little endian, currently\n>     0x01 0x00\n>     >> |-\n>     >> | &lt;txid>    || 32       || The transaction to prove\n>     >> |-\n>     >> | &lt;nonce>   || 6        || Random data\n>     >> |}\n>     >>\n>     >> The lock_time of the PoP must be set to 499999999 to prevent\n>     the PoP from\n>     >> being included in a block, should it appear on the bitcoin p2p\n>     network. This\n>     >> is also the reason for setting the sequence numbers to 0, since\n>     sequence\n>     >> number of ffffffff would make lock_time ineffective. This\n>     specification\n>     >> demands that all input sequence numbers are 0, not just one of\n>     them, which\n>     >> would be sufficient to make lock_time effective. This is for\n>     simplicity\n>     >> reasons.\n>     >>\n>     >> An illustration of the PoP data structure and its original\n>     payment is\n>     >> shown below.\n>     >>\n>     >> <pre>\n>     >>   T\n>     >>  +------------------------------------------------+\n>     >>  |inputs                | outputs                 |\n>     >>  |       Value,Sequence | Value,Script            |\n>     >>  +------------------------------------------------+\n>     >>  |input0 1,ffffffff     | 0,pay to A              |\n>     >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |\n>     >>  |input2 4,ffffffff     | 1,pay to B              |\n>     >>  |                      | 4,pay to C              |\n>     >>  +------------------------------------------------+\n>     >>\n>     >>   PoP(T)\n>     >>  +-------------------------------------------------------------+\n>     >>  | inputs               | outputs                              |\n>     >>  |       Value,Sequence | Value,Script                         |\n>     >>  +-------------------------------------------------------------+\n>     >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |\n>     >>  |input1 3,00000000     |                                      |\n>     >>  |input2 4,00000000     |                                      |\n>     >>  +-------------------------------------------------------------+\n>     >>  | lock_time=499999999                                         |\n>     >>  +-------------------------------------------------------------+\n>     >> </pre>\n>     >>\n>     >> The PoP is signed using the same signing process that is used\n>     for bitcoin\n>     >> transactions.\n>     >>\n>     >> The purpose of the nonce is to make it harder to use a stolen\n>     PoP; Once\n>     >> the PoP has reached the server, that PoP is useless since the\n>     server will\n>     >> generate a new nonce for every PoP request.\n>     >>\n>     >> === Process ===\n>     >>\n>     >> # A proof of payment request is sent from the server to the\n>     wallet. The\n>     >> PoP request contains:\n>     >> ## a random nonce\n>     >> ## a destination where to send the PoP, for example a https URL\n>     >> ## data hinting the wallet which transaction to create a proof\n>     for. For\n>     >> example:\n>     >> ##* txid, if known by the server\n>     >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a\n>     BIP0070\n>     >> payment)\n>     >> ##* amount, label, message or other information from a BIP0021 URI\n>     >> # The wallet identifies a transaction T, if possible. Otherwise\n>     it asks\n>     >> the user to select among the ones that match the hints in 1.iii.\n>     >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the\n>     user to\n>     >> sign it.\n>     >> # The user confirms\n>     >> # The UPoP(T) is signed by the wallet, creating PoP(T).\n>     >> # The PoP is sent to the destination in 1.ii.\n>     >> # The server receiving the PoP validates it and responds with\n>     \u201cvalid\u201d or\n>     >> \u201cinvalid\u201d.\n>     >> # The wallet displays the response in some way to the user.\n>     >>\n>     >> '''Remarks:'''\n>     >>\n>     >> * The method of transferring the PoP request at step 1 is not\n>     specified\n>     >> here. Instead that is specified in separate specifications. See\n>     [btcpop\n>     >> scheme BIP](btcpop scheme BIP).\n>     >> * The nonce must be randomly generated by the server for every\n>     new PoP\n>     >> request.\n>     >>\n>     >> === Validating a PoP ===\n>     >>\n>     >> The server needs to validate the PoP and reply with \"valid\" or\n>     \"invalid\".\n>     >> That process is outlined below. If any step fails, the\n>     validation is aborted\n>     >> and \"invalid\" is returned:\n>     >>\n>     >> # Check the format of the PoP. It must pass normal transaction\n>     checks,\n>     >> except that the inputs may already be spent.\n>     >> # Check that lock_time is 499999999.\n>     >> # Check that there is exactly one output. This output must have\n>     value 0\n>     >> and conform to the OP_RETURN output format outlined above.\n>     >> # Check that the nonce is the same as the one requested.\n>     >> # Check that the inputs of the PoP are exactly the same as in\n>     transaction\n>     >> T, except that the sequence numbers must all be 0. The ordering\n>     of the\n>     >> inputs must also be the same as in T.\n>     >> # Run the scripts of all the inputs. All scipts must return true.\n>     >> # Check that the txid in the PoP output is the transaction you\n>     actually\n>     >> want proof for. If you don\u2019t know exactly what transaction you\n>     want proof\n>     >> for, check that the transaction actually pays for the\n>     product/service you\n>     >> deliver.\n>     >> # Return \"valid\".\n>     >>\n>     >> == Security considerations ==\n>     >>\n>     >> * Someone can intercept the PoP-request and change any\n>     parameter in it.\n>     >> These can be mitigated by using secure connections. For example:\n>     >> ** Pop destination - Stealing your PoP.\n>     >> ** label - Trick you to sign an unintended pop or set a label\n>     that your\n>     >> wallet doesn't have any record for, resulting in a broken\n>     service. Always\n>     >> check the PoP before signing.\n>     >> ** nonce - Your pop will not validate on server.\n>     >> * Someone can steal a PoP, for example by tampering with the\n>     PoP request,\n>     >> and try to use the service hoping to get a matching nonce.\n>     Probability per\n>     >> try: 1/(2^48). The server should have a mechanism for detecting\n>     a brute\n>     >> force attack of this kind, or at least slow down the process by\n>     delaying the\n>     >> PoP request by some 100 ms or so.\n>     >> * Even if a wallet has no funds it might still be valuable as a\n>     generator\n>     >> for PoPs. This makes it important to keep the security of the\n>     wallet after\n>     >> it has been emptied.\n>     >> * Transaction malleability may cause the server to have another\n>     >> transaction id for a payment than the client's wallet. In that\n>     case the\n>     >> wallet will not be able to prove the transaction to the server.\n>     Wallets\n>     >> should not rely on the transaction id of the outgoing\n>     transaction. Instead\n>     >> it should listen for the transaction on the network and put\n>     that in its list\n>     >> of transactions.\n>     >>\n>     >> == Reference implementation ==\n>     >>\n>     >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n>     >>\n>     >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n>     >>\n>     >> == References ==\n>     >>\n>     >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki\n>     BIP0021]:\n>     >> URI Scheme\n>     >>\n>     >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki\n>     BIP0070]:\n>     >> Payment Protocol\n>     >>\n>     >> [[btcpop scheme BIP]]\n>     >>\n>     >> #########################################################\n>     >>\n>     >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se\n>     <mailto:kalle at rosenbaum.se>>:\n>     >> > Thank you all for the feedback.\n>     >> >\n>     >> > I will change the data structure as follows:\n>     >> >\n>     >> > * There will be only one output, the \"pop output\", and no\n>     outputs from\n>     >> > T will be copied to the PoP.\n>     >> > * The pop output will have value 0.\n>     >> > * The sequence number of all inputs of the PoP will be set to\n>     0. I\n>     >> > chose to set it to 0 for all inputs for simplicity.\n>     >> > * The lock_time of the PoP is always set to 499999999.\n>     >> >\n>     >> > Any comments on this?\n>     >> >\n>     >> > /Kalle\n>     >> >\n>     >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum\n>     <kalle at rosenbaum.se <mailto:kalle at rosenbaum.se>>:\n>     >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com\n>     <mailto:tomh at thinlink.com>>:\n>     >> >>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\"\n>     <kalle at rosenbaum.se <mailto:kalle at rosenbaum.se>> wrote:\n>     >> >>>\n>     >> >>>> I'm open to changes here.\n>     >> >>>\n>     >> >>> I suggest:\n>     >> >>>\n>     >> >>> - Don't include any real outputs.   They are redundant\n>     because the\n>     >> >>> txid is\n>     >> >>> already referenced.\n>     >> >>\n>     >> >> with the nLocktime solution, the copied outputs are not needed.\n>     >> >>\n>     >> >>>\n>     >> >>> - Start the proof script, which should be invalid, with a magic\n>     >> >>> constant and\n>     >> >>> include space for future expansion.  This makes PoP's easy\n>     to identify\n>     >> >>> and\n>     >> >>> extend.\n>     >> >>\n>     >> >> I did remore the constant (a \"PoP\" literal ascii encoded string)\n>     >> >> because it didn't add much. The recipient will expect a pop,\n>     so it\n>     >> >> will simply treat it as one. I did add a 2 byte version\n>     field to make\n>     >> >> it extendable.\n>     >> >>\n>     >> >>>\n>     >> >>> - \"Proof of Potential\"\n>     >> >>\n>     >> >> Noted :-)\n>     >> >>\n>     >> >> Thank you\n>     >> >> /Kalle\n>     >>\n>     >>\n>     >>\n>     ------------------------------------------------------------------------------\n>     >>\n>     >> _______________________________________________\n>     >> Bitcoin-development mailing list\n>     >> Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>     >>\n>     >\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/c8479397/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-16T12:12:49",
                "message_text_only": "2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>\n> Kalle goes to some trouble to describe how merchants need to ensure that\n> they only accept a PoP provided as a response to their challenge.\n>\n\nDo you mean that it will be hard to explain to merchants that they\nmust check the nonce in the PoP so that it matches the nonce in the\npop request? I think not, this is a commonly used pattern that anyone\nshould be able to grasp. Anyway, merchants will probably use a library\n(though yet non-existing) for PoP, that will hide the gory details. I\nalso think that payment providers may want to add PoP to their\noffering to customers (merchants).\n\nRegards,\n/Kalle\n\n>\n>\n> On 6/15/2015 3:00 AM, Pieter Wuille wrote:\n>\n> I did misunderstand that. That changes things significantly.\n>\n> However, having paid is not the same as having had access to the input\n> coins. What about shared wallets or coinjoin?\n>\n> Also, if I understand correctly, there is no commitment to anything you're\n> trying to say about the sender? So once I obtain a proof-of-payment from you\n> about something you paid, I can go claim that it's mine?\n>\n> Why does anyone care who paid? This is like walking into a coffeshop,\n> noticing I don't have money with me, let me friend pay for me, and then have\n> the shop insist that I can't drink it because I'm not the buyer.\n>\n> Track payments, don't try to assign identities to payers.\n>\n> On Jun 15, 2015 11:35 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>\n>> Hi Pieter!\n>>\n>> It is intended to be a proof that you *have paid* for something. Not\n>> that you have the intent to pay for something. You cannot use PoP\n>> without a transaction to prove.\n>>\n>> So, yes, it's just a proof of access to certain coins that you no longer\n>> have.\n>>\n>> Maybe I don't understand you correctly?\n>>\n>> /Kalle\n>>\n>> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>> > Now that you have removed the outputs, I don't think it's even a intent\n>> > of\n>> > payment, but just a proof of access to certain coins.\n>> >\n>> > On Jun 15, 2015 11:24 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>> >>\n>> >> Hi all!\n>> >>\n>> >> I have made the discussed changes and updated my implementation\n>> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the\n>> >> changes:\n>> >>\n>> >> * There is now only one output, the \"pop output\", of value 0.\n>> >> * The sequence number of all inputs of the PoP must be set to 0. I\n>> >> chose to set it to 0 for all inputs for simplicity.\n>> >> * The lock_time of the PoP must be set to 499999999 (max block height\n>> >> lock\n>> >> time).\n>> >>\n>> >> The comments so far has been mainly positive or neutral. Are there any\n>> >> major objections against any of the two proposals? If not, I will ask\n>> >> Gregory Maxwell to assign them BIP numbers.\n>> >>\n>> >> The two BIP proposals can be found at\n>> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\n>> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The\n>> >> source\n>> >> for the Proof of Payment BIP proposal is also in-lined below.\n>> >>\n>> >> A number of alternative names have been proposed:\n>> >>\n>> >> * Proof of Potential\n>> >> * Proof of Control\n>> >> * Proof of Signature\n>> >> * Signatory Proof\n>> >> * Popo: Proof of payment origin\n>> >> * Pots: Proof of transaction signer\n>> >> * proof of transaction intent\n>> >> * Declaration of intent\n>> >> * Asset-access-and-action-affirmation, AAaAA, or A5\n>> >> * VeriBit\n>> >> * CertiBTC\n>> >> * VBit\n>> >> * PayID\n>> >>\n>> >> Given this list, I still think \"Proof of Payment\" is the most\n>> >> descriptive\n>> >> to non-technical people.\n>> >>\n>> >> Regards,\n>> >> Kalle\n>> >>\n>> >>\n>> >> #################################################\n>> >> <pre>\n>> >>   BIP: <BIP number>\n>> >>   Title: Proof of Payment\n>> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n>> >>   Status: Draft\n>> >>   Type: Standards Track\n>> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n>> >> </pre>\n>> >>\n>> >> == Abstract ==\n>> >>\n>> >> This BIP describes how a wallet can prove to a server that it has the\n>> >> ability to sign a certain transaction.\n>> >>\n>> >> == Motivation ==\n>> >>\n>> >> There are several scenarios in which it would be useful to prove that\n>> >> you\n>> >> have paid for something. For example:\n>> >>\n>> >> * A pre-paid hotel room where your PoP functions as a key to the door.\n>> >> * An online video rental service where you pay for a video and watch it\n>> >> on\n>> >> any device.\n>> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.\n>> >> During\n>> >> this period you can upload new content to the sign whenever you like\n>> >> using\n>> >> PoP.\n>> >> * Log in to a pay site using a PoP.\n>> >> * A parking lot you pay for monthly and the car authenticates itself\n>> >> using\n>> >> PoP.\n>> >> * A lottery where all participants pay to the same address, and the\n>> >> winner\n>> >> is selected among the transactions to that address. You exchange the\n>> >> prize\n>> >> for a PoP for the winning transaction.\n>> >>\n>> >> With Proof of Payment, these use cases can be achieved without any\n>> >> personal information (user name, password, e-mail address, etc) being\n>> >> involved.\n>> >>\n>> >> == Rationale ==\n>> >>\n>> >> Desirable properties:\n>> >>\n>> >> # A PoP should be generated on demand.\n>> >> # It should only be usable once to avoid issues due to theft.\n>> >> # It should be able to create a PoP for any payment, regardless of\n>> >> script\n>> >> type (P2SH, P2PKH, etc.).\n>> >> # It should prove that you have enough credentials to unlock all the\n>> >> inputs of the proven transaction.\n>> >> # It should be easy to implement by wallets and servers to ease\n>> >> adoption.\n>> >>\n>> >> Current methods of proving a payment:\n>> >>\n>> >> * In BIP0070, the PaymentRequest together with the transactions\n>> >> fulfilling\n>> >> the request makes some sort of proof. However, it does not meet 1, 2 or\n>> >> 4\n>> >> and it obviously only meets 3 if the payment is made through BIP0070.\n>> >> Also,\n>> >> there's no standard way to request/provide the proof. If standardized\n>> >> it\n>> >> would probably meet 5.\n>> >> * Signing messages, chosen by the server, with the private keys used to\n>> >> sign the transaction. This could meet 1 and 2 but probably not 3. This\n>> >> is\n>> >> not standardized either. 4 Could be met if designed so.\n>> >>\n>> >> If an input script type is P2SH, any satisfying script should do, just\n>> >> as\n>> >> if it was a payment. For M-of-N multisig scripts, that would mean that\n>> >> any\n>> >> set of M keys should be sufficient, not neccesarily the same set of M\n>> >> keys\n>> >> that signed the transaction. This is important because strictly\n>> >> demanding\n>> >> the same set of M keys would defeat the purpose of a multisig address.\n>> >>\n>> >> == Specification ==\n>> >>\n>> >> === Data structure ===\n>> >>\n>> >> A proof of payment for a transaction T, here called PoP(T), is used to\n>> >> prove that one has ownership of the credentials needed to unlock all\n>> >> the\n>> >> inputs of T. It has the exact same structure as a bitcoin transaction\n>> >> with\n>> >> the same inputs as T and in the same order as in T, but with each\n>> >> sequence\n>> >> number set to 0. There is exactly one output, here called the pop\n>> >> output,\n>> >> with value 0. The pop output must have the following format:\n>> >>\n>> >>  OP_RETURN <version> <txid> <nonce>\n>> >>\n>> >> {|\n>> >> ! Field        !! Size [B] !! Description\n>> >> |-\n>> >> | &lt;version> || 2        || Version, little endian, currently 0x01\n>> >> 0x00\n>> >> |-\n>> >> | &lt;txid>    || 32       || The transaction to prove\n>> >> |-\n>> >> | &lt;nonce>   || 6        || Random data\n>> >> |}\n>> >>\n>> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP\n>> >> from\n>> >> being included in a block, should it appear on the bitcoin p2p network.\n>> >> This\n>> >> is also the reason for setting the sequence numbers to 0, since\n>> >> sequence\n>> >> number of ffffffff would make lock_time ineffective. This specification\n>> >> demands that all input sequence numbers are 0, not just one of them,\n>> >> which\n>> >> would be sufficient to make lock_time effective. This is for simplicity\n>> >> reasons.\n>> >>\n>> >> An illustration of the PoP data structure and its original payment is\n>> >> shown below.\n>> >>\n>> >> <pre>\n>> >>   T\n>> >>  +------------------------------------------------+\n>> >>  |inputs                | outputs                 |\n>> >>  |       Value,Sequence | Value,Script            |\n>> >>  +------------------------------------------------+\n>> >>  |input0 1,ffffffff     | 0,pay to A              |\n>> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |\n>> >>  |input2 4,ffffffff     | 1,pay to B              |\n>> >>  |                      | 4,pay to C              |\n>> >>  +------------------------------------------------+\n>> >>\n>> >>   PoP(T)\n>> >>  +-------------------------------------------------------------+\n>> >>  | inputs               | outputs                              |\n>> >>  |       Value,Sequence | Value,Script                         |\n>> >>  +-------------------------------------------------------------+\n>> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |\n>> >>  |input1 3,00000000     |                                      |\n>> >>  |input2 4,00000000     |                                      |\n>> >>  +-------------------------------------------------------------+\n>> >>  | lock_time=499999999                                         |\n>> >>  +-------------------------------------------------------------+\n>> >> </pre>\n>> >>\n>> >> The PoP is signed using the same signing process that is used for\n>> >> bitcoin\n>> >> transactions.\n>> >>\n>> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once\n>> >> the PoP has reached the server, that PoP is useless since the server\n>> >> will\n>> >> generate a new nonce for every PoP request.\n>> >>\n>> >> === Process ===\n>> >>\n>> >> # A proof of payment request is sent from the server to the wallet. The\n>> >> PoP request contains:\n>> >> ## a random nonce\n>> >> ## a destination where to send the PoP, for example a https URL\n>> >> ## data hinting the wallet which transaction to create a proof for. For\n>> >> example:\n>> >> ##* txid, if known by the server\n>> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\n>> >> payment)\n>> >> ##* amount, label, message or other information from a BIP0021 URI\n>> >> # The wallet identifies a transaction T, if possible. Otherwise it asks\n>> >> the user to select among the ones that match the hints in 1.iii.\n>> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\n>> >> sign it.\n>> >> # The user confirms\n>> >> # The UPoP(T) is signed by the wallet, creating PoP(T).\n>> >> # The PoP is sent to the destination in 1.ii.\n>> >> # The server receiving the PoP validates it and responds with \u201cvalid\u201d\n>> >> or\n>> >> \u201cinvalid\u201d.\n>> >> # The wallet displays the response in some way to the user.\n>> >>\n>> >> '''Remarks:'''\n>> >>\n>> >> * The method of transferring the PoP request at step 1 is not specified\n>> >> here. Instead that is specified in separate specifications. See [btcpop\n>> >> scheme BIP](btcpop scheme BIP).\n>> >> * The nonce must be randomly generated by the server for every new PoP\n>> >> request.\n>> >>\n>> >> === Validating a PoP ===\n>> >>\n>> >> The server needs to validate the PoP and reply with \"valid\" or\n>> >> \"invalid\".\n>> >> That process is outlined below. If any step fails, the validation is\n>> >> aborted\n>> >> and \"invalid\" is returned:\n>> >>\n>> >> # Check the format of the PoP. It must pass normal transaction checks,\n>> >> except that the inputs may already be spent.\n>> >> # Check that lock_time is 499999999.\n>> >> # Check that there is exactly one output. This output must have value 0\n>> >> and conform to the OP_RETURN output format outlined above.\n>> >> # Check that the nonce is the same as the one requested.\n>> >> # Check that the inputs of the PoP are exactly the same as in\n>> >> transaction\n>> >> T, except that the sequence numbers must all be 0. The ordering of the\n>> >> inputs must also be the same as in T.\n>> >> # Run the scripts of all the inputs. All scipts must return true.\n>> >> # Check that the txid in the PoP output is the transaction you actually\n>> >> want proof for. If you don\u2019t know exactly what transaction you want\n>> >> proof\n>> >> for, check that the transaction actually pays for the product/service\n>> >> you\n>> >> deliver.\n>> >> # Return \"valid\".\n>> >>\n>> >> == Security considerations ==\n>> >>\n>> >> * Someone can intercept the PoP-request and change any parameter in it.\n>> >> These can be mitigated by using secure connections. For example:\n>> >> ** Pop destination - Stealing your PoP.\n>> >> ** label - Trick you to sign an unintended pop or set a label that your\n>> >> wallet doesn't have any record for, resulting in a broken service.\n>> >> Always\n>> >> check the PoP before signing.\n>> >> ** nonce - Your pop will not validate on server.\n>> >> * Someone can steal a PoP, for example by tampering with the PoP\n>> >> request,\n>> >> and try to use the service hoping to get a matching nonce. Probability\n>> >> per\n>> >> try: 1/(2^48). The server should have a mechanism for detecting a brute\n>> >> force attack of this kind, or at least slow down the process by\n>> >> delaying the\n>> >> PoP request by some 100 ms or so.\n>> >> * Even if a wallet has no funds it might still be valuable as a\n>> >> generator\n>> >> for PoPs. This makes it important to keep the security of the wallet\n>> >> after\n>> >> it has been emptied.\n>> >> * Transaction malleability may cause the server to have another\n>> >> transaction id for a payment than the client's wallet. In that case the\n>> >> wallet will not be able to prove the transaction to the server. Wallets\n>> >> should not rely on the transaction id of the outgoing transaction.\n>> >> Instead\n>> >> it should listen for the transaction on the network and put that in its\n>> >> list\n>> >> of transactions.\n>> >>\n>> >> == Reference implementation ==\n>> >>\n>> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n>> >>\n>> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n>> >>\n>> >> == References ==\n>> >>\n>> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki\n>> >> BIP0021]:\n>> >> URI Scheme\n>> >>\n>> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki\n>> >> BIP0070]:\n>> >> Payment Protocol\n>> >>\n>> >> [[btcpop scheme BIP]]\n>> >>\n>> >> #########################################################\n>> >>\n>> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>> >> > Thank you all for the feedback.\n>> >> >\n>> >> > I will change the data structure as follows:\n>> >> >\n>> >> > * There will be only one output, the \"pop output\", and no outputs\n>> >> > from\n>> >> > T will be copied to the PoP.\n>> >> > * The pop output will have value 0.\n>> >> > * The sequence number of all inputs of the PoP will be set to 0. I\n>> >> > chose to set it to 0 for all inputs for simplicity.\n>> >> > * The lock_time of the PoP is always set to 499999999.\n>> >> >\n>> >> > Any comments on this?\n>> >> >\n>> >> > /Kalle\n>> >> >\n>> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>> >> >>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se>\n>> >> >>> wrote:\n>> >> >>>\n>> >> >>>> I'm open to changes here.\n>> >> >>>\n>> >> >>> I suggest:\n>> >> >>>\n>> >> >>> - Don't include any real outputs.   They are redundant because the\n>> >> >>> txid is\n>> >> >>> already referenced.\n>> >> >>\n>> >> >> with the nLocktime solution, the copied outputs are not needed.\n>> >> >>\n>> >> >>>\n>> >> >>> - Start the proof script, which should be invalid, with a magic\n>> >> >>> constant and\n>> >> >>> include space for future expansion.  This makes PoP's easy to\n>> >> >>> identify\n>> >> >>> and\n>> >> >>> extend.\n>> >> >>\n>> >> >> I did remore the constant (a \"PoP\" literal ascii encoded string)\n>> >> >> because it didn't add much. The recipient will expect a pop, so it\n>> >> >> will simply treat it as one. I did add a 2 byte version field to\n>> >> >> make\n>> >> >> it extendable.\n>> >> >>\n>> >> >>>\n>> >> >>> - \"Proof of Potential\"\n>> >> >>\n>> >> >> Noted :-)\n>> >> >>\n>> >> >> Thank you\n>> >> >> /Kalle\n>> >>\n>> >>\n>> >>\n>> >> ------------------------------------------------------------------------------\n>> >>\n>> >> _______________________________________________\n>> >> Bitcoin-development mailing list\n>> >> Bitcoin-development at lists.sourceforge.net\n>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> >>\n>> >\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-16T12:31:19",
                "message_text_only": "Another thing worth mentioning is that an SPV wallet cannot validate a\nPoP without fetching the input transactions of the PoP from an\nexternal (not bitcoin network) source, for example chain.com or some\nother trusted full node's API.\n\nThe validation of the PoP depends on the external source(s) being\nhonest. It can make a valid pop look invalid, but it cannot make an\ninvalid pop look valid.\n\n/Kalle\n\n\n\n2015-06-16 14:12 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n> 2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>>\n>> Kalle goes to some trouble to describe how merchants need to ensure that\n>> they only accept a PoP provided as a response to their challenge.\n>>\n>\n> Do you mean that it will be hard to explain to merchants that they\n> must check the nonce in the PoP so that it matches the nonce in the\n> pop request? I think not, this is a commonly used pattern that anyone\n> should be able to grasp. Anyway, merchants will probably use a library\n> (though yet non-existing) for PoP, that will hide the gory details. I\n> also think that payment providers may want to add PoP to their\n> offering to customers (merchants).\n>\n> Regards,\n> /Kalle\n>\n>>\n>>\n>> On 6/15/2015 3:00 AM, Pieter Wuille wrote:\n>>\n>> I did misunderstand that. That changes things significantly.\n>>\n>> However, having paid is not the same as having had access to the input\n>> coins. What about shared wallets or coinjoin?\n>>\n>> Also, if I understand correctly, there is no commitment to anything you're\n>> trying to say about the sender? So once I obtain a proof-of-payment from you\n>> about something you paid, I can go claim that it's mine?\n>>\n>> Why does anyone care who paid? This is like walking into a coffeshop,\n>> noticing I don't have money with me, let me friend pay for me, and then have\n>> the shop insist that I can't drink it because I'm not the buyer.\n>>\n>> Track payments, don't try to assign identities to payers.\n>>\n>> On Jun 15, 2015 11:35 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>>\n>>> Hi Pieter!\n>>>\n>>> It is intended to be a proof that you *have paid* for something. Not\n>>> that you have the intent to pay for something. You cannot use PoP\n>>> without a transaction to prove.\n>>>\n>>> So, yes, it's just a proof of access to certain coins that you no longer\n>>> have.\n>>>\n>>> Maybe I don't understand you correctly?\n>>>\n>>> /Kalle\n>>>\n>>> 2015-06-15 11:27 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>>> > Now that you have removed the outputs, I don't think it's even a intent\n>>> > of\n>>> > payment, but just a proof of access to certain coins.\n>>> >\n>>> > On Jun 15, 2015 11:24 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>> >>\n>>> >> Hi all!\n>>> >>\n>>> >> I have made the discussed changes and updated my implementation\n>>> >> (https://github.com/kallerosenbaum/poppoc) accordingly. These are the\n>>> >> changes:\n>>> >>\n>>> >> * There is now only one output, the \"pop output\", of value 0.\n>>> >> * The sequence number of all inputs of the PoP must be set to 0. I\n>>> >> chose to set it to 0 for all inputs for simplicity.\n>>> >> * The lock_time of the PoP must be set to 499999999 (max block height\n>>> >> lock\n>>> >> time).\n>>> >>\n>>> >> The comments so far has been mainly positive or neutral. Are there any\n>>> >> major objections against any of the two proposals? If not, I will ask\n>>> >> Gregory Maxwell to assign them BIP numbers.\n>>> >>\n>>> >> The two BIP proposals can be found at\n>>> >> https://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\n>>> >> https://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP. The\n>>> >> source\n>>> >> for the Proof of Payment BIP proposal is also in-lined below.\n>>> >>\n>>> >> A number of alternative names have been proposed:\n>>> >>\n>>> >> * Proof of Potential\n>>> >> * Proof of Control\n>>> >> * Proof of Signature\n>>> >> * Signatory Proof\n>>> >> * Popo: Proof of payment origin\n>>> >> * Pots: Proof of transaction signer\n>>> >> * proof of transaction intent\n>>> >> * Declaration of intent\n>>> >> * Asset-access-and-action-affirmation, AAaAA, or A5\n>>> >> * VeriBit\n>>> >> * CertiBTC\n>>> >> * VBit\n>>> >> * PayID\n>>> >>\n>>> >> Given this list, I still think \"Proof of Payment\" is the most\n>>> >> descriptive\n>>> >> to non-technical people.\n>>> >>\n>>> >> Regards,\n>>> >> Kalle\n>>> >>\n>>> >>\n>>> >> #################################################\n>>> >> <pre>\n>>> >>   BIP: <BIP number>\n>>> >>   Title: Proof of Payment\n>>> >>   Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n>>> >>   Status: Draft\n>>> >>   Type: Standards Track\n>>> >>   Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n>>> >> </pre>\n>>> >>\n>>> >> == Abstract ==\n>>> >>\n>>> >> This BIP describes how a wallet can prove to a server that it has the\n>>> >> ability to sign a certain transaction.\n>>> >>\n>>> >> == Motivation ==\n>>> >>\n>>> >> There are several scenarios in which it would be useful to prove that\n>>> >> you\n>>> >> have paid for something. For example:\n>>> >>\n>>> >> * A pre-paid hotel room where your PoP functions as a key to the door.\n>>> >> * An online video rental service where you pay for a video and watch it\n>>> >> on\n>>> >> any device.\n>>> >> * An ad-sign where you pay in advance for e.g. 2 weeks exclusivity.\n>>> >> During\n>>> >> this period you can upload new content to the sign whenever you like\n>>> >> using\n>>> >> PoP.\n>>> >> * Log in to a pay site using a PoP.\n>>> >> * A parking lot you pay for monthly and the car authenticates itself\n>>> >> using\n>>> >> PoP.\n>>> >> * A lottery where all participants pay to the same address, and the\n>>> >> winner\n>>> >> is selected among the transactions to that address. You exchange the\n>>> >> prize\n>>> >> for a PoP for the winning transaction.\n>>> >>\n>>> >> With Proof of Payment, these use cases can be achieved without any\n>>> >> personal information (user name, password, e-mail address, etc) being\n>>> >> involved.\n>>> >>\n>>> >> == Rationale ==\n>>> >>\n>>> >> Desirable properties:\n>>> >>\n>>> >> # A PoP should be generated on demand.\n>>> >> # It should only be usable once to avoid issues due to theft.\n>>> >> # It should be able to create a PoP for any payment, regardless of\n>>> >> script\n>>> >> type (P2SH, P2PKH, etc.).\n>>> >> # It should prove that you have enough credentials to unlock all the\n>>> >> inputs of the proven transaction.\n>>> >> # It should be easy to implement by wallets and servers to ease\n>>> >> adoption.\n>>> >>\n>>> >> Current methods of proving a payment:\n>>> >>\n>>> >> * In BIP0070, the PaymentRequest together with the transactions\n>>> >> fulfilling\n>>> >> the request makes some sort of proof. However, it does not meet 1, 2 or\n>>> >> 4\n>>> >> and it obviously only meets 3 if the payment is made through BIP0070.\n>>> >> Also,\n>>> >> there's no standard way to request/provide the proof. If standardized\n>>> >> it\n>>> >> would probably meet 5.\n>>> >> * Signing messages, chosen by the server, with the private keys used to\n>>> >> sign the transaction. This could meet 1 and 2 but probably not 3. This\n>>> >> is\n>>> >> not standardized either. 4 Could be met if designed so.\n>>> >>\n>>> >> If an input script type is P2SH, any satisfying script should do, just\n>>> >> as\n>>> >> if it was a payment. For M-of-N multisig scripts, that would mean that\n>>> >> any\n>>> >> set of M keys should be sufficient, not neccesarily the same set of M\n>>> >> keys\n>>> >> that signed the transaction. This is important because strictly\n>>> >> demanding\n>>> >> the same set of M keys would defeat the purpose of a multisig address.\n>>> >>\n>>> >> == Specification ==\n>>> >>\n>>> >> === Data structure ===\n>>> >>\n>>> >> A proof of payment for a transaction T, here called PoP(T), is used to\n>>> >> prove that one has ownership of the credentials needed to unlock all\n>>> >> the\n>>> >> inputs of T. It has the exact same structure as a bitcoin transaction\n>>> >> with\n>>> >> the same inputs as T and in the same order as in T, but with each\n>>> >> sequence\n>>> >> number set to 0. There is exactly one output, here called the pop\n>>> >> output,\n>>> >> with value 0. The pop output must have the following format:\n>>> >>\n>>> >>  OP_RETURN <version> <txid> <nonce>\n>>> >>\n>>> >> {|\n>>> >> ! Field        !! Size [B] !! Description\n>>> >> |-\n>>> >> | &lt;version> || 2        || Version, little endian, currently 0x01\n>>> >> 0x00\n>>> >> |-\n>>> >> | &lt;txid>    || 32       || The transaction to prove\n>>> >> |-\n>>> >> | &lt;nonce>   || 6        || Random data\n>>> >> |}\n>>> >>\n>>> >> The lock_time of the PoP must be set to 499999999 to prevent the PoP\n>>> >> from\n>>> >> being included in a block, should it appear on the bitcoin p2p network.\n>>> >> This\n>>> >> is also the reason for setting the sequence numbers to 0, since\n>>> >> sequence\n>>> >> number of ffffffff would make lock_time ineffective. This specification\n>>> >> demands that all input sequence numbers are 0, not just one of them,\n>>> >> which\n>>> >> would be sufficient to make lock_time effective. This is for simplicity\n>>> >> reasons.\n>>> >>\n>>> >> An illustration of the PoP data structure and its original payment is\n>>> >> shown below.\n>>> >>\n>>> >> <pre>\n>>> >>   T\n>>> >>  +------------------------------------------------+\n>>> >>  |inputs                | outputs                 |\n>>> >>  |       Value,Sequence | Value,Script            |\n>>> >>  +------------------------------------------------+\n>>> >>  |input0 1,ffffffff     | 0,pay to A              |\n>>> >>  |input1 3,ffffffff     | 2,OP_RETURN <some data> |\n>>> >>  |input2 4,ffffffff     | 1,pay to B              |\n>>> >>  |                      | 4,pay to C              |\n>>> >>  +------------------------------------------------+\n>>> >>\n>>> >>   PoP(T)\n>>> >>  +-------------------------------------------------------------+\n>>> >>  | inputs               | outputs                              |\n>>> >>  |       Value,Sequence | Value,Script                         |\n>>> >>  +-------------------------------------------------------------+\n>>> >>  |input0 1,00000000     | 0,OP_RETURN <version> <txid> <nonce> |\n>>> >>  |input1 3,00000000     |                                      |\n>>> >>  |input2 4,00000000     |                                      |\n>>> >>  +-------------------------------------------------------------+\n>>> >>  | lock_time=499999999                                         |\n>>> >>  +-------------------------------------------------------------+\n>>> >> </pre>\n>>> >>\n>>> >> The PoP is signed using the same signing process that is used for\n>>> >> bitcoin\n>>> >> transactions.\n>>> >>\n>>> >> The purpose of the nonce is to make it harder to use a stolen PoP; Once\n>>> >> the PoP has reached the server, that PoP is useless since the server\n>>> >> will\n>>> >> generate a new nonce for every PoP request.\n>>> >>\n>>> >> === Process ===\n>>> >>\n>>> >> # A proof of payment request is sent from the server to the wallet. The\n>>> >> PoP request contains:\n>>> >> ## a random nonce\n>>> >> ## a destination where to send the PoP, for example a https URL\n>>> >> ## data hinting the wallet which transaction to create a proof for. For\n>>> >> example:\n>>> >> ##* txid, if known by the server\n>>> >> ##* PaymentRequest.PaymentDetails.merchant_data (in case of a BIP0070\n>>> >> payment)\n>>> >> ##* amount, label, message or other information from a BIP0021 URI\n>>> >> # The wallet identifies a transaction T, if possible. Otherwise it asks\n>>> >> the user to select among the ones that match the hints in 1.iii.\n>>> >> # The wallet creates an unsigned PoP (UPoP) for T, and asks the user to\n>>> >> sign it.\n>>> >> # The user confirms\n>>> >> # The UPoP(T) is signed by the wallet, creating PoP(T).\n>>> >> # The PoP is sent to the destination in 1.ii.\n>>> >> # The server receiving the PoP validates it and responds with \u201cvalid\u201d\n>>> >> or\n>>> >> \u201cinvalid\u201d.\n>>> >> # The wallet displays the response in some way to the user.\n>>> >>\n>>> >> '''Remarks:'''\n>>> >>\n>>> >> * The method of transferring the PoP request at step 1 is not specified\n>>> >> here. Instead that is specified in separate specifications. See [btcpop\n>>> >> scheme BIP](btcpop scheme BIP).\n>>> >> * The nonce must be randomly generated by the server for every new PoP\n>>> >> request.\n>>> >>\n>>> >> === Validating a PoP ===\n>>> >>\n>>> >> The server needs to validate the PoP and reply with \"valid\" or\n>>> >> \"invalid\".\n>>> >> That process is outlined below. If any step fails, the validation is\n>>> >> aborted\n>>> >> and \"invalid\" is returned:\n>>> >>\n>>> >> # Check the format of the PoP. It must pass normal transaction checks,\n>>> >> except that the inputs may already be spent.\n>>> >> # Check that lock_time is 499999999.\n>>> >> # Check that there is exactly one output. This output must have value 0\n>>> >> and conform to the OP_RETURN output format outlined above.\n>>> >> # Check that the nonce is the same as the one requested.\n>>> >> # Check that the inputs of the PoP are exactly the same as in\n>>> >> transaction\n>>> >> T, except that the sequence numbers must all be 0. The ordering of the\n>>> >> inputs must also be the same as in T.\n>>> >> # Run the scripts of all the inputs. All scipts must return true.\n>>> >> # Check that the txid in the PoP output is the transaction you actually\n>>> >> want proof for. If you don\u2019t know exactly what transaction you want\n>>> >> proof\n>>> >> for, check that the transaction actually pays for the product/service\n>>> >> you\n>>> >> deliver.\n>>> >> # Return \"valid\".\n>>> >>\n>>> >> == Security considerations ==\n>>> >>\n>>> >> * Someone can intercept the PoP-request and change any parameter in it.\n>>> >> These can be mitigated by using secure connections. For example:\n>>> >> ** Pop destination - Stealing your PoP.\n>>> >> ** label - Trick you to sign an unintended pop or set a label that your\n>>> >> wallet doesn't have any record for, resulting in a broken service.\n>>> >> Always\n>>> >> check the PoP before signing.\n>>> >> ** nonce - Your pop will not validate on server.\n>>> >> * Someone can steal a PoP, for example by tampering with the PoP\n>>> >> request,\n>>> >> and try to use the service hoping to get a matching nonce. Probability\n>>> >> per\n>>> >> try: 1/(2^48). The server should have a mechanism for detecting a brute\n>>> >> force attack of this kind, or at least slow down the process by\n>>> >> delaying the\n>>> >> PoP request by some 100 ms or so.\n>>> >> * Even if a wallet has no funds it might still be valuable as a\n>>> >> generator\n>>> >> for PoPs. This makes it important to keep the security of the wallet\n>>> >> after\n>>> >> it has been emptied.\n>>> >> * Transaction malleability may cause the server to have another\n>>> >> transaction id for a payment than the client's wallet. In that case the\n>>> >> wallet will not be able to prove the transaction to the server. Wallets\n>>> >> should not rely on the transaction id of the outgoing transaction.\n>>> >> Instead\n>>> >> it should listen for the transaction on the network and put that in its\n>>> >> list\n>>> >> of transactions.\n>>> >>\n>>> >> == Reference implementation ==\n>>> >>\n>>> >> [https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n>>> >>\n>>> >> [https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n>>> >>\n>>> >> == References ==\n>>> >>\n>>> >> [https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki\n>>> >> BIP0021]:\n>>> >> URI Scheme\n>>> >>\n>>> >> [https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki\n>>> >> BIP0070]:\n>>> >> Payment Protocol\n>>> >>\n>>> >> [[btcpop scheme BIP]]\n>>> >>\n>>> >> #########################################################\n>>> >>\n>>> >> 2015-06-06 23:25 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>>> >> > Thank you all for the feedback.\n>>> >> >\n>>> >> > I will change the data structure as follows:\n>>> >> >\n>>> >> > * There will be only one output, the \"pop output\", and no outputs\n>>> >> > from\n>>> >> > T will be copied to the PoP.\n>>> >> > * The pop output will have value 0.\n>>> >> > * The sequence number of all inputs of the PoP will be set to 0. I\n>>> >> > chose to set it to 0 for all inputs for simplicity.\n>>> >> > * The lock_time of the PoP is always set to 499999999.\n>>> >> >\n>>> >> > Any comments on this?\n>>> >> >\n>>> >> > /Kalle\n>>> >> >\n>>> >> > 2015-06-06 19:00 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n>>> >> >> 2015-06-06 18:10 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>>> >> >>> On Jun 6, 2015 8:05 AM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se>\n>>> >> >>> wrote:\n>>> >> >>>\n>>> >> >>>> I'm open to changes here.\n>>> >> >>>\n>>> >> >>> I suggest:\n>>> >> >>>\n>>> >> >>> - Don't include any real outputs.   They are redundant because the\n>>> >> >>> txid is\n>>> >> >>> already referenced.\n>>> >> >>\n>>> >> >> with the nLocktime solution, the copied outputs are not needed.\n>>> >> >>\n>>> >> >>>\n>>> >> >>> - Start the proof script, which should be invalid, with a magic\n>>> >> >>> constant and\n>>> >> >>> include space for future expansion.  This makes PoP's easy to\n>>> >> >>> identify\n>>> >> >>> and\n>>> >> >>> extend.\n>>> >> >>\n>>> >> >> I did remore the constant (a \"PoP\" literal ascii encoded string)\n>>> >> >> because it didn't add much. The recipient will expect a pop, so it\n>>> >> >> will simply treat it as one. I did add a 2 byte version field to\n>>> >> >> make\n>>> >> >> it extendable.\n>>> >> >>\n>>> >> >>>\n>>> >> >>> - \"Proof of Potential\"\n>>> >> >>\n>>> >> >> Noted :-)\n>>> >> >>\n>>> >> >> Thank you\n>>> >> >> /Kalle\n>>> >>\n>>> >>\n>>> >>\n>>> >> ------------------------------------------------------------------------------\n>>> >>\n>>> >> _______________________________________________\n>>> >> Bitcoin-development mailing list\n>>> >> Bitcoin-development at lists.sourceforge.net\n>>> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>> >>\n>>> >\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>>\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-16T14:05:01",
                "message_text_only": "On 6/16/2015 5:12 AM, Kalle Rosenbaum wrote:\n> 2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>> Kalle goes to some trouble to describe how merchants need to ensure that\n>> they only accept a PoP provided as a response to their challenge.\n>>\n> Do you mean that it will be hard to explain to merchants that they\n> must check the nonce in the PoP so that it matches the nonce in the\n> pop request?\n\nSorry for the idiomatic language.  No, I just meant that you have\nthought it out in detail!  You standardize a latent capability of the\ncryptosystem.  It seems very powerful for some classes of users."
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-16T16:22:40",
                "message_text_only": "Thank you for the clarification Tom!\n\n/Kalle\n\n2015-06-16 16:05 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n> On 6/16/2015 5:12 AM, Kalle Rosenbaum wrote:\n>> 2015-06-16 7:26 GMT+02:00 Tom Harding <tomh at thinlink.com>:\n>>> Kalle goes to some trouble to describe how merchants need to ensure that\n>>> they only accept a PoP provided as a response to their challenge.\n>>>\n>> Do you mean that it will be hard to explain to merchants that they\n>> must check the nonce in the PoP so that it matches the nonce in the\n>> pop request?\n>\n> Sorry for the idiomatic language.  No, I just meant that you have\n> thought it out in detail!  You standardize a latent capability of the\n> cryptosystem.  It seems very powerful for some classes of users.\n>\n>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-16T19:48:54",
                "message_text_only": "I don't see why existing software could create a 40-byte OP_RETURN but not\nlarger? The limitation comes from a relay policy in full nodes, not a\nlimitation is wallet software... and PoPs are not relayed on the network.\n\nRegarding sharing, I think you're talking about a different use case. Say\nyou want to pay for 1-week valid entrance to some venue. I thought the\npurpose of the PoP was to be sure that only the person who paid for it, and\nnot anyone else can use it during that week.\n\nMy argument against that is that the original payer can also hand the\nprivate keys in his wallet to someone else, who would then become able to\ncreate PoPs for the service. He does not lose anything by this, assuming\nthe address is not reused.\n\nSo, using a token does not change anything, except it can be provided to\nthe payer - instead of relying on creating an implicit identity based on\nwho seems to have held particular private keys in the past.\nOn Jun 16, 2015 9:41 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n\n> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> > You can't avoid sharing the token, and you can't avoid sharing the\n> private\n> > keys used for signing either. If they are single use, you don't lose\n> > anything by sharing them.\n>\n> Forwarding the PoP request would be a way to avoid sharing keys, as\n> suggested above.\n>\n> >\n> > Also you are not creating a real transaction. Why does the OP_RETURN\n> > limitation matter?\n>\n> This was discussed in the beginning of this thread: \"The idea is to\n> simplify implementation. Existing software can be used as is to sign\n> and validate PoPs\"\n>\n> Regards,\n> Kalle\n>\n> >\n> > On Jun 16, 2015 9:22 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n> >>\n> >> Thank you for your comments Pieter! Please find my answers below.\n> >>\n> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se>\n> >> > wrote:\n> >> >>\n> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> >> >> I'm not sure if we will be able to support PoP with CoinJoin. Maybe\n> >> >> someone with more insight into CoinJoin have some input?\n> >> >\n> >> >\n> >> > Not really. The problem is that you assume a transaction corresponds\n> to\n> >> > a\n> >> > single payment. This is true for simple wallet use cases, but not\n> >> > compatible\n> >> > with CoinJoin, or with systems that for example would want to combine\n> >> > multiple payments in a single transaction.\n> >> >\n> >>\n> >> Yes, you are right. It's not compatible with CoinJoin and the likes.\n> >>\n> >> >\n> >> > 48 bits seems low to me, but it does indeed solve the problem. Why not\n> >> > 128\n> >> > or 256 bits?\n> >>\n> >> The nonce is limited because of the OP_RETURN output being limited to\n> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.\n> >>\n> >> >\n> >> >> > Why does anyone care who paid? This is like walking into a\n> coffeshop,\n> >> >> > noticing I don't have money with me, let me friend pay for me, and\n> >> >> > then\n> >> >> > have\n> >> >> > the shop insist that I can't drink it because I'm not the buyer.\n> >> >>\n> >> >> If you pay as you use the service (ie pay for coffee upfront),\n> there's\n> >> >> no need for PoP. Please see the Motivation section. But you are right\n> >> >> that you must have the wallet(s) that paid at hand when you issue a\n> >> >> PoP.\n> >> >>\n> >> >> >\n> >> >> > Track payments, don't try to assign identities to payers.\n> >> >>\n> >> >> Please elaborate, I don't understand what you mean here.\n> >> >\n> >> >\n> >> > I think that is a mistake. You should not assume that the wallet who\n> >> > held\n> >> > the coins is the payer/buyer. That's what I said earlier; you're\n> >> > implicitly\n> >> > creating an identity (the one who holds these keys) based on the\n> >> > transaction. This seems fundamentally wrong to me, and not necessary.\n> >> > The\n> >> > receiver should not care who paid or how, he should care what was\n> payed\n> >> > for.\n> >>\n> >> You are saying that it's a problem that the wallet used to pay, must\n> >> also be used to issue the PoP? That may very well be a problem in some\n> >> cases. People using PoP should of course be aware of it's limitations\n> >> and act accordingly, i.e. don't pay for concert tickets for a friend\n> >> and expect your friend to be able to enter the arena with her wallet.\n> >> As Tom Harding noted, it is possible to transfer keys to your friend's\n> >> wallet, but that might not be desirable if those keys are also used\n> >> for other payments. Also that would weaken the security of an HD\n> >> wallet, since a chain code along with a private key would reveal all\n> >> keys in that tree. Another solution is that your friend forwards the\n> >> PoP request to your wallet, through twitter or SMS, and you send the\n> >> PoP for her. Maybe that forwarding mechanism can be built into wallets\n> >> and automated so that the wallet automatically suggests to sign the\n> >> PoP for your friend. This is probably something to investigate\n> >> further, but not within the scope of this BIP.\n> >>\n> >> Of course the simplest solution would be to send money to your friend\n> >> first so that she can pay for the ticket from her own wallet, but\n> >> that's not always feasible.\n> >>\n> >> >\n> >> > The easiest solution to this IMHO would be an extension to the payment\n> >> > protocol that gives you (or your wallet) a token in return for paying,\n> >> > and\n> >> > that knowledge of that token is used to gain access to the services\n> you\n> >> > provide.\n> >> >\n> >>\n> >> That token would then be reusable. Someone stealing it would be able\n> >> to use it as much as she wants. That is what I want to avoid with PoP.\n> >> The BIP proposal briefly mentions something like this in the\n> >> rationale. I also had a discussion about this with Mike Hearn on this\n> >> list on Mars 13 that I think covers most pros and cons of the\n> >> different approaches.\n> >>\n> >> While your suggestion does indeed separate the transaction from the\n> >> proof of payment, it also assumes that the token is held in the wallet\n> >> that pays. Otherwise you would need to keep it in another safe place,\n> >> remember it's reusable. Where would that be? How would you transfer\n> >> that token to your friend?\n> >>\n> >> Thank you again for your comments. I appreciate it.\n> >>\n> >> Best regards,\n> >> Kalle\n> >>\n> >> > --\n> >> > Pieter\n> >> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/25631cfb/attachment.html>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-17T09:51:54",
                "message_text_only": "2015-06-16 21:48 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> I don't see why existing software could create a 40-byte OP_RETURN but not\n> larger? The limitation comes from a relay policy in full nodes, not a\n> limitation is wallet software... and PoPs are not relayed on the network.\n\nYou are probably right here. The thing is that I don't know how *all*\nwallet signing and validating software is written, so I figure it's\nbetter to stick to a \"valid\" output. Since I don't *need* more data\nthan 40 bytes, why bother. There's another constraint to this as well:\nThe other BIP proposal, \"Proof of Payment URI scheme\", includes a\nnonce parameter in the URI. If the nonce is very long, the QR code\nwill be unnecessarily big. The server should try to detect a brute\nforce of the 48 bit nonce, or at least delay the pop requests by some\n100 ms or so.\n\nDo you think this is an actual problem, and why? Is your suggestion to\nuse a bigger nonce, given the above?\n\n>\n> Regarding sharing, I think you're talking about a different use case. Say\n> you want to pay for 1-week valid entrance to some venue. I thought the\n> purpose of the PoP was to be sure that only the person who paid for it, and\n> not anyone else can use it during that week.\n>\n\nThat's right. That's one use case. You pay for the 1-week entrance and\nthen you use your wallet to sign PoPs when you enter the venue.\n\n> My argument against that is that the original payer can also hand the\n> private keys in his wallet to someone else, who would then become able to\n> create PoPs for the service. He does not lose anything by this, assuming the\n> address is not reused.\n>\n\nYes, that is possible. It's about the same as giving out a\nusername/password for a service that you have paid for. In the case of\na concert ticket, it's simple. Just allow one entrance per payment.\nBut in the example you gave, it's a bit more complicated. You could\nfor example give all guests a bracelet upon first entry or upon first\nexit. Or you can put a stamp on people leaving the venue, and demand\nthat all re-entries show the stamp, possibly along with a new PoP.\nPretty much as is done already. Different use cases will need\ndifferent protection. In this example, the value added by PoP is that\nthe venue does not have to distribute tickets in advance. This in turn\nallows for better privacy for the customer, who don't have to give out\npersonal information such as an email-address.\n\n> So, using a token does not change anything, except it can be provided to the\n> payer - instead of relying on creating an implicit identity based on who\n> seems to have held particular private keys in the past.\n>\n\nYes, that's a difference, but it comes at the cost of security. The\nstolen token can be used over and over. In the case of PoP it's only\nusable once, and it's only created when it's actually needed,\nminimizing the window of opportunity for the thief.\n\nRegards,\nKalle\n\n> On Jun 16, 2015 9:41 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>>\n>> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>> > You can't avoid sharing the token, and you can't avoid sharing the\n>> > private\n>> > keys used for signing either. If they are single use, you don't lose\n>> > anything by sharing them.\n>>\n>> Forwarding the PoP request would be a way to avoid sharing keys, as\n>> suggested above.\n>>\n>> >\n>> > Also you are not creating a real transaction. Why does the OP_RETURN\n>> > limitation matter?\n>>\n>> This was discussed in the beginning of this thread: \"The idea is to\n>> simplify implementation. Existing software can be used as is to sign\n>> and validate PoPs\"\n>>\n>> Regards,\n>> Kalle\n>>\n>> >\n>> > On Jun 16, 2015 9:22 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n>> >>\n>> >> Thank you for your comments Pieter! Please find my answers below.\n>> >>\n>> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <kalle at rosenbaum.se>\n>> >> > wrote:\n>> >> >>\n>> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n>> >> >> I'm not sure if we will be able to support PoP with CoinJoin. Maybe\n>> >> >> someone with more insight into CoinJoin have some input?\n>> >> >\n>> >> >\n>> >> > Not really. The problem is that you assume a transaction corresponds\n>> >> > to\n>> >> > a\n>> >> > single payment. This is true for simple wallet use cases, but not\n>> >> > compatible\n>> >> > with CoinJoin, or with systems that for example would want to combine\n>> >> > multiple payments in a single transaction.\n>> >> >\n>> >>\n>> >> Yes, you are right. It's not compatible with CoinJoin and the likes.\n>> >>\n>> >> >\n>> >> > 48 bits seems low to me, but it does indeed solve the problem. Why\n>> >> > not\n>> >> > 128\n>> >> > or 256 bits?\n>> >>\n>> >> The nonce is limited because of the OP_RETURN output being limited to\n>> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.\n>> >>\n>> >> >\n>> >> >> > Why does anyone care who paid? This is like walking into a\n>> >> >> > coffeshop,\n>> >> >> > noticing I don't have money with me, let me friend pay for me, and\n>> >> >> > then\n>> >> >> > have\n>> >> >> > the shop insist that I can't drink it because I'm not the buyer.\n>> >> >>\n>> >> >> If you pay as you use the service (ie pay for coffee upfront),\n>> >> >> there's\n>> >> >> no need for PoP. Please see the Motivation section. But you are\n>> >> >> right\n>> >> >> that you must have the wallet(s) that paid at hand when you issue a\n>> >> >> PoP.\n>> >> >>\n>> >> >> >\n>> >> >> > Track payments, don't try to assign identities to payers.\n>> >> >>\n>> >> >> Please elaborate, I don't understand what you mean here.\n>> >> >\n>> >> >\n>> >> > I think that is a mistake. You should not assume that the wallet who\n>> >> > held\n>> >> > the coins is the payer/buyer. That's what I said earlier; you're\n>> >> > implicitly\n>> >> > creating an identity (the one who holds these keys) based on the\n>> >> > transaction. This seems fundamentally wrong to me, and not necessary.\n>> >> > The\n>> >> > receiver should not care who paid or how, he should care what was\n>> >> > payed\n>> >> > for.\n>> >>\n>> >> You are saying that it's a problem that the wallet used to pay, must\n>> >> also be used to issue the PoP? That may very well be a problem in some\n>> >> cases. People using PoP should of course be aware of it's limitations\n>> >> and act accordingly, i.e. don't pay for concert tickets for a friend\n>> >> and expect your friend to be able to enter the arena with her wallet.\n>> >> As Tom Harding noted, it is possible to transfer keys to your friend's\n>> >> wallet, but that might not be desirable if those keys are also used\n>> >> for other payments. Also that would weaken the security of an HD\n>> >> wallet, since a chain code along with a private key would reveal all\n>> >> keys in that tree. Another solution is that your friend forwards the\n>> >> PoP request to your wallet, through twitter or SMS, and you send the\n>> >> PoP for her. Maybe that forwarding mechanism can be built into wallets\n>> >> and automated so that the wallet automatically suggests to sign the\n>> >> PoP for your friend. This is probably something to investigate\n>> >> further, but not within the scope of this BIP.\n>> >>\n>> >> Of course the simplest solution would be to send money to your friend\n>> >> first so that she can pay for the ticket from her own wallet, but\n>> >> that's not always feasible.\n>> >>\n>> >> >\n>> >> > The easiest solution to this IMHO would be an extension to the\n>> >> > payment\n>> >> > protocol that gives you (or your wallet) a token in return for\n>> >> > paying,\n>> >> > and\n>> >> > that knowledge of that token is used to gain access to the services\n>> >> > you\n>> >> > provide.\n>> >> >\n>> >>\n>> >> That token would then be reusable. Someone stealing it would be able\n>> >> to use it as much as she wants. That is what I want to avoid with PoP.\n>> >> The BIP proposal briefly mentions something like this in the\n>> >> rationale. I also had a discussion about this with Mike Hearn on this\n>> >> list on Mars 13 that I think covers most pros and cons of the\n>> >> different approaches.\n>> >>\n>> >> While your suggestion does indeed separate the transaction from the\n>> >> proof of payment, it also assumes that the token is held in the wallet\n>> >> that pays. Otherwise you would need to keep it in another safe place,\n>> >> remember it's reusable. Where would that be? How would you transfer\n>> >> that token to your friend?\n>> >>\n>> >> Thank you again for your comments. I appreciate it.\n>> >>\n>> >> Best regards,\n>> >> Kalle\n>> >>\n>> >> > --\n>> >> > Pieter\n>> >> >"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-21T14:39:24",
                "message_text_only": "Hi Greg!\n\nAfter a lot of constructive discussion, feedback and updating, I'm\nrequesting that you please assign these proposals BIP numbers. It's both\nthe \"Proof of Payment\" proposal and the \"Proof of Payment URI scheme\"\nproposal that I'm referring to.\n\nThe wikimedia source is available here:\nhttps://github.com/kallerosenbaum/poppoc/wiki/Proof-of-Payment-BIP and\nhttps://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP.\n\nIs this what you need in order to proceed or is there something else you\nneed from me?\n\nBest regards,\n/Kalle\n\n2015-06-17 11:51 GMT+02:00 Kalle Rosenbaum <kalle at rosenbaum.se>:\n\n> 2015-06-16 21:48 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> > I don't see why existing software could create a 40-byte OP_RETURN but\n> not\n> > larger? The limitation comes from a relay policy in full nodes, not a\n> > limitation is wallet software... and PoPs are not relayed on the network.\n>\n> You are probably right here. The thing is that I don't know how *all*\n> wallet signing and validating software is written, so I figure it's\n> better to stick to a \"valid\" output. Since I don't *need* more data\n> than 40 bytes, why bother. There's another constraint to this as well:\n> The other BIP proposal, \"Proof of Payment URI scheme\", includes a\n> nonce parameter in the URI. If the nonce is very long, the QR code\n> will be unnecessarily big. The server should try to detect a brute\n> force of the 48 bit nonce, or at least delay the pop requests by some\n> 100 ms or so.\n>\n> Do you think this is an actual problem, and why? Is your suggestion to\n> use a bigger nonce, given the above?\n>\n> >\n> > Regarding sharing, I think you're talking about a different use case. Say\n> > you want to pay for 1-week valid entrance to some venue. I thought the\n> > purpose of the PoP was to be sure that only the person who paid for it,\n> and\n> > not anyone else can use it during that week.\n> >\n>\n> That's right. That's one use case. You pay for the 1-week entrance and\n> then you use your wallet to sign PoPs when you enter the venue.\n>\n> > My argument against that is that the original payer can also hand the\n> > private keys in his wallet to someone else, who would then become able to\n> > create PoPs for the service. He does not lose anything by this, assuming\n> the\n> > address is not reused.\n> >\n>\n> Yes, that is possible. It's about the same as giving out a\n> username/password for a service that you have paid for. In the case of\n> a concert ticket, it's simple. Just allow one entrance per payment.\n> But in the example you gave, it's a bit more complicated. You could\n> for example give all guests a bracelet upon first entry or upon first\n> exit. Or you can put a stamp on people leaving the venue, and demand\n> that all re-entries show the stamp, possibly along with a new PoP.\n> Pretty much as is done already. Different use cases will need\n> different protection. In this example, the value added by PoP is that\n> the venue does not have to distribute tickets in advance. This in turn\n> allows for better privacy for the customer, who don't have to give out\n> personal information such as an email-address.\n>\n> > So, using a token does not change anything, except it can be provided to\n> the\n> > payer - instead of relying on creating an implicit identity based on who\n> > seems to have held particular private keys in the past.\n> >\n>\n> Yes, that's a difference, but it comes at the cost of security. The\n> stolen token can be used over and over. In the case of PoP it's only\n> usable once, and it's only created when it's actually needed,\n> minimizing the window of opportunity for the thief.\n>\n> Regards,\n> Kalle\n>\n> > On Jun 16, 2015 9:41 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se> wrote:\n> >>\n> >> 2015-06-16 21:25 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> >> > You can't avoid sharing the token, and you can't avoid sharing the\n> >> > private\n> >> > keys used for signing either. If they are single use, you don't lose\n> >> > anything by sharing them.\n> >>\n> >> Forwarding the PoP request would be a way to avoid sharing keys, as\n> >> suggested above.\n> >>\n> >> >\n> >> > Also you are not creating a real transaction. Why does the OP_RETURN\n> >> > limitation matter?\n> >>\n> >> This was discussed in the beginning of this thread: \"The idea is to\n> >> simplify implementation. Existing software can be used as is to sign\n> >> and validate PoPs\"\n> >>\n> >> Regards,\n> >> Kalle\n> >>\n> >> >\n> >> > On Jun 16, 2015 9:22 PM, \"Kalle Rosenbaum\" <kalle at rosenbaum.se>\n> wrote:\n> >> >>\n> >> >> Thank you for your comments Pieter! Please find my answers below.\n> >> >>\n> >> >> 2015-06-16 16:31 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com>:\n> >> >> > On Mon, Jun 15, 2015 at 1:59 PM, Kalle Rosenbaum <\n> kalle at rosenbaum.se>\n> >> >> > wrote:\n> >> >> >>\n> >> >> >> 2015-06-15 12:00 GMT+02:00 Pieter Wuille <pieter.wuille at gmail.com\n> >:\n> >> >> >> I'm not sure if we will be able to support PoP with CoinJoin.\n> Maybe\n> >> >> >> someone with more insight into CoinJoin have some input?\n> >> >> >\n> >> >> >\n> >> >> > Not really. The problem is that you assume a transaction\n> corresponds\n> >> >> > to\n> >> >> > a\n> >> >> > single payment. This is true for simple wallet use cases, but not\n> >> >> > compatible\n> >> >> > with CoinJoin, or with systems that for example would want to\n> combine\n> >> >> > multiple payments in a single transaction.\n> >> >> >\n> >> >>\n> >> >> Yes, you are right. It's not compatible with CoinJoin and the likes.\n> >> >>\n> >> >> >\n> >> >> > 48 bits seems low to me, but it does indeed solve the problem. Why\n> >> >> > not\n> >> >> > 128\n> >> >> > or 256 bits?\n> >> >>\n> >> >> The nonce is limited because of the OP_RETURN output being limited to\n> >> >> 40 bytes of data: 2 bytes version, 32 bytes txid, 6 bytes nonce.\n> >> >>\n> >> >> >\n> >> >> >> > Why does anyone care who paid? This is like walking into a\n> >> >> >> > coffeshop,\n> >> >> >> > noticing I don't have money with me, let me friend pay for me,\n> and\n> >> >> >> > then\n> >> >> >> > have\n> >> >> >> > the shop insist that I can't drink it because I'm not the buyer.\n> >> >> >>\n> >> >> >> If you pay as you use the service (ie pay for coffee upfront),\n> >> >> >> there's\n> >> >> >> no need for PoP. Please see the Motivation section. But you are\n> >> >> >> right\n> >> >> >> that you must have the wallet(s) that paid at hand when you issue\n> a\n> >> >> >> PoP.\n> >> >> >>\n> >> >> >> >\n> >> >> >> > Track payments, don't try to assign identities to payers.\n> >> >> >>\n> >> >> >> Please elaborate, I don't understand what you mean here.\n> >> >> >\n> >> >> >\n> >> >> > I think that is a mistake. You should not assume that the wallet\n> who\n> >> >> > held\n> >> >> > the coins is the payer/buyer. That's what I said earlier; you're\n> >> >> > implicitly\n> >> >> > creating an identity (the one who holds these keys) based on the\n> >> >> > transaction. This seems fundamentally wrong to me, and not\n> necessary.\n> >> >> > The\n> >> >> > receiver should not care who paid or how, he should care what was\n> >> >> > payed\n> >> >> > for.\n> >> >>\n> >> >> You are saying that it's a problem that the wallet used to pay, must\n> >> >> also be used to issue the PoP? That may very well be a problem in\n> some\n> >> >> cases. People using PoP should of course be aware of it's limitations\n> >> >> and act accordingly, i.e. don't pay for concert tickets for a friend\n> >> >> and expect your friend to be able to enter the arena with her wallet.\n> >> >> As Tom Harding noted, it is possible to transfer keys to your\n> friend's\n> >> >> wallet, but that might not be desirable if those keys are also used\n> >> >> for other payments. Also that would weaken the security of an HD\n> >> >> wallet, since a chain code along with a private key would reveal all\n> >> >> keys in that tree. Another solution is that your friend forwards the\n> >> >> PoP request to your wallet, through twitter or SMS, and you send the\n> >> >> PoP for her. Maybe that forwarding mechanism can be built into\n> wallets\n> >> >> and automated so that the wallet automatically suggests to sign the\n> >> >> PoP for your friend. This is probably something to investigate\n> >> >> further, but not within the scope of this BIP.\n> >> >>\n> >> >> Of course the simplest solution would be to send money to your friend\n> >> >> first so that she can pay for the ticket from her own wallet, but\n> >> >> that's not always feasible.\n> >> >>\n> >> >> >\n> >> >> > The easiest solution to this IMHO would be an extension to the\n> >> >> > payment\n> >> >> > protocol that gives you (or your wallet) a token in return for\n> >> >> > paying,\n> >> >> > and\n> >> >> > that knowledge of that token is used to gain access to the services\n> >> >> > you\n> >> >> > provide.\n> >> >> >\n> >> >>\n> >> >> That token would then be reusable. Someone stealing it would be able\n> >> >> to use it as much as she wants. That is what I want to avoid with\n> PoP.\n> >> >> The BIP proposal briefly mentions something like this in the\n> >> >> rationale. I also had a discussion about this with Mike Hearn on this\n> >> >> list on Mars 13 that I think covers most pros and cons of the\n> >> >> different approaches.\n> >> >>\n> >> >> While your suggestion does indeed separate the transaction from the\n> >> >> proof of payment, it also assumes that the token is held in the\n> wallet\n> >> >> that pays. Otherwise you would need to keep it in another safe place,\n> >> >> remember it's reusable. Where would that be? How would you transfer\n> >> >> that token to your friend?\n> >> >>\n> >> >> Thank you again for your comments. I appreciate it.\n> >> >>\n> >> >> Best regards,\n> >> >> Kalle\n> >> >>\n> >> >> > --\n> >> >> > Pieter\n> >> >> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/3247c105/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP for Proof of Payment",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Todd",
                "Kalle Rosenbaum",
                "Luke Dashjr",
                "Pieter Wuille",
                "Tom Harding"
            ],
            "messages_count": 27,
            "total_messages_chars_count": 184603
        }
    },
    {
        "title": "[Bitcoin-development] BIP for PoP URI scheme",
        "thread_messages": [
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-06T14:35:38",
                "message_text_only": "Hi\n\nFollowing earlier posts on Proof of Payment I'm now proposing the following\nBIP for a Proof of Payment URI scheme (To read it formatted instead, go to\nhttps://github.com/kallerosenbaum/poppoc/wiki/btcpop-scheme-BIP).\n\nRegards,\nKalle Rosenbaum\n\n<pre>\n  BIP: <BIP number>\n  Title: Proof of Payment URI scheme\n  Author: Kalle Rosenbaum <kalle at rosenbaum.se>\n  Status: Draft\n  Type: Standards Track\n  Created: <date created on, in ISO 8601 (yyyy-mm-dd) format>\n</pre>\n\n== Abstract ==\n\nThis is a proposal for a URI scheme to be used in the Proof of Payment\nprocess.\n\n== Motivation ==\n\nTo make a Proof of Payment, the party that wants the proof needs to\ntransfer a Proof of Payment request to the wallet software of the\nother party. To facilitate that transfer, a new URI scheme\nrepresenting the PoP request is proposed. This URI can then be encoded\nin QR images or sent over NFC in order to transfer it to the wallet.\n\n== Specification ==\n\nThe specification is the same as BIP0021, with the following\ndifferences:\n\n* The URI scheme is <tt>btcpop</tt> instead of <tt>bitcoin</tt>\n* The path component, i.e. the address part, is always empty.\n* A mandatory <tt>p</tt> parameter whose value contains the destination for\nthe PoP. This could for example be a <tt>https:</tt> URL or a <tt>mailto:</tt>\nURI.\n* A mandatory <tt>n</tt> parameter representing the nonce, base58 encoded.\n* An optional <tt>txid</tt> parameter containing the Base58 encoded hash of\nthe transaction to prove.\n\nJust as in BIP0021, elements of the query component may contain\ncharacters outside the valid range. These must first be encoded\naccording to UTF-8, and then each octet of the corresponding UTF-8\nsequence must be percent-encoded as described in RFC 3986.\n\nAll parameters except <tt>p</tt> and <tt>n</tt> are hints to the\nwallet on which transaction to create a PoP for.\n\nThe extensibility of BIP0021 applies to this scheme as well. For\nexample, a <tt>date</tt> parameter or a <tt>toaddr</tt> parameter\nmight be useful. <tt>req-*</tt> parameters are also allowed and obey\nthe same rules as in BIP0021, clients not supporting a <tt>req-*</tt>\nparameter must consider the URI invalid.\n\n=== Keep URIs short ===\n\nImplementations should keep the URIs as short as possible. This is\nbecause it makes QR decoding more stable. A camera with a scratched\nlens or low resolution may run into problems scanning huge QR\ncodes. This is why the <tt>txid</tt> parameter is encoded in Base58\ninstead of the classic hex encoded string. We get away with 44\ncharacters instead of 64. Also, the <tt>nonce</tt> parameter is Base58\nencoded for the same reason.\n\n== Interpretation ==\n\n=== Transaction hints ===\n\nThe wallet processing the URI must use the hints in the PoP request to\nfilter its transaction set. The <tt>label</tt>, <tt>amount</tt> and\n<tt>message</tt> parameters must, if present in the URI, exactly match\nthe data associated with the original payment according to the\nfollowing table:\n\n{|\n| <tt>btcpop:</tt> URI parameter || <tt>bitcoin:</tt> URI parameter ||\nBIP70 PaymentDetails data\n|-\n| <tt>label</tt>                 || <tt>label</tt>                  ||\n<tt>merchant_data</tt>\n|-\n| <tt>amount</tt>                || <tt>amount</tt>                 ||\n<tt>sum of outputs.amount</tt>\n|-\n| <tt>message</tt>               || <tt>message</tt>                ||\n<tt>memo</tt>\n|}\n\nThe <tt>txid</tt> parameter value must match the transaction hash of\nthe payment.\n\nAfter filtering, the resulting transaction set is displayed to the\nuser who selects one of them to prove. An implementation could also\nautomatically select a transaction in the filtered set, but\nthere must still be a way for the user to select freely among the\nmatching transactions. If the filtered set is empty, no transaction\nfits the hints and a message about that is presented to the user. If\nthe filtered set contains exactly one transaction, which is\npreferable, that transaction can be automatically selected.\n\nAs a fallback, there must also be a way for the user to select any\ntransaction from the wallet regardless of the transaction hints. This\ncan be useful if the metadata of the wallet is lost, possibly due to a\nrestore from backup.\n\n=== PoP destination <tt>p</tt> ===\n\nThe <tt>p</tt> parameter value is the destination where to send the\nPoP to. This destination is typically a <tt>https:</tt> URL or a\n<tt>http:</tt> URL, but it could be any type of URI, for example\n<tt>mailto:</tt>. To keep <tt>btcpop:</tt> URIs short, users should\nnot make their <tt>p</tt> parameter unneccesarily long.\n\n==== <tt>http:</tt> and <tt>https:</tt> URLs ====\n\nWallet implementations must support the <tt>http:</tt> and\n<tt>https:</tt> schemes in which case <tt>POST</tt> method must be\nused. The content type of the POST request must be set to\n\n Content-Type: application/bitcoin-pop\n Content-Transfer-Encoding: binary\n\n== Examples ==\n\nSend PoP for a transaction with label \"video 42923\" to\n<tt>https://www.example.com/pop/352</tt>, using nonce <tt>0x73 0xd5\n0x1a 0xbb 0xd8 0x9c</tt>:\n\n btcpop:?p=https://www.example.com/pop/352&n=zgWTm8yH&label=video 42923\n\nSend PoP through mail using\n<tt>mailto:pop at example.com?subject=pop444</tt>, amount is 13370000\nsatoshis, nonce is <tt>0x6f 0xe 0xfb 0x68 0x92 0xf9</tt>. Note that\nthe <tt>?</tt> before <tt>subject</tt> is OK according to RFC3986,\nsince the query part starts from the first <tt>?</tt>:\n\n btcpop:?p=mailto:pop at example.com?subject%3Dpop444&n=xJdKmEbr&amount=0.1337\n\nSend PoP for transaction with id\n<tt>cca7507897abc89628f450e8b1e0c6fca4ec3f7b34cccf55f3f531c659ff4d79</tt>\nto pizza place at <tt>http://pizza.example.com/pop/laszlo111</tt>\nusing nonce <tt>0xfc 0xcc 0x2c 0x35 0xf0 0xb8</tt>\n\n btcpop:?p=\nhttp://pizza.example.com/pop/laszlo111&n=3AtNpVrPh&txid=Emt9MPvt1joznqHy5eEHkNtcuQuYWXzYJBQZN6BJm6NL\n\n== Reference implementation ==\n\n[https://github.com/kallerosenbaum/poppoc poppoc on GitHub]\n\n[https://github.com/kallerosenbaum/wallet Mycelium fork on GitHub]\n\n== References ==\n\n[https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki BIP21]: URI\nScheme\n\n[[Proof of Payment BIP]]\n\n[https://www.ietf.org/rfc/rfc3986.txt RFC3986]: Uniform Resource Identifier\n(URI): Generic Syntax\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150606/d3fa1871/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP for PoP URI scheme",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Kalle Rosenbaum"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 6368
        }
    },
    {
        "title": "[Bitcoin-development] Block Size Experiment Underway",
        "thread_messages": [
            {
                "author": "Tom Harding",
                "date": "2015-06-08T00:36:44",
                "message_text_only": "In September, 2014, a collective experiment began in the bitcoin\necosystem.  Available block space (1MB) began to sometimes fall short of\nthe space required to mine all of the transactions that would otherwise\nhave been included.\n\nThis chart, posted earlier, shows the onset of the\nsome-blocks-at-maximum era. http://i.imgur.com/5Gfh9CW.png\n\nAlthough the average block is only about 400K, real blocks are bigger or\nsmaller due to the random length of time between blocks (and other\nfactors).  I look at how often this is predicted to happen.\n\nRecently, transactions have been confirmed at a rate of about\n100000/day*.  The average transaction size for the past 6000 blocks has\nbeen 545 bytes.  Using these values,\n\ntxesPerMinute = 100000 / 24 / 60 = 69.4\ntxesInMaxBlock = 999977 / 545 = 1834\nminutesToFillBlock = txesInMaxBlock/txesPerMinute = 26.4\n\nUsing the theoretical formula for the time before an inter-block\ninterval of at least a given length **\n\nblockChickenMinutes[x] := 10 (exp(x/10) - x/10 - 1)\n\nwe obtain\n\nminutesBetweenFullBlocks = blockChickenMinutes[minutesToFillBlock] = 104\n\nWe currently expect a maximum-size block every 1 hour + 44 minutes, on\naverage.  If the transaction rate doubles, we should expect a\nmaximum-size block every 14 minutes, on average.  The non-linearity\nmakes sense, because doubling the average without raising the maximum\nrequires disproportionately more maximum-size blocks.\n\nThis estimate is understated because transaction size and submission\nrate have their own distributions.  Using the averages of 545 bytes and\n100000/day ignores the fact that for some blocks, there are unusually\nbig and/or numerous transactions, which increases the block size\nvariance and causes blocks over the threshold to be encountered more\nfrequently.\n\nThese calculations are confirmed by empirical observation of the most\nrecent 6000 blocks:\n\nhttp://i.imgur.com/0pQUsdl.png\n\nIn many cases, the miner chose to create a 750KB block, which is\nunusually likely to be followed by another 750KB or 1MB block, because\nthe next interval starts off with a 250KB backlog.  Some backlog\ntransactions may experience more than 1 block delay in these cases.\n\n\n* https://www.quandl.com/data/BCHAIN/NTRAN-Bitcoin-Number-of-Transactions\n\n** This is a chicken-crossing-the-road problem. Wait time = (exp(\u03bbx) \u2212\n\u03bbx - 1) / \u03bb\nSome discussion at\nhttps://github.com/nanotube/supybot-bitcoin-marketmonitor/pull/68."
            }
        ],
        "thread_summary": {
            "title": "Block Size Experiment Underway",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Tom Harding"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2414
        }
    },
    {
        "title": "[Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-08T20:07:59",
                "message_text_only": "When implemented, the block size limit was put in place to prevent the \npotential for a massive block to be used as an attack to benefit the miner \nof that block.  The theory goes that such a massive block would enrich its \nminer by delaying other miners who are now busy downloading and validating \nthat huge block.  The original miner of that large-block would be free to \ncontinue hashing the next block, giving it an advantage.\n\nUnfortunately, this block size limit opened a different attack.  Prior to \nthe limit, any attempt to spam the network by anyone other than someone \nmining their own transactions would have been economically unfeasible.  As \nevery transaction would have a fee, there would have been a real cost for \nevery minute of spam.  The end result would have been a transfer of wealth \nfrom spammer to Bitcoin miners, which would have harmed the spammers and \nencouraged further mining of Bitcoin, a very antifragile outcome.\n\nBut now we have the block size limit.  Things are very different with this \nfeature in place.  The beginning of a spam attack on the Bitcoin network \nwill incur transaction fees, just like before.  But if spam continues at a \nrate exceeding the block size limit long enough for transactions to be \ndropped from mempools, the vast majority of spam transaction fees will never \nhave to be paid.  In fact, as real users gain in desperation and pay higher \nfees to get their transactions through in a timely manner, the spammers will \nadjust their fees to minimize the cost of the attack and maximize \neffectiveness.  Using this method, they keep their fees at a point that \ncauses most of the spam transactions to be dropped without confirmation \n(free spam), while forcing a floor for transaction fees.  Thus, while spam \ncould be used by attackers to disable the network entirely, by paying \nhigh-enough fees to actually fill the blocks with spam, it can also be used \nby a single entity to force a transaction fee floor.  Real users will be \nforced to pay a transaction fee higher than the majority of the spam to get \ntheir transactions confirmed.  So this is an effective means for a minority \nof miners to force higher fees through spam attacks, even in the face of \nbenevolent miners who would not support a higher fee floor by policy. \nMiners would simply have no way to fix this, as they can only put in the \ntransactions that will fit under the block size limit.\n\nIn the face of such a spam attack, Bitcoin's credibility and usability would \nbe severely undermined.  The block size limit enables this attack, and I now \nargue for its removal.  But we can't just remove it and ignore the problem \nthat it was intended to address.  We need a new fix for the large-block \nproblem described in the first paragraph that does not suffer from the \ndropped-transaction spam-attack problem that is enabled by the block size \nlimit today.  My proposal is likely to be controversial, and I'm very much \nopen to hearing other better proposals.\n\nLarge blocks created by a miner as a means to spam other miners out of \ncompetition is a problem because miners do not pay fees for their own \ntransactions when they mine them.  They collect the fees they pay.  This \nbreaks the economic barrier keeping people from spamming the network, as the \nspamming is essentially free.  The proposed fix is to add a new rule on how \nfees are handled.  Some amount of every fee should be considered as burned \nand can never be spent.  I will propose 50% of the fee here, but there may \nbe better numbers that can be discovered prior to putting this into place. \nIf we'd like miners to continue to collect the same fees after this change, \nwe can suggest the default fee per transaction to be doubled.  Half of every \nfee would be burned and disappear forever, effectively distributing the \nvalue of those bitcoins across the entire money supply.  The other half \nwould be collected by the miner of the block as is done today.  This \nsolution would mean large blocks would cost a significant number of bitcoin \nto create, even when all of the transactions are created by the miner of \nthat block.  For this to work, we'd need to ensure a minimum fee is paid for \nmost of the transactions in every block, and the new transaction fee rule is \nin place.  Then the block size limit can be removed.\n\nRaystonn"
            },
            {
                "author": "Loi Luu",
                "date": "2015-06-09T09:33:34",
                "message_text_only": ">\n> The proposed fix is to add a new rule on how\n> fees are handled.  Some amount of every fee should be considered as burned\n> and can never be spent.  I will propose 50% of the fee here, but there may\n> be better numbers that can be discovered prior to putting this into place.\n> If we'd like miners to continue to collect the same fees after this change,\n> we can suggest the default fee per transaction to be doubled\n\n\nI would propose another practical rule rather than burning 50% of the fee.\nFor example, you can\ncredit 50% of the transaction fee to the next block. Thus, the attacker\ncannot perform\nthe attack with 0-fee any more, yet you don't have to double the price of\nthe TX fee for the fix.\n\nThanks,\nLoi Luu.\n\nOn Tue, Jun 9, 2015 at 4:07 AM, Raystonn . <raystonn at hotmail.com> wrote:\n\n> When implemented, the block size limit was put in place to prevent the\n> potential for a massive block to be used as an attack to benefit the miner\n> of that block.  The theory goes that such a massive block would enrich its\n> miner by delaying other miners who are now busy downloading and validating\n> that huge block.  The original miner of that large-block would be free to\n> continue hashing the next block, giving it an advantage.\n>\n> Unfortunately, this block size limit opened a different attack.  Prior to\n> the limit, any attempt to spam the network by anyone other than someone\n> mining their own transactions would have been economically unfeasible.  As\n> every transaction would have a fee, there would have been a real cost for\n> every minute of spam.  The end result would have been a transfer of wealth\n> from spammer to Bitcoin miners, which would have harmed the spammers and\n> encouraged further mining of Bitcoin, a very antifragile outcome.\n>\n> But now we have the block size limit.  Things are very different with this\n> feature in place.  The beginning of a spam attack on the Bitcoin network\n> will incur transaction fees, just like before.  But if spam continues at a\n> rate exceeding the block size limit long enough for transactions to be\n> dropped from mempools, the vast majority of spam transaction fees will\n> never\n> have to be paid.  In fact, as real users gain in desperation and pay higher\n> fees to get their transactions through in a timely manner, the spammers\n> will\n> adjust their fees to minimize the cost of the attack and maximize\n> effectiveness.  Using this method, they keep their fees at a point that\n> causes most of the spam transactions to be dropped without confirmation\n> (free spam), while forcing a floor for transaction fees.  Thus, while spam\n> could be used by attackers to disable the network entirely, by paying\n> high-enough fees to actually fill the blocks with spam, it can also be used\n> by a single entity to force a transaction fee floor.  Real users will be\n> forced to pay a transaction fee higher than the majority of the spam to get\n> their transactions confirmed.  So this is an effective means for a minority\n> of miners to force higher fees through spam attacks, even in the face of\n> benevolent miners who would not support a higher fee floor by policy.\n> Miners would simply have no way to fix this, as they can only put in the\n> transactions that will fit under the block size limit.\n>\n> In the face of such a spam attack, Bitcoin's credibility and usability\n> would\n> be severely undermined.  The block size limit enables this attack, and I\n> now\n> argue for its removal.  But we can't just remove it and ignore the problem\n> that it was intended to address.  We need a new fix for the large-block\n> problem described in the first paragraph that does not suffer from the\n> dropped-transaction spam-attack problem that is enabled by the block size\n> limit today.  My proposal is likely to be controversial, and I'm very much\n> open to hearing other better proposals.\n>\n> Large blocks created by a miner as a means to spam other miners out of\n> competition is a problem because miners do not pay fees for their own\n> transactions when they mine them.  They collect the fees they pay.  This\n> breaks the economic barrier keeping people from spamming the network, as\n> the\n> spamming is essentially free.  The proposed fix is to add a new rule on how\n> fees are handled.  Some amount of every fee should be considered as burned\n> and can never be spent.  I will propose 50% of the fee here, but there may\n> be better numbers that can be discovered prior to putting this into place.\n> If we'd like miners to continue to collect the same fees after this change,\n> we can suggest the default fee per transaction to be doubled.  Half of\n> every\n> fee would be burned and disappear forever, effectively distributing the\n> value of those bitcoins across the entire money supply.  The other half\n> would be collected by the miner of the block as is done today.  This\n> solution would mean large blocks would cost a significant number of bitcoin\n> to create, even when all of the transactions are created by the miner of\n> that block.  For this to work, we'd need to ensure a minimum fee is paid\n> for\n> most of the transactions in every block, and the new transaction fee rule\n> is\n> in place.  Then the block size limit can be removed.\n>\n> Raystonn\n>\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/3947db5f/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-09T13:36:04",
                "message_text_only": "How about this for mitigating this potential attack:\n\n1. Limit the memory pool to some reasonable number of blocks-worth of\ntransactions (e.g. 11)\n2. If evicting transactions from the memory pool, prefer to evict\ntransactions that are part of long chains of unconfirmed transactions.\n3. Allow blocks to grow in size in times of high transaction demand.\n\nThe combination of (1) and (2) means an attacker needs to prepare lots of\nconfirmed inputs to pull off the attack. By itself that means they MUST pay\ntransaction fees.\n\n(3) further mitigates the attack because it allows miners to just absorb\nfees that the attacker is throwing at miners.\n\n\nOn Tue, Jun 9, 2015 at 5:33 AM, Loi Luu <loi.luuthe at gmail.com> wrote:\n\n> The proposed fix is to add a new rule on how\n>> fees are handled.  Some amount of every fee should be considered as burned\n>> and can never be spent.  I will propose 50% of the fee here, but there may\n>> be better numbers that can be discovered prior to putting this into place.\n>> If we'd like miners to continue to collect the same fees after this\n>> change,\n>> we can suggest the default fee per transaction to be doubled\n>\n>\n> I would propose another practical rule rather than burning 50% of the fee.\n> For example, you can\n> credit 50% of the transaction fee to the next block. Thus, the attacker\n> cannot perform\n> the attack with 0-fee any more, yet you don't have to double the price of\n> the TX fee for the fix.\n>\n> Thanks,\n> Loi Luu.\n>\n> On Tue, Jun 9, 2015 at 4:07 AM, Raystonn . <raystonn at hotmail.com> wrote:\n>\n>> When implemented, the block size limit was put in place to prevent the\n>> potential for a massive block to be used as an attack to benefit the miner\n>> of that block.  The theory goes that such a massive block would enrich its\n>> miner by delaying other miners who are now busy downloading and validating\n>> that huge block.  The original miner of that large-block would be free to\n>> continue hashing the next block, giving it an advantage.\n>>\n>> Unfortunately, this block size limit opened a different attack.  Prior to\n>> the limit, any attempt to spam the network by anyone other than someone\n>> mining their own transactions would have been economically unfeasible.  As\n>> every transaction would have a fee, there would have been a real cost for\n>> every minute of spam.  The end result would have been a transfer of wealth\n>> from spammer to Bitcoin miners, which would have harmed the spammers and\n>> encouraged further mining of Bitcoin, a very antifragile outcome.\n>>\n>> But now we have the block size limit.  Things are very different with this\n>> feature in place.  The beginning of a spam attack on the Bitcoin network\n>> will incur transaction fees, just like before.  But if spam continues at a\n>> rate exceeding the block size limit long enough for transactions to be\n>> dropped from mempools, the vast majority of spam transaction fees will\n>> never\n>> have to be paid.  In fact, as real users gain in desperation and pay\n>> higher\n>> fees to get their transactions through in a timely manner, the spammers\n>> will\n>> adjust their fees to minimize the cost of the attack and maximize\n>> effectiveness.  Using this method, they keep their fees at a point that\n>> causes most of the spam transactions to be dropped without confirmation\n>> (free spam), while forcing a floor for transaction fees.  Thus, while spam\n>> could be used by attackers to disable the network entirely, by paying\n>> high-enough fees to actually fill the blocks with spam, it can also be\n>> used\n>> by a single entity to force a transaction fee floor.  Real users will be\n>> forced to pay a transaction fee higher than the majority of the spam to\n>> get\n>> their transactions confirmed.  So this is an effective means for a\n>> minority\n>> of miners to force higher fees through spam attacks, even in the face of\n>> benevolent miners who would not support a higher fee floor by policy.\n>> Miners would simply have no way to fix this, as they can only put in the\n>> transactions that will fit under the block size limit.\n>>\n>> In the face of such a spam attack, Bitcoin's credibility and usability\n>> would\n>> be severely undermined.  The block size limit enables this attack, and I\n>> now\n>> argue for its removal.  But we can't just remove it and ignore the problem\n>> that it was intended to address.  We need a new fix for the large-block\n>> problem described in the first paragraph that does not suffer from the\n>> dropped-transaction spam-attack problem that is enabled by the block size\n>> limit today.  My proposal is likely to be controversial, and I'm very much\n>> open to hearing other better proposals.\n>>\n>> Large blocks created by a miner as a means to spam other miners out of\n>> competition is a problem because miners do not pay fees for their own\n>> transactions when they mine them.  They collect the fees they pay.  This\n>> breaks the economic barrier keeping people from spamming the network, as\n>> the\n>> spamming is essentially free.  The proposed fix is to add a new rule on\n>> how\n>> fees are handled.  Some amount of every fee should be considered as burned\n>> and can never be spent.  I will propose 50% of the fee here, but there may\n>> be better numbers that can be discovered prior to putting this into place.\n>> If we'd like miners to continue to collect the same fees after this\n>> change,\n>> we can suggest the default fee per transaction to be doubled.  Half of\n>> every\n>> fee would be burned and disappear forever, effectively distributing the\n>> value of those bitcoins across the entire money supply.  The other half\n>> would be collected by the miner of the block as is done today.  This\n>> solution would mean large blocks would cost a significant number of\n>> bitcoin\n>> to create, even when all of the transactions are created by the miner of\n>> that block.  For this to work, we'd need to ensure a minimum fee is paid\n>> for\n>> most of the transactions in every block, and the new transaction fee rule\n>> is\n>> in place.  Then the block size limit can be removed.\n>>\n>> Raystonn\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/39174ba9/attachment.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-09T14:18:40",
                "message_text_only": "On Tue, Jun 9, 2015 at 2:36 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> How about this for mitigating this potential attack:\n>\n> 1. Limit the memory pool to some reasonable number of blocks-worth of\n> transactions (e.g. 11)\n> 2. If evicting transactions from the memory pool, prefer to evict\n> transactions that are part of long chains of unconfirmed transactions.\n> 3. Allow blocks to grow in size in times of high transaction demand.\n>\n>\nI think 2 should just be fee per kB.  If the pool is full and a transaction\narrives, it has to have a fee per kB that is higher than the lowest\ntransaction in the pool.\n\nThe effect is that the fee per kB threshold for getting a transaction into\nthe memory pool increases as the attack proceeds.  This means that the cost\nto maintain the attack increases.\n\nWith replace by fee, the new transaction would have to have a fee that is\nmore than a fixed amount more than the lowest already in the pool.  I think\nthe replace by fee code already does this.  This prevents transactions with\nfees that increase by 1 Satoshi at a time being relayed.\n\nFor allowing large blocks when block space is in high demand, you could\nlimit the average block size.\n\nIf the average was set to 1MB, the rule could be that blocks must be 2MB or\nlower and the total size of the a block and the previous 99 must be 100MB\nor lower.  This gives an average of 1MB per block, but allows bursts.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/5034b5a7/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-09T17:52:05",
                "message_text_only": "That does sound good on the surface, but how do we enforce #1 and #2?  They seem to be unenforceable, as a miner can adjust the size of the memory pool in his local source.\n\nFrom: Gavin Andresen \nSent: Tuesday, June 09, 2015 6:36 AM\nTo: Loi Luu \nCc: Raystonn . ; Bitcoin Dev \nSubject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit\n\nHow about this for mitigating this potential attack: \n\n1. Limit the memory pool to some reasonable number of blocks-worth of transactions (e.g. 11)\n2. If evicting transactions from the memory pool, prefer to evict transactions that are part of long chains of unconfirmed transactions.\n3. Allow blocks to grow in size in times of high transaction demand.\n\nThe combination of (1) and (2) means an attacker needs to prepare lots of confirmed inputs to pull off the attack. By itself that means they MUST pay transaction fees.\n\n(3) further mitigates the attack because it allows miners to just absorb fees that the attacker is throwing at miners.\n\n\nOn Tue, Jun 9, 2015 at 5:33 AM, Loi Luu <loi.luuthe at gmail.com> wrote:\n\n    The proposed fix is to add a new rule on how\n    fees are handled.  Some amount of every fee should be considered as burned\n    and can never be spent.  I will propose 50% of the fee here, but there may\n    be better numbers that can be discovered prior to putting this into place.\n    If we'd like miners to continue to collect the same fees after this change,\n    we can suggest the default fee per transaction to be doubled\n\n  I would propose another practical rule rather than burning 50% of the fee. For example, you can\n  credit 50% of the transaction fee to the next block. Thus, the attacker cannot perform\n  the attack with 0-fee any more, yet you don't have to double the price of the TX fee for the fix.\n\n  Thanks,\n  Loi Luu.\n\n\n  On Tue, Jun 9, 2015 at 4:07 AM, Raystonn . <raystonn at hotmail.com> wrote:\n\n    When implemented, the block size limit was put in place to prevent the\n    potential for a massive block to be used as an attack to benefit the miner\n    of that block.  The theory goes that such a massive block would enrich its\n    miner by delaying other miners who are now busy downloading and validating\n    that huge block.  The original miner of that large-block would be free to\n    continue hashing the next block, giving it an advantage.\n\n    Unfortunately, this block size limit opened a different attack.  Prior to\n    the limit, any attempt to spam the network by anyone other than someone\n    mining their own transactions would have been economically unfeasible.  As\n    every transaction would have a fee, there would have been a real cost for\n    every minute of spam.  The end result would have been a transfer of wealth\n    from spammer to Bitcoin miners, which would have harmed the spammers and\n    encouraged further mining of Bitcoin, a very antifragile outcome.\n\n    But now we have the block size limit.  Things are very different with this\n    feature in place.  The beginning of a spam attack on the Bitcoin network\n    will incur transaction fees, just like before.  But if spam continues at a\n    rate exceeding the block size limit long enough for transactions to be\n    dropped from mempools, the vast majority of spam transaction fees will never\n    have to be paid.  In fact, as real users gain in desperation and pay higher\n    fees to get their transactions through in a timely manner, the spammers will\n    adjust their fees to minimize the cost of the attack and maximize\n    effectiveness.  Using this method, they keep their fees at a point that\n    causes most of the spam transactions to be dropped without confirmation\n    (free spam), while forcing a floor for transaction fees.  Thus, while spam\n    could be used by attackers to disable the network entirely, by paying\n    high-enough fees to actually fill the blocks with spam, it can also be used\n    by a single entity to force a transaction fee floor.  Real users will be\n    forced to pay a transaction fee higher than the majority of the spam to get\n    their transactions confirmed.  So this is an effective means for a minority\n    of miners to force higher fees through spam attacks, even in the face of\n    benevolent miners who would not support a higher fee floor by policy.\n    Miners would simply have no way to fix this, as they can only put in the\n    transactions that will fit under the block size limit.\n\n    In the face of such a spam attack, Bitcoin's credibility and usability would\n    be severely undermined.  The block size limit enables this attack, and I now\n    argue for its removal.  But we can't just remove it and ignore the problem\n    that it was intended to address.  We need a new fix for the large-block\n    problem described in the first paragraph that does not suffer from the\n    dropped-transaction spam-attack problem that is enabled by the block size\n    limit today.  My proposal is likely to be controversial, and I'm very much\n    open to hearing other better proposals.\n\n    Large blocks created by a miner as a means to spam other miners out of\n    competition is a problem because miners do not pay fees for their own\n    transactions when they mine them.  They collect the fees they pay.  This\n    breaks the economic barrier keeping people from spamming the network, as the\n    spamming is essentially free.  The proposed fix is to add a new rule on how\n    fees are handled.  Some amount of every fee should be considered as burned\n    and can never be spent.  I will propose 50% of the fee here, but there may\n    be better numbers that can be discovered prior to putting this into place.\n    If we'd like miners to continue to collect the same fees after this change,\n    we can suggest the default fee per transaction to be doubled.  Half of every\n    fee would be burned and disappear forever, effectively distributing the\n    value of those bitcoins across the entire money supply.  The other half\n    would be collected by the miner of the block as is done today.  This\n    solution would mean large blocks would cost a significant number of bitcoin\n    to create, even when all of the transactions are created by the miner of\n    that block.  For this to work, we'd need to ensure a minimum fee is paid for\n    most of the transactions in every block, and the new transaction fee rule is\n    in place.  Then the block size limit can be removed.\n\n    Raystonn\n\n\n    ------------------------------------------------------------------------------\n    _______________________________________________\n    Bitcoin-development mailing list\n    Bitcoin-development at lists.sourceforge.net\n    https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n  ------------------------------------------------------------------------------\n\n  _______________________________________________\n  Bitcoin-development mailing list\n  Bitcoin-development at lists.sourceforge.net\n  https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n\n\n\n-- \n\n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/f1191f01/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-09T18:25:18",
                "message_text_only": "On Tue, Jun 9, 2015 at 1:52 PM, Raystonn . <raystonn at hotmail.com> wrote:\n\n>   That does sound good on the surface, but how do we enforce #1 and #2?\n> They seem to be unenforceable, as a miner can adjust the size of the memory\n> pool in his local source.\n>\n\nIt doesn't have to be enforced. As long as a reasonable percentage of hash\nrate is following that policy an attacker that tries to flood the network\nwill fail to prevent normal transaction traffic from going through and will\njust end up transferring some wealth to the miners.\n\nAlthough the existing default mining policy (which it seems about 70% of\nhashpower follows) of setting aside some space for high-priority\ntransactions regardless of fee might also be enough to cause this attack to\nfail in practice.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/71320ab8/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-09T19:03:13",
                "message_text_only": "You are right of course.  This will work.  I like this idea more than my own proposed fix, as it doesn\u2019t make any big changes to the economics of the system in the way that burning would have.\n\nFrom: Gavin Andresen \nSent: Tuesday, June 09, 2015 11:25 AM\nTo: Raystonn . \nCc: Loi Luu ; Bitcoin Dev \nSubject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit\n\nOn Tue, Jun 9, 2015 at 1:52 PM, Raystonn . <raystonn at hotmail.com> wrote:\n\n  That does sound good on the surface, but how do we enforce #1 and #2?  They seem to be unenforceable, as a miner can adjust the size of the memory pool in his local source.\n\nIt doesn't have to be enforced. As long as a reasonable percentage of hash rate is following that policy an attacker that tries to flood the network will fail to prevent normal transaction traffic from going through and will just end up transferring some wealth to the miners.\n\nAlthough the existing default mining policy (which it seems about 70% of hashpower follows) of setting aside some space for high-priority transactions regardless of fee might also be enough to cause this attack to fail in practice.\n\n-- \n\n--\nGavin Andresen\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150609/77610583/attachment.html>"
            },
            {
                "author": "David Vorick",
                "date": "2015-06-20T03:49:28",
                "message_text_only": "I disagree that 11 is a reasonable value. That's less than 2 hours, which\nprobably wouldn't even last peak trading hours. You want the mempool to be\nbig enough that low-fee transactions introduced during peak hours are still\naround when there's much less activity (it maximizes miner profit and\nprevents people/wallets from needing to resubmit after activity has died\ndown).\n\nI think you'd want something closer to 72. At 1mb or even 8mb blocks, the\nmemory requirements are pretty reasonable. 20mb blocks and you may have to\nreconsider that limit.\n\nOn Tue, Jun 9, 2015 at 3:03 PM, Raystonn . <raystonn at hotmail.com> wrote:\n\n>   You are right of course.  This will work.  I like this idea more than\n> my own proposed fix, as it doesn\u2019t make any big changes to the economics of\n> the system in the way that burning would have.\n>\n>  *From:* Gavin Andresen <gavinandresen at gmail.com>\n> *Sent:* Tuesday, June 09, 2015 11:25 AM\n> *To:* Raystonn . <raystonn at hotmail.com>\n> *Cc:* Loi Luu <loi.luuthe at gmail.com> ; Bitcoin Dev\n> <bitcoin-development at lists.sourceforge.net>\n> *Subject:* Re: [Bitcoin-development] New attack identified and potential\n> solution described: Dropped-transaction spam attack against the block size\n> limit\n>\n>   On Tue, Jun 9, 2015 at 1:52 PM, Raystonn . <raystonn at hotmail.com> wrote:\n>\n>>   That does sound good on the surface, but how do we enforce #1 and #2?\n>> They seem to be unenforceable, as a miner can adjust the size of the memory\n>> pool in his local source.\n>>\n>\n> It doesn't have to be enforced. As long as a reasonable percentage of hash\n> rate is following that policy an attacker that tries to flood the network\n> will fail to prevent normal transaction traffic from going through and will\n> just end up transferring some wealth to the miners.\n>\n> Although the existing default mining policy (which it seems about 70% of\n> hashpower follows) of setting aside some space for high-priority\n> transactions regardless of fee might also be enough to cause this attack to\n> fail in practice.\n>\n> --\n> --\n> Gavin Andresen\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/792f2553/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-08T21:14:01",
                "message_text_only": "> If I were a miner under this attack, I would just use the spam to fill up \n> blocks alongside normal transactions maximising my profit.\n\nYou are assuming here that you can identify which transactions are spam, and \nwhich are not, and then segregate the spam into a separate channels of \ntransactions for inclusion on a 50/50 basis alongside other transactions. \nThere is no guarantee you will be able to identify those transactions. \nSure, if you can do that, then the easy fix is just to put them into a lower \nclass channel of transactions that guarantee no pressure on the non-spam \ntransactions.  But it's just not possible to do this in any meaningful way. \nIf you wanted to try, it would certainly add quite a bit of cost and \ncomplexity on the miner's side, and you aren't going to get anything other \nthan the simple spam that comes from the same set of addresses.\n\n> If I were to spam a lot of transactions to fill the memory pool it would \n> cost $120 every 10 minutes\n\nYou need to account for the transactions coming from real users.  Every real \ntransaction is approximately one less spam transaction you need to fill the \nblocks.\n\n> there is no memory pool cap currently\n\nReal hardware does not have an infinite amount of RAM.  Memory pool sizes \ncannot grow unbounded.  Some transactions with insufficient fees do get \ndropped today after many hours.\n\n\n-----Original Message----- \nFrom: Patrick Mccorry (PGR)\nSent: Monday, June 08, 2015 1:28 PM\nTo: Raystonn .\nCc: Bitcoin Dev\nSubject: Re: [Bitcoin-development] New attack identified and potential \nsolution described: Dropped-transaction spam attack against the block size \nlimit\n\nPlease correct me if I'm wrong (hopefully understood it). I don't think \nnormal users would need to pay a higher fee - as miners can just ignore the \nspam (since they will all be linked).\n\nIf I were to spam a lot of transactions to fill the memory pool it would \ncost $120 every 10 minutes (assuming 4,000 tx can fit inside a block and 3 \ncents per transaction), anything exceeding that may be considered \"spam\" - \nalthough I don't know if it would be \"free\" as the miner will eventually \nclaim all the fees, delayed payment is probably a better way to describe it. \nIIRC, there is no memory pool cap currently. To spam 1 million transactions \nwould cost $30k which would take up approx 250 blocks (around 250mb) which \nis around 42 hours to process. I think the memory pool can handle this data \ntoday (someone more knowledgeable can check this for me) - so the attack is \nv.expensive to carry out.\n\nA good way to prevent this spamming the memory pool is to only accept up to \na 'x' length of 0-confirmed transactions to make it more difficult to pull \noff (not impossible).\n\nIf I were a miner under this attack, I would just use the spam to fill up \nblocks alongside normal transactions maximising my profit.\n\nSent from my iPhone\n\n> On 8 Jun 2015, at 21:09, Raystonn . <raystonn at hotmail.com> wrote:\n>\n> When implemented, the block size limit was put in place to prevent the\n> potential for a massive block to be used as an attack to benefit the miner\n> of that block.  The theory goes that such a massive block would enrich its\n> miner by delaying other miners who are now busy downloading and validating\n> that huge block.  The original miner of that large-block would be free to\n> continue hashing the next block, giving it an advantage.\n>\n> Unfortunately, this block size limit opened a different attack.  Prior to\n> the limit, any attempt to spam the network by anyone other than someone\n> mining their own transactions would have been economically unfeasible.  As\n> every transaction would have a fee, there would have been a real cost for\n> every minute of spam.  The end result would have been a transfer of wealth\n> from spammer to Bitcoin miners, which would have harmed the spammers and\n> encouraged further mining of Bitcoin, a very antifragile outcome.\n>\n> But now we have the block size limit.  Things are very different with this\n> feature in place.  The beginning of a spam attack on the Bitcoin network\n> will incur transaction fees, just like before.  But if spam continues at a\n> rate exceeding the block size limit long enough for transactions to be\n> dropped from mempools, the vast majority of spam transaction fees will \n> never\n> have to be paid.  In fact, as real users gain in desperation and pay \n> higher\n> fees to get their transactions through in a timely manner, the spammers \n> will\n> adjust their fees to minimize the cost of the attack and maximize\n> effectiveness.  Using this method, they keep their fees at a point that\n> causes most of the spam transactions to be dropped without confirmation\n> (free spam), while forcing a floor for transaction fees.  Thus, while spam\n> could be used by attackers to disable the network entirely, by paying\n> high-enough fees to actually fill the blocks with spam, it can also be \n> used\n> by a single entity to force a transaction fee floor.  Real users will be\n> forced to pay a transaction fee higher than the majority of the spam to \n> get\n> their transactions confirmed.  So this is an effective means for a \n> minority\n> of miners to force higher fees through spam attacks, even in the face of\n> benevolent miners who would not support a higher fee floor by policy.\n> Miners would simply have no way to fix this, as they can only put in the\n> transactions that will fit under the block size limit.\n>\n> In the face of such a spam attack, Bitcoin's credibility and usability \n> would\n> be severely undermined.  The block size limit enables this attack, and I \n> now\n> argue for its removal.  But we can't just remove it and ignore the problem\n> that it was intended to address.  We need a new fix for the large-block\n> problem described in the first paragraph that does not suffer from the\n> dropped-transaction spam-attack problem that is enabled by the block size\n> limit today.  My proposal is likely to be controversial, and I'm very much\n> open to hearing other better proposals.\n>\n> Large blocks created by a miner as a means to spam other miners out of\n> competition is a problem because miners do not pay fees for their own\n> transactions when they mine them.  They collect the fees they pay.  This\n> breaks the economic barrier keeping people from spamming the network, as \n> the\n> spamming is essentially free.  The proposed fix is to add a new rule on \n> how\n> fees are handled.  Some amount of every fee should be considered as burned\n> and can never be spent.  I will propose 50% of the fee here, but there may\n> be better numbers that can be discovered prior to putting this into place.\n> If we'd like miners to continue to collect the same fees after this \n> change,\n> we can suggest the default fee per transaction to be doubled.  Half of \n> every\n> fee would be burned and disappear forever, effectively distributing the\n> value of those bitcoins across the entire money supply.  The other half\n> would be collected by the miner of the block as is done today.  This\n> solution would mean large blocks would cost a significant number of \n> bitcoin\n> to create, even when all of the transactions are created by the miner of\n> that block.  For this to work, we'd need to ensure a minimum fee is paid \n> for\n> most of the transactions in every block, and the new transaction fee rule \n> is\n> in place.  Then the block size limit can be removed.\n>\n> Raystonn\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-08T21:33:36",
                "message_text_only": "On Mon, Jun 08, 2015 at 02:14:01PM -0700, Raystonn . wrote:\n> > there is no memory pool cap currently\n> \n> Real hardware does not have an infinite amount of RAM.  Memory pool sizes \n> cannot grow unbounded.  Some transactions with insufficient fees do get \n> dropped today after many hours.\n\nActually they don't, which is an unfortunate problem with the existing\nmempool implementation; the only way a transaction can be removed from a\nBitcoin Core mempool is through it getting mined, double-spent, or the\nnode restarting.\n\nThe protection that we have against that attack is that you need access\nto a lot of bitcoins to pay enough fees. With the 0.01mBTC/KB minimum\nrelay fee and $230 USD/BTC that works out to about $2.3kUSD/GB of ram\nconsumed, and furthermore, actually getting that many transactions to\npropagate over the network is non-trivial. (no, I'm not going to tell\nyou how)\n\nThe obvious solution is to cap the size of the mempool and evict\ntransactions lowest fee/KB first, but if you do that they you (further)\nbreak zeroconf security. On the other hand, if you don't break zeroconf\nsecurity an attacker can prevent reasonable fee transactions from\npropagating.\n\nI probably should get around to fixing this...\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/8ec8b81f/attachment.sig>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-08T21:33:54",
                "message_text_only": "> the attack would be expensive.\n\nFor attacks being waged to destroy Bitcoin by filling all blocks with spam transactions, the attack succeeds when the attacker is well funded.  This gives well-funded private and/or public entities the means to destroy Bitcoin if they desire.  This is only true after the block size limit was implemented.  Without the block size limit, the spam doesn\u2019t harm Bitcoin.  It simply enriches miners at the cost of the spammers, which is a nicely antifragile quality.\n\nFor attacks being waged to push up minimum fees for the benefit of miners, by filling the mempool with enough spam transactions with the floor fee to cover a new block every time another block is discovered, they stand to gain.  Whatever fees they are paying, real transactions will have to pay more to get through.  It can be a net gain depending on how many miners are participating.\n\n\nFrom: Patrick Mccorry (PGR) \nSent: Monday, June 08, 2015 2:21 PM\nTo: Raystonn . \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit\n\n    If I were a miner under this attack, I would just use the spam to fill up blocks alongside normal transactions maximising my profit.\n\n  You are assuming here that you can identify which transactions are spam, and which are not, and then segregate the spam into a separate channels of transactions for inclusion on a 50/50 basis alongside other transactions. There is no guarantee you will be able to identify those transactions. Sure, if you can do that, then the easy fix is just to put them into a lower class channel of transactions that guarantee no pressure on the non-spam transactions.  But it's just not possible to do this in any meaningful way. If you wanted to try, it would certainly add quite a bit of cost and complexity on the miner's side, and you aren't going to get anything other than the simple spam that comes from the same set of addresses.\n\nWell it depends how the transactions spam - if you do a huge link of transactions (one after another, with the total bitcoins \"sent\" being reduced by a fee each time) this is easily identifiable - if you were to do it using unlinked transactions then this would require 2x the setup (do a lot of mixing to get 1 million unlinked outputs and then commence attack) which doubles the cost of the attack. \n\n    If I were to spam a lot of transactions to fill the memory pool it would cost $120 every 10 minutes\n\n  You need to account for the transactions coming from real users.  Every real transaction is approximately one less spam transaction you need to fill the blocks.\n\n\nI was suggesting the cost of an adversary to send the spam - if he did manage to fill the entire block each time that's the maximum charge. Of course the costs get spread out if normal transactions are included. \n\n    there is no memory pool cap currently\n\n  Real hardware does not have an infinite amount of RAM.  Memory pool sizes cannot grow unbounded.  Some transactions with insufficient fees do get dropped today after many hours.\n\nThat's true that's why I used 250mb as an example to cost $30k. Cheap laptops today (around \u00a3300) come with 6gb ram - so the attack would be expensive. \n\nI do doubt the miners codes probably are not prepared for an attack of this type - but it is really expensive to pull off from what I can see. \n\nSent from my iPhone\n\nOn 8 Jun 2015, at 22:14, Raystonn . <raystonn at hotmail.com> wrote:\n\n\n    If I were a miner under this attack, I would just use the spam to fill up blocks alongside normal transactions maximising my profit.\n\n\n  You are assuming here that you can identify which transactions are spam, and which are not, and then segregate the spam into a separate channels of transactions for inclusion on a 50/50 basis alongside other transactions. There is no guarantee you will be able to identify those transactions. Sure, if you can do that, then the easy fix is just to put them into a lower class channel of transactions that guarantee no pressure on the non-spam transactions.  But it's just not possible to do this in any meaningful way. If you wanted to try, it would certainly add quite a bit of cost and complexity on the miner's side, and you aren't going to get anything other than the simple spam that comes from the same set of addresses.\n\n\n    If I were to spam a lot of transactions to fill the memory pool it would cost $120 every 10 minutes\n\n\n  You need to account for the transactions coming from real users.  Every real transaction is approximately one less spam transaction you need to fill the blocks.\n\n\n    there is no memory pool cap currently\n\n\n  Real hardware does not have an infinite amount of RAM.  Memory pool sizes cannot grow unbounded.  Some transactions with insufficient fees do get dropped today after many hours.\n\n\n  -----Original Message----- From: Patrick Mccorry (PGR)\n  Sent: Monday, June 08, 2015 1:28 PM\n  To: Raystonn .\n  Cc: Bitcoin Dev\n  Subject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit\n\n  Please correct me if I'm wrong (hopefully understood it). I don't think normal users would need to pay a higher fee - as miners can just ignore the spam (since they will all be linked).\n\n  If I were to spam a lot of transactions to fill the memory pool it would cost $120 every 10 minutes (assuming 4,000 tx can fit inside a block and 3 cents per transaction), anything exceeding that may be considered \"spam\" - although I don't know if it would be \"free\" as the miner will eventually claim all the fees, delayed payment is probably a better way to describe it. IIRC, there is no memory pool cap currently. To spam 1 million transactions would cost $30k which would take up approx 250 blocks (around 250mb) which is around 42 hours to process. I think the memory pool can handle this data today (someone more knowledgeable can check this for me) - so the attack is v.expensive to carry out.\n\n  A good way to prevent this spamming the memory pool is to only accept up to a 'x' length of 0-confirmed transactions to make it more difficult to pull off (not impossible).\n\n  If I were a miner under this attack, I would just use the spam to fill up blocks alongside normal transactions maximising my profit.\n\n  Sent from my iPhone\n\n\n    On 8 Jun 2015, at 21:09, Raystonn . <raystonn at hotmail.com> wrote:\n\n\n\n    When implemented, the block size limit was put in place to prevent the\n\n    potential for a massive block to be used as an attack to benefit the miner\n\n    of that block.  The theory goes that such a massive block would enrich its\n\n    miner by delaying other miners who are now busy downloading and validating\n\n    that huge block.  The original miner of that large-block would be free to\n\n    continue hashing the next block, giving it an advantage.\n\n\n\n    Unfortunately, this block size limit opened a different attack.  Prior to\n\n    the limit, any attempt to spam the network by anyone other than someone\n\n    mining their own transactions would have been economically unfeasible.  As\n\n    every transaction would have a fee, there would have been a real cost for\n\n    every minute of spam.  The end result would have been a transfer of wealth\n\n    from spammer to Bitcoin miners, which would have harmed the spammers and\n\n    encouraged further mining of Bitcoin, a very antifragile outcome.\n\n\n\n    But now we have the block size limit.  Things are very different with this\n\n    feature in place.  The beginning of a spam attack on the Bitcoin network\n\n    will incur transaction fees, just like before.  But if spam continues at a\n\n    rate exceeding the block size limit long enough for transactions to be\n\n    dropped from mempools, the vast majority of spam transaction fees will never\n\n    have to be paid.  In fact, as real users gain in desperation and pay higher\n\n    fees to get their transactions through in a timely manner, the spammers will\n\n    adjust their fees to minimize the cost of the attack and maximize\n\n    effectiveness.  Using this method, they keep their fees at a point that\n\n    causes most of the spam transactions to be dropped without confirmation\n\n    (free spam), while forcing a floor for transaction fees.  Thus, while spam\n\n    could be used by attackers to disable the network entirely, by paying\n\n    high-enough fees to actually fill the blocks with spam, it can also be used\n\n    by a single entity to force a transaction fee floor.  Real users will be\n\n    forced to pay a transaction fee higher than the majority of the spam to get\n\n    their transactions confirmed.  So this is an effective means for a minority\n\n    of miners to force higher fees through spam attacks, even in the face of\n\n    benevolent miners who would not support a higher fee floor by policy.\n\n    Miners would simply have no way to fix this, as they can only put in the\n\n    transactions that will fit under the block size limit.\n\n\n\n    In the face of such a spam attack, Bitcoin's credibility and usability would\n\n    be severely undermined.  The block size limit enables this attack, and I now\n\n    argue for its removal.  But we can't just remove it and ignore the problem\n\n    that it was intended to address.  We need a new fix for the large-block\n\n    problem described in the first paragraph that does not suffer from the\n\n    dropped-transaction spam-attack problem that is enabled by the block size\n\n    limit today.  My proposal is likely to be controversial, and I'm very much\n\n    open to hearing other better proposals.\n\n\n\n    Large blocks created by a miner as a means to spam other miners out of\n\n    competition is a problem because miners do not pay fees for their own\n\n    transactions when they mine them.  They collect the fees they pay.  This\n\n    breaks the economic barrier keeping people from spamming the network, as the\n\n    spamming is essentially free.  The proposed fix is to add a new rule on how\n\n    fees are handled.  Some amount of every fee should be considered as burned\n\n    and can never be spent.  I will propose 50% of the fee here, but there may\n\n    be better numbers that can be discovered prior to putting this into place.\n\n    If we'd like miners to continue to collect the same fees after this change,\n\n    we can suggest the default fee per transaction to be doubled.  Half of every\n\n    fee would be burned and disappear forever, effectively distributing the\n\n    value of those bitcoins across the entire money supply.  The other half\n\n    would be collected by the miner of the block as is done today.  This\n\n    solution would mean large blocks would cost a significant number of bitcoin\n\n    to create, even when all of the transactions are created by the miner of\n\n    that block.  For this to work, we'd need to ensure a minimum fee is paid for\n\n    most of the transactions in every block, and the new transaction fee rule is\n\n    in place.  Then the block size limit can be removed.\n\n\n\n    Raystonn\n\n\n\n\n\n    ------------------------------------------------------------------------------\n\n    _______________________________________________\n\n    Bitcoin-development mailing list\n\n    Bitcoin-development at lists.sourceforge.net\n\n    https://lists.sourceforge.net/lists/listinfo/bitcoin-development \n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/0ec8b183/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-08T21:44:43",
                "message_text_only": "On Mon, Jun 08, 2015 at 02:33:54PM -0700, Raystonn . wrote:\n> > the attack would be expensive.\n> \n> For attacks being waged to destroy Bitcoin by filling all blocks with spam transactions, the attack succeeds when the attacker is well funded.  This gives well-funded private and/or public entities the means to destroy Bitcoin if they desire.  This is only true after the block size limit was implemented.  Without the block size limit, the spam doesn\u2019t harm Bitcoin.  It simply enriches miners at the cost of the spammers, which is a nicely antifragile quality.\n\nThere will always be a blocksize limit based on technological\nconsiderations - the network has a finite bandwidth limit.\n\nWithout a blocksize limit the attacker would just flood the network\nuntil the bandwidth usage became so great that consensus would fail,\nrendering Bitcoin both worthless, and insecure.\n\nThe worst an attacker flooding the network with transactions with a\nblocksize limit can do is raise costs, without harming security. Keep in\nmind, that at some point it'd be cheaper to just 51% attack the network.\nBased on the current block subsidy of 25BTC/MB that's at the point where\ntransaction fees are 25mBTC/KB, which corresponds to <$2/tx fees - not\nthat cheap, but still quite affordable for a large percentage of\nBitcoin's users right now. And that's the *absolute worst-case* attack\npossible.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/82d18602/attachment.sig>"
            },
            {
                "author": "Bob McElrath",
                "date": "2015-06-08T22:06:00",
                "message_text_only": "There was this wonderful technology invented a few years ago to deal with spam. It's called Hashcash. All these hacky heuristics like block size are just dancing around the problem, and the natural solution is already present in bitcoin: smaller blocks, (down to the point of individual transactions) each mined. Don't relay things that haven't been mined. As spam or transaction levels go up, mining targets for submission go up too.\n\nOf course this is a pretty serious redesign of bitcoin, and I'm not offering a concrete proposal at this time (but have one in the works, and I'd like to see others).\n\nI call the parameters of these hacky heuristics \"Consensus Threatening Quantities\" (CTQs) because changing them induces a hard fork. Bitcoin is full of them (block time, block size, target difficulty, retarget time, etc) and bitcoin would do well to face difficult redesign questions head on, and remove them entirely. (Proposal to appear...)\n\nOn June 8, 2015 5:44:43 PM EDT, Peter Todd <pete at petertodd.org> wrote:\n>On Mon, Jun 08, 2015 at 02:33:54PM -0700, Raystonn . wrote:\n>> > the attack would be expensive.\n>> \n>> For attacks being waged to destroy Bitcoin by filling all blocks with\n>spam transactions, the attack succeeds when the attacker is well\n>funded.  This gives well-funded private and/or public entities the\n>means to destroy Bitcoin if they desire.  This is only true after the\n>block size limit was implemented.  Without the block size limit, the\n>spam doesn\u2019t harm Bitcoin.  It simply enriches miners at the cost of\n>the spammers, which is a nicely antifragile quality.\n>\n>There will always be a blocksize limit based on technological\n>considerations - the network has a finite bandwidth limit.\n>\n>Without a blocksize limit the attacker would just flood the network\n>until the bandwidth usage became so great that consensus would fail,\n>rendering Bitcoin both worthless, and insecure.\n>\n>The worst an attacker flooding the network with transactions with a\n>blocksize limit can do is raise costs, without harming security. Keep\n>in\n>mind, that at some point it'd be cheaper to just 51% attack the\n>network.\n>Based on the current block subsidy of 25BTC/MB that's at the point\n>where\n>transaction fees are 25mBTC/KB, which corresponds to <$2/tx fees - not\n>that cheap, but still quite affordable for a large percentage of\n>Bitcoin's users right now. And that's the *absolute worst-case* attack\n>possible.\n>\n>-- \n>'peter'[:-1]@petertodd.org\n>0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n>\n>------------------------------------------------------------------------\n>\n>------------------------------------------------------------------------------\n>\n>\n>!DSPAM:55760d26244955859016385!\n>\n>\n>------------------------------------------------------------------------\n>\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>!DSPAM:55760d26244955859016385!\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/5e901d2e/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-08T22:28:16",
                "message_text_only": "On Mon, Jun 08, 2015 at 06:06:00PM -0400, Bob McElrath wrote:\n> There was this wonderful technology invented a few years ago to deal with spam. It's called Hashcash. All these hacky heuristics like block size are just dancing around the problem, and the natural solution is already present in bitcoin: smaller blocks, (down to the point of individual transactions) each mined. Don't relay things that haven't been mined. As spam or transaction levels go up, mining targets for submission go up too.\n\nYou know, you can think of Bitcoin as a system that maintains a ledger\nfor transferrable hashcash... Which means transaction fees *are* paid in\nhashcash.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/f6346052/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-08T22:26:22",
                "message_text_only": "On Mon, Jun 08, 2015 at 10:13:10PM +0000, Patrick Mccorry (PGR) wrote:\n> With the 0.01mBTC/KB minimum\n> relay fee and $230 USD/BTC that works out to about $2.3kUSD/GB of ram\n> \n> IIRC, the fee is 0.1mBTC, so it's $23/MB (assuming 1,000 tx * 2.3 cents) and $23k/GB (assuming $23 * 1000, as each $23 is 1mb). Only pointing out as it highlights thats it's even more expense to do.\n\nMike Hearn reduced the minimum relay fee to 0.01mBTC/KB:\n\nhttps://github.com/bitcoin/bitcoin/pull/3305\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/0dca52f6/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "New attack identified and potential solution described: Dropped-transaction spam attack against the block size limit",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "David Vorick",
                "Peter Todd",
                "Tier Nolan",
                "Bob McElrath",
                "Gavin Andresen",
                "Raystonn .",
                "Loi Luu"
            ],
            "messages_count": 15,
            "total_messages_chars_count": 58331
        }
    },
    {
        "title": "[Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the blocksize limit",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-08T21:40:17",
                "message_text_only": "> the only way a transaction can be removed from a Bitcoin Core mempool is \n> through it getting mined, double-spent, or the node restarting.\n\nRight.  And that results in some transactions with insufficient fees getting \ndropped today after many hours.\n\n> The protection that we have against that attack is that you need access to \n> a lot of bitcoins to pay enough fees.\n\nThat's no protection against a well-funded private and/or public entity. \nWithout the block size limit, this attack doesn't exist.  It would simply \nresult in a transfer of wealth from spammer to miners, which is a nicely \nantifragile response for the Bitcoin network.\n\n\n-----Original Message----- \nFrom: Peter Todd\nSent: Monday, June 08, 2015 2:33 PM\nTo: Raystonn .\nCc: Patrick Mccorry (PGR) ; Bitcoin Dev\nSubject: Re: [Bitcoin-development] New attack identified and potential \nsolution described: Dropped-transaction spam attack against the blocksize \nlimit\n\n> > there is no memory pool cap currently\n>\n> Real hardware does not have an infinite amount of RAM.  Memory pool sizes\n> cannot grow unbounded.  Some transactions with insufficient fees do get\n> dropped today after many hours.\n\nActually they don't, which is an unfortunate problem with the existing\nmempool implementation; the only way a transaction can be removed from a\nBitcoin Core mempool is through it getting mined, double-spent, or the\nnode restarting.\n\nThe protection that we have against that attack is that you need access\nto a lot of bitcoins to pay enough fees. With the 0.01mBTC/KB minimum\nrelay fee and $230 USD/BTC that works out to about $2.3kUSD/GB of ram\nconsumed, and furthermore, actually getting that many transactions to\npropagate over the network is non-trivial. (no, I'm not going to tell\nyou how)\n\nThe obvious solution is to cap the size of the mempool and evict\ntransactions lowest fee/KB first, but if you do that they you (further)\nbreak zeroconf security. On the other hand, if you don't break zeroconf\nsecurity an attacker can prevent reasonable fee transactions from\npropagating.\n\nI probably should get around to fixing this..."
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-08T22:01:34",
                "message_text_only": "> There will always be a blocksize limit based on technological \n> considerations - the network has a finite bandwidth limit.\n\nA bandwidth limit is not the same as a blocksize limit.  Bandwidth is unique \nto every individual.  Miners in China have different bandwidth and \nconnectivity than miners in the U.S., for example.  But the block size limit \nis dictated for eveyone.  They are not comparable.\n\n> Without a blocksize limit the attacker would just flood the network until \n> the bandwidth usage became so great that consensus would fail, rendering \n> Bitcoin both worthless, and insecure.\n\nNo, with no blocksize limit, a spammer would would flood the network with \ntransactions until they ran out of money.  Meanwhile, everyone would jump on \nboard trying to mine the blocks to collect the fees from the spammers.  It \ncould be one of the greatest transfers of wealth ever.  Bitcoin \ninfrastructure would build up to handle the required bandwidth, paid for by \nthe very entity spamming the network.  Bitcoin would flourish, growing \nwildly as long as the fees kept coming.  This is antifragility at its best.\n\n> The worst an attacker flooding the network with transactions with a \n> blocksize limit can do is raise costs, without harming security.\n\nNo, at attacker flooding the network with transactions with a blocksize \nlimit can keep their fees high enough that perhaps 1% of transactions coming \nfrom real end-users go through.  At this point everyone would give up on \nBitcoin as it would become completely unusable.  The BTCUSD market would \ntank, making it even easier to pay the transaction fees to keep real \ntransactions out of blocks, as it would continue to become cheaper and \neventually cost-free to obtain the bitcoin fees through market purchase.\n\n\n-----Original Message----- \nFrom: Peter Todd\nSent: Monday, June 08, 2015 2:44 PM\nTo: Raystonn .\nCc: Patrick Mccorry (PGR) ; Bitcoin Dev\nSubject: Re: [Bitcoin-development] New attack identified and potential \nsolution described: Dropped-transaction spam attack against the blocksize \nlimit\n\nOn Mon, Jun 08, 2015 at 02:33:54PM -0700, Raystonn . wrote:\n> > the attack would be expensive.\n>\n> For attacks being waged to destroy Bitcoin by filling all blocks with spam \n> transactions, the attack succeeds when the attacker is well funded.  This \n> gives well-funded private and/or public entities the means to destroy \n> Bitcoin if they desire.  This is only true after the block size limit was \n> implemented.  Without the block size limit, the spam doesn\u2019t harm Bitcoin. \n> It simply enriches miners at the cost of the spammers, which is a nicely \n> antifragile quality.\n\nThere will always be a blocksize limit based on technological \nconsiderations - the network has a finite bandwidth limit.\n\nWithout a blocksize limit the attacker would just flood the network until \nthe bandwidth usage became so great that consensus would fail, rendering \nBitcoin both worthless, and insecure.\n\nThe worst an attacker flooding the network with transactions with a \nblocksize limit can do is raise costs, without harming security. Keep in \nmind, that at some point it'd be cheaper to just 51% attack the network. \nBased on the current block subsidy of 25BTC/MB that's at the point where \ntransaction fees are 25mBTC/KB, which corresponds to <$2/tx fees - not that \ncheap, but still quite affordable for a large percentage of Bitcoin's users \nright now. And that's the *absolute worst-case* attack possible."
            },
            {
                "author": "Btc Drak",
                "date": "2015-06-08T22:07:44",
                "message_text_only": "On Mon, Jun 8, 2015 at 11:01 PM, Raystonn . <raystonn at hotmail.com> wrote:\n\n> No, with no blocksize limit, a spammer would would flood the network with\n> transactions until they ran out of money.\n\n\nI think you are forgetting even if you remove the blocksize limit, there is\nstill a hard message size limit imposed by the p2p protocol. Block would\nde-facto be limited to this size.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/961926e8/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-08T22:10:03",
                "message_text_only": "Not forgetting, simply deferring discussion on that.  We\u2019ve a much smaller limit to deal with right now.  But even that limit would have to go to remove this attack.\n\nFrom: Btc Drak \nSent: Monday, June 08, 2015 3:07 PM\nTo: Raystonn . \nCc: Peter Todd ; Bitcoin Dev ; Patrick Mccorry (PGR) \nSubject: Re: [Bitcoin-development] New attack identified and potential solution described: Dropped-transaction spam attack against the blocksize limit\n\nOn Mon, Jun 8, 2015 at 11:01 PM, Raystonn . <raystonn at hotmail.com> wrote:\n\n  No, with no blocksize limit, a spammer would would flood the network with\n  transactions until they ran out of money.\n\nI think you are forgetting even if you remove the blocksize limit, there is still a hard message size limit imposed by the p2p protocol. Block would de-facto be limited to this size.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/e53bf0b4/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-08T22:18:43",
                "message_text_only": "On Mon, Jun 08, 2015 at 03:01:34PM -0700, Raystonn . wrote:\n> >There will always be a blocksize limit based on technological\n> >considerations - the network has a finite bandwidth limit.\n> \n> A bandwidth limit is not the same as a blocksize limit.  Bandwidth\n> is unique to every individual.  Miners in China have different\n> bandwidth and connectivity than miners in the U.S., for example.\n> But the block size limit is dictated for eveyone.  They are not\n> comparable.\n\nBitcoin is a global consensus system - if you're bandwidth isn't\nsufficient to keep up you are not part of the consensus.\n\nThe blocksize limit *is* what determines the minimum bandwidth required\nto stay in consensus.\n\n> >Without a blocksize limit the attacker would just flood the\n> >network until the bandwidth usage became so great that consensus\n> >would fail, rendering Bitcoin both worthless, and insecure.\n> \n> No, with no blocksize limit, a spammer would would flood the network\n> with transactions until they ran out of money.  Meanwhile, everyone\n> would jump on board trying to mine the blocks to collect the fees\n> from the spammers.  It could be one of the greatest transfers of\n> wealth ever.  Bitcoin infrastructure would build up to handle the\n> required bandwidth, paid for by the very entity spamming the\n> network.  Bitcoin would flourish, growing wildly as long as the fees\n> kept coming.  This is antifragility at its best.\n\nAgain, in your scenario if the bandwidth consumed by those transactions\nwas sufficiently high, the network would collapse because consensus\nwould fail.\n\nWhy wouldn't that bandwidth be high enough to cause that collapse?\nBecause of the blocksize limit! (combined with an intelligent mempool\nthat increases the minimum fee/KB appropriately - we don't have that\nyet)\n\n> >The worst an attacker flooding the network with transactions with\n> >a blocksize limit can do is raise costs, without harming security.\n> \n> No, at attacker flooding the network with transactions with a\n> blocksize limit can keep their fees high enough that perhaps 1% of\n> transactions coming from real end-users go through.  At this point\n> everyone would give up on Bitcoin as it would become completely\n> unusable.  The BTCUSD market would tank, making it even easier to\n> pay the transaction fees to keep real transactions out of blocks, as\n> it would continue to become cheaper and eventually cost-free to\n> obtain the bitcoin fees through market purchase.\n\nI already did the math for you on that: the maximum transaction fee\nyou'd see in that kind of attack is around $2.5 USD/tx. That definitely\nis not high enough to make Bitcoin non-viable - I personally could\neasily afford fees like that for about 90% of my transactions this year\nby value, as I mainly use Bitcoin to get paid by my clients around the\nworld. In fact, just today O'Reilly paid $15 USD to send me a wire\ntransfer for expenses related to a conference I was invited too.\n\nA much more realistic transaction flood scenario - one that didn't raise\nserious questions about whether or not the attacker could afford to 51%\nattack Bitcoin - would raise tx fees to something more like $0.25/tx\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150608/c356183f/attachment.sig>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-08T22:46:59",
                "message_text_only": "> Bitcoin is a global consensus system - if you're (sic) bandwidth isn't \n> sufficient to keep up you are not part of the consensus.\n\nBandwidth can be purchased.  Infrastructure to handled increasing \ntransaction volume can be purchased.  The very fees being paid by a spammer \nwill be used to increase the miners' ability to absorb even more fees.  The \nblocksize limit cannot respond in such a dynamic way to attacks.  Miners \ncannot buy a greater blocksize limit in response to a spammer that is paying \nhigh fees to deny transaction confirmation to the rest of the planet in an \nattempt to destroy the network.  The blocksize limit is creating an attack \nthat can be maintained forever by any organization that can afford to fill \nthe blocks.  This attack would get incredibly cheaper once the BTCUSD market \ntanks in response to the lack of usability of the Bitcoin network, meaning \nit would be a self-reinforcing attack that would likely destroy Bitcoin for \nas long as an attacker wants to keep it up, or until you patch it to remove \nthe limit after-the-fact, which might be too little too late.\n\nIf this isn't fixed, I would expect to see it carried out at some point by \nsomeone with a large short position in BTCUSD.\n\n-----Original Message----- \nFrom: Peter Todd\nSent: Monday, June 08, 2015 3:18 PM\nTo: Raystonn .\nCc: Patrick Mccorry (PGR) ; Bitcoin Dev\nSubject: Re: [Bitcoin-development] New attack identified and potential \nsolution described: Dropped-transaction spam attack against the blocksize \nlimit\n\nOn Mon, Jun 08, 2015 at 03:01:34PM -0700, Raystonn . wrote:\n> >There will always be a blocksize limit based on technological\n> >considerations - the network has a finite bandwidth limit.\n>\n> A bandwidth limit is not the same as a blocksize limit.  Bandwidth\n> is unique to every individual.  Miners in China have different\n> bandwidth and connectivity than miners in the U.S., for example.\n> But the block size limit is dictated for eveyone.  They are not\n> comparable.\n\nBitcoin is a global consensus system - if you're bandwidth isn't\nsufficient to keep up you are not part of the consensus.\n\nThe blocksize limit *is* what determines the minimum bandwidth required\nto stay in consensus.\n\n> >Without a blocksize limit the attacker would just flood the\n> >network until the bandwidth usage became so great that consensus\n> >would fail, rendering Bitcoin both worthless, and insecure.\n>\n> No, with no blocksize limit, a spammer would would flood the network\n> with transactions until they ran out of money.  Meanwhile, everyone\n> would jump on board trying to mine the blocks to collect the fees\n> from the spammers.  It could be one of the greatest transfers of\n> wealth ever.  Bitcoin infrastructure would build up to handle the\n> required bandwidth, paid for by the very entity spamming the\n> network.  Bitcoin would flourish, growing wildly as long as the fees\n> kept coming.  This is antifragility at its best.\n\nAgain, in your scenario if the bandwidth consumed by those transactions\nwas sufficiently high, the network would collapse because consensus\nwould fail.\n\nWhy wouldn't that bandwidth be high enough to cause that collapse?\nBecause of the blocksize limit! (combined with an intelligent mempool\nthat increases the minimum fee/KB appropriately - we don't have that\nyet)\n\n> >The worst an attacker flooding the network with transactions with\n> >a blocksize limit can do is raise costs, without harming security.\n>\n> No, at attacker flooding the network with transactions with a\n> blocksize limit can keep their fees high enough that perhaps 1% of\n> transactions coming from real end-users go through.  At this point\n> everyone would give up on Bitcoin as it would become completely\n> unusable.  The BTCUSD market would tank, making it even easier to\n> pay the transaction fees to keep real transactions out of blocks, as\n> it would continue to become cheaper and eventually cost-free to\n> obtain the bitcoin fees through market purchase.\n\nI already did the math for you on that: the maximum transaction fee\nyou'd see in that kind of attack is around $2.5 USD/tx. That definitely\nis not high enough to make Bitcoin non-viable - I personally could\neasily afford fees like that for about 90% of my transactions this year\nby value, as I mainly use Bitcoin to get paid by my clients around the\nworld. In fact, just today O'Reilly paid $15 USD to send me a wire\ntransfer for expenses related to a conference I was invited too.\n\nA much more realistic transaction flood scenario - one that didn't raise\nserious questions about whether or not the attacker could afford to 51%\nattack Bitcoin - would raise tx fees to something more like $0.25/tx"
            }
        ],
        "thread_summary": {
            "title": "New attack identified and potential solution described: Dropped-transaction spam attack against the blocksize limit",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Raystonn .",
                "Btc Drak",
                "Peter Todd"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 15306
        }
    },
    {
        "title": "[Bitcoin-development] Consensus-enforced transaction replacement via sequence numbers",
        "thread_messages": [
            {
                "author": "Rusty Russell",
                "date": "2015-06-10T02:40:38",
                "message_text_only": "Tier Nolan <tier.nolan at gmail.com> writes:\n> What are the use cases for relative lock time verify?  I have 1 and I think\n> that is the kind of thing it is useful for.\n>\n> I think that most cases are just to guarantee that the other party has a\n> chance to react.  This means that 8191 blocks should be more than enough\n> (and most would set it lower).\n>\n> For long term, the absolute version is just as good.  That depends on use\n> cases.  \"You can't take step 4 until 3 months after step 3 has completed\"\n> doesn't seem useful.\n\nLightning channels want them exactly like this to revoke old\ntransactions, which could be ancient on long-lived channels.\n\nCheers,\nRusty."
            }
        ],
        "thread_summary": {
            "title": "Consensus-enforced transaction replacement via sequence numbers",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Rusty Russell"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 669
        }
    },
    {
        "title": "[Bitcoin-development] Is SourceForge still trustworthy enough to host this list?",
        "thread_messages": [
            {
                "author": "xor",
                "date": "2015-06-10T08:25:12",
                "message_text_only": "http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n\nTL;DR:\n\n> In 2013, GIMP\u2019s developers pulled the GIMP Windows downloads from\n> SourceForge. SourceForge was full of misleading advertisements\n> masquerading as \u201cDownload\u201d buttons \u2014 something that\u2019s a problem all over\n> the web. \n[...]\n> In 2015, SourceForge pushed back. Considering the old GIMP account on\n> SourceForge \u201cabandoned,\u201d they took control over it, locking out the\n> original maintainer. They then put GIMP downloads back up on SourceForge,\n> wrapped in SourceForge\u2019s own junkware-filled installer.\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 836 bytes\nDesc: This is a digitally signed message part.\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/10e90e6d/attachment.sig>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-10T09:35:57",
                "message_text_only": "On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n\nAll our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n\nNo opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n\nWladimir"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-10T16:46:49",
                "message_text_only": "Regarding changing the e-mail list provider. Is anyone interested in \nsponsoring it? There are non-free options, but it may be difficult to \nalways ensure the fee is being paid to the provider. I think finding an \nagreeable free solution may have been the issue before? I've also \nthought of trying to make a pay per message or byte solution (and this \ncost could be dynamic based upon the number of current mailing list \nsubscribers). This could solve the who pays problem (the sender pays), \nas well as motivate people to be more concise and clear with their \nmessages, and at the same time limit spam.\n\n\n\nAny thoughts?\n\nAndy Schroder\n\nOn 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n>\n> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n>\n> Wladimir\n>\n>\n> ------------------------------------------------------------------------------"
            },
            {
                "author": "Troy Benjegerdes",
                "date": "2015-06-10T18:02:56",
                "message_text_only": "I'll sponsor it, if we agree to implement a HashCash spam filter\nin the next 6 months. I've run mail servers for $DAYJOB for 5 or\nso years, and I've run my own personal server for the last 14.\n\nSince Bitcoin is a perfectly good HashCash system, I'm thinking a\nhttp://www.courier-mta.org/courierfilter.html filter plugin that \nchecks to ensure that the required bitcoin fee has been paid, or \nbetter yet included in the message in some standard form.\n\nI'd like to have several other people with linux admin experience\nalso agree to host live mirrors of the list, which could be switched\nover by whomever controls the relevant MX records for the mail list.\n\nWhat do you think a reasonable per-message fee should be, such that\na couple of independent admins can reasonably expect to be able to\npay $250/month each for their time and server hosting/bandwidth costs?\n\nI also think that anyone who's contributed more than say 10 or 15 \ncommits to https://github.com/bitcoin/bitcoin/graphs/contributors\nshould be excluded from the pay-with-bitcoin filter, as they have\npaid with code. The rest of us should be paying to distribute and \narchive their efforts.\n\nOn Wed, Jun 10, 2015 at 12:46:49PM -0400, Andy Schroder wrote:\n> Regarding changing the e-mail list provider. Is anyone interested in \n> sponsoring it? There are non-free options, but it may be difficult to \n> always ensure the fee is being paid to the provider. I think finding an \n> agreeable free solution may have been the issue before? I've also \n> thought of trying to make a pay per message or byte solution (and this \n> cost could be dynamic based upon the number of current mailing list \n> subscribers). This could solve the who pays problem (the sender pays), \n> as well as motivate people to be more concise and clear with their \n> messages, and at the same time limit spam.\n> \n> \n> \n> Any thoughts?\n> \n> Andy Schroder\n> \n> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n> > On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n> >> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n> > All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n> >\n> > No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n> >\n> > Wladimir\n> >\n> >\n> > ------------------------------------------------------------------------------\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-- \n----------------------------------------------------------------------------\nTroy Benjegerdes                 'da hozer'                  hozer at hozed.org\n7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop\n\n      Never pick a fight with someone who buys ink by the barrel,\n         nor try buy a hacker who makes money by the megahash"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-10T18:28:55",
                "message_text_only": "I like elegant solutions and while eventually I can see a \"pay to\ncontribute\" service, I don't imagine you'll get consensus in short order.\n\nList provider costs are pretty reasonable, so if that's the hurdle to\novercome I'm happy to offer sponsorship.\n\nIvan Brightly\nSolidX Partners\n\nOn Wed, Jun 10, 2015 at 12:46 PM, Andy Schroder <info at andyschroder.com>\nwrote:\n\n> Regarding changing the e-mail list provider. Is anyone interested in\n> sponsoring it? There are non-free options, but it may be difficult to\n> always ensure the fee is being paid to the provider. I think finding an\n> agreeable free solution may have been the issue before? I've also\n> thought of trying to make a pay per message or byte solution (and this\n> cost could be dynamic based upon the number of current mailing list\n> subscribers). This could solve the who pays problem (the sender pays),\n> as well as motivate people to be more concise and clear with their\n> messages, and at the same time limit spam.\n>\n>\n>\n> Any thoughts?\n>\n> Andy Schroder\n>\n> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n> > On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n> >>\n> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n> > All our downloads (even old ones) have recently been deleted from\n> sourceforge, for this reason. They haven't been mentioned in Bitcon Core\n> release announcements for a long time.\n> >\n> > No opinion on the mailing list. Though I think it's less urgent. The\n> issue of moving the mailinglist has come up before a few times and people\n> can't agree where to move to.\n> >\n> > Wladimir\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n>\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/8f93b6ab/attachment.html>"
            },
            {
                "author": "Troy Benjegerdes",
                "date": "2015-06-10T18:47:25",
                "message_text_only": "I think if the consensus is \"pay with commits or pay with bitcoin\"\nwe might have a consensus from the people that actually matter very \nquickly, because they've already paid ;)\n\nMy opinion is the most sustainable solution would be to identify a\nteam of admins and use something like Digital Ocean's new team accounts\nfeature and have someone like SolidX contribute funds for the servers\nand a few hours a week from one of their sysadmins to the team.\n\nI am dubious of most commercial list-as-a-service providers for the same\nreason I am dubious of sourceforge. Market conditions change and then all\nof a sudden the fact you're in control of a popular list becomes more \nvaluable than what your customer is paying you to run the list.\n\nIf the list provider can actively help out in encouraging read-only mirrors\nof the list archives, then I think we mitigate the above business risk.\n\n\nOn Wed, Jun 10, 2015 at 02:28:55PM -0400, Ivan Brightly wrote:\n> I like elegant solutions and while eventually I can see a \"pay to\n> contribute\" service, I don't imagine you'll get consensus in short order.\n> \n> List provider costs are pretty reasonable, so if that's the hurdle to\n> overcome I'm happy to offer sponsorship.\n> \n> Ivan Brightly\n> SolidX Partners\n> \n> On Wed, Jun 10, 2015 at 12:46 PM, Andy Schroder <info at andyschroder.com>\n> wrote:\n> \n> > Regarding changing the e-mail list provider. Is anyone interested in\n> > sponsoring it? There are non-free options, but it may be difficult to\n> > always ensure the fee is being paid to the provider. I think finding an\n> > agreeable free solution may have been the issue before? I've also\n> > thought of trying to make a pay per message or byte solution (and this\n> > cost could be dynamic based upon the number of current mailing list\n> > subscribers). This could solve the who pays problem (the sender pays),\n> > as well as motivate people to be more concise and clear with their\n> > messages, and at the same time limit spam.\n> >\n> >\n> >\n> > Any thoughts?\n> >\n> > Andy Schroder\n> >\n> > On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n> > > On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n> > >>\n> > http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n> > > All our downloads (even old ones) have recently been deleted from\n> > sourceforge, for this reason. They haven't been mentioned in Bitcon Core\n> > release announcements for a long time.\n> > >\n> > > No opinion on the mailing list. Though I think it's less urgent. The\n> > issue of moving the mailinglist has come up before a few times and people\n> > can't agree where to move to.\n> > >\n> > > Wladimir\n> > >\n> > >\n> > >\n> > ------------------------------------------------------------------------------\n> >\n> >\n> >\n> > ------------------------------------------------------------------------------\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n\n> ------------------------------------------------------------------------------\n\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n-- \n----------------------------------------------------------------------------\nTroy Benjegerdes                 'da hozer'                  hozer at hozed.org\n7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop\n\n      Never pick a fight with someone who buys ink by the barrel,\n         nor try buy a hacker who makes money by the megahash"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-10T19:13:11",
                "message_text_only": "\"My opinion is the most sustainable solution would be to identify a\nteam of admins and use something like Digital Ocean's new team accounts\nfeature and have someone like SolidX contribute funds for the servers\nand a few hours a week from one of their sysadmins to the team.\"\n\nThis is a perfectly fine option. Alternatively, if the paid mailing list\noption is preferred, I'd suggest Intermedia:\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/fb0ba912/attachment.html>"
            },
            {
                "author": "s7r",
                "date": "2015-06-10T18:36:23",
                "message_text_only": "The mail list is public, so it's not like the data on it is somehow\nsensitive. Sourcefoge is fine, it has a nice web UI where you can browse\nthe message and sort/order them as you want, etc.\n\nWhy would you want to move to a paid solution? And why would you want\nusers to have to pay per message? This is the worst idea ever from my\npoint of view. We want to encourage people to join the community, run\nfull nodes, ask questions, come with solutions, ideas for improvements\nand so on. Everyone should read and write and contribute as much as\npossible with ideas in debates. You never know who can have bright ideas\nin some contexts.\n\nBottom line is so far sourceforge handles the mail lists just fine. I\ndon't see a single advantage another mail list provider / system could\noffer, except some headache and extra work for migration. The software\ndistribution via sourcefoge was cancelled for obvious reasons which I\nfully understand and agree to, but it has nothing to do with the mail\nlists. We have way more important things to brainstorm about.\n\nOn 6/10/2015 7:46 PM, Andy Schroder wrote:\n> Regarding changing the e-mail list provider. Is anyone interested in \n> sponsoring it? There are non-free options, but it may be difficult to \n> always ensure the fee is being paid to the provider. I think finding an \n> agreeable free solution may have been the issue before? I've also \n> thought of trying to make a pay per message or byte solution (and this \n> cost could be dynamic based upon the number of current mailing list \n> subscribers). This could solve the who pays problem (the sender pays), \n> as well as motivate people to be more concise and clear with their \n> messages, and at the same time limit spam.\n> \n> \n> \n> Any thoughts?\n> \n> Andy Schroder\n> \n> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n>>\n>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n>>\n>> Wladimir\n>>\n>>\n>> ------------------------------------------------------------------------------\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-10T18:59:48",
                "message_text_only": "Hello,\n\nA couple of motivations for a mailing list switch:\n\n 1. Sometimes the mailing list delays delivery for 10 minutes to several\n    days.\n 2. There are usually lots of ads at the footer of the messages. Really\n    confuses new readers (for me at least), and seems like it really\n    pollutes such a historical dialog that may be referenced long into\n    the future. How would it be if the 10 Commandments, Magna Carta,\n    Bill of Rights, The Sermon on the Mount, or The Gettysburg Address\n    had ads intertwined within them?\n 3. Don't think HTML messages are allowed.\n 4. Seems like digital signatures are always broken on messages because\n    the list server slightly modifies them (?), so my e-mail client\n    doesn't verify them all.\n\n\n\nAndy Schroder\n\nOn 06/10/2015 02:36 PM, s7r wrote:\n> The mail list is public, so it's not like the data on it is somehow\n> sensitive. Sourcefoge is fine, it has a nice web UI where you can browse\n> the message and sort/order them as you want, etc.\n>\n> Why would you want to move to a paid solution? And why would you want\n> users to have to pay per message? This is the worst idea ever from my\n> point of view. We want to encourage people to join the community, run\n> full nodes, ask questions, come with solutions, ideas for improvements\n> and so on. Everyone should read and write and contribute as much as\n> possible with ideas in debates. You never know who can have bright ideas\n> in some contexts.\n>\n> Bottom line is so far sourceforge handles the mail lists just fine. I\n> don't see a single advantage another mail list provider / system could\n> offer, except some headache and extra work for migration. The software\n> distribution via sourcefoge was cancelled for obvious reasons which I\n> fully understand and agree to, but it has nothing to do with the mail\n> lists. We have way more important things to brainstorm about.\n>\n> On 6/10/2015 7:46 PM, Andy Schroder wrote:\n>> Regarding changing the e-mail list provider. Is anyone interested in\n>> sponsoring it? There are non-free options, but it may be difficult to\n>> always ensure the fee is being paid to the provider. I think finding an\n>> agreeable free solution may have been the issue before? I've also\n>> thought of trying to make a pay per message or byte solution (and this\n>> cost could be dynamic based upon the number of current mailing list\n>> subscribers). This could solve the who pays problem (the sender pays),\n>> as well as motivate people to be more concise and clear with their\n>> messages, and at the same time limit spam.\n>>\n>>\n>>\n>> Any thoughts?\n>>\n>> Andy Schroder\n>>\n>> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n>>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n>>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n>>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n>>>\n>>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n>>>\n>>> Wladimir\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/9f17930a/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/9f17930a/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-10T19:03:20",
                "message_text_only": "On Wed, Jun 10, 2015 at 02:59:48PM -0400, Andy Schroder wrote:\n> Hello,\n> \n> A couple of motivations for a mailing list switch:\n> \n> 1. Sometimes the mailing list delays delivery for 10 minutes to several\n>    days.\n> 2. There are usually lots of ads at the footer of the messages. Really\n>    confuses new readers (for me at least), and seems like it really\n>    pollutes such a historical dialog that may be referenced long into\n>    the future. How would it be if the 10 Commandments, Magna Carta,\n>    Bill of Rights, The Sermon on the Mount, or The Gettysburg Address\n>    had ads intertwined within them?\n> 3. Don't think HTML messages are allowed.\n\nPlease keep it that way; HTML messages have no place on a technical\nmailing list.\n\n> 4. Seems like digital signatures are always broken on messages because\n>    the list server slightly modifies them (?), so my e-mail client\n>    doesn't verify them all.\n\nWhat type of digital signatures specifically? What email client?\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000004e3d7b1cff56c5264b16dd79d10a26683c2fabb11669b5d\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/47050741/attachment.sig>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-10T19:12:02",
                "message_text_only": "Andy Schroder\n\nOn 06/10/2015 03:03 PM, Peter Todd wrote:\n>\n>> 4. Seems like digital signatures are always broken on messages because\n>>     the list server slightly modifies them (?), so my e-mail client\n>>     doesn't verify them all.\n> What type of digital signatures specifically? What email client?\n\nI think they are usually PGP/MIME signatures that are not working right. \nIf you'll notice from my e-mail headers:\n\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.2.0\nX-Enigmail-Version: 1.6\n\n\n\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/469702e5/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-10T19:20:04",
                "message_text_only": "On Wed, Jun 10, 2015 at 03:12:02PM -0400, Andy Schroder wrote:\n> \n> Andy Schroder\n> \n> On 06/10/2015 03:03 PM, Peter Todd wrote:\n> >\n> >>4. Seems like digital signatures are always broken on messages because\n> >>    the list server slightly modifies them (?), so my e-mail client\n> >>    doesn't verify them all.\n> >What type of digital signatures specifically? What email client?\n> \n> I think they are usually PGP/MIME signatures that are not working\n> right. If you'll notice from my e-mail headers:\n> \n> User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.2.0\n> X-Enigmail-Version: 1.6\n\nIt might be that Thunderbird doesn't properly handle messages with both\nsigned and unsigned content. I use mutt myself, which handles it just\nfine. (the sigs on your emails verify just fine for instance)\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000134f9a433a4bece258b5035ecda33384f820a60493ca2887\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/d87cbc4a/attachment.sig>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-10T19:36:42",
                "message_text_only": "Andy Schroder\n\nOn 06/10/2015 03:20 PM, Peter Todd wrote:\n> On Wed, Jun 10, 2015 at 03:12:02PM -0400, Andy Schroder wrote:\n>> Andy Schroder\n>>\n>> On 06/10/2015 03:03 PM, Peter Todd wrote:\n>>>> 4. Seems like digital signatures are always broken on messages because\n>>>>     the list server slightly modifies them (?), so my e-mail client\n>>>>     doesn't verify them all.\n>>> What type of digital signatures specifically? What email client?\n>> I think they are usually PGP/MIME signatures that are not working\n>> right. If you'll notice from my e-mail headers:\n>>\n>> User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.2.0\n>> X-Enigmail-Version: 1.6\n> It might be that Thunderbird doesn't properly handle messages with both\n> signed and unsigned content. I use mutt myself, which handles it just\n> fine. (the sigs on your emails verify just fine for instance)\n>\n\nIt's possible that the enigmail extension is not working right, but I \nwas under the impression that it is just feeding data to gpg and then \nreceiving the response back. It's possible that your e-mail you just \nchecked was not sent through mailman since I also replied directly to \nyou explicitly (in which case the message has not been modified) and you \nprobably have the setting in the mailing list set to not send duplicate \nmessages if you are an explicit TO. I just deleted all explicit TOs for \nthis message, so everyone should be receiving it through the mailing \nlist and not directly. Is the signature still valid for you now? I think \nenigmail can handle messages with some signed and unsigned content, and \nmaybe PGP/MIME inherently does not support this and a mailing list \nre-writing parts of messages is an expected action? If this message \nre-writing is an expected action and I'm correct that PGP/MIME does not \nsupport partially signed content, then maybe it is just a recommendation \nfor this mailing list to not use PGP/MIME for messages sent to the list?\n\nCan anyone else confirm?\n\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/76d9e8c0/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-10T19:43:01",
                "message_text_only": "On Wed, Jun 10, 2015 at 03:36:42PM -0400, Andy Schroder wrote:\n> It's possible that the enigmail extension is not working right, but\n> I was under the impression that it is just feeding data to gpg and\n> then receiving the response back. It's possible that your e-mail you\n> just checked was not sent through mailman since I also replied\n> directly to you explicitly (in which case the message has not been\n> modified) and you probably have the setting in the mailing list set\n> to not send duplicate messages if you are an explicit TO. I just\n> deleted all explicit TOs for this message, so everyone should be\n> receiving it through the mailing list and not directly. Is the\n> signature still valid for you now? I think enigmail can handle\n\nIt has perfectly valid signatures, as do your earlier messages to the\nlist.\n\n> messages with some signed and unsigned content, and maybe PGP/MIME\n> inherently does not support this and a mailing list re-writing parts\n> of messages is an expected action? If this message re-writing is an\n> expected action and I'm correct that PGP/MIME does not support\n> partially signed content, then maybe it is just a recommendation for\n> this mailing list to not use PGP/MIME for messages sent to the list?\n\nPGP/MIME definitely does support partially signed content.\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000009e865d07f75341a5f3dc15f0e149055a241eedd552c3b88\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/f2d56e23/attachment.sig>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-10T20:03:57",
                "message_text_only": "Hello,\n\nThanks for testing this clarifying things about PGP/MIME and I apologize \nfor wasting your time with it. It looks like a SPAM filtering service I \nuse is re-writing some parts of some plain text messages with some \nspecial/alternate encoding characters (not sure what it really is). \nAnyway, if I manually export/import a message from gmane (bypassing my \ne-mail SPAM filter), thunderbird/enigmail is not having problems \nverifying signatures. I guess I never realized this before because all \nother signed messages I normally receive are encrypted and the SPAM \nfilter does not mess with non plain text data.\n\n\n\nAndy Schroder\n\nOn 06/10/2015 03:43 PM, Peter Todd wrote:\n> On Wed, Jun 10, 2015 at 03:36:42PM -0400, Andy Schroder wrote:\n>> It's possible that the enigmail extension is not working right, but\n>> I was under the impression that it is just feeding data to gpg and\n>> then receiving the response back. It's possible that your e-mail you\n>> just checked was not sent through mailman since I also replied\n>> directly to you explicitly (in which case the message has not been\n>> modified) and you probably have the setting in the mailing list set\n>> to not send duplicate messages if you are an explicit TO. I just\n>> deleted all explicit TOs for this message, so everyone should be\n>> receiving it through the mailing list and not directly. Is the\n>> signature still valid for you now? I think enigmail can handle\n> It has perfectly valid signatures, as do your earlier messages to the\n> list.\n>\n>> messages with some signed and unsigned content, and maybe PGP/MIME\n>> inherently does not support this and a mailing list re-writing parts\n>> of messages is an expected action? If this message re-writing is an\n>> expected action and I'm correct that PGP/MIME does not support\n>> partially signed content, then maybe it is just a recommendation for\n>> this mailing list to not use PGP/MIME for messages sent to the list?\n> PGP/MIME definitely does support partially signed content.\n>\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/9129a0de/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-10T19:54:25",
                "message_text_only": "On Wed, Jun 10, 2015 at 11:59 AM, Andy Schroder <info at andyschroder.com>\nwrote:\n\n>  Hello,\n>\n> A couple of motivations for a mailing list switch:\n>\n>    1. Sometimes the mailing list delays delivery for 10 minutes to\n>    several days.\n>    2. There are usually lots of ads at the footer of the messages. Really\n>    confuses new readers (for me at least), and seems like it really pollutes\n>    such a historical dialog that may be referenced long into the future. How\n>    would it be if the 10 Commandments, Magna Carta, Bill of Rights, The Sermon\n>    on the Mount, or The Gettysburg Address had ads intertwined within them?\n>     3. Don't think HTML messages are allowed.\n>    4. Seems like digital signatures are always broken on messages because\n>    the list server slightly modifies them (?), so my e-mail client doesn't\n>    verify them all.\n>\n> Not only -- mail header rewrites cause all my emails to go into people's\nspam folders, if they were not directly listed in the To/CC headers...\n\n\n\n\n>\n>    1.\n>\n>\n>\n> Andy Schroder\n>\n> On 06/10/2015 02:36 PM, s7r wrote:\n>\n> The mail list is public, so it's not like the data on it is somehow\n> sensitive. Sourcefoge is fine, it has a nice web UI where you can browse\n> the message and sort/order them as you want, etc.\n>\n> Why would you want to move to a paid solution? And why would you want\n> users to have to pay per message? This is the worst idea ever from my\n> point of view. We want to encourage people to join the community, run\n> full nodes, ask questions, come with solutions, ideas for improvements\n> and so on. Everyone should read and write and contribute as much as\n> possible with ideas in debates. You never know who can have bright ideas\n> in some contexts.\n>\n> Bottom line is so far sourceforge handles the mail lists just fine. I\n> don't see a single advantage another mail list provider / system could\n> offer, except some headache and extra work for migration. The software\n> distribution via sourcefoge was cancelled for obvious reasons which I\n> fully understand and agree to, but it has nothing to do with the mail\n> lists. We have way more important things to brainstorm about.\n>\n> On 6/10/2015 7:46 PM, Andy Schroder wrote:\n>\n>  Regarding changing the e-mail list provider. Is anyone interested in\n> sponsoring it? There are non-free options, but it may be difficult to\n> always ensure the fee is being paid to the provider. I think finding an\n> agreeable free solution may have been the issue before? I've also\n> thought of trying to make a pay per message or byte solution (and this\n> cost could be dynamic based upon the number of current mailing list\n> subscribers). This could solve the who pays problem (the sender pays),\n> as well as motivate people to be more concise and clear with their\n> messages, and at the same time limit spam.\n>\n>\n>\n> Any thoughts?\n>\n> Andy Schroder\n>\n> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n>\n>  On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n>\n>  http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n>\n>  All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n>\n> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n>\n> Wladimir\n>\n>\n> ------------------------------------------------------------------------------\n>\n>  ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/622a4d20/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-11T09:27:46",
                "message_text_only": "On Wed, Jun 10, 2015 at 09:36:23PM +0300, s7r wrote:\n> The mail list is public, so it's not like the data on it is somehow\n> sensitive. Sourcefoge is fine, it has a nice web UI where you can browse\n> the message and sort/order them as you want, etc.\n> \n> Why would you want to move to a paid solution? And why would you want\n> users to have to pay per message? This is the worst idea ever from my\n> point of view. We want to encourage people to join the community, run\n> full nodes, ask questions, come with solutions, ideas for improvements\n> and so on. Everyone should read and write and contribute as much as\n> possible with ideas in debates. You never know who can have bright ideas\n> in some contexts.\n> \n> Bottom line is so far sourceforge handles the mail lists just fine. I\n> don't see a single advantage another mail list provider / system could\n> offer, except some headache and extra work for migration. The software\n> distribution via sourcefoge was cancelled for obvious reasons which I\n> fully understand and agree to, but it has nothing to do with the mail\n> lists. We have way more important things to brainstorm about.\n\nI completely agree here. I'm not against migration if a much better option comes along, but e.g. paying for another provider sounds like nonsense when sourceforge does this for free (with some minor annoyances - other providers will have their own).\n\nPaying per message is far-fetched, something that could work in economic theory with perfectly spherical people in their perfectly efficient market. In practice the likely result would be a mailing list only used for advertisement and promotion, and technical discussion and release announcements would disappear.\n\nBTW for people that *don't* like sourceforge's web archive UI there are some other options via gmane:\n\nhttp://dir.gmane.org/gmane.comp.bitcoin.devel\n\nWladimir"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-10T18:41:32",
                "message_text_only": "Hello Troy,\n\nI like the idea of the live mirrors. I'm personally just an amateur at \nsetting up e-mail servers, but the first concern I have is that everyone \nhosting a mirror may not necessarily use the same SMTP MTA. I personally \nuse postfix, but I'm not sure what most people use.\n\nSome other features I'd like to see required is PGP/MIME support and \nensuring that digital signatures are not broken by footers, etc. \nappended to the bottom of the message by the list. It might be nice to \nalso allow for HTML messages?\n\nHere is a link with some current statistics to get an idea what the load \nmay be. I've been told there are about 1,200 subscribers. \nhttp://dir.gmane.org/gmane.comp.bitcoin.devel\n\n\n\nAndy Schroder\n\nOn 06/10/2015 02:02 PM, Troy Benjegerdes wrote:\n> I'll sponsor it, if we agree to implement a HashCash spam filter\n> in the next 6 months. I've run mail servers for $DAYJOB for 5 or\n> so years, and I've run my own personal server for the last 14.\n>\n> Since Bitcoin is a perfectly good HashCash system, I'm thinking a\n> http://www.courier-mta.org/courierfilter.html filter plugin that\n> checks to ensure that the required bitcoin fee has been paid, or\n> better yet included in the message in some standard form.\n>\n> I'd like to have several other people with linux admin experience\n> also agree to host live mirrors of the list, which could be switched\n> over by whomever controls the relevant MX records for the mail list.\n>\n> What do you think a reasonable per-message fee should be, such that\n> a couple of independent admins can reasonably expect to be able to\n> pay $250/month each for their time and server hosting/bandwidth costs?\n>\n> I also think that anyone who's contributed more than say 10 or 15\n> commits to https://github.com/bitcoin/bitcoin/graphs/contributors\n> should be excluded from the pay-with-bitcoin filter, as they have\n> paid with code. The rest of us should be paying to distribute and\n> archive their efforts.\n>\n> On Wed, Jun 10, 2015 at 12:46:49PM -0400, Andy Schroder wrote:\n>> Regarding changing the e-mail list provider. Is anyone interested in\n>> sponsoring it? There are non-free options, but it may be difficult to\n>> always ensure the fee is being paid to the provider. I think finding an\n>> agreeable free solution may have been the issue before? I've also\n>> thought of trying to make a pay per message or byte solution (and this\n>> cost could be dynamic based upon the number of current mailing list\n>> subscribers). This could solve the who pays problem (the sender pays),\n>> as well as motivate people to be more concise and clear with their\n>> messages, and at the same time limit spam.\n>>\n>>\n>>\n>> Any thoughts?\n>>\n>> Andy Schroder\n>>\n>> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n>>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n>>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n>>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n>>>\n>>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n>>>\n>>> Wladimir\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/37956656/attachment.sig>"
            },
            {
                "author": "Troy Benjegerdes",
                "date": "2015-06-11T01:46:47",
                "message_text_only": "And just like I did here, if I were a list member with good reputation,\nand felt like reposting something that did not make it to the list by\naccident or ommission, or a hashcash posting fee that was too high, it\nwould end up on the list if enough people bothered to read it and \neither repost, or post the bond to pass the filter.\n\nOn Wed, Jun 10, 2015 at 07:04:41PM +0000, Patrick Mccorry (PGR) wrote:\n> Yeah post back to list - its an interesting response. So members with a good reputation could vote to say if the bond should be returned to the new member. I just wanted to highlight that people who do not commit a lot of code contribute in other, arguably equal ways. \n> \n> ________________________________________\n> From: Troy Benjegerdes <hozer at hozed.org>\n> Sent: 10 June 2015 19:58\n> To: Patrick Mccorry (PGR)\n> Subject: Re: [Bitcoin-development] Is SourceForge still trustworthy enough to host this list?\n> \n> Did you want responses sent back to the list?\n> \n> I think, if I had a revenue stream from a pay-to-post list in place,\n> the first thing I'd do is spend some time on a reputation/'post bond'\n> interface in which known users with a good reputation could post for\n> no charge, while if you were unknown or new to the list, you would\n> need to post a bond.\n> \n> If the consensus of the list was that your message was valuable, it\n> would be broadcast and archived no charge.\n> \n> If enough readers thought the message was spam, those readers could\n> collect the posted bond, thus compensating them for the time wasted\n> reading said spam.\n> \n> I would hope that in such an environment would still work for researchers.\n> Does this answer your concerns? Should I repost to the list, because\n> I do think your concern is worth sharing?\n> \n> On Wed, Jun 10, 2015 at 06:48:29PM +0000, Patrick Mccorry (PGR) wrote:\n> > What about researchers who do not commit code but help find problems in this space. I don't think a mailing should be a paid for service - as it's difficult to determine who should and should not pay.\n> >\n> > Sent from my iPhone\n> >\n> > > On 10 Jun 2015, at 19:45, Troy Benjegerdes <hozer at hozed.org> wrote:\n> > >\n> > > I'll sponsor it, if we agree to implement a HashCash spam filter\n> > > in the next 6 months. I've run mail servers for $DAYJOB for 5 or\n> > > so years, and I've run my own personal server for the last 14.\n> > >\n> > > Since Bitcoin is a perfectly good HashCash system, I'm thinking a\n> > > http://www.courier-mta.org/courierfilter.html filter plugin that\n> > > checks to ensure that the required bitcoin fee has been paid, or\n> > > better yet included in the message in some standard form.\n> > >\n> > > I'd like to have several other people with linux admin experience\n> > > also agree to host live mirrors of the list, which could be switched\n> > > over by whomever controls the relevant MX records for the mail list.\n> > >\n> > > What do you think a reasonable per-message fee should be, such that\n> > > a couple of independent admins can reasonably expect to be able to\n> > > pay $250/month each for their time and server hosting/bandwidth costs?\n> > >\n> > > I also think that anyone who's contributed more than say 10 or 15\n> > > commits to https://github.com/bitcoin/bitcoin/graphs/contributors\n> > > should be excluded from the pay-with-bitcoin filter, as they have\n> > > paid with code. The rest of us should be paying to distribute and\n> > > archive their efforts.\n> > >\n> > >> On Wed, Jun 10, 2015 at 12:46:49PM -0400, Andy Schroder wrote:\n> > >> Regarding changing the e-mail list provider. Is anyone interested in\n> > >> sponsoring it? There are non-free options, but it may be difficult to\n> > >> always ensure the fee is being paid to the provider. I think finding an\n> > >> agreeable free solution may have been the issue before? I've also\n> > >> thought of trying to make a pay per message or byte solution (and this\n> > >> cost could be dynamic based upon the number of current mailing list\n> > >> subscribers). This could solve the who pays problem (the sender pays),\n> > >> as well as motivate people to be more concise and clear with their\n> > >> messages, and at the same time limit spam.\n> > >>\n> > >>\n> > >>\n> > >> Any thoughts?\n> > >>\n> > >> Andy Schroder\n> > >>\n> > >>> On 06/10/2015 05:35 AM, Wladimir J. van der Laan wrote:\n> > >>>> On Wed, Jun 10, 2015 at 10:25:12AM +0200, xor wrote:\n> > >>>> http://www.howtogeek.com/218764/warning-don%E2%80%99t-download-software-from-sourceforge-if-you-can-help-it/\n> > >>> All our downloads (even old ones) have recently been deleted from sourceforge, for this reason. They haven't been mentioned in Bitcon Core release announcements for a long time.\n> > >>>\n> > >>> No opinion on the mailing list. Though I think it's less urgent. The issue of moving the mailinglist has come up before a few times and people can't agree where to move to.\n> > >>>\n> > >>> Wladimir\n> > >>>\n> > >>>\n> > >>> ------------------------------------------------------------------------------\n> > >>\n> > >>\n> > >> ------------------------------------------------------------------------------\n> > >> _______________________________________________\n> > >> Bitcoin-development mailing list\n> > >> Bitcoin-development at lists.sourceforge.net\n> > >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> > >\n> > > --\n> > > ----------------------------------------------------------------------------\n> > > Troy Benjegerdes                 'da hozer'                  hozer at hozed.org\n> > > 7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop\n> > >\n> > >      Never pick a fight with someone who buys ink by the barrel,\n> > >         nor try buy a hacker who makes money by the megahash\n> > >\n> > >\n> > > ------------------------------------------------------------------------------\n> > > _______________________________________________\n> > > Bitcoin-development mailing list\n> > > Bitcoin-development at lists.sourceforge.net\n> > > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> --\n> ----------------------------------------------------------------------------\n> Troy Benjegerdes                 'da hozer'                  hozer at hozed.org\n> 7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop\n> \n>       Never pick a fight with someone who buys ink by the barrel,\n>          nor try buy a hacker who makes money by the megahash\n\n-- \n----------------------------------------------------------------------------\nTroy Benjegerdes                 'da hozer'                  hozer at hozed.org\n7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop\n\n      Never pick a fight with someone who buys ink by the barrel,\n         nor try buy a hacker who makes money by the megahash"
            }
        ],
        "thread_summary": {
            "title": "Is SourceForge still trustworthy enough to host this list?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Troy Benjegerdes",
                "s7r",
                "xor",
                "Peter Todd",
                "Wladimir J. van der Laan",
                "Andy Schroder",
                "Ivan Brightly"
            ],
            "messages_count": 19,
            "total_messages_chars_count": 45943
        }
    },
    {
        "title": "[Bitcoin-development] First-Seen-Safe Replace-by-Fee patch against Bitcoin Core v0.10.2",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2015-06-10T09:10:13",
                "message_text_only": "First-seen-safe Replace-by-Fee is now available as a patch against\nv0.10.2:\n\n    https://github.com/petertodd/bitcoin/tree/first-seen-safe-rbf-v0.10.2\n\nI've also had a pull-req against git HEAD open for a few weeks now:\n\n    https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104877829\n\nI've got some hashing power interested in running this patch in the near\nfuture, so I'm offering a bounty of up to 1 BTC to anyone who can find a\nway to attack miners running this patch. Specifically, I'm concerned\nabout things that would lead to significant losses for those miners. A\ntotal crash would be considered very serious - 1 BTC - while excess\nbandwidth usage would be considered minor - more like 0.1 BTC. (remember\nthat this would have to be bandwidth significantly in excess of existing\nattacks)\n\nFor reference, here's an example of a crash exploit found by Suhas\nDaftuar: https://github.com/bitcoin/bitcoin/pull/6176#issuecomment-104877829\n\nIf two people report the same or overlapping issues, first person will\nget priority. Adding a new test that demos your exploit to the unit\ntests will be looked upon favorably. That said, in general I'm not going\nto make any hard promises with regards to payouts and will be using my\nbest judgement. I've got a bit over 2BTC budgetted for this, which is\ncoming out of my own pockets - I'm not rich! All applicants are however\nwelcome to troll me on reddit if you think I'm being unfair.\n\n\nSuhas: speaking of, feel free to email me a Bitcoin address! :)\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000006dd456cf5ff8bbb56cf88e9314711d55b75c8d23cccddd5\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/c18b5ba0/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "First-Seen-Safe Replace-by-Fee patch against Bitcoin Core v0.10.2",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Todd"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1874
        }
    },
    {
        "title": "[Bitcoin-development] Proposal: SPV Fee Discovery mechanism",
        "thread_messages": [
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-10T17:37:59",
                "message_text_only": "[I'm currently wading through bitcoin-development. I'm still about a month\nbehind, so I apologize in advance for any noisy redundancy in this post.]\n\nWhile reading about blocksize, I've just finished Mike Hearn's blog post\ndescribing expected systemic behavior as actual blocks approach the current\nlimit (with or without non-protocol-changing implementation improvements):\n\nhttps://medium.com/@octskyward/crash-landing-f5cc19908e32\n\n\nOne detail Mike uses to argue against the \"fee's will save us\" line of\nreasoning is that wallets have no good way to learn fee information.\n\nSo, here's a proposal to fix that: put fee and (and perhaps block size,\nUTXO, etc...) statistics into the locally-verifiable data available to SPV\nclients (ie: block headers).\n\n\nIt's easy to imagine a hard fork that places details like per-block total\nfees, transaction count, fee variance, UTXO delta, etc... in a each block\nheader. This would allow SPV clients to rely on this data with the same\nPoW-backed assurances as all other header data.\n\nThis mechanism seems valuable regardless of the outcome of blocksize\ndebate. So long as fees are interesting or important, SPV clients should\nknow about them. (Same for other stats such as UTXO count.)\n\nUpgrading the protocol without a hard-fork may be possible and is left as\nan exercise for the reader. ;-)\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/73fcaa85/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-10T19:19:36",
                "message_text_only": "It could be done by agreeing on a data format and encoding it in an\nop_return output in the coinbase transaction. If it catches on it could\nlater be enforced with a soft fork.\n\nFor real up-to-the-minute fee calculations you're also going to want to\nlook at the current mempool, how many transactions are waiting, what fees\nthey're paying, etc, but of course that information is susceptible to sybil\nattack.\n\nIn practice what we're doing for now is using services like blockcypher\nwho's business is improving reliability of zero-conf to tell us what\nfee-per-kb is needed, and then putting a hard coded range around it to\nprotect against the service being compromised. This is also the kind of\nthing being done for exchange rate data which is probably the bigger\nsecurity risk until bitcoin becomes the standard unit of account for the\nplanet.\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Wed, Jun 10, 2015 at 10:37 AM, Nathan Wilcox <nathan at leastauthority.com>\nwrote:\n\n> [I'm currently wading through bitcoin-development. I'm still about a month\n> behind, so I apologize in advance for any noisy redundancy in this post.]\n>\n> While reading about blocksize, I've just finished Mike Hearn's blog post\n> describing expected systemic behavior as actual blocks approach the current\n> limit (with or without non-protocol-changing implementation improvements):\n>\n> https://medium.com/@octskyward/crash-landing-f5cc19908e32\n>\n>\n> One detail Mike uses to argue against the \"fee's will save us\" line of\n> reasoning is that wallets have no good way to learn fee information.\n>\n> So, here's a proposal to fix that: put fee and (and perhaps block size,\n> UTXO, etc...) statistics into the locally-verifiable data available to SPV\n> clients (ie: block headers).\n>\n>\n> It's easy to imagine a hard fork that places details like per-block total\n> fees, transaction count, fee variance, UTXO delta, etc... in a each block\n> header. This would allow SPV clients to rely on this data with the same\n> PoW-backed assurances as all other header data.\n>\n> This mechanism seems valuable regardless of the outcome of blocksize\n> debate. So long as fees are interesting or important, SPV clients should\n> know about them. (Same for other stats such as UTXO count.)\n>\n> Upgrading the protocol without a hard-fork may be possible and is left as\n> an exercise for the reader. ;-)\n>\n> --\n> Nathan Wilcox\n> Least Authoritarian\n>\n> email: nathan at leastauthority.com\n> twitter: @least_nathan\n> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/21988162/attachment.html>"
            },
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-10T20:00:27",
                "message_text_only": "On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com> wrote:\n\n> It could be done by agreeing on a data format and encoding it in an\n> op_return output in the coinbase transaction. If it catches on it could\n> later be enforced with a soft fork.\n>\n>\nSounds plausible, except SPV protocols would need to include this coinbase\ntxn if it's going to help SPV clients. (Until a softfork is activated, SPV\nclients should not rely on this encoding, since until that time the results\ncan be fabricated by individual miners.)\n\n\n> For real up-to-the-minute fee calculations you're also going to want to\n> look at the current mempool, how many transactions are waiting, what fees\n> they're paying, etc, but of course that information is susceptible to sybil\n> attack.\n>\n\nHm, when you mention Sybil attack, I don't quite follow.\n\nWhen a client relies on any report of a mempool [*], this is already\noutside the realm of locally-verifiable SPV information, so they are\nalready susceptible to the service making false claims. If that's\nacceptable (and in many cases it may be) then this whole mechanism is moot,\nbecause the client can ask the service for fee statistics for past blocks.\n\n\n> In practice what we're doing for now is using services like blockcypher\n> who's business is improving reliability of zero-conf to tell us what\n> fee-per-kb is needed, and then putting a hard coded range around it to\n> protect against the service being compromised.\n>\n\nThis is interesting for me, because I had previously believed fees were\nfairly static presently, and also because I like hearing about real life\nwallet implementations.\n\nSo if this \"SPV Fee Stats\" feature were added, a wallet might rely on an\nAPI for timely stats (aka \"block height < 1\") then verify that the API\nisn't lying after doing SPV verification of fee stats for confirmed blocks.\n\n\nThis is also the kind of thing being done for exchange rate data which is\n> probably the bigger security risk until bitcoin becomes the standard unit\n> of account for the planet.\n>\n>\nThat makes sense, although there's no SPV equivalent for exchange data.\n\n\nAaron Voisine\n> co-founder and CEO\n> breadwallet.com\n>\n> On Wed, Jun 10, 2015 at 10:37 AM, Nathan Wilcox <nathan at leastauthority.com\n> > wrote:\n>\n>> [I'm currently wading through bitcoin-development. I'm still about a\n>> month behind, so I apologize in advance for any noisy redundancy in this\n>> post.]\n>>\n>> While reading about blocksize, I've just finished Mike Hearn's blog post\n>> describing expected systemic behavior as actual blocks approach the current\n>> limit (with or without non-protocol-changing implementation improvements):\n>>\n>> https://medium.com/@octskyward/crash-landing-f5cc19908e32\n>>\n>>\n>> One detail Mike uses to argue against the \"fee's will save us\" line of\n>> reasoning is that wallets have no good way to learn fee information.\n>>\n>> So, here's a proposal to fix that: put fee and (and perhaps block size,\n>> UTXO, etc...) statistics into the locally-verifiable data available to SPV\n>> clients (ie: block headers).\n>>\n>>\n>> It's easy to imagine a hard fork that places details like per-block total\n>> fees, transaction count, fee variance, UTXO delta, etc... in a each block\n>> header. This would allow SPV clients to rely on this data with the same\n>> PoW-backed assurances as all other header data.\n>>\n>> This mechanism seems valuable regardless of the outcome of blocksize\n>> debate. So long as fees are interesting or important, SPV clients should\n>> know about them. (Same for other stats such as UTXO count.)\n>>\n>> Upgrading the protocol without a hard-fork may be possible and is left as\n>> an exercise for the reader. ;-)\n>>\n>> --\n>> Nathan Wilcox\n>> Least Authoritarian\n>>\n>> email: nathan at leastauthority.com\n>> twitter: @least_nathan\n>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/084827a1/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-10T20:03:23",
                "message_text_only": "On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:\n> On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com> wrote:\n> \n> > It could be done by agreeing on a data format and encoding it in an\n> > op_return output in the coinbase transaction. If it catches on it could\n> > later be enforced with a soft fork.\n> >\n> >\n> Sounds plausible, except SPV protocols would need to include this coinbase\n> txn if it's going to help SPV clients. (Until a softfork is activated, SPV\n> clients should not rely on this encoding, since until that time the results\n> can be fabricated by individual miners.)\n\nFee stats can always be fabricated by individual miners because fees can\nbe paid out-of-band.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/d361662b/attachment.sig>"
            },
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-11T18:30:54",
                "message_text_only": "On Wed, Jun 10, 2015 at 2:03 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:\n> > On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com>\n> wrote:\n> >\n> > > It could be done by agreeing on a data format and encoding it in an\n> > > op_return output in the coinbase transaction. If it catches on it could\n> > > later be enforced with a soft fork.\n> > >\n> > >\n> > Sounds plausible, except SPV protocols would need to include this\n> coinbase\n> > txn if it's going to help SPV clients. (Until a softfork is activated,\n> SPV\n> > clients should not rely on this encoding, since until that time the\n> results\n> > can be fabricated by individual miners.)\n>\n> Fee stats can always be fabricated by individual miners because fees can\n> be paid out-of-band.\n>\n>\nThis is a point I hadn't considered carefully before. I don't understand\nthe marketplace here or why miners would want to move fees outside of\nexplicit inband fees. Implicit in this proposal is that the statistics only\ncover in-band data, because that's the scope of consensus rules, and thus\nthe proposal is only as useful as the information of in-band fees is useful.\n\nI've also noticed a detracting technical argument given a particular\ntradeoff:\n\nA Header-PoW-verifying client could still be given all transactions in a\nrecent block, from which it can see the in-band fees directly.  The\ntrade-off is the size of those transactions versus the need to alter any\nconsensus rules or do soft forks.\n\nNotice how this trade-off's costs change with maximum block size.\n\n\n\n\n> --\n> 'peter'[:-1]@petertodd.org\n> 00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f\n>\n\n\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/ae77eddb/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-11T18:55:09",
                "message_text_only": "> A Header-PoW-verifying client could still be given all transactions in a\nrecent block, from which it can see the in-band fees directly.\n\nYou don't know the fees paid by any given transaction unless you also have\nall it's inputs. Transaction inputs do not include an amount. You could\nhowever get the average fee-per-kb paid by all transactions in a block by\nlooking at the coinbase transaction, subtracting the block reward, and\ndividing by the size of block minus the header.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Thu, Jun 11, 2015 at 11:30 AM, Nathan Wilcox <nathan at leastauthority.com>\nwrote:\n\n> On Wed, Jun 10, 2015 at 2:03 PM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:\n>> > On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com>\n>> wrote:\n>> >\n>> > > It could be done by agreeing on a data format and encoding it in an\n>> > > op_return output in the coinbase transaction. If it catches on it\n>> could\n>> > > later be enforced with a soft fork.\n>> > >\n>> > >\n>> > Sounds plausible, except SPV protocols would need to include this\n>> coinbase\n>> > txn if it's going to help SPV clients. (Until a softfork is activated,\n>> SPV\n>> > clients should not rely on this encoding, since until that time the\n>> results\n>> > can be fabricated by individual miners.)\n>>\n>> Fee stats can always be fabricated by individual miners because fees can\n>> be paid out-of-band.\n>>\n>>\n> This is a point I hadn't considered carefully before. I don't understand\n> the marketplace here or why miners would want to move fees outside of\n> explicit inband fees. Implicit in this proposal is that the statistics only\n> cover in-band data, because that's the scope of consensus rules, and thus\n> the proposal is only as useful as the information of in-band fees is useful.\n>\n> I've also noticed a detracting technical argument given a particular\n> tradeoff:\n>\n> A Header-PoW-verifying client could still be given all transactions in a\n> recent block, from which it can see the in-band fees directly.  The\n> trade-off is the size of those transactions versus the need to alter any\n> consensus rules or do soft forks.\n>\n> Notice how this trade-off's costs change with maximum block size.\n>\n>\n>\n>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f\n>>\n>\n>\n>\n> --\n> Nathan Wilcox\n> Least Authoritarian\n>\n> email: nathan at leastauthority.com\n> twitter: @least_nathan\n> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/574993ab/attachment.html>"
            },
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-13T15:38:56",
                "message_text_only": "On Thu, Jun 11, 2015 at 12:55 PM, Aaron Voisine <voisine at gmail.com> wrote:\n\n> > A Header-PoW-verifying client could still be given all transactions in\n> a recent block, from which it can see the in-band fees directly.\n>\n> You don't know the fees paid by any given transaction unless you also have\n> all it's inputs. Transaction inputs do not include an amount. You could\n> however get the average fee-per-kb paid by all transactions in a block by\n> looking at the coinbase transaction, subtracting the block reward, and\n> dividing by the size of block minus the header.\n>\n>\nExcellent point and alternative proposal. You're right: to get the specifi\nfees, you'd need all transactions in a block, and all TxOuts with\nmembership proofs. Your alternative seems like a much leaner trade-off for\nsimilar data.\n\n\n>\n> Aaron Voisine\n> co-founder and CEO\n> breadwallet.com\n>\n> On Thu, Jun 11, 2015 at 11:30 AM, Nathan Wilcox <nathan at leastauthority.com\n> > wrote:\n>\n>> On Wed, Jun 10, 2015 at 2:03 PM, Peter Todd <pete at petertodd.org> wrote:\n>>\n>>> On Wed, Jun 10, 2015 at 02:00:27PM -0600, Nathan Wilcox wrote:\n>>> > On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com>\n>>> wrote:\n>>> >\n>>> > > It could be done by agreeing on a data format and encoding it in an\n>>> > > op_return output in the coinbase transaction. If it catches on it\n>>> could\n>>> > > later be enforced with a soft fork.\n>>> > >\n>>> > >\n>>> > Sounds plausible, except SPV protocols would need to include this\n>>> coinbase\n>>> > txn if it's going to help SPV clients. (Until a softfork is activated,\n>>> SPV\n>>> > clients should not rely on this encoding, since until that time the\n>>> results\n>>> > can be fabricated by individual miners.)\n>>>\n>>> Fee stats can always be fabricated by individual miners because fees can\n>>> be paid out-of-band.\n>>>\n>>>\n>> This is a point I hadn't considered carefully before. I don't understand\n>> the marketplace here or why miners would want to move fees outside of\n>> explicit inband fees. Implicit in this proposal is that the statistics only\n>> cover in-band data, because that's the scope of consensus rules, and thus\n>> the proposal is only as useful as the information of in-band fees is useful.\n>>\n>> I've also noticed a detracting technical argument given a particular\n>> tradeoff:\n>>\n>> A Header-PoW-verifying client could still be given all transactions in a\n>> recent block, from which it can see the in-band fees directly.  The\n>> trade-off is the size of those transactions versus the need to alter any\n>> consensus rules or do soft forks.\n>>\n>> Notice how this trade-off's costs change with maximum block size.\n>>\n>>\n>>\n>>\n>>> --\n>>> 'peter'[:-1]@petertodd.org\n>>> 00000000000000001245bd2f5c99379ee76836227ded9c08324894faabc0d27f\n>>>\n>>\n>>\n>>\n>> --\n>> Nathan Wilcox\n>> Least Authoritarian\n>>\n>> email: nathan at leastauthority.com\n>> twitter: @least_nathan\n>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>>\n>\n>\n\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/d2787118/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-10T21:18:26",
                "message_text_only": "> Sounds plausible, except SPV protocols would need to include this\ncoinbase txn if it's going to help SPV clients.\n\nYes you'd either need a way to add those transactions to the bloom filter,\nor add/modify a p2p message to request it specifically.\n\n> when you mention Sybil attack, I don't quite follow.\n\nI just mean that someone could spin up a bunch of malicious p2p nodes that\nlied about mempool data. It's a bit worse for SPV clients since they can't\nverify that unconfirmed transactions are valid.\n\n> I had previously believed fees were fairly static presently,\n\nI actually just added it the other day after getting blockcypher to include\nit in their api. The current release is still using a hard coded fee rate.\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Wed, Jun 10, 2015 at 1:00 PM, Nathan Wilcox <nathan at leastauthority.com>\nwrote:\n\n> On Wed, Jun 10, 2015 at 1:19 PM, Aaron Voisine <voisine at gmail.com> wrote:\n>\n>> It could be done by agreeing on a data format and encoding it in an\n>> op_return output in the coinbase transaction. If it catches on it could\n>> later be enforced with a soft fork.\n>>\n>>\n> Sounds plausible, except SPV protocols would need to include this coinbase\n> txn if it's going to help SPV clients. (Until a softfork is activated, SPV\n> clients should not rely on this encoding, since until that time the results\n> can be fabricated by individual miners.)\n>\n>\n>> For real up-to-the-minute fee calculations you're also going to want to\n>> look at the current mempool, how many transactions are waiting, what fees\n>> they're paying, etc, but of course that information is susceptible to sybil\n>> attack.\n>>\n>\n> Hm, when you mention Sybil attack, I don't quite follow.\n>\n> When a client relies on any report of a mempool [*], this is already\n> outside the realm of locally-verifiable SPV information, so they are\n> already susceptible to the service making false claims. If that's\n> acceptable (and in many cases it may be) then this whole mechanism is moot,\n> because the client can ask the service for fee statistics for past blocks.\n>\n>\n>> In practice what we're doing for now is using services like blockcypher\n>> who's business is improving reliability of zero-conf to tell us what\n>> fee-per-kb is needed, and then putting a hard coded range around it to\n>> protect against the service being compromised.\n>>\n>\n> This is interesting for me, because I had previously believed fees were\n> fairly static presently, and also because I like hearing about real life\n> wallet implementations.\n>\n> So if this \"SPV Fee Stats\" feature were added, a wallet might rely on an\n> API for timely stats (aka \"block height < 1\") then verify that the API\n> isn't lying after doing SPV verification of fee stats for confirmed blocks.\n>\n>\n> This is also the kind of thing being done for exchange rate data which is\n>> probably the bigger security risk until bitcoin becomes the standard unit\n>> of account for the planet.\n>>\n>>\n> That makes sense, although there's no SPV equivalent for exchange data.\n>\n>\n> Aaron Voisine\n>> co-founder and CEO\n>> breadwallet.com\n>>\n>> On Wed, Jun 10, 2015 at 10:37 AM, Nathan Wilcox <\n>> nathan at leastauthority.com> wrote:\n>>\n>>> [I'm currently wading through bitcoin-development. I'm still about a\n>>> month behind, so I apologize in advance for any noisy redundancy in this\n>>> post.]\n>>>\n>>> While reading about blocksize, I've just finished Mike Hearn's blog post\n>>> describing expected systemic behavior as actual blocks approach the current\n>>> limit (with or without non-protocol-changing implementation improvements):\n>>>\n>>> https://medium.com/@octskyward/crash-landing-f5cc19908e32\n>>>\n>>>\n>>> One detail Mike uses to argue against the \"fee's will save us\" line of\n>>> reasoning is that wallets have no good way to learn fee information.\n>>>\n>>> So, here's a proposal to fix that: put fee and (and perhaps block size,\n>>> UTXO, etc...) statistics into the locally-verifiable data available to SPV\n>>> clients (ie: block headers).\n>>>\n>>>\n>>> It's easy to imagine a hard fork that places details like per-block\n>>> total fees, transaction count, fee variance, UTXO delta, etc... in a each\n>>> block header. This would allow SPV clients to rely on this data with the\n>>> same PoW-backed assurances as all other header data.\n>>>\n>>> This mechanism seems valuable regardless of the outcome of blocksize\n>>> debate. So long as fees are interesting or important, SPV clients should\n>>> know about them. (Same for other stats such as UTXO count.)\n>>>\n>>> Upgrading the protocol without a hard-fork may be possible and is left\n>>> as an exercise for the reader. ;-)\n>>>\n>>> --\n>>> Nathan Wilcox\n>>> Least Authoritarian\n>>>\n>>> email: nathan at leastauthority.com\n>>> twitter: @least_nathan\n>>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>\n>\n>\n> --\n> Nathan Wilcox\n> Least Authoritarian\n>\n> email: nathan at leastauthority.com\n> twitter: @least_nathan\n> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/b38d33f6/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-10T20:26:18",
                "message_text_only": "I described an alternative way for SPV wallets to learn about fees some\ntime ago. It requires a new transaction version that embeds output values\ninto the signed data. Then an upgrade to the P2P protocol to send UTXO data\nalong with transactions when they are relayed.\n\nThe idea is that the wallet sets a Bloom filter with an FP rate that\nensures it will see some random subset of all transactions being broadcast\non the network, and with the extra data, it can calculate the fee paid.\nOnce a transaction broadcast is observed the wallet includes that tx hash\nin its next Bloom filter, thus it can see which block the tx confirmed in.\nBy measuring the amount of time that passed between a broadcast and it\nappearing in a block, it can calculate its own tables of fee paid:time\ntaken.\n\nThis has the advantage that you don't have to trust miners to publish data\naccurately. However it requires some protocol upgrades and of course, a lot\nof new code in SPV wallets.\n\nThe way Bitcoin Wallet for Android handles fees currently is to just update\na hard coded value every so often.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/195f8f71/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-10T21:18:30",
                "message_text_only": "The other complication is that this will tend to be a lagging indicator\nbased on network congestion from the last time you connected. If we assume\nthat transactions are being dropped in an unpredictable way when blocks are\nfull, knowing the network congestion *right now* is critical, and even then\nyou just have to hope that someone who wants that space more than you do\ndoesn't show up after you disconnect.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Wed, Jun 10, 2015 at 1:26 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> I described an alternative way for SPV wallets to learn about fees some\n> time ago. It requires a new transaction version that embeds output values\n> into the signed data. Then an upgrade to the P2P protocol to send UTXO data\n> along with transactions when they are relayed.\n>\n> The idea is that the wallet sets a Bloom filter with an FP rate that\n> ensures it will see some random subset of all transactions being broadcast\n> on the network, and with the extra data, it can calculate the fee paid.\n> Once a transaction broadcast is observed the wallet includes that tx hash\n> in its next Bloom filter, thus it can see which block the tx confirmed in.\n> By measuring the amount of time that passed between a broadcast and it\n> appearing in a block, it can calculate its own tables of fee paid:time\n> taken.\n>\n> This has the advantage that you don't have to trust miners to publish data\n> accurately. However it requires some protocol upgrades and of course, a lot\n> of new code in SPV wallets.\n>\n> The way Bitcoin Wallet for Android handles fees currently is to just\n> update a hard coded value every so often.\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150610/e4d5b79a/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-11T10:19:09",
                "message_text_only": ">\n> If we assume that transactions are being dropped in an unpredictable way\n> when blocks are full, knowing the network congestion *right now* is\n> critical, and even then you just have to hope that someone who wants that\n> space more than you do doesn't show up after you disconnect.\n>\n\nYeah, my proposal is not intended to function correctly with full blocks,\nas Bitcoin cannot work at all in such a state. It assumes that fees only\nchange slowly and that transactions are being cleared normally.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/fb07fb95/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-11T13:10:48",
                "message_text_only": "On Wed, Jun 10, 2015 at 02:18:30PM -0700, Aaron Voisine wrote:\n> The other complication is that this will tend to be a lagging indicator\n> based on network congestion from the last time you connected. If we assume\n> that transactions are being dropped in an unpredictable way when blocks are\n> full, knowing the network congestion *right now* is critical, and even then\n> you just have to hope that someone who wants that space more than you do\n> doesn't show up after you disconnect.\n\nHence the need for ways to increase fees on transactions after initial\nbroadcast like replace-by-fee and child-pays-for-parent.\n\nRe: \"dropped in an unpredictable way\" - transactions would be dropped\nlowest fee/KB first, a completely predictable way.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000124bae79afdcee9267b4e6f8137758b8b4135455cd8e3bfd\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/b3d975d6/attachment.sig>"
            },
            {
                "author": "Martin Lie",
                "date": "2015-06-11T14:11:51",
                "message_text_only": "Peter Todd wrote:\n> Re: \"dropped in an unpredictable way\" - transactions would be dropped\n> lowest fee/KB first, a completely predictable way.\n\nIt would be 'completely predictable' for whoever knew the state and \npolicies of a miner's mempool, but from an end user's perspective that \nwouldn't matter much: The end users wouldn't know if their \ntransaction(s) would make the cut or not, somewhere in the network, and \nby what time. They (obviously) won't know what miners will find the next \nblock(s), they won't know the miners' mempool sizes, potential custom \neviction policies, etc.\n\nI agree that this can be somewhat remedied by FSSRBF/CPFP, though, \nprovided wallets give users a good (semi-automated?) interface for such \ntransaction replacements/chains.\n\n\n-- \nMartin Lie"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-11T17:10:22",
                "message_text_only": "On 6/11/2015 6:10 AM, Peter Todd wrote:\n> On Wed, Jun 10, 2015 at 02:18:30PM -0700, Aaron Voisine wrote:\n>> The other complication is that this will tend to be a lagging indicator\n>> based on network congestion from the last time you connected. If we assume\n>> that transactions are being dropped in an unpredictable way when blocks are\n>> full, knowing the network congestion *right now* is critical, and even then\n>> you just have to hope that someone who wants that space more than you do\n>> doesn't show up after you disconnect.\n> Hence the need for ways to increase fees on transactions after initial\n> broadcast like replace-by-fee and child-pays-for-parent.\n>\n> Re: \"dropped in an unpredictable way\" - transactions would be dropped\n> lowest fee/KB first, a completely predictable way.\n\nQuite agreed.  Also, transactions with unconfirmed inputs should be \namong the first to get dropped, as discussed in the \"Dropped-transaction \nspam\" thread.  Like all policy rules, either of these works in \nproportion to its deployment.\n\nBe advised that pull request #6068 emphasizes the view that the network \nwill never have consistent mempool/relay policies, and on the contrary \nneeds a framework that supports and encourages pluggable, generally \nparameterized policies that could (some might say should) conflict \nwildly with each other.\n\nIt probably doesn't matter that much.  Deploying a new policy still \nwouldn't be much easier than deploying a patched version.  I mean, \nnobody has proposed a policy rule engine yet (oops)."
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-11T17:52:26",
                "message_text_only": ">\n> > Re: \"dropped in an unpredictable way\" - transactions would be dropped\n> > lowest fee/KB first, a completely predictable way.\n>\n> Quite agreed.\n\n\nNo, Aaron is correct. It's unpredictable from the perspective of the user\nsending the transaction, and as they are the ones picking the fees, that is\nwhat matters.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/57b98820/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-12T06:44:57",
                "message_text_only": "One possible solution that wallets could adopt when blocks fill up, would\nbe to abandon the p2p network for transaction propagation altogether, and\ninstead work directly with a handful of the largest miners and pools to get\ntransactions into blocks. The miners could auction off space in their\nblocks with the guarantee that they will be included in the order accepted.\nWe'd lose the peer-to-peer nature of sending transactions for a federated\nservice operator style model, but avoid the problem of unpredictable\ntransaction failure. Also, unlike replace-by-fee, this would allow for\na send-and-forget usage pattern, as well as known up-front fees. Something\nlike this is certainly what I imagine the large hosted wallet companies\nwill end up moving to.\n\nAaron\n\nOn Thursday, June 11, 2015, Mike Hearn <mike at plan99.net> wrote:\n\n> > Re: \"dropped in an unpredictable way\" - transactions would be dropped\n>> > lowest fee/KB first, a completely predictable way.\n>>\n>> Quite agreed.\n>\n>\n> No, Aaron is correct. It's unpredictable from the perspective of the user\n> sending the transaction, and as they are the ones picking the fees, that is\n> what matters.\n>\n\n\n-- \n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/18a6e3a1/attachment.html>"
            },
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-11T18:18:50",
                "message_text_only": "On Thu, Jun 11, 2015 at 7:10 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Wed, Jun 10, 2015 at 02:18:30PM -0700, Aaron Voisine wrote:\n> > The other complication is that this will tend to be a lagging indicator\n> > based on network congestion from the last time you connected. If we\n> assume\n> > that transactions are being dropped in an unpredictable way when blocks\n> are\n> > full, knowing the network congestion *right now* is critical, and even\n> then\n> > you just have to hope that someone who wants that space more than you do\n> > doesn't show up after you disconnect.\n>\n> Hence the need for ways to increase fees on transactions after initial\n> broadcast like replace-by-fee and child-pays-for-parent.\n>\n>\nI haven't looked closely at replace-by-fee yet, but I assume this is a\nnon-consensus change to mempool mechanics. To me, this seems like the\n\"actuator\" side of fee mechanics: it provides a transaction sender a way to\ninfluence the system.  By contrast, learning about fees is the \"sensor\"\nside of fee mechanics.\n\nConsider how a replace-by-fee wallet makes fee decisions. When does it\nreplace by fee?  It needs feedback in one of two forms:\n\na. Direct feedback from a trnasaction relay service, or:\n\nb. Information in the blockchain, which is verified by all verifying nodes\nand refined by all miners.\n\nThe first kind of information is quite acceptable and practical for many\nuse cases, but leave the wallet vulnerable to fabrications by that service.\nThis vulnerability is precisely what SPV security intends to mitigate,\nright?\n\nWith only information type a, a (non-SPV) wallet can \"shop around\" to find\ncompeting services, and this should work pretty well, provided the wallet\ncan discover those competing services. If, OTOH, the wallet has access to\ninformation type b, it now has \"perfect competition\" across all such\nservices, even when it can't discover the low-priced services directly.\n\nThis actual-fees-in-the-actual-block-chain information of type b seem like\na powerful source of pricing information, and if SPV security is already\nvaluable for other reasons, then it seems natural to leverage that value.\n\n\nRe: \"dropped in an unpredictable way\" - transactions would be dropped\n> lowest fee/KB first, a completely predictable way.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000124bae79afdcee9267b4e6f8137758b8b4135455cd8e3bfd\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/6aed7d44/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Proposal: SPV Fee Discovery mechanism",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Aaron Voisine",
                "Mike Hearn",
                "Peter Todd",
                "Nathan Wilcox",
                "Martin Lie",
                "Tom Harding"
            ],
            "messages_count": 17,
            "total_messages_chars_count": 36273
        }
    },
    {
        "title": "[Bitcoin-development] Miners: You'll (very likely) need to upgrade your Bitcoin Core node soon to support BIP66",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2015-06-12T00:40:58",
                "message_text_only": "Summary\n-------\n\nThe BIP66 soft-fork recently passed the 75% support threshold. This\nmeans that 75% of the hashing power has upgraded to support BIP66; 25%\nof the hashing power has not. Once 95% of the hashing power has\nupgraded, blocks created by the 5% who have not upgraded will be\nrejected.\n\nIf you operate a pool, solo-mine, or mine on p2pool you'll very likely\nneed to upgrade your Bitcoin Core node to support the BIP66 soft-fork,\nor your blocks will be rejected. If you only sell your hashing power to\na centralized pool you do not need to do anything.\n\n\nHow does the Bitcoin protocol measure BIP66 support?\n----------------------------------------------------\n\nMiners that have upgraded to support BIP66 create blocks with the\nversion field set to 3; non-upgraded miners set the version to 2.\nBitcoin Core measures BIP66 support by counting how many blocks with\nversion >= 3 exist in the blockchain within the last 1000 blocks.\n\nIf 750 out of the last 1000 blocks support BIP66, blocks with the\nversion set to >= 3 that do not follow the BIP66 rules are rejected; if\n950 out of the last 1000 blocks support BIP66, blocks with version < 3\nare rejected.\n\n\nWhen will the 95% threshold be reached?\n---------------------------------------\n\nIt's unknown exactly when the 95% threshold will be reached. The BIP34\nsoft-fork went from 75% to 95% support in a about two weeks, however\nmore or less time is possible; it's possible that the 95% threshold will\nbe reached in just a few days.\n\n\nHow can I monitor BIP66 adoption?\n---------------------------------\n\nSee Pieter Wuille's graphs:\n\n    http://bitcoin.sipa.be/ver-ever.png\n    http://bitcoin.sipa.be/ver-50k.png\n    http://bitcoin.sipa.be/ver-10k.png\n    http://bitcoin.sipa.be/ver-2k.png\n\nThe 'ever' and '50k' graphs show the 75% and 95% thresholds.\n\n\nWhat software supports support BIP66?\n-------------------------------------\n\nBitcoin Core releases later than v0.10.0 support BIP66.\n\nIn addition, v0.9.5 supports BIP66, however we recommend that you\nupgrade to v0.10.2\n\nIf you run a pool, you may also need to upgrade your pool software as\nwell. For instance, eloipool versions prior to May 22nd 2015, git commit\nf5f4ea636fb38f38e6d9a04aad1f04427556a4bc, do not support BIP66. (For\nEloipool, cb8a5e8fbb4bfdfe9e35f670082603caff65e1b2 is a clean merge that\nshould work for any branch more recent than 2013 April 6)\n\nSolo miners and decentralised miners using GBT need to also update their\nmining software to a currently supported version of BFGMiner to get\nsupport for v3 blocks. The official BFGMiner binaries include this\nupdate with 5.1.0, 4.10.2, and 3.10.9.\n\n\nWhat is BIP66?\n--------------\n\nBIP66 - \"Strict DER signatures\" - is a soft-fork that tightens the rules\nfor signature verification, specifically the way that signatures are\nencoded. The Bitcoin Core implementation currently relies on OpenSSL for\nsignature validation, which means it implicitly defines Bitcoin's block\nvalidity rules. Unfortunately, OpenSSL is not designed for\nconsensus-critical behaviour (it does not guarantee bug-for-bug\ncompatibility between versions), and thus changes to it can - and have -\naffected Bitcoin software. (see CVE-2014-8275)\n\nBy tightening these rules BIP66 reduces the risk that changes to OpenSSL\nwill cause forks in the Bitcoin blockchain, as seen previously by the\nMarch 2013 fork. Secondly reducing our dependency on OpenSSL is a step\ntowards replacing OpenSSL with libsecp256k1, a signature validation\nlibrary from Pieter Wuille and Gregory Maxwell, that is designed for\nconsensus-critical applications, as well as being significantly faster\nthan OpenSSL.\n\n\nIs it possible that the BIP66 soft-fork will not happen?\n--------------------------------------------------------\n\nIn theory yes, though it is unlikely and rejection of BIP66 would be a\nvery ugly process. Unfortunately the existing soft-fork mechanism\nprovides no mechanism for a soft-fork to expire, so once set in motion\nthere is no clean way to stop a soft-fork.\n\nThere is a proposal from Wuille/Maxwell/Todd, to reform how soft-forks\nare adopted that aims to fix this issue, as well as allow multiple\nsoft-forks be adopted in parallel:\n\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07863.html\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150611/d56b6e78/attachment.sig>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-12T08:37:17",
                "message_text_only": "Once the 75% threshold is reached, miners who haven't updated are at risk\nof mining on invalid blocks.\n\nIf someone produces a version 3 block that violates the new rules, then\nminers who haven't upgraded will end up wasting mining power building on\nthat block.\n\nThis could be used as an expensive way to attack miners who haven't\nupgraded.  It is low risk of happening, since creating an invalid version 3\nblock costs 25BTC in hashing power and the miner who does it ends up\ncreating an invalid block.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/976d41cd/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-13T13:01:12",
                "message_text_only": "On Fri, Jun 12, 2015 at 10:37 AM, Tier Nolan <tier.nolan at gmail.com> wrote:\n\n> Once the 75% threshold is reached, miners who haven't updated are at risk\n> of mining on invalid blocks.\n>\n\nNote that we've been above the 75% threshold since june 7th (before Peter's\nmain was sent).\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/ec812fd7/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Miners: You'll (very likely) need to upgrade your Bitcoin Core node soon to support BIP66",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Tier Nolan",
                "Pieter Wuille",
                "Peter Todd"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 5778
        }
    },
    {
        "title": "[Bitcoin-development] Mining centralization pressure from non-uniform propagation speed",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2015-06-12T16:51:02",
                "message_text_only": "Hello all,\n\nI've created a simulator for Bitcoin mining which goes a bit further than\nthe one Gavin used for his blog post a while ago. The main difference is\nsupport for links with different latency and bandwidth, because of the\nclustered configuration described below. In addition, it supports different\nblock sizes, takes fees into account, does difficulty adjustments, and\ntakes processing and mining delays into account. It also simulates longer\nperiods of time, and averages the result of many simulations running in\nparallel until the variance on the result is low enough.\n\nThe code is here: https://github.com/sipa/bitcoin-net-simul\n\nThe configuration used in the code right now simulates two groups of miners\n(one 80%=25%+25%+30%, one 20%=5%+5%+5%+5%), which are well-connected\ninternally, but are only connected to each other through a slow 2 Mbit/s\nlink.\n\nHere are some results.\n\nThis shows how the group of smaller miners loses around 8% of their\nrelative income (if they create larger blocks, their loss percentage goes\nup slightly further):\n\nConfiguration:\n  * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000\n  * Miner group 1: 20.000000% hashrate, blocksize 1000000.000000\n  * Expected average block size: 16200000.000000\n  * Average fee per block: 0.250000\n  * Fee per byte: 0.0000000154\nResult:\n  * Miner group 0: 81.648985% income (factor 1.020612 with hashrate)\n  * Miner group 1: 18.351015% income (factor 0.917551 with hashrate)\n\nWhen fees become more important however, and half of a block's income is\ndue to fees, the effect becomes even stronger (a 15% loss), and the optimal\nway to compete for small miners is to create larger blocks as well (smaller\nblocks for them result in even less income):\n\nConfiguration:\n  * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000\n  * Miner group 1: 20.000000% hashrate, blocksize 20000000.000000\n  * Expected average block size: 20000000.000000\n  * Average fee per block: 25.000000\n  * Fee per byte: 0.0000012500\nResult:\n  * Miner group 0: 83.063545% income (factor 1.038294 with hashrate)\n  * Miner group 1: 16.936455% income (factor 0.846823 with hashrate)\n\nThe simulator is not perfect. It doesn't take into account that multiple\nblocks/relays can compete for the same bandwidth, or that nodes cannot\nprocess multiple blocks at once.\n\nThe numbers used may be unrealistic, and I don't mean this as a prediction\nfor real-world events. However, it does very clearly show the effects of\nlarger blocks on centralization pressure of the system. Note that this also\ndoes not make any assumption of destructive behavior on the network - just\nsimple profit maximalization.\n\nLastly, the code may be buggy; I only did some small sanity tests with\nsimple networks.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/e8c2f530/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-12T17:21:46",
                "message_text_only": "Nice work, Pieter. You're right that my simulation assumed bandwidth for\n'block' messages isn't the bottleneck.\n\nBut doesn't Matt's fast relay network (and the work I believe we're both\nplanning on doing in the near future to further optimize block propagation)\nmake both of our simulations irrelevant in the long-run?\n\nOr, even simpler, why couldn't the little miners just run their\nblock-assembling-and-announcing code on the other high-bandwidth-side of\nthe bandwidth bottleneck?\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/30ea9c9f/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:30:54",
                "message_text_only": "On Fri, Jun 12, 2015 at 01:21:46PM -0400, Gavin Andresen wrote:\n> Nice work, Pieter. You're right that my simulation assumed bandwidth for\n> 'block' messages isn't the bottleneck.\n> \n> But doesn't Matt's fast relay network (and the work I believe we're both\n> planning on doing in the near future to further optimize block propagation)\n> make both of our simulations irrelevant in the long-run?\n\nThen simulate first the relay network assuming 100% of txs use it, and\nsecondly, assuming 100%-x use it.\n\nFor instance, is it in miners' advantage in some cases to sabotage the\nrelay network? The analyse say yes, so lets simulate that. Equally even\nthe relay network isn't instant.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5f41f6f4/attachment.sig>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-12T18:39:46",
                "message_text_only": "If there is a benefit in producing larger more-fee blocks if they propagate\nslowly, then there is also a benefit in including high-fee transactions\nthat are unlikely to propagate quickly through optimized relay protocols\n(for example: very recent transactions, or out-of-band receoved ones). This\neffect is likely an order of magnitude less important still, but the effect\nis likely the same.\nOn Jun 12, 2015 8:31 PM, \"Peter Todd\" <pete at petertodd.org> wrote:\n\n> On Fri, Jun 12, 2015 at 01:21:46PM -0400, Gavin Andresen wrote:\n> > Nice work, Pieter. You're right that my simulation assumed bandwidth for\n> > 'block' messages isn't the bottleneck.\n> >\n> > But doesn't Matt's fast relay network (and the work I believe we're both\n> > planning on doing in the near future to further optimize block\n> propagation)\n> > make both of our simulations irrelevant in the long-run?\n>\n> Then simulate first the relay network assuming 100% of txs use it, and\n> secondly, assuming 100%-x use it.\n>\n> For instance, is it in miners' advantage in some cases to sabotage the\n> relay network? The analyse say yes, so lets simulate that. Equally even\n> the relay network isn't instant.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/ba1f8c93/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:01:13",
                "message_text_only": "On Fri, Jun 12, 2015 at 06:51:02PM +0200, Pieter Wuille wrote:\n> The configuration used in the code right now simulates two groups of miners\n> (one 80%=25%+25%+30%, one 20%=5%+5%+5%+5%), which are well-connected\n> internally, but are only connected to each other through a slow 2 Mbit/s\n> link.\n> \n> Here are some results.\n> \n> This shows how the group of smaller miners loses around 8% of their\n> relative income (if they create larger blocks, their loss percentage goes\n> up slightly further):\n\nTo be clear, when you say 8% of their income, you mean revenue, not\nprofit?\n\nActual profit margins of something like 5%-10% are likely, so that's an\nenormous hit that could make their mining operation completely\nnon-viable.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/c610a4f7/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-12T18:24:50",
                "message_text_only": ">\n> are only connected to each other through a slow 2 Mbit/s link.\n>\n\nThat's very slow indeed. For comparison, plain old 3G connections routinely\ncruise around 7-8 Mbit/sec.\n\nSo this simulation is assuming a speed dramatically worse than a mobile\nphone can get!\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/8cf55d02/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-12T18:26:23",
                "message_text_only": "I'm merely proving the existence of the effect.\nOn Jun 12, 2015 8:24 PM, \"Mike Hearn\" <mike at plan99.net> wrote:\n\n> are only connected to each other through a slow 2 Mbit/s link.\n>>\n>\n> That's very slow indeed. For comparison, plain old 3G connections\n> routinely cruise around 7-8 Mbit/sec.\n>\n> So this simulation is assuming a speed dramatically worse than a mobile\n> phone can get!\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/1a3a0e82/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-12T18:27:49",
                "message_text_only": "Sure, and you did indeed say that.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/036c4473/attachment.html>"
            },
            {
                "author": "Jonas Nick",
                "date": "2015-06-14T17:45:48",
                "message_text_only": "Hi all,\n\nit's a very useful approach to also model fees and you came up with an interesting scenario.\nAssuming that you meant that the groups are only connected with a single link,\nI've recreated the scenario with Gavin's simulation and got similar results.\nThe group with the large hashrate does profit overall, but the miners which are not directly\nconnected to the small group loose:\nhttps://github.com/jonasnick/bitcoin_miningsim/blob/master/analysis/README.md#two-groups-well-connected-internally-but-connected-to-each-other-with-a-single-poor-connection\n\nMoreover, it's important to note that this is not an equilibrium because these miners are better off when they create their own\nconnections to the small group (see the plot below the other one).\nThis means that your scenario is not the result of a cartel but the result of a long-term network partition.\nWhen assuming partitions, there are quite a few scenarios where big miners can profit from creating big\nblocks. For example, one 40% miner and two groups of three 10% miners, where both groups are connected to the big\nminer but they are not connected to each other.\nhttps://github.com/jonasnick/bitcoin_miningsim/blob/master/analysis/README.md#one-big-miner-and-two-partitioned-groups\n\nBest,\nJonas\n\n\nOn 06/12/2015 06:51 PM, Pieter Wuille wrote:\n> Hello all,\n>\n> I've created a simulator for Bitcoin mining which goes a bit further than\n> the one Gavin used for his blog post a while ago. The main difference is\n> support for links with different latency and bandwidth, because of the\n> clustered configuration described below. In addition, it supports different\n> block sizes, takes fees into account, does difficulty adjustments, and\n> takes processing and mining delays into account. It also simulates longer\n> periods of time, and averages the result of many simulations running in\n> parallel until the variance on the result is low enough.\n>\n> The code is here: https://github.com/sipa/bitcoin-net-simul\n>\n> The configuration used in the code right now simulates two groups of miners\n> (one 80%=25%+25%+30%, one 20%=5%+5%+5%+5%), which are well-connected\n> internally, but are only connected to each other through a slow 2 Mbit/s\n> link.\n>\n> Here are some results.\n>\n> This shows how the group of smaller miners loses around 8% of their\n> relative income (if they create larger blocks, their loss percentage goes\n> up slightly further):\n>\n> Configuration:\n>   * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000\n>   * Miner group 1: 20.000000% hashrate, blocksize 1000000.000000\n>   * Expected average block size: 16200000.000000\n>   * Average fee per block: 0.250000\n>   * Fee per byte: 0.0000000154\n> Result:\n>   * Miner group 0: 81.648985% income (factor 1.020612 with hashrate)\n>   * Miner group 1: 18.351015% income (factor 0.917551 with hashrate)\n>\n> When fees become more important however, and half of a block's income is\n> due to fees, the effect becomes even stronger (a 15% loss), and the optimal\n> way to compete for small miners is to create larger blocks as well (smaller\n> blocks for them result in even less income):\n>\n> Configuration:\n>   * Miner group 0: 80.000000% hashrate, blocksize 20000000.000000\n>   * Miner group 1: 20.000000% hashrate, blocksize 20000000.000000\n>   * Expected average block size: 20000000.000000\n>   * Average fee per block: 25.000000\n>   * Fee per byte: 0.0000012500\n> Result:\n>   * Miner group 0: 83.063545% income (factor 1.038294 with hashrate)\n>   * Miner group 1: 16.936455% income (factor 0.846823 with hashrate)\n>\n> The simulator is not perfect. It doesn't take into account that multiple\n> blocks/relays can compete for the same bandwidth, or that nodes cannot\n> process multiple blocks at once.\n>\n> The numbers used may be unrealistic, and I don't mean this as a prediction\n> for real-world events. However, it does very clearly show the effects of\n> larger blocks on centralization pressure of the system. Note that this also\n> does not make any assumption of destructive behavior on the network - just\n> simple profit maximalization.\n>\n> Lastly, the code may be buggy; I only did some small sanity tests with\n> simple networks.\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-18T22:00:39",
                "message_text_only": "On 06/12/2015 06:51 PM, Pieter Wuille wrote:\n>> However, it does very clearly show the effects of\n>> larger blocks on centralization pressure of the system.\n\nOn 6/14/2015 10:45 AM, Jonas Nick wrote:\n> This means that your scenario is not the result of a cartel but the result of a long-term network partition.\n>\n\nPieter, to Jonas' point, in your scenario the big miners are all part of \nthe majority partition, so \"centralization pressure\" (pressure to merge \nwith a big miner) cannot be separated from \"pressure to be connected to \nthe majority partition\".\n\nI ran your simulation with a large (20%) miner in a 20% minority \npartition, and 16 small (5%) miners in a majority 80% partition, well \nconnected.  The starting point was your recent update, which had a more \nrealistic \"slow link\" speed of 100 Mbit/s (making all of the effects \nsmaller).\n\nTo summarize the results across both your run and mine:\n\n** Making small blocks when others are making big ones -> BAD\n** As above, and fees are enormous -> VERY BAD\n\n** Being separated by a slow link from majority hash power -> BAD\n\n** Being a small miner with blocksize=20MB -> *NOT BAD*\n\n\nConfiguration:\n   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n   * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000\n   * Expected average block size: 4800000.000000\n   * Average fee per block: 0.250000\n   * Fee per byte: 0.0000000521\nResult:\n   * Miner group 0: 20.404704% income (factor 1.020235 with hashrate)\n   * Miner group 1: 79.595296% income (factor 0.994941 with hashrate)\n\nConfiguration:\n   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n   * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000\n   * Expected average block size: 20000000.000000\n   * Average fee per block: 0.250000\n   * Fee per byte: 0.0000000125\nResult:\n   * Miner group 0: 19.864232% income (factor 0.993212 with hashrate)\n   * Miner group 1: 80.135768% income (factor 1.001697 with hashrate)\n\nConfiguration:\n   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n   * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000\n   * Expected average block size: 4800000.000000\n   * Average fee per block: 25.000000\n   * Fee per byte: 0.0000052083\nResult:\n   * Miner group 0: 51.316895% income (factor 2.565845 with hashrate)\n   * Miner group 1: 48.683105% income (factor 0.608539 with hashrate)\n\nConfiguration:\n   * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n   * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000\n   * Expected average block size: 20000000.000000\n   * Average fee per block: 25.000000\n   * Fee per byte: 0.0000012500\nResult:\n   * Miner group 0: 19.865943% income (factor 0.993297 with hashrate)\n   * Miner group 1: 80.134057% income (factor 1.001676 with hashrate)"
            },
            {
                "author": "Yifu Guo",
                "date": "2015-06-19T01:31:00",
                "message_text_only": "Nice insight Peter,\n\nThis further confirms the real problem, which doesn't have much to do with\nblocksize but rather the connectivity of nodes in countries with\nnot-so-friendly internet policies and deceptive connectivity.\n\n\nOn Thu, Jun 18, 2015 at 6:00 PM, Tom Harding <tomh at thinlink.com> wrote:\n\n> On 06/12/2015 06:51 PM, Pieter Wuille wrote:\n> >> However, it does very clearly show the effects of\n> >> larger blocks on centralization pressure of the system.\n>\n> On 6/14/2015 10:45 AM, Jonas Nick wrote:\n> > This means that your scenario is not the result of a cartel but the\n> result of a long-term network partition.\n> >\n>\n> Pieter, to Jonas' point, in your scenario the big miners are all part of\n> the majority partition, so \"centralization pressure\" (pressure to merge\n> with a big miner) cannot be separated from \"pressure to be connected to\n> the majority partition\".\n>\n> I ran your simulation with a large (20%) miner in a 20% minority\n> partition, and 16 small (5%) miners in a majority 80% partition, well\n> connected.  The starting point was your recent update, which had a more\n> realistic \"slow link\" speed of 100 Mbit/s (making all of the effects\n> smaller).\n>\n> To summarize the results across both your run and mine:\n>\n> ** Making small blocks when others are making big ones -> BAD\n> ** As above, and fees are enormous -> VERY BAD\n>\n> ** Being separated by a slow link from majority hash power -> BAD\n>\n> ** Being a small miner with blocksize=20MB -> *NOT BAD*\n>\n>\n> Configuration:\n>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n>    * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000\n>    * Expected average block size: 4800000.000000\n>    * Average fee per block: 0.250000\n>    * Fee per byte: 0.0000000521\n> Result:\n>    * Miner group 0: 20.404704% income (factor 1.020235 with hashrate)\n>    * Miner group 1: 79.595296% income (factor 0.994941 with hashrate)\n>\n> Configuration:\n>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n>    * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000\n>    * Expected average block size: 20000000.000000\n>    * Average fee per block: 0.250000\n>    * Fee per byte: 0.0000000125\n> Result:\n>    * Miner group 0: 19.864232% income (factor 0.993212 with hashrate)\n>    * Miner group 1: 80.135768% income (factor 1.001697 with hashrate)\n>\n> Configuration:\n>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n>    * Miner group 1: 80.000000% hashrate, blocksize 1000000.000000\n>    * Expected average block size: 4800000.000000\n>    * Average fee per block: 25.000000\n>    * Fee per byte: 0.0000052083\n> Result:\n>    * Miner group 0: 51.316895% income (factor 2.565845 with hashrate)\n>    * Miner group 1: 48.683105% income (factor 0.608539 with hashrate)\n>\n> Configuration:\n>    * Miner group 0: 20.000000% hashrate, blocksize 20000000.000000\n>    * Miner group 1: 80.000000% hashrate, blocksize 20000000.000000\n>    * Expected average block size: 20000000.000000\n>    * Average fee per block: 25.000000\n>    * Fee per byte: 0.0000012500\n> Result:\n>    * Miner group 0: 19.865943% income (factor 0.993297 with hashrate)\n>    * Miner group 1: 80.134057% income (factor 1.001676 with hashrate)\n>\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n*Yifu Guo*\n*\"Life is an everlasting self-improvement.\"*\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/ef7b5861/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Mining centralization pressure from non-uniform propagation speed",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jonas Nick",
                "Yifu Guo",
                "Mike Hearn",
                "Peter Todd",
                "Gavin Andresen",
                "Pieter Wuille",
                "Tom Harding"
            ],
            "messages_count": 11,
            "total_messages_chars_count": 19475
        }
    },
    {
        "title": "[Bitcoin-development] User vote in blocksize through fees",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:11:53",
                "message_text_only": "Jeff Garzik recently proposed that the upper blocksize limit be removed\nentirely, with a \"soft\" limit being enforced via miner vote, recorded by\nhashing power.\n\nThis mechanism within the protocol for users to have any influence over\nthe miner vote. We can add that back by providing a way for transactions\nthemselves to set a flag determining whether or not they can be included\nin a block casting a specific vote.\n\nWe can simplify Garzik's vote to say that one of the nVersion bits\neither votes for the blocksize to be increased, or decreased, by some\nfixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\nnVersion bit in transactions themselves, also voting for an increase or\ndecrease. Transactions may only be included in blocks with an\nindentical vote, thus providing miners with a monetary incentive via\nfees to vote according to user wishes.\n\nOf course, to cast a \"don't care\" vote we can either define an\nadditional bit, or sign the transaction with both versions. Equally we\ncan even have different versions with different fees, broadcast via a\nmechanism such as replace-by-fee.\n\n\nSee also John Dillon's proposal for proof-of-stake blocksize voting:\n\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/934ec915/attachment.sig>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-12T18:20:21",
                "message_text_only": "Peter it's not clear to me that your described protocol is free of miner\ninfluence over the vote, by artificially generating transactions which they\nclaim in their own blocks, or conforming incentives among voters by opting\nto be with the (slight) majority in order to minimize fees.\n\nWouldn't it in fact be simpler to use the dynamic block size adjustment\nalgorithm presented to the list a few weeks back, where the miner opts for\na larger block by sacrificing fees? In that way the users \"vote\" for larger\nblocks by including sufficient fees to offset subsidy, but as it is an\neconomic incentives miners gain nothing by inflating the fees in their own\nblocks.\n\nOn Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> Jeff Garzik recently proposed that the upper blocksize limit be removed\n> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> hashing power.\n>\n> This mechanism within the protocol for users to have any influence over\n> the miner vote. We can add that back by providing a way for transactions\n> themselves to set a flag determining whether or not they can be included\n> in a block casting a specific vote.\n>\n> We can simplify Garzik's vote to say that one of the nVersion bits\n> either votes for the blocksize to be increased, or decreased, by some\n> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> nVersion bit in transactions themselves, also voting for an increase or\n> decrease. Transactions may only be included in blocks with an\n> indentical vote, thus providing miners with a monetary incentive via\n> fees to vote according to user wishes.\n>\n> Of course, to cast a \"don't care\" vote we can either define an\n> additional bit, or sign the transaction with both versions. Equally we\n> can even have different versions with different fees, broadcast via a\n> mechanism such as replace-by-fee.\n>\n>\n> See also John Dillon's proposal for proof-of-stake blocksize voting:\n>\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/89a6898b/attachment.html>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-12T18:26:20",
                "message_text_only": "On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n> Peter it's not clear to me that your described protocol is free of miner\n> influence over the vote, by artificially generating transactions which they\n> claim in their own blocks\n\nMiners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users."
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:36:45",
                "message_text_only": "On Fri, Jun 12, 2015 at 02:26:20PM -0400, Matt Whitlock wrote:\n> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n> > Peter it's not clear to me that your described protocol is free of miner\n> > influence over the vote, by artificially generating transactions which they\n> > claim in their own blocks\n> \n> Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.\n\nExactly. I very explicitly am proposing that we consider giving users a\nmechanism to pay for votes to give them a way to directly influence the\noutcome.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/4c8599eb/attachment.sig>"
            },
            {
                "author": "Jannes Faber",
                "date": "2015-06-12T18:56:57",
                "message_text_only": "I'm imagining in Peter's proposal it's not the transaction votes that are\ncounted but only the votes in the blocks? So miners get to vote but they\nrisk losing money by having to exclude counter voting transactions. But\ngarbage transactions are no problem at all.\n\nNote that users that want to cast a vote \"pay\" for that by increased\nconfirmation time (on average, hopefully slightly depending on the trend).\n\nOn Fri, Jun 12, 2015, 20:27 Matt Whitlock <bip at mattwhitlock.name> wrote:\n\n> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n> > Peter it's not clear to me that your described protocol is free of miner\n> > influence over the vote, by artificially generating transactions which\n> they\n> > claim in their own blocks\n>\n> Miners could fill their blocks with garbage transactions that agree with\n> their vote, but this wouldn't bring them any real income, as they'd be\n> paying their own money as fees to themselves. To get real income, miners\n> would have to vote in accordance with real users.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/57d6fac0/attachment.html>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-12T18:22:36",
                "message_text_only": "Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n\n\t0 0 = no preference (\"wildcard\" vote)\n\t0 1 = vote for the limit to remain the same\n\t1 0 = vote for the limit to be halved\n\t1 1 = vote for the limit to be doubled\n\nUser transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n\nIncidentally, I love this idea, as it addresses a concern I immediately had with Jeff's proposal, which is that it hands control exclusively to the miners. And your proposal here fixes that shortcoming in a economically powerful way: miners lose out on fees if they don't represent the wishes of the users.\n\n\nOn Friday, 12 June 2015, at 2:11 pm, Peter Todd wrote:\n> Jeff Garzik recently proposed that the upper blocksize limit be removed\n> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> hashing power.\n> \n> This mechanism within the protocol for users to have any influence over\n> the miner vote. We can add that back by providing a way for transactions\n> themselves to set a flag determining whether or not they can be included\n> in a block casting a specific vote.\n> \n> We can simplify Garzik's vote to say that one of the nVersion bits\n> either votes for the blocksize to be increased, or decreased, by some\n> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> nVersion bit in transactions themselves, also voting for an increase or\n> decrease. Transactions may only be included in blocks with an\n> indentical vote, thus providing miners with a monetary incentive via\n> fees to vote according to user wishes.\n> \n> Of course, to cast a \"don't care\" vote we can either define an\n> additional bit, or sign the transaction with both versions. Equally we\n> can even have different versions with different fees, broadcast via a\n> mechanism such as replace-by-fee.\n> \n> \n> See also John Dillon's proposal for proof-of-stake blocksize voting:\n> \n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n> \n> -- \n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:34:21",
                "message_text_only": "On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n> Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n> \n> \t0 0 = no preference (\"wildcard\" vote)\n> \t0 1 = vote for the limit to remain the same\n> \t1 0 = vote for the limit to be halved\n> \t1 1 = vote for the limit to be doubled\n> \n> User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n\nSounds like a good encoding to me. Taking the median of the three\noptions, and throwing away \"don't care\" votes entirely, makes sense.\n\n> Incidentally, I love this idea, as it addresses a concern I immediately had with Jeff's proposal, which is that it hands control exclusively to the miners. And your proposal here fixes that shortcoming in a economically powerful way: miners lose out on fees if they don't represent the wishes of the users.\n\nThanks! I personally expect disaster to ensue with this kind of\nproposal, but I'm less concerned if the disaster is something users\nexplicitly allowed to happen in a consensual way.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/935b2101/attachment.sig>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-12T18:36:31",
                "message_text_only": "On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:\n> On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n> > Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n> > \n> > \t0 0 = no preference (\"wildcard\" vote)\n> > \t0 1 = vote for the limit to remain the same\n> > \t1 0 = vote for the limit to be halved\n> > \t1 1 = vote for the limit to be doubled\n> > \n> > User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n> \n> Sounds like a good encoding to me. Taking the median of the three\n> options, and throwing away \"don't care\" votes entirely, makes sense.\n\nI hope you mean the *plurality* of the three options after throwing away the \"don't cares,\" not the *median*."
            },
            {
                "author": "Benjamin",
                "date": "2015-06-12T18:39:21",
                "message_text_only": "This is a misguided idea, to say the least. If such a mechanism of of\nuser input would be possible, one would use it for transaction\nverification in the first place. In proof-of-stake outcomes are\ndetermined by vote by stake (that vote has very different\ncharacteristics than vote by compute power). There is no such thing as\nmaking it possible to determine what \"users want\". That's what the\nproof-of-work mechanism does in the first place, only that it is now\nunfortunately skewed/corrupted/(whatever you want to call it). Before\ncentralization the concept of \"miners\" didn't exist in Bitcoin and\nminers were roughly identical to users. Peer-to-Peer implies only one\nclass of users.\n\nA big problem with such a vote (in PoW and PoS): miners get paid for\ntheir work and have incentives to raise fees. Those who pay fees would\nhave no say in whether those fees are fair or not. Transaction\nverification has to be roughly profitable, but there is no fixed\nformula for determining profitability.\n\nOn Fri, Jun 12, 2015 at 8:26 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n>> Peter it's not clear to me that your described protocol is free of miner\n>> influence over the vote, by artificially generating transactions which they\n>> claim in their own blocks\n>\n> Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\nOn Fri, Jun 12, 2015 at 8:34 PM, Peter Todd <pete at petertodd.org> wrote:\n> On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n>> Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n>>\n>>       0 0 = no preference (\"wildcard\" vote)\n>>       0 1 = vote for the limit to remain the same\n>>       1 0 = vote for the limit to be halved\n>>       1 1 = vote for the limit to be doubled\n>>\n>> User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n>\n> Sounds like a good encoding to me. Taking the median of the three\n> options, and throwing away \"don't care\" votes entirely, makes sense.\n>\n>> Incidentally, I love this idea, as it addresses a concern I immediately had with Jeff's proposal, which is that it hands control exclusively to the miners. And your proposal here fixes that shortcoming in a economically powerful way: miners lose out on fees if they don't represent the wishes of the users.\n>\n> Thanks! I personally expect disaster to ensue with this kind of\n> proposal, but I'm less concerned if the disaster is something users\n> explicitly allowed to happen in a consensual way.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\nOn Fri, Jun 12, 2015 at 8:36 PM, Peter Todd <pete at petertodd.org> wrote:\n> On Fri, Jun 12, 2015 at 02:26:20PM -0400, Matt Whitlock wrote:\n>> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n>> > Peter it's not clear to me that your described protocol is free of miner\n>> > influence over the vote, by artificially generating transactions which they\n>> > claim in their own blocks\n>>\n>> Miners could fill their blocks with garbage transactions that agree with their vote, but this wouldn't bring them any real income, as they'd be paying their own money as fees to themselves. To get real income, miners would have to vote in accordance with real users.\n>\n> Exactly. I very explicitly am proposing that we consider giving users a\n> mechanism to pay for votes to give them a way to directly influence the\n> outcome.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\nOn Fri, Jun 12, 2015 at 8:36 PM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n> On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:\n>> On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n>> > Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n>> >\n>> >     0 0 = no preference (\"wildcard\" vote)\n>> >     0 1 = vote for the limit to remain the same\n>> >     1 0 = vote for the limit to be halved\n>> >     1 1 = vote for the limit to be doubled\n>> >\n>> > User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n>>\n>> Sounds like a good encoding to me. Taking the median of the three\n>> options, and throwing away \"don't care\" votes entirely, makes sense.\n>\n> I hope you mean the *plurality* of the three options after throwing away the \"don't cares,\" not the *median*.\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:47:34",
                "message_text_only": "On Fri, Jun 12, 2015 at 08:39:21PM +0200, Benjamin wrote:\n> This is a misguided idea, to say the least. If such a mechanism of of\n> user input would be possible, one would use it for transaction\n> verification in the first place. In proof-of-stake outcomes are\n> determined by vote by stake (that vote has very different\n> characteristics than vote by compute power). There is no such thing as\n> making it possible to determine what \"users want\". That's what the\n> proof-of-work mechanism does in the first place, only that it is now\n> unfortunately skewed/corrupted/(whatever you want to call it). Before\n> centralization the concept of \"miners\" didn't exist in Bitcoin and\n> miners were roughly identical to users. Peer-to-Peer implies only one\n> class of users.\n> \n> A big problem with such a vote (in PoW and PoS): miners get paid for\n> their work and have incentives to raise fees. Those who pay fees would\n> have no say in whether those fees are fair or not. Transaction\n> verification has to be roughly profitable, but there is no fixed\n> formula for determining profitability.\n\nRead John Dillon's proposal then, which via proof-of-stake explicitly\napproportions control of increases via % of Bitcoin owned.\n\n\nAnyway, representing everyone is never going to be easy, but at least\nthis nVersion thing is very easy to implement.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/9fb17544/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-12T18:44:51",
                "message_text_only": "On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:\n> On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:\n> > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n> > > Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n> > > \n> > > \t0 0 = no preference (\"wildcard\" vote)\n> > > \t0 1 = vote for the limit to remain the same\n> > > \t1 0 = vote for the limit to be halved\n> > > \t1 1 = vote for the limit to be doubled\n> > > \n> > > User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n> > \n> > Sounds like a good encoding to me. Taking the median of the three\n> > options, and throwing away \"don't care\" votes entirely, makes sense.\n> \n> I hope you mean the *plurality* of the three options after throwing away the \"don't cares,\" not the *median*.\n\nMedian ensures that voting \"no change\" is meaningful. If \"double\" + \"no\nchange\" = 66%-1, you'd expect the result to be \"no change\", not \"halve\"\"\nWith a plurality vote you'd end up with a halving that was supported by\na minority.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/ba7a2a93/attachment.sig>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-12T18:52:31",
                "message_text_only": "On Friday, 12 June 2015, at 7:44 pm, Peter Todd wrote:\n> On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:\n> > On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:\n> > > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n> > > > Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n> > > > \n> > > > \t0 0 = no preference (\"wildcard\" vote)\n> > > > \t0 1 = vote for the limit to remain the same\n> > > > \t1 0 = vote for the limit to be halved\n> > > > \t1 1 = vote for the limit to be doubled\n> > > > \n> > > > User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n> > > \n> > > Sounds like a good encoding to me. Taking the median of the three\n> > > options, and throwing away \"don't care\" votes entirely, makes sense.\n> > \n> > I hope you mean the *plurality* of the three options after throwing away the \"don't cares,\" not the *median*.\n> \n> Median ensures that voting \"no change\" is meaningful. If \"double\" + \"no\n> change\" = 66%-1, you'd expect the result to be \"no change\", not \"halve\"\"\n> With a plurality vote you'd end up with a halving that was supported by\n> a minority.\n\nI'm very confused.\n\nLet's say, out of the 12,000 blocks in a voting period:\n\u2022 1000 blocks express no preference,\n\u2022 2000 blocks vote to halve the limit,\n\u2022 3500 blocks vote to double the limit, and\n\u2022 5500 blocks vote to keep the limit the same.\n\n The plurality vote is to keep the limit the same. The median vote is\u2026 well, I'm not sure, since there are four choices, and an average of the two \"middle\" choices doesn't seem to make sense."
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-12T18:54:25",
                "message_text_only": "On Friday, 12 June 2015, at 7:44 pm, Peter Todd wrote:\n> On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:\n> > On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:\n> > > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n> > > > Why should miners only be able to vote for \"double the limit\" or \"halve\" the limit? If you're going to use bits, I think you need to use two bits:\n> > > > \n> > > > \t0 0 = no preference (\"wildcard\" vote)\n> > > > \t0 1 = vote for the limit to remain the same\n> > > > \t1 0 = vote for the limit to be halved\n> > > > \t1 1 = vote for the limit to be doubled\n> > > > \n> > > > User transactions would follow the same usage. In particular, a user vote of \"0 0\" (no preference) could be included in a block casting any vote, but a block voting \"0 0\" (no preference) could only contain transactions voting \"0 0\" as well.\n> > > \n> > > Sounds like a good encoding to me. Taking the median of the three\n> > > options, and throwing away \"don't care\" votes entirely, makes sense.\n> > \n> > I hope you mean the *plurality* of the three options after throwing away the \"don't cares,\" not the *median*.\n> \n> Median ensures that voting \"no change\" is meaningful. If \"double\" + \"no\n> change\" = 66%-1, you'd expect the result to be \"no change\", not \"halve\"\"\n> With a plurality vote you'd end up with a halving that was supported by\n> a minority.\n\nNever mind. I think I've figured out what you're getting at, and you're right. We wouldn't want \"halve\" to win on a plurality just because the remaining majority of the vote was split between double and remain-the-same. Good catch. :)"
            },
            {
                "author": "Aaron Gustafson",
                "date": "2015-06-12T18:56:34",
                "message_text_only": "For the purposes of finding the median, halve < same < double. It will only\nchange if a majority of non-apathetic votes are for halve or a majority of\nnon-apathetic votes are for double.\n\nOn Fri, Jun 12, 2015 at 11:54 AM, Matt Whitlock <bip at mattwhitlock.name>\nwrote:\n\n> On Friday, 12 June 2015, at 7:44 pm, Peter Todd wrote:\n> > On Fri, Jun 12, 2015 at 02:36:31PM -0400, Matt Whitlock wrote:\n> > > On Friday, 12 June 2015, at 7:34 pm, Peter Todd wrote:\n> > > > On Fri, Jun 12, 2015 at 02:22:36PM -0400, Matt Whitlock wrote:\n> > > > > Why should miners only be able to vote for \"double the limit\" or\n> \"halve\" the limit? If you're going to use bits, I think you need to use two\n> bits:\n> > > > >\n> > > > >         0 0 = no preference (\"wildcard\" vote)\n> > > > >         0 1 = vote for the limit to remain the same\n> > > > >         1 0 = vote for the limit to be halved\n> > > > >         1 1 = vote for the limit to be doubled\n> > > > >\n> > > > > User transactions would follow the same usage. In particular, a\n> user vote of \"0 0\" (no preference) could be included in a block casting any\n> vote, but a block voting \"0 0\" (no preference) could only contain\n> transactions voting \"0 0\" as well.\n> > > >\n> > > > Sounds like a good encoding to me. Taking the median of the three\n> > > > options, and throwing away \"don't care\" votes entirely, makes sense.\n> > >\n> > > I hope you mean the *plurality* of the three options after throwing\n> away the \"don't cares,\" not the *median*.\n> >\n> > Median ensures that voting \"no change\" is meaningful. If \"double\" + \"no\n> > change\" = 66%-1, you'd expect the result to be \"no change\", not \"halve\"\"\n> > With a plurality vote you'd end up with a halving that was supported by\n> > a minority.\n>\n> Never mind. I think I've figured out what you're getting at, and you're\n> right. We wouldn't want \"halve\" to win on a plurality just because the\n> remaining majority of the vote was split between double and\n> remain-the-same. Good catch. :)\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJ. Aaron Gustafson\nCornell University '16 | Computer Science, Engineering | Mathematics, Arts\n& Sciences\nVice President, Kappa Delta Rho\njag426 at cornell.edu | Ithaca, New York\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5da1e54c/attachment.html>"
            },
            {
                "author": "Danny Thorpe",
                "date": "2015-06-13T22:20:28",
                "message_text_only": "Please forgive my ignorance, but why should Bitcoin users have a say in\nblock size limits?  It's the miners and Bitcoin node operators that bear\nthe burden of managing large blocks, no?\n\nUsers voting on network parameters sounds like neighbors voting on how deep\nmy swimming pool should be.\n\nThanks,\n-Danny\n\nOn Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> Jeff Garzik recently proposed that the upper blocksize limit be removed\n> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> hashing power.\n>\n> This mechanism within the protocol for users to have any influence over\n> the miner vote. We can add that back by providing a way for transactions\n> themselves to set a flag determining whether or not they can be included\n> in a block casting a specific vote.\n>\n> We can simplify Garzik's vote to say that one of the nVersion bits\n> either votes for the blocksize to be increased, or decreased, by some\n> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> nVersion bit in transactions themselves, also voting for an increase or\n> decrease. Transactions may only be included in blocks with an\n> indentical vote, thus providing miners with a monetary incentive via\n> fees to vote according to user wishes.\n>\n> Of course, to cast a \"don't care\" vote we can either define an\n> additional bit, or sign the transaction with both versions. Equally we\n> can even have different versions with different fees, broadcast via a\n> mechanism such as replace-by-fee.\n>\n>\n> See also John Dillon's proposal for proof-of-stake blocksize voting:\n>\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/da34f3e3/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-13T22:24:26",
                "message_text_only": "That\u2019s exactly the problem with Bitcoin - it was supposed to be the case that users ARE the miners and node operators\u2026but\u2026alas\u2026\n\n> On Jun 13, 2015, at 3:20 PM, Danny Thorpe <danny.thorpe at gmail.com> wrote:\n> \n> Please forgive my ignorance, but why should Bitcoin users have a say in block size limits?  It's the miners and Bitcoin node operators that bear the burden of managing large blocks, no?\n> \n> Users voting on network parameters sounds like neighbors voting on how deep my swimming pool should be.\n> \n> Thanks,\n> -Danny\n> \n> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org <mailto:pete at petertodd.org>> wrote:\n> Jeff Garzik recently proposed that the upper blocksize limit be removed\n> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> hashing power.\n> \n> This mechanism within the protocol for users to have any influence over\n> the miner vote. We can add that back by providing a way for transactions\n> themselves to set a flag determining whether or not they can be included\n> in a block casting a specific vote.\n> \n> We can simplify Garzik's vote to say that one of the nVersion bits\n> either votes for the blocksize to be increased, or decreased, by some\n> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> nVersion bit in transactions themselves, also voting for an increase or\n> decrease. Transactions may only be included in blocks with an\n> indentical vote, thus providing miners with a monetary incentive via\n> fees to vote according to user wishes.\n> \n> Of course, to cast a \"don't care\" vote we can either define an\n> additional bit, or sign the transaction with both versions. Equally we\n> can even have different versions with different fees, broadcast via a\n> mechanism such as replace-by-fee.\n> \n> \n> See also John Dillon's proposal for proof-of-stake blocksize voting:\n> \n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html <https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html>\n> \n> --\n> 'peter'[:-1]@petertodd.org <http://petertodd.org/>\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n> \n> ------------------------------------------------------------------------------\n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/0b7a0b67/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/0b7a0b67/attachment.sig>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-14T04:55:47",
                "message_text_only": "To tell you the truth. It is only because most miners are not located\nin the West. If Slush, Eligius and BTC Guild still on top 3, the core\ndevelopers, including brain-dead Mike Hearn, would be very happy to do\nBIP100 just like they did BIP34 and BIP66. Shame on you!\n\nOn Sun, Jun 14, 2015 at 6:20 AM, Danny Thorpe <danny.thorpe at gmail.com> wrote:\n> Please forgive my ignorance, but why should Bitcoin users have a say in\n> block size limits?  It's the miners and Bitcoin node operators that bear the\n> burden of managing large blocks, no?\n>\n> Users voting on network parameters sounds like neighbors voting on how deep\n> my swimming pool should be.\n>\n> Thanks,\n> -Danny\n>\n> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:\n>>\n>> Jeff Garzik recently proposed that the upper blocksize limit be removed\n>> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n>> hashing power.\n>>\n>> This mechanism within the protocol for users to have any influence over\n>> the miner vote. We can add that back by providing a way for transactions\n>> themselves to set a flag determining whether or not they can be included\n>> in a block casting a specific vote.\n>>\n>> We can simplify Garzik's vote to say that one of the nVersion bits\n>> either votes for the blocksize to be increased, or decreased, by some\n>> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n>> nVersion bit in transactions themselves, also voting for an increase or\n>> decrease. Transactions may only be included in blocks with an\n>> indentical vote, thus providing miners with a monetary incentive via\n>> fees to vote according to user wishes.\n>>\n>> Of course, to cast a \"don't care\" vote we can either define an\n>> additional bit, or sign the transaction with both versions. Equally we\n>> can even have different versions with different fees, broadcast via a\n>> mechanism such as replace-by-fee.\n>>\n>>\n>> See also John Dillon's proposal for proof-of-stake blocksize voting:\n>>\n>>\n>> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T04:59:03",
                "message_text_only": "On Sun, Jun 14, 2015 at 12:55 AM, Chun Wang <1240902 at gmail.com> wrote:\n\n> To tell you the truth. It is only because most miners are not located\n> in the West. If Slush, Eligius and BTC Guild still on top 3, the core\n> developers, including brain-dead Mike Hearn, would be very happy to do\n> BIP100 just like they did BIP34 and BIP66. Shame on you!\n>\n\nBIP 100 requires a hard fork to engage.  Users proactively opt-in.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/718f5a1c/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-14T05:08:16",
                "message_text_only": "Chun,\n\nWith all due respect, there are a couple major differences between BIP34 and BIP66 on the one hand and BIP100 on the other.\n\n1) BIP34 and BIP66 are soft forks. Miners choosing to switch to them will not seriously impact validation rules for non-mining users that do not make the switch. With BIP66, the worst that can happen to them is noncompliant transactions will no longer be accepted by the network\u2026but even nodes that do not switch over will continue to remain synched with the network.\n\n2) BIP100 has direct economic consequences\u2026and particularly for miners. It lends itself to much greater corruptibility.\n\n- Eric Lombrozo\n\n> On Jun 13, 2015, at 9:55 PM, Chun Wang <1240902 at gmail.com> wrote:\n> \n> To tell you the truth. It is only because most miners are not located\n> in the West. If Slush, Eligius and BTC Guild still on top 3, the core\n> developers, including brain-dead Mike Hearn, would be very happy to do\n> BIP100 just like they did BIP34 and BIP66. Shame on you!\n> \n> On Sun, Jun 14, 2015 at 6:20 AM, Danny Thorpe <danny.thorpe at gmail.com> wrote:\n>> Please forgive my ignorance, but why should Bitcoin users have a say in\n>> block size limits?  It's the miners and Bitcoin node operators that bear the\n>> burden of managing large blocks, no?\n>> \n>> Users voting on network parameters sounds like neighbors voting on how deep\n>> my swimming pool should be.\n>> \n>> Thanks,\n>> -Danny\n>> \n>> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org> wrote:\n>>> \n>>> Jeff Garzik recently proposed that the upper blocksize limit be removed\n>>> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n>>> hashing power.\n>>> \n>>> This mechanism within the protocol for users to have any influence over\n>>> the miner vote. We can add that back by providing a way for transactions\n>>> themselves to set a flag determining whether or not they can be included\n>>> in a block casting a specific vote.\n>>> \n>>> We can simplify Garzik's vote to say that one of the nVersion bits\n>>> either votes for the blocksize to be increased, or decreased, by some\n>>> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n>>> nVersion bit in transactions themselves, also voting for an increase or\n>>> decrease. Transactions may only be included in blocks with an\n>>> indentical vote, thus providing miners with a monetary incentive via\n>>> fees to vote according to user wishes.\n>>> \n>>> Of course, to cast a \"don't care\" vote we can either define an\n>>> additional bit, or sign the transaction with both versions. Equally we\n>>> can even have different versions with different fees, broadcast via a\n>>> mechanism such as replace-by-fee.\n>>> \n>>> \n>>> See also John Dillon's proposal for proof-of-stake blocksize voting:\n>>> \n>>> \n>>> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>>> \n>>> --\n>>> 'peter'[:-1]@petertodd.org\n>>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>>> \n>>> \n>>> ------------------------------------------------------------------------------\n>>> \n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>> \n>> \n>> \n>> ------------------------------------------------------------------------------\n>> \n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/002c6401/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T05:13:00",
                "message_text_only": "On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> 2) BIP100 has direct economic consequences\u2026and particularly for miners. It\n> lends itself to much greater corruptibility.\n>\n>\nWhat is the alternative?  Have a Chief Scientist or Technical Advisory\nBoard choose what is a proper fee, what is a proper level of\ndecentralization, a proper growth factor?\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/82643684/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-14T05:20:37",
                "message_text_only": "I definitely think we need some voting system for metaconsensus\u2026but if we\u2019re going to seriously consider this we should look at the problem much more generally. Using false choices doesn\u2019t really help, though ;)\n\n- Eric Lombrozo\n\n\n> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> \n> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:\n> 2) BIP100 has direct economic consequences\u2026and particularly for miners. It lends itself to much greater corruptibility.\n> \n> \n> What is the alternative?  Have a Chief Scientist or Technical Advisory Board choose what is a proper fee, what is a proper level of decentralization, a proper growth factor?\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9edf8eb0/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9edf8eb0/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T05:36:45",
                "message_text_only": "The choice is very real and on-point.  What should the block size limit\nbe?  Why?\n\nThere is a large consensus that it needs increasing.  To what?  By what\nfactor?\n\nThe size limit literally defines the fee market, the whole damn thing.  If\nsoftware high priests choose a size limit of 300k, space is scarce, fees\nare bid high.  If software high priests choose a size limit of 32mb, space\nis plentiful, fees are near zero.  Market actors take their signals\naccordingly.  Some business models boom, some business models fail, as a\ndirect result of changing this unintentionally-added speedbump.  Different\nusers value adoption, decentralization etc. differently.\n\nThe size limit is an economic policy lever that needs to be transitioned\n-away- from software and software developers, to the free market.\n\nA simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance\nproblems associated with actors lobbying developers, even if a cloistered\nand vetted Technical Advisory Board as has been proposed.\n\n\n\n\n\n\n\nOn Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> I definitely think we need some voting system for metaconsensus\u2026but if\n> we\u2019re going to seriously consider this we should look at the problem much\n> more generally. Using false choices doesn\u2019t really help, though ;)\n>\n> - Eric Lombrozo\n>\n>\n> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>\n> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>\n> wrote:\n>\n>> 2) BIP100 has direct economic consequences\u2026and particularly for miners.\n>> It lends itself to much greater corruptibility.\n>>\n>>\n> What is the alternative?  Have a Chief Scientist or Technical Advisory\n> Board choose what is a proper fee, what is a proper level of\n> decentralization, a proper growth factor?\n>\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/b1a4825d/attachment.html>"
            },
            {
                "author": "Mats Henricson",
                "date": "2015-06-14T10:06:49",
                "message_text_only": "Jeff,\n\nwith all due respect, but I've seen you saying this a few times\nnow, that this decision is oh so difficult and important.\n\nBut this is not helpful. We all know that. Even I.\n\nMake a suggestion, or stay out of the debate!\n\nMats\n\nOn 06/14/2015 07:36 AM, Jeff Garzik wrote:\n> The choice is very real and on-point.  What should the block size limit\n> be?  Why?\n> \n> There is a large consensus that it needs increasing.  To what?  By what\n> factor?\n> \n> The size limit literally defines the fee market, the whole damn thing.  If\n> software high priests choose a size limit of 300k, space is scarce, fees\n> are bid high.  If software high priests choose a size limit of 32mb, space\n> is plentiful, fees are near zero.  Market actors take their signals\n> accordingly.  Some business models boom, some business models fail, as a\n> direct result of changing this unintentionally-added speedbump.  Different\n> users value adoption, decentralization etc. differently.\n> \n> The size limit is an economic policy lever that needs to be transitioned\n> -away- from software and software developers, to the free market.\n> \n> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance\n> problems associated with actors lobbying developers, even if a cloistered\n> and vetted Technical Advisory Board as has been proposed.\n> \n> \n> \n> \n> \n> \n> \n> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n>> I definitely think we need some voting system for metaconsensus\u2026but if\n>> we\u2019re going to seriously consider this we should look at the problem much\n>> more generally. Using false choices doesn\u2019t really help, though ;)\n>>\n>> - Eric Lombrozo\n>>\n>>\n>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>>\n>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>\n>> wrote:\n>>\n>>> 2) BIP100 has direct economic consequences\u2026and particularly for miners.\n>>> It lends itself to much greater corruptibility.\n>>>\n>>>\n>> What is the alternative?  Have a Chief Scientist or Technical Advisory\n>> Board choose what is a proper fee, what is a proper level of\n>> decentralization, a proper growth factor?\n>>\n>>\n>>\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-14T10:34:01",
                "message_text_only": "\"The size limit is an economic policy lever that needs to be\ntransitioned -away- from software and software developers, to the free\nmarket.\"\n\nExactly right. Bitcoin does not have a free market for fee though, and\nliterally all the discussion so far has neglected some fundamental\naspect of this, as you described. It's not at all a \"technical\" or\n\"engineering\" decision. It's the question of how to potentially\nre-design a fundamental part of Bitcoin, and the proposals so far\ndon't address this. What is the price of the scarce resource of the\nblockchain and the mechanism to decide on price, once the subsidy runs\nout?\n\nOn Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se> wrote:\n> Jeff,\n>\n> with all due respect, but I've seen you saying this a few times\n> now, that this decision is oh so difficult and important.\n>\n> But this is not helpful. We all know that. Even I.\n>\n> Make a suggestion, or stay out of the debate!\n>\n> Mats\n>\n> On 06/14/2015 07:36 AM, Jeff Garzik wrote:\n>> The choice is very real and on-point.  What should the block size limit\n>> be?  Why?\n>>\n>> There is a large consensus that it needs increasing.  To what?  By what\n>> factor?\n>>\n>> The size limit literally defines the fee market, the whole damn thing.  If\n>> software high priests choose a size limit of 300k, space is scarce, fees\n>> are bid high.  If software high priests choose a size limit of 32mb, space\n>> is plentiful, fees are near zero.  Market actors take their signals\n>> accordingly.  Some business models boom, some business models fail, as a\n>> direct result of changing this unintentionally-added speedbump.  Different\n>> users value adoption, decentralization etc. differently.\n>>\n>> The size limit is an economic policy lever that needs to be transitioned\n>> -away- from software and software developers, to the free market.\n>>\n>> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance\n>> problems associated with actors lobbying developers, even if a cloistered\n>> and vetted Technical Advisory Board as has been proposed.\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n>>\n>>> I definitely think we need some voting system for metaconsensus\u2026but if\n>>> we\u2019re going to seriously consider this we should look at the problem much\n>>> more generally. Using false choices doesn\u2019t really help, though ;)\n>>>\n>>> - Eric Lombrozo\n>>>\n>>>\n>>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>>>\n>>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>\n>>> wrote:\n>>>\n>>>> 2) BIP100 has direct economic consequences\u2026and particularly for miners.\n>>>> It lends itself to much greater corruptibility.\n>>>>\n>>>>\n>>> What is the alternative?  Have a Chief Scientist or Technical Advisory\n>>> Board choose what is a proper fee, what is a proper level of\n>>> decentralization, a proper growth factor?\n>>>\n>>>\n>>>\n>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>>\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T15:07:06",
                "message_text_only": "Exactly -- both block size proponents and block size change conservatives\nseem to be glossing over this aspect - much to my dismay.\n\nChoosing the size limit is choosing the size of a scarce resource.  By fiat.\n\nIt is wrong to think that a \"technical consensus\" can choose what is best\nhere.\n\nThe block size limit defines the scope of a resource for which all fee\nmarket actors bid.  That, in turn, defines who is in the fee market and how\nthey behave, what market choices are made.\n\nIt doesn't matter how or why the limit was originally enacted, what Satoshi\nmeant to do.  What matters, economically, is what is.  What the software\nand our $3B economy & market knows and sees today.  (I think some block\nsize change proponents miss this!)\n\nThe solution lies in transitioning this size limit to the free market.  In\nthe end, the users must choose their desired level of growth,\ndecentralization, etc.  We cannot rely on some dev's idea of the proper\nlevel of fee, proper level of growth, proper level of decentralization.\n\nAnd IMO, a \"floating limit with training wheels\" is better and stronger for\nbitcoin's health from a governance, user choice and free market perspective\nthan simply \"hard fork to 2MB, come back again in 6 months.\"\n\n\n\n\n\n\n\nOn Sun, Jun 14, 2015 at 6:34 AM, Benjamin <benjamin.l.cordes at gmail.com>\nwrote:\n\n> \"The size limit is an economic policy lever that needs to be\n> transitioned -away- from software and software developers, to the free\n> market.\"\n>\n> Exactly right. Bitcoin does not have a free market for fee though, and\n> literally all the discussion so far has neglected some fundamental\n> aspect of this, as you described. It's not at all a \"technical\" or\n> \"engineering\" decision. It's the question of how to potentially\n> re-design a fundamental part of Bitcoin, and the proposals so far\n> don't address this. What is the price of the scarce resource of the\n> blockchain and the mechanism to decide on price, once the subsidy runs\n> out?\n>\n> On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se>\n> wrote:\n> > Jeff,\n> >\n> > with all due respect, but I've seen you saying this a few times\n> > now, that this decision is oh so difficult and important.\n> >\n> > But this is not helpful. We all know that. Even I.\n> >\n> > Make a suggestion, or stay out of the debate!\n> >\n> > Mats\n> >\n> > On 06/14/2015 07:36 AM, Jeff Garzik wrote:\n> >> The choice is very real and on-point.  What should the block size limit\n> >> be?  Why?\n> >>\n> >> There is a large consensus that it needs increasing.  To what?  By what\n> >> factor?\n> >>\n> >> The size limit literally defines the fee market, the whole damn thing.\n> If\n> >> software high priests choose a size limit of 300k, space is scarce, fees\n> >> are bid high.  If software high priests choose a size limit of 32mb,\n> space\n> >> is plentiful, fees are near zero.  Market actors take their signals\n> >> accordingly.  Some business models boom, some business models fail, as a\n> >> direct result of changing this unintentionally-added speedbump.\n> Different\n> >> users value adoption, decentralization etc. differently.\n> >>\n> >> The size limit is an economic policy lever that needs to be transitioned\n> >> -away- from software and software developers, to the free market.\n> >>\n> >> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level\n> governance\n> >> problems associated with actors lobbying developers, even if a\n> cloistered\n> >> and vetted Technical Advisory Board as has been proposed.\n> >>\n> >>\n> >>\n> >>\n> >>\n> >>\n> >>\n> >> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com>\n> wrote:\n> >>\n> >>> I definitely think we need some voting system for metaconsensus\u2026but if\n> >>> we\u2019re going to seriously consider this we should look at the problem\n> much\n> >>> more generally. Using false choices doesn\u2019t really help, though ;)\n> >>>\n> >>> - Eric Lombrozo\n> >>>\n> >>>\n> >>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> >>>\n> >>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>\n> >>> wrote:\n> >>>\n> >>>> 2) BIP100 has direct economic consequences\u2026and particularly for\n> miners.\n> >>>> It lends itself to much greater corruptibility.\n> >>>>\n> >>>>\n> >>> What is the alternative?  Have a Chief Scientist or Technical Advisory\n> >>> Board choose what is a proper fee, what is a proper level of\n> >>> decentralization, a proper growth factor?\n> >>>\n> >>>\n> >>>\n> >>\n> >>\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >>\n> >>\n> >>\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>\n> >\n> >\n> ------------------------------------------------------------------------------\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/48bfb14a/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-14T21:59:33",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nNotionally, I agree with what I see written here by Jeff, and I\nappreciate the thoughtfulness that went into this short post to list.\n\nOn 06/14/2015 08:07 AM, Jeff Garzik wrote:\n> Exactly -- both block size proponents and block size change \n> conservatives seem to be glossing over this aspect - much to my \n> dismay.\n> \n> Choosing the size limit is choosing the size of a scarce resource. \n> By fiat.\n> \n> It is wrong to think that a \"technical consensus\" can choose what \n> is best here.\n> \n> The block size limit defines the scope of a resource for which all \n> fee market actors bid.  That, in turn, defines who is in the fee \n> market and how they behave, what market choices are made.\n> \n> It doesn't matter how or why the limit was originally enacted, what\n> Satoshi meant to do.  What matters, economically, is what is. What\n> the software and our $3B economy & market knows and sees today.  (I\n> think some block size change proponents miss this!)\n> \n> The solution lies in transitioning this size limit to the free \n> market. In the end, the users must choose their desired level of \n> growth, decentralization, etc.  We cannot rely on some dev's idea \n> of the proper level of fee, proper level of growth, proper level\n> of decentralization.\n> \n> And IMO, a \"floating limit with training wheels\" is better and \n> stronger for bitcoin's health from a governance, user choice and \n> free market perspective than simply \"hard fork to 2MB, come back \n> again in 6 months.\"\n> \n> \n> \n> \n> \n> \n> \n> On Sun, Jun 14, 2015 at 6:34 AM, Benjamin \n> <benjamin.l.cordes at gmail.com <mailto:benjamin.l.cordes at gmail.com>> \n> wrote:\n> \n> \"The size limit is an economic policy lever that needs to be \n> transitioned -away- from software and software developers, to the \n> free market.\"\n> \n> Exactly right. Bitcoin does not have a free market for fee though, \n> and literally all the discussion so far has neglected some \n> fundamental aspect of this, as you described. It's not at all a \n> \"technical\" or \"engineering\" decision. It's the question of how to \n> potentially re-design a fundamental part of Bitcoin, and the \n> proposals so far don't address this. What is the price of the \n> scarce resource of the blockchain and the mechanism to decide on \n> price, once the subsidy runs out?\n> \n> On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se\n> <mailto:mats at henricson.se>> wrote:\n>> Jeff,\n>> \n>> with all due respect, but I've seen you saying this a few times \n>> now, that this decision is oh so difficult and important.\n>> \n>> But this is not helpful. We all know that. Even I.\n>> \n>> Make a suggestion, or stay out of the debate!\n>> \n>> Mats\n>> \n>> On 06/14/2015 07:36 AM, Jeff Garzik wrote:\n>>> The choice is very real and on-point.  What should the block \n>>> size\n> limit\n>>> be?  Why?\n>>> \n>>> There is a large consensus that it needs increasing.  To what?\n>>> \n> By what\n>>> factor?\n>>> \n>>> The size limit literally defines the fee market, the whole \n>>> damn\n> thing.  If\n>>> software high priests choose a size limit of 300k, space is\n> scarce, fees\n>>> are bid high.  If software high priests choose a size limit of\n> 32mb, space\n>>> is plentiful, fees are near zero.  Market actors take their \n>>> signals accordingly.  Some business models boom, some business \n>>> models\n> fail, as a\n>>> direct result of changing this unintentionally-added\n>>> speedbump.\n>>> \n> Different\n>>> users value adoption, decentralization etc. differently.\n>>> \n>>> The size limit is an economic policy lever that needs to be\n> transitioned\n>>> -away- from software and software developers, to the free \n>>> market.\n>>> \n>>> A simple, e.g. hard fork to 2MB or 4MB does not fix higher \n>>> level\n> governance\n>>> problems associated with actors lobbying developers, even if a\n> cloistered\n>>> and vetted Technical Advisory Board as has been proposed.\n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo\n> <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:\n>>> \n>>>> I definitely think we need some voting system for\n> metaconsensus\u2026but if\n>>>> we\u2019re going to seriously consider this we should look at the\n> problem much\n>>>> more generally. Using false choices doesn\u2019t really help, \n>>>> though ;)\n>>>> \n>>>> - Eric Lombrozo\n>>>> \n>>>> \n>>>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik \n>>>> <jgarzik at bitpay.com\n> <mailto:jgarzik at bitpay.com>> wrote:\n>>>> \n>>>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo\n> <elombrozo at gmail.com <mailto:elombrozo at gmail.com>>\n>>>> wrote:\n>>>> \n>>>>> 2) BIP100 has direct economic consequences\u2026and\n>>>>> particularly for\n> miners.\n>>>>> It lends itself to much greater corruptibility.\n>>>>> \n>>>>> \n>>>> What is the alternative?  Have a Chief Scientist or \n>>>> Technical\n> Advisory\n>>>> Board choose what is a proper fee, what is a proper level of\n>>>>  decentralization, a proper growth factor?\n>>>> \n>>>> \n>>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \n>> \n>>> \n>>> \n>>> _______________________________________________ \n>>> Bitcoin-development mailing list \n>>> Bitcoin-development at lists.sourceforge.net\n> <mailto:Bitcoin-development at lists.sourceforge.net>\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>>>\n>>> \n>> \n>> \n>> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \n_______________________________________________\n>> Bitcoin-development mailing list \n>> Bitcoin-development at lists.sourceforge.net\n> <mailto:Bitcoin-development at lists.sourceforge.net>\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \n_______________________________________________\n> Bitcoin-development mailing list \n> Bitcoin-development at lists.sourceforge.net \n> <mailto:Bitcoin-development at lists.sourceforge.net> \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> \n> -- Jeff Garzik Bitcoin core developer and open source evangelist \n> BitPay, Inc.      https://bitpay.com/\n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVfflFAAoJEGxwq/inSG8CrWoIAJOsZHTWqdILE0IYmmE50E/S\nBcbPJJtjodw1liPVJEybyNUKSgq4Ucw9tuQpMVv3hF8bvug6/6HtxAQCptuIKRSw\nWigZyvgm79u474YsPULG+2SltMrOFqmA05jTF9vWo0LBSY4xiMXjT4VwVt9xEcFc\nqHW5OUa1QoFZkaOf/jtY+H3a9w8cHZFlroTkf4MaJkaMo81oSRfWz3Mj8wOz6f8z\nMSEpvQERzETEcV0SqTBnzsoX8toO1s24a9HejMMfbeD7JAy8EvayFb3G1LNzBNVC\n1x/yeLBGnE3Z0P80J0oUR5taLbGJl9+7Hb16rEzxivtZF5FWBdDmvwKBOKJ1Alo=\n=ubcH\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-14T20:10:41",
                "message_text_only": "> On Jun 14, 2015, at 3:34 AM, Benjamin <benjamin.l.cordes at gmail.com> wrote:\n> \n> \"The size limit is an economic policy lever that needs to be\n> transitioned -away- from software and software developers, to the free\n> market.\"\n> \n> Exactly right. Bitcoin does not have a free market for fee though, and\n> literally all the discussion so far has neglected some fundamental\n> aspect of this, as you described. It's not at all a \"technical\" or\n> \"engineering\" decision. It's the question of how to potentially\n> re-design a fundamental part of Bitcoin, and the proposals so far\n> don't address this. What is the price of the scarce resource of the\n> blockchain and the mechanism to decide on price, once the subsidy runs\n> out?\n> \n\nIn addition, fees are complicated by the fact that they are used as an anti-spam measure for relay nodes\u2026who don\u2019t see ANY direct compensation whatsoever for providing that service. So we really have two different fees being tacked on\u2026but the miners get to keep all of it\u2026and the relay fee is being hard coded into the software.\n\nFee calculation heuristics for wallets are already far from trivial - this is another issue that needs to be addressed.\n\n- Eric Lombrozo\n\n> On Sun, Jun 14, 2015 at 12:06 PM, Mats Henricson <mats at henricson.se> wrote:\n>> Jeff,\n>> \n>> with all due respect, but I've seen you saying this a few times\n>> now, that this decision is oh so difficult and important.\n>> \n>> But this is not helpful. We all know that. Even I.\n>> \n>> Make a suggestion, or stay out of the debate!\n>> \n>> Mats\n>> \n>> On 06/14/2015 07:36 AM, Jeff Garzik wrote:\n>>> The choice is very real and on-point.  What should the block size limit\n>>> be?  Why?\n>>> \n>>> There is a large consensus that it needs increasing.  To what?  By what\n>>> factor?\n>>> \n>>> The size limit literally defines the fee market, the whole damn thing.  If\n>>> software high priests choose a size limit of 300k, space is scarce, fees\n>>> are bid high.  If software high priests choose a size limit of 32mb, space\n>>> is plentiful, fees are near zero.  Market actors take their signals\n>>> accordingly.  Some business models boom, some business models fail, as a\n>>> direct result of changing this unintentionally-added speedbump.  Different\n>>> users value adoption, decentralization etc. differently.\n>>> \n>>> The size limit is an economic policy lever that needs to be transitioned\n>>> -away- from software and software developers, to the free market.\n>>> \n>>> A simple, e.g. hard fork to 2MB or 4MB does not fix higher level governance\n>>> problems associated with actors lobbying developers, even if a cloistered\n>>> and vetted Technical Advisory Board as has been proposed.\n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n>>> \n>>>> I definitely think we need some voting system for metaconsensus\u2026but if\n>>>> we\u2019re going to seriously consider this we should look at the problem much\n>>>> more generally. Using false choices doesn\u2019t really help, though ;)\n>>>> \n>>>> - Eric Lombrozo\n>>>> \n>>>> \n>>>> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>>>> \n>>>> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>\n>>>> wrote:\n>>>> \n>>>>> 2) BIP100 has direct economic consequences\u2026and particularly for miners.\n>>>>> It lends itself to much greater corruptibility.\n>>>>> \n>>>>> \n>>>> What is the alternative?  Have a Chief Scientist or Technical Advisory\n>>>> Board choose what is a proper fee, what is a proper level of\n>>>> decentralization, a proper growth factor?\n>>>> \n>>>> \n>>>> \n>>> \n>>> \n>>> \n>>> \n>>> ------------------------------------------------------------------------------\n>>> \n>>> \n>>> \n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>> \n>> \n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/7bda2c1b/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T14:42:17",
                "message_text_only": "Since you missed it, here is the suggestion again:\nhttp://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n\n\nOn Sun, Jun 14, 2015 at 6:06 AM, Mats Henricson <mats at henricson.se> wrote:\n\n> Jeff,\n>\n> with all due respect, but I've seen you saying this a few times\n> now, that this decision is oh so difficult and important.\n>\n> But this is not helpful. We all know that. Even I.\n>\n> Make a suggestion, or stay out of the debate!\n>\n> Mats\n>\n> On 06/14/2015 07:36 AM, Jeff Garzik wrote:\n> > The choice is very real and on-point.  What should the block size limit\n> > be?  Why?\n> >\n> > There is a large consensus that it needs increasing.  To what?  By what\n> > factor?\n> >\n> > The size limit literally defines the fee market, the whole damn thing.\n> If\n> > software high priests choose a size limit of 300k, space is scarce, fees\n> > are bid high.  If software high priests choose a size limit of 32mb,\n> space\n> > is plentiful, fees are near zero.  Market actors take their signals\n> > accordingly.  Some business models boom, some business models fail, as a\n> > direct result of changing this unintentionally-added speedbump.\n> Different\n> > users value adoption, decentralization etc. differently.\n> >\n> > The size limit is an economic policy lever that needs to be transitioned\n> > -away- from software and software developers, to the free market.\n> >\n> > A simple, e.g. hard fork to 2MB or 4MB does not fix higher level\n> governance\n> > problems associated with actors lobbying developers, even if a cloistered\n> > and vetted Technical Advisory Board as has been proposed.\n> >\n> >\n> >\n> >\n> >\n> >\n> >\n> > On Sun, Jun 14, 2015 at 1:20 AM, Eric Lombrozo <elombrozo at gmail.com>\n> wrote:\n> >\n> >> I definitely think we need some voting system for metaconsensus\u2026but if\n> >> we\u2019re going to seriously consider this we should look at the problem\n> much\n> >> more generally. Using false choices doesn\u2019t really help, though ;)\n> >>\n> >> - Eric Lombrozo\n> >>\n> >>\n> >> On Jun 13, 2015, at 10:13 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> >>\n> >> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com>\n> >> wrote:\n> >>\n> >>> 2) BIP100 has direct economic consequences\u2026and particularly for miners.\n> >>> It lends itself to much greater corruptibility.\n> >>>\n> >>>\n> >> What is the alternative?  Have a Chief Scientist or Technical Advisory\n> >> Board choose what is a proper fee, what is a proper level of\n> >> decentralization, a proper growth factor?\n> >>\n> >>\n> >>\n> >\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> >\n> >\n> >\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/073f0190/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-14T22:26:27",
                "message_text_only": "On Sun, Jun 14, 2015 at 4:42 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> Since you missed it, here is the suggestion again:\n> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>\n\nReposting as Jeff's mail got eaten by the anti-phishing filters, due to\nSourceForge's obsolete mailman setup.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/ba5aa579/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-15T03:59:05",
                "message_text_only": "> On Sun, Jun 14, 2015 at 1:08 AM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:\n> 2) BIP100 has direct economic consequences\u2026and particularly for miners. It lends itself to much greater corruptibility.\n> \n> \n> What is the alternative?  Have a Chief Scientist or Technical Advisory Board choose what is a proper fee, what is a proper level of decentralization, a proper growth factor?\n\n\n> On Jun 13, 2015, at 10:36 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> \n> The choice is very real and on-point.  What should the block size limit be?  Why?\n> \n> There is a large consensus that it needs increasing.  To what?  By what factor?\n\nTo be clear, Jeff, I am 100% in agreement with you that a mechanism like what you\u2019re proposing is a million times better than having high priests that ram hard forks without proper consensus. And perhaps given the present circumstances it seems like the only alternative. However, in my mind this block size limit controversy is actually a fairly superficial aspect - a mere symptom, a manifestation of the real problem...\n\nWhat I find somewhat irksome is that we\u2019ve had six years to figure out a mechanism to enable hard forks (which we knew from the start would be inevitable) - and more to the point, we\u2019ve known about this block size issue from the start as well\u2026and only suddenly it becomes an issue of major urgency that we must bump up this parameter 20x\u2026\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/012fa37c/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/012fa37c/attachment.sig>"
            },
            {
                "author": "Stephen",
                "date": "2015-06-14T04:16:53",
                "message_text_only": "While this idea is theoretically interesting because it involves many stakeholders, rather than just miners, I think in practice this would not work very well. Users don't want to worry about this kind of technicality, they just want to be able to make a transaction and have it be processed. \n\nIn addition, while this gives stakeholders some weight with the fees they supply, these fees are marginal compared to the block size subsidy. If this proposal were actually implemented, I think miners would vote for whatever they think is best, and users would not contradict them with their votes to ensure a fast confirmation time. Users are incentivized to be in agreement with miners because the miners provide them with the confirmations they need, but fees do not provide a great incentive for miners to be in agreement with users, and likely won't for some time. \n\nBest, \nStephen \n\n\n\n\n> On Jun 12, 2015, at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:\n> \n> Jeff Garzik recently proposed that the upper blocksize limit be removed\n> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> hashing power.\n> \n> This mechanism within the protocol for users to have any influence over\n> the miner vote. We can add that back by providing a way for transactions\n> themselves to set a flag determining whether or not they can be included\n> in a block casting a specific vote.\n> \n> We can simplify Garzik's vote to say that one of the nVersion bits\n> either votes for the blocksize to be increased, or decreased, by some\n> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> nVersion bit in transactions themselves, also voting for an increase or\n> decrease. Transactions may only be included in blocks with an\n> indentical vote, thus providing miners with a monetary incentive via\n> fees to vote according to user wishes.\n> \n> Of course, to cast a \"don't care\" vote we can either define an\n> additional bit, or sign the transaction with both versions. Equally we\n> can even have different versions with different fees, broadcast via a\n> mechanism such as replace-by-fee.\n> \n> \n> See also John Dillon's proposal for proof-of-stake blocksize voting:\n> \n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n> \n> -- \n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-14T04:50:39",
                "message_text_only": "What Stephen said is very much along the same lines of my earlier critique. This voting mechanism would be all but unusable to most endusers without some pretty elaborate tools\u2026and unless users are willing to pay substantially higher fees than they\u2019re currently paying, their votes will not really count all that much. And it\u2019s not all that clear that most users would really be able to make very rational economic decisions even having elaborate tools. More likely, a small group would figure out ways to exploit this for their own benefit - at everyone else\u2019s expense.\n\n- Eric Lombrozo\n\n\n> On Jun 13, 2015, at 9:16 PM, Stephen <stephencalebmorse at gmail.com> wrote:\n> \n> While this idea is theoretically interesting because it involves many stakeholders, rather than just miners, I think in practice this would not work very well. Users don't want to worry about this kind of technicality, they just want to be able to make a transaction and have it be processed.\n> \n> In addition, while this gives stakeholders some weight with the fees they supply, these fees are marginal compared to the block size subsidy. If this proposal were actually implemented, I think miners would vote for whatever they think is best, and users would not contradict them with their votes to ensure a fast confirmation time. Users are incentivized to be in agreement with miners because the miners provide them with the confirmations they need, but fees do not provide a great incentive for miners to be in agreement with users, and likely won't for some time.\n> \n> Best,\n> Stephen\n> \n> \n> \n> \n>> On Jun 12, 2015, at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:\n>> \n>> Jeff Garzik recently proposed that the upper blocksize limit be removed\n>> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n>> hashing power.\n>> \n>> This mechanism within the protocol for users to have any influence over\n>> the miner vote. We can add that back by providing a way for transactions\n>> themselves to set a flag determining whether or not they can be included\n>> in a block casting a specific vote.\n>> \n>> We can simplify Garzik's vote to say that one of the nVersion bits\n>> either votes for the blocksize to be increased, or decreased, by some\n>> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n>> nVersion bit in transactions themselves, also voting for an increase or\n>> decrease. Transactions may only be included in blocks with an\n>> indentical vote, thus providing miners with a monetary incentive via\n>> fees to vote according to user wishes.\n>> \n>> Of course, to cast a \"don't care\" vote we can either define an\n>> additional bit, or sign the transaction with both versions. Equally we\n>> can even have different versions with different fees, broadcast via a\n>> mechanism such as replace-by-fee.\n>> \n>> \n>> See also John Dillon's proposal for proof-of-stake blocksize voting:\n>> \n>> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>> \n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/e3f490de/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T04:56:22",
                "message_text_only": "Miner voting, while imperfect, is the least-worst of various solutions\nwhich inject market input into the system.  It is is known quantity, field\ntested, and must be sustained, in public, over a time span of months.  As\nthis thread shows, stakeholder and direct user voting is nigh impossible to\nget right.\n\nChoosing block size is fundamentally a central bank directive shaping the\nfee market.  Whatever actor or algorithm or natural equilibrium picks the\nblock size, that choice will dictate the level of competition for fees, the\nlevel of scarcity of an economically scarce resource.  Picking the block\nsize advantages some businesses over others, some business models over\nothers.  Software (and software devs) should not be the ones picking that\nlimit.\n\nChecks-and-balances are also important.  BIP 100 notably includes two steps\nat which user input is visibly and actively injected:   1) hard fork to\nenable, and 2) a second hard fork if the system is to scale beyond 32MB.\nThe network users (not miners) twice approve the system.  Further, one must\nremember all the basic miner incentives that do align with users, notably\nthat of maintaining the value of bitcoin tokens as their primary income\nstream.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOn Sun, Jun 14, 2015 at 12:16 AM, Stephen <stephencalebmorse at gmail.com>\nwrote:\n\n> While this idea is theoretically interesting because it involves many\n> stakeholders, rather than just miners, I think in practice this would not\n> work very well. Users don't want to worry about this kind of technicality,\n> they just want to be able to make a transaction and have it be processed.\n>\n> In addition, while this gives stakeholders some weight with the fees they\n> supply, these fees are marginal compared to the block size subsidy. If this\n> proposal were actually implemented, I think miners would vote for whatever\n> they think is best, and users would not contradict them with their votes to\n> ensure a fast confirmation time. Users are incentivized to be in agreement\n> with miners because the miners provide them with the confirmations they\n> need, but fees do not provide a great incentive for miners to be in\n> agreement with users, and likely won't for some time.\n>\n> Best,\n> Stephen\n>\n>\n>\n>\n> > On Jun 12, 2015, at 2:11 PM, Peter Todd <pete at petertodd.org> wrote:\n> >\n> > Jeff Garzik recently proposed that the upper blocksize limit be removed\n> > entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> > hashing power.\n> >\n> > This mechanism within the protocol for users to have any influence over\n> > the miner vote. We can add that back by providing a way for transactions\n> > themselves to set a flag determining whether or not they can be included\n> > in a block casting a specific vote.\n> >\n> > We can simplify Garzik's vote to say that one of the nVersion bits\n> > either votes for the blocksize to be increased, or decreased, by some\n> > fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> > nVersion bit in transactions themselves, also voting for an increase or\n> > decrease. Transactions may only be included in blocks with an\n> > indentical vote, thus providing miners with a monetary incentive via\n> > fees to vote according to user wishes.\n> >\n> > Of course, to cast a \"don't care\" vote we can either define an\n> > additional bit, or sign the transaction with both versions. Equally we\n> > can even have different versions with different fees, broadcast via a\n> > mechanism such as replace-by-fee.\n> >\n> >\n> > See also John Dillon's proposal for proof-of-stake blocksize voting:\n> >\n> >\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n> >\n> > --\n> > 'peter'[:-1]@petertodd.org\n> > 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n> >\n> ------------------------------------------------------------------------------\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/a0c711a4/attachment.html>"
            },
            {
                "author": "Ashley Holman",
                "date": "2015-06-14T07:19:47",
                "message_text_only": "Economic policy sounds like a dirty word in the context of Bitcoin, but as\nJeff Garzik said, choosing a block size cap is unfortunately an economic\npolicy that has to be chosen somehow.  Enabling users to incentivise the\nvoting process is an interesting tool to have in the toolbox, but I think\nit would be sensible to first observe how the miner-only voting system\nbehaves on its own.\n\nIf, for example, the hashing majority tended to favour a move towards\ncentralization (big blocks), user preferences could potentially hasten this\nmove by further punishing marginal miners through reduced fees.  On the\nother hand, if user preferences tended to oppose the preferences of miners,\nthen such a system might function well in keeping a balance between\nusability and security (although it's not clear how this balance might\nchange over time as the block subsidy drops).\n\nIn short, I think it's wise to keep it simple and implement one mechanism\nat a time.\n\nOn Sat, Jun 13, 2015 at 4:11 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> Jeff Garzik recently proposed that the upper blocksize limit be removed\n> entirely, with a \"soft\" limit being enforced via miner vote, recorded by\n> hashing power.\n>\n> This mechanism within the protocol for users to have any influence over\n> the miner vote. We can add that back by providing a way for transactions\n> themselves to set a flag determining whether or not they can be included\n> in a block casting a specific vote.\n>\n> We can simplify Garzik's vote to say that one of the nVersion bits\n> either votes for the blocksize to be increased, or decreased, by some\n> fixed ratio (e.g 2x or 1/2x) the next interval. Then we can use a\n> nVersion bit in transactions themselves, also voting for an increase or\n> decrease. Transactions may only be included in blocks with an\n> indentical vote, thus providing miners with a monetary incentive via\n> fees to vote according to user wishes.\n>\n> Of course, to cast a \"don't care\" vote we can either define an\n> additional bit, or sign the transaction with both versions. Equally we\n> can even have different versions with different fees, broadcast via a\n> mechanism such as replace-by-fee.\n>\n>\n> See also John Dillon's proposal for proof-of-stake blocksize voting:\n>\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/253e3f4d/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-12T20:04:23",
                "message_text_only": "Miners currently only collect an almost negligible portion of their revenue\nfrom fees. While I certainly welcome any proposals that move us in the\ndirection of defining a smooth metaconsensus process, I think with the\ncurent economics, miners (and especially those with significant hashing\npower) have more of an incentive to block txs/spam their votes than to\nadapt to tx sender preferences...unless people increase their tx fees\nsignificantly. But without wallets that can make decent suggestions in this\nregard, this feature will be almost inaccessible to most regular users. And\nthe economics still aren't entirely clear.\n\n- Eric Lombrozo\nOn Jun 12, 2015 12:30 PM, \"Jannes Faber\" <j.faber at elevate.nl> wrote:\n\nI'm imagining in Peter's proposal it's not the transaction votes that are\ncounted but only the votes in the blocks? So miners get to vote but they\nrisk losing money by having to exclude counter voting transactions. But\ngarbage transactions are no problem at all.\n\nNote that users that want to cast a vote \"pay\" for that by increased\nconfirmation time (on average, hopefully slightly depending on the trend).\n\nOn Fri, Jun 12, 2015, 20:27 Matt Whitlock <bip at mattwhitlock.name> wrote:\n\n> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n> > Peter it's not clear to me that your described protocol is free of miner\n> > influence over the vote, by artificially generating transactions which\n> they\n> > claim in their own blocks\n>\n> Miners could fill their blocks with garbage transactions that agree with\n> their vote, but this wouldn't bring them any real income, as they'd be\n> paying their own money as fees to themselves. To get real income, miners\n> would have to vote in accordance with real users.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n------------------------------------------------------------------------------\n\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5958de23/attachment.html>"
            },
            {
                "author": "Vincent Truong",
                "date": "2015-06-12T23:01:02",
                "message_text_only": "(Sorry for spam, forgot to cc the mailing list)\n\nRE: miner economics\nMiners who have an agenda can forego fees to achieve it and create their\nown txns if it is completely txn/user driven. It is better to just count\nminers votes and let the user votes be their backing.\n\nAlthough miners need to include txns that have the same vote as them, or\nyou expect them be able to vote themselves with their own txns, with\nbacking eventually there will be a large pool of unconfirmed txns that vote\nagainst them. Which means a juicy choice of fees for an honest or small\nminer to vote the other way (if there are any).\n\nIf the votes are required to be near unanimous (almost 100%) rather than\nmajority rule, there will be a small miner out there who will vote honestly\nand reset the vote on behalf of those users, because there is a fee\nincentive to do so (a pure honest miner doesn't care about fees. But\nthey're a dying breed). If it is a majority rule type of vote, bigger\nminers will set the vote direction and small miners have no say no matter\nhow they vote. From a decentralisation perspective, it is better to want\nthe big guns to have a small voice, otherwise it will tend towards\ncentralisation.\n\nTroll users (voting against when the direction is very clear) can still be\nignored by excluding their txns unless they're paying attractive fees. (So\nit isn't exactly 100%, but it'll be close). Miners have some power but\nultimately they will represent the users if the users votes are clearly\ndivided.\n\nIf you think 100% is hard, 95-90% could be a compromise but that requires\nan assumption that at least 5-10% will have their voices unheard. And that\nmight be OK. Personally, 100% is consensus, anything less is just a\ndemocracy.\n\nRE: vote bits\nI think letting a vote go up and down in the same vote is a strange one.\nPersonally I think binary votes simplify the process.\n\nWould it be better to 'announce' a vote that will contain a certain change.\nFor example, hash of a config file that said change MAX_BLOCK_SIZE -> 8mb.\nMore things can use the same mechanism by including changes in a config (or\nwhatever script/markup) file as needed in the future, for whichever\nconstants you want to expose to votes.\n\nVotes can just be 0 and 1 for no/yes and omitted for neutral. My preference\nis 1 for yes, 0 for no neutral/ignored and omitted for no, so that it is\nbackwards compatible and doesn't skew votes to the agreeing direction, and\nforces node owners and wallet developers to upgrade and participate.\nOn Jun 13, 2015 6:04 AM, \"Eric Lombrozo\" <elombrozo at gmail.com> wrote:\n\n> Miners currently only collect an almost negligible portion of their\n> revenue from fees. While I certainly welcome any proposals that move us in\n> the direction of defining a smooth metaconsensus process, I think with the\n> curent economics, miners (and especially those with significant hashing\n> power) have more of an incentive to block txs/spam their votes than to\n> adapt to tx sender preferences...unless people increase their tx fees\n> significantly. But without wallets that can make decent suggestions in this\n> regard, this feature will be almost inaccessible to most regular users. And\n> the economics still aren't entirely clear.\n>\n> - Eric Lombrozo\n> On Jun 12, 2015 12:30 PM, \"Jannes Faber\" <j.faber at elevate.nl> wrote:\n>\n> I'm imagining in Peter's proposal it's not the transaction votes that are\n> counted but only the votes in the blocks? So miners get to vote but they\n> risk losing money by having to exclude counter voting transactions. But\n> garbage transactions are no problem at all.\n>\n> Note that users that want to cast a vote \"pay\" for that by increased\n> confirmation time (on average, hopefully slightly depending on the trend).\n>\n> On Fri, Jun 12, 2015, 20:27 Matt Whitlock <bip at mattwhitlock.name> wrote:\n>\n>> On Friday, 12 June 2015, at 11:20 am, Mark Friedenbach wrote:\n>> > Peter it's not clear to me that your described protocol is free of miner\n>> > influence over the vote, by artificially generating transactions which\n>> they\n>> > claim in their own blocks\n>>\n>> Miners could fill their blocks with garbage transactions that agree with\n>> their vote, but this wouldn't bring them any real income, as they'd be\n>> paying their own money as fees to themselves. To get real income, miners\n>> would have to vote in accordance with real users.\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9f92b4cb/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-12T23:11:43",
                "message_text_only": "On Friday, June 12, 2015 11:01:02 PM Vincent Truong wrote:\n> RE: miner economics\n> Miners who have an agenda can forego fees to achieve it and create their\n> own txns if it is completely txn/user driven. It is better to just count\n> miners votes and let the user votes be their backing.\n\nJust simplify this? Allow a miner to have their block counted as <max possible \nvotes> votes for X provided not a single transaction they include votes \nagainst it. Then miners can explicitly forego the fees of opposing \ntransactions without having to bloat blocks.\n\nLuke"
            },
            {
                "author": "Aaron Gustafson",
                "date": "2015-06-12T23:23:37",
                "message_text_only": "On Fri, Jun 12, 2015 at 1:04 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Miners currently only collect an almost negligible portion of their\n> revenue from fees.\n\n\nThen they shouldn't care about the block size limit, since an increase in\nblock size (and thus in the number of txs they get fees from) will only\nincrease their revenue \"negligibly\".\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/509c299a/attachment.html>"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-13T23:57:39",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/9194c627/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-14T04:28:36",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nA decentralized, distributed application should offer its users\ndecentralized, distributed method of weighing in on the direction of\nhow it evolves as well as having an open development model.  The\nreference to Facebook and Myspace is completely inapplicable here\nbecause the tyranny of such spaces isn't what we have with bitcoin\n(fortunately), nor would we want to try to replicate it, ever, in any\nway, shape, or form.\n\nYes, it does bother (some) people to see the consensus based system\nbecause of the difficulties that can be associated with implementing\nit.  But that's the way it is.  If you don't like consensus based\nsystems (or decentralized, distributed systems) this is probably the\nwrong space for you.\n\nOn 06/13/2015 04:57 PM, Raystonn wrote:\n> Adding back the list. Did not intend to remove it. Apologies.\n> \n> On 13 Jun 2015 4:52 pm, Raystonn <raystonn at hotmail.com> wrote:\n> \n> Based on my observations, what the majority of Bitcoin users want \n> is a system that can carry more transactions per second than any \n> existing payment system while retaining most of the security \n> offered today. The technicalities on how this is achieved are not \n> as important as the end result. If the only user input is to \n> technicalities, they will use that to voice their opinions.\n> \n> On 13 Jun 2015 4:25 pm, Danny Thorpe <danny.thorpe at gmail.com> \n> wrote:\n> \n> I don't recall Facebook or MySpace asking end users to alter the \n> parameters of their respective back-end network infrastructure.\n> \n> How are Bitcoin end users qualified to make an informed decision \n> regarding block size limits? And why should they care?\n> \n> Sure, I want Bitcoin to grow its user base. But to do that,\n> Bitcoin has to be accessible to the nontechnical population.\n> Asking nontechnical people to make technical decisions leads\n> directly to stress and confusion, which most folks find\n> off-putting.\n> \n> And please don't call me Shirley.  ;>\n> \n> On Sat, Jun 13, 2015 at 3:42 PM, Raystonn <raystonn at hotmail.com \n> <mailto:raystonn at hotmail.com>> wrote:\n> \n> Surely you would prefer to actually have users? Bitcoin does not \n> exist in a vacuum. Network effect alone is not enough to ensure \n> success in the face of competition from alternatives with a much \n> better user experience. See Facebook vs MySpace, IE vs Netscape, \n> etc.\n> \n> On 13 Jun 2015 3:20 pm, Danny Thorpe <danny.thorpe at gmail.com \n> <mailto:danny.thorpe at gmail.com>> wrote:\n> \n> Please forgive my ignorance, but why should Bitcoin users have a \n> say in block size limits?  It's the miners and Bitcoin node \n> operators that bear the burden of managing large blocks, no?\n> \n> Users voting on network parameters sounds like neighbors voting on \n> how deep my swimming pool should be.\n> \n> Thanks, -Danny\n> \n> On Fri, Jun 12, 2015 at 11:11 AM, Peter Todd <pete at petertodd.org \n> <mailto:pete at petertodd.org>> wrote:\n> \n> Jeff Garzik recently proposed that the upper blocksize limit be \n> removed entirely, with a \"soft\" limit being enforced via miner \n> vote, recorded by hashing power.\n> \n> This mechanism within the protocol for users to have any influence \n> over the miner vote. We can add that back by providing a way for \n> transactions themselves to set a flag determining whether or not \n> they can be included in a block casting a specific vote.\n> \n> We can simplify Garzik's vote to say that one of the nVersion bits\n>  either votes for the blocksize to be increased, or decreased, by \n> some fixed ratio (e.g 2x or 1/2x) the next interval. Then we can \n> use a nVersion bit in transactions themselves, also voting for an \n> increase or decrease. Transactions may only be included in blocks \n> with an indentical vote, thus providing miners with a monetary \n> incentive via fees to vote according to user wishes.\n> \n> Of course, to cast a \"don't care\" vote we can either define an \n> additional bit, or sign the transaction with both versions.\n> Equally we can even have different versions with different fees,\n> broadcast via a mechanism such as replace-by-fee.\n> \n> \n> See also John Dillon's proposal for proof-of-stake blocksize \n> voting:\n> \n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net\n/msg02323.html\n>\n>\n> \n- -- 'peter'[:-1]@petertodd.org <http://petertodd.org>\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \n_______________________________________________\n> Bitcoin-development mailing list \n> Bitcoin-development at lists.sourceforge.net \n> <mailto:Bitcoin-development at lists.sourceforge.net> \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVfQL0AAoJEGxwq/inSG8CRqMH/0l9tHGA8figVGnIBoMgdpVi\nuwMGTQTjLUf12/NFS27vT+OLMWqZRvVXvlxDF25N7la+QImhh67LqmQy8fkwGg5T\nkJ6MkkFLgy05aqE/X3ywJUifOKmS3Y/RDDUJhrFjjHrsMGoF4ATtVwTpUBLik+kX\nG3XRNlInmyB55UEcpyfBg9kfLz8xiy6sBPeaeGnFLCNWTs5TgJ6DTFqhBAAmE8Hw\nk0tN6mW3wYS610FFkS2E3+W8O8KGs4oqAYLX/ZQOhX9oKjBvWWI4ppRpSDyBNcxd\nA6VAKyU8HCuDHAEwba6gdlUa+yf4qxuZV1KCNENbvtN1CTsJ6oh0OxnEO6dtogo=\n=KZmG\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-14T05:46:18",
                "message_text_only": ">\n> Yes, it does bother (some) people to see the consensus based system\n> because of the difficulties that can be associated with implementing\n> it.  But that's the way it is.  If you don't like consensus based\n> systems (or decentralized, distributed systems) this is probably the\n> wrong space for you.\n>\n\nIf consensus must be reached to make any changes, that just means that\nchanges of anything more than trivial consequence simply can't be made.\nExtreme bias toward the status-quo will only work if external factors\naffecting the network also remain static.\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/7454d242/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-14T21:38:21",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI agree that changes of anything more than trivial are difficult, but\nI would disagree that they can't be made.  It seems that the issue is\none of roadblocks and muddling through when a major issue (e.g. the\nproposal of a hardfork / XT) is confronting the community and the\nquestion of how to address this issue in a timely manner. That does\nnot mean that there isn't a process for the community to weigh in or\nfor the decisions of the participants in the network to be measured\nbecause, of course, there is, but I submit that the larger issues are\nhaving to do with concerns over the problems inherent in the totally\nunnecessary XT proposal itself.\n\nMy own thoughts on that proposal are written up at\nhttp://www.twitlonger.com/show/n_1smkanp\n\nAnd have been supported somewhat by various others in the community,\nsuch as GreenAddress (which is opposed at this time to increasing the\nblocksize limit as per Gavin's proposal) and Adam Back:\nhttps://twitter.com/adam3us/status/608920099609817088\n\nI think Jeff Garzik had some good thoughts specifically regarding this\nsubject of user vote in blocksize through fees.  Although I do agree\nwith you, Aaron, that the \"changes more than trivial\" are a tough nut\nto crack, I won't say that they can't be made in such processes and I\nam curious to see how this discussion progresses.\n\n- -O\n\n\n\n\n\nOn 06/13/2015 10:46 PM, Aaron Voisine wrote:\n> Yes, it does bother (some) people to see the consensus based\n> system because of the difficulties that can be associated with\n> implementing it.  But that's the way it is.  If you don't like\n> consensus based systems (or decentralized, distributed systems)\n> this is probably the wrong space for you.\n> \n> \n> If consensus must be reached to make any changes, that just means\n> that changes of anything more than trivial consequence simply can't\n> be made. Extreme bias toward the status-quo will only work if\n> external factors affecting the network also remain static.\n> \n> Aaron Voisine co-founder and CEO breadwallet.com\n> <http://breadwallet.com/>\n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVffRMAAoJEGxwq/inSG8CGfIH/RkMNeJpcXdG+pC6Cg1XMELQ\nwa/fkdKnnkhhxNm4keHeO0YQFw0BL4rQSQ2PfGEXU3keJrWlmxchEQteAGDzL55Y\n1dSkQbfxsaEco2m6P0/1+WGuNOn2Sp653+/G/WoeaqMvp+b2ORbVZoqURv7Iz240\nsI6GqWxWxuGpJyaW/PwVYfvGAImeQRKgKiB3w001Q3Lc36wDr/EGs4lVWJTSk+g+\n60zj4+7jmqpr/Q/+sjQDE0KZSBU/EmrPYEuEdBkOmG4JnFgBqM7civtHis/zu7Uc\n1sr/LcqeGm0VB/yt0CfvtsAC5KZyMFQABF0/Q2qX0GtuLbjyKWf7B/KEAPdC+m0=\n=3cf3\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "User vote in blocksize through fees",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Benjamin",
                "Danny Thorpe",
                "Vincent Truong",
                "odinn",
                "Raystonn",
                "Mike Hearn",
                "Peter Todd",
                "Stephen",
                "Mark Friedenbach",
                "Aaron Voisine",
                "Jeff Garzik",
                "Ashley Holman",
                "Matt Whitlock",
                "Luke Dashjr",
                "Jannes Faber",
                "Chun Wang",
                "Eric Lombrozo",
                "Mats Henricson",
                "Aaron Gustafson"
            ],
            "messages_count": 42,
            "total_messages_chars_count": 107037
        }
    },
    {
        "title": "[Bitcoin-development] Bip 32 Question",
        "thread_messages": [
            {
                "author": "James Poole",
                "date": "2015-06-12T18:22:19",
                "message_text_only": "Looking at the BIP32 definition, I hit a line that I would appreciate\nclarification on.\n\nhttps://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n\nUnder the section \"Private parent key \u2192 private child key\" there is a step:\n\n\"The returned child key ki is parse256(IL) + kpar (mod n).\"\n\nCan someone help me understand what \"n\" is in the context of this\nalgorithm?  I very well could be looking right at it, but wanted to double\ncheck if I am missing something.\n\nThanks,\nJames\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/3a56ecd5/attachment.html>"
            },
            {
                "author": "William Swanson",
                "date": "2015-06-12T19:42:46",
                "message_text_only": "The `n` is the curve order, as shown here:\n\nhttps://en.bitcoin.it/wiki/Secp256k1\n\nThis step is necessary to keep you on the curve. The\nsecp256k1_ec_privkey_tweak_add function from libsecp256k1 handles this\nautomatically, but if you use OpenSSL or some non-EC math library, you\nprobably have to do it yourself.\n\n-William\n\nOn Fri, Jun 12, 2015 at 11:22 AM, James Poole <james at microtrx.com> wrote:\n> Looking at the BIP32 definition, I hit a line that I would appreciate\n> clarification on.\n>\n> https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n>\n> Under the section \"Private parent key \u2192 private child key\" there is a step:\n>\n> \"The returned child key ki is parse256(IL) + kpar (mod n).\"\n>\n> Can someone help me understand what \"n\" is in the context of this algorithm?\n> I very well could be looking right at it, but wanted to double check if I am\n> missing something.\n>\n> Thanks,\n> James"
            }
        ],
        "thread_summary": {
            "title": "Bip 32 Question",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "William Swanson",
                "James Poole"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1563
        }
    },
    {
        "title": "[Bitcoin-development] Various block size proposals",
        "thread_messages": [
            {
                "author": "Bryan Bishop",
                "date": "2015-06-12T19:13:35",
                "message_text_only": "Here are some proposals regarding the minimum block size questions, as well\nas other related scalability issues.\n\nDynamic block size limit controller (maaku)\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07599.html\nhttps://www.reddit.com/r/Bitcoin/comments/35c47x/a_proposal_to_expand_the_block_size/\n\nRe: dynamic block size limit controller (gmaxwell)\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07620.html\n\nVarious other gmaxwell-relayed ideas\nhttp://www.reddit.com/r/Bitcoin/comments/37pv74/gavin_andresen_moves_ahead_with_push_for_bigger/crp2735\n\nIncreasing the max block size using a soft-fork (Tier Nolan)\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07927.html\n\nElastic block cap with rollover penalties (Meni Rosenfield)\nhttps://bitcointalk.org/index.php?topic=1078521\nworked example\nhttps://bitcointalk.org/index.php?topic=1078521.msg11557115#msg11557115\nsection 6.2.3 of https://cryptonote.org/whitepaper.pdf\nrollover transaction fees https://bitcointalk.org/index.php?topic=80387.0\n\nVariable mining effort (gmaxwell)\nhttp://sourceforge.net/p/bitcoin/mailman/message/34100485/\n\nBIP100 Soft-fork limit of 2 MB (jgarzik)\nhttp://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n\nTransaction fee targeting\nhttps://bitcointalk.org/index.php?topic=176684.msg9416723#msg9416723\n\nDifficulty target scaling\nhttps://www.reddit.com/r/Bitcoin/comments/38937n/idea_make_the_difficulty_target_scale_with_block/\n\nAnnual 50% max block size increase\nhttps://www.reddit.com/r/Bitcoin/comments/351dft/what_about_gavins_2014_proposal_of_having_block/\n\nVarious algorithmic adjustment proposals\nhttps://bitcointalk.org/index.php?topic=1865.0\nhttps://www.reddit.com/r/Bitcoin/comments/1owbpn/is_there_a_consensus_on_the_blocksize_limit_issue/ccwd7xh\nhttps://www.reddit.com/r/Bitcoin/comments/35azxk/screw_the_hard_limit_lets_change_the_block_size/\nhttps://www.reddit.com/r/Bitcoin/comments/359y0i/quick_question_about_the_block_size_limit_issue/\nhttp://www.reddit.com/r/Bitcoin/comments/385xqj/what_if_block_size_limits_were_set_to_increase/\nhttp://www.age-of-bitcoin.com/dynamic-block-size-cap-scaling/\n(against)\nhttp://garzikrants.blogspot.com/2013/02/bitcoin-block-size-thoughts.html\n\nAverage over last 144 blocks\nhttp://www.reddit.com/r/Bitcoin/comments/38fmra/max_block_size_2_average_size_of_last_144_blocks/\n\nExtension blocks (Adam Back) (why would he burn this idea for something so\ntrivial?)\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07937.html\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08005.html\nhttp://www.reddit.com/r/Bitcoin/comments/39kqzs/how_about_a_softfork_optin_blocksize_increase/\nhttp://www.reddit.com/r/Bitcoin/comments/39hgzc/blockstream_cofounder_president_adam_back_phd_on/cs3tgss\n\nVoting by paying to an address (note: vote censorship makes this\nimpractical, among other reasons)\nhttp://www.reddit.com/r/Bitcoin/comments/3863vw/a_brandnew_idea_for_resolving_the_blocksize_debate/\nhttp://www.reddit.com/r/Bitcoin/comments/1g0ywj/proposal_we_should_vote_on_the_blocksize_limit/\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02325.html\n\nVote by paying fees\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08164.html\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n\nDouble the max block size at each block reward halving\nhttps://www.reddit.com/r/Bitcoin/comments/359jdc/just_double_the_max_blocksize_on_every_block/\n\nReducing the block rate instead of increasing the maximum block size\n(Sergio Lerner)\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07663.html\nhttps://www.reddit.com/r/Bitcoin/comments/35kpgk/sergio_lerner_on_bitcoindevelopment_reducing_the/\n\nDecrease block interval\nhttps://www.reddit.com/r/Bitcoin/comments/2vefmp/please_eli5_besides_increasing_the_block_size_why/\nhttps://www.reddit.com/r/Bitcoin/comments/35hpkt/please_remind_me_once_again_why_we_cant_decrease/\n\nIncrease default soft block size limit in Bitcoin Core\nhttp://www.reddit.com/r/Bitcoin/comments/38i6qr/why_not_increase_the_default_block_size_limit/\nhttps://github.com/bitcoin/bitcoin/pull/6231\n\nConsider the size of the utxo set when determining max block size (note\nthat utxo depth cannot have consensus)\nhttps://bitcointalk.org/index.php?topic=153401.20\n\nReduce and decrease the max block size\nhttps://www.reddit.com/r/Bitcoin/comments/381ygv/who_is_in_favour_of_reducing_the_blocksize_limit/\nhttps://www.reddit.com/r/Bitcoin/comments/2vedt4/better_we_make_block_size_50kb_and_test/\n\nChange the value of MAX_BLOCK_SIZE in Bitcoin Core\nhttps://bitcointalk.org/index.php?topic=140233.0\n\nProblems with floating block size limits (petertodd)\nhttps://bitcointalk.org/index.php?topic=144895.0\n\nDevelop other ways to support high transaction volumes (gavinandresen)\nhttps://bitcointalk.org/index.php?topic=96097.msg1059475#msg1059475\n\nSimplified payment verification\nhttps://bitcoin.org/bitcoin.pdf\n\nLightning network\nhttps://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\n\nGHOST\nhttps://eprint.iacr.org/2013/881.pdf\n\nPayment channels\nhttps://bitcoinj.github.io/working-with-micropayments\n\nTree chains\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg04388.html\nhttps://github.com/petertodd/tree-chains-paper\n\nfedpeg + SPV\nhttps://github.com/ElementsProject/elements/blob/7848ae0eed5506fb32872b6d74a12fd781aa3024/contrib/fedpeg/rotating_consensus.py\n\nKnown missing:\n- old bitcoin-development proposals\n- old bitcointalk proposals\n- anything unique from IRC\n\nOn a related note, the other day I found that reading all of the -wizards\nlogs regarding sidechains only takes 2 hours. So... that's something. YMMV.\n\n- Bryan\nhttp://heybryan.org/\n1 512 203 0507\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150612/5ae9d4e9/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-12T23:29:29",
                "message_text_only": "Thanks Bryan for collating these links in one great list. This is very\nhelpful and thanks for sharing it.\n\nFeel free to fork https://github.com/EthanHeilman/BlockSizeDebate\nedit to add the list of proposals and create a pull request to Ethan.\n\nThere's also a miningconsensus.slack.com group to have discussion w.r.t.\nfact/source checking, completeness  (e.g. from IRC) etc.\n\nTks.\n\np.\n\n\nOn Sat, Jun 13, 2015 at 3:13 AM, Bryan Bishop <kanzure at gmail.com> wrote:\n\n> Here are some proposals regarding the minimum block size questions, as\n> well as other related scalability issues.\n>\n> Dynamic block size limit controller (maaku)\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07599.html\n>\n> https://www.reddit.com/r/Bitcoin/comments/35c47x/a_proposal_to_expand_the_block_size/\n>\n> Re: dynamic block size limit controller (gmaxwell)\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07620.html\n>\n> Various other gmaxwell-relayed ideas\n>\n> http://www.reddit.com/r/Bitcoin/comments/37pv74/gavin_andresen_moves_ahead_with_push_for_bigger/crp2735\n>\n> Increasing the max block size using a soft-fork (Tier Nolan)\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07927.html\n>\n> Elastic block cap with rollover penalties (Meni Rosenfield)\n> https://bitcointalk.org/index.php?topic=1078521\n> worked example\n> https://bitcointalk.org/index.php?topic=1078521.msg11557115#msg11557115\n> section 6.2.3 of https://cryptonote.org/whitepaper.pdf\n> rollover transaction fees https://bitcointalk.org/index.php?topic=80387.0\n>\n> Variable mining effort (gmaxwell)\n> http://sourceforge.net/p/bitcoin/mailman/message/34100485/\n>\n> BIP100 Soft-fork limit of 2 MB (jgarzik)\n> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>\n> Transaction fee targeting\n> https://bitcointalk.org/index.php?topic=176684.msg9416723#msg9416723\n>\n> Difficulty target scaling\n>\n> https://www.reddit.com/r/Bitcoin/comments/38937n/idea_make_the_difficulty_target_scale_with_block/\n>\n> Annual 50% max block size increase\n>\n> https://www.reddit.com/r/Bitcoin/comments/351dft/what_about_gavins_2014_proposal_of_having_block/\n>\n> Various algorithmic adjustment proposals\n> https://bitcointalk.org/index.php?topic=1865.0\n>\n> https://www.reddit.com/r/Bitcoin/comments/1owbpn/is_there_a_consensus_on_the_blocksize_limit_issue/ccwd7xh\n>\n> https://www.reddit.com/r/Bitcoin/comments/35azxk/screw_the_hard_limit_lets_change_the_block_size/\n>\n> https://www.reddit.com/r/Bitcoin/comments/359y0i/quick_question_about_the_block_size_limit_issue/\n>\n> http://www.reddit.com/r/Bitcoin/comments/385xqj/what_if_block_size_limits_were_set_to_increase/\n> http://www.age-of-bitcoin.com/dynamic-block-size-cap-scaling/\n> (against)\n> http://garzikrants.blogspot.com/2013/02/bitcoin-block-size-thoughts.html\n>\n> Average over last 144 blocks\n>\n> http://www.reddit.com/r/Bitcoin/comments/38fmra/max_block_size_2_average_size_of_last_144_blocks/\n>\n> Extension blocks (Adam Back) (why would he burn this idea for something so\n> trivial?)\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07937.html\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08005.html\n>\n> http://www.reddit.com/r/Bitcoin/comments/39kqzs/how_about_a_softfork_optin_blocksize_increase/\n>\n> http://www.reddit.com/r/Bitcoin/comments/39hgzc/blockstream_cofounder_president_adam_back_phd_on/cs3tgss\n>\n> Voting by paying to an address (note: vote censorship makes this\n> impractical, among other reasons)\n>\n> http://www.reddit.com/r/Bitcoin/comments/3863vw/a_brandnew_idea_for_resolving_the_blocksize_debate/\n>\n> http://www.reddit.com/r/Bitcoin/comments/1g0ywj/proposal_we_should_vote_on_the_blocksize_limit/\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02325.html\n>\n> Vote by paying fees\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08164.html\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02323.html\n>\n> Double the max block size at each block reward halving\n>\n> https://www.reddit.com/r/Bitcoin/comments/359jdc/just_double_the_max_blocksize_on_every_block/\n>\n> Reducing the block rate instead of increasing the maximum block size\n> (Sergio Lerner)\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07663.html\n>\n> https://www.reddit.com/r/Bitcoin/comments/35kpgk/sergio_lerner_on_bitcoindevelopment_reducing_the/\n>\n> Decrease block interval\n>\n> https://www.reddit.com/r/Bitcoin/comments/2vefmp/please_eli5_besides_increasing_the_block_size_why/\n>\n> https://www.reddit.com/r/Bitcoin/comments/35hpkt/please_remind_me_once_again_why_we_cant_decrease/\n>\n> Increase default soft block size limit in Bitcoin Core\n>\n> http://www.reddit.com/r/Bitcoin/comments/38i6qr/why_not_increase_the_default_block_size_limit/\n> https://github.com/bitcoin/bitcoin/pull/6231\n>\n> Consider the size of the utxo set when determining max block size (note\n> that utxo depth cannot have consensus)\n> https://bitcointalk.org/index.php?topic=153401.20\n>\n> Reduce and decrease the max block size\n>\n> https://www.reddit.com/r/Bitcoin/comments/381ygv/who_is_in_favour_of_reducing_the_blocksize_limit/\n>\n> https://www.reddit.com/r/Bitcoin/comments/2vedt4/better_we_make_block_size_50kb_and_test/\n>\n> Change the value of MAX_BLOCK_SIZE in Bitcoin Core\n> https://bitcointalk.org/index.php?topic=140233.0\n>\n> Problems with floating block size limits (petertodd)\n> https://bitcointalk.org/index.php?topic=144895.0\n>\n> Develop other ways to support high transaction volumes (gavinandresen)\n> https://bitcointalk.org/index.php?topic=96097.msg1059475#msg1059475\n>\n> Simplified payment verification\n> https://bitcoin.org/bitcoin.pdf\n>\n> Lightning network\n> https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\n>\n> GHOST\n> https://eprint.iacr.org/2013/881.pdf\n>\n> Payment channels\n> https://bitcoinj.github.io/working-with-micropayments\n>\n> Tree chains\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg04388.html\n> https://github.com/petertodd/tree-chains-paper\n>\n> fedpeg + SPV\n>\n> https://github.com/ElementsProject/elements/blob/7848ae0eed5506fb32872b6d74a12fd781aa3024/contrib/fedpeg/rotating_consensus.py\n>\n> Known missing:\n> - old bitcoin-development proposals\n> - old bitcointalk proposals\n> - anything unique from IRC\n>\n> On a related note, the other day I found that reading all of the -wizards\n> logs regarding sidechains only takes 2 hours. So... that's something. YMMV.\n>\n> - Bryan\n> http://heybryan.org/\n> 1 512 203 0507\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/8a5bacc4/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Various block size proposals",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Bryan Bishop",
                "Pindar Wong"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 13116
        }
    },
    {
        "title": "[Bitcoin-development] Address Expiration to Prevent Reuse",
        "thread_messages": [
            {
                "author": "odinn",
                "date": "2015-06-13T04:52:25",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI'm way late to this one, I guess, but adding some thoughts here... it\nseems that anything which mitigates the problem of reuse should be to\nthe maximum extent possible, the user's option... if a person wants to\nhave an address that lasts forever they should be able to have it...\nif they want to have an address that expires they should be able to\nhave it.\n\nThe reuse problem is, I think, better solved by the presentation of\nstealth address proposals, and would be handled by a stealth BIP (BIP\n63) which has been recently re-discussed here:\nhttps://bitcointalk.org/index.php?topic=1083961.0\n\nOn 03/26/2015 02:44 PM, Gregory Maxwell wrote:\n> On Thu, Mar 26, 2015 at 9:26 PM, Tom Harding <tomh at thinlink.com> \n> wrote:\n>> I should have been clearer that the motivation for address \n>> expiration is to reduce the rate of increase of the massive pile \n>> of bitcoin addresses out there which have to be monitored\n>> forever for future payments.  It could make a significant dent\n>> if something like this worked, and were used by default someday.\n> \n> Great, that can be accomplished by simply encoding an expiration \n> into the address people are using and specifying that clients \n> enforce it.\n> \n> ----------------------------------------------------------------------\n- --------\n>\n>\n> \nDive into the World of Parallel Programming The Go Parallel Website,\nsponsored\n> by Intel and developed in partnership with Slashdot Media, is your \n> hub for all things parallel software development, from weekly \n> thought leadership blogs to news, videos, case studies, tutorials \n> and more. Take a look and join the conversation now. \n> http://goparallel.sourceforge.net/ \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVe7cJAAoJEGxwq/inSG8C2uwH/2UfTX+6CEssv5ZhiwwqVNWk\nbmlODZulsJK0FIIcz2oVtMvnMR7L8DX/XtFOdiVTk/wOn7vc7X/DZ9UVKSixKCLJ\nIJLzBKEzFzMmNhxXv9fPsefuMsMlTkhifykl2BOp0T2gMEr5GweKSqn9XpQuo9mb\nLhS5vqNCRw0X3eQ5sIalSfmK3ghP5yaU+orhFjvb3QJ/JN3mxgXyl3xLx9diPVdu\n2I1QoxzCyE/tlEnxZGPrCtGe3d93mPhEFGGeiP+7eW8TkJa5AGCg3QWbzniC3Nsv\ngjg6rCbLKtj300hH0glbPT96YO+r9l5itox+aArkCtNnR+/HlUb6zubgqebzPuc=\n=KZQe\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Address Expiration to Prevent Reuse",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "odinn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2546
        }
    },
    {
        "title": "[Bitcoin-development] The timechain: an idea to solve TX malleability in smart contract protocols without requiring a fork.",
        "thread_messages": [
            {
                "author": "Matthew Roberts",
                "date": "2015-06-13T06:20:37",
                "message_text_only": "I've been tossing around an idea in my head that involves time-locked\nencryption [0] and I wondered what the devs here think about it. In a\nnutshell: the timechain is a serial chain of time-lock encrypted GPG keys\nat N minute intervals (meaning that it requires N minutes to decrypt a\nsingle link / key in the chain and each link must be fully decrypted before\ndecryption can start on the next link.) For those not aware of how\ntime-lock encryption works it goes something like this:\n\n1. Choose some random, unique text - this is the initialisation vector or\nIV.\n\n2. Hash that text -> output.\n\n3. Hash the output -> output.\n\n4. Hash the output -> output.\n\n5. ...\n\n6. Process is repeated for N minutes.\n\n7. Result is then used to generate encryption keys and the public key can\nbe used to time-lock encrypt an arbitrary number of plaintexts.\n\n8. All intermediary results are discarded -- only the pub key is kept and\ngiving out the IV forces an individual to have to repeat the same amount of\nwork used to generate the encryption key.\n\nWhat's interesting about this is that the keys can be generated in parallel\nand then \"stitched\" together to form a single serial chain of keys. So\npotentially, if a person had access to a GPU cluster then they could\ngenerate a years worth of work in only 5 minutes. Now imagine if one were\nto stitch these keys together into a chain of keys at five minute intervals\n(a structure I refer to as the \"timechain\"): you could use this structure\nto encrypt ECDSA keys which could then be used in multi-signature contract\nschemes as a 100% decentralized, trustless way to execute refunds in\ncontract protocols.\n\nUnexpected benefit: time-lock encryption can be used to build unbreakable\nDACs.\n\nPeter Todd has already done work on using Bitcoin to incentivize the\ndecryption process of time-lock encryption [1] but what he may not be aware\nof is how important this process is for the construction of DACs.\n\nImagine a true peer-to-peer cryptocurrency exchange [2] that time-lock\nencrypts a chain of ECDSA keys using the timechain and then sets up\ncontracts to pay a small portion of their fees \"into\" the ECDSA keys.\nEssentially the exchange has created a DAC that pays its participants to\ndecrypt itself. This is the incentive for the decryption. The reason for\nthe incentive is that another chain of keys can be generate at 5 minute\nintervals which can be used in contract protocols in place of nTimeLocked\nrefund transactions (which are vulnerable to transaction malleability.)\n\nSample contract using the timechain:\n\n3 of 4 multi-sig: Owner, Owner, Recipient, Timelock\n\nPay N coins to recipient sequentially (micropayment channel) before [time /\ndate], otherwise fall back on timelock decrypted refund key to give full\nleverage back to owner. This is how smart contracts would work using the\ntimechain for refunds (instead of nTimeLock TXs.)\n\nUsing the DAC, it might also be possible to force participants to reveal\ntheir solutions to the decryption of the timechain (otherwise the first\nperson who starts on the chain would receive all the fees which isn't very\nfair.) One way to do this would be to use the public key for the fee ECDSA\nkey as the IV used to generate the next key on the chain. To spend the fees\nwould therefore require revealing the public key if the fees were paid to a\npay-to-pub-key-hash transaction.\n\nA further precaution would be to generate the pay to fee transaction in\nsuch a way that the amount needs to be redeemed otherwise another\ntransaction would burn the coins. (I haven't worked out the full details\nfor this but similar schemes have been used successfully, for example in\nBitHalo [3]. The Lightning Network [4] offers another potential solution.)\nPerhaps a custom blockchain or sidechain could also be used to award coins\nfor successful (and timely solutions) but this is a subject for future work.\n\nIn conclusion: I have described a simple way to solve the TX malleability\nproblem in smart contract protocols without requiring a fork or relying on\na third-party escrow scheme to manage coins. My solution doesn't require\nany trust beyond the initial need for the timechain to be generated in a\nsecure cluster and the solution remains secure so long as participants\nstick to using future keys in the chain regardless of how far along\ndecryption is.\n\nWhat do you think of the idea so far?\n\nObviously the biggest flaw here is that the integrity of a timechain can't\nbe known before-hand but if a timechain were to be generated securely by a\nreputable party, the biggest benefit of using it is that it basically runs\nitself: it does not require any third-party to manage its functionality and\nthe entity which originally generated it can completely disappear without\ninterrupting service. This could, for instance - allow companies to create\nentirely secure and reliable systems that couldn't be hacked as the\nbehaviour of a timechain is deterministic. I think this is a huge\nimprovement over existing systems which require third-parties to be\nperpetually trusted with managing key-pairs on their web servers.\n\nAnyway, that's the basic idea. Let me know what you think.\n\n\nSources:\n\n[0] http://www.gwern.net/Self-decrypting%20files\n\n[1]\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg05547.html\n\n[2] http://www.uptrenda.com/uptrenda.pdf\n\n[3] https://bithalo.org/wp-content/uploads/2014/06/whitepaper_twosided.pdf\n\n[4] https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/6fbc7681/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "The timechain: an idea to solve TX malleability in smart contract protocols without requiring a fork.",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matthew Roberts"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 5651
        }
    },
    {
        "title": "[Bitcoin-development] The timechain: an idea to solve TX malleability in smart contract protocols with minimal involvement and without requiring a fork.",
        "thread_messages": [
            {
                "author": "Matthew Roberts",
                "date": "2015-06-13T07:16:52",
                "message_text_only": "I've been tossing around an idea in my head that involves time-locked\nencryption [0] and I wondered what the devs here think about it. In a\nnutshell: the timechain is a serial chain of time-lock encrypted GPG keys\nat N minute intervals (meaning that it requires N minutes to decrypt a\nsingle link / key in the chain and each link must be fully decrypted before\ndecryption can start on the next link.) For those not aware of how\ntime-lock encryption works it goes something like this:\n\n1. Choose some random, unique text - this is the initialisation vector or\nIV.\n\n2. Hash that text -> output.\n\n3. Hash the output -> output.\n\n4. Hash the output -> output.\n\n5. ...\n\n6. Process is repeated for N minutes.\n\n7. Result is then used to generate encryption keys and the public key can\nbe used to time-lock encrypt an arbitrary number of plaintexts.\n\n8. All intermediary results are discarded -- only the pub key is kept and\ngiving out the IV forces an individual to have to repeat the same amount of\nwork used to generate the encryption key.\n\nWhat's interesting about this is that the keys can be generated in parallel\nand then \"stitched\" together to form a single serial chain of keys. So\npotentially, if a person had access to a GPU cluster then they could\ngenerate a years worth of keys in only 5 minutes. Now imagine if one were\nto stitch these keys together into a chain of keys at five minute intervals\n(a structure I refer to as the \"timechain\"): you could use this structure\nto encrypt ECDSA keys which could then be used in multi-signature contract\nschemes as a 100% decentralized, trustless way to execute refunds in\ncontract protocols.\n\nUnexpected benefit: time-lock encryption can be used to build unbreakable\nDACs.\n\nPeter Todd has already done work on using Bitcoin to incentivize the\ndecryption process of time-lock encryption [1] but what he may not be aware\nof is how important this process is for the construction of DACs.\n\nImagine a true peer-to-peer cryptocurrency exchange [2] that time-lock\nencrypts a chain of ECDSA keys using the timechain and then sets up\ncontracts to pay a small portion of their fees \"into\" the ECDSA keys.\nEssentially the exchange has created a DAC that pays its participants to\ndecrypt itself. This is the incentive for the decryption. The reason for\nthe incentive is that another chain of keys can be generate at 5 minute\nintervals which can be used in contract protocols in place of nTimeLocked\nrefund transactions (which are vulnerable to transaction malleability.)\n\nSample contract using the timechain:\n\n3 of 4 multi-sig: Owner, Owner, Recipient, Timelock\n\nPay N coins to recipient sequentially (micropayment channel) before [time /\ndate], otherwise fall back on timelock decrypted refund key to give full\nleverage back to owner. This is how smart contracts would work using the\ntimechain for refunds (instead of nTimeLock TXs.)\n\nUsing the DAC, it might also be possible to force participants to reveal\ntheir solutions to the decryption of the timechain (otherwise the first\nperson who starts on the chain would receive all the fees which isn't very\nfair.) One way to do this would be to use the public key for the fee ECDSA\nkey as the IV used to generate the next key on the chain. To spend the fees\nwould therefore require revealing the public key if the fees were paid to a\npay-to-pub-key-hash transaction.\n\nA further precaution would be to generate the pay to fee transaction in\nsuch a way that the amount needed to be redeemed before a certain\ntime-frame otherwise another transaction would burn the coins. (I haven't\nworked out the full details for this yet but similar schemes have been used\nsuccessfully, for example in BitHalo [3] and the Lightning Network [4]\noffers another potential solution.) Perhaps a custom blockchain or\nsidechain could be used to award coins for successful (and timely\nsolutions) but this is a subject for future work.\n\nIn conclusion: I have described a simple way to solve the TX malleability\nproblem in smart contract protocols without requiring a fork or relying on\na third-party escrow services to hold keys. My solution doesn't require any\ntrust beyond the initial need for the timechain to be generated in a secure\nenvironment and the solution remains secure so long as participants stick\nto using future keys in the chain regardless of how far along the\ndecryption is.\n\nCritique / flaws\n\nObviously the biggest flaw here is that the integrity of a timechain can't\nbe known before-hand but if a timechain were to be generated securely by a\nreputable party, the biggest benefit of using it is that it basically runs\nitself: it does not require any third-party to manage its functionality and\nthe entity which originally generated it can completely disappear without\ninterrupting service. This could, for instance - allow companies to create\nentirely secure and reliable systems that couldn't be hacked as the\nbehaviour of a timechain is deterministic. I think this is a huge\nimprovement over existing systems which require third-parties to be\nperpetually trusted with managing key-pairs on their web servers.\n\nYou could even use collateral as a way to incentivize the reliable\nconstruction of the timechain by collecting collateral into a multi-sig\ncontrolled by a number of neutral parties and only releasing the coins back\nto the entity if the chain behaves as expected. I imagine some kind of\nsigned copy of a GPU cluster bill + proof of code executed would be\nadditional proof.\n\nAnyway, that's the basic idea. Let me know what you think.\n\n\nSources:\n\n[0] http://www.gwern.net/Self-decrypting%20files\n\n[1]\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg05547.html\n\n[2] http://www.uptrenda.com/uptrenda.pdf\n\n[3] https://bithalo.org/wp-content/uploads/2014/06/whitepaper_twosided.pdf\n\n[4] https://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/ddc1964c/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "The timechain: an idea to solve TX malleability in smart contract protocols with minimal involvement and without requiring a fork.",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matthew Roberts"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 6041
        }
    },
    {
        "title": "[Bitcoin-development] Scaling Bitcoin with Subchains",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2015-06-13T14:39:04",
                "message_text_only": "On Wed, May 20, 2015 at 4:55 AM, Andrew <onelineproof at gmail.com> wrote:\n\n> Hi\n>\n> I briefly mentioned something about this on the bitcoin-dev IRC room. In\n> general, it seems experts (like sipa i.e. Pieter) are against using\n> sidechains as a way of scaling. As I only have a high level understanding\n> of the Bitcoin protocol, I cannot be sure if what I want to do is actually\n> defined as a side chain, but let me just propose it, and please let me know\n> whether it can work, and if not why not (I'm not scared of digging into\n> more technical resources in order to fully understand). I do have a good\n> academic/practical background for Bitcoin, and I'm ready to contribute code\n> if needed (one of my contributions includes a paper wallet creator written\n> in C).\n>\n>\nIn your proposal, transactions go to a chain based the addresses involved.\nWe can reasonably assume that different people's wallet will tend to be\ndistributed uniformly over several sidechains to hold their transactions\n(if they're not, there is no scaling benefit anyway...). That means that\nfor an average transaction, you will need a cross-chain transfer in order\nto get the money to the recipient (as their wallet will usually be\nassociated to a chain that is different from your own). Either you use an\natomic swap (which actually means you end up briefly with coins in the\ndestination chain, and require multiple transactions and a medium delay),\nor you use the 2way peg transfer mechanism (which is very slow, and reduces\nthe security the recipient has to SPV).\n\nWhatever you do, the result will be that most transactions are:\n* Slower (a bit, or a lot, depending on what mechanism you use).\n* More complex, with more failure modes.\n* Require more and larger transactions (causing a total net extra load on\nall verifiers together).\n\nAnd either:\n* Less secure (because you rely on a third party to do an atomic swap with,\nor because of the 2 way peg transfer mechanism which has SPV security)\n* Doesn't offer any scaling benefit (because the recipient needs to fully\nvalidate both his own and the receiver chain).\n\nIn short, you have not added any scaling at all, or reduced the security of\nthe system significantly, as well as made it significantly less convenient\nto use.\n\nSo no, sidechains are not a direct means for solving any of the scaling\nproblems Bitcoin has. What they offer is a mechanism for easier\nexperimentation, so that new technology can be built and tested without\nneeding to introduce a new currency first (with the related speculative and\nnetwork effect problems). That experimentation could eventually lead us to\ndiscover mechanisms for better scaling, or for more scalability/security\ntradeoffs (see for example the Witness Segregation that Elements Alpha has).\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/0b10bf9a/attachment.html>"
            },
            {
                "author": "Andrew",
                "date": "2015-06-13T17:55:39",
                "message_text_only": "First of all, I added more info to bitcointalk.org:\nhttps://bitcointalk.org/index.php?topic=1083345.0\n\nOn Sat, Jun 13, 2015 at 2:39 PM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n>\n> In your proposal, transactions go to a chain based the addresses involved.\n> We can reasonably assume that different people's wallet will tend to be\n> distributed uniformly over several sidechains to hold their transactions\n> (if they're not, there is no scaling benefit anyway...). That means that\n> for an average transaction, you will need a cross-chain transfer in order\n> to get the money to the recipient (as their wallet will usually be\n> associated to a chain that is different from your own). Either you use an\n> atomic swap (which actually means you end up briefly with coins in the\n> destination chain, and require multiple transactions and a medium delay),\n> or you use the 2way peg transfer mechanism (which is very slow, and reduces\n> the security the recipient has to SPV).\n>\n> Whatever you do, the result will be that most transactions are:\n> * Slower (a bit, or a lot, depending on what mechanism you use).\n> * More complex, with more failure modes.\n> * Require more and larger transactions (causing a total net extra load on\n> all verifiers together).\n>\n> And either:\n> * Less secure (because you rely on a third party to do an atomic swap\n> with, or because of the 2 way peg transfer mechanism which has SPV security)\n> * Doesn't offer any scaling benefit (because the recipient needs to fully\n> validate both his own and the receiver chain).\n>\n> In short, you have not added any scaling at all, or reduced the security\n> of the system significantly, as well as made it significantly less\n> convenient to use.\n>\n> So no, sidechains are not a direct means for solving any of the scaling\n> problems Bitcoin has. What they offer is a mechanism for easier\n> experimentation, so that new technology can be built and tested without\n> needing to introduce a new currency first (with the related speculative and\n> network effect problems). That experimentation could eventually lead us to\n> discover mechanisms for better scaling, or for more scalability/security\n> tradeoffs (see for example the Witness Segregation that Elements Alpha has).\n>\n\nThanks Pieter for your reply. The chain the transaction goes to does not\nhave to be based on the address (there can be a way for the protocol to\nchoose), but ya, the address scheme can be a good default. As I said, there\nwill be an incentive for empty chains to fill up since they will require\nless fees (so the scaling benefit isn't dependent on a uniform distribution\nof addresses).\n\nThe rule I mentioned is that at most 2 different chains can be involved in\none transaction. From a chain to itself is easy. From a parent or\ngrandparent chain to its child or grandchild chain, is also easy since the\nchild/grandchild always trusts its parent/grandparent. From a\nchild/grandchild to parent/grandparent, is also easy (no delay) since the\nparent/grandparent will commit to its children (which recursively commit to\ntheir children). As mentioned I am just doing a form of block extensions as\nAdam Back described; the chains are not independent. From one chain to\nanother chain at the same level (sibling chains), the transaction is\nrecorded on both sibling chains (yes there is some duplication but this is\nlimited by requiring at most 2 sibling chains participating in a\ntransaction). They both have to be consistent and this will be ensured by\nthe miners of their parent chain (those miners will commit to their blocks).\n\nSo no, I don't see how it's slower, except that there needs to be some\ndelay for communication between children/grandchildren and\nparents/grandparents, of time O(log n) where n is the number of levels.\nEven a small number of levels corresponds to a large transaction volume: n\n= 5 corresponds to the equivalent of 625 MB blocks.\n\nSecurity-wise, it is true that the top level chain will likely have higher\nsecurity (more hash power), but at least you can fine tune the fees you pay\naccording to what level of security is acceptable to you, and as Bitcoin\ngrows, level 2,3,4 chains can be regarded as almost as secure as the level\n1 chain, since there will still be a lot of hash power on them. And anyone\ncan run a full node on their chains of interest, so there is no SPV level\nsecurity here, it is full level security.\n\nTransactions are not significantly different. Miners just have to deal with\nchild chains, but if there is a scaling benefit, we should not be scared of\ncomplexity. It is probably the simplest way I can think of scaling.\n\nThe recipient will validate their own chain fully and will just need the\nheaders of the relevant parent chains to see whether an output from the\nother chain involved in a transaction is really valid. They can also get\nthe headers of the sibling chain involved in the transaction if they want\nto validate the work of the miners on these parent chains. They don't need\nthe full blocks of the parent and sibling chains involved since not all the\ntransactions in those blocks may be of interest to them, they just need\nproof that any output used in their blocks of interest are valid, so that's\nwhy the header-only SPV proof is sufficient. But yeah, typically a user\nwill have the full blocks of the parent and grandparent chains of the\nchains they are interested in tracking, but it is not always necessary.\n\nAlso, in the bitcointalk forum I explain in more detail the mining\nprocedure and how to limit the extra traffic that may be caused on the\nnetwork in case this does get added as a soft fork and then later a new\nbetter scaling method is invented that supercedes this.\n\nBut basically, for the mining, I think it should be merge-mined between\nparent and direct children only. If all the chains are merge mining the\nsame root chain, then it would be bad for decentralization, right? But with\nonly direct parent and children merge mining, you can have smaller miners\non the lower (grand children) level chains and since they will need to\nsolve another hash problem than their grand parent chains, the grandparents\ncannot solve blocks in the grand children chains (only the direct children).\n\nSo I still didn't hear a good argument against my proposal. I know Adam\nBack's form of extension blocks is problematic because it still has the big\nblocks, just at another level of chain, but just by partitioning his one 10\nMB chain into 10 pieces, you get my idea, which I think solves the\nscalability problem as well.\n\nCheers\n\n-- \nPGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150613/b305a405/attachment.html>"
            },
            {
                "author": "Martin Schwarz",
                "date": "2015-06-14T06:55:45",
                "message_text_only": "Pieter,\n\nAm 13.06.2015 um 16:39 schrieb Pieter Wuille:\n> We can reasonably assume that different people's wallet will tend to be distributed uniformly over several sidechains to hold their transactions (if they're not, there is no scaling benefit anyway...). That means that for an average transaction, you will need a cross-chain transfer in order to get the money to the recipient (as their wallet will usually be associated to a chain that is different from your own).\n\nI think we should set the right incentives to invalidate these assumptions. If the fees as well as the security guarantees\non the main chain are highest and fees are dropping with the distance from the main chain on each level of side chains,\nwouldn't communities with many internal transactions create their own side chain with low fees? I'd expect geographic\nas well as virtual communities to be forming enjoying cheap fees on their 'local' chains and expensive but comparabily rare\n'long distance' fees. One would expect geographic chains (e.g. continents) as well as virtual ones (e.g. the Open Bazaar\nusers' chain) to form. To save fees, a typical user would maintain a wallet in each of her communities which are loaded\nand drained with rare expensive transacations, whereas daily business with many transactions is done cheaply within\neach community chain. So, indeed, I would argue that side chains equipped with the right cost incentives for cross-chain\ntransactions would lead to a scalable and efficiently self-organizing network of side chains.\n\nbest regards,\nMartin"
            },
            {
                "author": "Andrew",
                "date": "2015-06-15T17:05:05",
                "message_text_only": "Hi All,\n\nI talked with Pieter off-list. And I guess the main opposition is that\ncoins that are coming from chains that you are not directly validating are\nnot fully validated by you in the sense that you only get an SPV type proof\nto prove that miners have accepted those coins. Yes, it's true, but once\nblocks have been mined, there is nothing you can really do about it.\nSplitting up the transactions into multiple chains doesn't stop someone\nfrom validating all chains, which results in the same validation workload\nas a full node with one chain and big blocks that store the same number of\ntransactions per second. So there is no disadvantage from using this method\ncompared with having big blocks, and there are clear advantages. The only\nexcuse is laziness to create a proper system.\n\nMartin: I'm not sure if random independent chains would be so useful since\nthere are delays with cross chain transfers and you would not be sure if\nthose chains will be maintained in the future. My idea is more the idea of\nextension blocks, i.e. synchronised chains.\n\nAlso, some people think that CPU speed and memory size are the only\nlimitations to running a full node, and they think that it is ok to just\nrun a heavily pruned node. Pruned nodes (nodes that have less than 10 years\nof transactions on their hard drives) are bad for the network. Reasons why\nyou would want the long term history of transactions on your hard drive:\n\n1) Your computer could have been compromised when you did the initial\nvalidation, so you may want to validate and see all the old transactions\nagain.\n\n2) You don't have to spend much time to download transactions that you want\nto analyze but have already pruned.\n\n3) Risk of denial of service attack from the \"archival\" nodes.\n\n4) There is less of an inequality between the big data centers and regular\npeople. We can analyze the history of the transactions that are relevant to\nus just as effectively as the data centers. With the pruning model, it will\nbe more like NSA-style nodes watching our transaction history, while\nregular people can only see \"snapshots\". Remember how the Bitcoin community\nwas analysing the old Mt Gox transactions using the blockchain? This kind\nof stuff will no longer be possible if most people can only run pruned\nnodes.\n\n5) The data is more distributed thus more easy for others to download\n(think torrent downloads vs downloading from a central server).\n\n6) Again being distributed, more eyes will be looking at the long term\ndata, thus people can more easily investigate scandals and things like that.\n\n7) Without the full history of blocks people cannot really give a proof to\nothers that what they noticed with their pruned nodes is actually what\nhappened (if they spot something interesting).\n\n8) The time for a new user to start fresh and sync a full node with a long\nterm history of transactions is much more accessible (17 days for 100 years\nof transactions with 1 MB blocks on high-end computers). Same with the time\nneeded to perform any kind of analysis on the old transactions. And\nremember, any new transactions likely depend on old transactions, so yes\nthey are very relevant.\n\nThis is not paranoia. These are real security risks. So don't tell me that\nyou are really running a full node with the same level of security when you\nare pruning it. Also, don't tell me that the security of running a full\nnode remains the same when centralization is increased (like with bigger\nblock sizes). Centralisation is a security risk.\n\nSome people think that decentralisation means you have to run a possibly\nnoisy desktop in a possible space restricted home, which can be annoying.\nNo, you don't have to. You can run a full node (or an almost full node on\nthe chains you are interested in) in a shack in the middle of nowhere and\nyou can monitor it remotely with cameras or whatever. The point is that it\nis easy for a regular person to run one and they can do so without causing\nattention and without anyone's permission. That is decentralisation. Even\n10 MB blocks are too much to enable this definition of decentralisation\n(according to my calculations).\n\nIf there are people who choose to run Gavin/Mike's hard fork of Bitcoin\nbecause they are uniformed or mentally challenged or have bad intentions,\nthen there is not much I can do (I try to inform but I don't have such a\nhigh popularity level to be effective there), but I will surely not accept\nany bitcoin that is only valid on blocks with size greater than 1 million\nbytes. Such coins will have 0 or even negative value to me, and I expect\nothers to do the same.\n\nIn the meantime, I will start the development process of my proposed\nscaling methods using bitcoin-core and possibly the sidechains code from\nBlockstream as a base. I don't have much free time, so progress will likely\nbe slow, but if I believe in something, I will keep working on it. I'm\nstill seeking more criticism of my proposal, because you know, I don't want\nto waste my time if there's something fundamentally wrong with it.\n\nCheers\n\nOn Sun, Jun 14, 2015 at 6:55 AM, Martin Schwarz <martin.schwarz at gmail.com>\nwrote:\n\n> Pieter,\n>\n> Am 13.06.2015 um 16:39 schrieb Pieter Wuille:\n> > We can reasonably assume that different people's wallet will tend to be\n> distributed uniformly over several sidechains to hold their transactions\n> (if they're not, there is no scaling benefit anyway...). That means that\n> for an average transaction, you will need a cross-chain transfer in order\n> to get the money to the recipient (as their wallet will usually be\n> associated to a chain that is different from your own).\n>\n> I think we should set the right incentives to invalidate these\n> assumptions. If the fees as well as the security guarantees\n> on the main chain are highest and fees are dropping with the distance from\n> the main chain on each level of side chains,\n> wouldn't communities with many internal transactions create their own side\n> chain with low fees? I'd expect geographic\n> as well as virtual communities to be forming enjoying cheap fees on their\n> 'local' chains and expensive but comparabily rare\n> 'long distance' fees. One would expect geographic chains (e.g. continents)\n> as well as virtual ones (e.g. the Open Bazaar\n> users' chain) to form. To save fees, a typical user would maintain a\n> wallet in each of her communities which are loaded\n> and drained with rare expensive transacations, whereas daily business with\n> many transactions is done cheaply within\n> each community chain. So, indeed, I would argue that side chains equipped\n> with the right cost incentives for cross-chain\n> transactions would lead to a scalable and efficiently self-organizing\n> network of side chains.\n>\n> best regards,\n> Martin\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nPGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4c5bbbb7/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-15T17:09:42",
                "message_text_only": "If you are fine with the SPV security model, you are much better off by\njust increasing the Bitcoin block size and using an SPV client, as those do\nnot care or even see the full block size by only downloading transactions\nthey care about. Infinite scalability!\n\nThe problem with scaling is that ultimately even SPV security relies on\nothers being able to validate. Both sidechains and larger block sizes make\nthat harder.\n\nIt's simple: either you care about validation, and you must validate\neverything, or you don't, and you don't validate anything. Sidechains do\nnot offer you a useful compromise here, as well as adding huge delays and\nconplexity.\nOn Jun 15, 2015 7:05 PM, \"Andrew\" <onelineproof at gmail.com> wrote:\n\n> Hi All,\n>\n> I talked with Pieter off-list. And I guess the main opposition is that\n> coins that are coming from chains that you are not directly validating are\n> not fully validated by you in the sense that you only get an SPV type proof\n> to prove that miners have accepted those coins. Yes, it's true, but once\n> blocks have been mined, there is nothing you can really do about it.\n> Splitting up the transactions into multiple chains doesn't stop someone\n> from validating all chains, which results in the same validation workload\n> as a full node with one chain and big blocks that store the same number of\n> transactions per second. So there is no disadvantage from using this method\n> compared with having big blocks, and there are clear advantages. The only\n> excuse is laziness to create a proper system.\n>\n> Martin: I'm not sure if random independent chains would be so useful since\n> there are delays with cross chain transfers and you would not be sure if\n> those chains will be maintained in the future. My idea is more the idea of\n> extension blocks, i.e. synchronised chains.\n>\n> Also, some people think that CPU speed and memory size are the only\n> limitations to running a full node, and they think that it is ok to just\n> run a heavily pruned node. Pruned nodes (nodes that have less than 10 years\n> of transactions on their hard drives) are bad for the network. Reasons why\n> you would want the long term history of transactions on your hard drive:\n>\n> 1) Your computer could have been compromised when you did the initial\n> validation, so you may want to validate and see all the old transactions\n> again.\n>\n> 2) You don't have to spend much time to download transactions that you\n> want to analyze but have already pruned.\n>\n> 3) Risk of denial of service attack from the \"archival\" nodes.\n>\n> 4) There is less of an inequality between the big data centers and regular\n> people. We can analyze the history of the transactions that are relevant to\n> us just as effectively as the data centers. With the pruning model, it will\n> be more like NSA-style nodes watching our transaction history, while\n> regular people can only see \"snapshots\". Remember how the Bitcoin community\n> was analysing the old Mt Gox transactions using the blockchain? This kind\n> of stuff will no longer be possible if most people can only run pruned\n> nodes.\n>\n> 5) The data is more distributed thus more easy for others to download\n> (think torrent downloads vs downloading from a central server).\n>\n> 6) Again being distributed, more eyes will be looking at the long term\n> data, thus people can more easily investigate scandals and things like that.\n>\n> 7) Without the full history of blocks people cannot really give a proof to\n> others that what they noticed with their pruned nodes is actually what\n> happened (if they spot something interesting).\n>\n> 8) The time for a new user to start fresh and sync a full node with a long\n> term history of transactions is much more accessible (17 days for 100 years\n> of transactions with 1 MB blocks on high-end computers). Same with the time\n> needed to perform any kind of analysis on the old transactions. And\n> remember, any new transactions likely depend on old transactions, so yes\n> they are very relevant.\n>\n> This is not paranoia. These are real security risks. So don't tell me that\n> you are really running a full node with the same level of security when you\n> are pruning it. Also, don't tell me that the security of running a full\n> node remains the same when centralization is increased (like with bigger\n> block sizes). Centralisation is a security risk.\n>\n> Some people think that decentralisation means you have to run a possibly\n> noisy desktop in a possible space restricted home, which can be annoying.\n> No, you don't have to. You can run a full node (or an almost full node on\n> the chains you are interested in) in a shack in the middle of nowhere and\n> you can monitor it remotely with cameras or whatever. The point is that it\n> is easy for a regular person to run one and they can do so without causing\n> attention and without anyone's permission. That is decentralisation. Even\n> 10 MB blocks are too much to enable this definition of decentralisation\n> (according to my calculations).\n>\n> If there are people who choose to run Gavin/Mike's hard fork of Bitcoin\n> because they are uniformed or mentally challenged or have bad intentions,\n> then there is not much I can do (I try to inform but I don't have such a\n> high popularity level to be effective there), but I will surely not accept\n> any bitcoin that is only valid on blocks with size greater than 1 million\n> bytes. Such coins will have 0 or even negative value to me, and I expect\n> others to do the same.\n>\n> In the meantime, I will start the development process of my proposed\n> scaling methods using bitcoin-core and possibly the sidechains code from\n> Blockstream as a base. I don't have much free time, so progress will likely\n> be slow, but if I believe in something, I will keep working on it. I'm\n> still seeking more criticism of my proposal, because you know, I don't want\n> to waste my time if there's something fundamentally wrong with it.\n>\n> Cheers\n>\n> On Sun, Jun 14, 2015 at 6:55 AM, Martin Schwarz <martin.schwarz at gmail.com>\n> wrote:\n>\n>> Pieter,\n>>\n>> Am 13.06.2015 um 16:39 schrieb Pieter Wuille:\n>> > We can reasonably assume that different people's wallet will tend to be\n>> distributed uniformly over several sidechains to hold their transactions\n>> (if they're not, there is no scaling benefit anyway...). That means that\n>> for an average transaction, you will need a cross-chain transfer in order\n>> to get the money to the recipient (as their wallet will usually be\n>> associated to a chain that is different from your own).\n>>\n>> I think we should set the right incentives to invalidate these\n>> assumptions. If the fees as well as the security guarantees\n>> on the main chain are highest and fees are dropping with the distance\n>> from the main chain on each level of side chains,\n>> wouldn't communities with many internal transactions create their own\n>> side chain with low fees? I'd expect geographic\n>> as well as virtual communities to be forming enjoying cheap fees on their\n>> 'local' chains and expensive but comparabily rare\n>> 'long distance' fees. One would expect geographic chains (e.g.\n>> continents) as well as virtual ones (e.g. the Open Bazaar\n>> users' chain) to form. To save fees, a typical user would maintain a\n>> wallet in each of her communities which are loaded\n>> and drained with rare expensive transacations, whereas daily business\n>> with many transactions is done cheaply within\n>> each community chain. So, indeed, I would argue that side chains equipped\n>> with the right cost incentives for cross-chain\n>> transactions would lead to a scalable and efficiently self-organizing\n>> network of side chains.\n>>\n>> best regards,\n>> Martin\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> --\n> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f3b6f291/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-15T17:15:14",
                "message_text_only": "On Mon, Jun 15, 2015 at 1:09 PM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> It's simple: either you care about validation, and you must validate\n> everything, or you don't, and you don't validate anything. Sidechains do\n> not offer you a useful compromise here, as well as adding huge delays and\n> conplexity.\n>\n\nAs noted to Adam last night - although I agree it adds complexity - side\nchains are one solution that will indeed help with scaling long term.\nSimilar to the graph you see with git repos and merges, having aggregation\nchains that arbitrarily fork and then rejoin the main chain are both\nfeasible and useful.\n\nThat code & future is a ways away from production, so doesn't help us\nhere.  Still, let's not dismiss it as a solution either.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/b00a2d75/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-16T18:17:24",
                "message_text_only": "On Mon, Jun 15, 2015 at 01:15:14PM -0400, Jeff Garzik wrote:\n> On Mon, Jun 15, 2015 at 1:09 PM, Pieter Wuille <pieter.wuille at gmail.com>\n> wrote:\n> \n> > It's simple: either you care about validation, and you must validate\n> > everything, or you don't, and you don't validate anything. Sidechains do\n> > not offer you a useful compromise here, as well as adding huge delays and\n> > conplexity.\n> >\n> \n> As noted to Adam last night - although I agree it adds complexity - side\n> chains are one solution that will indeed help with scaling long term.\n> Similar to the graph you see with git repos and merges, having aggregation\n> chains that arbitrarily fork and then rejoin the main chain are both\n> feasible and useful.\n> \n> That code & future is a ways away from production, so doesn't help us\n> here.  Still, let's not dismiss it as a solution either.\n\nTo be clear, it depends on what kind of sidechain.\n\nMy off-chain transaction notions are federated sidechains with an\neconomic incentive to not commit fraud using fidelity bonds; they were\ndefinitely proposed as a scaling solution.\n\nMerge-mined sidechains are not a scaling solution any more than SPV is a\nscaling solution because they don't solve the scaling problem for\nminers.\n\nSome kind of treechain like sidechain / subchains where what part of the\ntree miners can mine is constrained to preserve fairness could be both a\nscaling solution, and decentralized, but no-one has come up with a solid\ndesign yet that's ready for production. (my treechains don't qualify for\ntransactions yet; maybe for other proof-of-publication uses)\n\nKeep in mind that other than preserving mining\ndecentralization/resisting censorship, we've known how to scale up\nblockchains for ages w/ things like (U)TXO commitments and fraud proofs.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/3fa76edc/attachment.sig>"
            },
            {
                "author": "Andrew",
                "date": "2015-06-16T18:43:25",
                "message_text_only": "On Tue, Jun 16, 2015 at 6:17 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> Merge-mined sidechains are not a scaling solution any more than SPV is a\n> scaling solution because they don't solve the scaling problem for\n> miners.\n>\n> Some kind of treechain like sidechain / subchains where what part of the\n> tree miners can mine is constrained to preserve fairness could be both a\n> scaling solution, and decentralized, but no-one has come up with a solid\n> design yet that's ready for production. (my treechains don't qualify for\n> transactions yet; maybe for other proof-of-publication uses)\n>\n>\nWell doesn't my proposal solve the miner decentralization problem. Only the\ndirect parent and children chains are merge mined. To be more clear, let\nthe top chain to have level 1. Each chain that is a child of a chain of\nlevel n has level n+1. For any chain C, a block is accepted if the hash of\nits header has an appropriate number of trailing zeros (as usual). It can\nalso be accepted with special transactions as I will explain. Let C be a\nchain of level n. Let C0,C1,....,C9 be its children (each of level n+1).\nFor any i in {0,1,...,9}, any solution to the mining problem of C can be\ninserted as a special transaction inside Ci and this enables the block to\nbe accepted in Ci (so C and C0,C1,...,C9 are merge mined. But, for any i in\n{0,1,...,9} and any j in {0,1,...,9}, any solution to the mining problem of\nC cannot be inserted as a special transaction inside of child Cij of Ci. So\nthat means all of the chains are not merge mined, only localised parts,\nright?\n\nBy the way, we can eventually get rid of the block size 1 MB limit by\nrequiring more than just the header to be hashed, but that can be done in\nthe future as soft fork with sidechains, and is a side topic.\n\n\n-- \nPGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/f1e0d73a/attachment.html>"
            },
            {
                "author": "Andrew",
                "date": "2015-06-16T19:04:44",
                "message_text_only": "Actually, I have to think about this merge-mining thing a bit more. I'm\nstarting to think it's better to do without merge-mining at all. As I\nexplained in the forum post, the parent will put the hashes of its children\nheaders as transactions inside its blocks. Thus parents will have an\nincentive to validate the children not by merge mining, but by collecting\nfees from the children for putting those transactions inside (fees that can\nbe spent at the children chains). So, ya no merge mining needed for my\nproposal. But I will think about it a bit more :)\n\nOn Tue, Jun 16, 2015 at 6:43 PM, Andrew <onelineproof at gmail.com> wrote:\n\n>\n>\n> On Tue, Jun 16, 2015 at 6:17 PM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> Merge-mined sidechains are not a scaling solution any more than SPV is a\n>> scaling solution because they don't solve the scaling problem for\n>> miners.\n>>\n>> Some kind of treechain like sidechain / subchains where what part of the\n>> tree miners can mine is constrained to preserve fairness could be both a\n>> scaling solution, and decentralized, but no-one has come up with a solid\n>> design yet that's ready for production. (my treechains don't qualify for\n>> transactions yet; maybe for other proof-of-publication uses)\n>>\n>>\n> Well doesn't my proposal solve the miner decentralization problem. Only\n> the direct parent and children chains are merge mined. To be more clear,\n> let the top chain to have level 1. Each chain that is a child of a chain of\n> level n has level n+1. For any chain C, a block is accepted if the hash of\n> its header has an appropriate number of trailing zeros (as usual). It can\n> also be accepted with special transactions as I will explain. Let C be a\n> chain of level n. Let C0,C1,....,C9 be its children (each of level n+1).\n> For any i in {0,1,...,9}, any solution to the mining problem of C can be\n> inserted as a special transaction inside Ci and this enables the block to\n> be accepted in Ci (so C and C0,C1,...,C9 are merge mined. But, for any i in\n> {0,1,...,9} and any j in {0,1,...,9}, any solution to the mining problem of\n> C cannot be inserted as a special transaction inside of child Cij of Ci. So\n> that means all of the chains are not merge mined, only localised parts,\n> right?\n>\n> By the way, we can eventually get rid of the block size 1 MB limit by\n> requiring more than just the header to be hashed, but that can be done in\n> the future as soft fork with sidechains, and is a side topic.\n>\n>\n> --\n> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n>\n\n\n\n-- \nPGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/539d8088/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T17:18:25",
                "message_text_only": ">\n> It's simple: either you care about validation, and you must validate\n> everything, or you don't, and you don't validate anything.\n>\nPedantically: you could validate a random subset of all scripts, to give\nyourself probabilistic verification rather than full vs SPV. If enough\npeople do it with a large enough subset the probability of a problem being\ndetected goes up a lot. You still pay the cost of the database updates.\n\nBut your main point is of course completely right, that side chains are not\na way to scale up.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/887958ae/attachment.html>"
            },
            {
                "author": "Andrew",
                "date": "2015-06-15T18:00:17",
                "message_text_only": "Pieter: I kind of see your point (but I think you're missing some key\npoints). You mean just download all the headers and then just verify the\ntransactions you filter out by using their corresponding merkle trees,\nright? But still, I don't think that would scale as well as with the tree\nstructure I propose. Because, firstly, you don't really need the headers of\nthe sibling chains. You just need the headers of the parent chains since\nthe parent verifies all the siblings. All you really need in a typical\n(non-mining) situation is the headers or full blocks in one path going down\nthe tree starting from the root chain. So that means O(log n) needs to be\nstored (headers or blocks) (n the number of transaction on the network).\nWith big blocks, you still need O(n) headers. I know headers are small, but\nstill they take up space and verification time. Also, since you are storing\nthe full blocks on the chains you want, you are validating the headers of\nthose blocks and you are sure that you are seeing all transactions on those\nblocks. And if certain addresses must stay on those blocks, you will know\nthat you are catching all of the transactions corresponding to those\nblocks. If you just filter out based on addresses or other criteria, you\ncan be denied some of those transactions by full nodes, and you may not\nknow about it. Say for example, your government representative publishes on\nof his public addresses that is used for paying for expenses. Then with my\nsystem, you can be sure to catch every transaction being spent from that\naddress (or UTXO or whatever you want to call it). If you just filter on\nany transaction that includes that address, you may not catch all of those\ntransactions. Same with incoming funds.\n\nThere are also advantages for mining decentralization as I have explained\nin my previous posts. So still not sure you are right here...\n\nThanks\n\nOn Mon, Jun 15, 2015 at 5:18 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> It's simple: either you care about validation, and you must validate\n>> everything, or you don't, and you don't validate anything.\n>>\n> Pedantically: you could validate a random subset of all scripts, to give\n> yourself probabilistic verification rather than full vs SPV. If enough\n> people do it with a large enough subset the probability of a problem being\n> detected goes up a lot. You still pay the cost of the database updates.\n>\n> But your main point is of course completely right, that side chains are\n> not a way to scale up.\n>\n\n\n\n-- \nPGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/65ead89b/attachment.html>"
            },
            {
                "author": "Andrew",
                "date": "2015-06-16T15:23:33",
                "message_text_only": "Let me ask a simpler question. How do you prove the state of the UTXO\ndatabase corresponding to your wallet? With my subchain method, all the\naddresses in a wallet can be constrained to a path of subchains, so the\nproof is O(log n). Yes, I know some people will say that it is not really a\nproof because I didn't verify the transactions involving sibling chains\noutside my path of chains. But the protocol is \"parent chain always decides\nin case of conflict\". And the parent chains will have an incentive to be\ncareful with what child blocks they commit to as they will be merge mining\nthe (direct) child chains. Yes, the parents can make a mistake with some\nreally deep children chain transactions, but the deeper you go, the less\nvalue the transactions, and the less important. Also, the children of the\nparents are parents themselves so they will have incentive to be careful\nwith what child chains they commit to. So recursively, the system takes\ncare of itself.\n\nI challenge anyone to come up with a <= O(log n) proof that each address\n(output) they have in their wallet really has the balance they think it\nhas. If someone can do this, then maybe I will drop this idea. Actually,\nrusty asked this on #bitcoin-wizards last night and no one was able to\nanswer it.\n\nOn Mon, Jun 15, 2015 at 6:00 PM, Andrew <onelineproof at gmail.com> wrote:\n\n> Pieter: I kind of see your point (but I think you're missing some key\n> points). You mean just download all the headers and then just verify the\n> transactions you filter out by using their corresponding merkle trees,\n> right? But still, I don't think that would scale as well as with the tree\n> structure I propose. Because, firstly, you don't really need the headers of\n> the sibling chains. You just need the headers of the parent chains since\n> the parent verifies all the siblings. All you really need in a typical\n> (non-mining) situation is the headers or full blocks in one path going down\n> the tree starting from the root chain. So that means O(log n) needs to be\n> stored (headers or blocks) (n the number of transaction on the network).\n> With big blocks, you still need O(n) headers. I know headers are small, but\n> still they take up space and verification time. Also, since you are storing\n> the full blocks on the chains you want, you are validating the headers of\n> those blocks and you are sure that you are seeing all transactions on those\n> blocks. And if certain addresses must stay on those blocks, you will know\n> that you are catching all of the transactions corresponding to those\n> blocks. If you just filter out based on addresses or other criteria, you\n> can be denied some of those transactions by full nodes, and you may not\n> know about it. Say for example, your government representative publishes on\n> of his public addresses that is used for paying for expenses. Then with my\n> system, you can be sure to catch every transaction being spent from that\n> address (or UTXO or whatever you want to call it). If you just filter on\n> any transaction that includes that address, you may not catch all of those\n> transactions. Same with incoming funds.\n>\n> There are also advantages for mining decentralization as I have explained\n> in my previous posts. So still not sure you are right here...\n>\n> Thanks\n>\n> On Mon, Jun 15, 2015 at 5:18 PM, Mike Hearn <mike at plan99.net> wrote:\n>\n>> It's simple: either you care about validation, and you must validate\n>>> everything, or you don't, and you don't validate anything.\n>>>\n>> Pedantically: you could validate a random subset of all scripts, to give\n>> yourself probabilistic verification rather than full vs SPV. If enough\n>> people do it with a large enough subset the probability of a problem being\n>> detected goes up a lot. You still pay the cost of the database updates.\n>>\n>> But your main point is of course completely right, that side chains are\n>> not a way to scale up.\n>>\n>\n>\n>\n> --\n> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n>\n\n\n\n-- \nPGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/7e65cca0/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-15T18:01:55",
                "message_text_only": "Side chains are a way to scale and shard horizontally while still retaining\nprimary security parameters of the main chain.\n\nThe future is an Internet of chains, a forest of chains with bitcoin as the\nroot chain for: factom / proofofexistence, ChainDB, Blockstream side\nchains, merge mined side chains, and more.  A multi-chain design is much\nmore scalable in general.\n\n\n\n\nOn Mon, Jun 15, 2015 at 1:18 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> It's simple: either you care about validation, and you must validate\n>> everything, or you don't, and you don't validate anything.\n>>\n> Pedantically: you could validate a random subset of all scripts, to give\n> yourself probabilistic verification rather than full vs SPV. If enough\n> people do it with a large enough subset the probability of a problem being\n> detected goes up a lot. You still pay the cost of the database updates.\n>\n> But your main point is of course completely right, that side chains are\n> not a way to scale up.\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/87dd41c9/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Scaling Bitcoin with Subchains",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Andrew",
                "Martin Schwarz",
                "Mike Hearn",
                "Peter Todd",
                "Pieter Wuille"
            ],
            "messages_count": 13,
            "total_messages_chars_count": 43947
        }
    },
    {
        "title": "[Bitcoin-development] Proposal: Move Bitcoin Dev List to a Neutral Competent Entity",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-14T10:12:40",
                "message_text_only": "Discomfort with Sourceforge\n\nFor a while now people have been expressing concern about Sourceforge's\ncontinued hosting of the bitcoin-dev mailing list.  Downloads were moved\ncompletely to bitcoin.org after the Sept 2014 hacking incident of the SF\nproject account.  The company's behavior and perceived stability have been\ngrowing to be increasingly questionable.\n\nhttp://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer\n\nNovember 2013: GIMP flees SourceForge over dodgy ads and installer\n\nhttps://lwn.net/Articles/646118/\n\nMay 28th, 2015: SourceForge replacing GIMP Windows downloads\n\nhttp://seclists.org/nmap-dev/2015/q2/194\n\nJune 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.\n\nWhen this topic came up over the past two years, it seemed that most people\nagreed it would be a good idea to move.  Someone always suggests Google\nGroups as the replacement host.  Google is quickly shot down as too\ncontroversial in this community, and it becomes an even more difficult\nquestion as to who else should host it.  Realizing this is not so simple,\ndiscussion then dies off until the next time somebody brings it up.\n\nhttp://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607\n\nSomebody brought it up again this past week.\n\nIt seems logical that an open discussion list is not a big deal to continue\nto be hosted on Sourceforge, as there isn\u2019t much they could do to screw it\nup.  I personally think moving it away now would be seen as a gesture that\nwe do not consider their behavior to be acceptable.  There are also some\nbenefits in being hosted elsewhere, at an entity able to professionally\nmaintain their infrastructure while also being neutral to the content.\n\nProposal: Move Bitcoin Dev List to a Neutral Competent Entity\n\nBitcoin is a global infrastructure development project where it would be\npolitically awkward for any of the existing Bitcoin companies or orgs to\nhost due to questions it would raise about perceived political control.\nFor example, consider a bizarro parallel universe where MtGox was the\ninventor of Bitcoin, where they hosted its development infrastructure and\ndev list under their own name.  Even if what they published was 100%\ntechnically and ideologically equivalent to the Bitcoin we know in our\ndimension, most people wouldn't have trusted it merely due to appearances\nand it would have easily gone nowhere.\n\nI had a similar thought process last week when sidechains code was\napproaching release. Sidechains, like Bitcoin itself, are intended to be a\ngeneric piece of infrastructure (like ethernet?) that anyone can build upon\nand use.  We thought about Google Groups or existing orgs that already host\nvarious open source infrastructure discussion lists like the IETF or the\nLinux Foundation.  Google is too controversial in this community, and the\nIETF is seen as possibly too politically fractured.  The Linux Foundation\nhosts a bunch of infrastructure lists\n<https://lists.linuxfoundation.org/mailman/listinfo> and it seems that\nnobody in the Open Source industry considers them to be particularly\nobjectionable.  I talked with LF about the idea of hosting generic\nBitcoin-related infrastructure development lists.  They agreed as OSS\ninfrastructure dev is already within their charter, so early this week\nsidechains-dev list began hosting there.\n\n>From the perspective of our community, for bitcoin-dev it seems like a\ngreat fit.  Why?  While they are interested in supporting general open\nsource development, the LF has literally zero stake in this.  In addition\nto neutrality, they seem to be suitable as a competent host.  They have\nfull-time sysadmins maintaining their infrastructure including the Mailman\nserver. They are soon upgrading to Mailman 3 <http://wiki.list.org/Mailman3>,\nwhich means mailing lists would benefit from the improved archive browser.\nI am not personally familiar with HyperKitty, but the point here is they\nare a stable non-profit entity who will competently maintain and improve\nthings like their Mailman deployment (a huge improvement over the stagnant\nSourceforge).  It seems that LF would be competent, neutral place to host\ndev lists for the long-term.\n\nTo be clear, this proposal is only about hosting the discussion list.  The\nLF would have no control over the Bitcoin Project, as no single entity\nshould.\n\nProposed Action Plan\n\n\n   -\n\n   Discuss this openly within this community.  Above is one example of a\n   great neutral and competent host.  If the technical leaders here can agree\n   to move to a particular neutral host then we do it.\n   -\n\n   Migration: The current list admins become the new list admins.  We\n   import the entire list archive into the new host's archives for user\n   convenience.\n   -\n\n   http://sourceforge.net/p/bitcoin/mailman/  Kill bitcoin-list and\n   bitcoin-test.  Very few people actually use it.  Actually, let's delete the\n   entire Bitcoin Sourceforge project as its continued existence serves no\n   purpose and it only confuses people who find it.  By deletion, nobody has\n   to monitor it for a repeat of the Sept 2014 hacking incident\n   <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg> or GIMP-type\n   hijacking <https://lwn.net/Articles/646118/>?\n   -\n\n   The toughest question would be the appropriateness of auto-importing the\n   subscriber list to another list server, as mass imports have a tendency to\n   upset people.\n\n\nThoughts?\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/e399d028/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-14T15:15:18",
                "message_text_only": "* ACK on moving away from SourceForge mailing lists - though only once a\ncommunity-welcomed replacement is up and running\n\n* ACK on using LF as a mailing infrastructure provider\n\n* Research secure mailing list models, for bitcoin-security.  The list is\nnot ultra high security - we all use PGP for that - but it would perhaps be\nnice to find some spiffy cryptosystem where mailing list participants\nindividually hold keys & therefore access.\n\n\nOn Sun, Jun 14, 2015 at 6:12 AM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> Discomfort with Sourceforge\n>\n> For a while now people have been expressing concern about Sourceforge's\n> continued hosting of the bitcoin-dev mailing list.  Downloads were moved\n> completely to bitcoin.org after the Sept 2014 hacking incident of the SF\n> project account.  The company's behavior and perceived stability have been\n> growing to be increasingly questionable.\n>\n>\n> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer\n>\n> November 2013: GIMP flees SourceForge over dodgy ads and installer\n>\n> https://lwn.net/Articles/646118/\n>\n> May 28th, 2015: SourceForge replacing GIMP Windows downloads\n>\n> http://seclists.org/nmap-dev/2015/q2/194\n>\n> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.\n>\n> When this topic came up over the past two years, it seemed that most\n> people agreed it would be a good idea to move.  Someone always suggests\n> Google Groups as the replacement host.  Google is quickly shot down as too\n> controversial in this community, and it becomes an even more difficult\n> question as to who else should host it.  Realizing this is not so simple,\n> discussion then dies off until the next time somebody brings it up.\n>\n>\n> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607\n>\n> Somebody brought it up again this past week.\n>\n> It seems logical that an open discussion list is not a big deal to\n> continue to be hosted on Sourceforge, as there isn\u2019t much they could do to\n> screw it up.  I personally think moving it away now would be seen as a\n> gesture that we do not consider their behavior to be acceptable.  There are\n> also some benefits in being hosted elsewhere, at an entity able to\n> professionally maintain their infrastructure while also being neutral to\n> the content.\n>\n> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity\n>\n> Bitcoin is a global infrastructure development project where it would be\n> politically awkward for any of the existing Bitcoin companies or orgs to\n> host due to questions it would raise about perceived political control.\n> For example, consider a bizarro parallel universe where MtGox was the\n> inventor of Bitcoin, where they hosted its development infrastructure and\n> dev list under their own name.  Even if what they published was 100%\n> technically and ideologically equivalent to the Bitcoin we know in our\n> dimension, most people wouldn't have trusted it merely due to appearances\n> and it would have easily gone nowhere.\n>\n> I had a similar thought process last week when sidechains code was\n> approaching release. Sidechains, like Bitcoin itself, are intended to be a\n> generic piece of infrastructure (like ethernet?) that anyone can build upon\n> and use.  We thought about Google Groups or existing orgs that already host\n> various open source infrastructure discussion lists like the IETF or the\n> Linux Foundation.  Google is too controversial in this community, and the\n> IETF is seen as possibly too politically fractured.  The Linux Foundation\n> hosts a bunch of infrastructure lists\n> <https://lists.linuxfoundation.org/mailman/listinfo> and it seems that\n> nobody in the Open Source industry considers them to be particularly\n> objectionable.  I talked with LF about the idea of hosting generic\n> Bitcoin-related infrastructure development lists.  They agreed as OSS\n> infrastructure dev is already within their charter, so early this week\n> sidechains-dev list began hosting there.\n>\n> From the perspective of our community, for bitcoin-dev it seems like a\n> great fit.  Why?  While they are interested in supporting general open\n> source development, the LF has literally zero stake in this.  In addition\n> to neutrality, they seem to be suitable as a competent host.  They have\n> full-time sysadmins maintaining their infrastructure including the Mailman\n> server. They are soon upgrading to Mailman 3\n> <http://wiki.list.org/Mailman3>, which means mailing lists would benefit\n> from the improved archive browser.  I am not personally familiar with\n> HyperKitty, but the point here is they are a stable non-profit entity who\n> will competently maintain and improve things like their Mailman deployment\n> (a huge improvement over the stagnant Sourceforge).  It seems that LF would\n> be competent, neutral place to host dev lists for the long-term.\n>\n> To be clear, this proposal is only about hosting the discussion list.  The\n> LF would have no control over the Bitcoin Project, as no single entity\n> should.\n>\n> Proposed Action Plan\n>\n>\n>    -\n>\n>    Discuss this openly within this community.  Above is one example of a\n>    great neutral and competent host.  If the technical leaders here can agree\n>    to move to a particular neutral host then we do it.\n>    -\n>\n>    Migration: The current list admins become the new list admins.  We\n>    import the entire list archive into the new host's archives for user\n>    convenience.\n>    -\n>\n>    http://sourceforge.net/p/bitcoin/mailman/  Kill bitcoin-list and\n>    bitcoin-test.  Very few people actually use it.  Actually, let's delete the\n>    entire Bitcoin Sourceforge project as its continued existence serves no\n>    purpose and it only confuses people who find it.  By deletion, nobody has\n>    to monitor it for a repeat of the Sept 2014 hacking incident\n>    <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg> or GIMP-type\n>    hijacking <https://lwn.net/Articles/646118/>?\n>    -\n>\n>    The toughest question would be the appropriateness of auto-importing\n>    the subscriber list to another list server, as mass imports have a tendency\n>    to upset people.\n>\n>\n> Thoughts?\n>\n> Warren Togami\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/76fad066/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-14T16:56:36",
                "message_text_only": "On Sun, Jun 14, 2015 at 11:15:18AM -0400, Jeff Garzik wrote:\n> * ACK on moving away from SourceForge mailing lists - though only once a\n> community-welcomed replacement is up and running\n> \n> * ACK on using LF as a mailing infrastructure provider\n> \n> * Research secure mailing list models, for bitcoin-security.  The list is\n> not ultra high security - we all use PGP for that - but it would perhaps be\n> nice to find some spiffy cryptosystem where mailing list participants\n> individually hold keys & therefore access.\n\nACK to the above as well.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/03d6286e/attachment.sig>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-15T03:19:09",
                "message_text_only": "On Sun, Jun 14, 2015 at 5:15 AM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> * ACK on moving away from SourceForge mailing lists - though only once a\n> community-welcomed replacement is up and running\n>\n> * ACK on using LF as a mailing infrastructure provider\n>\n> * Research secure mailing list models, for bitcoin-security.  The list is\n> not ultra high security - we all use PGP for that - but it would perhaps be\n> nice to find some spiffy cryptosystem where mailing list participants\n> individually hold keys & therefore access.\n>\n>\nWhile I agree this is a good idea, this should not be a precondition for\nmoving the public bitcoin-dev list.  The security team needs to separately\nresearch/write tools needed for this.\n\n<jgarzik> warren, wanna just go ahead and create bitcoin-development @ LF?\n\n\n*More Feedback?*  As for going ahead, perhaps we should wait to hear from\nmore of the other technical leaders?\n\n*More Questions*\n\n*List Name?*  Would people prefer \"bitcoin-development\" for he new list\nname instead of a shorter name like \"bitcoin-dev\"?  I personally like the\nshorter name, but either is fine.\nhttps://lists.linuxfoundation.org/mailman/listinfo currently has\n\"sidechains-dev\", and \"lightning-dev\" is moving there sometime soon.\n\n*Proposed Cut-Off Date?*  Then we also need to agree on a date to cut off\nthe old list.  Their sysadmin said we could have the new list auto-post\nfrom the old list for a short while.  I wonder how well that works ... if\nthat will result in double posting if people write to the new and CC the\nold list.  Needs a little research how well it would behave to have both\nlists operating during a transition period.  I think we should announce a\ncut-off date when posts to the old list is shut off, July 15th, one month\nfrom now.  Thoughts?\n\n*Moderators?*  Mailman on the new server allows having separate logins for\nadmins and moderators.  I think the admins of the old SF project are gavin,\njgarzik and sipa... they are kind of busy.  Perhaps we should identify\nknown trusted community members who can help with moderation.  Usually this\nis dealing with \"held\" messages that are flagged by the spam filter\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/2768e0e1/attachment.html>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-15T05:50:16",
                "message_text_only": "Andy Schroder\n\nOn 06/14/2015 11:19 PM, Warren Togami Jr. wrote:\n> On Sun, Jun 14, 2015 at 5:15 AM, Jeff Garzik <jgarzik at bitpay.com \n> <mailto:jgarzik at bitpay.com>> wrote:\n>\n>     * ACK on moving away from SourceForge mailing lists - though only\n>     once a community-welcomed replacement is up and running\n>\n>     * ACK on using LF as a mailing infrastructure provider\n>\n>     * Research secure mailing list models, for bitcoin-security.  The\n>     list is not ultra high security - we all use PGP for that - but it\n>     would perhaps be nice to find some spiffy cryptosystem where\n>     mailing list participants individually hold keys & therefore access.\n>\n>\n> While I agree this is a good idea, this should not be a precondition \n> for moving the public bitcoin-dev list.  The security team needs to \n> separately research/write tools needed for this.\n>\n>     <jgarzik> warren, wanna just go ahead and create\n>     bitcoin-development @ LF? \n>\n>\n> *More Feedback?*  As for going ahead, perhaps we should wait to hear \n> from more of the other technical leaders?\n\nI'd say just move forward with creating the new list. Once the new list \nis created, send an announcement encouraging people to join. The new \nlist will be an opt in change, so you can encourage a transition date, \nbut why require it? Maybe monitor the subscriber lists for each list and \nprovide people regular updates as to what percentage of the people in \nthe old list have subscribed to the new list. This will help inform \npeople whether the new list will be adopted or not. People may also miss \na single announcement e-mail. There are too many messages going through \nthe list right now, and everyone doesn't read the list regularly.\n\n>\n> *_More Questions_*\n>\n> *List Name?*  Would people prefer \"bitcoin-development\" for he new \n> list name instead of a shorter name like \"bitcoin-dev\"?  I personally \n> like the shorter name, but either is fine. \n> https://lists.linuxfoundation.org/mailman/listinfo currently has \n> \"sidechains-dev\", and \"lightning-dev\" is moving there sometime soon.\n\nI vote for \"bitcoin-dev\", only because of the consistency with the other \nprojects that you mentioned, as well as the fact that I think there \nshould be at least some name change to avoid confusion between the new \nand old lists.\n\n\n>\n> *Proposed Cut-Off Date?*  Then we also need to agree on a date to cut \n> off the old list..  Their sysadmin said we could have the new list \n> auto-post from the old list for a short while.  I wonder how well that \n> works ... if that will result in double posting if people write to the \n> new and CC the old list..  Needs a little research how well it would \n> behave to have both lists operating during a transition period.  I \n> think we should announce a cut-off date when posts to the old list is \n> shut off, July 15th, one month from now.  Thoughts?\n\n\nI'd say move forward with the new list and subscribe it to the old list. \nThat way the new list starts archiving the messages from here forward. \nThere may be a little bit of a problem if someone joins the new list but \nnot the old list, they may not be able to reply to a message sent to the \nold list? You probably would get a duplicate delivery if doing this, but \nyou could encourage users who have joined the new list to turn off \ndelivery on the old list (this is an option in the mailman settings page).\n\nOnce greater than 50% of the members of the old list are members of the \nnew list, send out an announcement that the old list will be turned into \nread only mode in 3 weeks and to use the new list only after that time. \nThis way you don't have to force use of the new list and a majority \nagreement is required before doing so and a technical leader is not \nrequired to enforce a change without a solid commitment from most of the \nmembers. Right before the old list is shut down, send one final \nannouncement e-mail indicating it is closing and link to the new list \n(so that new subscribers will be aware if they are looking at an archive \nof some kind).\n\n\n\n\n>\n> *Moderators?*  Mailman on the new server allows having separate logins \n> for admins and moderators.  I think the admins of the old SF project \n> are gavin, jgarzik and sipa... they are kind of busy.  Perhaps we \n> should identify known trusted community members who can help with \n> moderation.  Usually this is dealing with \"held\" messages that are \n> flagged by the spam filter\n>\n> Warren Togami\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/e4e35a74/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/e4e35a74/attachment.sig>"
            },
            {
                "author": "odinn",
                "date": "2015-06-15T09:13:03",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nWhat about Gittorrent?\n\nhttp://blog.printf.net/articles/2015/05/29/announcing-gittorrent-a-decen\ntralized-github/\n\nOn 06/14/2015 08:19 PM, Warren Togami Jr. wrote:\n> On Sun, Jun 14, 2015 at 5:15 AM, Jeff Garzik <jgarzik at bitpay.com \n> <mailto:jgarzik at bitpay.com>> wrote:\n> \n> * ACK on moving away from SourceForge mailing lists - though only \n> once a community-welcomed replacement is up and running\n> \n> * ACK on using LF as a mailing infrastructure provider\n> \n> * Research secure mailing list models, for bitcoin-security.  The \n> list is not ultra high security - we all use PGP for that - but it \n> would perhaps be nice to find some spiffy cryptosystem where\n> mailing list participants individually hold keys & therefore\n> access.\n> \n> \n> While I agree this is a good idea, this should not be a\n> precondition for moving the public bitcoin-dev list.  The security\n> team needs to separately research/write tools needed for this.\n> \n> <jgarzik> warren, wanna just go ahead and create\n> bitcoin-development @ LF?\n> \n> \n> *More Feedback?*  As for going ahead, perhaps we should wait to\n> hear from more of the other technical leaders?\n> \n> *_More Questions_*\n> \n> *List Name?*  Would people prefer \"bitcoin-development\" for he new\n> list name instead of a shorter name like \"bitcoin-dev\"?  I\n> personally like the shorter name, but either is fine. \n> https://lists.linuxfoundation.org/mailman/listinfo currently has \n> \"sidechains-dev\", and \"lightning-dev\" is moving there sometime\n> soon.\n> \n> *Proposed Cut-Off Date?*  Then we also need to agree on a date to\n> cut off the old list.  Their sysadmin said we could have the new\n> list auto-post from the old list for a short while.  I wonder how\n> well that works ... if that will result in double posting if people\n> write to the new and CC the old list.  Needs a little research how\n> well it would behave to have both lists operating during a\n> transition period.  I think we should announce a cut-off date when\n> posts to the old list is shut off, July 15th, one month from now.\n> Thoughts?\n> \n> *Moderators?*  Mailman on the new server allows having separate\n> logins for admins and moderators.  I think the admins of the old SF\n> project are gavin, jgarzik and sipa... they are kind of busy.\n> Perhaps we should identify known trusted community members who can\n> help with moderation. Usually this is dealing with \"held\" messages\n> that are flagged by the spam filter\n> \n> Warren Togami\n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVfpcfAAoJEGxwq/inSG8CEdsH+weboFo8SCbwgoe68oZLl6Et\nr4JtzZRu8jtw5x6AYcpVMBvUo3CHtbYCWREidBhvSU+TlOUjnxZRU5CjLpjHcc61\nQV2hIGD1RUdrcj93PBsnNrvuXkLVHd09sKXCIvldY1d1GqTqy9sVY1skExd7zY2h\nLmJhLdmNw7I+gLP/r8Ivl7aDqrpzHXr7pnbFXZZ0hxhthncxXTefi/IV+kAt3ptL\nqfSRYGPyyUXWLfXF/XW+/DH+scZm+Iu/SSoSa6xnEo4MgY4HzZM2Uy+9Te9aO6wd\nxvdpMetZV5A9Ljr8Ww72DPDkvUprk7u55OMgZZ4Fps53PnqwpNOjt3phIUH4iVE=\n=6Fxw\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-17T00:19:04",
                "message_text_only": "On Sun, Jun 14, 2015 at 5:19 PM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n>\n> *List Name?*  Would people prefer \"bitcoin-development\" for he new list\n> name instead of a shorter name like \"bitcoin-dev\"?  I personally like the\n> shorter name, but either is fine.\n> https://lists.linuxfoundation.org/mailman/listinfo currently has\n> \"sidechains-dev\", and \"lightning-dev\" is moving there sometime soon.\n>\n\nWe're going ahead with \"bitcoin-dev\".  A request for creation is now\npending.\n\n\n>\n> *Proposed Cut-Off Date?*  Then we also need to agree on a date to cut off\n> the old list.  Their sysadmin said we could have the new list auto-post\n> from the old list for a short while.  I wonder how well that works ... if\n> that will result in double posting if people write to the new and CC the\n> old list.  Needs a little research how well it would behave to have both\n> lists operating during a transition period.  I think we should announce a\n> cut-off date when posts to the old list is shut off, July 15th, one month\n> from now.  Thoughts?\n>\n\nOff-list I heard a suggestion to make the cut-off date as short as one week\nafter the new list is announced and people are given the option to\nsubscribe.  Could people please post feelings about this?\n\nIt seems most everyone agreed not to auto-subscribe everyone onto the new\nlist as that tends to be upsetting.\n\nThere is clarity if subscribing the old list to the new list is a good\nidea.  Is anyone familiar with Mailman, is it smart enough to somehow\nprevent double-posts if someone writes to both the old and new address?\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/541319f9/attachment.html>"
            },
            {
                "author": "grarpamp",
                "date": "2015-06-17T01:59:47",
                "message_text_only": "Please no GoogleGroups. Stick with mailman or some other open\nsource thing you can move around from place to place as needed.\n\nAlso, online third party archives die, their web interfaces suck\nass, they're bloated, don't export, aren't offline capable or\nauthoritative, etc.\n\nYou need to make the raw archives (past and future) downloadable\nin mbox format and updated daily, with full unobfuscated headers\nfor threading and replying, with signatures and attachments.\nCommonly for newcomers wishing to seed their own MUA's and archives,\nmirrors, search, and so on.\n\nOne such breakage of archives by mailman defaults was discussed and\ncorrected here:\nhttps://cpunks.org/pipermail/cypherpunks/\n\nYou also need to get rid of the tag in the subject, it wastes\nvaluable space and mail filters work just the same without it.\n\nPlease no \"forums\" (see suck above). Unless they have bidirectional\nrealtime message copying between list and forum. Or at least make\navailable exports of their message database.\n\nFurther, when will the crypto P2P communities develop and use\ndistributed messaging systems... bitmessage, blockchain, etc as\nrough examples... to avoid old centralized issues. At some point you\nhave to start eating your own dog food and make people run the\nclients and come to you instead. Disruptive tech is the new good."
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-14T20:55:48",
                "message_text_only": "Hello,\n\nI'd support moving to a Linux Foundation e-mail list. I am also against \ngoogle groups. I agree that the gesture of moving indicates that \nSourceForge is not playing nice on other issues and that moving this \nlist shows their behavior is being acknowledged.\n\nI understand your reason for wanting to delete the Source Forge account \n(after reading the links). However, the only problem with that is that \nthe SourceForge archive is the oldest one I've found with some early \nmessages from Satoshi. Myself finding Bitcoin after its inception, as \nwell as this mailing list even later on, it's nice to be able to review \nthe archives. SourceForge's interface to those archives is pretty bad \nthough. I'm not sure if there is any way to get older messages archived \non sites like gmane or mail-archive? Does anyone know? You mentioned \nimporting the list archive as part of the migration plan, but I guess is \nthis easy to do from SourceForge?\n\n\nAndy Schroder\n\nOn 06/14/2015 06:12 AM, Warren Togami Jr. wrote:\n>\n> Discomfort with Sourceforge\n>\n> For a while now people have been expressing concern about \n> Sourceforge's continued hosting of the bitcoin-dev mailing list.\u00c2  \n> Downloads were moved completely to bitcoin.org <http://bitcoin.org> \n> after the Sept 2014 hacking incident of the SF project account.\u00c2  The \n> company's behavior and perceived stability have been growing to be \n> increasingly questionable.\n>\n>\n> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer\n>\n> November 2013: GIMP flees SourceForge over dodgy ads and installer\n>\n> https://lwn.net/Articles/646118/\n>\n> May 28th, 2015: SourceForge replacing GIMP Windows downloads\n>\n> http://seclists.org/nmap-dev/2015/q2/194\n>\n> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.\n>\n>\n> When this topic came up over the past two years, it seemed that most \n> people agreed it would be a good idea to move.\u00c2 Someone always \n> suggests Google Groups as the replacement host.\u00c2  Google is quickly \n> shot down as too controversial in this community, and it becomes an \n> even more difficult question as to who else should host it.\u00c2  \n> Realizing this is not so simple, discussion then dies off until the \n> next time somebody brings it up.\n>\n>\n> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607\n>\n> Somebody brought it up again this past week.\n>\n>\n> It seems logical that an open discussion list is not a big deal to \n> continue to be hosted on Sourceforge, as there isn\u00e2EUR^(TM)t much they \n> could do to screw it up.\u00c2  I personally think moving it away now would \n> be seen as a gesture that we do not consider their behavior to be \n> acceptable.\u00c2 There are also some benefits in being hosted elsewhere, \n> at an entity able to professionally maintain their infrastructure \n> while also being neutral to the content.\n>\n>\n> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity\n>\n>\n> Bitcoin is a global infrastructure development project where it would \n> be politically awkward for any of the existing Bitcoin companies or \n> orgs to host due to questions it would raise about perceived political \n> control.\u00c2  For example, consider a bizarro parallel universe where \n> MtGox was the inventor of Bitcoin, where they hosted its development \n> infrastructure and dev list under their own name.\u00c2  Even if what they \n> published was 100% technically and ideologically equivalent to the \n> Bitcoin we know in our dimension, most people wouldn't have trusted it \n> merely due to appearances and it would have easily gone nowhere.\n>\n>\n> I had a similar thought process last week when sidechains code was \n> approaching release. Sidechains, like Bitcoin itself, are intended to \n> be a generic piece of infrastructure (like ethernet?) that anyone can \n> build upon and use.\u00c2  We thought about Google Groups or existing orgs \n> that already host various open source infrastructure discussion lists \n> like the IETF or the Linux Foundation.\u00c2 Google is too controversial in \n> this community, and the IETF is seen as possibly too politically \n> fractured.\u00c2  The Linux Foundation hosts a bunch of infrastructure \n> lists <https://lists.linuxfoundation.org/mailman/listinfo>and it seems \n> that nobody in the Open Source industry considers them to be \n> particularly objectionable.\u00c2  I talked with LF about the idea of \n> hosting generic Bitcoin-related infrastructure development lists.\u00c2  \n> They agreed as OSS infrastructure dev is already within their charter, \n> so early this week sidechains-dev list began hosting there.\n>\n>\n> From the perspective of our community, for bitcoin-dev it seems like a \n> great fit.\u00c2  Why?\u00c2  While they are interested in supporting general \n> open source development, the LF has literally zero stake in this.\u00c2  In \n> addition to neutrality, they seem to be suitable as a competenthost.\u00c2  \n> They have full-time sysadmins maintaining their infrastructure \n> including the Mailman server. They are soon upgrading to Mailman 3 \n> <http://wiki.list.org/Mailman3>, which means mailing lists would \n> benefit from the improved archive browser.\u00c2  I am not personally \n> familiar with HyperKitty, but the point here is they are a stable \n> non-profit entity who will competently maintain and improve things \n> like their Mailman deployment (a huge improvement over the stagnant \n> Sourceforge).\u00c2  It seems that LF would be competent, neutral place to \n> host dev lists for the long-term.\n>\n>\n> To be clear, this proposal is only about hosting the discussion \n> list.\u00c2  The LF would have no control over the Bitcoin Project, as no \n> single entity should.\n>\n>\n> Proposed Action Plan\n>\n>\n>  *\n>\n>     Discuss this openly within this community.\u00c2  Above is one example\n>     of a great neutral and competent host.\u00c2  If the technical leaders\n>     here can agree to move to a particular neutral host then we do it.\n>\n>  *\n>\n>     Migration: The current list admins become the new list admins.\u00c2 We\n>     import the entire list archive into the new host's archives for\n>     user convenience.\n>\n>  *\n>\n>     http://sourceforge.net/p/bitcoin/mailman/ \u00c2 Kill bitcoin-list and\n>     bitcoin-test.\u00c2  Very few people actually use it.\u00c2  Actually, let's\n>     delete the entire Bitcoin Sourceforge project as its continued\n>     existence serves no purpose and it only confuses people who find\n>     it.\u00c2  By deletion, nobody has to monitor it for a repeat of the\n>     Sept 2014 hacking incident\n>     <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg>or\n>     GIMP-type hijacking <https://lwn.net/Articles/646118/>?\n>\n>  *\n>\n>     The toughest question would be the appropriateness of\n>     auto-importing the subscriber list to another list server, as mass\n>     imports have a tendency to upset people.\n>\n>\n> Thoughts?\n>\n>\n> Warren Togami\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/f0e7ca82/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/f0e7ca82/attachment.sig>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-14T21:59:24",
                "message_text_only": "It might be as well to keep the archive but disable new posts as\notherwise we create bit-rot for people who linked to posts on\nsourceforge.\n\nThe list is also archived on mail-archive though.\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/\n\nAdam\n\nOn 14 June 2015 at 22:55, Andy Schroder <info at andyschroder.com> wrote:\n> Hello,\n>\n> I'd support moving to a Linux Foundation e-mail list. I am also against\n> google groups. I agree that the gesture of moving indicates that SourceForge\n> is not playing nice on other issues and that moving this list shows their\n> behavior is being acknowledged.\n>\n> I understand your reason for wanting to delete the Source Forge account\n> (after reading the links). However, the only problem with that is that the\n> SourceForge archive is the oldest one I've found with some early messages\n> from Satoshi. Myself finding Bitcoin after its inception, as well as this\n> mailing list even later on, it's nice to be able to review the archives.\n> SourceForge's interface to those archives is pretty bad though. I'm not sure\n> if there is any way to get older messages archived on sites like gmane or\n> mail-archive? Does anyone know? You mentioned importing the list archive as\n> part of the migration plan, but I guess is this easy to do from SourceForge?\n>\n>\n> Andy Schroder\n>\n> On 06/14/2015 06:12 AM, Warren Togami Jr. wrote:\n>\n> Discomfort with Sourceforge\n>\n> For a while now people have been expressing concern about Sourceforge's\n> continued hosting of the bitcoin-dev mailing list.\u00c2  Downloads were moved\n> completely to bitcoin.org after the Sept 2014 hacking incident of the SF\n> project account.\u00c2  The company's behavior and perceived stability have been\n> growing to be increasingly questionable.\n>\n>\n> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer\n>\n> November 2013: GIMP flees SourceForge over dodgy ads and installer\n>\n> https://lwn.net/Articles/646118/\n>\n> May 28th, 2015: SourceForge replacing GIMP Windows downloads\n>\n> http://seclists.org/nmap-dev/2015/q2/194\n>\n> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.\n>\n>\n> When this topic came up over the past two years, it seemed that most people\n> agreed it would be a good idea to move.\u00c2  Someone always suggests Google\n> Groups as the replacement host.\u00c2  Google is quickly shot down as too\n> controversial in this community, and it becomes an even more difficult\n> question as to who else should host it.\u00c2  Realizing this is not so simple,\n> discussion then dies off until the next time somebody brings it up.\n>\n>\n> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607\n>\n> Somebody brought it up again this past week.\n>\n>\n> It seems logical that an open discussion list is not a big deal to continue\n> to be hosted on Sourceforge, as there isn\u00e2\u20ac\u2122t much they could do to screw it\n> up.\u00c2  I personally think moving it away now would be seen as a gesture that\n> we do not consider their behavior to be acceptable.\u00c2  There are also some\n> benefits in being hosted elsewhere, at an entity able to professionally\n> maintain their infrastructure while also being neutral to the content.\n>\n>\n> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity\n>\n>\n> Bitcoin is a global infrastructure development project where it would be\n> politically awkward for any of the existing Bitcoin companies or orgs to\n> host due to questions it would raise about perceived political control.\u00c2\n> For example, consider a bizarro parallel universe where MtGox was the\n> inventor of Bitcoin, where they hosted its development infrastructure and\n> dev list under their own name.\u00c2  Even if what they published was 100%\n> technically and ideologically equivalent to the Bitcoin we know in our\n> dimension, most people wouldn't have trusted it merely due to appearances\n> and it would have easily gone nowhere.\n>\n>\n> I had a similar thought process last week when sidechains code was\n> approaching release. Sidechains, like Bitcoin itself, are intended to be a\n> generic piece of infrastructure (like ethernet?) that anyone can build upon\n> and use.\u00c2  We thought about Google Groups or existing orgs that already host\n> various open source infrastructure discussion lists like the IETF or the\n> Linux Foundation.\u00c2  Google is too controversial in this community, and the\n> IETF is seen as possibly too politically fractured.\u00c2  The Linux Foundation\n> hosts a bunch of infrastructure lists and it seems that nobody in the Open\n> Source industry considers them to be particularly objectionable.\u00c2  I talked\n> with LF about the idea of hosting generic Bitcoin-related infrastructure\n> development lists.\u00c2  They agreed as OSS infrastructure dev is already within\n> their charter, so early this week sidechains-dev list began hosting there.\n>\n>\n> From the perspective of our community, for bitcoin-dev it seems like a great\n> fit.\u00c2  Why?\u00c2  While they are interested in supporting general open source\n> development, the LF has literally zero stake in this.\u00c2  In addition to\n> neutrality, they seem to be suitable as a competent host.\u00c2  They have\n> full-time sysadmins maintaining their infrastructure including the Mailman\n> server. They are soon upgrading to Mailman 3, which means mailing lists\n> would benefit from the improved archive browser.\u00c2  I am not personally\n> familiar with HyperKitty, but the point here is they are a stable non-profit\n> entity who will competently maintain and improve things like their Mailman\n> deployment (a huge improvement over the stagnant Sourceforge).\u00c2  It seems\n> that LF would be competent, neutral place to host dev lists for the\n> long-term.\n>\n>\n> To be clear, this proposal is only about hosting the discussion list.\u00c2  The\n> LF would have no control over the Bitcoin Project, as no single entity\n> should.\n>\n>\n> Proposed Action Plan\n>\n>\n> Discuss this openly within this community.\u00c2  Above is one example of a great\n> neutral and competent host.\u00c2  If the technical leaders here can agree to\n> move to a particular neutral host then we do it.\n>\n> Migration: The current list admins become the new list admins.\u00c2  We import\n> the entire list archive into the new host's archives for user convenience.\n>\n> http://sourceforge.net/p/bitcoin/mailman/ \u00c2 Kill bitcoin-list and\n> bitcoin-test.\u00c2  Very few people actually use it.\u00c2  Actually, let's delete\n> the entire Bitcoin Sourceforge project as its continued existence serves no\n> purpose and it only confuses people who find it.\u00c2  By deletion, nobody has\n> to monitor it for a repeat of the Sept 2014 hacking incident or GIMP-type\n> hijacking?\n>\n> The toughest question would be the appropriateness of auto-importing the\n> subscriber list to another list server, as mass imports have a tendency to\n> upset people.\n>\n>\n> Thoughts?\n>\n>\n> Warren Togami\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Davide Cavion",
                "date": "2015-06-14T22:14:43",
                "message_text_only": "Hi,\n\nI just wanted to let everyone know that every email is also archived at bitcoin-development.narkive.com <http://bitcoin-development.narkive.com/>, where you can find everything since the beginning of the list (June 2011). That should answer to Andy\u2019s concern about the older messages not being archived anywhere but on sourceforge.\n\nDavide\n\n\n> On 14 Jun 2015, at 23:59, Adam Back <adam at cypherspace.org> wrote:\n> \n> It might be as well to keep the archive but disable new posts as\n> otherwise we create bit-rot for people who linked to posts on\n> sourceforge.\n> \n> The list is also archived on mail-archive though.\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/\n> \n> Adam\n> \n> On 14 June 2015 at 22:55, Andy Schroder <info at andyschroder.com> wrote:\n>> Hello,\n>> \n>> I'd support moving to a Linux Foundation e-mail list. I am also against\n>> google groups. I agree that the gesture of moving indicates that SourceForge\n>> is not playing nice on other issues and that moving this list shows their\n>> behavior is being acknowledged.\n>> \n>> I understand your reason for wanting to delete the Source Forge account\n>> (after reading the links). However, the only problem with that is that the\n>> SourceForge archive is the oldest one I've found with some early messages\n>> from Satoshi. Myself finding Bitcoin after its inception, as well as this\n>> mailing list even later on, it's nice to be able to review the archives.\n>> SourceForge's interface to those archives is pretty bad though. I'm not sure\n>> if there is any way to get older messages archived on sites like gmane or\n>> mail-archive? Does anyone know? You mentioned importing the list archive as\n>> part of the migration plan, but I guess is this easy to do from SourceForge?\n>> \n>> \n>> Andy Schroder\n>> \n>> On 06/14/2015 06:12 AM, Warren Togami Jr. wrote:\n>> \n>> Discomfort with Sourceforge\n>> \n>> For a while now people have been expressing concern about Sourceforge's\n>> continued hosting of the bitcoin-dev mailing list.\u00c2  Downloads were moved\n>> completely to bitcoin.org after the Sept 2014 hacking incident of the SF\n>> project account.\u00c2  The company's behavior and perceived stability have been\n>> growing to be increasingly questionable.\n>> \n>> \n>> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_dodgy_ads_and_installer\n>> \n>> November 2013: GIMP flees SourceForge over dodgy ads and installer\n>> \n>> https://lwn.net/Articles/646118/\n>> \n>> May 28th, 2015: SourceForge replacing GIMP Windows downloads\n>> \n>> http://seclists.org/nmap-dev/2015/q2/194\n>> \n>> June 3rd, 2015: Sourceforge hijacked nmap's old site and downloads.\n>> \n>> \n>> When this topic came up over the past two years, it seemed that most people\n>> agreed it would be a good idea to move.\u00c2  Someone always suggests Google\n>> Groups as the replacement host.\u00c2  Google is quickly shot down as too\n>> controversial in this community, and it becomes an even more difficult\n>> question as to who else should host it.\u00c2  Realizing this is not so simple,\n>> discussion then dies off until the next time somebody brings it up.\n>> \n>> \n>> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/1943127.DBnVxmfOIh%401337h4x0r/#msg34192607\n>> \n>> Somebody brought it up again this past week.\n>> \n>> \n>> It seems logical that an open discussion list is not a big deal to continue\n>> to be hosted on Sourceforge, as there isn\u00e2\u20ac\u2122t much they could do to screw it\n>> up.\u00c2  I personally think moving it away now would be seen as a gesture that\n>> we do not consider their behavior to be acceptable.\u00c2  There are also some\n>> benefits in being hosted elsewhere, at an entity able to professionally\n>> maintain their infrastructure while also being neutral to the content.\n>> \n>> \n>> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity\n>> \n>> \n>> Bitcoin is a global infrastructure development project where it would be\n>> politically awkward for any of the existing Bitcoin companies or orgs to\n>> host due to questions it would raise about perceived political control.\u00c2\n>> For example, consider a bizarro parallel universe where MtGox was the\n>> inventor of Bitcoin, where they hosted its development infrastructure and\n>> dev list under their own name.\u00c2  Even if what they published was 100%\n>> technically and ideologically equivalent to the Bitcoin we know in our\n>> dimension, most people wouldn't have trusted it merely due to appearances\n>> and it would have easily gone nowhere.\n>> \n>> \n>> I had a similar thought process last week when sidechains code was\n>> approaching release. Sidechains, like Bitcoin itself, are intended to be a\n>> generic piece of infrastructure (like ethernet?) that anyone can build upon\n>> and use.\u00c2  We thought about Google Groups or existing orgs that already host\n>> various open source infrastructure discussion lists like the IETF or the\n>> Linux Foundation.\u00c2  Google is too controversial in this community, and the\n>> IETF is seen as possibly too politically fractured.\u00c2  The Linux Foundation\n>> hosts a bunch of infrastructure lists and it seems that nobody in the Open\n>> Source industry considers them to be particularly objectionable.\u00c2  I talked\n>> with LF about the idea of hosting generic Bitcoin-related infrastructure\n>> development lists.\u00c2  They agreed as OSS infrastructure dev is already within\n>> their charter, so early this week sidechains-dev list began hosting there.\n>> \n>> \n>> From the perspective of our community, for bitcoin-dev it seems like a great\n>> fit.\u00c2  Why?\u00c2  While they are interested in supporting general open source\n>> development, the LF has literally zero stake in this.\u00c2  In addition to\n>> neutrality, they seem to be suitable as a competent host.\u00c2  They have\n>> full-time sysadmins maintaining their infrastructure including the Mailman\n>> server. They are soon upgrading to Mailman 3, which means mailing lists\n>> would benefit from the improved archive browser.\u00c2  I am not personally\n>> familiar with HyperKitty, but the point here is they are a stable non-profit\n>> entity who will competently maintain and improve things like their Mailman\n>> deployment (a huge improvement over the stagnant Sourceforge).\u00c2  It seems\n>> that LF would be competent, neutral place to host dev lists for the\n>> long-term.\n>> \n>> \n>> To be clear, this proposal is only about hosting the discussion list.\u00c2  The\n>> LF would have no control over the Bitcoin Project, as no single entity\n>> should.\n>> \n>> \n>> Proposed Action Plan\n>> \n>> \n>> Discuss this openly within this community.\u00c2  Above is one example of a great\n>> neutral and competent host.\u00c2  If the technical leaders here can agree to\n>> move to a particular neutral host then we do it.\n>> \n>> Migration: The current list admins become the new list admins.\u00c2  We import\n>> the entire list archive into the new host's archives for user convenience.\n>> \n>> http://sourceforge.net/p/bitcoin/mailman/ \u00c2 Kill bitcoin-list and\n>> bitcoin-test.\u00c2  Very few people actually use it.\u00c2  Actually, let's delete\n>> the entire Bitcoin Sourceforge project as its continued existence serves no\n>> purpose and it only confuses people who find it.\u00c2  By deletion, nobody has\n>> to monitor it for a repeat of the Sept 2014 hacking incident or GIMP-type\n>> hijacking?\n>> \n>> The toughest question would be the appropriateness of auto-importing the\n>> subscriber list to another list server, as mass imports have a tendency to\n>> upset people.\n>> \n>> \n>> Thoughts?\n>> \n>> \n>> Warren Togami\n>> \n>> \n>> ------------------------------------------------------------------------------\n>> \n>> \n>> \n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n>> \n>> \n>> ------------------------------------------------------------------------------\n>> \n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/7a01af58/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-14T21:54:36",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI fully agree and support this idea.\n\nSome recent discussion on social media which touches on this very\nsubject of bitcoin and sourceforge.... (I include nmap and gittorrent\nas well because those seem relevant, imho)\n\nhttps://twitter.com/jgarzik/status/607750046021357568\n\nhttps://twitter.com/nmap/status/608418994236891137\n\nhttps://twitter.com/ktorn/status/607818378531631106\n\nhttps://twitter.com/ktorn/status/607822900331020288\n\nOn 06/14/2015 03:12 AM, Warren Togami Jr. wrote:\n> Discomfort with Sourceforge\n> \n> For a while now people have been expressing concern about\n> Sourceforge's continued hosting of the bitcoin-dev mailing list.\n> Downloads were moved completely to bitcoin.org <http://bitcoin.org>\n> after the Sept 2014 hacking incident of the SF project account.\n> The company's behavior and perceived stability have been growing to\n> be increasingly questionable.\n> \n> \n> http://www.theregister.co.uk/2013/11/08/gimp_dumps_sourceforge_over_do\ndgy_ads_and_installer\n>\n>  November 2013: GIMP flees SourceForge over dodgy ads and\n> installer\n> \n> https://lwn.net/Articles/646118/\n> \n> May 28th, 2015: SourceForge replacing GIMP Windows downloads\n> \n> http://seclists.org/nmap-dev/2015/q2/194\n> \n> June 3rd, 2015: Sourceforge hijacked nmap's old site and\n> downloads.\n> \n> \n> When this topic came up over the past two years, it seemed that\n> most people agreed it would be a good idea to move.  Someone always\n> suggests Google Groups as the replacement host.  Google is quickly\n> shot down as too controversial in this community, and it becomes an\n> even more difficult question as to who else should host it.\n> Realizing this is not so simple, discussion then dies off until the\n> next time somebody brings it up.\n> \n> \n> http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/thread/19\n43127.DBnVxmfOIh%401337h4x0r/#msg34192607\n>\n>  Somebody brought it up again this past week.\n> \n> \n> It seems logical that an open discussion list is not a big deal to \n> continue to be hosted on Sourceforge, as there isn\u2019t much they\n> could do to screw it up.  I personally think moving it away now\n> would be seen as a gesture that we do not consider their behavior\n> to be acceptable. There are also some benefits in being hosted\n> elsewhere, at an entity able to professionally maintain their\n> infrastructure while also being neutral to the content.\n> \n> \n> Proposal: Move Bitcoin Dev List to a Neutral Competent Entity\n> \n> \n> Bitcoin is a global infrastructure development project where it\n> would be politically awkward for any of the existing Bitcoin\n> companies or orgs to host due to questions it would raise about\n> perceived political control. For example, consider a bizarro\n> parallel universe where MtGox was the inventor of Bitcoin, where\n> they hosted its development infrastructure and dev list under their\n> own name.  Even if what they published was 100% technically and\n> ideologically equivalent to the Bitcoin we know in our dimension,\n> most people wouldn't have trusted it merely due to appearances and\n> it would have easily gone nowhere.\n> \n> \n> I had a similar thought process last week when sidechains code was \n> approaching release. Sidechains, like Bitcoin itself, are intended\n> to be a generic piece of infrastructure (like ethernet?) that\n> anyone can build upon and use.  We thought about Google Groups or\n> existing orgs that already host various open source infrastructure\n> discussion lists like the IETF or the Linux Foundation.  Google is\n> too controversial in this community, and the IETF is seen as\n> possibly too politically fractured. The Linux Foundation hosts a\n> bunch of infrastructure lists \n> <https://lists.linuxfoundation.org/mailman/listinfo>and it seems\n> that nobody in the Open Source industry considers them to be\n> particularly objectionable.  I talked with LF about the idea of\n> hosting generic Bitcoin-related infrastructure development lists.\n> They agreed as OSS infrastructure dev is already within their\n> charter, so early this week sidechains-dev list began hosting\n> there.\n> \n> \n> From the perspective of our community, for bitcoin-dev it seems\n> like a great fit.  Why?  While they are interested in supporting\n> general open source development, the LF has literally zero stake in\n> this.  In addition to neutrality, they seem to be suitable as a\n> competenthost. They have full-time sysadmins maintaining their\n> infrastructure including the Mailman server. They are soon\n> upgrading to Mailman 3 <http://wiki.list.org/Mailman3>, which means\n> mailing lists would benefit from the improved archive browser.  I\n> am not personally familiar with HyperKitty, but the point here is\n> they are a stable non-profit entity who will competently maintain\n> and improve things like their Mailman deployment (a huge\n> improvement over the stagnant Sourceforge).  It seems that LF would\n> be competent, neutral place to host dev lists for the long-term.\n> \n> \n> To be clear, this proposal is only about hosting the discussion\n> list. The LF would have no control over the Bitcoin Project, as no\n> single entity should.\n> \n> \n> Proposed Action Plan\n> \n> \n> *\n> \n> Discuss this openly within this community.  Above is one example\n> of a great neutral and competent host.  If the technical leaders\n> here can agree to move to a particular neutral host then we do it.\n> \n> *\n> \n> Migration: The current list admins become the new list admins.  We \n> import the entire list archive into the new host's archives for\n> user convenience.\n> \n> *\n> \n> http://sourceforge.net/p/bitcoin/mailman/  Kill bitcoin-list and \n> bitcoin-test.  Very few people actually use it.  Actually, let's \n> delete the entire Bitcoin Sourceforge project as its continued \n> existence serves no purpose and it only confuses people who find \n> it.  By deletion, nobody has to monitor it for a repeat of the\n> Sept 2014 hacking incident \n> <https://www.phoronix.com/scan.php?page=news_item&px=MTc4Mzg>or \n> GIMP-type hijacking <https://lwn.net/Articles/646118/>?\n> \n> *\n> \n> The toughest question would be the appropriateness of\n> auto-importing the subscriber list to another list server, as mass\n> imports have a tendency to upset people.\n> \n> \n> Thoughts?\n> \n> \n> Warren Togami\n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVffgcAAoJEGxwq/inSG8COOsH/jC5TAjec1ridg9Ww/1+SW26\nQvTaZ79PrK4+/5rvt3qXtCicOidGLTGpk/ixrgVN64nOiquaQm8JM/BrOrtZbYN0\n/lXjhR6N8AEKYYvtjCQdD/JjNZ8Z0QvRZ4+XKUblBagm4BkRt4OtaVkctechscbM\nWiMh+SfUPPlGiuucotiBFliF4TprFTCw0w/+WY521yKE5qgTPc6ZKBHI5TzYROoF\naAz7i6GlAZR0qlbV91IzakszZWF/Im6KHG30CYbU4eTb6Ic9tVHogC2EuW2zePd3\nNxRXE4M0FunnVX61Eg3Bglm73h6SuzsL9x79Ckp0UXpZ8sJ7+mYCDKTZSUEWeJs=\n=Xje2\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-14T22:38:51",
                "message_text_only": "On Sun, Jun 14, 2015 at 10:12 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:\n> From the perspective of our community, for bitcoin-dev it seems like a great\n> fit.  Why?  While they are interested in supporting general open source\n> development, the LF has literally zero stake in this.  In addition to\n> neutrality, they seem to be suitable as a competent host.  They have\n\nI support this proposal.\n\nBut for clarity sake, we should recognize that Linux Foundation isn't\na charity chartered to act in the public good, is a trade organization\nwhich acts in the commercial interest of it's membership.\n\nI do not think this presents a problem: LF's membership's interests\nare not at odds with ours currently, and aren't likely to become so\n(doubly so with sourceforge as the comparison point). We are, after\nall, just talking about a development mailing list; in the unlikely\ncase that there were issues in the future it could be changed, and\nthey've demonstrated considerable competence at this kind of operation\nas well, and I would be grateful to have their support.  I mention it\nonly because the 'foundation' name sometimes carries the charity\nconfusion, and to be clear that I think the stakes on this matter are\nsmall enough that it doesn't require a careful weighing of interests.\nThese concerns may matter for other initiatives but as you note, LF\nhas zero stake beyond the general support of the open source\necosystem.\n\nI do not believe it would be wise to delete the SF account, at least\nwhile there are many active links to it. As it might well be recreated\nto 'mirror' things as a 'service' to those following the old links.\n\nI also agree with Jeff's comments wrt, bitcoin-security."
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T10:13:32",
                "message_text_only": "Bear in mind the problem that stops Jeff's messages getting through is that\nmailman 1.0 doesn't know how to handle DKIM properly. Switching to a\ndifferent mailman provider won't fix that.\n\nDoes mailman 3.0 even fix this? I found it difficult to tell from their\nwebsite. There's a big page on the mailman wiki that suggests they \"fixed\"\nit by simply deleting the signatures entirely, which won't work. DMARC\npolicies state that mail *must* be signed and unsigned/incorrectly signed\nmessage should be discarded.\n\nThe user documentation for mailman 3 doesn't seem to exist? The links on\nthe website are docs for 2.1, perhaps they released mailman 3 without\nrefreshing the docs.\n\nGoogle Groups may be \"controversial\" but if I recall correctly the main\nissue was the question of whether you needed a Google account or not. I'm\npretty sure you can just send an email to\ngroupname+subscribe at googlegroups.com even if you don't have a Google\naccount. But of course this is a bizarre standard to hold mailing list\nsoftware to: mailman asks users to create an account for each listserv in\norder to manage a subscription too!\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/1ada10c5/attachment.html>"
            },
            {
                "author": "Adam Weiss",
                "date": "2015-06-15T19:45:38",
                "message_text_only": "Recent versions of mailman strip DKIM signatures, rewrite the envelope-from\nto use an address at the list's domain and set reply-to to the original\nauthors address to resolve the DMARC issue.  I'm on several lists that do\nthis and it works just fine.\n\n+1 on moving the list.  Given the fact that the mails are archived in\npublic, it's not really a huge deal how it takes place.  One month sounds\nreasonable (although I think it could be done on a shorter timescale).  I'd\nsetup the new list to allow subscriptions, but keep it moderated to keep\ndiscussion from moving until the cut, send lots of warnings and then on the\nbig day unmoderate one and moderate the other.\n\nIt's a great opportunity to hardfork something in Bitcoin without risk of\nbreakage, losses or entertaining melodrama. : )\n\n--adam\n\nps. I think SF will let project admins download mbox archives of the list,\nthe new admins should be able to import them to keep archive consistency in\none place.\n\n\nOn Mon, Jun 15, 2015 at 6:13 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Bear in mind the problem that stops Jeff's messages getting through is\n> that mailman 1.0 doesn't know how to handle DKIM properly. Switching to a\n> different mailman provider won't fix that.\n>\n> Does mailman 3.0 even fix this? I found it difficult to tell from their\n> website. There's a big page on the mailman wiki that suggests they \"fixed\"\n> it by simply deleting the signatures entirely, which won't work. DMARC\n> policies state that mail *must* be signed and unsigned/incorrectly signed\n> message should be discarded.\n>\n> The user documentation for mailman 3 doesn't seem to exist? The links on\n> the website are docs for 2.1, perhaps they released mailman 3 without\n> refreshing the docs.\n>\n> Google Groups may be \"controversial\" but if I recall correctly the main\n> issue was the question of whether you needed a Google account or not. I'm\n> pretty sure you can just send an email to\n> groupname+subscribe at googlegroups.com even if you don't have a Google\n> account. But of course this is a bizarre standard to hold mailing list\n> software to: mailman asks users to create an account for each listserv in\n> order to manage a subscription too!\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3f3331c5/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-15T20:50:36",
                "message_text_only": "On Mon, Jun 15, 2015 at 9:45 PM, Adam Weiss <adam at signal11.com> wrote:\n\n> ps. I think SF will let project admins download mbox archives of the list,\n> the new admins should be able to import them to keep archive consistency in\n> one place.\n>\n\nThat seems to be right. I just downloaded the entire archive of this list\n(64 Mbyte, took a few seconds).\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/7df40d22/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Proposal: Move Bitcoin Dev List to a Neutral Competent Entity",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "odinn",
                "Adam Weiss",
                "Warren Togami Jr.",
                "Adam Back",
                "Mike Hearn",
                "Davide Cavion",
                "Peter Todd",
                "Gregory Maxwell",
                "Pieter Wuille",
                "Andy Schroder",
                "grarpamp"
            ],
            "messages_count": 16,
            "total_messages_chars_count": 64430
        }
    },
    {
        "title": "[Bitcoin-development] comments on BIP 100",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2015-06-14T21:23:55",
                "message_text_only": "Hi\n\nI made these comments elsewhere, but I think really we should be\nhaving these kind of conversations here rather than scattered around.\n\nThese are about Jeff Garzik's outline draft BIP 100 I guess this is\nthe latest draft:  (One good thing about getting off SF would be\nfinally JGarzik's emails actually not getting blocked!).\n\nhttp://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n\nmay have changed since the original [1]\n\nOver the original proposal:\n\n1. there should be a hard cap, not indefinitely growing.\n\n2. there should be  a growth limiter (no more than X%/year)\n\n3. I think the miners should not be given a vote that has no costs to\ncast, because their interests are not necessarily aligned with users\nor businesses.\n\nI think Greg Maxwell's difficulty adjust [2] is better here for that\nreason.  It puts quadratic cost via higher difficulty for miners to\nvote to increase block-size, which miners can profitably do if there\nare transactions with fees available to justify it. There is also the\ngrowth limiter as part of Greg's proposal. [3]\n\nI think bitcoin will have to involve layering models that uplift\nsecurity to higher layers, but preserve security assurances, and\nsmart-contracts even, with protocols that improve the algorithmic\ncomplexity beyond O(n^2) in users, like lightning, and there are\nmultiple other candidates with useful tradeoffs for various use-cases.\n\nOne thing that is concerning is that few in industry seem inclined to\ntake any development initiatives or even integrate a library.  I\nsuppose eventually that problem would self-correct as new startups\nwould make a more scalable wallet and services that are layer2 aware\nand eat the lunch of the laggards.  But it will be helpful if we\nexpose companies to the back-pressure actually implied by an O(n^2)\nscaling protocol and don't just immediately increase the block-size to\nlevels that are dangerous for decentralisation security, as an\ninterventionist subsidy to save them having to do basic integration\nwork.  Otherwise I think whichever any kind of kick the can some 2-5\nyears down the road we consider, we risk the whole saga repeating in a\nfew years, when no algorithmic progress has been made and even more\nprotocol inertia has set in.\n\nAdam\n\n[1] original proposal comments on reddit\nhttps://www.reddit.com/r/Bitcoin/comments/39kzyt/draft_bip_100_soft_fork_block_size_increase/\n\n[2] flexcap propoal by Greg Maxwell see post by Mark Freidenbach\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07599.html\n\n[3] growth limited proposal for flexcap by Greg Maxwell\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07620.html"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-14T22:23:44",
                "message_text_only": ">\n> One thing that is concerning is that few in industry seem inclined to\n> take any development initiatives or even integrate a library.\n\n\nUm, you mean except all the people who have built more scalable wallets\nover the past few years, which is the only reason anyone can even use\nBitcoin from their phone? Or maybe you mean initiatives like Lightning ....\nexcept StrawPay already developed something similar to the Lightning\nnetwork (complete with a working GUI wallet) and were ignored by\nBlockstream as you prefer to write your own from scratch?\n\nSure, people in the industry take development initiatives. That doesn't\nmean their work will be recognised on this mailing list.\n\n\n> I suppose eventually that problem would self-correct as new startups would\n> make a more scalable wallet and services that are layer2 aware and eat the\n> lunch of the laggards.\n\n\n\"The laggards\" being *everyone* who has already invested in building\nBitcoin software so far. Not a great way to frame things. Many of those\n\"laggards\" have written orders of magnitude more code than you or Gregory\nor Jeff, for instance.\n\nI still think you guys don't recognise what you are actually asking for\nhere - scrapping virtually the entire existing investment in software,\nwallets and tools.\n\n\n> But it will be helpful if we expose companies to the back-pressure\n> actually implied by an O(n^2) scaling protocol and don't just immediately\n> increase the block-size to levels that are dangerous for decentralisation\n> security\n\n\nBitcoin does not have n-squared scaling. I really don't get where this idea\ncomes from. Computational complexity for the entire network is O(nm) where\nn=transactions and m=fully validating nodes. There is no fixed\nrelationships between those two variables.\n\n\"Exposing the companies to back-pressure\" sounds quite nice and gentle. Let\nme rephrase it to be equivalent but perhaps more direct: you mean \"breaking\nthe current software ecosystem to force people into a new, fictional system\nthat bears little resemblance to the Bitcoin we use today, whether they\nwant that or not\".\n\nAs nothing that has been proposed so far (Lightning, merge mined chains,\nextension blocks etc) has much chance of actual deployment any time soon,\nthat leaves raising the block size limit as the only possible path left.\nWhich is why there will soon be a fork that does it.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/a4acdd2d/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-14T23:58:10",
                "message_text_only": "Hi Mike\n\nOn 15 June 2015 at 00:23, Mike Hearn <mike at plan99.net> wrote:\n>> One thing that is concerning is that few in industry seem inclined to\n>> take any development initiatives or even integrate a library.\n>\n> Um, you mean except all the people who have built more scalable wallets over\n> the past few years, which is the only reason anyone can even use Bitcoin\n> from their phone?\n\nNo slight intended obviously to people who do write actual client code.\n\nThat was probably insufficiently specific, let me rephrase: I am\nreferring to the trend that much of the industry is built on web2.0\ntechnology using bitcoin via a library in a web scripting language,\noften with consensus bugs, and even outsourcing and not even running\ntheir own full node, so that the service itself offered to their users\nisn't even SPV secure to the operator.  As well as being heavily based\non a third-party custody model that is the root cause of the repeated\nwallet breaches.  Some of these companies have a noted tendency not to\nupgrade or fix code.\n\nSo I mean this not to call out specific companies, but in the sense\nthat if we're technologists we should be trying to move the technology\nforward, not just changing parameters which run into an O(n^2) scaling\nwall or break decentralisation security.  And we shouldnt take the\nabove state of affairs as an immutable reality.  It can not persist\nfor bitcoin to reach maturity on scale nor security.\n\n> I still think you guys don't recognise what you are actually asking for here\n> - scrapping virtually the entire existing investment in software, wallets\n> and tools.\n\nAs I said I dont think we can expect Bitcoin to scale with no further\nalgorithmic improvements.  Algorithmic improvements take code.  There\nis reasonable scope to build in an incrementally deployable way,\nthere's plenty of time for people to code, test and opt-in to things,\nthe sky is not falling.  Companies do care about scaling, and can\ninvest in the integration and coding implied to improve their products\nscalability, they have an economic incentive to do it and there is no\nscalable and safe way todo it without this work.\n\n> Computational complexity for the entire network is O(nm) where\n> n=transactions and m=fully validating nodes. There is no fixed relationships\n> between those two variables.\n\nI am referring to global bandwidth O(n^2) with n=users, or O(n) per\nuser bandwidth cost to the system, while O(nm) is accurate nodes is an\ninternal system concept.  Anyway suffice to say the network does not\nscale O(1) in per user cost.\n\n> \"Exposing the companies to back-pressure\" sounds quite nice and gentle. Let\n> me rephrase it to be equivalent but perhaps more direct: you mean \"breaking\n> the current software ecosystem to force people into a new, fictional system\n> that bears little resemblance to the Bitcoin we use today, whether they want\n> that or not\".\n>\n> As nothing that has been proposed so far (Lightning, merge mined chains,\n> extension blocks etc) has much chance of actual deployment any time soon,\n> that leaves raising the block size limit as the only possible path left.\n\nA hard-fork takes a long period of time to deploy due to the\nnon-upgrade risk, people are working on things in the mean-time.\nThere can be a case for some increase to create some breathing room to\nwork on scaling and decentralising tech, I just mean to say that if we\ndo it in isolation, we're not focussing on the big picture.\n\nAdam"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-15T00:53:05",
                "message_text_only": "I think the whole complexity talk is missing the bigger issue.\n\nSure, per block validation scales linearly (or quasilinearly\u2026there\u2019s an O(log n) term in there somewhere but it\u2019s probably dominated by linear factors at current levels\u2026asymptotic limits don\u2019t always apply very well to finite systems). And there\u2019s an O(n^2) bandwidth issue.\n\nThe real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.\n\nA full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful\u2026even for those of us who\u2019ve turned this into routine by now, let alone new nontechnical users.\n\nSatoshi\u2019s SPV is not a real solution - it\u2019s a mere suggestion that wasn\u2019t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially\u2026and the worst part, it still doesn\u2019t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).\n\nSo yes, we will most certainly need algorithmic improvements!\n\n- Eric Lombrozo\n\n\n> On Jun 14, 2015, at 4:58 PM, Adam Back <adam at cypherspace.org> wrote:\n> \n> Hi Mike\n> \n> On 15 June 2015 at 00:23, Mike Hearn <mike at plan99.net> wrote:\n>>> One thing that is concerning is that few in industry seem inclined to\n>>> take any development initiatives or even integrate a library.\n>> \n>> Um, you mean except all the people who have built more scalable wallets over\n>> the past few years, which is the only reason anyone can even use Bitcoin\n>> from their phone?\n> \n> No slight intended obviously to people who do write actual client code.\n> \n> That was probably insufficiently specific, let me rephrase: I am\n> referring to the trend that much of the industry is built on web2.0\n> technology using bitcoin via a library in a web scripting language,\n> often with consensus bugs, and even outsourcing and not even running\n> their own full node, so that the service itself offered to their users\n> isn't even SPV secure to the operator.  As well as being heavily based\n> on a third-party custody model that is the root cause of the repeated\n> wallet breaches.  Some of these companies have a noted tendency not to\n> upgrade or fix code.\n> \n> So I mean this not to call out specific companies, but in the sense\n> that if we're technologists we should be trying to move the technology\n> forward, not just changing parameters which run into an O(n^2) scaling\n> wall or break decentralisation security.  And we shouldnt take the\n> above state of affairs as an immutable reality.  It can not persist\n> for bitcoin to reach maturity on scale nor security.\n> \n>> I still think you guys don't recognise what you are actually asking for here\n>> - scrapping virtually the entire existing investment in software, wallets\n>> and tools.\n> \n> As I said I dont think we can expect Bitcoin to scale with no further\n> algorithmic improvements.  Algorithmic improvements take code.  There\n> is reasonable scope to build in an incrementally deployable way,\n> there's plenty of time for people to code, test and opt-in to things,\n> the sky is not falling.  Companies do care about scaling, and can\n> invest in the integration and coding implied to improve their products\n> scalability, they have an economic incentive to do it and there is no\n> scalable and safe way todo it without this work.\n> \n>> Computational complexity for the entire network is O(nm) where\n>> n=transactions and m=fully validating nodes. There is no fixed relationships\n>> between those two variables.\n> \n> I am referring to global bandwidth O(n^2) with n=users, or O(n) per\n> user bandwidth cost to the system, while O(nm) is accurate nodes is an\n> internal system concept.  Anyway suffice to say the network does not\n> scale O(1) in per user cost.\n> \n>> \"Exposing the companies to back-pressure\" sounds quite nice and gentle. Let\n>> me rephrase it to be equivalent but perhaps more direct: you mean \"breaking\n>> the current software ecosystem to force people into a new, fictional system\n>> that bears little resemblance to the Bitcoin we use today, whether they want\n>> that or not\".\n>> \n>> As nothing that has been proposed so far (Lightning, merge mined chains,\n>> extension blocks etc) has much chance of actual deployment any time soon,\n>> that leaves raising the block size limit as the only possible path left.\n> \n> A hard-fork takes a long period of time to deploy due to the\n> non-upgrade risk, people are working on things in the mean-time.\n> There can be a case for some increase to create some breathing room to\n> work on scaling and decentralising tech, I just mean to say that if we\n> do it in isolation, we're not focussing on the big picture.\n> \n> Adam\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/22d4865e/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-15T00:55:07",
                "message_text_only": "> On Jun 14, 2015, at 5:53 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n> I think the whole complexity talk is missing the bigger issue.\n> \n> Sure, per block validation scales linearly (or quasilinearly\u2026there\u2019s an O(log n) term in there somewhere but it\u2019s probably dominated by linear factors at current levels\u2026asymptotic limits don\u2019t always apply very well to finite systems). And there\u2019s an O(n^2) bandwidth issue.\n\nFor accuracy\u2019s sake, I meant to say O(n log n).\n\n> \n> The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.\n> \n> A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful\u2026even for those of us who\u2019ve turned this into routine by now, let alone new nontechnical users.\n> \n> Satoshi\u2019s SPV is not a real solution - it\u2019s a mere suggestion that wasn\u2019t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially\u2026and the worst part, it still doesn\u2019t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).\n> \n> So yes, we will most certainly need algorithmic improvements!\n> \n> - Eric Lombrozo\n> \n> \n>> On Jun 14, 2015, at 4:58 PM, Adam Back <adam at cypherspace.org> wrote:\n>> \n>> Hi Mike\n>> \n>> On 15 June 2015 at 00:23, Mike Hearn <mike at plan99.net> wrote:\n>>>> One thing that is concerning is that few in industry seem inclined to\n>>>> take any development initiatives or even integrate a library.\n>>> \n>>> Um, you mean except all the people who have built more scalable wallets over\n>>> the past few years, which is the only reason anyone can even use Bitcoin\n>>> from their phone?\n>> \n>> No slight intended obviously to people who do write actual client code.\n>> \n>> That was probably insufficiently specific, let me rephrase: I am\n>> referring to the trend that much of the industry is built on web2.0\n>> technology using bitcoin via a library in a web scripting language,\n>> often with consensus bugs, and even outsourcing and not even running\n>> their own full node, so that the service itself offered to their users\n>> isn't even SPV secure to the operator.  As well as being heavily based\n>> on a third-party custody model that is the root cause of the repeated\n>> wallet breaches.  Some of these companies have a noted tendency not to\n>> upgrade or fix code.\n>> \n>> So I mean this not to call out specific companies, but in the sense\n>> that if we're technologists we should be trying to move the technology\n>> forward, not just changing parameters which run into an O(n^2) scaling\n>> wall or break decentralisation security.  And we shouldnt take the\n>> above state of affairs as an immutable reality.  It can not persist\n>> for bitcoin to reach maturity on scale nor security.\n>> \n>>> I still think you guys don't recognise what you are actually asking for here\n>>> - scrapping virtually the entire existing investment in software, wallets\n>>> and tools.\n>> \n>> As I said I dont think we can expect Bitcoin to scale with no further\n>> algorithmic improvements.  Algorithmic improvements take code.  There\n>> is reasonable scope to build in an incrementally deployable way,\n>> there's plenty of time for people to code, test and opt-in to things,\n>> the sky is not falling.  Companies do care about scaling, and can\n>> invest in the integration and coding implied to improve their products\n>> scalability, they have an economic incentive to do it and there is no\n>> scalable and safe way todo it without this work.\n>> \n>>> Computational complexity for the entire network is O(nm) where\n>>> n=transactions and m=fully validating nodes. There is no fixed relationships\n>>> between those two variables.\n>> \n>> I am referring to global bandwidth O(n^2) with n=users, or O(n) per\n>> user bandwidth cost to the system, while O(nm) is accurate nodes is an\n>> internal system concept.  Anyway suffice to say the network does not\n>> scale O(1) in per user cost.\n>> \n>>> \"Exposing the companies to back-pressure\" sounds quite nice and gentle. Let\n>>> me rephrase it to be equivalent but perhaps more direct: you mean \"breaking\n>>> the current software ecosystem to force people into a new, fictional system\n>>> that bears little resemblance to the Bitcoin we use today, whether they want\n>>> that or not\".\n>>> \n>>> As nothing that has been proposed so far (Lightning, merge mined chains,\n>>> extension blocks etc) has much chance of actual deployment any time soon,\n>>> that leaves raising the block size limit as the only possible path left.\n>> \n>> A hard-fork takes a long period of time to deploy due to the\n>> non-upgrade risk, people are working on things in the mean-time.\n>> There can be a case for some increase to create some breathing room to\n>> work on scaling and decentralising tech, I just mean to say that if we\n>> do it in isolation, we're not focussing on the big picture.\n>> \n>> Adam\n>> \n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/f6fc3e19/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-15T04:11:49",
                "message_text_only": "On Sun, Jun 14, 2015 at 05:53:05PM -0700, Eric Lombrozo wrote:\n> I think the whole complexity talk is missing the bigger issue.\n> \n> Sure, per block validation scales linearly (or quasilinearly\u2026there\u2019s an O(log n) term in there somewhere but it\u2019s probably dominated by linear factors at current levels\u2026asymptotic limits don\u2019t always apply very well to finite systems). And there\u2019s an O(n^2) bandwidth issue.\n> \n> The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.\n\n...and can there be? The goal of validation after all is finding if a\nmistake has been made, and current production cryptography doesn't have\nany way to prove you have done that honestly. You need \"moon math\" like\nrecursive SNARKS to do that, and it's unknown when they'll be available\nfor production usage.\n\nWhen we say \"compensating validators\", if we're being honest with\noutselves what we really mean is the much more boring task of\ncompensating servers who are giving us blockchain data. That has nothing\nto do with validation.\n\nA useful task would be to make an SPV archival node implementation that\ndid no validation at all, while distributing the blockchain data linked\nto the longest chain. Such an implementation can and should serve SPV\nclients, as this is what their actual security model usually is given\nthe lack of authentication of the identity of the server they're\nconnecting too. Actually implementing this would be a simple matter of\npatching Bitcoin Core to turn off block validation.\n\n> A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful\u2026even for those of us who\u2019ve turned this into routine by now, let alone new nontechnical users.\n\nConcretely, 20MB blocks lead to 20GB/week of blocks. On my 1MB/second\ndown internet, turning on my node after a week away would take five\nhours; starting up a new node after two years of 20MB blocks would take\n23 days - likely longer in practice.\n\nThere's serious unsolved and undiscussed devops and development issues\nwith this. For instance, after changes to the validation code, it's\nroutine to resync/reindex Bitcoin Core to ensure starting up a new node\nactually works. Even now we haven't really come to grips with what\nconsistent 1MB blocks looks like from this point of view after a few\nyears of usage, let another order of magnitude longer sync times.\n\n> Satoshi\u2019s SPV is not a real solution - it\u2019s a mere suggestion that wasn\u2019t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially\u2026and the worst part, it still doesn\u2019t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).\n\nNote how with 20MB blocks it would take up to 1TB of IO per year-synced\nfor a bloom-filter-using wallet to sync the blockchain. We already have\na bloom IO DoS attack issue - what are the consequences of making that\nissue 20x worse? Nobody has analysed it yet.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f00945d7/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-15T04:43:09",
                "message_text_only": "> On Jun 14, 2015, at 9:11 PM, Peter Todd <pete at petertodd.org> wrote:\n> \n> On Sun, Jun 14, 2015 at 05:53:05PM -0700, Eric Lombrozo wrote:\n>> I think the whole complexity talk is missing the bigger issue.\n>> \n>> Sure, per block validation scales linearly (or quasilinearly\u2026there\u2019s an O(log n) term in there somewhere but it\u2019s probably dominated by linear factors at current levels\u2026asymptotic limits don\u2019t always apply very well to finite systems). And there\u2019s an O(n^2) bandwidth issue.\n>> \n>> The real issue, though, is validation cost. The n in O(n) here does not represent block size - it represents the size of the entire block chain for every new validator that must be synchronized! It means we have no way to construct short proofs (or at least arguments that are computationally *hard* to forge) without requiring the validator to maintain the complete system state. And currently, there is no mechanism for directly compensating validators.\n> \n> ...and can there be? The goal of validation after all is finding if a\n> mistake has been made, and current production cryptography doesn't have\n> any way to prove you have done that honestly. You need \"moon math\" like\n> recursive SNARKS to do that, and it's unknown when they'll be available\n> for production usage.\n> \n\nWhile things like zero-knowledge and homomorphic encryption would be awesome, they are not really needed to achieve the objective of an efficient proof that is hard to forge with at least a decently thought out security model (i.e. we can make information withholding far more difficult)\u2026and we can dramatically improve search times and local storage requirements by doing some of the things that you\u2019ve actually proposed, Peter, like shifting the responsibility of maintaining and constructing proofs over to transaction senders and committing proof hashes to the global state. At least the incentives would be far better aligned in such a scenario.\n\nHow do we deal with things like the discovery of an invalid proof a couple weeks after it\u2019s already been committed? This is a tricky issue I\u2019ve been giving a lot of thought to recently - but we\u2019ll deal with this topic in a separate thread. :)\n\n> When we say \"compensating validators\", if we're being honest with\n> outselves what we really mean is the much more boring task of\n> compensating servers who are giving us blockchain data. That has nothing\n> to do with validation.\n\nIf we were to shift responsibility of constructing proofs over to transaction senders, today's \u201cvalidators\u201d would indeed become nothing more than compensated servers. Clients would be able to query for proofs and verify them for themselves efficiently.\n\n> A useful task would be to make an SPV archival node implementation that\n> did no validation at all, while distributing the blockchain data linked\n> to the longest chain. Such an implementation can and should serve SPV\n> clients, as this is what their actual security model usually is given\n> the lack of authentication of the identity of the server they're\n> connecting too. Actually implementing this would be a simple matter of\n> patching Bitcoin Core to turn off block validation.\n> \n>> A full validator that goes offline even for a short period of time takes a while to fully catch up to the rest of the network - and starting up a new validator from scratch will continue to be painful\u2026even for those of us who\u2019ve turned this into routine by now, let alone new nontechnical users.\n> \n> Concretely, 20MB blocks lead to 20GB/week of blocks. On my 1MB/second\n> down internet, turning on my node after a week away would take five\n> hours; starting up a new node after two years of 20MB blocks would take\n> 23 days - likely longer in practice.\n> \n> There's serious unsolved and undiscussed devops and development issues\n> with this. For instance, after changes to the validation code, it's\n> routine to resync/reindex Bitcoin Core to ensure starting up a new node\n> actually works. Even now we haven't really come to grips with what\n> consistent 1MB blocks looks like from this point of view after a few\n> years of usage, let another order of magnitude longer sync times.\n> \n\nIt\u2019s a disaster. Even with 1MB blocks this is already the principal centralization pressure on Bitcoin.\n\n>> Satoshi\u2019s SPV is not a real solution - it\u2019s a mere suggestion that wasn\u2019t fully thought out at the time of the Bitcoin white paper. Besides lacking a good validation security model, practical implementations of it weaken privacy and complicate client implementations substantially\u2026and the worst part, it still doesn\u2019t scale all that well. The validator still has to query every single block (even if filtered) back to the first transaction (which cannot be determined without doing a blockchain scan anyway).\n> \n> Note how with 20MB blocks it would take up to 1TB of IO per year-synced\n> for a bloom-filter-using wallet to sync the blockchain. We already have\n> a bloom IO DoS attack issue - what are the consequences of making that\n> issue 20x worse? Nobody has analysed it yet.\n> \n\nWe clearly need better data structures and algorithms. This talk of bigger blocks seems so petty by comparison, TBH.\n\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/909b7912/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T09:27:24",
                "message_text_only": ">\n> That was probably insufficiently specific, let me rephrase: I am\n> referring to the trend that much of the industry is built on web2.0\n> technology using bitcoin via a library in a web scripting language\n\n\nOK, good to hear that. I'm not happy about the use of web technologies in\nwallets/services either, but the causes of that trend are nothing to do\nwith block chain sizes. It's more because there's a generation of\ndevelopers who see no alternatives.\n\nWith projects like Lighthouse, I'm trying to show people that they can\nblend the good bits of the web with the good bits of more traditional\nclient side development, at a cost they can afford.\n\nUnfortunately, as you know, one of the reasons that developers turn to\noutsourced services is that those services actually like developers and\ngive them the features they need. Whereas any attempt to add protocol\nfeatures for app/wallet developers to Bitcoin Core becomes controversial\ndue to some perceived or real lack of perfection.\n\nI persevered for several months to add a very small \"API\" I needed for my\napp to Bitcoin Core, and it was in the end a waste of time. There are no\nactionable items left for the getutxo patch, regardless, I had to fork\nBitcoin to get it out there. It would have been *much* easier to just say,\nfuck it, I'll use blockchain.info and in fact some in this community told\nme to do exactly that. But, the approach I chose has been working fine for\nmonths now.\n\nCompare this experience to companies like chain.com, blockcypher etc - when\ndevelopers say jump, they say \"how high?\"\n\nSo It's unreasonable for the Bitcoin Core developer group to constantly\ncall developers building apps idiots or \"non technical\" (as I see so often\nin this block size debate), and then complain that people don't write apps\nin their preferred way! Just accept that decentralised app dev is already\nhard, and the way Core is run makes it much harder still.\n\n\nAs I said I dont think we can expect Bitcoin to scale with no further\n> algorithmic improvements.\n\n\nA big part of the debate around this change is showing that this statement\nis wrong. \"Scaling\" is not some kind of binary yes/no thing. It's a\ncontinuous effort. You write a system that scales a certain amount, and\nthen if you find you need more capacity, you scale it again. Maybe that\n involves rewriting the existing code or maybe it just means improving what\nyou've got.\n\nOr maybe (painful truth coming up) your product is not that compelling, or\ntimes change and your users leave, and you discover you never actually need\nto scale to the giddy heights originally envisioned.\n\nA big part of the reason modern web dev is so messed up is that lots of\ndevelopers starting thinking every app they built needed to be \"web scale\"\nfrom day one. SQL databases? Pah. Doesn't scale. Think big. We gotta no\nNoSQL sharded key/value store from the start! Otherwise we're just showing\nlack of confidence in our own product.\n\nThen when they used up all their budget solving consistency bugs a\nrelational database would have avoided, they notice their competitors\nsailing past them on a not-fully-scalable but certainly-scalable-enough\narchitecture that let them focus on features and making users happy.\n\n\n\n\n> I am referring to global bandwidth O(n^2) with n=users\n\n\nOK. O() notation normally refers to computational complexity, but ... I\nstill don't get it - the vast majority of users don't run relaying nodes\nthat take part in gossiping. They run web or SPV wallets. And the nodes\nthat do take part don't connect to every other node.\n\n\n\n\n> There can be a case for some increase to create some breathing room to\n> work on scaling and decentralising tech, I just mean to say that if we\n> do it in isolation, we're not focussing on the big picture.\n\n\nAlright - let's agree that we disagree on a few areas, like the relative\ndesirability of alternative non-blockchain designs - but we do seem to\nagree that there is a case for an increase in the block size limit. That\nseems like progress.\n\nAs you agree with that, what sort of schedule and time are you thinking of?\n(well, by \"you\" I really mean blockstream because it's taking forever to\ntry and negotiate with every single person individually).\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/16b45688/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-15T09:39:37",
                "message_text_only": ">OK. O() notation normally refers to computational complexity, but ... I\nstill don't get it - the vast >majority of users don't run relaying nodes\nthat take part in gossiping. They run web or SPV >wallets. And the nodes\nthat do take part don't connect to every other node.\n\nIt's a little scary, IMO, that the fact that the majority of nodes don't\nrelay and only perform the most rudimtentary level of validation if any is\nconsidered an acceptable feature of the protocol.\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8cffee00/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-15T10:24:45",
                "message_text_only": "On Mon, Jun 15, 2015 at 11:27 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> I persevered for several months to add a very small \"API\" I needed for my\n> app to Bitcoin Core, and it was in the end a waste of time. There are no\n> actionable items left for the getutxo patch, regardless, I had to fork\n> Bitcoin to get it out there. It would have been *much* easier to just\n> say, fuck it, I'll use blockchain.info and in fact some in this community\n> told me to do exactly that. But, the approach I chose has been working fine\n> for months now.\n>\n\nSince you keep bringing this up, I'll try to clarify this once again.\n\nSince your patch was to enable querying spentness of particular outputs,\nwhich is fundamentally unprovable data in Bitcoin as is (even your proposed\nprotocol that verifies scripts with amounts under sighash only proves\ncorrectness of the txout data, not its spentness), I indeed don't see why\nyou would want anything else than querying such a service. I wish it were\ndifferent, but the choice is between querying a central service, or\ntrusting something a random peer on the internet tells you. At least with\nthe central service you can use an authenticated protocol with known keys\nto detect MITM, and have someone to point to when they lie.\n\nNot decentralized you say? Absolutely. But why do we want decentralization\nin the first place? To remove central points of failure, and to reduce\ntrust. Bitcoin gets away with decentralization because it can validate (to\nmore or lesser extent) the data it received from its identityless peers. If\nyou can't do that, and are just aiming for removing central points of\nfailure, run a bunch of servers yourself, and let others run their own.\nThat sounds remarkably close to what you actually did, actually...\n\nDo you want actually trustless querying of spentness in the future? Help\nworking on one of the several TXO commitment ideas to get them implemented.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/d1788c2e/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T10:36:35",
                "message_text_only": ">\n> Since you keep bringing this up, I'll try to clarify this once again.\n>\n\nI understand the arguments against it. And I think you are agreeing with me\n- Adam is bemoaning the way developers outsource stuff to third party\nservices, and suggesting it is relevant to the block size debate. And we\nare saying, no, it's happening because it's easier than doing things in a\ndecentralised way.\n\n\n> If you can't do that, and are just aiming for removing central points of\n> failure, run a bunch of servers yourself, and let others run their own.\n> That sounds remarkably close to what you actually did, actually...\n>\n\nRight. There's a deeper issue here. The sort of 'trustless' querying of the\nUTXO set that was demanded from me is impossible even with commitments,\nbecause the answer can change the moment you receive it. All it takes is a\nnew block or new transaction to be broadcast a split second after you\ndownload and use the data, and suddenly what you did is incorrect no matter\nhow many proofs you verified!\n\nThe only way to know this has happened is to be a full node and download\nall transactions yourself ... and even then, you are trusting your peers to\nactually relay you all transactions and not a subset. So in the end you can\nnever achieve perfection, only get closer to it.\n\nBut that situation is *fine* for many use cases, like showing someone a\nsnapshot of their crowdfund in a user interface. We just accept that what\nwe see on the screen may lag behind reality. It happens all the time with\nall kinds of non-Bitcoin apps. We accept that there may be cases where the\nanswer we get is wrong. The software can nevertheless still be useful.\n\nSo Lighthouse compromises. It queries multiple peers and cross-references\ntheir answers. If their answers don't match it shows an error on the screen\nand won't show the user any status for their crowdfund at all. This error\nhas never occurred. Maybe one day it will. So the app gets more\ndecentralisation, more robustness, and accepts that the user interface\nmight one day show a wrong answer if the P2P network starts lying (or your\ninternet connection is hacked, but the right fix for that is P2P\nencryption).\n\nUnfortunately this sort of balance-of-risks approach is considered a\nnon-starter in Bitcoin Core. So why would developers even try? The message\nsent was clear:  even if you have an approach you think will work, don't\nbother.\n\nMuch easier to just outsource to a trusted service indeed.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4fcbdae8/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-15T10:40:51",
                "message_text_only": "On Mon, Jun 15, 2015 at 12:36 PM, Mike Hearn <mike at plan99.net> wrote:\n\n>\n> Since you keep bringing this up, I'll try to clarify this once again.\n>>\n>\n> I understand the arguments against it. And I think you are agreeing with\n> me - Adam is bemoaning the way developers outsource stuff to third party\n> services, and suggesting it is relevant to the block size debate. And we\n> are saying, no, it's happening because it's easier than doing things in a\n> decentralised way.\n>\n\nThe fact that using a centralized service is easier isn't a good reason\nIMHO. It disregards the long-term, and introduces systemic risk.\n\nBut in cases where using a decentralized approach doesn't *add* anything, I\ncannot reasonably promote it, and that's why I was against getutxos in the\nP2P protocol.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/7121d0a8/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T10:50:47",
                "message_text_only": ">\n> The fact that using a centralized service is easier isn't a good reason\n> IMHO. It disregards the long-term, and introduces systemic risk.\n>\n\nWell sure, that's easy for you to say, but you have a salary :) Other\ndevelopers may find the incremental benefits of decentralisation low vs\nadding additional features, for instance, and who is to say they are wrong?\n\n\n> But in cases where using a decentralized approach doesn't *add* anything,\n> I cannot reasonably promote it, and that's why I was against getutxos in\n> the P2P protocol.\n>\n\nIt does add something though! It means, amongst other things, I can switch\nof all my servers, walk away for good, discard this Mike Hearn pseudonym I\ninvented for Bitcoin and the app will still work :) Surely that is an\nimportant part of being decentralised?\n\nIt also means that as the underlying protocol evolves over time, getutxos\ncan evolve along side it. P2P protocol gets encrypted/authenticated? Great,\none more additional bit of security. If one day miners commit to UTXO sets,\ngreat, one more additional bit of security. When we start including input\nvalues in the signature hash, great ... one more step up in security.\n\nAnyway, I didn't really want to reopen this debate. I just point out that\nthird party services are quite happy to provide whatever developers need to\nbuild great apps, even if doing so fails to meet some kind of perfect\ncryptographic ideal. And that's why they're winning devs.\n\nNow back to your regularly scheduled block size debates ...\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/ebebaacc/attachment.html>"
            },
            {
                "author": "Rebroad (sourceforge)",
                "date": "2015-06-15T11:16:16",
                "message_text_only": "My understanding of this debate is that there are some people who want to\nkeep Bitcoin at 1MB block limit, and there are some who want to increase it.\n\nI for one am curious to see how 1MB limited bitcoin evolves, and I believe\nwe can all have a chance to see this AND hard-fork bitcoin to remove the\nblock size restriction.\n\nTo remove the 1MB limit required a hard fork. This is not disputed. It's\nwhat we do with the original (1MB limit) bitcoin that concerns me (and\nother's I am sure).\n\nWhat I would like to see is both being allowed to live. Harry Potter and\nVoldermort! (Except neither are evil!)\n\nThe solution is to hard-fork and merge-mine. This way, both can live, and\nmining power is not divided.\n\nDogecoin recently hardforked and this hardfork also involved switching to\nmerge-mining, so it's been done successfully.\n\nSo, simply, bitcoin as it is doesn't need to actually fork, but instead, at\na certain block size, a forked bitcoin with the blocksize lmit removed will\nstart to be merge-mined alongside bitcoin. Miners can be ready for this.\nWallets can be ready for this - in fact, for most wallets and merchants\nthey will possibly want to default to the bigger blocksize fork since this\ncaters for more transactions per block.\n\nWe still don't know how removing the block limit will pan out and what\nother problems with scalability will arise in the future, so by preserving\nthe original bitcoin, we keep diversity, and people won't feel their\ninvestments in bitcoin are being unnecessarily put at risk (as their\ninvestments will stay in both the new and the old bitcoin).\n\nThe bitcoin core developers can implement a patch like the one recently\nused for dogecoin, to allow the chain to fork at a set point, where at\nwhich point, bitcoins will be split into the new and the old. Branding will\nbe an important issue here I think, so that there is as little confusion as\npossible. I think this is a small price to pay in return for not killing\nthe original bitcoin (even if it's true that Satoshi did intend to remove\nthe 1MB limit at some point).\n\nIf I'm missing something obvious please let me know.\n\nOn Mon, Jun 15, 2015 at 1:50 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> The fact that using a centralized service is easier isn't a good reason\n>> IMHO. It disregards the long-term, and introduces systemic risk.\n>>\n>\n> Well sure, that's easy for you to say, but you have a salary :) Other\n> developers may find the incremental benefits of decentralisation low vs\n> adding additional features, for instance, and who is to say they are wrong?\n>\n>\n>> But in cases where using a decentralized approach doesn't *add* anything,\n>> I cannot reasonably promote it, and that's why I was against getutxos in\n>> the P2P protocol.\n>>\n>\n> It does add something though! It means, amongst other things, I can switch\n> of all my servers, walk away for good, discard this Mike Hearn pseudonym I\n> invented for Bitcoin and the app will still work :) Surely that is an\n> important part of being decentralised?\n>\n> It also means that as the underlying protocol evolves over time, getutxos\n> can evolve along side it. P2P protocol gets encrypted/authenticated? Great,\n> one more additional bit of security. If one day miners commit to UTXO sets,\n> great, one more additional bit of security. When we start including input\n> values in the signature hash, great ... one more step up in security.\n>\n> Anyway, I didn't really want to reopen this debate. I just point out that\n> third party services are quite happy to provide whatever developers need to\n> build great apps, even if doing so fails to meet some kind of perfect\n> cryptographic ideal. And that's why they're winning devs.\n>\n> Now back to your regularly scheduled block size debates ...\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/d3986cae/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-15T17:53:17",
                "message_text_only": "> The solution is to hard-fork and merge-mine. This way, both can live, and mining power is not divided.\n\nNo, this would essentially be blessing an increase to 42M bitcoins, half on each chain.  You could expect a severe market price correction if this were to happen.\n\nFrom: Rebroad (sourceforge) \nSent: Monday, June 15, 2015 4:16 AM\nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] comments on BIP 100\n\nMy understanding of this debate is that there are some people who want to keep Bitcoin at 1MB block limit, and there are some who want to increase it. \n\nI for one am curious to see how 1MB limited bitcoin evolves, and I believe we can all have a chance to see this AND hard-fork bitcoin to remove the block size restriction.\n\nTo remove the 1MB limit required a hard fork. This is not disputed. It's what we do with the original (1MB limit) bitcoin that concerns me (and other's I am sure).\n\nWhat I would like to see is both being allowed to live. Harry Potter and Voldermort! (Except neither are evil!)\n\nThe solution is to hard-fork and merge-mine. This way, both can live, and mining power is not divided.\n\nDogecoin recently hardforked and this hardfork also involved switching to merge-mining, so it's been done successfully.\n\nSo, simply, bitcoin as it is doesn't need to actually fork, but instead, at a certain block size, a forked bitcoin with the blocksize lmit removed will start to be merge-mined alongside bitcoin. Miners can be ready for this. Wallets can be ready for this - in fact, for most wallets and merchants they will possibly want to default to the bigger blocksize fork since this caters for more transactions per block.\n\nWe still don't know how removing the block limit will pan out and what other problems with scalability will arise in the future, so by preserving the original bitcoin, we keep diversity, and people won't feel their investments in bitcoin are being unnecessarily put at risk (as their investments will stay in both the new and the old bitcoin).\n\nThe bitcoin core developers can implement a patch like the one recently used for dogecoin, to allow the chain to fork at a set point, where at which point, bitcoins will be split into the new and the old. Branding will be an important issue here I think, so that there is as little confusion as possible. I think this is a small price to pay in return for not killing the original bitcoin (even if it's true that Satoshi did intend to remove the 1MB limit at some point).\n\nIf I'm missing something obvious please let me know.\n\nOn Mon, Jun 15, 2015 at 1:50 PM, Mike Hearn <mike at plan99.net> wrote:\n\n    The fact that using a centralized service is easier isn't a good reason IMHO. It disregards the long-term, and introduces systemic risk.\n\n\n  Well sure, that's easy for you to say, but you have a salary :) Other developers may find the incremental benefits of decentralisation low vs adding additional features, for instance, and who is to say they are wrong?\n\n    But in cases where using a decentralized approach doesn't *add* anything, I cannot reasonably promote it, and that's why I was against getutxos in the P2P protocol.\n\n\n  It does add something though! It means, amongst other things, I can switch of all my servers, walk away for good, discard this Mike Hearn pseudonym I invented for Bitcoin and the app will still work :) Surely that is an important part of being decentralised?\n\n  It also means that as the underlying protocol evolves over time, getutxos can evolve along side it. P2P protocol gets encrypted/authenticated? Great, one more additional bit of security. If one day miners commit to UTXO sets, great, one more additional bit of security. When we start including input values in the signature hash, great ... one more step up in security.\n\n  Anyway, I didn't really want to reopen this debate. I just point out that third party services are quite happy to provide whatever developers need to build great apps, even if doing so fails to meet some kind of perfect cryptographic ideal. And that's why they're winning devs.\n\n  Now back to your regularly scheduled block size debates ... \n\n  ------------------------------------------------------------------------------\n\n  _______________________________________________\n  Bitcoin-development mailing list\n  Bitcoin-development at lists.sourceforge.net\n  https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n\n\n--------------------------------------------------------------------------------\n------------------------------------------------------------------------------\n\n\n\n--------------------------------------------------------------------------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/aa747543/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-15T18:14:56",
                "message_text_only": "I think he's more talking about like extension-blocks, however they\nare actually soft-forkable even (and keep the 21m coins obviously)\n\nSee  See https://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07937.html\n\nand Tier Nolan tech detail\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07927.html\n\nDiscussion / claimed properties on\n\nhttps://www.reddit.com/r/Bitcoin/comments/39kqzs/how_about_a_softfork_optin_blocksize_increase/\n\nAdam\n\nOn 15 June 2015 at 19:53, Raystonn . <raystonn at hotmail.com> wrote:\n>> The solution is to hard-fork and merge-mine. This way, both can live, and\n>> mining power is not divided.\n>\n> No, this would essentially be blessing an increase to 42M bitcoins, half on\n> each chain.  You could expect a severe market price correction if this were\n> to happen.\n>\n> From: Rebroad (sourceforge)\n> Sent: Monday, June 15, 2015 4:16 AM\n> Cc: Bitcoin Dev\n> Subject: Re: [Bitcoin-development] comments on BIP 100\n>\n> My understanding of this debate is that there are some people who want to\n> keep Bitcoin at 1MB block limit, and there are some who want to increase it.\n>\n> I for one am curious to see how 1MB limited bitcoin evolves, and I believe\n> we can all have a chance to see this AND hard-fork bitcoin to remove the\n> block size restriction.\n>\n> To remove the 1MB limit required a hard fork. This is not disputed. It's\n> what we do with the original (1MB limit) bitcoin that concerns me (and\n> other's I am sure).\n>\n> What I would like to see is both being allowed to live. Harry Potter and\n> Voldermort! (Except neither are evil!)\n>\n> The solution is to hard-fork and merge-mine. This way, both can live, and\n> mining power is not divided.\n>\n> Dogecoin recently hardforked and this hardfork also involved switching to\n> merge-mining, so it's been done successfully.\n>\n> So, simply, bitcoin as it is doesn't need to actually fork, but instead, at\n> a certain block size, a forked bitcoin with the blocksize lmit removed will\n> start to be merge-mined alongside bitcoin. Miners can be ready for this.\n> Wallets can be ready for this - in fact, for most wallets and merchants they\n> will possibly want to default to the bigger blocksize fork since this caters\n> for more transactions per block.\n>\n> We still don't know how removing the block limit will pan out and what other\n> problems with scalability will arise in the future, so by preserving the\n> original bitcoin, we keep diversity, and people won't feel their investments\n> in bitcoin are being unnecessarily put at risk (as their investments will\n> stay in both the new and the old bitcoin).\n>\n> The bitcoin core developers can implement a patch like the one recently used\n> for dogecoin, to allow the chain to fork at a set point, where at which\n> point, bitcoins will be split into the new and the old. Branding will be an\n> important issue here I think, so that there is as little confusion as\n> possible. I think this is a small price to pay in return for not killing the\n> original bitcoin (even if it's true that Satoshi did intend to remove the\n> 1MB limit at some point).\n>\n> If I'm missing something obvious please let me know.\n>\n> On Mon, Jun 15, 2015 at 1:50 PM, Mike Hearn <mike at plan99.net> wrote:\n>>>\n>>> The fact that using a centralized service is easier isn't a good reason\n>>> IMHO. It disregards the long-term, and introduces systemic risk.\n>>\n>>\n>> Well sure, that's easy for you to say, but you have a salary :) Other\n>> developers may find the incremental benefits of decentralisation low vs\n>> adding additional features, for instance, and who is to say they are wrong?\n>>\n>>>\n>>> But in cases where using a decentralized approach doesn't *add* anything,\n>>> I cannot reasonably promote it, and that's why I was against getutxos in the\n>>> P2P protocol.\n>>\n>>\n>> It does add something though! It means, amongst other things, I can switch\n>> of all my servers, walk away for good, discard this Mike Hearn pseudonym I\n>> invented for Bitcoin and the app will still work :) Surely that is an\n>> important part of being decentralised?\n>>\n>> It also means that as the underlying protocol evolves over time, getutxos\n>> can evolve along side it. P2P protocol gets encrypted/authenticated? Great,\n>> one more additional bit of security. If one day miners commit to UTXO sets,\n>> great, one more additional bit of security. When we start including input\n>> values in the signature hash, great ... one more step up in security.\n>>\n>> Anyway, I didn't really want to reopen this debate. I just point out that\n>> third party services are quite happy to provide whatever developers need to\n>> build great apps, even if doing so fails to meet some kind of perfect\n>> cryptographic ideal. And that's why they're winning devs.\n>>\n>> Now back to your regularly scheduled block size debates ...\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n> ________________________________\n> ------------------------------------------------------------------------------\n>\n> ________________________________\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-15T04:43:42",
                "message_text_only": "On Mon, Jun 15, 2015 at 12:23:44AM +0200, Mike Hearn wrote:\n> >\n> > One thing that is concerning is that few in industry seem inclined to\n> > take any development initiatives or even integrate a library.\n> \n> \n> Um, you mean except all the people who have built more scalable wallets\n> over the past few years, which is the only reason anyone can even use\n> Bitcoin from their phone?\n>\n> Or maybe you mean initiatives like Lightning ....\n> except StrawPay already developed something similar to the Lightning\n> network (complete with a working GUI wallet) and were ignored by\n> Blockstream as you prefer to write your own from scratch?\n>\n> Sure, people in the industry take development initiatives. That doesn't\n> mean their work will be recognised on this mailing list.\n\nStrawPay hasn't published any details of their work publicly; if they\nwanted credit on the mailing list they should have done that.\n\nI couldn't even find any screenshots of that GUI wallet when I learned\nwhat they were doing; I went to the trouble of reaching out to them\nrecently because I have multiple clients with a need for their\ntechnology. I'm sure we all would have appreciated and welcomed them\ntaking the time to let us know what they were doing; it would have saved\nme personally a lot of time; their lack of recognition on this mailing\nlist is both unfortunate, and a product of their actions alone.\n\nIn any case, StrawPay and Lightning are complementary projects: StrawPay\nhas limited functionality in exchange for faster deployment; Lightning\nhas significantly more functionality in exchange for a longer deployment\nschedule. Both projects can and should be developed in parallel.\nEqually, note efforts like my own CHECKLOCKTIMEVERIFY, which will be\npart of StrawPay in due time.\n\n> > But it will be helpful if we expose companies to the back-pressure\n> > actually implied by an O(n^2) scaling protocol and don't just immediately\n> > increase the block-size to levels that are dangerous for decentralisation\n> > security\n> \n> \n> Bitcoin does not have n-squared scaling. I really don't get where this idea\n> comes from. Computational complexity for the entire network is O(nm) where\n> n=transactions and m=fully validating nodes. There is no fixed\n> relationships between those two variables.\n\nNote for instance how we're discussing what standards we need in the\nCryptoCurrency Security Standard for requirements for compliant\ncompanies to run full nodes for transaction verification; failure to run\na full node will be considered non-compliant in much the same way that\nfailure to secure your private keys is non-compliance. Pedantically, if\nyou assume a diverse, decentralized ecosystem, these security standards\nby themselves do create fixed linear relationships between those\nvariables, giving O(n^2) scaling.\n\nhttps://github.com/CryptoConsortium/CCSS/issues/15\n\n> \"Exposing the companies to back-pressure\" sounds quite nice and gentle. Let\n> me rephrase it to be equivalent but perhaps more direct: you mean \"breaking\n> the current software ecosystem to force people into a new, fictional system\n> that bears little resemblance to the Bitcoin we use today, whether they\n> want that or not\".\n\nEqually, not running full nodes bears little resemblance to the Bitcoin\nwe use today. Either way, something must change for the number of\nBitcoin users to grow.\n\n> As nothing that has been proposed so far (Lightning, merge mined chains,\n> extension blocks etc) has much chance of actual deployment any time soon,\n> that leaves raising the block size limit as the only possible path left.\n> Which is why there will soon be a fork that does it.\n\nI'm genuinely looking forward to a concrete fork proposal. Any ETA on\nwhen the blocksize increase code will go in Bitcoin XT?\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/2d082a27/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T09:06:58",
                "message_text_only": "> StrawPay hasn't published any details of their work publicly; if they\n> wanted credit on the mailing list they should have done that.\n>\n\nThere's a brief discussion here:\n\n\nhttps://www.reddit.com/r/Bitcoin/comments/2r3ri7/strawpay_cheap_and_secure_micropayments/\n\nBut yes, they are developing it before publishing more details that may be\nsubject to change post-implementation experience anyway.\n\n\n> I'm genuinely looking forward to a concrete fork proposal. Any ETA on\n> when the blocksize increase code will go in Bitcoin XT?\n>\n\nGreat!  I am waiting for Gavin to finish writing the patches. Once he has a\npatch and there's been some time for review, I guess it will go in,\nassuming no other issues.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f0a042e3/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-15T02:28:02",
                "message_text_only": "On Sun, Jun 14, 2015 at 5:23 PM, Adam Back <adam at cypherspace.org> wrote:\n\n> Hi\n>\n> I made these comments elsewhere, but I think really we should be\n> having these kind of conversations here rather than scattered around.\n>\n> These are about Jeff Garzik's outline draft BIP 100 I guess this is\n> the latest draft:  (One good thing about getting off SF would be\n> finally JGarzik's emails actually not getting blocked!).\n>\n> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>\n> may have changed since the original [1]\n>\n> Over the original proposal:\n>\n> 1. there should be a hard cap, not indefinitely growing.\n>\n>\nIn the latest draft there is an explicit 32MB ceiling now.\n\nUsers will need to opt into growth beyond 32MB via a 2nd hard fork.\n\n\n\n> 2. there should be  a growth limiter (no more than X%/year)\n>\n>\nAs a general principle, this is an area of market disagreement, and should\nnot be our call.  Encoding this into software veers into personal opinion\nabout what economic policy should be.\n\nThat said  -- BIP 100, as a compromise, includes a growth limiter.  Abrupt\nchange (1MB -> 32MB!) is awful on markets.  Good policies include a\nmeasured pace of transition from policy A to policy B.  It gives the\ncommunity time to assess system effectiveness - while also allowing free\nmarket input.\n\nIn the long run I hope the cap is removed (see below), and the intention is\nto -slowly- and -transparently- move from the tightly controlled limit to\nsomething the free market and users are choosing.\n\n\n\n\n> 3. I think the miners should not be given a vote that has no costs to\n> cast, because their interests are not necessarily aligned with users\n> or businesses.\n>\n> I think Greg Maxwell's difficulty adjust [2] is better here for that\n> reason.  It puts quadratic cost via higher difficulty for miners to\n> vote to increase block-size, which miners can profitably do if there\n> are transactions with fees available to justify it. There is also the\n> growth limiter as part of Greg's proposal. [3]\n>\n>\n\"paying with difficulty\" has severe negative elements that will likely\ncause it never to be used:\n- complex and difficult for miners to reason\n- fails the opportunity cost test - dollar cost lost losing the block race\nversus value gained by increasing block size\n- inherently unpredictable in the short term - user experience is that it's\npossibly difficult to see a gain in utility versus the revenue you are\ngiving up\n- REQUIRES informal miner collusion - probably less transparent than BIP\n100 - in order to solve the who-goes-first problem.\n- net result: tough sell\n\nPaying bitcoins to future miners makes a lot more sense.  Initially I was a\nfan of pay-with-diff, but freezing bitcoins (CLTV) or timelock'd\nanyone-can-spend has much more clear incentives, if you want to go down\nthat road.\n\nProblems with pay-to-increase-block-size:\n- how much to pay?  You are inherently setting your growth policy on top of\nbitcoin by choosing a price here.\n- another who-goes-first problem\n\nAnyway, there is a natural equilibrium block size that the free market and\nuser choice will seek.\n\nRelated:  There is a lot of naive \"miner = max income = max block size\"\nreasoning going on, with regards to fees.  This is defining the bounds of\nan economically scarce resource.  There are many reasons why a miner will\ntoday, in the real world, limit their block size. WRT fee income, if block\nsize is too large the fee competition in the overall market is low-to-zero,\nfee income rapidly collapses.  Then factor in price and demand elasticity\non top of that.\n\nQuite frankly, there seems to be a natural block size equilibrium ceiling,\nand I worry about miners squeezing the market by maximizing their fee\nincome through constrained block sizes and competition at the low end.\nThis is of course already possible today - miners may openly or covertly\ncollude to keep the block size low.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n> I think bitcoin will have to involve layering models that uplift\n> security to higher layers, but preserve security assurances, and\n> smart-contracts even, with protocols that improve the algorithmic\n> complexity beyond O(n^2) in users, like lightning, and there are\n> multiple other candidates with useful tradeoffs for various use-cases.\n>\n> One thing that is concerning is that few in industry seem inclined to\n> take any development initiatives or even integrate a library.  I\n> suppose eventually that problem would self-correct as new startups\n> would make a more scalable wallet and services that are layer2 aware\n> and eat the lunch of the laggards.  But it will be helpful if we\n> expose companies to the back-pressure actually implied by an O(n^2)\n> scaling protocol and don't just immediately increase the block-size to\n> levels that are dangerous for decentralisation security, as an\n> interventionist subsidy to save them having to do basic integration\n> work.  Otherwise I think whichever any kind of kick the can some 2-5\n> years down the road we consider, we risk the whole saga repeating in a\n> few years, when no algorithmic progress has been made and even more\n> protocol inertia has set in.\n>\n> Adam\n>\n> [1] original proposal comments on reddit\n>\n> https://www.reddit.com/r/Bitcoin/comments/39kzyt/draft_bip_100_soft_fork_block_size_increase/\n>\n> [2] flexcap propoal by Greg Maxwell see post by Mark Freidenbach\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07599.html\n>\n> [3] growth limited proposal for flexcap by Greg Maxwell\n>\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07620.html\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/714f63f5/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-15T02:44:22",
                "message_text_only": "Adding - in re pay-to-FOO - these schemes are inherently short term, such\nthat it is near-impossible for the market to plan for what happens in 12+\nmonths.\n\nOn Sun, Jun 14, 2015 at 10:28 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> On Sun, Jun 14, 2015 at 5:23 PM, Adam Back <adam at cypherspace.org> wrote:\n>\n>> Hi\n>>\n>> I made these comments elsewhere, but I think really we should be\n>> having these kind of conversations here rather than scattered around.\n>>\n>> These are about Jeff Garzik's outline draft BIP 100 I guess this is\n>> the latest draft:  (One good thing about getting off SF would be\n>> finally JGarzik's emails actually not getting blocked!).\n>>\n>> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>>\n>> may have changed since the original [1]\n>>\n>> Over the original proposal:\n>>\n>> 1. there should be a hard cap, not indefinitely growing.\n>>\n>>\n> In the latest draft there is an explicit 32MB ceiling now.\n>\n> Users will need to opt into growth beyond 32MB via a 2nd hard fork.\n>\n>\n>\n>> 2. there should be  a growth limiter (no more than X%/year)\n>>\n>>\n> As a general principle, this is an area of market disagreement, and should\n> not be our call.  Encoding this into software veers into personal opinion\n> about what economic policy should be.\n>\n> That said  -- BIP 100, as a compromise, includes a growth limiter.  Abrupt\n> change (1MB -> 32MB!) is awful on markets.  Good policies include a\n> measured pace of transition from policy A to policy B.  It gives the\n> community time to assess system effectiveness - while also allowing free\n> market input.\n>\n> In the long run I hope the cap is removed (see below), and the intention\n> is to -slowly- and -transparently- move from the tightly controlled limit\n> to something the free market and users are choosing.\n>\n>\n>\n>\n>> 3. I think the miners should not be given a vote that has no costs to\n>> cast, because their interests are not necessarily aligned with users\n>> or businesses.\n>>\n>> I think Greg Maxwell's difficulty adjust [2] is better here for that\n>> reason.  It puts quadratic cost via higher difficulty for miners to\n>> vote to increase block-size, which miners can profitably do if there\n>> are transactions with fees available to justify it. There is also the\n>> growth limiter as part of Greg's proposal. [3]\n>>\n>>\n> \"paying with difficulty\" has severe negative elements that will likely\n> cause it never to be used:\n> - complex and difficult for miners to reason\n> - fails the opportunity cost test - dollar cost lost losing the block race\n> versus value gained by increasing block size\n> - inherently unpredictable in the short term - user experience is that\n> it's possibly difficult to see a gain in utility versus the revenue you are\n> giving up\n> - REQUIRES informal miner collusion - probably less transparent than BIP\n> 100 - in order to solve the who-goes-first problem.\n> - net result: tough sell\n>\n> Paying bitcoins to future miners makes a lot more sense.  Initially I was\n> a fan of pay-with-diff, but freezing bitcoins (CLTV) or timelock'd\n> anyone-can-spend has much more clear incentives, if you want to go down\n> that road.\n>\n> Problems with pay-to-increase-block-size:\n> - how much to pay?  You are inherently setting your growth policy on top\n> of bitcoin by choosing a price here.\n> - another who-goes-first problem\n>\n> Anyway, there is a natural equilibrium block size that the free market and\n> user choice will seek.\n>\n> Related:  There is a lot of naive \"miner = max income = max block size\"\n> reasoning going on, with regards to fees.  This is defining the bounds of\n> an economically scarce resource.  There are many reasons why a miner will\n> today, in the real world, limit their block size. WRT fee income, if block\n> size is too large the fee competition in the overall market is low-to-zero,\n> fee income rapidly collapses.  Then factor in price and demand elasticity\n> on top of that.\n>\n> Quite frankly, there seems to be a natural block size equilibrium ceiling,\n> and I worry about miners squeezing the market by maximizing their fee\n> income through constrained block sizes and competition at the low end.\n> This is of course already possible today - miners may openly or covertly\n> collude to keep the block size low.\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>> I think bitcoin will have to involve layering models that uplift\n>> security to higher layers, but preserve security assurances, and\n>> smart-contracts even, with protocols that improve the algorithmic\n>> complexity beyond O(n^2) in users, like lightning, and there are\n>> multiple other candidates with useful tradeoffs for various use-cases.\n>>\n>> One thing that is concerning is that few in industry seem inclined to\n>> take any development initiatives or even integrate a library.  I\n>> suppose eventually that problem would self-correct as new startups\n>> would make a more scalable wallet and services that are layer2 aware\n>> and eat the lunch of the laggards.  But it will be helpful if we\n>> expose companies to the back-pressure actually implied by an O(n^2)\n>> scaling protocol and don't just immediately increase the block-size to\n>> levels that are dangerous for decentralisation security, as an\n>> interventionist subsidy to save them having to do basic integration\n>> work.  Otherwise I think whichever any kind of kick the can some 2-5\n>> years down the road we consider, we risk the whole saga repeating in a\n>> few years, when no algorithmic progress has been made and even more\n>> protocol inertia has set in.\n>>\n>> Adam\n>>\n>> [1] original proposal comments on reddit\n>>\n>> https://www.reddit.com/r/Bitcoin/comments/39kzyt/draft_bip_100_soft_fork_block_size_increase/\n>>\n>> [2] flexcap propoal by Greg Maxwell see post by Mark Freidenbach\n>>\n>> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07599.html\n>>\n>> [3] growth limited proposal for flexcap by Greg Maxwell\n>>\n>> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07620.html\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150614/c24608ef/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "comments on BIP 100",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Eric Lombrozo",
                "Adam Back",
                "Mike Hearn",
                "Peter Todd",
                "Raystonn .",
                "Pieter Wuille",
                "Rebroad (sourceforge)"
            ],
            "messages_count": 20,
            "total_messages_chars_count": 75561
        }
    },
    {
        "title": "[Bitcoin-development]  The Bitcoin Node Market",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-15T18:57:02",
                "message_text_only": "I have been toying with an idea and figured I'd run it by everyone here \nbefore investing further time in it.  The goal here is to make it \nsustainable, and perhaps profitable, to run full nodes on the Bitcoin \nNetwork in the long term.\n\n- Nodes can participate in a market wherein they are paid by nodes, wallets, \nand other services to supply Bitcoin Network data.  Payment should be based \non the cost imposed on the Node to do the work and send the data, but can be \nset in any way the node operator desires.  It's a free market.\n- Nodes that are mostly leeching data from the Bitcoin Network, such as \nthose that do not receive inbound connections to port 8333, will send \npayments to the nodes they connect to, but will likely receive no payments \nfrom other nodes, wallets, and other services.\n- Nodes that are providing balanced full service to the Bitcoin Network will \ntend to have a balance of payments coming in and going out with regards to \nother balanced full service nodes, leaving them revenue neutral there.  But \nthey will receive payments from leech nodes, wallets, and other services.\n\nThe net effect here is that the cost to run nodes will be shared by those \nwho are using the Bitcoin network but not contributing by running a full \nnode.  A market will develop for fees to connect to the Bitcoin Network \nwhich should help cover the cost of running the Network.  It's still \npossible to continue offering access to your node for free as there is \nnothing forcing you to charge a fee.  But this isn't very sustainable \nlong-run.  Market efficiencies should eventually mean nodes take in only \nwhat is required to keep the Network operational.\n\nRaystonn"
            }
        ],
        "thread_summary": {
            "title": "The Bitcoin Node Market",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Raystonn ."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1675
        }
    },
    {
        "title": "[Bitcoin-development] The Bitcoin Node Market",
        "thread_messages": [
            {
                "author": "sickpig at gmail.com",
                "date": "2015-06-15T19:18:49",
                "message_text_only": "Sorry for top posting and the brevity but I'm typing from my phone\n\nYou shoud be interested in this post by Justus Ranvier then:\n\nhttps://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/\nOn Jun 15, 2015 8:57 PM, \"Raystonn .\" <raystonn at hotmail.com> wrote:\n\n> I have been toying with an idea and figured I'd run it by everyone here\n> before investing further time in it.  The goal here is to make it\n> sustainable, and perhaps profitable, to run full nodes on the Bitcoin\n> Network in the long term.\n>\n> - Nodes can participate in a market wherein they are paid by nodes,\n> wallets,\n> and other services to supply Bitcoin Network data.  Payment should be based\n> on the cost imposed on the Node to do the work and send the data, but can\n> be\n> set in any way the node operator desires.  It's a free market.\n> - Nodes that are mostly leeching data from the Bitcoin Network, such as\n> those that do not receive inbound connections to port 8333, will send\n> payments to the nodes they connect to, but will likely receive no payments\n> from other nodes, wallets, and other services.\n> - Nodes that are providing balanced full service to the Bitcoin Network\n> will\n> tend to have a balance of payments coming in and going out with regards to\n> other balanced full service nodes, leaving them revenue neutral there.  But\n> they will receive payments from leech nodes, wallets, and other services.\n>\n> The net effect here is that the cost to run nodes will be shared by those\n> who are using the Bitcoin network but not contributing by running a full\n> node.  A market will develop for fees to connect to the Bitcoin Network\n> which should help cover the cost of running the Network.  It's still\n> possible to continue offering access to your node for free as there is\n> nothing forcing you to charge a fee.  But this isn't very sustainable\n> long-run.  Market efficiencies should eventually mean nodes take in only\n> what is required to keep the Network operational.\n>\n> Raystonn\n>\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/d624c8b0/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-15T19:36:32",
                "message_text_only": "I am only partially through the content at the below link, and I am very impressed.  Has Justus Ranvier began work on implementation of the ideas contained therein?\n\n\nFrom: sickpig at gmail.com \nSent: Monday, June 15, 2015 12:18 PM\nTo: Raystonn . \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] The Bitcoin Node Market\n\nSorry for top posting and the brevity but I'm typing from my phone\n\nYou shoud be interested in this post by Justus Ranvier then:\n\nhttps://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/\n\nOn Jun 15, 2015 8:57 PM, \"Raystonn .\" <raystonn at hotmail.com> wrote:\n\n  I have been toying with an idea and figured I'd run it by everyone here\n  before investing further time in it.  The goal here is to make it\n  sustainable, and perhaps profitable, to run full nodes on the Bitcoin\n  Network in the long term.\n\n  - Nodes can participate in a market wherein they are paid by nodes, wallets,\n  and other services to supply Bitcoin Network data.  Payment should be based\n  on the cost imposed on the Node to do the work and send the data, but can be\n  set in any way the node operator desires.  It's a free market.\n  - Nodes that are mostly leeching data from the Bitcoin Network, such as\n  those that do not receive inbound connections to port 8333, will send\n  payments to the nodes they connect to, but will likely receive no payments\n  from other nodes, wallets, and other services.\n  - Nodes that are providing balanced full service to the Bitcoin Network will\n  tend to have a balance of payments coming in and going out with regards to\n  other balanced full service nodes, leaving them revenue neutral there.  But\n  they will receive payments from leech nodes, wallets, and other services.\n\n  The net effect here is that the cost to run nodes will be shared by those\n  who are using the Bitcoin network but not contributing by running a full\n  node.  A market will develop for fees to connect to the Bitcoin Network\n  which should help cover the cost of running the Network.  It's still\n  possible to continue offering access to your node for free as there is\n  nothing forcing you to charge a fee.  But this isn't very sustainable\n  long-run.  Market efficiencies should eventually mean nodes take in only\n  what is required to keep the Network operational.\n\n  Raystonn\n\n\n  ------------------------------------------------------------------------------\n  _______________________________________________\n  Bitcoin-development mailing list\n  Bitcoin-development at lists.sourceforge.net\n  https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/9cdea836/attachment.html>"
            },
            {
                "author": "sickpig at gmail.com",
                "date": "2015-06-15T20:12:53",
                "message_text_only": "Hi Raystonn\n\nOn Mon, Jun 15, 2015 at 9:36 PM, Raystonn . <raystonn at hotmail.com> wrote:\n>\n> I am only partially through the content at the below link, and I am very impressed.  Has Justus Ranvier began work on implementation of the ideas contained therein?\n\nI don't know if he or someone else has begun writing code to implement\nwhat was described in the liked post, but I'm sure he will reply to\nyou since he's subscribed to this mailing list.\n\n\n>\n>\n>\n> From: sickpig at gmail.com\n> Sent: Monday, June 15, 2015 12:18 PM\n> To: Raystonn .\n> Cc: Bitcoin Dev\n> Subject: Re: [Bitcoin-development] The Bitcoin Node Market\n>\n>\n> Sorry for top posting and the brevity but I'm typing from my phone\n>\n> You shoud be interested in this post by Justus Ranvier then:\n>\n> https://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/\n>\n> On Jun 15, 2015 8:57 PM, \"Raystonn .\" <raystonn at hotmail.com> wrote:\n>>\n>> I have been toying with an idea and figured I'd run it by everyone here\n>> before investing further time in it.  The goal here is to make it\n>> sustainable, and perhaps profitable, to run full nodes on the Bitcoin\n>> Network in the long term.\n>>\n>> - Nodes can participate in a market wherein they are paid by nodes, wallets,\n>> and other services to supply Bitcoin Network data.  Payment should be based\n>> on the cost imposed on the Node to do the work and send the data, but can be\n>> set in any way the node operator desires.  It's a free market.\n>> - Nodes that are mostly leeching data from the Bitcoin Network, such as\n>> those that do not receive inbound connections to port 8333, will send\n>> payments to the nodes they connect to, but will likely receive no payments\n>> from other nodes, wallets, and other services.\n>> - Nodes that are providing balanced full service to the Bitcoin Network will\n>> tend to have a balance of payments coming in and going out with regards to\n>> other balanced full service nodes, leaving them revenue neutral there.  But\n>> they will receive payments from leech nodes, wallets, and other services.\n>>\n>> The net effect here is that the cost to run nodes will be shared by those\n>> who are using the Bitcoin network but not contributing by running a full\n>> node.  A market will develop for fees to connect to the Bitcoin Network\n>> which should help cover the cost of running the Network.  It's still\n>> possible to continue offering access to your node for free as there is\n>> nothing forcing you to charge a fee.  But this isn't very sustainable\n>> long-run.  Market efficiencies should eventually mean nodes take in only\n>> what is required to keep the Network operational.\n>>\n>> Raystonn\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Kevin Greene",
                "date": "2015-06-16T03:30:44",
                "message_text_only": "Would SPV wallets have to pay to connect to the network too? From the\nuser's perspective, it would be somewhat upsetting (and confusing) to see\nyour balance slowly draining every time you open your wallet app. It would\nalso tie up outputs every time you open up your wallet. You may go to pay\nfor something in a coffee shop, only to find that you can't spend your\nbitcoin because the wallet had to create a transaction to pay to sync with\nthe network.\n\nAlso, users of centralized wallet services like Coinbase would not have to\npay that fee; but users of native wallets like breadwallet would have no\nsuch option. This incentivizes users to use centralized wallets.\n\nSo this is kind of imposing a worse user experience on users who want to\nuse bitcoin the \"right\" way. That doesn't seem like a good thing to me :/\n\nOn Mon, Jun 15, 2015 at 1:12 PM, sickpig at gmail.com <sickpig at gmail.com>\nwrote:\n\n> Hi Raystonn\n>\n> On Mon, Jun 15, 2015 at 9:36 PM, Raystonn . <raystonn at hotmail.com> wrote:\n> >\n> > I am only partially through the content at the below link, and I am very\n> impressed.  Has Justus Ranvier began work on implementation of the ideas\n> contained therein?\n>\n> I don't know if he or someone else has begun writing code to implement\n> what was described in the liked post, but I'm sure he will reply to\n> you since he's subscribed to this mailing list.\n>\n>\n> >\n> >\n> >\n> > From: sickpig at gmail.com\n> > Sent: Monday, June 15, 2015 12:18 PM\n> > To: Raystonn .\n> > Cc: Bitcoin Dev\n> > Subject: Re: [Bitcoin-development] The Bitcoin Node Market\n> >\n> >\n> > Sorry for top posting and the brevity but I'm typing from my phone\n> >\n> > You shoud be interested in this post by Justus Ranvier then:\n> >\n> >\n> https://bitcoinism.liberty.me/economic-fallacies-and-the-block-size-limit-part-2-price-discovery/\n> >\n> > On Jun 15, 2015 8:57 PM, \"Raystonn .\" <raystonn at hotmail.com> wrote:\n> >>\n> >> I have been toying with an idea and figured I'd run it by everyone here\n> >> before investing further time in it.  The goal here is to make it\n> >> sustainable, and perhaps profitable, to run full nodes on the Bitcoin\n> >> Network in the long term.\n> >>\n> >> - Nodes can participate in a market wherein they are paid by nodes,\n> wallets,\n> >> and other services to supply Bitcoin Network data.  Payment should be\n> based\n> >> on the cost imposed on the Node to do the work and send the data, but\n> can be\n> >> set in any way the node operator desires.  It's a free market.\n> >> - Nodes that are mostly leeching data from the Bitcoin Network, such as\n> >> those that do not receive inbound connections to port 8333, will send\n> >> payments to the nodes they connect to, but will likely receive no\n> payments\n> >> from other nodes, wallets, and other services.\n> >> - Nodes that are providing balanced full service to the Bitcoin Network\n> will\n> >> tend to have a balance of payments coming in and going out with regards\n> to\n> >> other balanced full service nodes, leaving them revenue neutral there.\n> But\n> >> they will receive payments from leech nodes, wallets, and other\n> services.\n> >>\n> >> The net effect here is that the cost to run nodes will be shared by\n> those\n> >> who are using the Bitcoin network but not contributing by running a full\n> >> node.  A market will develop for fees to connect to the Bitcoin Network\n> >> which should help cover the cost of running the Network.  It's still\n> >> possible to continue offering access to your node for free as there is\n> >> nothing forcing you to charge a fee.  But this isn't very sustainable\n> >> long-run.  Market efficiencies should eventually mean nodes take in only\n> >> what is required to keep the Network operational.\n> >>\n> >> Raystonn\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3915b397/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-16T03:41:09",
                "message_text_only": "On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:\n> Would SPV wallets have to pay to connect to the network too? From the\n> user's perspective, it would be somewhat upsetting (and confusing) to see\n> your balance slowly draining every time you open your wallet app. It would\n> also tie up outputs every time you open up your wallet. You may go to pay\n> for something in a coffee shop, only to find that you can't spend your\n> bitcoin because the wallet had to create a transaction to pay to sync with\n> the network.\n> \n> Also, users of centralized wallet services like Coinbase would not have to\n> pay that fee; but users of native wallets like breadwallet would have no\n> such option. This incentivizes users to use centralized wallets.\n> \n> So this is kind of imposing a worse user experience on users who want to\n> use bitcoin the \"right\" way. That doesn't seem like a good thing to me :/\n\nSPV isn't the \"right\" way either ;)\n\nIf you're running a full node (the real \"right way\"), you should be able to \nearn more bitcoins than you pay out.\n\nLuke"
            },
            {
                "author": "Kevin Greene",
                "date": "2015-06-16T03:49:43",
                "message_text_only": "On Mon, Jun 15, 2015 at 8:41 PM, Luke Dashjr <luke at dashjr.org> wrote:\n\n> On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:\n> > Would SPV wallets have to pay to connect to the network too? From the\n> > user's perspective, it would be somewhat upsetting (and confusing) to see\n> > your balance slowly draining every time you open your wallet app. It\n> would\n> > also tie up outputs every time you open up your wallet. You may go to pay\n> > for something in a coffee shop, only to find that you can't spend your\n> > bitcoin because the wallet had to create a transaction to pay to sync\n> with\n> > the network.\n> >\n> > Also, users of centralized wallet services like Coinbase would not have\n> to\n> > pay that fee; but users of native wallets like breadwallet would have no\n> > such option. This incentivizes users to use centralized wallets.\n> >\n> > So this is kind of imposing a worse user experience on users who want to\n> > use bitcoin the \"right\" way. That doesn't seem like a good thing to me :/\n>\n> SPV isn't the \"right\" way either ;)\n>\n\n\u200bHah, fair enough, there is no such thing as the \"right\" way to do\nanything. But I still think punishing users who use SPV wallets is \u200ba\nless-than-ideal way to incentive people to run full nodes. Right now SPV is\nthe best way that exists for mobile phones to participate in the network in\na decentralized way. This proposal makes the user experience for mobile\nwallets a little more confusing and annoying.\n\n\n>\n> If you're running a full node (the real \"right way\"), you should be able to\n> earn more bitcoins than you pay out.\n>\n> Luke\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/08c20ffe/attachment.html>"
            },
            {
                "author": "Kevin Greene",
                "date": "2015-06-16T04:05:46",
                "message_text_only": "Just thinking off the top of my head here:\n\nWhat if SPV wallets were exempt from the fee? Only full nodes would pay\nother full nodes when initially sync'ing the blockchain. Then as long as\nyou keep your full node running for a long period of time, you'll\neventually make back the cost you paid to sync initially. This at least\nincentives full node operators to keep their node running for as long as\npossible once started.\n\nThis still imposes a worse UX on casual users who want full node security,\nbut don't want to run a server 24/7 (or perhaps simply aren't aware that\nthey have to). These users will watch their balance wither away each time\nthey open their wallet, but it would be very difficult to explain to them\nwhy that is happening. It would just be frustrating and confusing.\n\nAlso, what happens when a user runs Bitcoin-QT for the first time after\ndownloading it to try it out? They wouldn't be able to sync the blockchain.\nEven if the wallet has a balance, how would the wallet be able to see that\nit has UTXO's without the ability to sync with the network for free?\n\n\nOn Mon, Jun 15, 2015 at 8:49 PM, Kevin Greene <kgreenek at gmail.com> wrote:\n\n>\n>\n> On Mon, Jun 15, 2015 at 8:41 PM, Luke Dashjr <luke at dashjr.org> wrote:\n>\n>> On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:\n>> > Would SPV wallets have to pay to connect to the network too? From the\n>> > user's perspective, it would be somewhat upsetting (and confusing) to\n>> see\n>> > your balance slowly draining every time you open your wallet app. It\n>> would\n>> > also tie up outputs every time you open up your wallet. You may go to\n>> pay\n>> > for something in a coffee shop, only to find that you can't spend your\n>> > bitcoin because the wallet had to create a transaction to pay to sync\n>> with\n>> > the network.\n>> >\n>> > Also, users of centralized wallet services like Coinbase would not have\n>> to\n>> > pay that fee; but users of native wallets like breadwallet would have no\n>> > such option. This incentivizes users to use centralized wallets.\n>> >\n>> > So this is kind of imposing a worse user experience on users who want to\n>> > use bitcoin the \"right\" way. That doesn't seem like a good thing to me\n>> :/\n>>\n>> SPV isn't the \"right\" way either ;)\n>>\n>\n> \u200bHah, fair enough, there is no such thing as the \"right\" way to do\n> anything. But I still think punishing users who use SPV wallets is \u200ba\n> less-than-ideal way to incentive people to run full nodes. Right now SPV is\n> the best way that exists for mobile phones to participate in the network in\n> a decentralized way. This proposal makes the user experience for mobile\n> wallets a little more confusing and annoying.\n>\n>\n>>\n>> If you're running a full node (the real \"right way\"), you should be able\n>> to\n>> earn more bitcoins than you pay out.\n>>\n>> Luke\n>>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/6dfa5428/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-16T04:12:14",
                "message_text_only": "We're planning to run our own full nodes to take load off the volunteer\nnetwork as breadwallet use increases, and also contribute any SPV serving\nperformance optimizations we can make to bitcoin-core. Just want to let\npeople know we share these concerns and have plans to mitigate any negative\nimpact on the network.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Mon, Jun 15, 2015 at 8:49 PM, Kevin Greene <kgreenek at gmail.com> wrote:\n\n>\n>\n> On Mon, Jun 15, 2015 at 8:41 PM, Luke Dashjr <luke at dashjr.org> wrote:\n>\n>> On Tuesday, June 16, 2015 3:30:44 AM Kevin Greene wrote:\n>> > Would SPV wallets have to pay to connect to the network too? From the\n>> > user's perspective, it would be somewhat upsetting (and confusing) to\n>> see\n>> > your balance slowly draining every time you open your wallet app. It\n>> would\n>> > also tie up outputs every time you open up your wallet. You may go to\n>> pay\n>> > for something in a coffee shop, only to find that you can't spend your\n>> > bitcoin because the wallet had to create a transaction to pay to sync\n>> with\n>> > the network.\n>> >\n>> > Also, users of centralized wallet services like Coinbase would not have\n>> to\n>> > pay that fee; but users of native wallets like breadwallet would have no\n>> > such option. This incentivizes users to use centralized wallets.\n>> >\n>> > So this is kind of imposing a worse user experience on users who want to\n>> > use bitcoin the \"right\" way. That doesn't seem like a good thing to me\n>> :/\n>>\n>> SPV isn't the \"right\" way either ;)\n>>\n>\n> \u200bHah, fair enough, there is no such thing as the \"right\" way to do\n> anything. But I still think punishing users who use SPV wallets is \u200ba\n> less-than-ideal way to incentive people to run full nodes. Right now SPV is\n> the best way that exists for mobile phones to participate in the network in\n> a decentralized way. This proposal makes the user experience for mobile\n> wallets a little more confusing and annoying.\n>\n>\n>>\n>> If you're running a full node (the real \"right way\"), you should be able\n>> to\n>> earn more bitcoins than you pay out.\n>>\n>> Luke\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/79706241/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-16T05:28:32",
                "message_text_only": "On 2015-06-16 03:49, Kevin Greene wrote:\n> \u200bHah, fair enough, there is no such thing as the \"right\" way to do\n> anything. But I still think punishing users who use SPV wallets is \u200ba\n> less-than-ideal way to incentive people to run full nodes. Right now \n> SPV is\n> the best way that exists for mobile phones to participate in the \n> network in\n> a decentralized way. This proposal makes the user experience for mobile\n> wallets a little more confusing and annoying.\n\nSuppose a billion mobile phones wanted to run SPV wallets tomorrow. Who \nwould provide the nodes they would need connect to? The decentralization \nfairy?\n\nThere's absolutely no reason that paying for connectivity would be any \nmore confusing or annoying than transaction fees are.\n\nIf some full nodes in the network started offering paid connection \nslots, that would just mean that users who checked the \"pay subscription \nfee\" box in their wallet configuration would have an easier time \nconnecting than the users who did't, just like how your transaction \nmight eventually get mined without a fee but paying one makes it faster \nand more probable."
            },
            {
                "author": "Potter QQ",
                "date": "2015-06-16T05:30:05",
                "message_text_only": "No,Bitcoin \n\n\n\u53d1\u81ea\u6211\u7684 iPhone\n\n> \u5728 2015\u5e746\u670816\u65e5\uff0c13:28\uff0cjustusranvier at riseup.net \u5199\u9053\uff1a\n> \n>> On 2015-06-16 03:49, Kevin Greene wrote:\n>> \u200bHah, fair enough, there is no such thing as the \"right\" way to do\n>> anything. But I still think punishing users who use SPV wallets is \u200ba\n>> less-than-ideal way to incentive people to run full nodes. Right now \n>> SPV is\n>> the best way that exists for mobile phones to participate in the \n>> network in\n>> a decentralized way. This proposal makes the user experience for mobile\n>> wallets a little more confusing and annoying.\n> \n> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who \n> would provide the nodes they would need connect to? The decentralization \n> fairy?\n> \n> There's absolutely no reason that paying for connectivity would be any \n> more confusing or annoying than transaction fees are.\n> \n> If some full nodes in the network started offering paid connection \n> slots, that would just mean that users who checked the \"pay subscription \n> fee\" box in their wallet configuration would have an easier time \n> connecting than the users who did't, just like how your transaction \n> might eventually get mined without a fee but paying one makes it faster \n> and more probable.\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinf"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-16T07:55:35",
                "message_text_only": "> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who\n> would provide the nodes they would need connect to?\n\nThe SPV wallet author would if they wanted their wallet to function.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Mon, Jun 15, 2015 at 10:28 PM, <justusranvier at riseup.net> wrote:\n\n> On 2015-06-16 03:49, Kevin Greene wrote:\n> > \u200bHah, fair enough, there is no such thing as the \"right\" way to do\n> > anything. But I still think punishing users who use SPV wallets is \u200ba\n> > less-than-ideal way to incentive people to run full nodes. Right now\n> > SPV is\n> > the best way that exists for mobile phones to participate in the\n> > network in\n> > a decentralized way. This proposal makes the user experience for mobile\n> > wallets a little more confusing and annoying.\n>\n> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who\n> would provide the nodes they would need connect to? The decentralization\n> fairy?\n>\n> There's absolutely no reason that paying for connectivity would be any\n> more confusing or annoying than transaction fees are.\n>\n> If some full nodes in the network started offering paid connection\n> slots, that would just mean that users who checked the \"pay subscription\n> fee\" box in their wallet configuration would have an easier time\n> connecting than the users who did't, just like how your transaction\n> might eventually get mined without a fee but paying one makes it faster\n> and more probable.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/1f849091/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-16T13:32:39",
                "message_text_only": "On 2015-06-16 07:55, Aaron Voisine wrote:\n>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. \n>> Who\n>> would provide the nodes they would need connect to?\n> \n> The SPV wallet author would if they wanted their wallet to function.\n\nHow will the SPV wallet users pay for this service? With their money, or \nwith their privacy?"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-16T17:04:30",
                "message_text_only": "With their money, if they were to take advantage of optional additional\nfinancial services, like, as one example, comsumer protection insurance.\n\nAaron\n\nOn Tuesday, June 16, 2015, <justusranvier at riseup.net> wrote:\n\n> On 2015-06-16 07:55, Aaron Voisine wrote:\n>\n>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who\n>>> would provide the nodes they would need connect to?\n>>>\n>>\n>> The SPV wallet author would if they wanted their wallet to function.\n>>\n>\n> How will the SPV wallet users pay for this service? With their money, or\n> with their privacy?\n>\n\n\n-- \n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/cc05c161/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-16T17:22:54",
                "message_text_only": "Alternate funding strategy: With 1billion users, mr roger ver is now among\nthe worlds first $trillionaires, and he generously donates to the\nnon-profit organization responsible for both the wildly popular wallet, and\nhis new found largess.\n\nOn Tuesday, June 16, 2015, justusranvier at riseup.net <\njustusranvier at riseup.net> wrote:\n\n> On 2015-06-16 07:55, Aaron Voisine wrote:\n>\n>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who\n>>> would provide the nodes they would need connect to?\n>>>\n>>\n>> The SPV wallet author would if they wanted their wallet to function.\n>>\n>\n> How will the SPV wallet users pay for this service? With their money, or\n> with their privacy?\n>\n\n\n-- \n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/12b54e37/attachment.html>"
            },
            {
                "author": "devrandom",
                "date": "2015-06-16T15:52:45",
                "message_text_only": "On 2015-06-16 12:55 AM, Aaron Voisine wrote:\n>> Suppose a billion mobile phones wanted to run SPV wallets tomorrow. Who\n>> would provide the nodes they would need connect to? \n> \n> The SPV wallet author would if they wanted their wallet to function.\n\nI would also guess that the cost to provide service to SPV wallets is\nless than $0.01/mo per wallet and in any case less than long-term\ntransaction fees.  This can either be taken up by the wallet author or\ntransparently through a payment channel by the user.\n\n> \n> \n> Aaron Voisine\n> co-founder and CEO\n> breadwallet.com <http://breadwallet.com>\n\n-- \ndevrandom / Miron"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-16T04:38:48",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/28f61064/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "The Bitcoin Node Market",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Kevin Greene",
                "Raystonn",
                "sickpig at gmail.com",
                "Potter QQ",
                "justusranvier at riseup.net",
                "Luke Dashjr",
                "Raystonn .",
                "devrandom",
                "Aaron Voisine"
            ],
            "messages_count": 16,
            "total_messages_chars_count": 28539
        }
    },
    {
        "title": "[Bitcoin-development] questions about bitcoin-XT code fork & non-consensus hard-fork",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2015-06-15T00:04:44",
                "message_text_only": "Mike Hearn <mike at plan99.net> wrote:\n> Which is why there will soon be a fork that does it.\n\nI understand why you would be keen to scale bitcoin, everyone here is.\n\nBut as you seem to be saying that you will do a unilateral hard-fork,\nand fork the code-base simultaneously, probably a number of people\nhave questions, so I'll start with some:\n\n( I noticed some of your initial thoughts are online here\nhttps://www.youtube.com/watch?v=DB9goUDBAR0 or the full podcast\nhttps://epicenterbitcoin.com/podcast/082/ )\n\n- Are you releasing a BIP for that proposal for review?\n\n- If the reviewers all say NACK will you take on board their suggestions?\n\n- On the idea of a non-consensus hard-fork at all, I think we can\nassume you will get a row of NACKs.  Can you explain your rationale\nfor going ahead anyway?  The risks are well understood and enormous.\n\n- How do you propose to deal with the extra risks that come from\nnon-consensus hard-forks?  Hard-forks themselves are quite risky, but\nnon-consensus ones are extremely dangerous for consensus.\n\n- If you're going it alone as it were, are you proposing that you will\npersonally maintain bitcoin-XT?  Or do you have a plan to later hand\nover maintenance to the bitcoin developers?\n\n- Do you have contingency plans for what to do if the non-consensus\nhard-fork goes wrong and $3B is lost as a result?\n\n\nAs you can probably tell I think a unilateral fork without wide-scale\nconsensus from the technical and business communities is a deeply\ninadvisable.  While apparently some companies have expressed interest\nin increased scale, I can only assume they do no yet understand the\nrisks.  I suggest before they would actually go ahead that they seek\nindependent advice.\n\nOf the overall process, I think you can agree we should not be making\ntechnical decisions with this level of complexity and consensus risk\nwith financial implications of this magnitude under duress of haste?\nThis seems otherwise a little like the moral hazard of the 2008\nfinancial collapse that Satoshi put the quote in the genesis block\nabout.\n\nI think its best that we progress as Jeff Garzik has done to have\nengineering discussions centre around BIPs, running code for review,\nsimulation and careful analysis.\n\nI understand this has been going on for a long time, and some people\nare frustrated with the rate of progress, but making hasty,\ncontentious or unilateral actions in this space is courting disaster.\n\nPlease use your considerable skills to, along with the rest of the\ncommunity, work on this problem collaboratively.\n\nI can sincerely assure you everyone does want to scale bitcoin and\nshares your long term objective on that.\n\nAdam"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T09:56:40",
                "message_text_only": "Hi Adam,\n\nProvisional answers below!\n\n- Are you releasing a BIP for that proposal for review?\n>\n\nThe work splits like this:\n\n   - Gavin is writing the code and I think a BIP as well\n\n   - I will review both and mostly delegate to Gavin's good taste around\n   the details, unless there is some very strong disagreement. But that seems\n   unlikely.\n\n   - I have been handling gitian and the patch rebases, the code signing\n   and so on, so far. I've also been doing some work to setup the basic\n   infrastructure of the project (website etc).\n\n\n- If the reviewers all say NACK will you take on board their suggestions?\n>\n\nFeedback will be read. There are no NACKS in Bitcoin XT. Patch requests\naren't scored in any way. The final decision rests with the maintainer as\nin ~all open source projects.\n\n\n\n> - On the idea of a non-consensus hard-fork at all, I think we can\n> assume you will get a row of NACKs.  Can you explain your rationale\n> for going ahead anyway?  The risks are well understood and enormous.\n>\n\nYes, I have been working on an article that explains how we got to this\npoint from my perspective. It is quite long, but only because I want it to\nbe readable for people who weren't following the debate.\n\nAnyway, I think I've laid out the gist of it over and over again, but to\nsummarise:\n\nIf Bitcoin runs out of capacity *it will break and many of our users will\nleave*. That is not an acceptable outcome for myself or the many other\nwallet, service and merchant developers who have worked for years to build\nan ecosystem around this protocol.\n\n\n\n> - How do you propose to deal with the extra risks that come from\n> non-consensus hard-forks?  Hard-forks themselves are quite risky, but\n> non-consensus ones are extremely dangerous for consensus.\n>\n\nThe approach is the same for other forks. Voting via block versions and\nthen when there's been >X% for Y time units the 1mb limit is\nlifted/replaced.\n\n\n\n\n> - If you're going it alone as it were, are you proposing that you will\n> personally maintain bitcoin-XT?  Or do you have a plan to later hand\n> over maintenance to the bitcoin developers?\n>\n\nGood question!  I have various thoughts on this, but let's wait and see\nwhat happens first. Perhaps the new chain won't get the majority on it.\n\nIn the event that the >1mb chain does eventually win, I would expect Core\nto apply the patch and rejoin the consensus rather than lose all its users.\nThat would take XT back to being a fairly small patchset to improve the\nnetwork protocol.\n\n\n\n- Do you have contingency plans for what to do if the non-consensus\n> hard-fork goes wrong and $3B is lost as a result?\n>\n\nWhere did you get the $3B figure from? The fork either doesn't happen, or\nit happens after quite a long period of people knowing it's going to happen\n- for example because their full node is printing \"You need to upgrade\"\nmessages due to seeing the larger block version, or because they read the\nnews, or because they heard about it via some other mechanisms.\n\nLet me flip the question around. Do you have a contingency plan if Bitcoin\nruns out of capacity and significant user disruption occurs that results in\nexodus, followed by fall in BTC price? The only one I've seen is \"we can\nperform an emergency hard fork in a few weeks\"!\n\n\n\n> As you can probably tell I think a unilateral fork without wide-scale\n> consensus from the technical and business communities is a deeply\n> inadvisable.\n\n\nGavin and I have been polling many key players in the ecosystem. The\nconsensus you seek does exist. All wallet developers (except Lawrence), all\nthe major exchanges, all the major payment processors and many of the major\nmining pools want to see the limit lifted (I haven't been talking to pools,\nGavin has).\n\nThis notion that the change has no consensus is based on you polling the\npeople directly around you and people who like to spend all day on this\nmailing list. It's not an accurate reflection of the wider Bitcoin\ncommunity and that is one of the leading reasons there is going to be a\nfork. A small number of people have been flatly ignoring LOTS of highly\ntechnical and passionate developers who have written vast amounts of code,\nbuilt up the Bitcoin user base, designed hardware and software, and yes\nbuilt companies.\n\nHow do you think that makes Bitcoin Core look to the rest of the Bitcoin\nworld? How much confidence does that give people?\n\n\n\nOf the overall process, I think you can agree we should not be making\n> technical decisions with this level of complexity and consensus risk\n> with financial implications of this magnitude under duress of haste?\n>\n\nThis debate will never end until a fork makes it irrelevant. There is no\nprocess for ending it, despite me begging Wladimir to make one.\n\nAnd there is no haste. We have been debating the block size limit for\n*years*. We have known it must be lifted for *years*. I kicked off this\ncurrent round of debates after realising that Wladimir's release timeline\nwouldn't allow a block size limit to be released before the end of the\nyear. The reason we're talking about it now and not next year is exactly to\nensure there is plenty of time.\n\n\n\n\n> I can sincerely assure you everyone does want to scale bitcoin and\n> shares your long term objective on that\n\n\nI really wish you were right, and I definitely feel you are one of the more\nreasonable ones Adam. But the overwhelming impression I get from a few\nothers here is that no, they don't want to scale Bitcoin. They already\ndecided it's a technological dead end. They want to kick end users out in\norder to \"incentivise\" (force) the creation of some other alternative,\nclaiming that it's still Bitcoin whilst ignoring basic details ... like the\nfact that no existing wallets or services would work.\n\nScaling Bitcoin can only be achieved by letting it grow, and letting people\ntackle each bottleneck as it arises at the right times. Not by convincing\nourselves that success is failure.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/892471da/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-15T18:03:25",
                "message_text_only": "Hi Mike\n\nWell thank you for replying openly on this topic, its helpful.\n\nI apologise in advance if this gets quite to the point and at times\nblunt, but transparency is important, and we owe it to the users who\nsee Bitcoin as the start of a new future and the$3b of invested funds\nand $600m of VC funds invested in companies, we owe it to them that we\nbe open and transparent here.\n\nI would really prefer on a personal nor professional basis to be\nhaving this conversation period, never mind in public, but Mike - your\nand Gavin's decision to promote a unilateral hard-fork and code fork\nare extremely high risk for bitcoin and so there remains little\nchoice.  So I apologise again that we have to have this kind of\nconversation on a technical discussion list.  This whole thing is\nhugely stressful and worrying for developers, companies and investors.\n\nI strongly urge that we return to the existing collaborative\nconstructive review process that has been used for the last 4 years\nwhich is a consensus by design to prevent one rogue person from\ninserting a backdoor, or lobbying for a favoured change on behalf of a\nspecial interest group, or working for bad actor (without accusing you\nof any of those - I understand you personally just want to scale\nbitcoin, but are inclined to knock heads and try to force an issue you\nsee, rather than work collaboratively).\n\nFor you (and everyone)\n\n- Should there be a summit of some kind, that is open attendance, and\nvideo recorded so that people who are unable to attend can participate\ntoo, so that people can present the technical proposals and risks in\nan unbiased way?\n\n(It is not theoretical question, I may have a sponsor and host - not\nBlockstream, an independent, its a question for everyone, developers,\nusers, CTOs, CEOs.)\n\n\n\nSo here I come back to more frank questions:\n\nGovernance\n\nThe rest of the developers are wise to realise that they do not want\nexclusive control, to avoid governance centralising into the hands of\none person, and this is why they have shared it with a consensus\nprocess over the last 4 years.  No offence but I dont think you\npersonally are thinking far enough ahead to think you want personal\ncontrol of this industry.  Maybe some factions dont trust your\nmotives, or they dont mind, but feel more assured if a dozen other\npeople are closely reviewing and have collective review authority.\n\n- Do you understand that attempting to break this process by\nunilateral hard-fork is extremely weakening of Bitcoin's change\ngovernance model?\n\n- Do you understand that change governance is important, and that it\nis important that there be multiple reviewers and sign-off to avoid\nsomeone being blackmailed or influenced by an external party - which\ncould potentially result in massive theft of funds if something were\nmissed?\n\n- Secondarily do you understand that even if you succeed in a\nunilateral fork (and the level of lost coins and market cap and damage\nto confidence is recoverable), that it sets a precedent that others\nmay try to follow in the future to introduce coercive features that\nbreak the assurances of bitcoin, like fungibility reducing features\nsay (topically I hear you once proposed on a private forum the concept\nof red-lists, other such proposals have been made and quickly\nabandoned), or ultimately if there is a political process to obtain\nunpopular changes by unilateral threat, the sky is the limit - rewrite\nthe social contract at that point without consensus, but by\ncalculation that people will value Bitcoin enough that they will\nfollow a lead to avoid risk to the system?\n\n\nSecurity\n\nAs you probably know some extremely subtle bugs in Bitcoin have at\ntimes slipped past even the most rigorous testings, often with\ninnocuous but unexpected behaviours, but some security issues  Some\nextremely intricate and time-sensitive security defect and incident\nresponse happens from time to time which is not necessarily publicly\ndisclosed until after the issue has been rolled out and fixed, which\ncan take some time due to the nature of protocol upgrades,\nwork-arounds, software upgrade via contacting key miners etc.  We\ncould take an example of the openSSL bug.\n\n- How do you plan to deal with security & incident response for the\nduration you describe where you will have control while you are\ndeploying the unilateral hard-fork and being in sole maintainership\ncontrol?\n\n- Are you a member of the bitcoin security reporting list?\n\nOn 15 June 2015 at 11:56, Mike Hearn <mike at plan99.net> wrote:\n> I will review both and mostly delegate to Gavin's good taste around the\n> details, unless there is some very strong disagreement. But that seems\n> unlikely.\n> ...\n> Feedback will be read. There are no NACKS in Bitcoin XT. Patch requests\n> aren't scored in any way. The final decision rests with the maintainer as in\n> ~all open source projects.\n\nAs you know the people who have written 95% of the code (and reviewed,\nand tested, and formally proved segments etc) are strenuously advising\nnot to push any consensus code into public use without listening to\nand addressing review questions which span beyond rigorous code &\nautomated guided fuzz testers, simulation and sometimes formal proofs,\nbut also economics, game-theory and critically very subtle\ndeterminism/consensus safety that they have collectively 4-5 years\nexperience of each.\n\n- Will you pause your release plans if all of the other developers\ninsist that the code or algorithm is defective?\n\n- Please don't take this the wrong way, and I know your bitcoinj work\nwas a significant engineering project which required porting bitcoin\nlogic.  But If the answer to the above question is no, as you seemed\nto indicate in your response, as you not have not written much bitcoin\ncore code yourself (I think 3 PRs in total), do you find yourself more\nqualified than the combination of peer review of the group of people\nwho have written 95% of it, and maintained it and refactored most of\nit over the last 4-5 years?\n\nI presume from your security background you are quite familiar with\nthe need for review of crypto protocol changes & rigorous code review.\nThat is even more the case with Bitcoin given the consensus\ncriticality.\n\n>> - On the idea of a non-consensus hard-fork at all, I think we can\n>> assume you will get a row of NACKs.  Can you explain your rationale\n>> for going ahead anyway?  The risks are well understood and enormous.\n>\n> If Bitcoin runs out of capacity it will break and many of our users will\n> leave. That is not an acceptable outcome for myself or the many other\n> wallet, service and merchant developers who have worked for years to build\n> an ecosystem around this protocol.\n\nThat you are frustrated, is not a sufficient answer as to why you are\nproposing to go ahead with a universally acknowledged extreme network\ndivergence danger unilateral hard-fork, lacking wide-spread consensus.\nPeople are quite concerned about this.  Patience, caution and prudence\nis necessary in a software system with such high assurance\nrequirements.\n\nSo I ask again:\n\n- On the idea of a non-consensus hard-fork at all, I think we can\nassume you will get a row of NACKs.  Can you explain your rationale\nfor going ahead anyway?  The risks are well understood and enormous.\n\nNote the key point is that you are working on a unilateral hard-fork,\nwhere there is a clear 4 year established process for proposing\nimprovements and an extremely well thought out and important change\nmanagement governance process.  While there has been much discussion,\nyou nor Gavin, have not actually posted a BIP for review.  Nor\nactually was much of the discussion even conducted in the open: it was\nonly when Matt felt the need to clear the air and steer this\nconversation into the open that discussion arose here.  During that\nperiod of private discussion you and Gavin were largely unknown to\nmost of us lobbying companies with your representation of a method\nthat concerns everyone of the Bitcoin users.  Now that the technical\ncommunity aware aware they are strenuously discouraging you on the\nbasis of risks.\n\n\nOpenness\n\n- Do you agree that bitcoin technical discussions should happen in the open?\n\n- As this is a FOSS project, do you agree that companies should also\nbe open, about their requirements and trade-offs they would prefer?\n\n- Can you disclose the list of companies you have lobbied in private\nwhether they have spoken publicly or not, and whether they have\nindicated approval or not?\n\n- Did you share a specific plan, like a BIP or white paper with these\ncompanies, and if so can we see it?\n\n- If you didnt submit a plan, could you summarise what you asked them\nand what you proposed, and if you discussed also the risks?  (If you\nasked them if they would like Bitcoin to scale, I expect almost\neveryone does, including every member of the technical community, so\nthat for example would not fairly indicate approval for a unilateral\nhard-fork)\n\nI and others will be happy to talk with the CTO and CEOs of companies\nyou have lobbied in private, for balance to assure ourselves and the\nrest of the community that their support was given - and with full\nunderstanding of the risks of doing it unilaterally, without peer\nreview, benefit of maintenance and security inidence management, and\nwhat exactly they are being quoting as having signed up for.\n\n(This maybe more efficiently and openly achieved by the open process,\non a mailing list, maybe a different one even special purpose to this\ntopic, with additional option of the open public meeting I proposed at\nthe top).\n\n- Do you agree that it would be appropriate, that companies be aware\nof both the scaling opportunities (of course, great everyone wants\nscalability) as well as the technical limits and risks with various\napproaches?  And that these be presented by parties from a range of\nviews to ensure balance?\n\n- Do you consider your expression of issues to hold true to the ideal\nof representing balanced nuanced view of all sides of a technical\ndebate, even when under pressure or feeling impatient about the\nprocess?\n\nYou may want to review the opening few minutes of your epicenter 82\nbitcoin for example where you claimed and I quote \"[the rest of the\ntechnical community] dont want capacity to ever increase and want it\nto stay where it is and when it fills up people move to other\nsystems\".\n\n- Do you think that is an accurate depiction of the complex trade-offs\nwe have been discussing on this list?\n\n(For the record I am not aware of a single person who has said they do\nnot agree with scaling Bitcoin.  Changing a constant is not the\nhard-part.  The hard part is validating a plan and the other factors\nthat go into it.  It's not a free choice it is a security/scalability\ntradeoff.  No one will thank us if we \"scale\" bitcoin but break it in\nhard to recover ways at the same time.)\n\n- Were you similarly balanced in your explanations when talking to\ncompanies in private discussions?\n\n- Do you understand that if we do not work from balanced technical\ndiscussion, that we may end up with some biased criteria?\n\nAuthority\n\nNeither you nor Gavin have any particular authority here to speak on\nbehalf of Bitcoin (eg you acknowledge in your podcast that Wladimir is\ndev lead, and you and Gavin are both well aware of the 4 year\nestablished change management consensus decision making model where\nall of the technical reviewers have to come to agreement before\nchanges go in for security reasons explained above).  I know Gavin has\na \"Chief Scientist\" title from the Bitcoin Foundation, but sadly that\norganisation is not held in as much regard as it once was, due to\nvarious irregularities and controversies, and as I understand it no\nlonger employs any developers, due to lack of funds.  Gavin is now\nemployed by MIT's DCI project as a researcher in some capacity.  As\nyou know Wladimir is doing the development lead role now, and it seems\npart of your personal frustration you said was because he did not\nagree with your views.  Neither you nor Gavin have been particularly\ninvolved in bitcoin lately, even Gavin, for 1.5 years or so.\n\n- Do you agree that if you presume to speak where you do not have\nauthority you may confuse companies?\n\n> If Bitcoin runs out of capacity it will break and many of our users will\n> leave. That is not an acceptable outcome for myself or the many other\n> wallet, service and merchant developers who have worked for years to build\n> an ecosystem around this protocol.\n\nBut I think this is a false dichotomy.  As I said in previous mail I\nunderstand people are frustrated that it has taken so long, but it is\nnot the case that no progress has been made on scalability.\n\nI itemised a long list of scalability work which you acknowledged as\nimpressive work (CPU, memory, network bandwidth/latency) and RBF, CPFP\nfee work, fee-estimation, and so on, which you acknowledged and are\naware of.\n\nThere are multiple proposals and BIPs under consideration on the list right now.\n\n- what is the reason that you (or Gavin) would not post your BIP along\nside the others to see if it would win based on technical merit?\n\n- why would you feel uniquely qualified to override the expert opinion\nof the rest of the technical community if your proposal were not\nconsidered to have most technical merit? (Given that this is not a\nsimple market competition thing where multiple hard-forks can be\nconsidered - it is a one only decision, and if it is done in a\ndivisive unilateral way there are extreme risks of the ledger\ndiverging.)\n\nNetwork Divergence Risk\n\n>> - How do you propose to deal with the extra risks that come from\n>> non-consensus hard-forks?  Hard-forks themselves are quite risky, but\n>> non-consensus ones are extremely dangerous for consensus.\n>\n> The approach is the same for other forks. Voting via block versions and then\n> when there's been >X% for Y time units the 1mb limit is lifted/replaced.\n\nBut this is not a soft-fork, it is a hard-fork.  Miner voting is only\nperipherally related.  Even if in the extremis 75% of miners tried a\nunilateral hard-fork but 100% of the users stayed on the maintained\noriginal code, no change would occur other than those miners losing\nreward (mining fork-coins with no resale value) and the difficulty\nwould adjust.  The miners who made an error in choice would lose money\nand go out of business or rejoin the chain.\n\nHowever if something in that direction happens with actual users and\ncompanies on both sides of it users will lose money, the ledger will\ndiverge as soon as a single double-spend happens, and never share a\nblock again, companies will go instantly insolvent, and chaos will\nbreak out.  This is the dangerous scenario we are concerned about.\n\nSo the same question again:\n\n- How do you propose to deal with the extra risks that come from\nnon-consensus hard-forks?  Hard-forks themselves are quite risky, but\nnon-consensus ones are extremely dangerous for consensus.\n\n\nBeing sensitive to alarming the market\n\nIt is something akin to Greece or Portugal or Italy exiting the euro\ncurrency in a disorderly way.  Economists and central bank policy\nmakers are extremely worried about such an eventuality and talk about\nrelated factors in careful, measured terms, watch Mario Draghi when he\nspeaks.\n\nImagine that bitcoin is 10x or 100x bigger.  Bitcoin cant have people\ntaking unilateral actions such as you have been proposing.  It is not\nfollowing the consensus governance process, and not good policy and it\nis probably affecting bitcoin confidence and price at this moment.\n\n>> - Do you have contingency plans for what to do if the non-consensus\n>> hard-fork goes wrong and $3B is lost as a result?\n>\n> Where did you get the $3B figure from? The fork either doesn't happen, or it\n> happens after quite a long period of people knowing it's going to happen -\n> for example because their full node is printing \"You need to upgrade\"\n> messages due to seeing the larger block version, or because they read the\n> news, or because they heard about it via some other mechanisms.\n\nThis is not a soft-fork, and the community will not want to take the\nrisks once they understand them, and they have months in which to\nunderstand them and at this point you've motivated and wasted 100s of\ndeveloper man hours such that we will feel impelled to make sure that\nno one opts into a unilateral hard-fork without understanding the\nrisks.  It would be negligent to allow people to do that.  Before this\ngets very far FAQs will be on bitcoin.org etc explaining this risk I\nwould imagine.  Its just starting not finished.\n\nWhat makes you think the rest of the community may not instead prefer\nJeff Garzik's BIP after revisions that he is making now with review\ncomments from others?\n\nOr another proposal.  Taken together with a deployment plan that sees\nwork on decentralisation tying into that plan.\n\n- If you persisted anyway, what makes you think bitcoin could not make\ncode changes defensively relating to your unilateral fork?\n(I am sure creative minds can find some ways to harden bitcoin against\na unilateral fork, with a soft-fork or non-consensus update can be\ndeployed much faster than a hard-fork).\n\nI tried to warn Gavin privately that I thought he was under-estimating\nthe risk of failure to his fork proposal due to it being unilateral.\nIe as you both seem sincere in your wish to have your proposal\nsucceed, then obviously the best way to do that is to release a BIP in\nthe open collaborative process and submit it to review like everyone\nelse.  Doing it unilaterally only increases its chance of failure.\n\nThe only sensible thing to do here is submit a BIP and stop the\nunilateral fork threat.\n\nScalability Plans\n\n> Let me flip the question around. Do you have a contingency plan if Bitcoin\n> runs out of capacity and significant user disruption occurs that results in\n> exodus, followed by fall in BTC price? The only one I've seen is \"we can\n> perform an emergency hard fork in a few weeks\"!\n\nYes people have proposed other plans.  Bryan Bishop posted a list of them.\n\nJeff Garzik has a proposal, BIP-100 which seems already better than\nGavin's having benefit of peer review which he has been incorporating.\n\nI proposed several soft-fork models which can be deployed safely and\nimmediately, which do not have ledger risk.\n\nI have another proposal relating to simplified soft-fork one-way pegs\nwhich I'll write up in a bit.\n\nI think there are still issues in Jeff's proposal but he is very open\nand collaborating and there maybe related but different proposals\npresently.\n\n>> As you can probably tell I think a unilateral fork without wide-scale\n>> consensus from the technical and business communities is a deeply\n>> inadvisable.\n>\n> Gavin and I have been polling many key players in the ecosystem. The\n> consensus you seek does exist. All wallet developers (except Lawrence), all\n> the major exchanges, all the major payment processors and many of the major\n> mining pools want to see the limit lifted (I haven't been talking to pools,\n> Gavin has).\n\nIt does not seem to me that you understand the issue.  Of course they\nwant to increase the scalability of bitcoin.  So does everyone else on\nthis mailing list.\n\nThat they would support that is obvious.  If you presented your\nunilateral action plan without explaining the risks too.\n\nI think I covered this further above.  If you would like to share the\ncompany list, or we can invite them to the proposed public physical\nmeeting, I think it would be useful for them to have a balanced view\nof the ledger divergence risks, and alternative in-consensus proposals\nunderway, as well as the governance risks, maintenance risks, security\nincident risks.\n\nNote that other people talk to companies too, as part of their day to\nday jobs, or from contacts from being in the industry.  You have no\nspecial authority or unique ability to talk with business people.  Its\njust that the technical community did not know you were busy doing\nthat.\n\nI can not believe that any company that would listen to their CTO, CSO\nor failing that board would be ok with the risks implied by what you\nare proposing on full examination.\n\n> This notion that the change has no consensus is based on you polling the\n> people directly around you and people who like to spend all day on this\n> mailing list. It's not an accurate reflection of the wider Bitcoin community\n> and that is one of the leading reasons there is going to be a fork. A small\n> number of people have been flatly ignoring LOTS of highly technical and\n> passionate developers who have written vast amounts of code, built up the\n> Bitcoin user base, designed hardware and software, and yes built companies.\n\nI know you want scale bitcoin, as I said everyone here does. I think\nwhat you're experiencing is that you've had more luck explaining your\npragmatic unilateral plan to non-technical people without peer review,\nand so not experienced the kind of huge pushback you are getting from\nthe technical community.  The whole of bitcoin is immensely\ncomplicated such that it takes an uber-geek CS genius years to\ncatchup, this is not a slight of any of the business people who are\nworking hard to deploy Bitcoin into the world, its just complicated\nand therefore not easy to understand the game-theory, security,\ngovernance and distributed system thinking.  I have a comp sci PhD in\ndistributed systems, implemented p2p network systems and have 2\ndecades of applied crypto experience with a major interest in\nelectronic cash crypto protocols, and it took me a several years to\ncatchup and even I have a few hazy spots on low-level details, and I\naddictively into read everything I could find.  Realistically all of\nus are still learning, as bitcoin combines so many fields that it\nopens new possibilities.\n\nWhat I am expecting that yourself and Gavin are thinking is that\nyou'll knock heads and force the issue and get to consensus.\n\nHowever I think you have seriously misjudged the risks and have not\nadequately explained them to companies you are talking with.  Indeed\nyou do not fully seem to acknowledge the risks, nor to have a well\nthought out plan here of how you would actually manage it, nor the\nmoral hazards of having a lone developer in hugely divisive\ncircumstances in sole control of bitcoins running code.  Those are\nexactly the reasons for the code change governance process!\n\nEven though you are trying to help, the full result is you are not\nhelping achieve anything by changing a constant and starting a\nunilateral hard-fork (not to trivialise the work of making a patch to\ndo that).\n\nThe work to even make the constant change be feasible was a result of\n1000s of hours of work by others in the development community, that is\nemphatically and unilaterally telling you that hard-forks are hugely\ninadvisable.\n\nYou are trying to break the code change governance security procedure\nthat were put in place for good reason for the security of $3b of\nother peoples money, even if you have a pragmatic intent to help, this\nis flat out unacceptable.\n\nThere are also security implications to what you are proposing, which\nI have heard you attempting to trivialise, that are core to Bitcoins\nsecurity and core functionality.\n\n>  the overwhelming impression I get from a few\n> others here is that no, they don't want to scale Bitcoin. They already\n> decided it's a technological dead end.\n\nI think this is a significant mischaracterisation, and I think almost\neverybody is on board with a combination plan:\n\n1. work to improve decentralisation (specific technical work already\nunderway, and education)\n2. create a plan to increase block-size in a slow fashion to not cause\nsystem shocks (eg like Jeff is proposing or some better variant)\n3. work on actual algorithmic scaling\n\nIn this way we can have throughput needed for scalability and security\nwork to continue.\n\nAs I said you can not scale a O(n^2) broadcast network by changing\nconstants, you need algorithmic improvements.\n\nPeople are working on them already.  All of those 3 things are being\nactively worked on RIGHT NOW, and in the case of algorithmic scaling\nand improve decentralisation have been worked on for months.\n\nYou may have done one useful thing which is to remind people that\nblocks are only 3x-4x below capacity such that we should look at it.\n\nBut we can not work under duress of haste, nor unilateral ultimatums,\nthis is the realm of human action that leads to moral hazard, and\nironically reminds us of why Satoshi put the quote in the genesis\nblock.\n\nBitcoin is too complex a system with too much at stake to be making\npolitical hasty decisions, it would be negligent to act in such a way.\n\nAgain please consider that you did your job, caused people to pay\nattention, but return to the process, submit a BIP, retract the\nunilateral hard-fork which is so dangerous and lets have things be\ncalm, civil and collaborative in the technical zone of Bitcoin and not\nfurther alarm companies and investors.\n\nAdam"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-15T20:55:07",
                "message_text_only": "Hi Adam,\n\nI replied publicly because your questions were sent to the mailing list.\nI'd have been happy to reply in private if so asked.\n\nI started to write up a much longer reply, but I'm tired - we've long since\nbeen going in circles. I feel like I've written down answers to almost all\nyour questions before, including some in the email above.\n\nStill, there are a few new ones. Let me work through them now.\n\n\nYes, I am on the bitcoin-security list. I have always been on it. I have\ntaken part in many threads there and started one or two myself. I guess\nyou're not though, otherwise you'd know that. You can ask, I'm sure Gavin\nwill add you if you like.\n\n\nRe: BIP. Gavin is working on a BIP to go along with his patch. I hope that\nwill satisfy. I do not expect the resulting discussion to differ much from\nthe discussion so far, though.\n\n\nRe: summit. No, I would not attend. I have been to several Bitcoin\nconferences over the years where the block size issue was discussed. No\nprogress was ever made at these events.\n\n\n\nRe: if some flaw or bug was found in the patch. Yes, of course if there was\nsome specific problem with the code then we would fix it. There will be\ntime to review Gavin's patches for these reasons.\n\n\n\nRe: anyone who agrees with noted non-programmers Mike&Gavin must be\nnon-technical, stupid, uninformed, etc .... OK, go ahead and show them the\nerror of their ways. Anyone can write blogs.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/89e2f0ee/attachment.html>"
            },
            {
                "author": "Bryan Bishop",
                "date": "2015-06-15T21:56:05",
                "message_text_only": "On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> Re: anyone who agrees with noted non-programmers Mike&Gavin must be\n> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the\n> error of their ways. Anyone can write blogs.\n>\n\nI worry that if this is the level of care you take with reading and\n(mis)interpreting Adam's messages, that you might not be taking extreme\ncare with evaluating consensus changes, even while tired or sleeping. I\nencourage you to evaluate both messages and source code more carefully,\nespecially in the world of bitcoin. However, this goes for everyone and not\njust you. Specifically, when Adam mentioned your conversations with\nnon-technical people, he did not mean \"Mike has talked with people who have\npossibly not made pull requests to Bitcoin Core, so therefore Mike is a\nnon-programmer\". Communication is difficult and I can understand that, but\nwe really have to be more careful when evaluating each other's messages;\ntechnical miscommunication can be catastrophic in this context. On the\ntopic of whether you are a programmer, I suspect that ever since you built\nCIA.vc we have all known you're a programmer, Mike.\n\n- Bryan\nhttp://heybryan.org/\n1 512 203 0507\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/f4ffeedf/attachment.html>"
            },
            {
                "author": "Faiz Khan",
                "date": "2015-06-15T22:17:20",
                "message_text_only": "I'm quite puzzled by the response myself, it doesn't seem to address some\nof the (more serious) concerns that Adam put out, the most important\nquestion that was asked being the one regarding personal ownership of the\nproposed fork:\n\n\"How do you plan to deal with security & incident response for the duration\nyou describe where you will have control while you are deploying the\nunilateral hard-fork and being in sole maintainership control?\"\n\nI do genuinely hope that whomever (now and future) wishes to fork the\nprotocol reconsider first whether they are truly ready to test/flex their\nreputation/skills/resources in this way... Intuitively, to me it seems\ncounterproductive, and I don't fully believe it is within a single\ndeveloper's talents to manage the process start-to-finish (as it is\nnon-trivial to hard-fork successfully, others have rehashed this in other\nthreads)...\n\nThat being said I think it appropriate if Adam's questions were responded\nin-line when Mike is feeling up to it. I think that the answers are\nimportant for the community to hear when such a drastic change is being\nespoused.\n\nFaiz\n\nOn Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n\n> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n>\n>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be\n>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the\n>> error of their ways. Anyone can write blogs.\n>>\n>\n> I worry that if this is the level of care you take with reading and\n> (mis)interpreting Adam's messages, that you might not be taking extreme\n> care with evaluating consensus changes, even while tired or sleeping. I\n> encourage you to evaluate both messages and source code more carefully,\n> especially in the world of bitcoin. However, this goes for everyone and not\n> just you. Specifically, when Adam mentioned your conversations with\n> non-technical people, he did not mean \"Mike has talked with people who have\n> possibly not made pull requests to Bitcoin Core, so therefore Mike is a\n> non-programmer\". Communication is difficult and I can understand that, but\n> we really have to be more careful when evaluating each other's messages;\n> technical miscommunication can be catastrophic in this context. On the\n> topic of whether you are a programmer, I suspect that ever since you built\n> CIA.vc we have all known you're a programmer, Mike.\n>\n> - Bryan\n> http://heybryan.org/\n> 1 512 203 0507\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n> --\n>\n> My regards,\n>\n> Faiz Khan\n>\n>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4978e818/attachment.html>"
            },
            {
                "author": "Brian Hoffman",
                "date": "2015-06-15T22:56:02",
                "message_text_only": "Who is actually planning to move to Bitcoin-XT if this happens? \n\nJust Gavin and Mike?\n\n\n\n> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:\n> \n> I'm quite puzzled by the response myself, it doesn't seem to address some of the (more serious) concerns that Adam put out, the most important question that was asked being the one regarding personal ownership of the proposed fork:\n> \n> \"How do you plan to deal with security & incident response for the duration you describe where you will have control while you are deploying the unilateral hard-fork and being in sole maintainership control?\"\n> \n> I do genuinely hope that whomever (now and future) wishes to fork the protocol reconsider first whether they are truly ready to test/flex their reputation/skills/resources in this way... Intuitively, to me it seems counterproductive, and I don't fully believe it is within a single developer's talents to manage the process start-to-finish (as it is non-trivial to hard-fork successfully, others have rehashed this in other threads)... \n> \n> That being said I think it appropriate if Adam's questions were responded in-line when Mike is feeling up to it. I think that the answers are important for the community to hear when such a drastic change is being espoused. \n> \n> Faiz\n> \n>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be non-technical, stupid, uninformed, etc .... OK, go ahead and show them the error of their ways. Anyone can write blogs.\n>> \n>> I worry that if this is the level of care you take with reading and (mis)interpreting Adam's messages, that you might not be taking extreme care with evaluating consensus changes, even while tired or sleeping. I encourage you to evaluate both messages and source code more carefully, especially in the world of bitcoin. However, this goes for everyone and not just you. Specifically, when Adam mentioned your conversations with non-technical people, he did not mean \"Mike has talked with people who have possibly not made pull requests to Bitcoin Core, so therefore Mike is a non-programmer\". Communication is difficult and I can understand that, but we really have to be more careful when evaluating each other's messages; technical miscommunication can be catastrophic in this context. On the topic of whether you are a programmer, I suspect that ever since you built CIA.vc we have all known you're a programmer, Mike.\n>> \n>> - Bryan\n>> http://heybryan.org/\n>> 1 512 203 0507\n>> \n>> ------------------------------------------------------------------------------\n>> \n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n>> -- \n>> \n>> My regards,\n>> \n>> Faiz Khan\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/6de7b490/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image1.JPG\nType: image/jpeg\nSize: 22107 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/6de7b490/attachment.jpe>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-16T00:08:11",
                "message_text_only": "Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core\nmaintainers simply refuse to lift the 1Mb limit? No one wants to go that\nroute. An alternate hard-fork proposal like BIP100 that gets consensus, or\na modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or\nhell even some major changes to the non-consunsus code to make it\nadequately handle the situation when blocks fill up, and allow wallet\nsoftware to continue working with a send-and-forget use pattern, any of\nthese would be enough to avoid the need for an XT only hard-fork.\n\nSo far BIP100 is the only one that seems to actually be getting any sort of\nmomentum toward consensus, and it was proposed... 2 days ago? When the XT\nfork was proposed as a last resort, it was when the opponents were (to my\nunderstanding) suggesting we just let blocks fill up, and hopefully things\nwould just work out on their own.\n\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>\nwrote:\n\n> Who is actually planning to move to Bitcoin-XT if this happens?\n>\n> Just Gavin and Mike?\n>\n> [image: image1.JPG]\n>\n> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:\n>\n> I'm quite puzzled by the response myself, it doesn't seem to address some\n> of the (more serious) concerns that Adam put out, the most important\n> question that was asked being the one regarding personal ownership of the\n> proposed fork:\n>\n> \"How do you plan to deal with security & incident response for the\n> duration you describe where you will have control while you are deploying\n> the unilateral hard-fork and being in sole maintainership control?\"\n>\n> I do genuinely hope that whomever (now and future) wishes to fork the\n> protocol reconsider first whether they are truly ready to test/flex their\n> reputation/skills/resources in this way... Intuitively, to me it seems\n> counterproductive, and I don't fully believe it is within a single\n> developer's talents to manage the process start-to-finish (as it is\n> non-trivial to hard-fork successfully, others have rehashed this in other\n> threads)...\n>\n> That being said I think it appropriate if Adam's questions were responded\n> in-line when Mike is feeling up to it. I think that the answers are\n> important for the community to hear when such a drastic change is being\n> espoused.\n>\n> Faiz\n>\n> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n>\n>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n>>\n>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be\n>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the\n>>> error of their ways. Anyone can write blogs.\n>>>\n>>\n>> I worry that if this is the level of care you take with reading and\n>> (mis)interpreting Adam's messages, that you might not be taking extreme\n>> care with evaluating consensus changes, even while tired or sleeping. I\n>> encourage you to evaluate both messages and source code more carefully,\n>> especially in the world of bitcoin. However, this goes for everyone and not\n>> just you. Specifically, when Adam mentioned your conversations with\n>> non-technical people, he did not mean \"Mike has talked with people who have\n>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a\n>> non-programmer\". Communication is difficult and I can understand that, but\n>> we really have to be more careful when evaluating each other's messages;\n>> technical miscommunication can be catastrophic in this context. On the\n>> topic of whether you are a programmer, I suspect that ever since you built\n>> CIA.vc we have all known you're a programmer, Mike.\n>>\n>> - Bryan\n>> http://heybryan.org/\n>> 1 512 203 0507\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>> --\n>>\n>> My regards,\n>>\n>> Faiz Khan\n>>\n>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8b369aeb/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image1.JPG\nType: image/jpeg\nSize: 22107 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8b369aeb/attachment.jpe>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-16T00:41:00",
                "message_text_only": "On Mon, Jun 15, 2015 at 5:08 PM, Aaron Voisine <voisine at gmail.com> wrote:\n\n> Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core\n> maintainers simply refuse to lift the 1Mb limit? No one wants to go that\n> route. An alternate hard-fork proposal like BIP100 that gets consensus, or\n> a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or\n> hell even some major changes to the non-consunsus code to make it\n> adequately handle the situation when blocks fill up, and allow wallet\n> software to continue working with a send-and-forget use pattern, any of\n> these would be enough to avoid the need for an XT only hard-fork.\n>\n> So far BIP100 is the only one that seems to actually be getting any sort\n> of momentum toward consensus, and it was proposed... 2 days ago? When the\n> XT fork was proposed as a last resort, it was when the opponents were (to\n> my understanding) suggesting we just let blocks fill up, and hopefully\n> things would just work out on their own.\n>\n\nWe are not reaching consensus about any proposal, Garzik's or otherwise.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/8ccbaeef/attachment.html>"
            },
            {
                "author": "Alex Morcos",
                "date": "2015-06-16T01:17:56",
                "message_text_only": "Aaron,\n\nMy understanding is that Gavin and Mike are proceeding with the XT fork, I\nhope that understanding is wrong.\n\nAs for improving the non-consensus code to handle full blocks more\ngracefully.  This is something I'm very interested in, block size increase\nor not. Perhaps I shouldn't hijack this thread, but maybe there are others\nwho also believe this would ameliorate some of the time pressure for\ndeciding on a block size increase.\n\nWhat is it that you would like to see improved?\nThe fee estimation code that is included for 0.11 will give much more\naccurate fee estimates, which should allow adding the correct fee to a\ntransaction to see it likely to be confirmed in a reasonable time.  For\nfurther improvements:\n- There has recently been attention to overhauling the block creation and\nmempool limiting code in such a way that actual outstanding queues to be\nincluded in a block could also be incorporated in fee estimation.  See\nhttps://github.com/bitcoin/bitcoin/pull/6281.\n- CPFP and RBF are candidates for inclusion in core soon, both of which\ncould be integrated into transaction processing to handle the edge cases\nwhere a priori fee estimation fails. See\nhttps://github.com/bitcoin/bitcoin/pull/1647 and\nhttps://github.com/bitcoin/bitcoin/pull/6176\n\nI know there has been much discussion of fee estimation not working for SPV\nclients, but I believe several independent servers which were serving the\nestimates from full nodes would go a long way towards allowing that\ninformation to be used by SPV clients even if its not a completely\ndecentralized solution.  See for example\nhttp://core2.bitcoincore.org/smartfee/latest.json\n\n\n\nOn Mon, Jun 15, 2015 at 8:08 PM, Aaron Voisine <voisine at gmail.com> wrote:\n\n> Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core\n> maintainers simply refuse to lift the 1Mb limit? No one wants to go that\n> route. An alternate hard-fork proposal like BIP100 that gets consensus, or\n> a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or\n> hell even some major changes to the non-consunsus code to make it\n> adequately handle the situation when blocks fill up, and allow wallet\n> software to continue working with a send-and-forget use pattern, any of\n> these would be enough to avoid the need for an XT only hard-fork.\n>\n> So far BIP100 is the only one that seems to actually be getting any sort\n> of momentum toward consensus, and it was proposed... 2 days ago? When the\n> XT fork was proposed as a last resort, it was when the opponents were (to\n> my understanding) suggesting we just let blocks fill up, and hopefully\n> things would just work out on their own.\n>\n>\n>\n> Aaron Voisine\n> co-founder and CEO\n> breadwallet.com\n>\n> On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>\n> wrote:\n>\n>> Who is actually planning to move to Bitcoin-XT if this happens?\n>>\n>> Just Gavin and Mike?\n>>\n>> [image: image1.JPG]\n>>\n>> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:\n>>\n>> I'm quite puzzled by the response myself, it doesn't seem to address some\n>> of the (more serious) concerns that Adam put out, the most important\n>> question that was asked being the one regarding personal ownership of the\n>> proposed fork:\n>>\n>> \"How do you plan to deal with security & incident response for the\n>> duration you describe where you will have control while you are deploying\n>> the unilateral hard-fork and being in sole maintainership control?\"\n>>\n>> I do genuinely hope that whomever (now and future) wishes to fork the\n>> protocol reconsider first whether they are truly ready to test/flex their\n>> reputation/skills/resources in this way... Intuitively, to me it seems\n>> counterproductive, and I don't fully believe it is within a single\n>> developer's talents to manage the process start-to-finish (as it is\n>> non-trivial to hard-fork successfully, others have rehashed this in other\n>> threads)...\n>>\n>> That being said I think it appropriate if Adam's questions were responded\n>> in-line when Mike is feeling up to it. I think that the answers are\n>> important for the community to hear when such a drastic change is being\n>> espoused.\n>>\n>> Faiz\n>>\n>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n>>\n>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n>>>\n>>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be\n>>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the\n>>>> error of their ways. Anyone can write blogs.\n>>>>\n>>>\n>>> I worry that if this is the level of care you take with reading and\n>>> (mis)interpreting Adam's messages, that you might not be taking extreme\n>>> care with evaluating consensus changes, even while tired or sleeping. I\n>>> encourage you to evaluate both messages and source code more carefully,\n>>> especially in the world of bitcoin. However, this goes for everyone and not\n>>> just you. Specifically, when Adam mentioned your conversations with\n>>> non-technical people, he did not mean \"Mike has talked with people who have\n>>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a\n>>> non-programmer\". Communication is difficult and I can understand that, but\n>>> we really have to be more careful when evaluating each other's messages;\n>>> technical miscommunication can be catastrophic in this context. On the\n>>> topic of whether you are a programmer, I suspect that ever since you built\n>>> CIA.vc we have all known you're a programmer, Mike.\n>>>\n>>> - Bryan\n>>> http://heybryan.org/\n>>> 1 512 203 0507\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>> --\n>>>\n>>> My regards,\n>>>\n>>> Faiz Khan\n>>>\n>>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/66911ee3/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image1.JPG\nType: image/jpeg\nSize: 22107 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/66911ee3/attachment.jpe>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-16T04:00:19",
                "message_text_only": "Thanks Alex, the work you've pointed out is helpful. Limiting mempool size\nshould at least prevent nodes from crashing. When I looked a few days ago I\nonly found a few old PRs that seemed to have fallen by the wayside, so this\nnew one is encouraging.\n\nI can respond in the PR comments if it's more appropriate there, but I\nbelieve ejecting tx from mempools rather than preemptively refusing them\naccording to standard network wide propagation rules will result in spotty,\ninconsistent tx propagation, and possibly a large increase in tx\nre-broadcasts, so if those haven't been addressed they will need to be. It\nwould also be prudent to run some simulations to see what other issues are\ngoing to pop-up.\n\nWe're currently using CPFP already in breadwallet when spending unconfirmed\nnon-change inputs. A small percentage of hashing power is using it, but\nenough to get a transaction unstuck assuming breadwallet's fee calculation\nis better than the sender's.\n\nThe problem with RBF is that there's currently no way to tell if your tx\nhas been picked up by miners or not in order to know if you need to replace\nit. Miners broadcasting partial block solutions would be helpful in this\nregard, but only for tx in the currently-being-worked-on block, not for tx\nthat won't be picked up until the block after. If miners were to eject tx\nthat were previously being worked on in favor of higher fee tx, then that\ncauses another set of problems for wallets that thought their tx was going\nto get in but then it doesn't. The other problem with RBF is that users\ndon't know up front what fee they're actually going to pay which is a big\nblow to real world usability. Also mobile wallets will have to sign lots of\ntx up front and rely on a service to replace as necessary. And this is all\njust on the send side. On the receive side it's much worse since you can't\nrely on the sender to do the replacing. The real problem seems to be the\nfact that RBF is an interactive iterative process rather than a\nsend-and-forget one.\n\nWhat you really need is some way to tell up-front, is a transaction going\nto get mined with a high probability? That problem seems really difficult\nto solve with fixed-size blocks that are full. If the goal is simply to\nreduce or limit the growth of the blockchain, then there are much simpler\nsolutions, which is why I've advocated for the blocksize increase, followed\nby tx selection and propagation rule changes to create fee pressure.\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Mon, Jun 15, 2015 at 6:17 PM, Alex Morcos <morcos at gmail.com> wrote:\n\n> Aaron,\n>\n> My understanding is that Gavin and Mike are proceeding with the XT fork, I\n> hope that understanding is wrong.\n>\n> As for improving the non-consensus code to handle full blocks more\n> gracefully.  This is something I'm very interested in, block size increase\n> or not. Perhaps I shouldn't hijack this thread, but maybe there are others\n> who also believe this would ameliorate some of the time pressure for\n> deciding on a block size increase.\n>\n> What is it that you would like to see improved?\n> The fee estimation code that is included for 0.11 will give much more\n> accurate fee estimates, which should allow adding the correct fee to a\n> transaction to see it likely to be confirmed in a reasonable time.  For\n> further improvements:\n> - There has recently been attention to overhauling the block creation and\n> mempool limiting code in such a way that actual outstanding queues to be\n> included in a block could also be incorporated in fee estimation.  See\n> https://github.com/bitcoin/bitcoin/pull/6281.\n> - CPFP and RBF are candidates for inclusion in core soon, both of which\n> could be integrated into transaction processing to handle the edge cases\n> where a priori fee estimation fails. See\n> https://github.com/bitcoin/bitcoin/pull/1647 and\n> https://github.com/bitcoin/bitcoin/pull/6176\n>\n> I know there has been much discussion of fee estimation not working for\n> SPV clients, but I believe several independent servers which were serving\n> the estimates from full nodes would go a long way towards allowing that\n> information to be used by SPV clients even if its not a completely\n> decentralized solution.  See for example\n> http://core2.bitcoincore.org/smartfee/latest.json\n>\n>\n>\n> On Mon, Jun 15, 2015 at 8:08 PM, Aaron Voisine <voisine at gmail.com> wrote:\n>\n>> Wasn't the XT hard fork proposed as a last resort, should the\n>> bitcoin-core maintainers simply refuse to lift the 1Mb limit? No one wants\n>> to go that route. An alternate hard-fork proposal like BIP100 that gets\n>> consensus, or a modified version of gavin's that ups the limit to 8Mb\n>> instead of 20Mb, or hell even some major changes to the non-consunsus code\n>> to make it adequately handle the situation when blocks fill up, and allow\n>> wallet software to continue working with a send-and-forget use pattern, any\n>> of these would be enough to avoid the need for an XT only hard-fork.\n>>\n>> So far BIP100 is the only one that seems to actually be getting any sort\n>> of momentum toward consensus, and it was proposed... 2 days ago? When the\n>> XT fork was proposed as a last resort, it was when the opponents were (to\n>> my understanding) suggesting we just let blocks fill up, and hopefully\n>> things would just work out on their own.\n>>\n>>\n>>\n>> Aaron Voisine\n>> co-founder and CEO\n>> breadwallet.com\n>>\n>> On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>\n>> wrote:\n>>\n>>> Who is actually planning to move to Bitcoin-XT if this happens?\n>>>\n>>> Just Gavin and Mike?\n>>>\n>>> [image: image1.JPG]\n>>>\n>>> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:\n>>>\n>>> I'm quite puzzled by the response myself, it doesn't seem to address\n>>> some of the (more serious) concerns that Adam put out, the most important\n>>> question that was asked being the one regarding personal ownership of the\n>>> proposed fork:\n>>>\n>>> \"How do you plan to deal with security & incident response for the\n>>> duration you describe where you will have control while you are deploying\n>>> the unilateral hard-fork and being in sole maintainership control?\"\n>>>\n>>> I do genuinely hope that whomever (now and future) wishes to fork the\n>>> protocol reconsider first whether they are truly ready to test/flex their\n>>> reputation/skills/resources in this way... Intuitively, to me it seems\n>>> counterproductive, and I don't fully believe it is within a single\n>>> developer's talents to manage the process start-to-finish (as it is\n>>> non-trivial to hard-fork successfully, others have rehashed this in other\n>>> threads)...\n>>>\n>>> That being said I think it appropriate if Adam's questions were\n>>> responded in-line when Mike is feeling up to it. I think that the answers\n>>> are important for the community to hear when such a drastic change is being\n>>> espoused.\n>>>\n>>> Faiz\n>>>\n>>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n>>>\n>>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n>>>>\n>>>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be\n>>>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the\n>>>>> error of their ways. Anyone can write blogs.\n>>>>>\n>>>>\n>>>> I worry that if this is the level of care you take with reading and\n>>>> (mis)interpreting Adam's messages, that you might not be taking extreme\n>>>> care with evaluating consensus changes, even while tired or sleeping. I\n>>>> encourage you to evaluate both messages and source code more carefully,\n>>>> especially in the world of bitcoin. However, this goes for everyone and not\n>>>> just you. Specifically, when Adam mentioned your conversations with\n>>>> non-technical people, he did not mean \"Mike has talked with people who have\n>>>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a\n>>>> non-programmer\". Communication is difficult and I can understand that, but\n>>>> we really have to be more careful when evaluating each other's messages;\n>>>> technical miscommunication can be catastrophic in this context. On the\n>>>> topic of whether you are a programmer, I suspect that ever since you built\n>>>> CIA.vc we have all known you're a programmer, Mike.\n>>>>\n>>>> - Bryan\n>>>> http://heybryan.org/\n>>>> 1 512 203 0507\n>>>>\n>>>>\n>>>> ------------------------------------------------------------------------------\n>>>>\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>>>> --\n>>>>\n>>>> My regards,\n>>>>\n>>>> Faiz Khan\n>>>>\n>>>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n>>>\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/cb4817fe/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image1.JPG\nType: image/jpeg\nSize: 22107 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/cb4817fe/attachment.jpe>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-17T03:54:45",
                "message_text_only": "On Mon, Jun 15, 2015 at 09:00:19PM -0700, Aaron Voisine wrote:\n> Thanks Alex, the work you've pointed out is helpful. Limiting mempool size\n> should at least prevent nodes from crashing. When I looked a few days ago I\n> only found a few old PRs that seemed to have fallen by the wayside, so this\n> new one is encouraging.\n\nBTW it's worth working out how many $ in fees you need for a given\namount of MB worth of mempool.\n\nAt the current 10uBTC/KB minimim relay fee 1MB of txs requires just $2.5\nworth of fees - kinda ridiculous when a block earns a miner $6250 in\nrevenue. Pretty much all txs pay significantly higher rates - more like\n100uBTC/KB, or $25/MB. At that rate the 288MB max mempool size proposed\nby Patrick Strateman's pull-req requires at least $7.2k worth of BTC to\nfill to pay the fees, and in practice will probably quickly get higher.\n\nhttps://github.com/bitcoin/bitcoin/pull/6281\n\n> I can respond in the PR comments if it's more appropriate there, but I\n> believe ejecting tx from mempools rather than preemptively refusing them\n> according to standard network wide propagation rules will result in spotty,\n> inconsistent tx propagation, and possibly a large increase in tx\n> re-broadcasts, so if those haven't been addressed they will need to be. It\n> would also be prudent to run some simulations to see what other issues are\n> going to pop-up.\n\nSee above - filling the mempool like that will be both a slow process,\nand require lots of funds. Equally, once full, the sensible thing to do\nis raise the minimum relay fee appropriately, so those transactions that\npay too low a fee will simply be rejected.\n\nIt'd be reasonable to tell peers that, and what the minimum fee needed\nfor acceptance would be for that particular node.\n\n> We're currently using CPFP already in breadwallet when spending unconfirmed\n> non-change inputs. A small percentage of hashing power is using it, but\n> enough to get a transaction unstuck assuming breadwallet's fee calculation\n> is better than the sender's.\n\n> The problem with RBF is that there's currently no way to tell if your tx\n> has been picked up by miners or not in order to know if you need to replace\n> it. Miners broadcasting partial block solutions would be helpful in this\n> regard, but only for tx in the currently-being-worked-on block, not for tx\n> that won't be picked up until the block after. If miners were to eject tx\n> that were previously being worked on in favor of higher fee tx, then that\n> causes another set of problems for wallets that thought their tx was going\n> to get in but then it doesn't. The other problem with RBF is that users\n> don't know up front what fee they're actually going to pay which is a big\n> blow to real world usability. Also mobile wallets will have to sign lots of\n> tx up front and rely on a service to replace as necessary. And this is all\n> just on the send side.\n\nFor an interactive, mobile wallet, the best thing to do is estimate the\nfee correctly the first time, using RBF as a follow up mechanism only if\nneeded. For other users - e.g. exchanges handling customer withdrawals -\nusing RBF more agressively to get the minimum possible fee may make\nsense.\n\n> On the receive side it's much worse since you can't\n> rely on the sender to do the replacing. The real problem seems to be the\n> fact that RBF is an interactive iterative process rather than a\n> send-and-forget one.\n\nIn any case, the *existance* of RBF makes no difference to any of these\nproblems; RBF does make solving the easier. You can always choose to not\nuse it after all, resulting in the same \"send-and-forget\" process.\nHaving it available allows mistakes to be fixed after the fact, always\nan improved user experience over not being able to re-bid for block\nspace.\n\n\nIncidentally, if my FSS-RBF bug bounty isn't collected in the next week\nor two, we'll likely have a major double-digits % of hashing power\nmining FSS-RBF soon after.\n\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08122.html\n\n> What you really need is some way to tell up-front, is a transaction going\n> to get mined with a high probability? That problem seems really difficult\n> to solve with fixed-size blocks that are full.\n\nHave you looked at the fee estimation code in Bitcoin Core? I have no\nreason to think it doesn't basically speaking work. Of course, SPV\nwallets will need a semi-trusted third party to securely get that data,\nbut this seems to be a fundemental problem in a decentralized network -\nthe purpose of the blockchain itself is to prove that some data was\npublished to some audience, an analogous problem to proving to the SPV\nwallet that their transaction actually reached miners and they actually\nare considering it for inclusion.\n\nGuaranteed reliable transaction processing is only possible in\ncentralized environments that can make service guarantees.\n\n> If the goal is simply to\n> reduce or limit the growth of the blockchain, then there are much simpler\n> solutions, which is why I've advocated for the blocksize increase, followed\n> by tx selection and propagation rule changes to create fee pressure.\n\nFew if any of those mechanisms can be deployed in a consensus-critical\nway that is resistant to attack; the blocksize limit is needed to -\namong other things - resist attacks by one miner on another to reduce\nthe competitors profitability. Without an explicit limit tx selection\nand propagation rule changes can be gamed.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/46d63a0f/attachment.sig>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-18T15:23:16",
                "message_text_only": "On Tue, Jun 16, 2015 at 2:08 AM, Aaron Voisine <voisine at gmail.com> wrote:\n>\n> hell even some major changes to the non-consunsus code to make it\nadequately handle the situation when blocks fill up\n\n\nThis will have to eventually be done in addition to any other \"alternative\"\nunless the plan is to keep rising the limit until it is removed or\nirrelevant.\n\nMaybe this should be the priority? Maybe this is the \"alternative\" that\nsome no-block-size-limit proponents (meaning people who think that\ncentralization is not a concern when deciding the block size limit) claim\nnobody was putting forward?\n\nAnyway, it's sad that we're always mixing 2 different topics: hardfork\ndeployment and blocksize limit. I wish we talked more about the former, I\nwish we would have talked about it it long before the block size debate\nbecame \"urgent\" (or at least before it was being perceived as urgent).\nWe've had plenty of time to deploy non-emergency hardforks but apparently\nno one was interested (say, for fixing miner but known bugs like the\ntimetravel attack).\nIn fact, I plan to eventually propose such a fork, I agree with gavin that\n\"hardforks aren't possible\" is not an answer, though finding opposition to\na concrete hardfork in a concrete point in time doesn't mean that\n\"hardforks aren't possible\". I believe I have proposed many more hardforks\nthan Gavin, all of them rejected and I still hope some of them will\neventually make it into bitcoin main.\nWhen it was clear that wouldn't be the case I'm afraid the only answer is\ncreating an altcoin (like Mark and I did with Freicoin and \"xtcoin\" could\nbecome [hopefully not destroying bitcoin main in the process]).\n\nOn Tue, Jun 16, 2015 at 2:08 AM, Aaron Voisine <voisine at gmail.com> wrote:\n\n> Wasn't the XT hard fork proposed as a last resort, should the bitcoin-core\n> maintainers simply refuse to lift the 1Mb limit? No one wants to go that\n> route. An alternate hard-fork proposal like BIP100 that gets consensus, or\n> a modified version of gavin's that ups the limit to 8Mb instead of 20Mb, or\n> hell even some major changes to the non-consunsus code to make it\n> adequately handle the situation when blocks fill up, and allow wallet\n> software to continue working with a send-and-forget use pattern, any of\n> these would be enough to avoid the need for an XT only hard-fork.\n>\n> So far BIP100 is the only one that seems to actually be getting any sort\n> of momentum toward consensus, and it was proposed... 2 days ago? When the\n> XT fork was proposed as a last resort, it was when the opponents were (to\n> my understanding) suggesting we just let blocks fill up, and hopefully\n> things would just work out on their own.\n>\n>\n>\n> Aaron Voisine\n> co-founder and CEO\n> breadwallet.com\n>\n> On Mon, Jun 15, 2015 at 3:56 PM, Brian Hoffman <brianchoffman at gmail.com>\n> wrote:\n>\n>> Who is actually planning to move to Bitcoin-XT if this happens?\n>>\n>> Just Gavin and Mike?\n>>\n>> [image: image1.JPG]\n>>\n>> On Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:\n>>\n>> I'm quite puzzled by the response myself, it doesn't seem to address some\n>> of the (more serious) concerns that Adam put out, the most important\n>> question that was asked being the one regarding personal ownership of the\n>> proposed fork:\n>>\n>> \"How do you plan to deal with security & incident response for the\n>> duration you describe where you will have control while you are deploying\n>> the unilateral hard-fork and being in sole maintainership control?\"\n>>\n>> I do genuinely hope that whomever (now and future) wishes to fork the\n>> protocol reconsider first whether they are truly ready to test/flex their\n>> reputation/skills/resources in this way... Intuitively, to me it seems\n>> counterproductive, and I don't fully believe it is within a single\n>> developer's talents to manage the process start-to-finish (as it is\n>> non-trivial to hard-fork successfully, others have rehashed this in other\n>> threads)...\n>>\n>> That being said I think it appropriate if Adam's questions were responded\n>> in-line when Mike is feeling up to it. I think that the answers are\n>> important for the community to hear when such a drastic change is being\n>> espoused.\n>>\n>> Faiz\n>>\n>> On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n>>\n>>> On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n>>>\n>>>> Re: anyone who agrees with noted non-programmers Mike&Gavin must be\n>>>> non-technical, stupid, uninformed, etc .... OK, go ahead and show them the\n>>>> error of their ways. Anyone can write blogs.\n>>>>\n>>>\n>>> I worry that if this is the level of care you take with reading and\n>>> (mis)interpreting Adam's messages, that you might not be taking extreme\n>>> care with evaluating consensus changes, even while tired or sleeping. I\n>>> encourage you to evaluate both messages and source code more carefully,\n>>> especially in the world of bitcoin. However, this goes for everyone and not\n>>> just you. Specifically, when Adam mentioned your conversations with\n>>> non-technical people, he did not mean \"Mike has talked with people who have\n>>> possibly not made pull requests to Bitcoin Core, so therefore Mike is a\n>>> non-programmer\". Communication is difficult and I can understand that, but\n>>> we really have to be more careful when evaluating each other's messages;\n>>> technical miscommunication can be catastrophic in this context. On the\n>>> topic of whether you are a programmer, I suspect that ever since you built\n>>> CIA.vc we have all known you're a programmer, Mike.\n>>>\n>>> - Bryan\n>>> http://heybryan.org/\n>>> 1 512 203 0507\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>>\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>> --\n>>>\n>>> My regards,\n>>>\n>>> Faiz Khan\n>>>\n>>>  <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/5df84554/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image1.JPG\nType: image/jpeg\nSize: 22107 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/5df84554/attachment.jpe>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-16T11:29:31",
                "message_text_only": ">\n> \"How do you plan to deal with security & incident response for the\n> duration you describe where you will have control while you are deploying\n> the unilateral hard-fork and being in sole maintainership control?\"\n>\n\nHow do we plan to deal with security & incident response - exactly the same\nway as before. Remember that XT is basically Core plus a few patches.\n\nGavin and myself are both on the bitcoin-security mailing list and have\nbeen for years. Both of us have experience of responding to very serious\nand tight-deadline security incidents, for example, the accidental bdb hard\nfork and (in my case) when we discovered that Android phones had so little\nentropy in them that different devices were actually generating the same\nkeys!\n\nThat one required co-ordinated crash rollouts of multiple wallets across\nthe Bitcoin ecosystem because there was a parallel investigation into key\ncollisions taking place in an open forum and they were not far from\ndiscovering the truth about how badly the Android RNG was broken   (I knew\nbecause at the time I had access to the Google internal Android bug\ntracker). I organised the whole thing.\n\nSo I think we'll manage. But I don't expect things to exist in a state of\ndisjointness for very long. XT will rebase on top of Core and follow it's\nreleases for as long as there seems to be interest in bigger blocks and as\nlong as I have the time/energy/interest. If the >1mb chain wins then Core\nwill have to adopt the new ruleset or simply stop being relevant, as it\nwill have no users. That wouldn't make much sense.\n\nNow, there have been concerns raised that a hard fork is unbelievably\nrisky, the sky will fall, the value of Bitcoin will drop to zero, etc. I\ndon't believe it's anywhere near that risky. The patch Gavin is working on\nrequires both a miner majority *and* also has a date trigger in it. Much\nlike previous forks, in fact. So nobody should be taken by surprise if/when\nbigger blocks appear, because it will have been known for a long time\nbeforehand that there was sufficiently strong consensus, there will have\nbeen messages printed to the node logs, announcements in various places and\nso on.\n\nDoes that help clear things up?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/abf446cc/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-16T11:20:34",
                "message_text_only": "Hi Bryan,\n\nSpecifically, when Adam mentioned your conversations with non-technical\n> people, he did not mean \"Mike has talked with people who have possibly not\n> made pull requests to Bitcoin Core, so therefore Mike is a non-programmer\".\n>\n\nYes, my comment was prickly and grumpy. No surprises, I did not sleep well\nlast night.\n\nI am upset about this constant insistence from Adam, Gregory and others\nthat the \"technical community\" or \"technical majority\" agree with them and\nanyone who doesn't is \"non technical\" or \"not a contributor\" or not an\nexpert or not had things properly explained to them.\n\nThis is not true and needs to stop. Gavin and I have both been working on\nBitcoin in substantial ways for longer than Gregory and Adam have been in\nthe community at all. We are extremely technical, as are many of the people\nwho want us to release XT+larger blocks. We cannot make progress in any\nkind of negotiation if one side constantly blows off the other and refuses\nto take anything they say seriously, which has been a feature of this\n\"debate\" from the start.\n\nIn contrast Gavin and I have written vast amounts of analysis on the\nconcerns raised by larger blocks. So many hours were spent, we could\nprobably fill a small book by now. We have carefully read and addressed\n*dozens* of points raised by the 1mb camp. We have also done our best to\nopen this debate to the whole community.\n\nSo it would be nice if the people who are so keen on 1mb blocks show the\nsame respect to us.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/15732844/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-16T12:33:31",
                "message_text_only": "On Tue, Jun 16, 2015 at 2:03 AM, Adam Back <adam at cypherspace.org> wrote:\n\n> Hi Mike\n>\n> Well thank you for replying openly on this topic, its helpful.\n>\n> I apologise in advance if this gets quite to the point and at times\n> blunt, but transparency is important, and we owe it to the users who\n> see Bitcoin as the start of a new future and the$3b of invested funds\n> and $600m of VC funds invested in companies, we owe it to them that we\n> be open and transparent here.\n>\n> I would really prefer on a personal nor professional basis to be\n> having this conversation period, never mind in public, but Mike - your\n> and Gavin's decision to promote a unilateral hard-fork and code fork\n> are extremely high risk for bitcoin and so there remains little\n> choice.  So I apologise again that we have to have this kind of\n> conversation on a technical discussion list.  This whole thing is\n> hugely stressful and worrying for developers, companies and investors.\n>\n> I strongly urge that we return to the existing collaborative\n> constructive review process that has been used for the last 4 years\n> which is a consensus by design to prevent one rogue person from\n> inserting a backdoor, or lobbying for a favoured change on behalf of a\n> special interest group, or working for bad actor (without accusing you\n> of any of those - I understand you personally just want to scale\n> bitcoin, but are inclined to knock heads and try to force an issue you\n> see, rather than work collaboratively).\n>\n> For you (and everyone)\n>\n> - Should there be a summit of some kind, that is open attendance, and\n> video recorded so that people who are unable to attend can participate\n> too, so that people can present the technical proposals and risks in\n> an unbiased way?\n>\n>\nDear Adam, All:\n\nAt the community's convenience, it would be an honour to arrange an initial\nopen summit to meet with representatives of the Chinese miners in Hong Kong\n(UTC+8) to facilitate a better understand between the different\nstakeholders of the Bitcoin ecosystem on this important issue.   This could\nbe arranged for this October, or earlier, if deemed necessary.\n\nRemote online participation would be welcome from those who might not be\nable to attend in person.\n\nHowever,  it is hoped that such a meeting would be primarily document\ndriven to facilitate orderly translation, discussion and decision.\n\np.\n\n\n\n> (It is not theoretical question, I may have a sponsor and host - not\n> Blockstream, an independent, its a question for everyone, developers,\n> users, CTOs, CEOs.)\n>\n>\n>\n> So here I come back to more frank questions:\n>\n> Governance\n>\n> The rest of the developers are wise to realise that they do not want\n> exclusive control, to avoid governance centralising into the hands of\n> one person, and this is why they have shared it with a consensus\n> process over the last 4 years.  No offence but I dont think you\n> personally are thinking far enough ahead to think you want personal\n> control of this industry.  Maybe some factions dont trust your\n> motives, or they dont mind, but feel more assured if a dozen other\n> people are closely reviewing and have collective review authority.\n>\n> - Do you understand that attempting to break this process by\n> unilateral hard-fork is extremely weakening of Bitcoin's change\n> governance model?\n>\n> - Do you understand that change governance is important, and that it\n> is important that there be multiple reviewers and sign-off to avoid\n> someone being blackmailed or influenced by an external party - which\n> could potentially result in massive theft of funds if something were\n> missed?\n>\n> - Secondarily do you understand that even if you succeed in a\n> unilateral fork (and the level of lost coins and market cap and damage\n> to confidence is recoverable), that it sets a precedent that others\n> may try to follow in the future to introduce coercive features that\n> break the assurances of bitcoin, like fungibility reducing features\n> say (topically I hear you once proposed on a private forum the concept\n> of red-lists, other such proposals have been made and quickly\n> abandoned), or ultimately if there is a political process to obtain\n> unpopular changes by unilateral threat, the sky is the limit - rewrite\n> the social contract at that point without consensus, but by\n> calculation that people will value Bitcoin enough that they will\n> follow a lead to avoid risk to the system?\n>\n>\n> Security\n>\n> As you probably know some extremely subtle bugs in Bitcoin have at\n> times slipped past even the most rigorous testings, often with\n> innocuous but unexpected behaviours, but some security issues  Some\n> extremely intricate and time-sensitive security defect and incident\n> response happens from time to time which is not necessarily publicly\n> disclosed until after the issue has been rolled out and fixed, which\n> can take some time due to the nature of protocol upgrades,\n> work-arounds, software upgrade via contacting key miners etc.  We\n> could take an example of the openSSL bug.\n>\n> - How do you plan to deal with security & incident response for the\n> duration you describe where you will have control while you are\n> deploying the unilateral hard-fork and being in sole maintainership\n> control?\n>\n> - Are you a member of the bitcoin security reporting list?\n>\n> On 15 June 2015 at 11:56, Mike Hearn <mike at plan99.net> wrote:\n> > I will review both and mostly delegate to Gavin's good taste around the\n> > details, unless there is some very strong disagreement. But that seems\n> > unlikely.\n> > ...\n> > Feedback will be read. There are no NACKS in Bitcoin XT. Patch requests\n> > aren't scored in any way. The final decision rests with the maintainer\n> as in\n> > ~all open source projects.\n>\n> As you know the people who have written 95% of the code (and reviewed,\n> and tested, and formally proved segments etc) are strenuously advising\n> not to push any consensus code into public use without listening to\n> and addressing review questions which span beyond rigorous code &\n> automated guided fuzz testers, simulation and sometimes formal proofs,\n> but also economics, game-theory and critically very subtle\n> determinism/consensus safety that they have collectively 4-5 years\n> experience of each.\n>\n> - Will you pause your release plans if all of the other developers\n> insist that the code or algorithm is defective?\n>\n> - Please don't take this the wrong way, and I know your bitcoinj work\n> was a significant engineering project which required porting bitcoin\n> logic.  But If the answer to the above question is no, as you seemed\n> to indicate in your response, as you not have not written much bitcoin\n> core code yourself (I think 3 PRs in total), do you find yourself more\n> qualified than the combination of peer review of the group of people\n> who have written 95% of it, and maintained it and refactored most of\n> it over the last 4-5 years?\n>\n> I presume from your security background you are quite familiar with\n> the need for review of crypto protocol changes & rigorous code review.\n> That is even more the case with Bitcoin given the consensus\n> criticality.\n>\n> >> - On the idea of a non-consensus hard-fork at all, I think we can\n> >> assume you will get a row of NACKs.  Can you explain your rationale\n> >> for going ahead anyway?  The risks are well understood and enormous.\n> >\n> > If Bitcoin runs out of capacity it will break and many of our users will\n> > leave. That is not an acceptable outcome for myself or the many other\n> > wallet, service and merchant developers who have worked for years to\n> build\n> > an ecosystem around this protocol.\n>\n> That you are frustrated, is not a sufficient answer as to why you are\n> proposing to go ahead with a universally acknowledged extreme network\n> divergence danger unilateral hard-fork, lacking wide-spread consensus.\n> People are quite concerned about this.  Patience, caution and prudence\n> is necessary in a software system with such high assurance\n> requirements.\n>\n> So I ask again:\n>\n> - On the idea of a non-consensus hard-fork at all, I think we can\n> assume you will get a row of NACKs.  Can you explain your rationale\n> for going ahead anyway?  The risks are well understood and enormous.\n>\n> Note the key point is that you are working on a unilateral hard-fork,\n> where there is a clear 4 year established process for proposing\n> improvements and an extremely well thought out and important change\n> management governance process.  While there has been much discussion,\n> you nor Gavin, have not actually posted a BIP for review.  Nor\n> actually was much of the discussion even conducted in the open: it was\n> only when Matt felt the need to clear the air and steer this\n> conversation into the open that discussion arose here.  During that\n> period of private discussion you and Gavin were largely unknown to\n> most of us lobbying companies with your representation of a method\n> that concerns everyone of the Bitcoin users.  Now that the technical\n> community aware aware they are strenuously discouraging you on the\n> basis of risks.\n>\n>\n> Openness\n>\n> - Do you agree that bitcoin technical discussions should happen in the\n> open?\n>\n> - As this is a FOSS project, do you agree that companies should also\n> be open, about their requirements and trade-offs they would prefer?\n>\n> - Can you disclose the list of companies you have lobbied in private\n> whether they have spoken publicly or not, and whether they have\n> indicated approval or not?\n>\n> - Did you share a specific plan, like a BIP or white paper with these\n> companies, and if so can we see it?\n>\n> - If you didnt submit a plan, could you summarise what you asked them\n> and what you proposed, and if you discussed also the risks?  (If you\n> asked them if they would like Bitcoin to scale, I expect almost\n> everyone does, including every member of the technical community, so\n> that for example would not fairly indicate approval for a unilateral\n> hard-fork)\n>\n> I and others will be happy to talk with the CTO and CEOs of companies\n> you have lobbied in private, for balance to assure ourselves and the\n> rest of the community that their support was given - and with full\n> understanding of the risks of doing it unilaterally, without peer\n> review, benefit of maintenance and security inidence management, and\n> what exactly they are being quoting as having signed up for.\n>\n> (This maybe more efficiently and openly achieved by the open process,\n> on a mailing list, maybe a different one even special purpose to this\n> topic, with additional option of the open public meeting I proposed at\n> the top).\n>\n> - Do you agree that it would be appropriate, that companies be aware\n> of both the scaling opportunities (of course, great everyone wants\n> scalability) as well as the technical limits and risks with various\n> approaches?  And that these be presented by parties from a range of\n> views to ensure balance?\n>\n> - Do you consider your expression of issues to hold true to the ideal\n> of representing balanced nuanced view of all sides of a technical\n> debate, even when under pressure or feeling impatient about the\n> process?\n>\n> You may want to review the opening few minutes of your epicenter 82\n> bitcoin for example where you claimed and I quote \"[the rest of the\n> technical community] dont want capacity to ever increase and want it\n> to stay where it is and when it fills up people move to other\n> systems\".\n>\n> - Do you think that is an accurate depiction of the complex trade-offs\n> we have been discussing on this list?\n>\n> (For the record I am not aware of a single person who has said they do\n> not agree with scaling Bitcoin.  Changing a constant is not the\n> hard-part.  The hard part is validating a plan and the other factors\n> that go into it.  It's not a free choice it is a security/scalability\n> tradeoff.  No one will thank us if we \"scale\" bitcoin but break it in\n> hard to recover ways at the same time.)\n>\n> - Were you similarly balanced in your explanations when talking to\n> companies in private discussions?\n>\n> - Do you understand that if we do not work from balanced technical\n> discussion, that we may end up with some biased criteria?\n>\n> Authority\n>\n> Neither you nor Gavin have any particular authority here to speak on\n> behalf of Bitcoin (eg you acknowledge in your podcast that Wladimir is\n> dev lead, and you and Gavin are both well aware of the 4 year\n> established change management consensus decision making model where\n> all of the technical reviewers have to come to agreement before\n> changes go in for security reasons explained above).  I know Gavin has\n> a \"Chief Scientist\" title from the Bitcoin Foundation, but sadly that\n> organisation is not held in as much regard as it once was, due to\n> various irregularities and controversies, and as I understand it no\n> longer employs any developers, due to lack of funds.  Gavin is now\n> employed by MIT's DCI project as a researcher in some capacity.  As\n> you know Wladimir is doing the development lead role now, and it seems\n> part of your personal frustration you said was because he did not\n> agree with your views.  Neither you nor Gavin have been particularly\n> involved in bitcoin lately, even Gavin, for 1.5 years or so.\n>\n> - Do you agree that if you presume to speak where you do not have\n> authority you may confuse companies?\n>\n> > If Bitcoin runs out of capacity it will break and many of our users will\n> > leave. That is not an acceptable outcome for myself or the many other\n> > wallet, service and merchant developers who have worked for years to\n> build\n> > an ecosystem around this protocol.\n>\n> But I think this is a false dichotomy.  As I said in previous mail I\n> understand people are frustrated that it has taken so long, but it is\n> not the case that no progress has been made on scalability.\n>\n> I itemised a long list of scalability work which you acknowledged as\n> impressive work (CPU, memory, network bandwidth/latency) and RBF, CPFP\n> fee work, fee-estimation, and so on, which you acknowledged and are\n> aware of.\n>\n> There are multiple proposals and BIPs under consideration on the list\n> right now.\n>\n> - what is the reason that you (or Gavin) would not post your BIP along\n> side the others to see if it would win based on technical merit?\n>\n> - why would you feel uniquely qualified to override the expert opinion\n> of the rest of the technical community if your proposal were not\n> considered to have most technical merit? (Given that this is not a\n> simple market competition thing where multiple hard-forks can be\n> considered - it is a one only decision, and if it is done in a\n> divisive unilateral way there are extreme risks of the ledger\n> diverging.)\n>\n> Network Divergence Risk\n>\n> >> - How do you propose to deal with the extra risks that come from\n> >> non-consensus hard-forks?  Hard-forks themselves are quite risky, but\n> >> non-consensus ones are extremely dangerous for consensus.\n> >\n> > The approach is the same for other forks. Voting via block versions and\n> then\n> > when there's been >X% for Y time units the 1mb limit is lifted/replaced.\n>\n> But this is not a soft-fork, it is a hard-fork.  Miner voting is only\n> peripherally related.  Even if in the extremis 75% of miners tried a\n> unilateral hard-fork but 100% of the users stayed on the maintained\n> original code, no change would occur other than those miners losing\n> reward (mining fork-coins with no resale value) and the difficulty\n> would adjust.  The miners who made an error in choice would lose money\n> and go out of business or rejoin the chain.\n>\n> However if something in that direction happens with actual users and\n> companies on both sides of it users will lose money, the ledger will\n> diverge as soon as a single double-spend happens, and never share a\n> block again, companies will go instantly insolvent, and chaos will\n> break out.  This is the dangerous scenario we are concerned about.\n>\n> So the same question again:\n>\n> - How do you propose to deal with the extra risks that come from\n> non-consensus hard-forks?  Hard-forks themselves are quite risky, but\n> non-consensus ones are extremely dangerous for consensus.\n>\n>\n> Being sensitive to alarming the market\n>\n> It is something akin to Greece or Portugal or Italy exiting the euro\n> currency in a disorderly way.  Economists and central bank policy\n> makers are extremely worried about such an eventuality and talk about\n> related factors in careful, measured terms, watch Mario Draghi when he\n> speaks.\n>\n> Imagine that bitcoin is 10x or 100x bigger.  Bitcoin cant have people\n> taking unilateral actions such as you have been proposing.  It is not\n> following the consensus governance process, and not good policy and it\n> is probably affecting bitcoin confidence and price at this moment.\n>\n> >> - Do you have contingency plans for what to do if the non-consensus\n> >> hard-fork goes wrong and $3B is lost as a result?\n> >\n> > Where did you get the $3B figure from? The fork either doesn't happen,\n> or it\n> > happens after quite a long period of people knowing it's going to happen\n> -\n> > for example because their full node is printing \"You need to upgrade\"\n> > messages due to seeing the larger block version, or because they read the\n> > news, or because they heard about it via some other mechanisms.\n>\n> This is not a soft-fork, and the community will not want to take the\n> risks once they understand them, and they have months in which to\n> understand them and at this point you've motivated and wasted 100s of\n> developer man hours such that we will feel impelled to make sure that\n> no one opts into a unilateral hard-fork without understanding the\n> risks.  It would be negligent to allow people to do that.  Before this\n> gets very far FAQs will be on bitcoin.org etc explaining this risk I\n> would imagine.  Its just starting not finished.\n>\n> What makes you think the rest of the community may not instead prefer\n> Jeff Garzik's BIP after revisions that he is making now with review\n> comments from others?\n>\n> Or another proposal.  Taken together with a deployment plan that sees\n> work on decentralisation tying into that plan.\n>\n> - If you persisted anyway, what makes you think bitcoin could not make\n> code changes defensively relating to your unilateral fork?\n> (I am sure creative minds can find some ways to harden bitcoin against\n> a unilateral fork, with a soft-fork or non-consensus update can be\n> deployed much faster than a hard-fork).\n>\n> I tried to warn Gavin privately that I thought he was under-estimating\n> the risk of failure to his fork proposal due to it being unilateral.\n> Ie as you both seem sincere in your wish to have your proposal\n> succeed, then obviously the best way to do that is to release a BIP in\n> the open collaborative process and submit it to review like everyone\n> else.  Doing it unilaterally only increases its chance of failure.\n>\n> The only sensible thing to do here is submit a BIP and stop the\n> unilateral fork threat.\n>\n> Scalability Plans\n>\n> > Let me flip the question around. Do you have a contingency plan if\n> Bitcoin\n> > runs out of capacity and significant user disruption occurs that results\n> in\n> > exodus, followed by fall in BTC price? The only one I've seen is \"we can\n> > perform an emergency hard fork in a few weeks\"!\n>\n> Yes people have proposed other plans.  Bryan Bishop posted a list of them.\n>\n> Jeff Garzik has a proposal, BIP-100 which seems already better than\n> Gavin's having benefit of peer review which he has been incorporating.\n>\n> I proposed several soft-fork models which can be deployed safely and\n> immediately, which do not have ledger risk.\n>\n> I have another proposal relating to simplified soft-fork one-way pegs\n> which I'll write up in a bit.\n>\n> I think there are still issues in Jeff's proposal but he is very open\n> and collaborating and there maybe related but different proposals\n> presently.\n>\n> >> As you can probably tell I think a unilateral fork without wide-scale\n> >> consensus from the technical and business communities is a deeply\n> >> inadvisable.\n> >\n> > Gavin and I have been polling many key players in the ecosystem. The\n> > consensus you seek does exist. All wallet developers (except Lawrence),\n> all\n> > the major exchanges, all the major payment processors and many of the\n> major\n> > mining pools want to see the limit lifted (I haven't been talking to\n> pools,\n> > Gavin has).\n>\n> It does not seem to me that you understand the issue.  Of course they\n> want to increase the scalability of bitcoin.  So does everyone else on\n> this mailing list.\n>\n> That they would support that is obvious.  If you presented your\n> unilateral action plan without explaining the risks too.\n>\n> I think I covered this further above.  If you would like to share the\n> company list, or we can invite them to the proposed public physical\n> meeting, I think it would be useful for them to have a balanced view\n> of the ledger divergence risks, and alternative in-consensus proposals\n> underway, as well as the governance risks, maintenance risks, security\n> incident risks.\n>\n> Note that other people talk to companies too, as part of their day to\n> day jobs, or from contacts from being in the industry.  You have no\n> special authority or unique ability to talk with business people.  Its\n> just that the technical community did not know you were busy doing\n> that.\n>\n> I can not believe that any company that would listen to their CTO, CSO\n> or failing that board would be ok with the risks implied by what you\n> are proposing on full examination.\n>\n> > This notion that the change has no consensus is based on you polling the\n> > people directly around you and people who like to spend all day on this\n> > mailing list. It's not an accurate reflection of the wider Bitcoin\n> community\n> > and that is one of the leading reasons there is going to be a fork. A\n> small\n> > number of people have been flatly ignoring LOTS of highly technical and\n> > passionate developers who have written vast amounts of code, built up the\n> > Bitcoin user base, designed hardware and software, and yes built\n> companies.\n>\n> I know you want scale bitcoin, as I said everyone here does. I think\n> what you're experiencing is that you've had more luck explaining your\n> pragmatic unilateral plan to non-technical people without peer review,\n> and so not experienced the kind of huge pushback you are getting from\n> the technical community.  The whole of bitcoin is immensely\n> complicated such that it takes an uber-geek CS genius years to\n> catchup, this is not a slight of any of the business people who are\n> working hard to deploy Bitcoin into the world, its just complicated\n> and therefore not easy to understand the game-theory, security,\n> governance and distributed system thinking.  I have a comp sci PhD in\n> distributed systems, implemented p2p network systems and have 2\n> decades of applied crypto experience with a major interest in\n> electronic cash crypto protocols, and it took me a several years to\n> catchup and even I have a few hazy spots on low-level details, and I\n> addictively into read everything I could find.  Realistically all of\n> us are still learning, as bitcoin combines so many fields that it\n> opens new possibilities.\n>\n> What I am expecting that yourself and Gavin are thinking is that\n> you'll knock heads and force the issue and get to consensus.\n>\n> However I think you have seriously misjudged the risks and have not\n> adequately explained them to companies you are talking with.  Indeed\n> you do not fully seem to acknowledge the risks, nor to have a well\n> thought out plan here of how you would actually manage it, nor the\n> moral hazards of having a lone developer in hugely divisive\n> circumstances in sole control of bitcoins running code.  Those are\n> exactly the reasons for the code change governance process!\n>\n> Even though you are trying to help, the full result is you are not\n> helping achieve anything by changing a constant and starting a\n> unilateral hard-fork (not to trivialise the work of making a patch to\n> do that).\n>\n> The work to even make the constant change be feasible was a result of\n> 1000s of hours of work by others in the development community, that is\n> emphatically and unilaterally telling you that hard-forks are hugely\n> inadvisable.\n>\n> You are trying to break the code change governance security procedure\n> that were put in place for good reason for the security of $3b of\n> other peoples money, even if you have a pragmatic intent to help, this\n> is flat out unacceptable.\n>\n> There are also security implications to what you are proposing, which\n> I have heard you attempting to trivialise, that are core to Bitcoins\n> security and core functionality.\n>\n> >  the overwhelming impression I get from a few\n> > others here is that no, they don't want to scale Bitcoin. They already\n> > decided it's a technological dead end.\n>\n> I think this is a significant mischaracterisation, and I think almost\n> everybody is on board with a combination plan:\n>\n> 1. work to improve decentralisation (specific technical work already\n> underway, and education)\n> 2. create a plan to increase block-size in a slow fashion to not cause\n> system shocks (eg like Jeff is proposing or some better variant)\n> 3. work on actual algorithmic scaling\n>\n> In this way we can have throughput needed for scalability and security\n> work to continue.\n>\n> As I said you can not scale a O(n^2) broadcast network by changing\n> constants, you need algorithmic improvements.\n>\n> People are working on them already.  All of those 3 things are being\n> actively worked on RIGHT NOW, and in the case of algorithmic scaling\n> and improve decentralisation have been worked on for months.\n>\n> You may have done one useful thing which is to remind people that\n> blocks are only 3x-4x below capacity such that we should look at it.\n>\n> But we can not work under duress of haste, nor unilateral ultimatums,\n> this is the realm of human action that leads to moral hazard, and\n> ironically reminds us of why Satoshi put the quote in the genesis\n> block.\n>\n> Bitcoin is too complex a system with too much at stake to be making\n> political hasty decisions, it would be negligent to act in such a way.\n>\n> Again please consider that you did your job, caused people to pay\n> attention, but return to the process, submit a BIP, retract the\n> unilateral hard-fork which is so dangerous and lets have things be\n> calm, civil and collaborative in the technical zone of Bitcoin and not\n> further alarm companies and investors.\n>\n> Adam\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/0d9b09eb/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-16T13:33:05",
                "message_text_only": "On Tue, Jun 16, 2015 at 08:33:31PM +0800, Pindar Wong wrote:\n> On Tue, Jun 16, 2015 at 2:03 AM, Adam Back <adam at cypherspace.org> wrote:\n> Dear Adam, All:\n> \n> At the community's convenience, it would be an honour to arrange an initial\n> open summit to meet with representatives of the Chinese miners in Hong Kong\n> (UTC+8) to facilitate a better understand between the different\n> stakeholders of the Bitcoin ecosystem on this important issue.   This could\n> be arranged for this October, or earlier, if deemed necessary.\n\nGreat!\n\nFWIW there Constance Choi and Primavera De Filippi (CC'd) are holding a\nblockchain-tech conference October 14th-15th in Hong Kong as well;\ncoordinating your summit with that conference could be useful.\n\nhttp://blockchainworkshops.org/\n\nThis workshop series has been attracting audiences of people looking to\nuse blockchain tech in general; many of these use-cases will likely\ninvolve the Bitcoin blockchain in unpredictable ways. Importantly, these\nways can drive demand significantly beyond our current assumptions based\non most demand being consumer-merchant transactions.\n\nIn addition, many of the attendees have significant experience with\nregulatory issues and interacting with governments on regulation of\nblockchain tech. Bitcoin faces existential risks to its existence by\nthese regulation efforts, which include things like efforts to setup\nindustry wide Anti-Money-Laundering/Know-Your-Customer programs,\nincluding programs that would tie on-chain transactions to identity\ninformation. Any blocksize discussion needs to be informed by these\npotential threats to usage of the technology, as well as challenges to\nusing scaling solutions.\n\n> Remote online participation would be welcome from those who might not be\n> able to attend in person.\n> \n> However,  it is hoped that such a meeting would be primarily document\n> driven to facilitate orderly translation, discussion and decision.\n\nAgreed. Pieter Wuille's recent work is a great example of the kind of\nscience-driven investigations that need to be done - and haven't been\ndone very much - to get us some hard data to make decisions on.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/6117a770/attachment.sig>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-16T13:55:13",
                "message_text_only": "On Tue, Jun 16, 2015 at 9:33 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Tue, Jun 16, 2015 at 08:33:31PM +0800, Pindar Wong wrote:\n> > On Tue, Jun 16, 2015 at 2:03 AM, Adam Back <adam at cypherspace.org> wrote:\n> > Dear Adam, All:\n> >\n> > At the community's convenience, it would be an honour to arrange an\n> initial\n> > open summit to meet with representatives of the Chinese miners in Hong\n> Kong\n> > (UTC+8) to facilitate a better understand between the different\n> > stakeholders of the Bitcoin ecosystem on this important issue.   This\n> could\n> > be arranged for this October, or earlier, if deemed necessary.\n>\n> Great!\n>\n> FWIW there Constance Choi and Primavera De Filippi (CC'd) are holding a\n> blockchain-tech conference October 14th-15th in Hong Kong as well;\n> coordinating your summit with that conference could be useful.\n>\n> http://blockchainworkshops.org/\n>\n> This workshop series has been attracting audiences of people looking to\n> use blockchain tech in general; many of these use-cases will likely\n> involve the Bitcoin blockchain in unpredictable ways. Importantly, these\n> ways can drive demand significantly beyond our current assumptions based\n> on most demand being consumer-merchant transactions.\n>\n> In addition, many of the attendees have significant experience with\n> regulatory issues and interacting with governments on regulation of\n> blockchain tech. Bitcoin faces existential risks to its existence by\n> these regulation efforts, which include things like efforts to setup\n> industry wide Anti-Money-Laundering/Know-Your-Customer programs,\n> including programs that would tie on-chain transactions to identity\n> information. Any blocksize discussion needs to be informed by these\n> potential threats to usage of the technology, as well as challenges to\n> using scaling solutions.\n>\n> > Remote online participation would be welcome from those who might not be\n> > able to attend in person.\n> >\n> > However,  it is hoped that such a meeting would be primarily document\n> > driven to facilitate orderly translation, discussion and decision.\n>\n> Agreed. Pieter Wuille's recent work is a great example of the kind of\n> science-driven investigations that need to be done - and haven't been\n> done very much - to get us some hard data to make decisions on.\n>\n\nThank you very much Peter for pointing this out! That is very kind of you.\n\nIt would be great to work with Constance Choi, Primavera De Filippi, your\ngoodself and others to make this happen.\n\nAs you may know, the Hong Kong Monetary Authority considers bitcoin a\nvirtual 'commodity' and not a currency per se.\n\nRegards,\n\np.\n\n\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/2bb69fb3/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-17T03:59:59",
                "message_text_only": "On Tue, Jun 16, 2015 at 09:55:13PM +0800, Pindar Wong wrote:\n> > Agreed. Pieter Wuille's recent work is a great example of the kind of\n> > science-driven investigations that need to be done - and haven't been\n> > done very much - to get us some hard data to make decisions on.\n> >\n> \n> Thank you very much Peter for pointing this out! That is very kind of you.\n> \n> It would be great to work with Constance Choi, Primavera De Filippi, your\n> goodself and others to make this happen.\n\nGreat! They're excited to see this happen. I'm in London right now\nactually for the conference they were holding this week; the blocksize\nissue was being discussed a fair bit there among attendees. (notably,\nwith rather different views than seen on reddit!)\n\n> As you may know, the Hong Kong Monetary Authority considers bitcoin a\n> virtual 'commodity' and not a currency per se.\n\nYup, though keep in mind the regulatory question is more than just how\nyour local jurisdiction views Bitcoin, but rather how your customers'\njurisdictions view Bitcoin.\n\nOf course, when I say \"customers\" above, I mean the entire Bitcoin\ncommunity that is ultimately buying the new coins produced by miners and\npaying fees to them!\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150617/1c73ff3a/attachment.sig>"
            },
            {
                "author": "odinn",
                "date": "2015-06-15T22:54:47",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nMike,\n\nTo sum it up, you are saying \"bitcoin will break and many of our users\nwill leave therefore OMG WTF so we have to do what GAVIN AND ME want\nto do to hardfork to XT which is the ONLY WAY, so GTFO!\"\n\nAnd so, no.  We don't have to accept that attitude.\n\nThere are other proposals that actually would work here.\n\nCameron Garnham's dynamic block size adjustment (needing soft fork\nonly) mentioned here http://www.twitlonger.com/show/n_1smkanp\n\nJeff Garzik's proposals (rewritten and published as a BIP)\nhttp://bitcoin-development.narkive.com/f5FMeA4D/comments-on-bip-100\n\nand more.\n\nI also disagree with the notion that everybody's just ok with what\nMike and Gavin are doing.... specifically, this statement by Mike\n\n> The consensus you seek does exist. All wallet developers (except \n> Lawrence), all the major exchanges, all the major payment\n> processors and many of the major mining pools want to see the limit\n> lifted\n\nwas kind of twisting things, because it made it sound like everybody\nsupports Gavin's proposal to hard fork to XT, which these folks don't.\n\nExample:\n\n1)\nhttp://cointelegraph.com/news/114481/chinese-exchanges-reject-gavin-andr\nesens-20-mb-block-size-increase\n\n2) https://twitter.com/GreenAddress/status/605037073725313024\n\nThis isn't to say they don't want to see a limit adjusted but not in\nthe way that Gavin (and you, Mike) are proposing - not through this\nhard fork to XT.\n\nSo go roll out your code for whatever it is you are going to put into\nXT and make a BIP, but stop saying that everyone supports it when\nobviously they don't and you don't even have something yet and there\nare already superior alternatives that don't involve Gavin's hard fork\nand your blessed XT.\n\n\nOn 06/15/2015 02:56 AM, Mike Hearn wrote:\n> Hi Adam,\n> \n> Provisional answers below!\n> \n> - Are you releasing a BIP for that proposal for review?\n> \n> \n> The work splits like this:\n> \n> * Gavin is writing the code and I think a BIP as well\n> \n> * I will review both and mostly delegate to Gavin's good taste\n> around the details, unless there is some very strong disagreement.\n> But that seems unlikely.\n> \n> * I have been handling gitian and the patch rebases, the code\n> signing and so on, so far. I've also been doing some work to setup\n> the basic infrastructure of the project (website etc).\n> \n> \n> - If the reviewers all say NACK will you take on board their \n> suggestions?\n> \n> \n> Feedback will be read. There are no NACKS in Bitcoin XT. Patch\n> requests aren't scored in any way. The final decision rests with\n> the maintainer as in ~all open source projects.\n> \n> \n> \n> - On the idea of a non-consensus hard-fork at all, I think we can \n> assume you will get a row of NACKs.  Can you explain your\n> rationale for going ahead anyway?  The risks are well understood\n> and enormous.\n> \n> \n> Yes, I have been working on an article that explains how we got to\n> this point from my perspective. It is quite long, but only because\n> I want it to be readable for people who weren't following the\n> debate.\n> \n> Anyway, I think I've laid out the gist of it over and over again,\n> but to summarise:\n> \n> If Bitcoin runs out of capacity *it will break and many of our\n> users will leave*. That is not an acceptable outcome for myself or\n> the many other wallet, service and merchant developers who have\n> worked for years to build an ecosystem around this protocol.\n> \n> \n> \n> - How do you propose to deal with the extra risks that come from \n> non-consensus hard-forks?  Hard-forks themselves are quite risky,\n> but non-consensus ones are extremely dangerous for consensus.\n> \n> \n> The approach is the same for other forks. Voting via block versions\n> and then when there's been >X% for Y time units the 1mb limit is \n> lifted/replaced.\n> \n> \n> \n> \n> - If you're going it alone as it were, are you proposing that you\n> will personally maintain bitcoin-XT?  Or do you have a plan to\n> later hand over maintenance to the bitcoin developers?\n> \n> \n> Good question!  I have various thoughts on this, but let's wait and\n> see what happens first. Perhaps the new chain won't get the\n> majority on it.\n> \n> In the event that the >1mb chain does eventually win, I would\n> expect Core to apply the patch and rejoin the consensus rather than\n> lose all its users. That would take XT back to being a fairly small\n> patchset to improve the network protocol.\n> \n> \n> \n> - Do you have contingency plans for what to do if the\n> non-consensus hard-fork goes wrong and $3B is lost as a result?\n> \n> \n> Where did you get the $3B figure from? The fork either doesn't\n> happen, or it happens after quite a long period of people knowing\n> it's going to happen - for example because their full node is\n> printing \"You need to upgrade\" messages due to seeing the larger\n> block version, or because they read the news, or because they heard\n> about it via some other mechanisms.\n> \n> Let me flip the question around. Do you have a contingency plan if \n> Bitcoin runs out of capacity and significant user disruption occurs\n> that results in exodus, followed by fall in BTC price? The only one\n> I've seen is \"we can perform an emergency hard fork in a few\n> weeks\"!\n> \n> \n> \n> As you can probably tell I think a unilateral fork without\n> wide-scale consensus from the technical and business communities is\n> a deeply inadvisable.\n> \n> \n> Gavin and I have been polling many key players in the ecosystem.\n> The consensus you seek does exist. All wallet developers (except\n> Lawrence), all the major exchanges, all the major payment\n> processors and many of the major mining pools want to see the limit\n> lifted (I haven't been talking to pools, Gavin has).\n> \n> This notion that the change has no consensus is based on you\n> polling the people directly around you and people who like to spend\n> all day on this mailing list. It's not an accurate reflection of\n> the wider Bitcoin community and that is one of the leading reasons\n> there is going to be a fork. A small number of people have been\n> flatly ignoring LOTS of highly technical and passionate developers\n> who have written vast amounts of code, built up the Bitcoin user\n> base, designed hardware and software, and yes built companies.\n> \n> How do you think that makes Bitcoin Core look to the rest of the\n> Bitcoin world? How much confidence does that give people?\n> \n> \n> \n> Of the overall process, I think you can agree we should not be\n> making technical decisions with this level of complexity and\n> consensus risk with financial implications of this magnitude under\n> duress of haste?\n> \n> \n> This debate will never end until a fork makes it irrelevant. There\n> is no process for ending it, despite me begging Wladimir to make\n> one.\n> \n> And there is no haste. We have been debating the block size limit\n> for _years_. We have known it must be lifted for _years_. I kicked\n> off this current round of debates after realising that Wladimir's\n> release timeline wouldn't allow a block size limit to be released\n> before the end of the year. The reason we're talking about it now\n> and not next year is exactly to ensure there is plenty of time.\n> \n> \n> \n> \n> I can sincerely assure you everyone does want to scale bitcoin and \n> shares your long term objective on that\n> \n> \n> I really wish you were right, and I definitely feel you are one of\n> the more reasonable ones Adam. But the overwhelming impression I\n> get from a few others here is that no, they don't want to scale\n> Bitcoin. They already decided it's a technological dead end. They\n> want to kick end users out in order to \"incentivise\" (force) the\n> creation of some other alternative, claiming that it's still\n> Bitcoin whilst ignoring basic details ... like the fact that no\n> existing wallets or services would work.\n> \n> Scaling Bitcoin can only be achieved by letting it grow, and\n> letting people tackle each bottleneck as it arises at the right\n> times. Not by convincing ourselves that success is failure.\n> \n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVf1e3AAoJEGxwq/inSG8C7NwIAIah+HzWKB+aydCgarJB1Tuv\n4wK6ffaWP3pzT/D1jNPMoMwL6bp+hi/ixyrV2y9a841Oc/9vgf75ws1l8QH2YtEE\nTM5cLnRtScXnbaHKAAQZyewURbmGKTUxhNLMIRlVMMq2uHwbUEqRrDaaBGhwC1HO\n+v3u5zK13H1UMKBuUY7yANWvOamjs17FmwZ6MURYdX8qBFVqMoTorhPHTebDGusS\nNxDm4uqphW7ylXISOm53v7i3/CPjW63YGB2fyk9J+BqxhOM7yAJSH0Ln/xtu/COa\nuXudO+SbMco+x+cKrFLf/5ItxR65aOnWvWPKw0o55f96uSabngs/QozDhaU2BJk=\n=gof9\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-16T01:20:28",
                "message_text_only": "> On Jun 15, 2015, at 3:54 PM, odinn <odinn.cyberguerrilla at riseup.net> wrote:\n> \n> I also disagree with the notion that everybody's just ok with what\n> Mike and Gavin are doing.... specifically, this statement by Mike\n> \n> > The consensus you seek does exist. All wallet developers (except\n> > Lawrence), all the major exchanges, all the major payment\n> > processors and many of the major mining pools want to see the limit\n> > lifted\n\n\nThis is certainly twisting words!\n\nWe all agree that the limit needs to eventually be lifted - but some of us certainly disagree with the means being used to do so by Mike and Gavin.\n\nMost news publications keep the discussion rather shallow and like to keep the controversy pretty black and white - some of us have far more nuanced views!\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3aa4de8b/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/3aa4de8b/attachment.sig>"
            },
            {
                "author": "Venzen",
                "date": "2015-06-16T05:18:16",
                "message_text_only": "Mike Hearn,\n\nIn the light of your responses to Adam Back's questions, below, I feel\nit is time to speak up because what I now understand, and is implied,\nis that Mike Hearn and Gavin Andresen have planned and deployed the\ninfrastructure for a Bitcoin hard-fork and intend to action it despite\nmajority opposition.  http://xtnodes.com/\n\nI'll try to keep it brief:\n\nMike Hearn, you should cease your activity of a unilateral hard-fork\nimmediately. You are doing untold damage by breaking FOSS governance\nprotocol requiring methodical collaborative work and due process of\nchange implementation by consensus. Your actions are bad for the\nBitcoin project and its ideals, disrespectful of your peers and years\nof their passionate hard work, and dangerous for Bitcoin in the\nmarketplace and bitcoin in peoples' wallets.\n\nMike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,\nyou cannot have it. Your hard-fork is tantamount to theft and you and\nyour collaborators will effectively ex-communicate yourselves from\nthis project and community. It appears that you are consciously trying\nto usurp ownership and maintenance of Bitcoin. As if it is that easy!\nYou clearly do not comprehend the array of risks - especially the\nunanticipated ones. As the market saying goes: \"If you think\nspeculation is easy, it is because you are ignorant about the risks\".\nIf you take the risks with Mike&GavCoin, that would be fine, but you\nare about to take them with community-owned Bitcoin and Other People's\nMoney!\n\nYou are causing a lot of stress, unnecessarily, and grave concern\nsurrounds your proposed renegade action. You can dissolve the threat:\nthose players to whom you have made promises can be appeased and\neventually get most of what they need from this FOSS project. The\ndevelopers whom you are railroading to get your way, and the way in\nwhich you are doing it, is about to cause a schism that will expand\noutward from this community.\n\nYou may accuse the community for being antagonistic to you, and\ntherefore uncooperative, but it is plain to see that your bullheaded\nmanner eventually generates antagonism wherever you go. Taking Bitcoin\naway from this community, in anger, won't solve the problem and will\nbe like killing the goose that lays the golden eggs.\n\nIf an individual in an objectively agreed-to FOSS-modelled\ncollaborative project has the audacity to threaten his peers and the\nworld with a unilateral hard-fork despite majority objection and a\nprobability distribution that includes terminal risks and unintended\nconsequences, then what would an impartial outsider think? Some of\ntheir thoughts would include that the antagonist could be acting in\nself-interest, or may be a paid actor, or worse, a saboteur. What\nwould they advise? Stop that individual, at once!\n\nBitcoin is a Free and Open Source Software project that serves as\nflagship for the blockchain. It has a payment network but the key\nbenefits are censorship resistance and trustless decentralization.\nThere is protocol for how change is effected in a FOSS project. For\nthe sake of everything that is good and useful in Bitcoin, reconsider\nyour dangerous plan and its intended and unintended consequences. Put\nyour feet back on the ground, return to the fold and let the\ncollaborative FOSS model, and the skills available here, gradually\nscale Bitcoin to your (and all our) grand vision.\n\nVenzen Khaosan\n\n\nOn 06/15/2015 04:56 PM, Mike Hearn wrote:\n> Hi Adam,\n> \n> Provisional answers below!\n> \n> - Are you releasing a BIP for that proposal for review?\n> \n> \n> The work splits like this:\n> \n> * Gavin is writing the code and I think a BIP as well\n> \n> * I will review both and mostly delegate to Gavin's good taste\n> around the details, unless there is some very strong disagreement.\n> But that seems unlikely.\n> \n> * I have been handling gitian and the patch rebases, the code\n> signing and so on, so far. I've also been doing some work to setup\n> the basic infrastructure of the project (website etc).\n> \n> \n> - If the reviewers all say NACK will you take on board their \n> suggestions?\n> \n> \n> Feedback will be read. There are no NACKS in Bitcoin XT. Patch\n> requests aren't scored in any way. The final decision rests with\n> the maintainer as in ~all open source projects.\n> \n> \n> \n> - On the idea of a non-consensus hard-fork at all, I think we can \n> assume you will get a row of NACKs.  Can you explain your\n> rationale for going ahead anyway?  The risks are well understood\n> and enormous.\n> \n> \n> Yes, I have been working on an article that explains how we got to\n> this point from my perspective. It is quite long, but only because\n> I want it to be readable for people who weren't following the\n> debate.\n> \n> Anyway, I think I've laid out the gist of it over and over again,\n> but to summarise:\n> \n> If Bitcoin runs out of capacity *it will break and many of our\n> users will leave*. That is not an acceptable outcome for myself or\n> the many other wallet, service and merchant developers who have\n> worked for years to build an ecosystem around this protocol.\n> \n> \n> \n> - How do you propose to deal with the extra risks that come from \n> non-consensus hard-forks?  Hard-forks themselves are quite risky,\n> but non-consensus ones are extremely dangerous for consensus.\n> \n> \n> The approach is the same for other forks. Voting via block versions\n> and then when there's been >X% for Y time units the 1mb limit is \n> lifted/replaced.\n> \n> \n> \n> \n> - If you're going it alone as it were, are you proposing that you\n> will personally maintain bitcoin-XT?  Or do you have a plan to\n> later hand over maintenance to the bitcoin developers?\n> \n> \n> Good question!  I have various thoughts on this, but let's wait and\n> see what happens first. Perhaps the new chain won't get the\n> majority on it.\n> \n> In the event that the >1mb chain does eventually win, I would\n> expect Core to apply the patch and rejoin the consensus rather than\n> lose all its users. That would take XT back to being a fairly small\n> patchset to improve the network protocol.\n> \n> \n> \n> - Do you have contingency plans for what to do if the\n> non-consensus hard-fork goes wrong and $3B is lost as a result?\n> \n> \n> Where did you get the $3B figure from? The fork either doesn't\n> happen, or it happens after quite a long period of people knowing\n> it's going to happen - for example because their full node is\n> printing \"You need to upgrade\" messages due to seeing the larger\n> block version, or because they read the news, or because they heard\n> about it via some other mechanisms.\n> \n> Let me flip the question around. Do you have a contingency plan if \n> Bitcoin runs out of capacity and significant user disruption occurs\n> that results in exodus, followed by fall in BTC price? The only one\n> I've seen is \"we can perform an emergency hard fork in a few\n> weeks\"!\n> \n> \n> \n> As you can probably tell I think a unilateral fork without\n> wide-scale consensus from the technical and business communities is\n> a deeply inadvisable.\n> \n> \n> Gavin and I have been polling many key players in the ecosystem.\n> The consensus you seek does exist. All wallet developers (except\n> Lawrence), all the major exchanges, all the major payment\n> processors and many of the major mining pools want to see the limit\n> lifted (I haven't been talking to pools, Gavin has).\n> \n> This notion that the change has no consensus is based on you\n> polling the people directly around you and people who like to spend\n> all day on this mailing list. It's not an accurate reflection of\n> the wider Bitcoin community and that is one of the leading reasons\n> there is going to be a fork. A small number of people have been\n> flatly ignoring LOTS of highly technical and passionate developers\n> who have written vast amounts of code, built up the Bitcoin user\n> base, designed hardware and software, and yes built companies.\n> \n> How do you think that makes Bitcoin Core look to the rest of the\n> Bitcoin world? How much confidence does that give people?\n> \n> \n> \n> Of the overall process, I think you can agree we should not be\n> making technical decisions with this level of complexity and\n> consensus risk with financial implications of this magnitude under\n> duress of haste?\n> \n> \n> This debate will never end until a fork makes it irrelevant. There\n> is no process for ending it, despite me begging Wladimir to make\n> one.\n> \n> And there is no haste. We have been debating the block size limit\n> for _years_. We have known it must be lifted for _years_. I kicked\n> off this current round of debates after realising that Wladimir's\n> release timeline wouldn't allow a block size limit to be released\n> before the end of the year. The reason we're talking about it now\n> and not next year is exactly to ensure there is plenty of time.\n> \n> \n> \n> \n> I can sincerely assure you everyone does want to scale bitcoin and \n> shares your long term objective on that\n> \n> \n> I really wish you were right, and I definitely feel you are one of\n> the more reasonable ones Adam. But the overwhelming impression I\n> get from a few others here is that no, they don't want to scale\n> Bitcoin. They already decided it's a technological dead end. They\n> want to kick end users out in order to \"incentivise\" (force) the\n> creation of some other alternative, claiming that it's still\n> Bitcoin whilst ignoring basic details ... like the fact that no\n> existing wallets or services would work.\n> \n> Scaling Bitcoin can only be achieved by letting it grow, and\n> letting people tackle each bottleneck as it arises at the right\n> times. Not by convincing ourselves that success is failure.\n> \n> \n> \n> ------------------------------------------------------------------------------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Marcel Jamin",
                "date": "2015-06-16T06:09:39",
                "message_text_only": "> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,\nyou cannot have it.\n\nNeither do you or anyone else.\n\n> There is protocol for how change is effected in a FOSS project.\n\nAnd it allows the minority to hold the majority hostage.\n\n> If you take the risks with Mike&GavCoin, that would be fine, but you are\nabout to take them with community-owned Bitcoin and Other People's Money!\n\nThe same can be said about the other camp.\n\nBitcoinXT is not going to fork the chain on a specific date no matter what.\nPeople will be able to vote via block versions and once a sufficient\nmajority supports the extensions, everyone else will have a grace period to\nupgrade. Only after that is a very small minority at risk of losing money.\n\nThat being said, I'd rather see a solution that everyone agrees on. My\npersonal opinion/hope is that Mike and Gavin are just applying pressure\nwhere it's needed. But in the end, they can do whatever they want if they\nhave the necessary support. Permissionless innovation is one of bitcoins\nvirtues. In the end, only adoption will decide what bitcoin is and isn't.\n\n2015-06-16 7:18 GMT+02:00 Venzen <venzen at mail.bihthai.net>:\n\n> Mike Hearn,\n>\n> In the light of your responses to Adam Back's questions, below, I feel\n> it is time to speak up because what I now understand, and is implied,\n> is that Mike Hearn and Gavin Andresen have planned and deployed the\n> infrastructure for a Bitcoin hard-fork and intend to action it despite\n> majority opposition.  http://xtnodes.com/\n>\n> I'll try to keep it brief:\n>\n> Mike Hearn, you should cease your activity of a unilateral hard-fork\n> immediately. You are doing untold damage by breaking FOSS governance\n> protocol requiring methodical collaborative work and due process of\n> change implementation by consensus. Your actions are bad for the\n> Bitcoin project and its ideals, disrespectful of your peers and years\n> of their passionate hard work, and dangerous for Bitcoin in the\n> marketplace and bitcoin in peoples' wallets.\n>\n> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,\n> you cannot have it. Your hard-fork is tantamount to theft and you and\n> your collaborators will effectively ex-communicate yourselves from\n> this project and community. It appears that you are consciously trying\n> to usurp ownership and maintenance of Bitcoin. As if it is that easy!\n> You clearly do not comprehend the array of risks - especially the\n> unanticipated ones. As the market saying goes: \"If you think\n> speculation is easy, it is because you are ignorant about the risks\".\n> If you take the risks with Mike&GavCoin, that would be fine, but you\n> are about to take them with community-owned Bitcoin and Other People's\n> Money!\n>\n> You are causing a lot of stress, unnecessarily, and grave concern\n> surrounds your proposed renegade action. You can dissolve the threat:\n> those players to whom you have made promises can be appeased and\n> eventually get most of what they need from this FOSS project. The\n> developers whom you are railroading to get your way, and the way in\n> which you are doing it, is about to cause a schism that will expand\n> outward from this community.\n>\n> You may accuse the community for being antagonistic to you, and\n> therefore uncooperative, but it is plain to see that your bullheaded\n> manner eventually generates antagonism wherever you go. Taking Bitcoin\n> away from this community, in anger, won't solve the problem and will\n> be like killing the goose that lays the golden eggs.\n>\n> If an individual in an objectively agreed-to FOSS-modelled\n> collaborative project has the audacity to threaten his peers and the\n> world with a unilateral hard-fork despite majority objection and a\n> probability distribution that includes terminal risks and unintended\n> consequences, then what would an impartial outsider think? Some of\n> their thoughts would include that the antagonist could be acting in\n> self-interest, or may be a paid actor, or worse, a saboteur. What\n> would they advise? Stop that individual, at once!\n>\n> Bitcoin is a Free and Open Source Software project that serves as\n> flagship for the blockchain. It has a payment network but the key\n> benefits are censorship resistance and trustless decentralization.\n> There is protocol for how change is effected in a FOSS project. For\n> the sake of everything that is good and useful in Bitcoin, reconsider\n> your dangerous plan and its intended and unintended consequences. Put\n> your feet back on the ground, return to the fold and let the\n> collaborative FOSS model, and the skills available here, gradually\n> scale Bitcoin to your (and all our) grand vision.\n>\n> Venzen Khaosan\n>\n>\n> On 06/15/2015 04:56 PM, Mike Hearn wrote:\n> > Hi Adam,\n> >\n> > Provisional answers below!\n> >\n> > - Are you releasing a BIP for that proposal for review?\n> >\n> >\n> > The work splits like this:\n> >\n> > * Gavin is writing the code and I think a BIP as well\n> >\n> > * I will review both and mostly delegate to Gavin's good taste\n> > around the details, unless there is some very strong disagreement.\n> > But that seems unlikely.\n> >\n> > * I have been handling gitian and the patch rebases, the code\n> > signing and so on, so far. I've also been doing some work to setup\n> > the basic infrastructure of the project (website etc).\n> >\n> >\n> > - If the reviewers all say NACK will you take on board their\n> > suggestions?\n> >\n> >\n> > Feedback will be read. There are no NACKS in Bitcoin XT. Patch\n> > requests aren't scored in any way. The final decision rests with\n> > the maintainer as in ~all open source projects.\n> >\n> >\n> >\n> > - On the idea of a non-consensus hard-fork at all, I think we can\n> > assume you will get a row of NACKs.  Can you explain your\n> > rationale for going ahead anyway?  The risks are well understood\n> > and enormous.\n> >\n> >\n> > Yes, I have been working on an article that explains how we got to\n> > this point from my perspective. It is quite long, but only because\n> > I want it to be readable for people who weren't following the\n> > debate.\n> >\n> > Anyway, I think I've laid out the gist of it over and over again,\n> > but to summarise:\n> >\n> > If Bitcoin runs out of capacity *it will break and many of our\n> > users will leave*. That is not an acceptable outcome for myself or\n> > the many other wallet, service and merchant developers who have\n> > worked for years to build an ecosystem around this protocol.\n> >\n> >\n> >\n> > - How do you propose to deal with the extra risks that come from\n> > non-consensus hard-forks?  Hard-forks themselves are quite risky,\n> > but non-consensus ones are extremely dangerous for consensus.\n> >\n> >\n> > The approach is the same for other forks. Voting via block versions\n> > and then when there's been >X% for Y time units the 1mb limit is\n> > lifted/replaced.\n> >\n> >\n> >\n> >\n> > - If you're going it alone as it were, are you proposing that you\n> > will personally maintain bitcoin-XT?  Or do you have a plan to\n> > later hand over maintenance to the bitcoin developers?\n> >\n> >\n> > Good question!  I have various thoughts on this, but let's wait and\n> > see what happens first. Perhaps the new chain won't get the\n> > majority on it.\n> >\n> > In the event that the >1mb chain does eventually win, I would\n> > expect Core to apply the patch and rejoin the consensus rather than\n> > lose all its users. That would take XT back to being a fairly small\n> > patchset to improve the network protocol.\n> >\n> >\n> >\n> > - Do you have contingency plans for what to do if the\n> > non-consensus hard-fork goes wrong and $3B is lost as a result?\n> >\n> >\n> > Where did you get the $3B figure from? The fork either doesn't\n> > happen, or it happens after quite a long period of people knowing\n> > it's going to happen - for example because their full node is\n> > printing \"You need to upgrade\" messages due to seeing the larger\n> > block version, or because they read the news, or because they heard\n> > about it via some other mechanisms.\n> >\n> > Let me flip the question around. Do you have a contingency plan if\n> > Bitcoin runs out of capacity and significant user disruption occurs\n> > that results in exodus, followed by fall in BTC price? The only one\n> > I've seen is \"we can perform an emergency hard fork in a few\n> > weeks\"!\n> >\n> >\n> >\n> > As you can probably tell I think a unilateral fork without\n> > wide-scale consensus from the technical and business communities is\n> > a deeply inadvisable.\n> >\n> >\n> > Gavin and I have been polling many key players in the ecosystem.\n> > The consensus you seek does exist. All wallet developers (except\n> > Lawrence), all the major exchanges, all the major payment\n> > processors and many of the major mining pools want to see the limit\n> > lifted (I haven't been talking to pools, Gavin has).\n> >\n> > This notion that the change has no consensus is based on you\n> > polling the people directly around you and people who like to spend\n> > all day on this mailing list. It's not an accurate reflection of\n> > the wider Bitcoin community and that is one of the leading reasons\n> > there is going to be a fork. A small number of people have been\n> > flatly ignoring LOTS of highly technical and passionate developers\n> > who have written vast amounts of code, built up the Bitcoin user\n> > base, designed hardware and software, and yes built companies.\n> >\n> > How do you think that makes Bitcoin Core look to the rest of the\n> > Bitcoin world? How much confidence does that give people?\n> >\n> >\n> >\n> > Of the overall process, I think you can agree we should not be\n> > making technical decisions with this level of complexity and\n> > consensus risk with financial implications of this magnitude under\n> > duress of haste?\n> >\n> >\n> > This debate will never end until a fork makes it irrelevant. There\n> > is no process for ending it, despite me begging Wladimir to make\n> > one.\n> >\n> > And there is no haste. We have been debating the block size limit\n> > for _years_. We have known it must be lifted for _years_. I kicked\n> > off this current round of debates after realising that Wladimir's\n> > release timeline wouldn't allow a block size limit to be released\n> > before the end of the year. The reason we're talking about it now\n> > and not next year is exactly to ensure there is plenty of time.\n> >\n> >\n> >\n> >\n> > I can sincerely assure you everyone does want to scale bitcoin and\n> > shares your long term objective on that\n> >\n> >\n> > I really wish you were right, and I definitely feel you are one of\n> > the more reasonable ones Adam. But the overwhelming impression I\n> > get from a few others here is that no, they don't want to scale\n> > Bitcoin. They already decided it's a technological dead end. They\n> > want to kick end users out in order to \"incentivise\" (force) the\n> > creation of some other alternative, claiming that it's still\n> > Bitcoin whilst ignoring basic details ... like the fact that no\n> > existing wallets or services would work.\n> >\n> > Scaling Bitcoin can only be achieved by letting it grow, and\n> > letting people tackle each bottleneck as it arises at the right\n> > times. Not by convincing ourselves that success is failure.\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> >\n> >\n> >\n> >\n> > _______________________________________________ Bitcoin-development\n> > mailing list Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/5f789e97/attachment.html>"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-16T09:21:11",
                "message_text_only": "\"And it allows the minority to hold the majority hostage\"\n\nThe Bitcoin protocol has no definitions about developer consensus .\nThe reference to FOSS is quite arbitrary. The alternative of lobbying\ncompanies is equally indeterminate and arbitrary. One of the core\nproblem is that you can't poll users about features, and even if one\ncould users are unlikely to be able to make design decisions about the\nsystem. Voting is a quite imperfect mechanism. IF there would be a\nhardfork vote of this kind, at least each party should lay out a\nlongterm plan and proposal. Mike and Gavin don't have any plans to\nimplement new scaling facilities and Lightening is not a coherent\nproposal. In effect this fork battle would not be part of a BIP\nprocess, but a vote on a longterm plan/architecture.\n\nOn Tue, Jun 16, 2015 at 8:09 AM, Marcel Jamin <marcel at jamin.net> wrote:\n>> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,\n> you cannot have it.\n>\n> Neither do you or anyone else.\n>\n>> There is protocol for how change is effected in a FOSS project.\n>\n> And it allows the minority to hold the majority hostage.\n>\n>> If you take the risks with Mike&GavCoin, that would be fine, but you are\n>> about to take them with community-owned Bitcoin and Other People's Money!\n>\n> The same can be said about the other camp.\n>\n> BitcoinXT is not going to fork the chain on a specific date no matter what.\n> People will be able to vote via block versions and once a sufficient\n> majority supports the extensions, everyone else will have a grace period to\n> upgrade. Only after that is a very small minority at risk of losing money.\n>\n> That being said, I'd rather see a solution that everyone agrees on. My\n> personal opinion/hope is that Mike and Gavin are just applying pressure\n> where it's needed. But in the end, they can do whatever they want if they\n> have the necessary support. Permissionless innovation is one of bitcoins\n> virtues. In the end, only adoption will decide what bitcoin is and isn't.\n>\n> 2015-06-16 7:18 GMT+02:00 Venzen <venzen at mail.bihthai.net>:\n>>\n>> Mike Hearn,\n>>\n>> In the light of your responses to Adam Back's questions, below, I feel\n>> it is time to speak up because what I now understand, and is implied,\n>> is that Mike Hearn and Gavin Andresen have planned and deployed the\n>> infrastructure for a Bitcoin hard-fork and intend to action it despite\n>> majority opposition.  http://xtnodes.com/\n>>\n>> I'll try to keep it brief:\n>>\n>> Mike Hearn, you should cease your activity of a unilateral hard-fork\n>> immediately. You are doing untold damage by breaking FOSS governance\n>> protocol requiring methodical collaborative work and due process of\n>> change implementation by consensus. Your actions are bad for the\n>> Bitcoin project and its ideals, disrespectful of your peers and years\n>> of their passionate hard work, and dangerous for Bitcoin in the\n>> marketplace and bitcoin in peoples' wallets.\n>>\n>> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,\n>> you cannot have it. Your hard-fork is tantamount to theft and you and\n>> your collaborators will effectively ex-communicate yourselves from\n>> this project and community. It appears that you are consciously trying\n>> to usurp ownership and maintenance of Bitcoin. As if it is that easy!\n>> You clearly do not comprehend the array of risks - especially the\n>> unanticipated ones. As the market saying goes: \"If you think\n>> speculation is easy, it is because you are ignorant about the risks\".\n>> If you take the risks with Mike&GavCoin, that would be fine, but you\n>> are about to take them with community-owned Bitcoin and Other People's\n>> Money!\n>>\n>> You are causing a lot of stress, unnecessarily, and grave concern\n>> surrounds your proposed renegade action. You can dissolve the threat:\n>> those players to whom you have made promises can be appeased and\n>> eventually get most of what they need from this FOSS project. The\n>> developers whom you are railroading to get your way, and the way in\n>> which you are doing it, is about to cause a schism that will expand\n>> outward from this community.\n>>\n>> You may accuse the community for being antagonistic to you, and\n>> therefore uncooperative, but it is plain to see that your bullheaded\n>> manner eventually generates antagonism wherever you go. Taking Bitcoin\n>> away from this community, in anger, won't solve the problem and will\n>> be like killing the goose that lays the golden eggs.\n>>\n>> If an individual in an objectively agreed-to FOSS-modelled\n>> collaborative project has the audacity to threaten his peers and the\n>> world with a unilateral hard-fork despite majority objection and a\n>> probability distribution that includes terminal risks and unintended\n>> consequences, then what would an impartial outsider think? Some of\n>> their thoughts would include that the antagonist could be acting in\n>> self-interest, or may be a paid actor, or worse, a saboteur. What\n>> would they advise? Stop that individual, at once!\n>>\n>> Bitcoin is a Free and Open Source Software project that serves as\n>> flagship for the blockchain. It has a payment network but the key\n>> benefits are censorship resistance and trustless decentralization.\n>> There is protocol for how change is effected in a FOSS project. For\n>> the sake of everything that is good and useful in Bitcoin, reconsider\n>> your dangerous plan and its intended and unintended consequences. Put\n>> your feet back on the ground, return to the fold and let the\n>> collaborative FOSS model, and the skills available here, gradually\n>> scale Bitcoin to your (and all our) grand vision.\n>>\n>> Venzen Khaosan\n>>\n>>\n>> On 06/15/2015 04:56 PM, Mike Hearn wrote:\n>> > Hi Adam,\n>> >\n>> > Provisional answers below!\n>> >\n>> > - Are you releasing a BIP for that proposal for review?\n>> >\n>> >\n>> > The work splits like this:\n>> >\n>> > * Gavin is writing the code and I think a BIP as well\n>> >\n>> > * I will review both and mostly delegate to Gavin's good taste\n>> > around the details, unless there is some very strong disagreement.\n>> > But that seems unlikely.\n>> >\n>> > * I have been handling gitian and the patch rebases, the code\n>> > signing and so on, so far. I've also been doing some work to setup\n>> > the basic infrastructure of the project (website etc).\n>> >\n>> >\n>> > - If the reviewers all say NACK will you take on board their\n>> > suggestions?\n>> >\n>> >\n>> > Feedback will be read. There are no NACKS in Bitcoin XT. Patch\n>> > requests aren't scored in any way. The final decision rests with\n>> > the maintainer as in ~all open source projects.\n>> >\n>> >\n>> >\n>> > - On the idea of a non-consensus hard-fork at all, I think we can\n>> > assume you will get a row of NACKs.  Can you explain your\n>> > rationale for going ahead anyway?  The risks are well understood\n>> > and enormous.\n>> >\n>> >\n>> > Yes, I have been working on an article that explains how we got to\n>> > this point from my perspective. It is quite long, but only because\n>> > I want it to be readable for people who weren't following the\n>> > debate.\n>> >\n>> > Anyway, I think I've laid out the gist of it over and over again,\n>> > but to summarise:\n>> >\n>> > If Bitcoin runs out of capacity *it will break and many of our\n>> > users will leave*. That is not an acceptable outcome for myself or\n>> > the many other wallet, service and merchant developers who have\n>> > worked for years to build an ecosystem around this protocol.\n>> >\n>> >\n>> >\n>> > - How do you propose to deal with the extra risks that come from\n>> > non-consensus hard-forks?  Hard-forks themselves are quite risky,\n>> > but non-consensus ones are extremely dangerous for consensus.\n>> >\n>> >\n>> > The approach is the same for other forks. Voting via block versions\n>> > and then when there's been >X% for Y time units the 1mb limit is\n>> > lifted/replaced.\n>> >\n>> >\n>> >\n>> >\n>> > - If you're going it alone as it were, are you proposing that you\n>> > will personally maintain bitcoin-XT?  Or do you have a plan to\n>> > later hand over maintenance to the bitcoin developers?\n>> >\n>> >\n>> > Good question!  I have various thoughts on this, but let's wait and\n>> > see what happens first. Perhaps the new chain won't get the\n>> > majority on it.\n>> >\n>> > In the event that the >1mb chain does eventually win, I would\n>> > expect Core to apply the patch and rejoin the consensus rather than\n>> > lose all its users. That would take XT back to being a fairly small\n>> > patchset to improve the network protocol.\n>> >\n>> >\n>> >\n>> > - Do you have contingency plans for what to do if the\n>> > non-consensus hard-fork goes wrong and $3B is lost as a result?\n>> >\n>> >\n>> > Where did you get the $3B figure from? The fork either doesn't\n>> > happen, or it happens after quite a long period of people knowing\n>> > it's going to happen - for example because their full node is\n>> > printing \"You need to upgrade\" messages due to seeing the larger\n>> > block version, or because they read the news, or because they heard\n>> > about it via some other mechanisms.\n>> >\n>> > Let me flip the question around. Do you have a contingency plan if\n>> > Bitcoin runs out of capacity and significant user disruption occurs\n>> > that results in exodus, followed by fall in BTC price? The only one\n>> > I've seen is \"we can perform an emergency hard fork in a few\n>> > weeks\"!\n>> >\n>> >\n>> >\n>> > As you can probably tell I think a unilateral fork without\n>> > wide-scale consensus from the technical and business communities is\n>> > a deeply inadvisable.\n>> >\n>> >\n>> > Gavin and I have been polling many key players in the ecosystem.\n>> > The consensus you seek does exist. All wallet developers (except\n>> > Lawrence), all the major exchanges, all the major payment\n>> > processors and many of the major mining pools want to see the limit\n>> > lifted (I haven't been talking to pools, Gavin has).\n>> >\n>> > This notion that the change has no consensus is based on you\n>> > polling the people directly around you and people who like to spend\n>> > all day on this mailing list. It's not an accurate reflection of\n>> > the wider Bitcoin community and that is one of the leading reasons\n>> > there is going to be a fork. A small number of people have been\n>> > flatly ignoring LOTS of highly technical and passionate developers\n>> > who have written vast amounts of code, built up the Bitcoin user\n>> > base, designed hardware and software, and yes built companies.\n>> >\n>> > How do you think that makes Bitcoin Core look to the rest of the\n>> > Bitcoin world? How much confidence does that give people?\n>> >\n>> >\n>> >\n>> > Of the overall process, I think you can agree we should not be\n>> > making technical decisions with this level of complexity and\n>> > consensus risk with financial implications of this magnitude under\n>> > duress of haste?\n>> >\n>> >\n>> > This debate will never end until a fork makes it irrelevant. There\n>> > is no process for ending it, despite me begging Wladimir to make\n>> > one.\n>> >\n>> > And there is no haste. We have been debating the block size limit\n>> > for _years_. We have known it must be lifted for _years_. I kicked\n>> > off this current round of debates after realising that Wladimir's\n>> > release timeline wouldn't allow a block size limit to be released\n>> > before the end of the year. The reason we're talking about it now\n>> > and not next year is exactly to ensure there is plenty of time.\n>> >\n>> >\n>> >\n>> >\n>> > I can sincerely assure you everyone does want to scale bitcoin and\n>> > shares your long term objective on that\n>> >\n>> >\n>> > I really wish you were right, and I definitely feel you are one of\n>> > the more reasonable ones Adam. But the overwhelming impression I\n>> > get from a few others here is that no, they don't want to scale\n>> > Bitcoin. They already decided it's a technological dead end. They\n>> > want to kick end users out in order to \"incentivise\" (force) the\n>> > creation of some other alternative, claiming that it's still\n>> > Bitcoin whilst ignoring basic details ... like the fact that no\n>> > existing wallets or services would work.\n>> >\n>> > Scaling Bitcoin can only be achieved by letting it grow, and\n>> > letting people tackle each bottleneck as it arises at the right\n>> > times. Not by convincing ourselves that success is failure.\n>> >\n>> >\n>> >\n>> >\n>> > ------------------------------------------------------------------------------\n>> >\n>> >\n>> >\n>> >\n>> > _______________________________________________ Bitcoin-development\n>> > mailing list Bitcoin-development at lists.sourceforge.net\n>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> >\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-16T11:01:21",
                "message_text_only": "On Tue, Jun 16, 2015 at 6:18 AM, Venzen <venzen at mail.bihthai.net> wrote:\n\n> Mike Hearn, you should cease your activity of a unilateral hard-fork\n> immediately. You are doing untold damage by breaking FOSS governance\n> protocol requiring methodical collaborative work and due process of\n> change implementation by consensus.\n\n\nThe main principle of open source software is that anyone can fork the code\nif they wish.  They don't do it very often, but they can.\n\nThis means that if a project dies, someone can take it over.  If some of\nthe devs want to take things in a different direction, they can.  Users can\ndecide which version they prefer.\n\nThe software itself is what is valuable.\n\nIn the case of bitcoin, the blockchain is also (very) valuable.  Simply\nsplitting into two projects is not possible for bitcoin.\n\nOtherwise, the discussion would have ended already, those who want a larger\nblock would simply create a fork of the software and create an alt chain.\n\nThe fundamental problem is that there is no clear way to make this decision\nonce and for all.\n\nAn agreed set of rules for a hard fork would be a nice thing to have, but\nit is hard to have rules about how to change fundamental rules.\n\nI think using the soft fork rules (maybe with a higher threshold than 95%)\nplus a delay is a reasonable compromise on hard fork rules.\n\nEven then, it would be nice to include users of the software too.  Peter\nTodd's suggestion of encoding a vote in transactions is a step in that\ndirection (YES transactions in YES blocks and NO transactions in NO blocks).\n\n\n> Mike Hearn and Gavin Andresen do not own Bitcoin and, emphatically,\n> you cannot have it.\n\n\nNobody owns it, so there is no court of final appeal.\n\nIf miners vote >95% for the fork, users could still refuse to accept the\nchange.\n\nMaybe the sequence could be\n\nversion 3 blocks means no opinion\nversion 4 blocks means NO to fork\nversion 5 blocks means YES to fork & YES transactions\nversion 6 blocks means YES to fork & NO transactions\n\nTransaction matching rule:\n\nversion 1, 2, 3 transactions means no opinion (can be in any block)\nversion 4 transactions means YES to fork (cannot be in version 6 blocks)\nversion 5 transactions means NO to fork (cannot be in version 5 blocks)\n\nRules\n0) if 750 of the last 1000 blocks are version 5 or 6 blocks, tx matching\nrule activates for version 5 & 6 blocks\n1) if 950 of the last 1000 blocks are version 5 or 6 blocks, then version 4\nblocks are rejected\n2) if 750 of the last 1000 blocks are version 4 blocks, then version 5 & 6\nblocks are rejected\n3) if 750 of the last 1000 blocks are version 5 transactions and 950 of the\nlast 1000 are version 5 or 6, then the fork is accepted\n4) 25,000 blocks after 3 is accepted, hard fork actually takes effect\n\nOnce miner acceptance is achieved, then only version 5 and 6 blocks are\nallowed.  The split between version 5 and 6 blocks should be roughly in\nproportion to the number of transactions of each kind produced.\n\n75% of miners can kill the fork by producing version 4 blocks, but 95% is\nneeded for acceptance.  Even then, transaction volume needs to support the\nfork.  I think 75% is reasonable here.  (95% of miners and 75% of\nmerchants/users is a pretty strong majority).\n\n\n> You may accuse the community for being antagonistic to you, and\n> therefore uncooperative, but it is plain to see that your bullheaded\n> manner eventually generates antagonism wherever you go. Taking Bitcoin\n> away from this community, in anger, won't solve the problem and will\n> be like killing the goose that lays the golden eggs.\n>\n\nThey are still suggesting some kind of fork threshold process (or at least\nthat is what is being suggested)\n\nIf their system requires 95% miner approval, they aren't taking unilateral\naction.  Miners are though if they vote in favour.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/382e07b0/attachment.html>"
            },
            {
                "author": "Troy Benjegerdes",
                "date": "2015-06-17T03:52:42",
                "message_text_only": "> - How do you propose to deal with the extra risks that come from\n> non-consensus hard-forks?  Hard-forks themselves are quite risky, but\n> non-consensus ones are extremely dangerous for consensus.\n\nThis is a non-issue.\n\nIf the hard-fork is not a consensus, then those of us that don't consent\nignore the fool that tried to hard-fork.\n\nIf a fool attempting a non-consensus hard-fork actually breaks something,\nthen you have a fragile system that needs some serious re-thinking.\n\nI think a non-consensus hard-fork would be the best thing that could \nhappen to the bitcoin ecosystem long-term, because it would force some\nre-examination of some very bad assumptions.\n\n-- \n----------------------------------------------------------------------------\nTroy Benjegerdes                 'da hozer'                  hozer at hozed.org\n7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop\n\n      Never pick a fight with someone who buys ink by the barrel,\n         nor try buy a hacker who makes money by the megahash"
            }
        ],
        "thread_summary": {
            "title": "questions about bitcoin-XT code fork & non-consensus hard-fork",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Bryan Bishop",
                "odinn",
                "Eric Lombrozo",
                "Brian Hoffman",
                "Troy Benjegerdes",
                "Venzen",
                "Adam Back",
                "Benjamin",
                "Mike Hearn",
                "Peter Todd",
                "Marcel Jamin",
                "Tier Nolan",
                "Jorge Tim\u00f3n",
                "Alex Morcos",
                "Mark Friedenbach",
                "Faiz Khan",
                "Pindar Wong",
                "Aaron Voisine"
            ],
            "messages_count": 26,
            "total_messages_chars_count": 168763
        }
    },
    {
        "title": "[Bitcoin-development] questions about bitcoin-XT code fork &non-consensus hard-fork",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2015-06-15T23:05:04",
                "message_text_only": "http://xtnodes.com/\nFrom: Brian Hoffman \nSent: Monday, June 15, 2015 3:56 PM\nTo: Faiz Khan \nCc: Bitcoin Dev \nSubject: Re: [Bitcoin-development] questions about bitcoin-XT code fork &non-consensus hard-fork\n\nWho is actually planning to move to Bitcoin-XT if this happens? \n\nJust Gavin and Mike?\n\n\n\n\nOn Jun 15, 2015, at 6:17 PM, Faiz Khan <faizkhan00 at gmail.com> wrote:\n\n\n  I'm quite puzzled by the response myself, it doesn't seem to address some of the (more serious) concerns that Adam put out, the most important question that was asked being the one regarding personal ownership of the proposed fork: \n\n  \"How do you plan to deal with security & incident response for the duration you describe where you will have control while you are deploying the unilateral hard-fork and being in sole maintainership control?\"\n\n  I do genuinely hope that whomever (now and future) wishes to fork the protocol reconsider first whether they are truly ready to test/flex their reputation/skills/resources in this way... Intuitively, to me it seems counterproductive, and I don't fully believe it is within a single developer's talents to manage the process start-to-finish (as it is non-trivial to hard-fork successfully, others have rehashed this in other threads)... \n\n  That being said I think it appropriate if Adam's questions were responded in-line when Mike is feeling up to it. I think that the answers are important for the community to hear when such a drastic change is being espoused. \n\n  Faiz\n\n  On Mon, Jun 15, 2015 at 4:56 PM, Bryan Bishop <kanzure at gmail.com> wrote:\n\n    On Mon, Jun 15, 2015 at 3:55 PM, Mike Hearn <mike at plan99.net> wrote:\n\n      Re: anyone who agrees with noted non-programmers Mike&Gavin must be non-technical, stupid, uninformed, etc .... OK, go ahead and show them the error of their ways. Anyone can write blogs.\n\n    I worry that if this is the level of care you take with reading and (mis)interpreting Adam's messages, that you might not be taking extreme care with evaluating consensus changes, even while tired or sleeping. I encourage you to evaluate both messages and source code more carefully, especially in the world of bitcoin. However, this goes for everyone and not just you. Specifically, when Adam mentioned your conversations with non-technical people, he did not mean \"Mike has talked with people who have possibly not made pull requests to Bitcoin Core, so therefore Mike is a non-programmer\". Communication is difficult and I can understand that, but we really have to be more careful when evaluating each other's messages; technical miscommunication can be catastrophic in this context. On the topic of whether you are a programmer, I suspect that ever since you built CIA.vc we have all known you're a programmer, Mike.\n\n\n    - Bryan\n    http://heybryan.org/\n    1 512 203 0507\n\n    ------------------------------------------------------------------------------\n\n    _______________________________________________\n    Bitcoin-development mailing list\n    Bitcoin-development at lists.sourceforge.net\n    https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n    -- \n\n\n    My regards,\n\n    Faiz Khan\n\n\n  ------------------------------------------------------------------------------\n\n  _______________________________________________\n  Bitcoin-development mailing list\n  Bitcoin-development at lists.sourceforge.net\n  https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n--------------------------------------------------------------------------------\n------------------------------------------------------------------------------\n\n\n\n--------------------------------------------------------------------------------\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/5fad1561/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: image1.JPG\nType: image/jpeg\nSize: 22107 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/5fad1561/attachment.jpe>"
            }
        ],
        "thread_summary": {
            "title": "questions about bitcoin-XT code fork &non-consensus hard-fork",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Raystonn ."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 4326
        }
    },
    {
        "title": "[bitcoin-dev] [Bitcoin-development] questions about bitcoin-XT code fork & non-consensus hard-fork",
        "thread_messages": [
            {
                "author": "Pindar Wong",
                "date": "2015-06-25T06:43:19",
                "message_text_only": "On Wed, Jun 17, 2015 at 11:59 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Tue, Jun 16, 2015 at 09:55:13PM +0800, Pindar Wong wrote:\n> > > Agreed. Pieter Wuille's recent work is a great example of the kind of\n> > > science-driven investigations that need to be done - and haven't been\n> > > done very much - to get us some hard data to make decisions on.\n> > >\n> >\n> > Thank you very much Peter for pointing this out! That is very kind of\n> you.\n> >\n> > It would be great to work with Constance Choi, Primavera De Filippi, your\n> > goodself and others to make this happen.\n>\n> Great! They're excited to see this happen. I'm in London right now\n> actually for the conference they were holding this week; the blocksize\n> issue was being discussed a fair bit there among attendees. (notably,\n> with rather different views than seen on reddit!)\n>\n> > As you may know, the Hong Kong Monetary Authority considers bitcoin a\n> > virtual 'commodity' and not a currency per se.\n>\n> Yup, though keep in mind the regulatory question is more than just how\n> your local jurisdiction views Bitcoin, but rather how your customers'\n> jurisdictions view Bitcoin.\n>\n> Of course, when I say \"customers\" above, I mean the entire Bitcoin\n> community that is ultimately buying the new coins produced by miners and\n> paying fees to them!\n>\n\nI'm sorry for the distraction with the mailing list problems.\n\nTaking an ecosystem view, the miners are important, so are all the other\nparticipants who rely on it and  invest time, effort and energy to make\nBitcoin work and work well.\n\nI am in contact with Primavera and it would appear that the Cyberport is\navailable for use on October 14 and 15 (Wed/Thursday).\n\nLast November, this was where the Global Bitcoin Summit (Hong Kong)\n<http://www.cyberport.hk/en/about_cyberport/our_5_centres/collaboration_centre/collaboration_news/2146>\nwas hosted with the participation of many of China's leading\nBitcoin-related companies. There is a meeting now in Shanghai.\n\nIt would be an honour to host a more technical meeting to discuss BIP100,\n101 et al. should be interest to do so.\n\np.\n\n\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/8e8af878/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-26T19:30:31",
                "message_text_only": "On Thu, Jun 25, 2015 at 02:43:19PM +0800, Pindar Wong wrote:\n> > Yup, though keep in mind the regulatory question is more than just how\n> > your local jurisdiction views Bitcoin, but rather how your customers'\n> > jurisdictions view Bitcoin.\n> >\n> > Of course, when I say \"customers\" above, I mean the entire Bitcoin\n> > community that is ultimately buying the new coins produced by miners and\n> > paying fees to them!\n> >\n> \n> I'm sorry for the distraction with the mailing list problems.\n> \n> Taking an ecosystem view, the miners are important, so are all the other\n> participants who rely on it and  invest time, effort and energy to make\n> Bitcoin work and work well.\n\nAgreed.\n\nIMO any change to the blocksize needs explicit mechanisms to let all\nBitcoin holders have a say in it.\n\n> I am in contact with Primavera and it would appear that the Cyberport is\n> available for use on October 14 and 15 (Wed/Thursday).\n\nGreat! Glad to hear.\n\n> Last November, this was where the Global Bitcoin Summit (Hong Kong)\n> <http://www.cyberport.hk/en/about_cyberport/our_5_centres/collaboration_centre/collaboration_news/2146>\n> was hosted with the participation of many of China's leading\n> Bitcoin-related companies. There is a meeting now in Shanghai.\n> \n> It would be an honour to host a more technical meeting to discuss BIP100,\n> 101 et al. should be interest to do so.\n\nAre you thinking this more technical meeting should be before or after\nthe October event? Perhaps a better question, is what exactly do you see\nbeing discussed at a technical meeting?\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/214c07bb/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "questions about bitcoin-XT code fork & non-consensus hard-fork",
            "categories": [
                "bitcoin-dev",
                "Bitcoin-development"
            ],
            "authors": [
                "Pindar Wong",
                "Peter Todd"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 4318
        }
    },
    {
        "title": "[Bitcoin-development] Test",
        "thread_messages": [
            {
                "author": "Jakub Lacko",
                "date": "2015-06-15T12:02:32",
                "message_text_only": "Tets\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150615/4deab917/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Test",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jakub Lacko"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 187
        }
    },
    {
        "title": "[Bitcoin-development] Reusable payment codes",
        "thread_messages": [
            {
                "author": "odinn",
                "date": "2015-06-16T16:26:07",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nThis is very well done.\n\nHave you seen this discussion that I started regarding BIP 63?\n\nhttps://bitcointalk.org/index.php?topic=1083961.0\n\nI have no response from Peter Todd back on it other than \"my time is\nbetter spent focusing on more fundemental issues\" and \"I've also got\nno-one interested in funding stealth address development right now,\"\nwhen several people (myself included) offered to send donations to see\nthe BIP (63) advance, no donation address was posted, so... waiting\nfor him to act on that.\n\nI'm definitely supportive of seeing what you've written up here as\nReusable payment codes move to draft in https://github.com/bitcoin/bips\nWhen you can, please write up something on bitcointalk as well.\n\n\nOn 04/24/2015 01:00 PM, Justus Ranvier wrote:\n> Hash: SHA1\n> \n> \n> https://github.com/justusranvier/rfc/blob/payment_code/bips/bip-pc01.m\nediawiki\n>\n> \n> \n> This link contains an RFC for a new type of Bitcoin address called\n> a \"payment code\"\n> \n> \n> Payment codes are SPV-friendly alternatives to DarkWallet-style\n> stealth addresses which provide useful features such as positively\n> identifying senders to recipients and automatically providing for\n> transaction refunds.\n> \n> \n> Payment codes can be publicly advertised and associated with a\n> real-life identity without causing a loss of financial privacy.\n> \n> \n> Compared to stealth addresses, payment codes require less\n> blockchain data storage.\n> \n> \n> Payment codes require 65 bytes of OP_RETURN data per\n> sender-recipient pair, while stealth addresses require 40 bytes per\n> transaction.\n> \n> \n> \n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \nOne dashboard for servers and applications across Physical-Virtual-Cloud\n> Widest out-of-the-box monitoring support with 50+ applications \n> Performance metrics, stats and reports that give you Actionable\n> Insights Deep dive visibility with transaction tracing using APM\n> Insight. http://ad.doubleclick.net/ddm/clk/290420510;117567292;y\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVgE4fAAoJEGxwq/inSG8CjgkH/i0aX4aJaOjrbI2xzWbPeL1T\n/APSvSqV0D610ljbw/MuRRFVagnK3lCs73fYolKw9uFG0cnwhIWJ53mCqPWhM5nL\nkIejDTHr9jQ2tbXrU2L481Oat1Z6vtdQj7LolXFfD3Ktqz+sqp//gBaC9EEZ5nOq\n4oz71Am58pf8+XGhtJk0+4XDXzFNd71bKKY+nMf9f3bwqNX93jHiF48hXwijFPC4\nMOZmYRh3Sf5LAVP5p1JY3aJRQv4M/W0L2RDC+GW8Ol997etQSGGLhESihNNPw1m8\nGEqJLBmUBkavzsRpZ009czfzL7EiCwsMbOrVw918o2Y9NnVpY9a9cBNB+UJgCmk=\n=wAGz\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-16T17:46:41",
                "message_text_only": "On Tue, Jun 16, 2015 at 09:26:07AM -0700, odinn wrote:\n> This is very well done.\n> \n> Have you seen this discussion that I started regarding BIP 63?\n> \n> https://bitcointalk.org/index.php?topic=1083961.0\n> \n> I have no response from Peter Todd back on it other than \"my time is\n> better spent focusing on more fundemental issues\" and \"I've also got\n> no-one interested in funding stealth address development right now,\"\n> when several people (myself included) offered to send donations to see\n> the BIP (63) advance, no donation address was posted, so... waiting\n> for him to act on that.\n\nSorry, but I'm looking at the huge amount of work that I'll likely have\nresponding to the blocksize issue, so I think I'm inclined to shelve\nwork on BIP63 for now.\n\nFeel free to take it up; a (>=2)-part standard describing the resuable\ncodes aspect, and separately how the ephemeral key is transmitted to the\nrecipient makes sense to me.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000127ab1d576dc851f374424f1269c4700ccaba2c42d97e778\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/534697e6/attachment.sig>"
            },
            {
                "author": "odinn",
                "date": "2015-06-17T05:34:04",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nPeter, my response below\n\nOn 06/16/2015 10:46 AM, Peter Todd wrote:\n> On Tue, Jun 16, 2015 at 09:26:07AM -0700, odinn wrote:\n>> This is very well done.\n>>\n>> Have you seen this discussion that I started regarding BIP 63?\n>>\n>> https://bitcointalk.org/index.php?topic=1083961.0\n>>\n>> I have no response from Peter Todd back on it other than \"my time is\n>> better spent focusing on more fundemental issues\" and \"I've also got\n>> no-one interested in funding stealth address development right now,\"\n>> when several people (myself included) offered to send donations to se\ne\n>> the BIP (63) advance, no donation address was posted, so... waiting\n>> for him to act on that.\n> \n> Sorry, but I'm looking at the huge amount of work that I'll likely hav\ne\n> responding to the blocksize issue, so I think I'm inclined to shelve\n> work on BIP63 for now.\n\n\nI seriously find this pretty sad... you said that paying rent was an\nissue and your time was better spent on \"more fundamental issues...\" but\nthe very least you could do is post a donation address... Is there\nsomeone who was working with you closely on the concept who could take\nit up since you are not going to be working on it?\n\n> \n> Feel free to take it up; a (>=2)-part standard describing the resuable\n> codes aspect, and separately how the ephemeral key is transmitted to t\nhe\n> recipient makes sense to me.\n> \n\nI don't want to camp on Justus's thread on reusable payment codes ~ but\non the subject of BIP 63, it just did make sense to mention... so if\nsomeone does have interest in working on it... please go to\nhttps://bitcointalk.org/index.php?topic=1083961.0\nand reply there.\n\n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVgQbMAAoJEGxwq/inSG8CD8gH/3jV+mLO9qv3t6JFxIvLMPtr\nslGbymQtuqfAC09b6ybx3p6u9I1o1Nb3IgK1riu/Z3AzHxlnuYVUxN3N5ns0zGnx\nF2WXs2suEa20YJkQ6dxZWLdNBjnUIEGGgXAit8X21LqVsqPfeZcocOWSeRDlePhk\n/HRFLVtMehqfqjbuFAaAewVZUyT4Bn+3IU74krqR3e3YA00/ym1C5xCE3/kHvKIL\nUF8EW9GgVYKuoyQdH3ICDwjiudwPOwIC4Ry0huaJgla43122RkwqYB+5kVr1583u\ndx3VW8vW8HyQZJF+vb8d3F57R6FC6zYtFhCe0IzDIh+6xQxStk5zosMNIrtPKp4=\n=h8Ib\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Reusable payment codes",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "odinn",
                "Peter Todd"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 6500
        }
    },
    {
        "title": "[Bitcoin-development] Lost proposals from FellowTraveler/Monetas",
        "thread_messages": [
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-16T23:32:43",
                "message_text_only": "Is there any discussion thats been had relating to the BIP-drafts at:\n\nhttps://github.com/Open-Transactions/rfc/tree/master/bips\n\nFellow Traveler has apparently been waiting 9 months for progress on\nthese proposals and I'm trying to find out where the breakdown\nhappened. While do not doubt that I am somehow at fault, I can't\nfigure out how.\n\nSearching my email and this list archive for \"Base58 Serialization for\nTransaction-Based Color Descriptors\" or \"Order-based Smart Property\nColoring\" or the draft names bip-ccids, etc. turn up no hits at all.\nI've asked several other people and there list archives show nothing.\n\nHas anyone else taken part in discussions related to these proposals\n(or seen them all before)? If so, please point me to the discussion.\n\nOtherwise I'll just go ahead and create threads for each under the\nassumption that there is yet another mailing list screwup. :("
            },
            {
                "author": "Justus Ranvier",
                "date": "2015-06-16T23:44:45",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\n\nHash: SHA512\n\n\nOn 2015-06-16 23:32, Gregory Maxwell wrote:\n\n> Is there any discussion thats been had relating to the BIP-drafts at:\n\n>\n\n> https://github.com/Open-Transactions/rfc/tree/master/bips\n\n>\n\n> Fellow Traveler has apparently been waiting 9 months for progress on\n\n> these proposals and I'm trying to find out where the breakdown\n\n> happened. While do not doubt that I am somehow at fault, I can't\n\n> figure out how.\n\n>\n\n> Searching my email and this list archive for \"Base58 Serialization for\n\n> Transaction-Based Color Descriptors\" or \"Order-based Smart Property\n\n> Coloring\" or the draft names bip-ccids, etc. turn up no hits at all.\n\n> I've asked several other people and there list archives show nothing.\n\n\nThe only two proposals we sent to the mailing list were attached to this\npost:\n\n\nhttp://sourceforge.net/p/bitcoin/mailman/message/32736455/\n\n\nThe rest of the proposals in that respository, as well as those the fork\nhere:\n\n\nhttps://github.com/Monetas/rfc/tree/master/bips\n\n\nwere never submitted because we decided to use alternative identifiers in\nleiu of BIP numbers to serve as the purpose code in the HD path.\n\n-----BEGIN PGP SIGNATURE-----\n\nVersion: GnuPG v2\n\n\niQIcBAEBCgAGBQJVgLRaAAoJECpf2nDq2eYjw7YQAJYrciEZZeasEJRR7XwZ5AWQ\n\n9e/pz1SV2hoRs7TqHgHoXGINLbG9LwlXFmnoG14z+vwKvheJxlC6gOQCRIRwPfrR\n\nzwuQWyoONHn82XL44ABqjnu0fmeh7egx3FIzsgDUxUgiP5dA0BuQvrT1+DptfJ+p\n\n5sM7ZvRqfZJbek4AHk9Y4kERQYsP4HKgC1W3Acr1In9WPSj5TRtYz7tUK+SFcO+m\n\nA3Ny5dUiAmmf5mfLZiWrEmCG34n+cCJZEU2hlQqH5ZuAHPmeTLuar91MLj/1Xltf\n\nOFlMGhmUPy1alTx8o39nwRjfXIVQLk7/D5YB3gB2CUuXd+sWbY+6LUyniOKtQK3C\n\nEmEDOUFSNm4JV1AmM+ea1HUufCJfkg1VHko4hsIyc1e7ztdECIzPQKAy7DAcu1YS\n\nBhbkxNyaUqoF+J/ggrXhT/r5oVpWsifdj4IEzaMvmOxu+p+hTkzzwitLuyknEBZE\n\nb2KWRMWNOheVpDp7RmrcTPqa4S1N8XcfJazDyigIhl0E/Bjk+pC1SHo7IIEMZMQ+\n\nFz7JaALd8XK0l7HBvvJnZmYwVLnQyB01B6n7z8eTTAneHhSXxa7Z1aFTkYU8Wp9o\n\nL5nb1K7gJtjBFqhLi3PMLRhARao1Q/CK5bDt9Mb3VMy9jAIr9X9/NcL473cbHtQH\n\n/h91bhkL9bvvkeCl5yQk\n\n=NgfK\n\n-----END PGP SIGNATURE-----\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150616/c69bd9f5/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Lost proposals from FellowTraveler/Monetas",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gregory Maxwell",
                "Justus Ranvier"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 3074
        }
    },
    {
        "title": "[Bitcoin-development] Scope narrowing for proposals to address block size limit debate, an inquiry",
        "thread_messages": [
            {
                "author": "odinn",
                "date": "2015-06-18T07:27:42",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nThe purpose of this post is to present an inquiry related to the\npossible narrowing of scope of what sort of proposals are likely to\n\"bear fruit\" at this stage.  The inquiry or question is, \"Are there\nsome proposals that are more likely to succeed, in addressing the\nwhole block size limit debate meaningfully?\"\n\nThe flip side of this inquiry, is that if you think that an attempt to\ndo such \"scope narrowing\" _at this time_ is foolhardy, inappropriate,\nwrong, or otherwise flawed, please say so and explain.  I'm not\nreligious about this notion.  I throw out proposals below which I\nthink would be likely to advance further ~ and thus I ask the question\nagain, and rephrase, \"Are there some proposals (some shown below as\nexamples, not all-inclusive) that are more likely to succeed, in\naddressing the whole block size limit debate meaningfully?\"\n\n~ Jeff Garzik, with respect to his BIP 100 (note Evan Mo, CEO of\nHuobi's mining project Digcoin, clarified that the big Chinese mining\npools consider further adjustments to the protocol beyond the\nsuggested 8 MB block size limit adjustment \u2014 such as the Bitcoin core\ndeveloper Jeff Garzik's BIP-100 draft \u2014 to be feasible)\n   ~ Adam Back, with a simplified soft-fork one-way peg\n   ~ Gavin Andresen, developing an 8 MB block size limit adjustment in\nthe context of Core (as an example) with one or more of the above\nauthors rather than focusing on XT. (This is a big assumption but,\nroll with it)\n\nAll of this assumes that developer(s) are willing to abandon\nintentionally contentious proposals such as the \"hard fork to XT w/ 20\nMB,\" remain within the context of Core and be reasonable.\n\nHere I am being aware of the fact that \"Pushing a hard fork in the\nface of such controversy is a folly, a danger to the network, and that\ndeserves to be said.\" - Wladimir J. van der Laan\nhttps://github.com/bitcoin/bitcoin.org/pull/894#issuecomment-112113917\n\nAnd if I'm lucky, this thread may get comments from DumbFruit, who\nwrites stuff like this:\nhttps://bitcointalk.org/index.php?topic=1085436.msg11643203#msg11643203\n\nSo now... your thoughts?\n\n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVgnLuAAoJEGxwq/inSG8CchMH/0zm+A7Uqp8SpU+CsJr3lF2+\n0re+5Ql4qVVmOI560918BtkdFjcq33jsKU9cYUDXqZ4wHfJTAGLGDqNgUZGpGkmJ\nbqGgSvdF64P52Vb9PVnz1I9+aClas8Mjvl8XUYoD0yEA14XVBakYDRbVqZ5yPM8n\nhBi6EpWLUnkFvvEj2dkgwddvPCvrnhVL/aRfmhet1pfOELfIrXtXI7hs2F1RyaqK\nsbR/Qg3SFlyHzbxSzRVcZQ0G81exq/fxHqxc5kSLMiR7TODIJxCl6cJDCjf8LbeS\nn6tL/I8vWN2zraYfb0cWu5uIjz5XnXpsitu951109zoS8IYle3uTfCF+6xdG3tY=\n=HQ9R\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Scope narrowing for proposals to address block size limit debate, an inquiry",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "odinn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2760
        }
    },
    {
        "title": "[Bitcoin-development] Concerns Regarding Threats by a Developer to Remove Commit Access from Other Developers",
        "thread_messages": [
            {
                "author": "odinn",
                "date": "2015-06-18T08:54:15",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nRecently I saw the following video:\n\nhttps://www.youtube.com/watch?v=8JmvkyQyD8w&t=47m58s\n\nHadn't seen it until just today, although it was done on June 8, 2015.\nSo this is a bit dated, but to me it was a bit of a stunner to see the\nextreme nature of (some) of the views presented in this video.\n\nLet me be blunt, I have serious concerns regarding threats issued by a\ndeveloper in this video, and I think that it is entirely possible that\nthose of you who are core developers have already seen this and have\nbeen discussing it.  But I am interested in seeing this resolved here\non this list openly and having it resolved.  It's sad and unfortunate\nto me, but I feel that it's necessary to do this.  Identify what's\nhappening, address it squarely, have the person who is threatening\nothers explain his/her behavior, deal with the problem and move on.\nThis seems to be very important.  Please tell me if I am wrong about\nthis or totally flawed in my perspective here.  Go right ahead.\n\nIn this video, a particular developer makes the following statement,\nstating in part:\n\n\"My preferred solution is that Gavin revokes commit access from\neveryone else in the project, and then... makes the change himself\"\n\nRegardless of how you look at this, and even if we believe that Gavin\nwill not respond to that developer's request for a so-called\n\"solution,\" such a statement (by any developer) is indeed both a\nthreat and an act of sabotage against the larger bitcoin community.\nWe should certainly be thankful therefore, for the recent policy\nchange at bitcoin.org which can be seen here:\nhttps://cloud.githubusercontent.com/assets/61096/8173297/578483f8-1399-1\n1e5-8f48-96f33d12b996.png\n\nI firmly believe that any developer who made a statement suggesting\nthat commit access of others in the project be revoked so that they\ncan proceed with their personal plan, needs to answer for having made\nsuch a suggestion with a formal apology to this list, followed by an\nexplanation for why they themselves should not have their commit\naccess removed.\n\nOverall, however, this sort of bombastic, nuclear suggestion makes me\nseriously concerned for the future of bitcoin (as well as any\ncryptocurrency which has repositories on Github).\n\nSo, you know who you are:  Apologize for your statement (\"preferred\nsolution\") and explain to the community why you should still have\ncommit access in light of the threat you have made to all the other\ndevelopers (and indeed to all participants of the bitcoin community).\n These \"nuclear options\" are unacceptable to us all.\n\nRespectfully,\n\n- -O\n\n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVgoc3AAoJEGxwq/inSG8C6QYH/1Ag+4ESTSUPkP8PCTj1AJds\nJ4MmBz4cX7IYsSttTAjyiwd6oTHCU+wAcXtgZYpzr8rWF62bG5/+kAFUfjKwNsGM\nWqcdNOR6h8fQulx8niuro8kZF/xOsG5eHtRK2FMCorxj0t6qn4pH5WAQL73J3hXQ\nxI831Nt/L7VTa0jlKbr2/VGlqh6CtGrZ9mXp6aV1MBNwHbFryNBJW9ubvUv/IRxZ\nGyJ+c3+Br2KKAQTMsyNn3VXMlXJL6kt0pwwk2od3j/+dKE4pAetHvZ5OgIO+qUWd\n6R0/AaoW5jk343TaQ5BHaSpNW+OM9Yc1ycZyqE/YV8JwWeA6G/QdmRVYeoLMCZQ=\n=zJeO\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-18T10:00:17",
                "message_text_only": "Dude, calm down. I don't have commit access to Bitcoin Core and Gavin\nalready said long ago he wouldn't just commit something, even though he has\nthe ability to do so.\n\nSo why did I say it? Because it's consistent with what I've always said:\n you cannot run a codebase like Wikipedia. Maintainers have to take part in\ndebates, and then make a decision, and anyone else who was delegated commit\naccess for robustness or convenience must then respect that decision. It's\nthe only way to keep a project making progress at a reasonable pace.\n\nThis is not a radical position. That's how nearly all coding projects work.\nI have been involved with open source for 15 years and the 'single\nmaintainer who makes decisions' model is normal, even if in some large\ncodebases  subsystems have delegated submaintainers.\n\nThis is also how all my own projects are run. Bitcoinj has multiple people\nwith commit access. Regardless, if there were to be some design dispute or\nwhatever, I wouldn't tolerate the others with commit access starting some\nkind of Wiki-style edit war in the code if they disagreed. Nor would I ever\nexpect to get my own way in other people's projects by threatening to\nrevert the maintainers changes.\n\nCore is in the weird position where there's no decision making ability at\nall, because anyone who shows up and shouts enough can generate\n'controversy', then Wladimir sees there is disagreement and won't touch the\nissue in question. So it just runs and runs and *anyone* with commit access\ncan then block any change.\n\nI realise some people think this anti-process leads to better decision\nmaking. I disagree. It leads to no decision making, which is not the same\nthing at all.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/8e40d538/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T11:14:09",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn Thu, Jun 18, 2015 at 12:00:17PM +0200, Mike Hearn wrote:\n\n> Core is in the weird position where there's no decision making ability at\n> all, because anyone who shows up and shouts enough can generate\n> 'controversy', then Wladimir sees there is disagreement and won't touch the\n> issue in question. So it just runs and runs and *anyone* with commit access\n> can then block any change.\n\nBitcoin Core is completely different from your average open source project in one aspect: where it concerns consensus.\n\nLike in any open source project there is lots of decision making ability for code changes. I'd say look at the changelog for e.g. 0.11 https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log, or follow pull requests for a while, to see how many decisions about changes are made from day to day. No, I'm not sitting on my hands, and so is none of the other contributors that you'd like to get rid of.\n\nConsensus changes are *much* more difficult, on the other hand. Even relatively straightforward softforks come with a long discussion process (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone needs to upgrade their software!), and simply not possible if almost the entire technical community disagrees with you.\n\nBitcoin is supposed to be a robust, global, decentralized network beyond anyone's control. It makes *no sense* to try to run it as a dictatorship. This would create a handy central position where power can be applied, pushing through changes to the behavior of the system, either by force or other ways of motivation. I refuse to take part in that.\n\nHence, anything that is controversial needs to be considered really carefully. If I suddenly start making changes to the consensus code without full agreement, by all means take away my commit privileges.\n\n(a major reason for the ongoing libconsensus work is to separate \"Bitcoin Core, the node software\" and \"The Bitcoin Consensus\" along clear lines, to avoid this kind of nasty confusion)\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVgqfOAAoJEHSBCwEjRsmmFT8H/Rkm29AhLhT8R1Vx8oKUIzID\n+NB7tOps3lIilkDQIC5zHSknx5iugrrAdRf1w7qPj/o8+xhCZw9ruu8eIq+djkRQ\ntvzbHil2pqgT3VHriRlY4lvlmu2NmBcYrAuX9sDhUHBo6cwGajfKMJPfE0haK3K4\n7EmfdGXJYJmiBnhE6ikOiU687M2WgsmIGrBDIxeA5wYwVK9Ph8hfcbuj7AHvIMI9\nZNU/V6uhcTjn5wT+6DHGIOxHipYHyAwKb7jKho0XkM6Yi4ORe1mxF5HDtqA0ztta\nmZPNjNrt/ngK20xRbqkb0GtxoyZq38ZF3Bq1gaWl2v9MBBMD5ZxQAvgCNUQFEo0=\n=W26K\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T11:47:59",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn Thu, Jun 18, 2015 at 01:14:09PM +0200, Wladimir J. van der Laan wrote:\n\n> On Thu, Jun 18, 2015 at 12:00:17PM +0200, Mike Hearn wrote:\n> \n> > Core is in the weird position where there's no decision making ability at\n> > all, because anyone who shows up and shouts enough can generate\n> > 'controversy', then Wladimir sees there is disagreement and won't touch the\n> > issue in question. So it just runs and runs and *anyone* with commit access\n> > can then block any change.\n\nAnd allegations that the project is \"run like wikipedia\" or \"an edit war\" are verifyably untrue.\nCheck the commit history.\nHow many reverts do you see? How many of those do you see that are not simply to get rid of unexpected bugs, to be re-merged later?\n\nNot much more than two, in ~5500 commit over six years. I feel sorry for you that `getutxos` was rejected in a messy way, still you are so held up about it and keep repeating it as if it is a daily occurence. Disingenuous, at the least.\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVgq/WAAoJEHSBCwEjRsmm8NUIAI/csucOmfF9e+BtSH+uruhl\nox32stQfD3hwcKropLEPFfKvmOcRU1nXBy6lcvhG+axw+WqpC48EvpD73P/BuSv7\nRvlLayqP+D6oiNsH+7S7C0/ndy+Pne04D+srSSBhXKfZMqruBqmUSontziJZTeLR\nC6CCFwFSAvSXGV873I3i4M4U5QqIrE5PyuK75wjl2SFisd2LjBgfzZh4HDbz85Qr\ngApLpdTxu4gDkGx4B9txCkfyb5W2z8nawWYb7+O7y/NbFL1Qlb36MzGuVKL6Zj1z\nB8kJrOLVW9ItduVRY/03wLsqBuGC9fjuhWexjKenvMpxfO//VvOxIBA7sCDrxjU=\n=lisE\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-18T13:36:53",
                "message_text_only": ">\n> And allegations that the project is \"run like wikipedia\" or \"an edit war\"\n> are verifyably untrue.\n> Check the commit history.\n>\n\nThis was a reference to a post by Gregory on Reddit where he said if Gavin\nwere to do a pull request for the block size change and then merge it, he\nwould revert it. And I fully believe he would do so!\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/78f96bc5/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-18T15:58:31",
                "message_text_only": "On Thu, Jun 18, 2015 at 1:36 PM, Mike Hearn <mike at plan99.net> wrote:\n>> And allegations that the project is \"run like wikipedia\" or \"an edit war\"\n>> are verifyably untrue.\n>> Check the commit history.\n>\n> This was a reference to a post by Gregory on Reddit where he said if Gavin\n> were to do a pull request for the block size change and then merge it, he\n> would revert it. And I fully believe he would do so!\n\nhttp://www.reddit.com/r/Bitcoin/comments/37pv74/gavin_andresen_moves_ahead_with_push_for_bigger/croxw9o?context=1\n\nThis is the only reddit comment I've made using the word revert in\nrecent memory, so I know you couldn't be referring to another.\n\n>> I was recently in a situation similar to what Gavin is in insofar as a design dispute that could improperly solved by a git push. I'm pretty impressed he hasn't given in and done a midnight push. It's cool to see him back channeling support.\n> Such a change would be immediately reverted.\n\nAnd, I probably should have continued \"and resulted with an immediate\nrevocation of commit rights on the assumption that his account had\nbeen compromised.\"\n\nThere is nothing controversial about that."
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-18T12:29:42",
                "message_text_only": "On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <laanwj at gmail.com>\nwrote:\n\n> Like in any open source project there is lots of decision making ability\n> for code changes. I'd say look at the changelog for e.g. 0.11\n> https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,\n> or follow pull requests for a while, to see how many decisions about\n> changes are made from day to day. No, I'm not sitting on my hands, and so\n> is none of the other contributors that you'd like to get rid of.\n>\n\nThe analogy goes further even. Even though I disagree with some of the\nchanges you're making, I respect Mike's (and anyone's) right to make a fork\nof Bitcoin Core. That's how open source works: if people disagree with\nchanges made or not made, they can maintain their own version. However:\n\n\n> Consensus changes are *much* more difficult, on the other hand. Even\n> relatively straightforward softforks come with a long discussion process\n> (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone\n> needs to upgrade their software!), and simply not possible if almost the\n> entire technical community disagrees with you.\n>\n\nConsensus changes - in particular hardforks - are not about making a change\nto the software. You are effectively asking users of the system to migrate\nto a new system. Perhaps one which is a philosophical successor to the old\none, but a different system, with new rules that are incompatible with the\nold one.\n\nI believe this is something that can only be done if there is no\ncontroversy about the change, for different reasons:\n\n* Risk: no matter how you determine the switchover date, there is no way of\nknowing when (and whether at all) everyone changes their full nodes (and\nperhaps other software), and even very high hash power votes cannot prevent\nan actual fork from appearing afterwards. At best, people lose the\nguarantee that their confirmations are meaningful (because at some point it\nbecomes clear that the other side will get adopted, and they need to\nswitch). At worst, a fork persists, and two partitions appear, in each of\nwhich you can spend every pre-existing coin. This defeats the primary\npurpose Bitcoin was designed for: double spend protection.\n\n* Philosophy: Bitcoin is not a democracy. The full node security model is\ndesigned to minimize trust in other parties in the system. This works by\nvalidating as much as possible according to the consensus rules. In\nparticular, there is no \"majority vote\" that can override things (contrary\nto what some people think, it is not \"longest chain wins, and a majority of\nminers decide\"; even a majority of miners cannot steal your coins or\nproduce more than the allowed subsidy, unless they convince others to\nchange their software). Changing the rules should be possible if there is\nwide consensus, but nobody should feel forced to change their code against\ntheir will.\n\n* Governance: being able to push for a controversial change to the system\nsets an incredibly dangerous precedent about who is in charge of the\nsystem's rules. What if next time it is a change demanded by parties with\nless good intentions (and yes, I believe people in this discussions all\nhave good intentions to improve the system in a way they think is most\nuseful)? I can promise you that I will say anything in mail to this list if\nsomeone points a gun at me, and I think you should make the same assumption\nabout other people here. By avoiding controversial changes, you avoid\nexternal and potentially invisible manipulation.\n\nOf course, sometimes changes to the consensus rules may be wanted. The\npresence of a bug is a good reason, and widespread agreement about one of\nthe system's limitation is too. As I said before, I think technological\ngrowth in network bandwidth, processing power, and storage, are a good\nreason why the system should be able to scale proportionally. I think there\nare good technical and economic reasons why we should be cautious about\nthis, but the primary requirement is consensus, and aligning people's\nexpectation about what they can expect from network's evolution.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/306edc65/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T12:50:17",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn Thu, Jun 18, 2015 at 02:29:42PM +0200, Pieter Wuille wrote:\n> On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <laanwj at gmail.com>\n> wrote:\n> \n> > Like in any open source project there is lots of decision making ability\n> > for code changes. I'd say look at the changelog for e.g. 0.11\n> > https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,\n> > or follow pull requests for a while, to see how many decisions about\n> > changes are made from day to day. No, I'm not sitting on my hands, and so\n> > is none of the other contributors that you'd like to get rid of.\n> >\n> \n> The analogy goes further even. Even though I disagree with some of the\n> changes you're making, I respect Mike's (and anyone's) right to make a fork\n> of Bitcoin Core. That's how open source works: if people disagree with\n> changes made or not made, they can maintain their own version. However:\n\nSure. According to github, there exist 4890 forks of the bitcoin/bitcoin repository.\n\nForking the code is perfectly fine in itself, that doesn't even need to be said, it's how open source works. Make your changes, run your own version, contribute back the changes (or not).\n\nAnd I never had a problem with Bitcoin-XT while it was just a patch-set with no consensus changes. But a controversial hard fork of the chain is something else completely.\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVgr5LAAoJEHSBCwEjRsmm5mMH/0yLGGQQefRVdmM/nJZ60b/z\niTCUUzY4eLL67FRC6pqGA18RdUt4Etl4wEqvgXH/B9mWIAM2yQD/jnxutYrEIoBT\n8Jyd1OhmmKF8MN5/uE7JNPivIuHs0ioF+qTxlbdElpVZ2NodVotznbTvuqJgXUFb\nc9Et5L5n7g55uPzDt+MSV5iBDJaMiBAnZA00aTLGmYmNXxcy7xBwCFX3dDij8krv\n0+zdpNNAKm85k1rG2jHCM+0onu+TOIur03pPd5OZktgr18P6UvAQ6A59yAkGgFai\n4l6VVNJ40g3PzItGQ7wsKZ8s/qG5LlcEppxMlG6CX1dIDpxbrwx2aJmeNjwSLKQ=\n=LbA3\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-18T12:56:32",
                "message_text_only": "\"And I never had a problem with Bitcoin-XT while it was just a\npatch-set with no consensus changes. But a controversial hard fork of\nthe chain is something else completely.\"\n\nHow is that different? The only difference is in who makes the fork\nand if that group has a chance of actually splitting/overriding the\nnetwork. So Mike and Gavin are using the trust and relationship they\nhave garnered through Bitcoin for their purposes (malicious or not).\nThere are only 20-30 people with the same kind of recognition who\nwould be able to do that. M&G already wanted to make a fork in 2014\nfor entirely different reasons (http://pastebin.com/3kt5Reeh).\n\nOn Thu, Jun 18, 2015 at 2:50 PM, Wladimir J. van der Laan\n<laanwj at gmail.com> wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA512\n>\n> On Thu, Jun 18, 2015 at 02:29:42PM +0200, Pieter Wuille wrote:\n>> On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <laanwj at gmail.com>\n>> wrote:\n>>\n>> > Like in any open source project there is lots of decision making ability\n>> > for code changes. I'd say look at the changelog for e.g. 0.11\n>> > https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,\n>> > or follow pull requests for a while, to see how many decisions about\n>> > changes are made from day to day. No, I'm not sitting on my hands, and so\n>> > is none of the other contributors that you'd like to get rid of.\n>> >\n>>\n>> The analogy goes further even. Even though I disagree with some of the\n>> changes you're making, I respect Mike's (and anyone's) right to make a fork\n>> of Bitcoin Core. That's how open source works: if people disagree with\n>> changes made or not made, they can maintain their own version. However:\n>\n> Sure. According to github, there exist 4890 forks of the bitcoin/bitcoin repository.\n>\n> Forking the code is perfectly fine in itself, that doesn't even need to be said, it's how open source works. Make your changes, run your own version, contribute back the changes (or not).\n>\n> And I never had a problem with Bitcoin-XT while it was just a patch-set with no consensus changes. But a controversial hard fork of the chain is something else completely.\n>\n> Wladimir\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n>\n> iQEcBAEBCgAGBQJVgr5LAAoJEHSBCwEjRsmm5mMH/0yLGGQQefRVdmM/nJZ60b/z\n> iTCUUzY4eLL67FRC6pqGA18RdUt4Etl4wEqvgXH/B9mWIAM2yQD/jnxutYrEIoBT\n> 8Jyd1OhmmKF8MN5/uE7JNPivIuHs0ioF+qTxlbdElpVZ2NodVotznbTvuqJgXUFb\n> c9Et5L5n7g55uPzDt+MSV5iBDJaMiBAnZA00aTLGmYmNXxcy7xBwCFX3dDij8krv\n> 0+zdpNNAKm85k1rG2jHCM+0onu+TOIur03pPd5OZktgr18P6UvAQ6A59yAkGgFai\n> 4l6VVNJ40g3PzItGQ7wsKZ8s/qG5LlcEppxMlG6CX1dIDpxbrwx2aJmeNjwSLKQ=\n> =LbA3\n> -----END PGP SIGNATURE-----\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-18T13:49:06",
                "message_text_only": "Hi Pieter,\n\nI believe Gavin plans to write a blog post about the hard fork process, but\nI'd like to debate this with you now, if only to give him material to work\nwith :)\n\nYour points look to me like the hard/soft fork debate in different clothes.\n\nFor example, we all agree that the rules of Bitcoin *can* be changed, and\nhave been before (e.g. P2SH), with software upgrades.\n\nWhen such a fork happens, any user who does not upgrade their node isn't\nfully verifying the block chain anymore. Their software might *think* it\nis, but it's running NOPs that don't mean NOP to other nodes. So there is a\ndivergence in the consensus, it's merely been done in such a way that the\nnode won't stop and print \"hard fork detected\" to the logs. It'll happily\naccept a block that violates the new rules, then wait to be corrected by\nminers.\n\nSo with any fork, hard or soft, there is risk to those who don't upgrade.\nThey may accept a block, or even two blocks, that they believe are valid\naccording to their old rule set, but which other miners would reject. The\neffect on double spending is much the same.\n\nNow let's talk philosophy.\n\n* Philosophy: Bitcoin is not a democracy.\n>\n\nThis appears to be a key point of dispute. Bitcoin is a democracy, though\nthe analogy is not perfect. You can certainly believe whatever you like\nabout the true state of the ledger, but rubber hits the road the moment you\ngo and trade with other people.\n\nIf 90% of the people you trade with believe a coin exists, and you don't,\nyou're gonna discover you keep getting paid with that coin and its\ndescendents. You may hate it, you may feel your rights are being violated,\nyou may refuse to trade with those people but it will keep happening.\n\nMoney is about trade, and trade inherently involves the decisions of other\npeople. No man is an island.\n\nWith Bitcoin we have a great way to quickly find out what other people\nbelieve about the ledger. If the vast majority of people are on ledger A\nand you're on ledger B, then you've got a strong incentive to come into\nline with the majority in order to keep trading.\n\n\n> Changing the rules should be possible if there is wide consensus, but\n> nobody should feel forced to change their code against their will.\n>\n\nNobody, not even after a hard fork, is *forced* to change their code\nagainst their will. It may be something that *other people require* as part\nof trading with them though. Whether one considers this \"forced\" or not I\nguess can be argued either way. Are you \"forced\" to buy oranges from the\nsingle orange seller in town if the other goes bankrupt, or could you just\navoid oranges? Where does economic freedom begin and end?\n\n\n> * Governance: being able to push for a controversial change to the system\n> sets an incredibly dangerous precedent about who is in charge of the\n> system's rules.\n>\n\nI think it's surely the opposite - *not* being able to push for\ncontroversial changes sets an incredibly dangerous precedent. Namely,\nwhoever gets to decide that a change is controversial gets to veto anything\nthey like!\n\n\n> I can promise you that I will say anything in mail to this list if someone\n> points a gun at me\n>\n\nIndeed, me too! But it's worse than that: what if someone sockpuppets a\ndiscussion to make it look like a change does or does not have consensus?\n\nOne reason I keep banging on about *process* and how Wladimir needs to be\nThe Decider is that the current attempt at \"process\" is so vague, not only\nis it unexplainable, but it's wide open to manipulation.\n\nGood thing we have a way to resolve this problem:  the block chain. Now it\ndoesn't matter if someone points a gun at you or me. We can object to\nwhatever we like and that wouldn't bring Bitcoin to a halt, thus removing\nthe incentive to try and pressure individuals.\n\nBut if we don't have that ability to vote through choice of software and\nrulesets, then us poor developers really are in charge and that's not a\nplace any of us should want to go. There must be a mechanism for people to\ndisagree with the consensus, even in major, controversial ways, and that\nmechanism must have real force to it.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/9f95c39c/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T14:05:45",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn Thu, Jun 18, 2015 at 03:49:06PM +0200, Mike Hearn wrote:\n> One reason I keep banging on about *process* and how Wladimir needs to be\n> The Decider is that the current attempt at \"process\" is so vague, not only\n> is it unexplainable, but it's wide open to manipulation.\n\nIt looks as if you entirely missed my point. I'm The Decider for *code issues* regarding Bitcoin Core. Consensus issues should not be considered part of that, they span multiple implementations.\n\nSo I'm *not* the decider for anything that concerns the behavior of the global consensus, and I cannot be, as I have explained in the previous post, and as Sipa explained in his.\n\nSpeaking of process, let me remind you that there is a BIP processs: https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki \n\nIf you think it's not clear enough, which may explain why you did not even attempt to follow it for your block size increase, feel free to make improvements.\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVgtAOAAoJEHSBCwEjRsmmLPUH/1ug5pvLz6ptIhvuROclV7Jh\nz0Szk5FOqfg4ejT3nYV5LRV5WNHUGDdFnHZJRFsKYH9B0LFgOlnkc488Qg6hBb+1\nrf5zEF/D2X4MhPIx6GqI++gvhDzdBH2t9yxbU7LVZALo7+wtW+ms5eHHFs8WrU0z\nm7NgiZRen4cpQUiBWHlt0PojmXBVZQNU0CD6ErcOpQXhN8J0sb0l0DuFswQgUqxk\nrrNe3LvKp89xT0kDxyzQts/CeIG/8kQYLwIJ1QQDXvYayj2aHHYMkSEWfDlew3IC\nzQkFgHCTGihGHPFeow+dnuW1DI1l92yPYNDLbxivSam3X+qCAGzUTOWTFE+iprk=\n=tE4K\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-18T14:16:51",
                "message_text_only": ">\n> If you think it's not clear enough, which may explain why you did not even\n> attempt to follow it for your block size increase, feel free to make\n> improvements.\n>\n\nAs the outcome of a block size BIP would be a code change to Bitcoin Core,\nI cannot make improvements, only ask for them. Which is what I'm doing.\n\nI agree that BIP 1 is not clear enough. Gavin is writing a BIP to accompany\nhis patch, because BIPs are best when they describe working code, and BIP 1\n*is* at least clear about that. Otherwise it can turn out during\nimplementation that something was different to what was anticipated. I'm\nsure you agree with this.\n\nSo a BIP is coming. However, BIP 1 also says this:\n\nVetting an idea publicly before going as far as writing a BIP is meant to\n> save the potential author time\n\n\nand\n\nBIP authors are responsible for collecting community feedback on a BIP\n> before submitting it for review\n\n\nOK. Gavin has been vetting the idea publicly and collecting community\nfeedback. Note that the entire Bitcoin community is not on this list, so he\npublished a series of blog posts to get wider feedback, and then was\ncriticised for not doing it all here instead.\n\nBut anyway - so far, so good.  The procedure is being followed.\n\nWhat happens once a BIP is written? The process says:\n\nFor a BIP to be accepted it must meet certain minimum criteria. It must be\n> a clear and complete description of the proposed enhancement. The\n> enhancement must represent a net improvement. The proposed implementation,\n> if applicable, must be solid and must not complicate the protocol unduly.\n\n\n\n>  Once a BIP has been accepted, the reference implementation must be\n> completed.\n\n\nThis is where the problem starts.\n\nThe BIP process you refer to *does not state how acceptance will happen*.\nIt merely sets out a few minimum requirements like making some sort of\nsense, having code. It's also full of extremely vague descriptions like\n\"must represent a net improvement\". Improvement according to who? That's\nleft unexplained.\n\nAnd then it says what happens once a BIP is accepted.\n\nThe middle bit is missing. When there is disagreement over a consensus BIP,\nhow are decisions made?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/c0cc0fed/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-18T14:53:22",
                "message_text_only": ">So I'm *not* the decider for anything that concerns the behavior of \nthe global consensus, and I cannot be, as I have explained in the \nprevious post.\n\nThe person who decides if a pull request is accepted is a decider and \nsignificantly affects the behavior of the global consensus.  The only \noption for someone who doesn't agree is to hard fork.  There is no way \naround that and you should just accept that fact and move on.\n\nRuss"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-18T14:56:33",
                "message_text_only": "On Thu, Jun 18, 2015 at 10:53 AM, Milly Bitcoin <milly at bitcoins.info> wrote:\n\n>  >So I'm *not* the decider for anything that concerns the behavior of\n> the global consensus, and I cannot be, as I have explained in the\n> previous post.\n>\n> The person who decides if a pull request is accepted is a decider and\n> significantly affects the behavior of the global consensus.  The only\n> option for someone who doesn't agree is to hard fork.  There is no way\n> around that and you should just accept that fact and move on.\n>\n\nImpacts, yes, decider, no.  Multiple ACKs are required from developers who\nwill not act if the community will disagree with the change.\n\nThe users ultimately choose by deciding which software to download, and\nthat dictates the range of choices available.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/71ad12e5/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-18T15:13:41",
                "message_text_only": ">Impacts, yes, decider, no.  Multiple ACKs are required from developers \nwho will not act if the community will disagree with the change.\n\n >The users ultimately choose by deciding which software to download, \nand that dictates the range of choices available.\n\nThat is what I mean by a cultish reply.  Just saying the users \nultimately decide is not an adequate explanation of the situation. You \nare talking hard fork if someone doesn't like it.  If 10% of the users \ndon't like there is nothing they can do unless they want to operate an \naltcoin.  You are not going to resolve anything by repeating these types \nof replies that really have no applicability in the real world.  The \nperson who approves the pull request (no matter what the process is \nbeforehand) is effectively the decider.\n\nAlso, as pointed out, there is no real process in place.   Making \noffhand statements that \"multiple ACKs are required\" without describing \na real process just sends people down a rat hole like this block size \ndebate.  Providing these (non) answers instead of developing a real \nprocess is why there is so much contention now.\n\nRuss"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-18T14:53:24",
                "message_text_only": "On Thu, Jun 18, 2015 at 8:29 AM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> On Thu, Jun 18, 2015 at 1:14 PM, Wladimir J. van der Laan <\n> laanwj at gmail.com> wrote:\n>\n>> Like in any open source project there is lots of decision making ability\n>> for code changes. I'd say look at the changelog for e.g. 0.11\n>> https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log,\n>> or follow pull requests for a while, to see how many decisions about\n>> changes are made from day to day. No, I'm not sitting on my hands, and so\n>> is none of the other contributors that you'd like to get rid of.\n>>\n>\n> The analogy goes further even. Even though I disagree with some of the\n> changes you're making, I respect Mike's (and anyone's) right to make a fork\n> of Bitcoin Core. That's how open source works: if people disagree with\n> changes made or not made, they can maintain their own version. However:\n>\n>\n>> Consensus changes are *much* more difficult, on the other hand. Even\n>> relatively straightforward softforks come with a long discussion process\n>> (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone\n>> needs to upgrade their software!), and simply not possible if almost the\n>> entire technical community disagrees with you.\n>>\n>\n> Consensus changes - in particular hardforks - are not about making a\n> change to the software. You are effectively asking users of the system to\n> migrate to a new system. Perhaps one which is a philosophical successor to\n> the old one, but a different system, with new rules that are incompatible\n> with the old one.\n>\n\nIndeed.  I think Mike is glossing over this major facet.\n\nConsensus changes - worded another way - change Bitcoin's Constitution -\nThe Rules that everyone in the system is -forced- to follow, or be ignored\nby the system.\n\nChanging bitcoin's rules IS IN NO WAY like Wikipedia or other open source\nsoftware.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/4eec5ab0/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-18T16:07:44",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-18 14:53, Jeff Garzik wrote:\n> Consensus changes - worded another way - change Bitcoin's Constitution \n> -\n> The Rules that everyone in the system is -forced- to follow, or be \n> ignored\n> by the system.\n\nForce is not a helpful or accurate way to describe the situation.\n\nThe purpose of Bitcoin to let people trade with each other, and trade \nrequires mutual agreement.\n\nIf some people choose not to trade under certain terms, they aren't \n\"forcing\" anybody to do anything. They are simply refraining from \nproposed interactions. Not granting them the right to do this would \nactually be forcing them to engage in interactions against their will.\n\nIt's an unavoidable reality that Bitcoin's usefulness is related to the \nsize (really: economic output) of the group of people who can be \nconvinced that it's in their best interest to agree on a common trade \nprotocol.\n\nConversations that feature untrue claims about someone forcing someone \nelse to do something is the opposite of a viable strategy for growing \nthe size of that group.\n\nArguments about who violated what Bitcoin Core internal governance \nprocedures are not interesting to most Bitcoin users, who generally \ndon't know or care who has commit access to the repository.\n\nGetting angry at Gavin and Mike for providing Bitcoin users with an \nalternative which they can freely choose or reject is not helpful in \npersuading users to stay with Bitcoin Core. Making the case why the \nchanges in Bitcoin XT are not beneficial to Bitcoin users could be.\n\nFor better or for worse, Bitcoin coin users are going to run the \nsoftware they perceive to be in their best interests.  Nobody can stop \nthem from making that choice and any effort directed at that end is \nwasted.\n\nIt's more productive to expend effort making sure the current and future \nBitcoin users are as informed as possible about the long term and short \nterm consequences of their choices.\n\nCircling back to the original quote:\n\nOn 2015-06-18 14:53, Jeff Garzik wrote:\n> Consensus changes - worded another way - change Bitcoin's Constitution \n> -\n> The Rules that everyone in the system is -forced- to follow, or be \n> ignored\n> by the system.\n\nBitcoin does not and can not function as a set of rules imposed by some \npeople onto other people. Bitcoin is a negotiation about the best way \nfor money to function in the future. The only way we get people to use \nBitcoin is to convince them that the benefits they gain from agreeing to \nits protocol outweigh the downsides they encounter.\n\nI'm confident that this case can be made successfully but a prerequisite \nto a successful negotiation is recognizing that it is, in fact, a \nnegotiation, and that the other parties have full agency and the right \nto walk away if mutual agreement is not reached.\n\nMy suggestion is to spend less time talking about procedural violations \nand more time convincing Bitcoin users that Bitcoin Core is the best \nclient for them to use, especially if the process of convincing them \ninvolves making improvements which the users are asking for (or making a \nvery compelling case about why the users should reconsider).\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVguyLAAoJECpf2nDq2eYjTPgP/A16QGWSWkh50OhSjHx7hdY5\nv0ZqNvfKSm6a94o22yTQF8VZm7NEJJcNY0Vvu1ro95v27Bm37VodGGOXh4ao9gYQ\nETdzX35OLWUua1e9kfEwgo2Uu2l9AdALOLK5IHyLZdtxJQwUhcdeIhaSMzlZqgEk\nn+gbAZXV7JdnK+oejh5s8zgfOY3MqhZC3TQBVWHWx0K0CE75rm0j4ZShYL2eKOua\nCmWkcEkfeugrnQQv/BB+oe1TAJoHY4bZAr+amYLZMiC8wRcGGeVBOOFykLNd4rSV\nDE+iiGHmgi/wrZjy/xT5kflX55GE8NNVjM2MMNOyD+gWbBn5INahya+DkDWupeQB\niy71NQQVnB/5U5Yhm/oVUax+Cjj/7001cf1q2rXPcjE+4ntw5ad9oCuRW3kSUpzq\nC0LqEN2lbagrmk/xHSv/GQl+iWulD1mXJl63y3LdXYWno67eVYqzvRK0UB7ZSVww\n3P7p8h2yuvtPtAUDyoOPn7Ghyd1U1lJWGsyffRzd2hWhEYs44cfAv6S2QWIBWbm5\nj8C2ao7m6j2mirRZem+bGrN8idR/fOUIjnwqQmNIObsviMrvgXlHvORjsBcdHoKO\n9Ir8CvqGWftIG5lLCJvjsnP8E3MRToo6pOsD/Ii9223Pn6DxsMvXF+IkZzUJfWDR\nW+t/BYV6XtsAUKI+dAly\n=3KeB\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-18T16:28:43",
                "message_text_only": "On Thu, Jun 18, 2015 at 9:07 AM, <justusranvier at riseup.net> wrote:\n\n> On 2015-06-18 14:53, Jeff Garzik wrote:\n>\n>> Consensus changes - worded another way - change Bitcoin's Constitution -\n>> The Rules that everyone in the system is -forced- to follow, or be ignored\n>> by the system.\n>>\n>\n> Bitcoin does not and can not function as a set of rules imposed by some\n> people onto other people.\n\n\nThis is an engineering list.  The quote precisely describes how the bitcoin\nconsensus system functions.\n\nUsers' choice is largely binary:  Follow the rules, or bitcoin software\nignores you.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/1e4ba4be/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-18T17:04:54",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-18 16:28, Jeff Garzik wrote:\n> This is an engineering list.  The quote precisely describes how the \n> bitcoin\n> consensus system functions.\n> \n> Users' choice is largely binary:  Follow the rules, or bitcoin software\n> ignores you.\n\n\nSoftware engineers should understand that they have a binary choice: \nproduce the software that your customers want, or the world will ignore \nyour software.\n\nThere is *no inherent value* to Bitcoin's software rules. The only value \nthat is exists is that produced by the individuals who voluntarily \nchoose to run the software.\n\nFailing to account for all design requirements is bad engineering. \nNobody cares about the design features of a bridge to nowhere.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVgvoDAAoJECpf2nDq2eYj0h4P/0YaTsS963qpb63zvB6WlIPS\n2lhCJ9FtAd3II5Et+5c/cisfJ9YI2OnM0y8nQpyB9NEOeueN1L1sLFcayE5aHASd\nEgF7F81AhQD2iSIVwQNs2qAzrZNC2/Nx+nBzBDcrgZ6gRiPpQdsNLy2p0OuZdOgX\nyG4xl6tKADB2kNi6tVPtZqUC300uQHvggtm+pexYilT0ojEbeVHCoDV40MNDZC2h\n1kcdTnGU2SHJJqeZN2vChJCOMfhmK4JwKgoz7JRXe/GHkUUJKriE6Kb7SVczii9e\n9qfcosbnR3gjATMoHFYuJX/nsUx52Q1LM9eQgvE8Ml+6Mim5bj2KCJFh7YISxSq9\nFhDujfZFCRRQLPJCSkEUePxU/LS7lmoTZXYl3Zz1j9zbq4ncpRHpIFy9QX6iIqK6\nDursnge9ELQwB+H6HoosWRzxOZyo+oiGj17OngJvZYcvzrc2wjHbpZfVqSkmZepU\nSfJZ64O7yjjXjITwhOc4XF2drzvhsjTsHH5BIwdbCn82SoCkJIwXraj7sxIundli\nLUJBPiAE0csdmsvW/2kkxLsd9JwTw9lJ9Pf8fiqH3itgrkPkO5mf10DPPnay1SNk\nWnm1bAJ05WnKXSo0m0SzaFgZkdfFuhWR4fieSzhLpa+s/HHj18NZvJCmCBR6ic9G\n0A+51wwSZnAdMIw7lwIb\n=r4Co\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Alex Morcos",
                "date": "2015-06-18T17:42:10",
                "message_text_only": "Let me take a pass at explaining how I see this.\n\n1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is\nthe decider but he works under a process that is well understood by\ndevelopers on the project in which he takes under reasonable consideration\nother technical opinions and prefers to have clear agreement among them.\n\n2) Changes to the consensus rules: As others have said, this isn't anyone's\ndecision for anyone else.  It's up to each individual user as to what code\nthey run and what rules they enforce.  So then why is everyone so up in\narms about what Mike and Gavin are proposing if everyone is free to decide\nfor themselves?  I believe that each individual user should adhere to the\nprinciple that there should be no changes to the consensus rules unless\nthere is near complete agreement among the entire community, users,\ndevelopers, businesses miners etc.  It is not necessary to define complete\nagreement exactly because every individual person decides for themselves.\nI believe that this is what gives Bitcoin, or really any money, its value\nand what makes it work, that we all agree on exactly what it is.  So I\nbelieve that it is misleading and bad for Bitcoin to tell users and\nbusiness that you can just choose without concern for everyone else which\ncode you'll run and we'll see which one wins out.  No.  You should run the\nold consensus rules (on any codebase you want) until you believe that\npretty much everyone has consented to a change in the rules.  It is your\nchoice, but I think a lot of people that have spent time thinking about the\nphilosophy of consensus systems believe that when the users of the system\nhave this principle in mind, it's what will make the system work best.\n\n3) Code changes to Core that do change consensus: I think that Wladimir,\nall the other committers besides Gavin, and almost all of the other\ndevelopers on Core would defer to #2 above and wait for its outcome to be\nclear before considering such a code change.\n\nI'm sure my description of point 2 is not the most eloquent or clear, but\nmaybe someone else can try to elucidate this principle if they've grasped\nwhat I'm trying to say.\n\n\n\n\n\nOn Thu, Jun 18, 2015 at 1:04 PM, <justusranvier at riseup.net> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA512\n>\n> On 2015-06-18 16:28, Jeff Garzik wrote:\n> > This is an engineering list.  The quote precisely describes how the\n> > bitcoin\n> > consensus system functions.\n> >\n> > Users' choice is largely binary:  Follow the rules, or bitcoin software\n> > ignores you.\n>\n>\n> Software engineers should understand that they have a binary choice:\n> produce the software that your customers want, or the world will ignore\n> your software.\n>\n> There is *no inherent value* to Bitcoin's software rules. The only value\n> that is exists is that produced by the individuals who voluntarily\n> choose to run the software.\n>\n> Failing to account for all design requirements is bad engineering.\n> Nobody cares about the design features of a bridge to nowhere.\n>\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v2\n>\n> iQIcBAEBCgAGBQJVgvoDAAoJECpf2nDq2eYj0h4P/0YaTsS963qpb63zvB6WlIPS\n> 2lhCJ9FtAd3II5Et+5c/cisfJ9YI2OnM0y8nQpyB9NEOeueN1L1sLFcayE5aHASd\n> EgF7F81AhQD2iSIVwQNs2qAzrZNC2/Nx+nBzBDcrgZ6gRiPpQdsNLy2p0OuZdOgX\n> yG4xl6tKADB2kNi6tVPtZqUC300uQHvggtm+pexYilT0ojEbeVHCoDV40MNDZC2h\n> 1kcdTnGU2SHJJqeZN2vChJCOMfhmK4JwKgoz7JRXe/GHkUUJKriE6Kb7SVczii9e\n> 9qfcosbnR3gjATMoHFYuJX/nsUx52Q1LM9eQgvE8Ml+6Mim5bj2KCJFh7YISxSq9\n> FhDujfZFCRRQLPJCSkEUePxU/LS7lmoTZXYl3Zz1j9zbq4ncpRHpIFy9QX6iIqK6\n> Dursnge9ELQwB+H6HoosWRzxOZyo+oiGj17OngJvZYcvzrc2wjHbpZfVqSkmZepU\n> SfJZ64O7yjjXjITwhOc4XF2drzvhsjTsHH5BIwdbCn82SoCkJIwXraj7sxIundli\n> LUJBPiAE0csdmsvW/2kkxLsd9JwTw9lJ9Pf8fiqH3itgrkPkO5mf10DPPnay1SNk\n> Wnm1bAJ05WnKXSo0m0SzaFgZkdfFuhWR4fieSzhLpa+s/HHj18NZvJCmCBR6ic9G\n> 0A+51wwSZnAdMIw7lwIb\n> =r4Co\n> -----END PGP SIGNATURE-----\n>\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/bb6ae32f/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-18T18:01:01",
                "message_text_only": ">2) Changes to the consensus rules: As others have said, this isn't \nanyone's decision for anyone else.  It's up to each individual user as \nto what code they run and what rules they enforce.  So then why is \neveryone so up in arms about what Mike and Gavin are proposing if \neveryone is free to decide for themselves?\n\nBecause the notion that people are free to decide for themselves is just \na rough approximation of the real world situation.  If your software \ndoes not agree with merchants and exchanges you can't pay your bills and \nif Bitcoin splits the exchange rate could plummet and damage the \necosystem.   People are free to decide within the constraints of the \nBitcoin system.\n\nRuss"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-18T18:23:33",
                "message_text_only": "On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:\n\n> Let me take a pass at explaining how I see this.\n>\n> 1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is\n> the decider but he works under a process that is well understood by\n> developers on the project in which he takes under reasonable consideration\n> other technical opinions and prefers to have clear agreement among them.\n>\n\nYes.\n\n2) Changes to the consensus rules: As others have said, this isn't anyone's\n> decision for anyone else.\n>\n\nYes.\n\n\n> It's up to each individual user as to what code they run and what rules\n> they enforce.  So then why is everyone so up in arms about what Mike and\n> Gavin are proposing if everyone is free to decide for themselves?  I\n> believe that each individual user should adhere to the principle that there\n> should be no changes to the consensus rules unless there is near complete\n> agreement among the entire community, users, developers, businesses miners\n> etc. It is not necessary to define complete agreement exactly because every\n> individual person decides for themselves.  I believe that this is what\n> gives Bitcoin, or really any money, its value and what makes it work, that\n> we all agree on exactly what it is.  So I believe that it is misleading and\n> bad for Bitcoin to tell users and business that you can just choose without\n> concern for everyone else which code you'll run and we'll see which one\n> wins out.  No.  You should run the old consensus rules (on any codebase you\n> want) until you believe that pretty much everyone has consented to a change\n> in the rules.  It is your choice, but I think a lot of people that have\n> spent time thinking about the philosophy of consensus systems believe that\n> when the users of the system have this principle in mind, it's what will\n> make the system work best.\n>\n\nI don't think I agree with \"pretty much everybody\", because status-quo bias\nis a very powerful thing. Any change that disrupts the way they've been\ndoing things will generate significant resistance -- there will be 10 or\n20% of any population that will take a position of \"too busy to think about\nthis, everything seems to be working great, I don't like change, NO to any\nchange.\"\n\nFor example, I think some of the resistance for bigger blocks is coming\nfrom contributors who are worried they, personally, won't be able to keep\nup with a bigger blockchain. They might not be able to run full nodes from\ntheir home network connections (or might not be able to run a full node AND\nstream Game of Thrones), on their old raspberry pi machines.\n\nThe criteria for me is \"clear super-majority of the people and businesses\nwho are using Bitcoin the most,\" and I think that criteria is met.\n\n\n\n> 3) Code changes to Core that do change consensus: I think that Wladimir,\n> all the other committers besides Gavin, and almost all of the other\n> developers on Core would defer to #2 above and wait for its outcome to be\n> clear before considering such a code change.\n>\n\nYes, that's the way it has mostly been working. But even before stepping\ndown as Lead I was starting to wonder if there are ANY successful open\nsource projects that didn't have either a Benevolent Dictator or some clear\nvoting process to resolve disputes that cannot be settled with \"rough\nconsensus.\"\n\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/cadd74c6/attachment.html>"
            },
            {
                "author": "Alex Morcos",
                "date": "2015-06-18T18:44:14",
                "message_text_only": "Not that I know how to do this, but would you be willing to attempt some\nother method of measuring just how much of a \"super-majority\" we have\nbefore deploying code?  Maybe that information would be helpful for\neveryone.  Obviously such a poll couldn't be perfect, but maybe better than\nthe information we have now.\n\nA) I don't believe we should consider changing the 1 MB limit now\nB) I conceptually believe in increasing block size, but would like to\nfollow a more conservative process and wait to see if a stronger technical\nconsensus on a plan to do so can develop.\nC) I'd like to go along with Gavin and Mike's 8MB proposal (maybe we wait\ntil this is fully specified, but again not deployed)\n\nPerhaps there can even be 4 polls:\nMiners can vote in coinbases\nKnown corporate entities can announce their vote\nDoes the Bitcoin Foundation infrastructure still exist to represent some\nauthenticated (I think) set of individuals\nA reddit poll\n\nI don't even know if I think this is a good idea, but just trying to find a\nway to move forward where more of us are on the same page.\n\n\n\n\n\n\nOn Thu, Jun 18, 2015 at 2:23 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:\n>\n>> Let me take a pass at explaining how I see this.\n>>\n>> 1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is\n>> the decider but he works under a process that is well understood by\n>> developers on the project in which he takes under reasonable consideration\n>> other technical opinions and prefers to have clear agreement among them.\n>>\n>\n> Yes.\n>\n> 2) Changes to the consensus rules: As others have said, this isn't\n>> anyone's decision for anyone else.\n>>\n>\n> Yes.\n>\n>\n>> It's up to each individual user as to what code they run and what rules\n>> they enforce.  So then why is everyone so up in arms about what Mike and\n>> Gavin are proposing if everyone is free to decide for themselves?  I\n>> believe that each individual user should adhere to the principle that there\n>> should be no changes to the consensus rules unless there is near complete\n>> agreement among the entire community, users, developers, businesses miners\n>> etc. It is not necessary to define complete agreement exactly because every\n>> individual person decides for themselves.  I believe that this is what\n>> gives Bitcoin, or really any money, its value and what makes it work, that\n>> we all agree on exactly what it is.  So I believe that it is misleading and\n>> bad for Bitcoin to tell users and business that you can just choose without\n>> concern for everyone else which code you'll run and we'll see which one\n>> wins out.  No.  You should run the old consensus rules (on any codebase you\n>> want) until you believe that pretty much everyone has consented to a change\n>> in the rules.  It is your choice, but I think a lot of people that have\n>> spent time thinking about the philosophy of consensus systems believe that\n>> when the users of the system have this principle in mind, it's what will\n>> make the system work best.\n>>\n>\n> I don't think I agree with \"pretty much everybody\", because status-quo\n> bias is a very powerful thing. Any change that disrupts the way they've\n> been doing things will generate significant resistance -- there will be 10\n> or 20% of any population that will take a position of \"too busy to think\n> about this, everything seems to be working great, I don't like change, NO\n> to any change.\"\n>\n> For example, I think some of the resistance for bigger blocks is coming\n> from contributors who are worried they, personally, won't be able to keep\n> up with a bigger blockchain. They might not be able to run full nodes from\n> their home network connections (or might not be able to run a full node AND\n> stream Game of Thrones), on their old raspberry pi machines.\n>\n> The criteria for me is \"clear super-majority of the people and businesses\n> who are using Bitcoin the most,\" and I think that criteria is met.\n>\n>\n>\n>> 3) Code changes to Core that do change consensus: I think that Wladimir,\n>> all the other committers besides Gavin, and almost all of the other\n>> developers on Core would defer to #2 above and wait for its outcome to be\n>> clear before considering such a code change.\n>>\n>\n> Yes, that's the way it has mostly been working. But even before stepping\n> down as Lead I was starting to wonder if there are ANY successful open\n> source projects that didn't have either a Benevolent Dictator or some clear\n> voting process to resolve disputes that cannot be settled with \"rough\n> consensus.\"\n>\n>\n> --\n> --\n> Gavin Andresen\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/a6d09f1f/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-18T18:49:35",
                "message_text_only": "On Thu, Jun 18, 2015 at 8:23 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:\n>>\n>> Let me take a pass at explaining how I see this.\n>>\n>> 1) Code changes to Bitcoin Core that don't change consensus:  Wladimir is\n>> the decider but he works under a process that is well understood by\n>> developers on the project in which he takes under reasonable consideration\n>> other technical opinions and prefers to have clear agreement among them.\n>\n>\n> Yes.\n>\n>> 2) Changes to the consensus rules: As others have said, this isn't\n>> anyone's decision for anyone else.\n>\n>\n> Yes.\n>\n> [...]\n>\n> I don't think I agree with \"pretty much everybody\", because status-quo bias\n> is a very powerful thing. Any change that disrupts the way they've been\n> doing things will generate significant resistance -- there will be 10 or 20%\n> of any population that will take a position of \"too busy to think about\n> this, everything seems to be working great, I don't like change, NO to any\n> change.\"\n\nBut according to Alex's explanation (which I think is very good\nleaving asides some cases like change of the pow hashing function, for\nexample) there's no individual that can force or veto a change. It is\nthe decision of each individual user and their own \"pretty much\neverybody\" may vary. But this \"pretty much everybody\" is what Mark\nreferred to with the \"I know it when I see it.\"\n\n> The criteria for me is \"clear super-majority of the people and businesses\n> who are using Bitcoin the most,\" and I think that criteria is met.\n\nIf you recommend users to apply changes when this criterion is met but\nyou know there's still many users who don't agree with the change,\nthen you're acting irresponsibly by promoting a chaotic consensus fork\nwhere coins can be spent in both chains at once.\nWell...unless you're promoting it as an altcoin that simply happens to\ndistribute part of the initial monetary based to bitcoin holders at\nblock X and whose genesis block is equal to bitcoin's genesis block at\nblock X. I guess in that case you wouldn't necessarily be\nirresponsible.\n\"Miner's vote\" is irrelevant here since it cannot tell you anything\nabout users adoption (besides miner's adoption of course).\n\n>> 3) Code changes to Core that do change consensus: I think that Wladimir,\n>> all the other committers besides Gavin, and almost all of the other\n>> developers on Core would defer to #2 above and wait for its outcome to be\n>> clear before considering such a code change.\n>\n>\n> Yes, that's the way it has mostly been working. But even before stepping\n> down as Lead I was starting to wonder if there are ANY successful open\n> source projects that didn't have either a Benevolent Dictator or some clear\n> voting process to resolve disputes that cannot be settled with \"rough\n> consensus.\"\n\nBut this is only relevant for the point 1. Software projects can have\ndictators, forks and everything else other free software projects\nhave. But consensus-based p2p blockchains cannot change their rules in\nthe same way, otherwise they're centralized.\n\nTHERE CANNOT BE A VOTING PROCESS FOR CONSENSUS CHANGES.\nIf anybody can vote, hod do you prevent the sibyls from outvoting everyone?\nIf not everybody can vote, how is the voters' list determined without\ncentralizing the system?\nIf we had a technical solution to this problem we wouldn't need proof\nof work in the first place!!"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-18T19:31:55",
                "message_text_only": "I've got a few thoughts on this, but they don't really attach well to a \nsingle message, so starting a fresh message in the same thread. I'm \ngoing to try being brief.\n\nThere's a lot of talk about not forking. Sorry, but they're going to \nhappen, planned and unplanned. Even if no intentional forks occur from \nhere on, I hope it's obvious that there will be further accidental forks \n(at least unless and until someone prepares a formal proof of a Bitcoin \nwallet). We need to be more comfortable with that, and plan ahead. \nEducation is key here, a lot of people don't understand what a fork is, \nhow it will affect them, how to recognise a fork or how to recover. I'll \ndig out what materials I've written already and try making them more \nwidely available, as a start.\n\nOn whether code forks are a solution to disagreements - I'm not quite \nsure what people expect will happen where a group believes there is an \nexistential threat to Bitcoin and they cannot get Bitcoin Core updated. \nI may disagree with Mike & Gavin on timescale, but I do believe there's \na likelihood inaction will kill Bitcoin, and in that context I see the \nrational choice as taking the perceived smaller risk of a fork killing \nBitcoin. BIP100 appears to be making progress, however, right now I \nthink the best option is pursuing it towards something that can be \nagreed on by all. I would also happily go with an 8MB block size even if \njust to buy us (IMHO a lot) more time.\n\nLastly, there seems to be a number of people who believe inaction \nthrough apathy is fine. I respect those who form considered opinions and \ntell me why they believe 1MB is fine, but I do ask that people either \nput the effort in to help make decisions, or delegate to someone else. \nDecentralised does not mean there's no decision making, it means we're \nall decision makers, and frankly I think there's effectively negligence \nin that capacity right now. I'd also point out this ongoing discussion \nis a huge time sink to a number of people who could be making much more \nuseful contributions, and that again going in circles endlessly \ndiscussing in the name of decentralisation isn't positive.\n\nI have failed at being brief, apologies.\n\nRoss"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-18T21:42:51",
                "message_text_only": "On Thursday, 18 June 2015, at 8:31 pm, Ross Nicoll wrote:\n> I may disagree with Mike & Gavin on timescale, but I do believe there's \n> a likelihood inaction will kill Bitcoin\n\nAn honest question: who is proposing inaction? I haven't seen anyone in this whole, agonizing debate arguing that 1MB blocks are adequate. The debate has been about *how* to increase the block-size limit and whether to take action ASAP (at the risk of fracturing Bitcoin) or to delay action for further debate (at the risk of overloading Bitcoin). Even those who are arguing for further debate are not arguing for *inaction*."
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-18T21:49:51",
                "message_text_only": "Matt, I for one do not think that the block size limit should be raised at\nthis time. Matt Corallo also started the public conversation over this\nissue on the mailing list by stating that he was not in favor of acting now\nto raise the block size limit. I find it a reasonable position to take that\neven if you feel the block size limit should be raised at some time in the\nfuture, there are reasons why now is not the best time to do it.\n\nOn Thu, Jun 18, 2015 at 2:42 PM, Matt Whitlock <bip at mattwhitlock.name>\nwrote:\n\n> On Thursday, 18 June 2015, at 8:31 pm, Ross Nicoll wrote:\n> > I may disagree with Mike & Gavin on timescale, but I do believe there's\n> > a likelihood inaction will kill Bitcoin\n>\n> An honest question: who is proposing inaction? I haven't seen anyone in\n> this whole, agonizing debate arguing that 1MB blocks are adequate. The\n> debate has been about *how* to increase the block-size limit and whether to\n> take action ASAP (at the risk of fracturing Bitcoin) or to delay action for\n> further debate (at the risk of overloading Bitcoin). Even those who are\n> arguing for further debate are not arguing for *inaction*.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/9989f38c/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-18T21:58:06",
                "message_text_only": "Is that a forward-looking position?  It does not seem so.\n\nThe whole point is getting out in front of the need, to prevent significant\nnegative impact to users when blocks are consistently full.\n\nTo do that, you need to (a) plan forward, in order to (b) set a hard fork\ndate in the future.\n\n\"We don't see a need today\" is therefore useless, because when you do reach\nX day when need is apparent, the best solution then becomes an immediate\nfork for which the network and markets are not prepared.\n\nFailing to resolve the block size issue soon will simply result in most\nbusinesses assuming relevant Bitcoin Core standards process is failing, and\nproceed with the Bitcoin-XT fork.\n\nAs I've said on IRC, the \"do nothing, for now\" position is untenable.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/9e4db165/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-18T22:33:00",
                "message_text_only": "On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n>\n> The whole point is getting out in front of the need, to prevent\n> significant negative impact to users when blocks are consistently full.\n>\n> To do that, you need to (a) plan forward, in order to (b) set a hard fork\n> date in the future.\n>\n\nOr alternatively, fix the reasons why users would have negative experiences\nwith full blocks, chiefly:\n\n  * Get safe forms of replace-by-fee and child-pays-for-parent finished and\nin 0.12.\n  * Develop cross-platform libraries for managing micropayment channels,\nand get wallet authors to adopt\n  * Use fidelity bonds, solvency proofs, and other tricks to minimize the\nrisk of already deployed off-chain solutions as an interim measure until:\n  * Deploy soft-fork changes for truly scalable solutions like Lightning\nNetwork.\n\nNot raising the block size limit does not mean doing nothing to solve the\nproblem.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b7699ac6/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-18T22:52:48",
                "message_text_only": "On Thu, Jun 18, 2015 at 3:33 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>\n>>\n>> The whole point is getting out in front of the need, to prevent\n>> significant negative impact to users when blocks are consistently full.\n>>\n>> To do that, you need to (a) plan forward, in order to (b) set a hard fork\n>> date in the future.\n>>\n>\n> Or alternatively, fix the reasons why users would have negative\n> experiences with full blocks, chiefly:\n>\n>   * Get safe forms of replace-by-fee and child-pays-for-parent finished\n> and in 0.12.\n>   * Develop cross-platform libraries for managing micropayment channels,\n> and get wallet authors to adopt\n>   * Use fidelity bonds, solvency proofs, and other tricks to minimize the\n> risk of already deployed off-chain solutions as an interim measure until:\n>   * Deploy soft-fork changes for truly scalable solutions like Lightning\n> Network.\n>\n> Not raising the block size limit does not mean doing nothing to solve the\n> problem.\n>\n\nThis is a long, unreasonable list of work.  None of this exists and it\nequates to \"upgrade all wallets and websites everywhere\"  It requires all\nexchanges, payment processors, merchants, etc. to  - basically everybody\nbut miners - to update.\n\nIt is a far, far larger amount of work to write, test and deploy than\nsimply increasing the block size limit.\n\nThink through roll-out of these ambitious suggestions, before suggesting as\nan alternative!\n\nNot a realistic alternative except in an alternate universe where (a)\ndeveloper work at all companies is cost free, plus (b) we can pause the\nbusiness universe while we wait for The Perfect Solution.\n\n\n\n\n\n\n\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/6a902283/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-18T23:25:57",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nRegarding the bit on \"getting out in front of the need, to prevent\nsignificant negative impacts to users\" I had suggested the following:\n\nOn 06/18/2015 03:52 PM, Jeff Garzik wrote:\n> On Thu, Jun 18, 2015 at 3:33 PM, Mark Friedenbach\n> <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:\n> \n> On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com \n> <mailto:jgarzik at bitpay.com>> wrote:\n> \n> \n> The whole point is getting out in front of the need, to prevent \n> significant negative impact to users when blocks are consistently\n> full.\n\n\nMy thoughts on that:\n\nPossible scope narrowing to one of the following concepts (but please,\nsomeone tell me if this \"scope narrowing\" is unwise, not timely, or if\nthere is some other factors that would make it just stupid right now\nbecause other things are in the works or whatever:\n\n~ Jeff Garzik, with respect to his BIP 100 (note Evan Mo, CEO of\nHuobi's mining project Digcoin, clarified that the big Chinese mining\npools consider further adjustments to the protocol beyond the\nsuggested 8 MB block size limit adjustment \u2014 such as the Bitcoin core\ndeveloper Jeff Garzik's BIP-100 draft \u2014 to be feasible)\n   ~ Adam Back, with a simplified soft-fork one-way peg\n   ~ Gavin Andresen, developing an 8 MB block size limit adjustment in\nthe context of Core (as an example) with one or more of the above\nauthors rather than focusing on XT. (This is a big assumption but,\nroll with it)\n\nAll of this assumes that developer(s) are willing to abandon\nintentionally contentious proposals such as the \"hard fork to XT w/ 20\nMB,\" remain within the context of Core and be reasonable.\n\nHere I am being aware of the fact that \"Pushing a hard fork in the\nface of such controversy is a folly, a danger to the network, and that\ndeserves to be said.\" - Wladimir J. van der Laan\nhttps://github.com/bitcoin/bitcoin.org/pull/894#issuecomment-112113917\n\n\n> \n> To do that, you need to (a) plan forward, in order to (b) set a \n> hard fork date in the future.\n> \n> \n> Or alternatively, fix the reasons why users would have negative \n> experiences with full blocks, chiefly:\n> \n> * Get safe forms of replace-by-fee and child-pays-for-parent \n> finished and in 0.12. * Develop cross-platform libraries for\n> managing micropayment channels, and get wallet authors to adopt *\n> Use fidelity bonds, solvency proofs, and other tricks to minimize\n> the risk of already deployed off-chain solutions as an interim\n> measure until: * Deploy soft-fork changes for truly scalable\n> solutions like Lightning Network.\n> \n> Not raising the block size limit does not mean doing nothing to \n> solve the problem.\n> \n> \n> This is a long, unreasonable list of work.  None of this exists and\n> it equates to \"upgrade all wallets and websites everywhere\"  It\n> requires all exchanges, payment processors, merchants, etc. to  -\n> basically everybody but miners - to update.\n> \n> It is a far, far larger amount of work to write, test and deploy\n> than simply increasing the block size limit.\n> \n> Think through roll-out of these ambitious suggestions, before\n> suggesting as an alternative!\n> \n> Not a realistic alternative except in an alternate universe where\n> (a) developer work at all companies is cost free, plus (b) we can\n> pause the business universe while we wait for The Perfect\n> Solution.\n> \n> \n> \n\n\nSomething else I wanted to point out here in this thread is the\nsubject of the problem of \"developers going off the deep end\" which is\nwhat started this thread:\n\nSuppose you have a developer with full commit access who happens to\nstart threatening to revoking the other developers' commit access on\nthe repository, or that person doesn't even threaten, one day it just\nhappens.\n\nWhat do you have then?  Peter Todd has stated that all one \"would\nachieve by that sabotage is setting a key-value pair in a centralised\nregistry.\"  But is that what we want?\n\nThe answer, obviously, is no.\n\nThis leads to other questions. What technical mechanisms exist to keep\ndevelopers from (in some dubious emotional or psycho state) to just\ngoing off the deep and doing exactly what has been described above, if\nthey have full commit access?  Is there a process whereby that can't\nactually happen unless another developer provides a signature (e.g. a\nmultisignature type of process)?  What keeps bitcoin safe from \"The\nHearn Threat?\"\n\nIf nothing does, then how would you change that?\n\nAnd go ahead and tell me if these are dumb questions and I should just\nbe quiet, but if they are, please do explain why they are such dumb\nquestions.\n\n> \n> \n> \n> \n> \n> \n> \n> -- Jeff Garzik Bitcoin core developer and open source evangelist \n> BitPay, Inc.      https://bitpay.com/\n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVg1OFAAoJEGxwq/inSG8COpAIAJrH9Uj9bcKr+UUR7ePV6/Yj\nMmNTY2VKAtiQhwHM+Mqk2VvQANs7/uRBdZjzGnw1NRcca/m8Q0yZUHQiP8avCUOE\n3MHqGviYjfeJdu1pcf+PO2pAImM5FCFdrfbbiWUt+ZoOKTxZjsLtF4RE+mc13AXJ\ndktvy6SFdvQUgEx8pdXEDpmaUSYUr7syFP4sgHZmyMlhvCsXyE/8dC3sZTzEpVnC\nxy1dyBmXHPW3W4FfBSblwwWgJWMcIcGJn8OLQKK5pni/iSVL6IMoRI/MLwOJdRr4\nlr83g9FR/qxMqAT9UIZtATnePlkkWPU1szvak/tU/49fGioyYOF4b4KPg/bHYSc=\n=hBcE\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-18T23:16:46",
                "message_text_only": "I'm struggling to illustrate how incredibly low 7 transactions per \nsecond is, not just for a payment network, but even just for a clearance \nnetwork (i.e. to balance transactions between institutions and/or \nchains). As an example, the Clearing House Interbank Payments System \n(CHIPS) is a US-only, inter-bank only clearance network, which handled \nabout 3.5 transactions per second (average) in 2014 \n(https://www.theclearinghouse.org/~/media/tch/pay%20co/chips/reports%20and%20guides/chips%20volume%20through%20may%202015.pdf?la=en).\n\nWhile it seems likely the US population of 300 million makes more \ntransactions individually than many other countries, and therefore we \ncan't simply multiply that by 20 to estimate what a global clearance \nnetwork might require, hopefully it's clear that if Bitcoin is to scale \nglobally, it needs substantially more transaction throughput even if \nmain chain transactions become something for banks and the super rich. I \ndon't know how much more, but I can't look at the 8MB reportedly backed \nby a number of mining pools and say it's clearly insufficient, at least.\n\nI should emphasise that I don't think we need to jump straight to 8MB \n(or otherwise), if a scaling protocol can be decided upon that would be \nideal, but we should be planning ahead while it's still relatively easy \nto make these changes.\n\nRoss\n\nOn 18/06/2015 23:33, Mark Friedenbach wrote:\n> On Thu, Jun 18, 2015 at 2:58 PM, Jeff Garzik <jgarzik at bitpay.com \n> <mailto:jgarzik at bitpay.com>> wrote:\n>\n>\n>     The whole point is getting out in front of the need, to prevent\n>     significant negative impact to users when blocks are consistently\n>     full.\n>\n>     To do that, you need to (a) plan forward, in order to (b) set a\n>     hard fork date in the future.\n>\n>\n> Or alternatively, fix the reasons why users would have negative \n> experiences with full blocks, chiefly:\n>\n>   * Get safe forms of replace-by-fee and child-pays-for-parent \n> finished and in 0.12.\n>   * Develop cross-platform libraries for managing micropayment \n> channels, and get wallet authors to adopt\n>   * Use fidelity bonds, solvency proofs, and other tricks to minimize \n> the risk of already deployed off-chain solutions as an interim measure \n> until:\n>   * Deploy soft-fork changes for truly scalable solutions like \n> Lightning Network.\n>\n> Not raising the block size limit does not mean doing nothing to solve \n> the problem.\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bdee73d5/attachment.html>"
            },
            {
                "author": "Chris Pacia",
                "date": "2015-06-19T00:57:58",
                "message_text_only": "On 06/18/2015 06:33 PM, Mark Friedenbach wrote:\n>\n>   * Get safe forms of replace-by-fee and child-pays-for-parent\n> finished and in 0.12.\n>   * Develop cross-platform libraries for managing micropayment\n> channels, and get wallet authors to adopt\n>   * Use fidelity bonds, solvency proofs, and other tricks to minimize\n> the risk of already deployed off-chain solutions as an interim measure\n> until:\n>   * Deploy soft-fork changes for truly scalable solutions like\n> Lightning Network.\n\nOne of my biggest concerns is that these solutions (lightning network in\nparticular) could end up being worse, in terms of decentralization, than\nwould be a bitcoin network using larger blocks. We don't exactly know\nwhat the economies of scale are for pay hubs and could very well end up\nwith far fewer hubs than nodes at any conceivable block size.\n\nOf course, it could also turn out to be fantastic, but it seems like an\nenormous gamble to basically force everyone in the ecosystem to\ncollectively spend millions of dollars upgrading to Lightning /and then/\nsee whether it's actually an improvement in terms of decentralization.\n\nTo me, a much more sane approach would be to allow people to voluntarily\nopt in to those other solutions after we've had an opportunity to\nexperiment with them and see how they actually function in practice, but\nthat can't happen if the network runs out of capacity first.\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/68c14c0e/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T05:59:38",
                "message_text_only": "I don\u2019t think the issue is between larger blocks on the one hand and things like lightning on the other - these two ideas are quite orthogonal.\n\nLarger blocks aren\u2019t really about addressing basic scalability concerns - for that we\u2019ll clearly need architectural and algorithmic improvements\u2026and will likely need to move to a model where it isn\u2019t necessary for everyone to validate everyone else\u2019s latte purchases. Larger blocks might, at best, keep the current system chugging along temporarily - although I\u2019m not sure that\u2019s necessarily such a great thing\u2026we need to create a fee market sooner or later, and until we do this, block size issues will continue to crop up again and again and economic incentives will continue to be misplaced. It would be nice to have more time to really develop a good infrastructure for this\u2026but without real market pressures, I\u2019m not sure it will happen at all. Necessity is the mother of invention, after all. The question is how to introduce a fee market smoothly and with the overwhelming consensus of the community - and that's where it starts to get tricky.\n\n\u2014\u2014\n\nOn a separate note, as several others have pointed out in this thread (but I wanted to add my voice to this as well), maintenance of source code repositories is NOT the real issue here. The bitcoin/bitcoin project on github is a reference implementation of the Satoshi protocol\u2026but it is NOT the only implementation\u2026and it wasn\u2019t really meant to be. Anyone is free to fork it, extend it, improve upon it, or create an entirely new network with its own genesis block\u2026a separate cryptoledger.\n\nThe real issue regarding XT is NOT the forking of source code nor issues surrounding commit access to repositories. The real issue is the *forking of a cryptoledger*.\n\nOpen source repositories are meant to be forked - in fact, it is often encouraged. It is also encouraged that improvements be submitted for review and possibly merged back into the parent repository\u2026although this doesn\u2019t always happen.\n\nHowever, we currently have no mechanisms in place to support merging of forked cryptoledgers. Software, and most other forms of digital content, generally increases in value with more copies made. However, money is scarce\u2026by design. The entire value of the assets of a decentralized cryptoledger rests on the assumption that nobody can just unilaterally fork it and change the rules. Yes, convincing other people to do things a certain way is HARD\u2026yes, it can be frustratingly slow\u2026I\u2019ve tried to push for many changes to the Bitcoin network\u2026and have only succeeded a very small number of times. And yes, it\u2019s often been quite frustrating. But trying to unilaterally impose a change of consensus rules for an existing cryptoledger sets a horrendous precedent\u2026this isn\u2019t just about things like block size limits, which is a relatively petty issue by comparison.\n\nIt would be very nice to have a similar workflow with consensus rule evolution as we do with most other open source projects. You create a fork, demonstrate that your ideas are sound by implementing them and giving others something that works so they can review them, and then merge your contributions back in. However, the way Bitcoin is currently designed, this is unfortunately impossible to do this with consensus rules. Once a fork, always a fork - a.k.a. altcoins. Say what you will about how most altcoins are crap - at least most of them have the decency of starting with a clean ledger.\n\n\n- Eric Lombrozo\n\n\n> On Jun 18, 2015, at 5:57 PM, Chris Pacia <ctpacia at gmail.com> wrote:\n> \n> On 06/18/2015 06:33 PM, Mark Friedenbach wrote:\n>> \n>>   * Get safe forms of replace-by-fee and child-pays-for-parent finished and in 0.12.\n>>   * Develop cross-platform libraries for managing micropayment channels, and get wallet authors to adopt\n>>   * Use fidelity bonds, solvency proofs, and other tricks to minimize the risk of already deployed off-chain solutions as an interim measure until:\n>>   * Deploy soft-fork changes for truly scalable solutions like Lightning Network.\n> \n> One of my biggest concerns is that these solutions (lightning network in particular) could end up being worse, in terms of decentralization, than would be a bitcoin network using larger blocks. We don't exactly know what the economies of scale are for pay hubs and could very well end up with far fewer hubs than nodes at any conceivable block size.\n> \n> Of course, it could also turn out to be fantastic, but it seems like an enormous gamble to basically force everyone in the ecosystem to collectively spend millions of dollars upgrading to Lightning and then see whether it's actually an improvement in terms of decentralization.\n> \n> To me, a much more sane approach would be to allow people to voluntarily opt in to those other solutions after we've had an opportunity to experiment with them and see how they actually function in practice, but that can't happen if the network runs out of capacity first.\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b98d2d71/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b98d2d71/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-19T09:37:34",
                "message_text_only": ">\n> Or alternatively, fix the reasons why users would have negative\n> experiences with full blocks\n>\n\nIt's impossible, Mark. *By definition* if Bitcoin does not have sufficient\ncapacity for everyone's transactions, some users who were using it will be\nkicked out to make way for the others. Whether that happens in some kind of\nstable organised way or (as with the current code) a fairly chaotic way\ndoesn't change the fundamental truth: *some users will find their bitcoin\nsavings have become uneconomic to spend*.\n\nHere's a recent user complaint that provides a preview of coming\nattractions:\n\nhttps://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/\n\nHello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits)\n> onto a paper wallet. When I try to send it, a window pops up stating\n> \"insufficient funds for bitcoin network fee, reduce payment amount by 1,389\n> bits?\" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.\n\n\nThese sorts of complaints will get more frequent and more extreme in the\ncoming months. I realise that nobody at Blockstream is  in the position of\nrunning an end user facing service, but many of us are .... and we will be\nthe ones that face the full anger of ordinary users as Bitcoin hits the\nwall.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/94ba867c/attachment.html>"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-19T09:53:01",
                "message_text_only": "Yeah, but increasing block-size is not a longterm solution. Necessary\nhigher fees are a logical consequence of lower subsidies. Bitcoin was\nbasically free to use at the beginning because miners got paid with\nnew coins at  the expense of those who already hold coins. Eventually\nthere needs to be a mechanism which matches supply and demand.\n\nOn Fri, Jun 19, 2015 at 11:37 AM, Mike Hearn <mike at plan99.net> wrote:\n>> Or alternatively, fix the reasons why users would have negative\n>> experiences with full blocks\n>\n>\n> It's impossible, Mark. By definition if Bitcoin does not have sufficient\n> capacity for everyone's transactions, some users who were using it will be\n> kicked out to make way for the others. Whether that happens in some kind of\n> stable organised way or (as with the current code) a fairly chaotic way\n> doesn't change the fundamental truth: some users will find their bitcoin\n> savings have become uneconomic to spend.\n>\n> Here's a recent user complaint that provides a preview of coming\n> attractions:\n>\n> https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/\n>\n>> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits)\n>> onto a paper wallet. When I try to send it, a window pops up stating\n>> \"insufficient funds for bitcoin network fee, reduce payment amount by 1,389\n>> bits?\" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.\n>\n>\n> These sorts of complaints will get more frequent and more extreme in the\n> coming months. I realise that nobody at Blockstream is  in the position of\n> running an end user facing service, but many of us are .... and we will be\n> the ones that face the full anger of ordinary users as Bitcoin hits the\n> wall.\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "GC",
                "date": "2015-06-19T10:08:19",
                "message_text_only": "Benjamin,\n\nTimeframe for network congestion and users experiencing service\ndegradation => between now and middle of next year.\n\nTimeframe for transaction fees topping block reward fees => many years in\nthe future, based on current ratio of block reward to fees.\n\nWhat is the more pressing requirement now? A working \u00b3fee market\u00b2 or a\nreliable, useful payment network that scales without falling over in the\nnext 2-3 years.\n\nOn 19/6/15 4:53 pm, \"Benjamin\" <benjamin.l.cordes at gmail.com> wrote:\n\n>Yeah, but increasing block-size is not a longterm solution. Necessary\n>higher fees are a logical consequence of lower subsidies. Bitcoin was\n>basically free to use at the beginning because miners got paid with\n>new coins at  the expense of those who already hold coins. Eventually\n>there needs to be a mechanism which matches supply and demand.\n>\n>On Fri, Jun 19, 2015 at 11:37 AM, Mike Hearn <mike at plan99.net> wrote:\n>>> Or alternatively, fix the reasons why users would have negative\n>>> experiences with full blocks\n>>\n>>\n>> It's impossible, Mark. By definition if Bitcoin does not have sufficient\n>> capacity for everyone's transactions, some users who were using it will\n>>be\n>> kicked out to make way for the others. Whether that happens in some\n>>kind of\n>> stable organised way or (as with the current code) a fairly chaotic way\n>> doesn't change the fundamental truth: some users will find their bitcoin\n>> savings have become uneconomic to spend.\n>>\n>> Here's a recent user complaint that provides a preview of coming\n>> attractions:\n>>\n>> \n>>https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to\n>>_pay_over_10_network_fee/\n>>\n>>> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159\n>>>bits)\n>>> onto a paper wallet. When I try to send it, a window pops up stating\n>>> \"insufficient funds for bitcoin network fee, reduce payment amount by\n>>>1,389\n>>> bits?\" This would be a fee of $0.32 to send my $2.82, leaving me with\n>>>$2.50.\n>>\n>>\n>> These sorts of complaints will get more frequent and more extreme in the\n>> coming months. I realise that nobody at Blockstream is  in the position\n>>of\n>> running an end user facing service, but many of us are .... and we will\n>>be\n>> the ones that face the full anger of ordinary users as Bitcoin hits the\n>> wall.\n>>\n>> \n>>-------------------------------------------------------------------------\n>>-----\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>--------------------------------------------------------------------------\n>----\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-19T10:19:17",
                "message_text_only": ">\n> Yeah, but increasing block-size is not a longterm solution.\n\n\nAre you sure? That sort of statement is hard to answer because it doesn't\nsay what you think long term is, or how much you expect Bitcoin to grow.\n\nSatoshi thought it was a perfectly fine long term solution because he\nthought hardware would get cheaper as fast or faster than Bitcoin would\ngrow. You may disagree with him, but as we're talking about the future are\nyou 100% certain he was wrong? I did calculations a long time ago that\nsuggested even with today's hardware (+some software optimisations) it\nwould be feasible to keep up with Visa.\n\nHardware improvements can be unintuitive. There's a spreadsheet here that\nlets you play with various parameters.\n\nhttps://docs.google.com/spreadsheets/d/1PJvrAAOVYVszfRRLhKqd1R9lRiOAImzAfdeb6ajATEY/edit#gid=1451669128\n\n(note: the spreadsheet says avg txn size is 250 bytes, but if you check the\nformula for the middle column, it does actually use 500 bytes as the\nmultiplier hard coded).\n\n\n> Necessary higher fees are a logical consequence of lower subsidies.\n> Bitcoin was basically free to use at the beginning because miners got paid\n> with new coins at  the expense of those who already hold coins.\n> Eventually there needs to be a mechanism which matches supply and demand.\n>\n\nThat's not clear either, I'm afraid.\n\nRemember that there's an upper limit on how high Bitcoin fees can go. When\nfees become higher than what the banking system charges, many users won't\nuse Bitcoin for moving money around anymore. Fees cannot really go much\nhigher than that even if you assume the currency is still attractive for\nother reasons, because people would just sell their coins for fiat, move\nthe fiat, and buy back the coins the other side.\n\nThe way mining will be funded in future is an open question. There are\ndiffering proposals. Still, even with a higher hard block size limit,\nminers can always refuse to mine transactions that don't include a\nparticular fee. So if you're worried about this, miners aren't being forced\ninto any particular policy.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/e6f72ab6/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T10:52:48",
                "message_text_only": "> On Jun 19, 2015, at 2:37 AM, Mike Hearn <mike at plan99.net> wrote:\n> \n> Or alternatively, fix the reasons why users would have negative experiences with full blocks\n> \n> It's impossible, Mark. By definition if Bitcoin does not have sufficient capacity for everyone's transactions, some users who were using it will be kicked out to make way for the others. Whether that happens in some kind of stable organised way or (as with the current code) a fairly chaotic way doesn't change the fundamental truth: some users will find their bitcoin savings have become uneconomic to spend.\n> \n> Here's a recent user complaint that provides a preview of coming attractions:\n> \n> https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/ <https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/>\n> \n> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits) onto a paper wallet. When I try to send it, a window pops up stating \"insufficient funds for bitcoin network fee, reduce payment amount by 1,389 bits?\" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.\n> \n> These sorts of complaints will get more frequent and more extreme in the coming months. I realise that nobody at Blockstream is  in the position of running an end user facing service, but many of us are .... and we will be the ones that face the full anger of ordinary users as Bitcoin hits the wall.\n\nMike,\n\nWith all due respect, many of us DO run end user facing services\u2026and would rather see a fundamental problem *fixed* rather than merely covered up temporarily\u2026hoping nobody notices.\n\nThe user experience of Bitcoin is already horrendous\u2026unless you use a centralized validator web wallet. Even SPV is fundamentally broken (and I would have pegged you for being one of the people most directly aware of this fact). If we\u2019re going for centralized validation, why even use a blockchain in the first place? We already have much faster, more efficient technology that can do that kind of stuff at a fraction of the cost. If you have well-established entities running banking services, we have other mechanisms in place that can help keep them honest\u2026other far more efficient protocols. We\u2019re basically defeating the very purpose of this invention.\n\nThen there are a bunch of other \u201cinconveniences\u201d about the way Bitcoin currently works. For instance, have you ever received a bunch of small payments (i.e. a crowdsale) and then found yourself in the position of having to suddenly move a big chunk of that on the blockchain\u2026only to discover all the txouts you were spending added up to hundreds of kB or more? Or have you ever had to send a small payment but only had one large output in your wallet\u2026which meant that the entirety of those funds were tied up until the first transaction got signed and propagated? Yes, the protocol has MANY serious issues\u2026of which the \u201csend and forget\u201d fee model as opposed to the \u201csend and bid model\u201d is just one.\n\nBitcoin was designed from the beginning with the idea that sooner or later fees would be a significant component of the network. The problem was never really fully addressed and solved - I\u2019m glad to see that finally some good people in this space are starting to seriously think about solutions.\n\nMike, are you telling us you\u2019d rather avoid user complaints at all costs even if that means building something shitty for them that doesn\u2019t really serve its stated purpose? If those are your standards then no thanks, I don\u2019t want to be part of your fork. And I don\u2019t think I\u2019m alone in this sentiment.\n\n\n- Eric Lombrozo\n\n\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/cf25a90e/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/cf25a90e/attachment.sig>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-19T11:31:26",
                "message_text_only": "On Fri, Jun 19, 2015 at 11:37 AM, Mike Hearn <mike at plan99.net> wrote:\n>> Or alternatively, fix the reasons why users would have negative\n>> experiences with full blocks\n>\n>\n> It's impossible, Mark. By definition if Bitcoin does not have sufficient\n> capacity for everyone's transactions, some users who were using it will be\n> kicked out to make way for the others. Whether that happens in some kind of\n> stable organised way or (as with the current code) a fairly chaotic way\n> doesn't change the fundamental truth: some users will find their bitcoin\n> savings have become uneconomic to spend.\n\nHe doesn't mean that: he means solving the mempool and crashes and\nhitting the limit would have.\nIf the chain has limited size it is a scarce resource and people have\nto bid for it: nothing unexpected or wrong about that.\nOf course, people that believe the limit should be completely removed\neventually because they don't care about mining being decentralized\n(or fail to see the relation between the two) may have a very\ndifferent view about this.\n\nOn Fri, Jun 19, 2015 at 12:08 PM, GC <slashdevnull at hotmail.com> wrote:\n> Timeframe for transaction fees topping block reward fees => many years in\n> the future, based on current ratio of block reward to fees.\n\nDo you think that this ratio is unrelated to an abundant (non-scarce)\nblock size?\nWhen is the right time to allow space pressure to rise that ratio?\nWhen the subsidy is at 1.5625, for example, it may be too late to\nstart a non-catastrophic transition from subsidies to fees.\nI don't claim to know that, but it's something that worries me.\nNo matter how many people say \"that's too far away in the future to\nworry about it\", I still worry about it and I'm sure more people do.\nWhat if \"when it's time to care about it\" we discover that we should\nhave started to do things about it long ago to minimize the risks of\nthis transition?"
            },
            {
                "author": "GC",
                "date": "2015-06-19T12:26:45",
                "message_text_only": ">When is the right time to allow space pressure to rise that ratio?\n>When the subsidy is at 1.5625, for example, it may be too late to\n\nI don\u00b9t believe we have to decide, the miners will do that and are doing\nthat already.\n\n>start a non-catastrophic transition from subsidies to fees.\n>I don't claim to know that, but it's something that worries me.\n>No matter how many people say \"that's too far away in the future to\n>worry about it\", I still worry about it and I'm sure more people do.\n>What if \"when it's time to care about it\" we discover that we should\n>have started to do things about it long ago to minimize the risks of\n>this transition?\n\nHmmm. What should be the price of an email? How much should DARPA have\ncharged for using TCP/IP?\n\nI see a lot of well-paid, first-world technologists arguing for commercial\nreturns on a nacent protocol which could could offer benefits to the\nunbanked.\nIs that really the vision: to (re)build a de-centralized Paypal with\nslightly cheaper fees and cool hooks into off-chain commercial systems\nproviding profits for the already rich?\n\n>--------------------------------------------------------------------------\n>----\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Brooks Boyd",
                "date": "2015-06-19T11:48:54",
                "message_text_only": "On Fri, Jun 19, 2015 at 4:37 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Or alternatively, fix the reasons why users would have negative\n>> experiences with full blocks\n>>\n>\n> It's impossible, Mark. *By definition* if Bitcoin does not have\n> sufficient capacity for everyone's transactions, some users who were using\n> it will be kicked out to make way for the others. Whether that happens in\n> some kind of stable organised way or (as with the current code) a fairly\n> chaotic way doesn't change the fundamental truth: *some users will find\n> their bitcoin savings have become uneconomic to spend*.\n>\n> Here's a recent user complaint that provides a preview of coming\n> attractions:\n>\n>\n> https://www.reddit.com/r/Bitcoin/comments/39r3bi/breadwallet_asking_me_to_pay_over_10_network_fee/\n>\n> Hello, I'm just trying to send my small Sarutobi-tips stash (12,159 bits)\n>> onto a paper wallet. When I try to send it, a window pops up stating\n>> \"insufficient funds for bitcoin network fee, reduce payment amount by 1,389\n>> bits?\" This would be a fee of $0.32 to send my $2.82, leaving me with $2.50.\n>\n>\n>\nHas there been any talk about reducing the time between blocks? If blocks\nwere allowed to come twice as fast, they would be able to clear pending\ntransactions in the mempool the same as if the block size doubled, but\nwould allow mining to stay more decentralized since miners wouldn't be\nworking on such large-scale blocks? It would still take more storage space\nto store the blockchain, though.\n\nBrooks\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/6f2397c3/attachment.html>"
            },
            {
                "author": "Owen Gunden",
                "date": "2015-06-21T14:45:30",
                "message_text_only": "On 06/19/2015 07:48 AM, Brooks Boyd wrote:\n> Has there been any talk about reducing the time between blocks? If\n> blocks were allowed to come twice as fast, they would be able to clear\n> pending transactions in the mempool the same as if the block size\n> doubled, but would allow mining to stay more decentralized since miners\n> wouldn't be working on such large-scale blocks? It would still take more\n> storage space to store the blockchain, though.\n\nhttps://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07663.html"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-18T21:55:36",
                "message_text_only": "There's some actually proposing inaction as an outright decision, but I \nmore meant that at times it has felt like we would end up with inaction \nthrough momentum, combined with adoption rate making any hard fork more \ncomplex if it continues to be delayed.\n\nOn 18/06/2015 22:42, Matt Whitlock wrote:\n> On Thursday, 18 June 2015, at 8:31 pm, Ross Nicoll wrote:\n>> I may disagree with Mike & Gavin on timescale, but I do believe there's\n>> a likelihood inaction will kill Bitcoin\n> An honest question: who is proposing inaction? I haven't seen anyone in this whole, agonizing debate arguing that 1MB blocks are adequate. The debate has been about *how* to increase the block-size limit and whether to take action ASAP (at the risk of fracturing Bitcoin) or to delay action for further debate (at the risk of overloading Bitcoin). Even those who are arguing for further debate are not arguing for *inaction*."
            },
            {
                "author": "Matt Corallo",
                "date": "2015-06-18T19:24:14",
                "message_text_only": ">For example, I think some of the resistance for bigger blocks is coming\n>from contributors who are worried they, personally, won't be able to\n>keep\n>up with a bigger blockchain. They might not be able to run full nodes\n>from\n>their home network connections (or might not be able to run a full node\n>AND\n>stream Game of Thrones), on their old raspberry pi machines.\n\nIve been trying to stay out of these increasingly useless shit-throwing contests, but I wanted to take objection to this... I highly, highly doubt any seriously technical person is making any kind of decision on block size issues based on their own personal network. If you're assuming this is a serious motivating factor for anyone, then I'm not sure you've even been reading your email or listening to the conversations you've had with people over the last year or more.\n\nOn June 18, 2015 11:23:33 AM PDT, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>On Thu, Jun 18, 2015 at 1:42 PM, Alex Morcos <morcos at gmail.com> wrote:\n>\n>> Let me take a pass at explaining how I see this.\n>>\n>> 1) Code changes to Bitcoin Core that don't change consensus: \n>Wladimir is\n>> the decider but he works under a process that is well understood by\n>> developers on the project in which he takes under reasonable\n>consideration\n>> other technical opinions and prefers to have clear agreement among\n>them.\n>>\n>\n>Yes.\n>\n>2) Changes to the consensus rules: As others have said, this isn't\n>anyone's\n>> decision for anyone else.\n>>\n>\n>Yes.\n>\n>\n>> It's up to each individual user as to what code they run and what\n>rules\n>> they enforce.  So then why is everyone so up in arms about what Mike\n>and\n>> Gavin are proposing if everyone is free to decide for themselves?  I\n>> believe that each individual user should adhere to the principle that\n>there\n>> should be no changes to the consensus rules unless there is near\n>complete\n>> agreement among the entire community, users, developers, businesses\n>miners\n>> etc. It is not necessary to define complete agreement exactly because\n>every\n>> individual person decides for themselves.  I believe that this is\n>what\n>> gives Bitcoin, or really any money, its value and what makes it work,\n>that\n>> we all agree on exactly what it is.  So I believe that it is\n>misleading and\n>> bad for Bitcoin to tell users and business that you can just choose\n>without\n>> concern for everyone else which code you'll run and we'll see which\n>one\n>> wins out.  No.  You should run the old consensus rules (on any\n>codebase you\n>> want) until you believe that pretty much everyone has consented to a\n>change\n>> in the rules.  It is your choice, but I think a lot of people that\n>have\n>> spent time thinking about the philosophy of consensus systems believe\n>that\n>> when the users of the system have this principle in mind, it's what\n>will\n>> make the system work best.\n>>\n>\n>I don't think I agree with \"pretty much everybody\", because status-quo\n>bias\n>is a very powerful thing. Any change that disrupts the way they've been\n>doing things will generate significant resistance -- there will be 10\n>or\n>20% of any population that will take a position of \"too busy to think\n>about\n>this, everything seems to be working great, I don't like change, NO to\n>any\n>change.\"\n>\n>For example, I think some of the resistance for bigger blocks is coming\n>from contributors who are worried they, personally, won't be able to\n>keep\n>up with a bigger blockchain. They might not be able to run full nodes\n>from\n>their home network connections (or might not be able to run a full node\n>AND\n>stream Game of Thrones), on their old raspberry pi machines.\n>\n>The criteria for me is \"clear super-majority of the people and\n>businesses\n>who are using Bitcoin the most,\" and I think that criteria is met.\n>\n>\n>\n>> 3) Code changes to Core that do change consensus: I think that\n>Wladimir,\n>> all the other committers besides Gavin, and almost all of the other\n>> developers on Core would defer to #2 above and wait for its outcome\n>to be\n>> clear before considering such a code change.\n>>\n>\n>Yes, that's the way it has mostly been working. But even before\n>stepping\n>down as Lead I was starting to wonder if there are ANY successful open\n>source projects that didn't have either a Benevolent Dictator or some\n>clear\n>voting process to resolve disputes that cannot be settled with \"rough\n>consensus.\""
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-18T19:32:43",
                "message_text_only": "On Thu, Jun 18, 2015 at 7:24 PM, Matt Corallo <bitcoin-list at bluematt.me> wrote:\n> Ive been trying to stay out of these increasingly useless shit-throwing contests, but I wanted to take objection to this... I highly, highly doubt any seriously technical person is making any kind of decision on block size issues based on their own personal network. If you're assuming this is a serious motivating factor for anyone, then I'm not sure you've even been reading your email or listening to the conversations you've had with people over the last year or more.\n\nIt's probably due to me: When I point to trends and broadband\n_distribution_ in the US (much less the less developed parts of the\nworld), I'm being \"hypothetical\", and when I point to my _own_\nconnectivity as a concrete example it's \"personal\". It's no joke that\ncommunication is _hard_ but it's a shared responsibility however, and\nno need to assume anyone isn't reading.,"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-18T12:38:30",
                "message_text_only": "What is immediately clear to anyone who looks at Bitcoin software \ndevelopment is that there is no clear process or method to make \nchanges/updates to the software.  When I have questioned this in the \npast the response is usually some cultish answer about how some kind of \ntechnical consensus is reached yet nobody can point to an actual \nprocess.  If companies are expected to dedicate resources to adopt \nBitcoin there needs to be some type of process spelled out that can give \nthese entities at least minimal assurance that there is some type of \nprocess in place.  I think the whole process is based on how certain \npersonalities handle issues but as those personalities change the system \nchanges in unknown ways which equates to risk.\n\nThe other thing that is immediately clear is that there is no systems \nengineering process in place to make changes.  A \"risk study\" was done \nby the Bitcoin Foundation but that is only the first baby step in the \nprocess.  It works by defining a set of risks, likelihood, mitigations, \netc.  and a risk matrix and maintaining those as living documents.   \nWhen changes are proposed alternative scenarios are created and they are \nmeasured against the baseline of what there is now.  Standard test plans \nare created to measure the changes against defined metrics.  It is a lot \nof work to define those risks to the level of detail needed for work \nlike this.  However, the amount of time/energy saved in the end is \ntremendous.   Right now the process is haphazard at best with people \nposting random tweets, Reddit posts, blog posts, etc.  All this drama \nmakes Bitcoin look somewhat amateurish and rather risky.\n\nhttp://www.dtic.mil/ndia/2004cmmi/CMMIT1Mon/Track1IntrotoSystemsEngineering/KISE09RiskManagementv2.pdf\n\nhttps://bitcoinfoundation.org/wp-content/uploads/2014/04/Bitcoin-Risk-Management-Study-Spring-2014.pdf\n\nSome people also seems to conflates the notion of decentralization of \nthe state of the ledger by mining/nodes with that of decentralization of \nopen source software by forking the software. These are very different \nproblems and I don't think it is possible (or even desirable) to achieve \nthe same level of decentralization for both things.  In any case \n\"decentralization\" for the state of the blockchain is only an \napproximation anyway since there are things like 51% attacks and \ncheckpoints.\n\nRuss\n\n\n\n\nOn 6/18/2015 7:14 AM, Wladimir J. van der Laan wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA512\n>\n> On Thu, Jun 18, 2015 at 12:00:17PM +0200, Mike Hearn wrote:\n>\n>> Core is in the weird position where there's no decision making ability at\n>> all, because anyone who shows up and shouts enough can generate\n>> 'controversy', then Wladimir sees there is disagreement and won't touch the\n>> issue in question. So it just runs and runs and *anyone* with commit access\n>> can then block any change.\n> Bitcoin Core is completely different from your average open source project in one aspect: where it concerns consensus.\n>\n> Like in any open source project there is lots of decision making ability for code changes. I'd say look at the changelog for e.g. 0.11 https://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md#0110-change-log, or follow pull requests for a while, to see how many decisions about changes are made from day to day. No, I'm not sitting on my hands, and so is none of the other contributors that you'd like to get rid of.\n>\n> Consensus changes are *much* more difficult, on the other hand. Even relatively straightforward softforks come with a long discussion process (see BIP62, BIP66). A hardfork is hard to do at the best of times (everyone needs to upgrade their software!), and simply not possible if almost the entire technical community disagrees with you.\n>\n> Bitcoin is supposed to be a robust, global, decentralized network beyond anyone's control. It makes *no sense* to try to run it as a dictatorship. This would create a handy central position where power can be applied, pushing through changes to the behavior of the system, either by force or other ways of motivation. I refuse to take part in that.\n>\n> Hence, anything that is controversial needs to be considered really carefully. If I suddenly start making changes to the consensus code without full agreement, by all means take away my commit privileges.\n>\n> (a major reason for the ongoing libconsensus work is to separate \"Bitcoin Core, the node software\" and \"The Bitcoin Consensus\" along clear lines, to avoid this kind of nasty confusion)\n>\n> Wladimir\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n>\n> iQEcBAEBCgAGBQJVgqfOAAoJEHSBCwEjRsmmFT8H/Rkm29AhLhT8R1Vx8oKUIzID\n> +NB7tOps3lIilkDQIC5zHSknx5iugrrAdRf1w7qPj/o8+xhCZw9ruu8eIq+djkRQ\n> tvzbHil2pqgT3VHriRlY4lvlmu2NmBcYrAuX9sDhUHBo6cwGajfKMJPfE0haK3K4\n> 7EmfdGXJYJmiBnhE6ikOiU687M2WgsmIGrBDIxeA5wYwVK9Ph8hfcbuj7AHvIMI9\n> ZNU/V6uhcTjn5wT+6DHGIOxHipYHyAwKb7jKho0XkM6Yi4ORe1mxF5HDtqA0ztta\n> mZPNjNrt/ngK20xRbqkb0GtxoyZq38ZF3Bq1gaWl2v9MBBMD5ZxQAvgCNUQFEo0=\n> =W26K\n> -----END PGP SIGNATURE-----\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-18T13:31:54",
                "message_text_only": "OK, let's agree to unpack the two things.\n\nThe first issue is how are decisions made in Bitcoin Core? I struggle to\nexplain this to others because I don't understand it myself. Is it a vote\nof people with commit access? Is it a 100% agreement of \"core developers\"\nand if so, who are these people? Is it \"whoever reverts the change last\"?\nCould I write down in a document a precise description of how decisions are\nmade? No, and that's been a fairly frustrating problem for a long time.\n\nBut let's leave it to one side for a moment.\n\nLet's focus on the other issue:   what happens if the Bitcoin Core decision\nmaking process goes wrong?\n\nFor the sake of argument let's pretend we're discussing a different change,\nlet's imagine there is a proposal to change the block format to include a\nWidget, where a Widget is some potentially desirable thing. And this change\nmeans a hard fork. Let's put the block size to one side for a second to\navoid getting distracted.\n\nImagine that 90% of people in Bitcoin want their Widgets, but one of your\ncommitters refuses to accept it.  I am not saying the block size debate has\nsuch proportions but pretend Widgets do.\n\nWhat is the process for resolving this problem?\n\nGavin and I say - there is a process, and that process is a hard fork of\nthe block chain.\n\nWhat you're saying is - there is no process because a contentious hard fork\nmust never happen. Such a change is simply impossible.\n\nNow which is a better description of this situation? Is the \"it must never\nhappen end of story\" really the cuddly warm democracy that you seem to\nsuggest? Or is it more like a dictatorship where the opinions of one or two\npeople can override all the others?\n\nThe typical answer I'm seeing to this is that Bitcoin Core's own decision\nmaking process is so fantastic that it never goes wrong, even though\n\"consensus\" is not defined and \"technical majority\" is not defined and we\nhave serious long time contributors on this mailing list (such as wallet\ndevelopers) disagreeing with this consensus yet our feedback is being\nignored.\n\nYou guys *must* accept that your preferred process for resolving disputes\nis, itself, in dispute. That leaves the block chain itself as the only\nremaining method for bringing this saga to a close.\n\nSo this is why we keep disagreeing:\n\n   - If Bitcoin Core has reached a formal decision made by the maintainer\n   via whatever mechanism he likes to not accept the block size increase, then\n   alright, technical disputes will happen. But ....\n\n   - You should agree that the next step is a fork of both the software and\n   the block chain. And you should welcome such a thing because it is the ONLY\n   check on your own power. It's the one thing that allows the community to\n   reject the decision making process you are using in case it goes wrong.\n\nI keep reading that Bitcoin cannot survive a hard fork. Well, we've\nsurvived an accidental fork that happened without anyone being prepared,\nand even with a planned soft fork \"never upgrade\" isn't really an option\nfor either miners or businesses, so ultimately node operators must know\nabout upgrades and make them. Both myself and Gavin think this process can\nwork out OK.\n\nDo you at least understand where we're coming from here, even if you\ndisagree? And if you disagree, is it because you think a hard fork to\nresolve a dispute can't work technically, or is it some other reason?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/de57a58c/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-18T13:50:07",
                "message_text_only": "On Thu, Jun 18, 2015 at 3:31 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> OK, let's agree to unpack the two things.\n>\n> The first issue is how are decisions made in Bitcoin Core? I struggle to\n> explain this to others because I don't understand it myself. Is it a vote\n> of people with commit access? Is it a 100% agreement of \"core developers\"\n> and if so, who are these people? Is it \"whoever reverts the change last\"?\n> Could I write down in a document a precise description of how decisions are\n> made? No, and that's been a fairly frustrating problem for a long time.\n>\n> But let's leave it to one side for a moment.\n>\n> Let's focus on the other issue:   what happens if the Bitcoin Core\n> decision making process goes wrong?\n>\n\nWhy do you keep talking about Bitcoin Core maintainers? The means for doing\na hard fork is convincing the network to run modified code, whether that is\na new version of Bitcoin Core or a fork of it, or something else entirely.\n\nIf I see consensus about a proposed network change, I will be in favor of\nimplementing it in Bitcoin Core. But we're not at that point. There is no\nnetwork change proposed with consensus. There is not even a patch to be\ndiscussed. There are working proposals, and people are talking about them.\nThis is good.\n\nI think maintainers of particular software should not be, and are not those\nwho decide the network's rules. People running the code are. Of course\nmaintainers have a large influence, but so do other people - like you.\n\n> This was a reference to a post by Gregory on Reddit where he said if\nGavin were to do a pull request for the block size change and then merge\nit, he would revert it. And I fully believe he would do so!\n\nI believe so too, and I would do the same. Because I believe implementing a\nconsensus rule change without having very good expectations that the\nnetwork will adopt it, is reckless from the point of view of maintainers,\nfor all reasons I have mentioned before.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/d8c40122/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-18T15:03:01",
                "message_text_only": "On Thu, Jun 18, 2015 at 6:31 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> The first issue is how are decisions made in Bitcoin Core? I struggle to\n> explain this to others because I don't understand it myself. Is it a vote\n> of people with commit access? Is it a 100% agreement of \"core developers\"\n> and if so, who are these people? Is it \"whoever reverts the change last\"?\n> Could I write down in a document a precise description of how decisions are\n> made? No, and that's been a fairly frustrating problem for a long time.\n>\n\nThere is a quote from United States Supreme Court Justice Potter Stewart to\ndescribe his threshold test for obscenity which is relevant here: \"I know\nit when I see it.\"\n\nIt is hard certainly, and perhaps even impossible to write down a system of\nrules that is used to resolve every dispute among core developers. But that\ndoesn't mean it isn't obvious to all the participants what is going on. If\na contentious change is proposed, and if after sufficient debate there are\nstill members of the technical community with reasoned, comprehensible\nobjections who are not merely being obstinate in the views -- a neutral\nobserver would agree that their concerns have not been met -- then there is\na lack of consensus.\n\nIf there was some sort of formal process however, the system wouldn't work.\nRules can be gamed, and if you add rules to a process then that process can\nbe gamed. Instead we all have a reasonable understanding of what \"technical\nconsensus\" is, and we all know it when we see it. Where we do not see it,\nwe do not proceed.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/1adcf256/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-18T15:30:06",
                "message_text_only": "On 6/18/2015 11:03 AM, Mark Friedenbach wrote:\n> On Thu, Jun 18, 2015 at 6:31 AM, Mike Hearn <mike at plan99.net \n> <mailto:mike at plan99.net>> wrote:\n>\n>     The first issue is how are decisions made in Bitcoin Core? I\n>     struggle to explain this to others because I don't understand it\n>     myself. Is it a vote of people with commit access? Is it a 100%\n>     agreement of \"core developers\" and if so, who are these people? Is\n>     it \"whoever reverts the change last\"?  Could I write down in a\n>     document a precise description of how decisions are made? No, and\n>     that's been a fairly frustrating problem for a long time.\n>\n>\n> There is a quote from United States Supreme Court Justice Potter \n> Stewart to describe his threshold test for obscenity which is relevant \n> here: \"I know it when I see it.\"\n>\n> It is hard certainly, and perhaps even impossible to write down a \n> system of rules that is used to resolve every dispute among core \n> developers. But that doesn't mean it isn't obvious to all the \n> participants what is going on. If a contentious change is proposed, \n> and if after sufficient debate there are still members of the \n> technical community with reasoned, comprehensible objections who are \n> not merely being obstinate in the views -- a neutral observer would \n> agree that their concerns have not been met -- then there is a lack of \n> consensus.\n>\n> If there was some sort of formal process however, the system wouldn't \n> work. Rules can be gamed, and if you add rules to a process then that \n> process can be gamed. Instead we all have a reasonable understanding \n> of what \"technical consensus\" is, and we all know it when we see it. \n> Where we do not see it, we do not proceed.\n>\n\nThere is always a process.  Right now the process is haphazard, unclear, \nand constantly changing without being written down so people don't \nactually know what it is.  In fact you do not all have a reasonable \nunderstanding of \"technical consensus\" because if you did then you could \nwrite it down ... but you can't.   The current process is being gamed by \npeople making tweets, reddit posts, videos, and blog posts.  A more \nformalized process would channel that activity into a a more usable format.\n\nThis kind of thing always happens as projects become larger and more \ndiverse.  Something that was once a small group turns into a big group \nof diverse stakeholders.  When it gets too big for the informal \nprocesses then some people get upset and defensive. Happens all the time \nbut it is not really a good excuse to keep doing things in an \ninefficient manner.  The old ways just don't scale and if you ever \nworked on massive projects then you know these formal processes work better.\n\nRuss\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/84bd5100/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T15:46:42",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\n\n> This kind of thing always happens as projects become larger and more\n> diverse.  Something that was once a small group turns into a big\n> group of diverse stakeholders.  When it gets too big for the\n> informal processes then some people get upset and defensive. Happens\n> all the time but it is not really a good excuse to keep doing things\n> in an inefficient manner.  The old ways just don't scale and if you\n> ever worked on massive projects then you know these formal processes\n> work better.\n\nSo then: make a proposal for a better process, post it to this list.\n\nIn practice there has been zero interest in improving the BIP process.\n\nE.g. the BIP process was adapted from the Python Enhancement Proposals by Amir Taaki (in 2009 or so?). It hasn't really changed since then, apart from some spelling and grammar corrections. It is not specifically adapted to Bitcoin, and doesn't make a distinction between for example, consensus changes and non-consensus changes.\n\nSo that's up to someone to do. You seem to be enthousiastic about it, so go ahead.\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVgufFAAoJEHSBCwEjRsmmAmYIAI9ndrMoqEuoaP5t+7W42UuH\nsh5qR7hojCCoZZl1N+rQ63UXcPBO/V4NUkUG97S3qpEFDzuoYSbOX2Eh+TRfK+s+\nU+BpLhWteSexJ3N9aiFuR0q5jgesAzLZ9wtq1gCPI/Zu5/fgYBP4AVTiQGdXCZtv\nm6ZDKCf+aB/fW/59/AiY44NkMDjVQieEVRiT1IPFJULWesOOdtv7UoqIpz0vDa/5\nJplm41j8IpTPioJKSwUi5qzSDrF7O39PC9LMXNRx/0FIuYfwqJpvF0Frc+vtPpjQ\nllKE7945uMXz3FLSV0Orx26XPal/MuF5AYOPNk6pJfwYw7q91AUvQxVFepBa9vw=\n=dMO9\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-18T16:05:58",
                "message_text_only": ">\n> So then: make a proposal for a better process, post it to this list.\n>\n\nAlright. Here is a first cut of my proposal. It can be inserted into an\namended BIP 1 after \"What belongs in a successful BIP?\". Let me know what\nyou think.\n\n\n\nThe following section applies to BIPs that affect the block chain consensus\nrules or the peer to peer protocol and thus require changes to Bitcoin\nCore.\n\nOnce a draft BIP has been submitted to bitcoin-development for\nconsideration, the Bitcoin Core maintainer will deliver a preliminary\nyes/no verdict within three weeks. This verdict may be informed by the\ndebate that has taken part in the previous three weeks. If more time is\nrequired, the maintainer is required to request an extension from the BIP\nauthor, who may then elect to force an immediate decision (risking a no),\nor choosing to allow more time.\n\nThe verdict will meet the following criteria:\n\n   - It will address the latest version of the BIP at the time the verdict\n   is rendered.\n\n   - In case of a rejection, it will spell out and describe the technical\n   rationale for this decision. Opinions held by other people are not\n   considered technical rationales: if the maintainer agrees with a technical\n   point made during discussion, he must own that opinion for himself.\n   Therefore no BIP will be rejected on grounds of controversy, disagreement,\n   lack of consensus or otherwise.\n\n   - In case of rejection, the maintainer will provide a clear, specific\n   list of actionable steps the BIP author can take next. For example, a list\n   of what changes would address the technical objections raised. In case the\n   maintainer believes no change could ever make the BIP acceptable, the list\n   must consist of instructions for how to create a patch set and, in the case\n   of changes to the consensus rules, how to initiate a hard fork.\n\nA BIP, even once rejected, may live on in the BIPS repository, though its\nentry in the index may be sorted below others. The BIP author may update\nthe BIP with a summary of any resulting discussion. As such a summary may\nbe inherently contentious in case of a dispute, the authors wording of that\nsummary is final and may not be subject to meta-debate.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/d9c01029/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T16:20:58",
                "message_text_only": "On Thu, Jun 18, 2015 at 06:05:58PM +0200, Mike Hearn wrote:\n\n> Once a draft BIP has been submitted to bitcoin-development for\n> consideration, the Bitcoin Core maintainer will deliver a preliminary\n> yes/no verdict within three weeks. This verdict may be informed by the\n> debate that has taken part in the previous three weeks. If more time is\n> required, the maintainer is required to request an extension from the BIP\n> author, who may then elect to force an immediate decision (risking a no),\n> or choosing to allow more time.\n\nAgain, for the last time: Bitcoin Core maintainer does not decide about protocol or consensus level changes.\n\nThis is not a role for me. Find someone else, if you think you need an arbiter. There was an idea about a Bitcoin Standards Body once, but as far as I know that's not actively being worked on.\n\nBTW: for more exposure a proposal is better posted as a new thread, not as a deep reply to an existing topic.\n\nWladimir"
            },
            {
                "author": "odinn",
                "date": "2015-06-18T22:49:43",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nRegarding this proposal from Mike Hearn to remove consensus process\nfrom the BIP, which I think is unsound philosophy.  I will address\nthis briefly below.\n\nOn 06/18/2015 09:05 AM, Mike Hearn wrote:\n> So then: make a proposal for a better process, post it to this\n> list.\n> \n> \n> Alright. Here is a first cut of my proposal. It can be inserted\n> into an amended BIP 1 after \"What belongs in a successful BIP?\".\n> Let me know what you think.\n> \n> \n> \n> The following section applies to BIPs that affect the block chain \n> consensus rules or the peer to peer protocol and thus require\n> changes to Bitcoin Core.\n> \n> Once a draft BIP has been submitted to bitcoin-development for \n> consideration, the Bitcoin Core maintainer will deliver a\n> preliminary yes/no verdict within three weeks.\n\nFor many things, that will simply be too fast. It is better to allow\nthe primary maintainer to collaborate with other people who normally\nwork on the code and determine what the schedule will be based on\nlife, volume of work, and so on.\n\n\n> This verdict may be informed by the debate that has taken part in\n> the previous three weeks. If more time is required, the maintainer\n> is required to request an extension from the BIP author, who may\n> then elect to force an immediate decision (risking a no), or\n> choosing to allow more time.\n\nAgain, this three week thing doesn't work.  But assume for a moment\nthat there is a certain amount of time that is such and so and it is\nset by the maintainer.  The notion that the maintainer would be\n\"required\" to request an extension from the BIP author is sheer\nlunacy.  There is no need to codify the actions of the project\nmaintainer such that he/she would be needing to be subject to the\nwhims of whatever BIP author.  In like manner, a BIP author should not\nhave to be subject to forever delay of a BIP due to inaction of a\nmaintainer, but should have an answer regarding whether it can be\nassigned a number, published as draft and so forth after a reasonable\ntime.  To me, a \"reasonable time\" is something that should be\ndiscussed amongst the maintainer, those who work regularly on code,\nand the BIP author.\n\n> \n> The verdict will meet the following criteria:\n> \n> * It will address the latest version of the BIP at the time the \n> verdict is rendered.\n> \n> * In case of a rejection, it will spell out and describe the\n> technical rationale for this decision. Opinions held by other\n> people are not considered technical rationales: if the maintainer\n> agrees with a technical point made during discussion, he must own\n> that opinion for himself. Therefore no BIP will be rejected on\n> grounds of controversy, disagreement, lack of consensus or\n> otherwise.\n\nNo, this is ridiculous, because the notion that \"no BIP will be\nrejected on grounds of controversy, disagreement, lack of consensus,\nor otherwise,\" is clearly an attempt to do away with consensus models\nof business, and it is also not a very logical statement because\ncontroversy and disagreement are a natural part of... coming to what\neventually is an agreement.\n\n> \n> * In case of rejection, the maintainer will provide a clear,\n> specific list of actionable steps the BIP author can take next. For\n> example, a list of what changes would address the technical\n> objections raised.\n\nThis above section I agree with.\n\n\n In case the maintainer believes no change could ever make\n> the BIP acceptable, the list must consist of instructions for how\n> to create a patch set and, in the case of changes to the consensus \n> rules, how to initiate a hard fork.\n\nThis above section I do not agree with because of the obvious bias in\nfavor of the hard fork.  Everything here seems to be aligned to push\nfor hard fork, hard fork, hard fork.  It's like the author can't tear\nhis mind off it.\n\n> \n> A BIP, even once rejected, may live on in the BIPS repository,\n> though its entry in the index may be sorted below others. The BIP\n> author may update the BIP with a summary of any resulting\n> discussion. As such a summary may be inherently contentious in case\n> of a dispute, the authors wording of that summary is final and may\n> not be subject to meta-debate.\n> \n> \nThis doesn't seem right at all.\n\n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVg0sHAAoJEGxwq/inSG8CuFcH/0tzRWWyy3wmDegNx463xoaq\nEhG/dNqoIvavMlyJrKfKWPK6Mndgo9BtxkYbvOlO40Y51SW4SaisWGzHRg4HyIbJ\n0Orp+C0jXhvnrJ7hRwKhrdZQUIRAI19NLVthSb9W6mHnXWJC8ilhlK9Ei9ILRjGl\ntM5pZ28SkyJ/b+CnltnYW8t6AvE4zlggC4QsCuUwA2cFoFWjQeESpqjy4kJNv464\nyKlsrqoIzs2vNnoLIx1B0aLX9mNTQUwB1yMXtu8IVcAQe/G1LEEnNO56LGf8O0yJ\nKcBTSpDAtCxvfkwtr3DS6LtCzXcej974NW068n/92zZIKzsdcZk/o3O5ZxEO7Wg=\n=YwvU\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-18T16:11:24",
                "message_text_only": "You misunderstand what I am saying.  I am not saying I have a specific \nprocess that should be followed, I am saying that whatever the process \nis then it should be formalized or at least written down.  That way the \nstakeholders have something to work with and keeps people on track.  \nSince some people are saying they don't really know what the process is \nthe first step would be to describe the current process.  I don't fully \nunderstand the current process but I can see it is not formalized and \nnobody can even give me a clear description of what it is.  Once you \nhave it written down then changes/improvements can be proposed.\n\nThe first baby step was already done by the Foundation in developing \nthat risk study.   A NIST guide for developing such a document is at \nhttp://csrc.nist.gov/publications/nistpubs/800-30-rev1/sp800_30_r1.pdf. \nNo one person can come up with this and it would take buy in from \nseveral different people who have expertise in specific technical areas \nas well as experts in coming up with test plans.  I recently suggested \nto the people running the MIT lab that they look into developing a \nprogram along those lines.  Gavin also recently suggested that list of \nBitcoin metrics be developed to help resolve the current disputes.  I \ncan help develop this process if there is interest.\n\nRuss\n\n\n\n\nOn 6/18/2015 11:46 AM, Wladimir J. van der Laan wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA512\n>\n>\n>> This kind of thing always happens as projects become larger and more\n>> diverse.  Something that was once a small group turns into a big\n>> group of diverse stakeholders.  When it gets too big for the\n>> informal processes then some people get upset and defensive. Happens\n>> all the time but it is not really a good excuse to keep doing things\n>> in an inefficient manner.  The old ways just don't scale and if you\n>> ever worked on massive projects then you know these formal processes\n>> work better.\n> So then: make a proposal for a better process, post it to this list.\n>\n> In practice there has been zero interest in improving the BIP process.\n>\n> E.g. the BIP process was adapted from the Python Enhancement Proposals by Amir Taaki (in 2009 or so?). It hasn't really changed since then, apart from some spelling and grammar corrections. It is not specifically adapted to Bitcoin, and doesn't make a distinction between for example, consensus changes and non-consensus changes.\n>\n> So that's up to someone to do. You seem to be enthousiastic about it, so go ahead.\n>\n> Wladimir\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n>\n> iQEcBAEBCgAGBQJVgufFAAoJEHSBCwEjRsmmAmYIAI9ndrMoqEuoaP5t+7W42UuH\n> sh5qR7hojCCoZZl1N+rQ63UXcPBO/V4NUkUG97S3qpEFDzuoYSbOX2Eh+TRfK+s+\n> U+BpLhWteSexJ3N9aiFuR0q5jgesAzLZ9wtq1gCPI/Zu5/fgYBP4AVTiQGdXCZtv\n> m6ZDKCf+aB/fW/59/AiY44NkMDjVQieEVRiT1IPFJULWesOOdtv7UoqIpz0vDa/5\n> Jplm41j8IpTPioJKSwUi5qzSDrF7O39PC9LMXNRx/0FIuYfwqJpvF0Frc+vtPpjQ\n> llKE7945uMXz3FLSV0Orx26XPal/MuF5AYOPNk6pJfwYw7q91AUvQxVFepBa9vw=\n> =dMO9\n> -----END PGP SIGNATURE-----\n>"
            },
            {
                "author": "Lawrence Nahum",
                "date": "2015-06-18T11:41:01",
                "message_text_only": "Mike Hearn <mike <at> plan99.net> writes:\n\n> It's the only way to keep a project making progress at a reasonable pace.\n[SNIP]\n\nIf Bitcoin is managed with a linux kernel style dictator it would be \ncentralized (yet unlike linux, where people can fork without impacting others \nin Bitcoin a hard fork puts at risks everyone's bitcoins) - I hope we all \nagree there is no point in a centralized Bitcoin?\n\nIn addition and more importantly, it would put Gavin in tremendous dangers, \nboth from violent threats/blackmailing prospective as well as regulatory \nprospective - how can you not see that?\n\nI hope all this confrontation will be worth something in the end: to show \nthat Bitcoin can't be changed centrally and that it can't be changed without \nconsensus"
            },
            {
                "author": "Bryan Bishop",
                "date": "2015-06-18T14:33:24",
                "message_text_only": "On Thu, Jun 18, 2015 at 5:00 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Dude, calm down.\n>\n\nWell hold on, his concerns are real and he seems perfectly calm to me and\nothers apparently.\n\n\n> and Gavin already said long ago he wouldn't just commit something, even\n> though he has the ability to do so.\n>\n\nNobody is worried about Gavin or anyone else making commits to git\nrepositories. You'll notice that this wasn't even mentioned in the original\nemail you were replying to. Instead, the email was talking about commit\naccess, which is a property of GitHub's repositories.\n\nSo why did I say it? Because it's consistent with what I've always said:\n>\n\n(That's not a good reason.)\n\nyou cannot run a codebase like Wikipedia\n>\n\nWikipedia is a top-down centralized authority-based hierarchy. That's\npretty close to what you're proposing. That's what everyone else is\ndisagreeing with. You seem to have switched your position mid-flight...?\n\nThis is not a radical position. That's how nearly all coding projects work.\n> I have been involved with open source for 15 years and the 'single\n> maintainer who makes decisions' model is normal, even if in some large\n> codebases  subsystems have delegated submaintainers.\n\n\nThere are a number of reasons why that perspective is broken; throughout\nour conversations others have repeatedly reminded you (such as in -wizards)\nthat forking an open-source repository is not at all like a hard-fork of\nthe blockchain. Anyone can be glorious leader of any repository they want,\nthat's how open-source works. However, it's critical that bitcoin users are\nnever convinced to trust BDFLs or anything else that can be compromised.\nShould all bitcoin users suddenly start using software with BDFLs, even\nmultiple implementations with separate BDFLs, then those users can be\ntrivially compromised through their trust in those individuals and projects.\n\nThe alternative is that every developer and every user is personally\nresponsible for self-validation of the rules, checking for correctness and\nvalidity. Happy coincidence that this seems to match the strategy of\noperating the bitcoin network itself, which is to run a node that sees\neverything and validates all the transactions. Anyone is able to find an\nerror in logic or flaw in the system rules, and they should make it known\nas widely as possible so that others may evaluate the evidence and consider\nwhich solutions preserve the important properties of the system. This is\nnot a matter of majorities or minorities; these arguments should be true\nfor anyone independent of who or what they are, or what level of\nunpopularity they may have.\n\nAnything other than this is somewhat radical, and I am confused as to why\nothers have been talking about \"developer consensus\". I suspect that the\nreason why they have been saying developer consensus is because they are\ntalking about the Bitcoin Core project on GitHub at the moment. But the\ntopic switched to contentious hard-forks already, which is not a topic of\nrepositories but a topic of the blockchain and network; and in the context\nof contentious hard-forks it is clear why everyone individually must\nevaluate the rules and decide whether they the software is correct, or\nwhether changes can trivially cause catastrophic broken hard-forks. These\nlines of reasoning should be true for everyone, and not merely true for one\nperson but not another. Users, companies and developers must be aware of\nthis, even though it's different from their usual expectations of how\nsystems operate and are maintained. And it is important to be careful to\nnot misconstrue this to others because it is entirely possible to\nunintentionally convince others that traditional and centralized models are\nsafely applicable here.\n\nI realise some people think this anti-process leads to better decision\n> making. I disagree. It leads to no decision making, which is not the same\n> thing at all.\n>\n\nWell, if you're talking about the recent disputes regarding a certain patch\nto hard-fork the blockchain, a decision to not include such a patch seems\nlike the very definition of a decision.\n\nGavin and I say - there is a process, and that process is a hard fork of\n> the block chain.\n\n\nI doubt that other bitcoin software maintainers would agree with that sort\nof toxic reasoning; contentious hard-forks are basically a weapon of war\nthat you can use against any other collaborator on any bitcoin project. Why\nwould anyone want to collaborate on such a hostile project? How would they\neven trust each other?\n\n- Bryan\nhttp://heybryan.org/\n1 512 203 0507\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/94f2df5c/attachment.html>"
            },
            {
                "author": "Melvin Carvalho",
                "date": "2015-06-18T18:09:18",
                "message_text_only": "On 18 June 2015 at 12:00, Mike Hearn <mike at plan99.net> wrote:\n\n> Dude, calm down. I don't have commit access to Bitcoin Core and Gavin\n> already said long ago he wouldn't just commit something, even though he has\n> the ability to do so.\n>\n> So why did I say it? Because it's consistent with what I've always said:\n>  you cannot run a codebase like Wikipedia. Maintainers have to take part in\n> debates, and then make a decision, and anyone else who was delegated commit\n> access for robustness or convenience must then respect that decision. It's\n> the only way to keep a project making progress at a reasonable pace.\n>\n> This is not a radical position. That's how nearly all coding projects\n> work. I have been involved with open source for 15 years and the 'single\n> maintainer who makes decisions' model is normal, even if in some large\n> codebases  subsystems have delegated submaintainers.\n>\n> This is also how all my own projects are run. Bitcoinj has multiple people\n> with commit access. Regardless, if there were to be some design dispute or\n> whatever, I wouldn't tolerate the others with commit access starting some\n> kind of Wiki-style edit war in the code if they disagreed. Nor would I ever\n> expect to get my own way in other people's projects by threatening to\n> revert the maintainers changes.\n>\n> Core is in the weird position where there's no decision making ability at\n> all, because anyone who shows up and shouts enough can generate\n> 'controversy', then Wladimir sees there is disagreement and won't touch the\n> issue in question. So it just runs and runs and *anyone* with commit\n> access can then block any change.\n>\n> I realise some people think this anti-process leads to better decision\n> making. I disagree. It leads to no decision making, which is not the same\n> thing at all.\n>\n\nBicoin is not like other projects.  There are large financial stakes\ninvolved.  I was at a standards convention once and the head of standards\nat a large company joked to me:\n\n\"We know there are 6 people in the standards world that we can never buy.\nSo we just buy everyone else\".\n\nYou have to luck out in a huge way to get a person like that running your\nproject.  Linux has done.  Id say bitcoin has been lucky there too.  But\nhave a look at other projects, have a look at the alts, the *last* thing\nyou want is a dictator in may cases.\n\nUltimately bitcoin is a ledger based on consensus.  There are 3 branches,\nthe miners, the protocol and the market.  They all play a role in\nregulating bitcoin and generally on the conservative side (which I think is\na good thing).  Whatever your view on the 20MB change, it's not a\n*conservative* approach, which is the approach that has served bitcoin very\nwell so far.\n\nSo bitcoin is not like other open source projects, and that's probably\nquite a good thing.\n\n\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/80179ef4/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-18T22:10:42",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI maintain that you should apologize to those who traverse this list.\n What you are saying is digging yourself a deeper hole and is not\nmerely embarrassing but is crossing a threshold in which you have used\nwords, albeit subtly, to attack a community.\n\nIf you refuse to apologize, I get it.  You have not apologized thus\nfar, and pressing for an apology is unlikely to get an (authentic)\none.  But then, you should voluntarily step back and let others do the\nhard work of coming to the consensus that you seem to think is\nimpossible to accomplish based on how bitcoin is run.\n\nI believe this matter will be resolved, but not with the \"help\" of\nthose who make threatening statements (and who are unable to apologize\nfor having made them).\n\n- -O\n\nOn 06/18/2015 03:00 AM, Mike Hearn wrote:\n> Dude, calm down. I don't have commit access to Bitcoin Core and\n> Gavin already said long ago he wouldn't just commit something, even\n> though he has the ability to do so.\n> \n> So why did I say it? Because it's consistent with what I've always\n> said: you cannot run a codebase like Wikipedia. Maintainers have to\n> take part in debates, and then make a decision, and anyone else who\n> was delegated commit access for robustness or convenience must then\n> respect that decision. It's the only way to keep a project making\n> progress at a reasonable pace.\n> \n> This is not a radical position. That's how nearly all coding\n> projects work. I have been involved with open source for 15 years\n> and the 'single maintainer who makes decisions' model is normal,\n> even if in some large codebases  subsystems have delegated\n> submaintainers.\n> \n> This is also how all my own projects are run. Bitcoinj has\n> multiple people with commit access. Regardless, if there were to be\n> some design dispute or whatever, I wouldn't tolerate the others\n> with commit access starting some kind of Wiki-style edit war in the\n> code if they disagreed. Nor would I ever expect to get my own way\n> in other people's projects by threatening to revert the maintainers\n> changes.\n> \n> Core is in the weird position where there's no decision making\n> ability at all, because anyone who shows up and shouts enough can\n> generate 'controversy', then Wladimir sees there is disagreement\n> and won't touch the issue in question. So it just runs and runs and\n> /anyone/ with commit access can then block any change.\n> \n> I realise some people think this anti-process leads to better\n> decision making. I disagree. It leads to no decision making, which\n> is not the same thing at all.\n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVg0HiAAoJEGxwq/inSG8CXOwIAKSGRJPtSx+untgMERwE7lW7\n9p0gWz4jvKhyO+RrGPXlofckvp4Fp/7Yxa+TDLcXbzGi6OesX9yIyN7e06LJW4DP\nh7V2PwzS49ZyB/krd03HjvWMFnhoGy7zB7M1okq5myIvx+h1htX9TirNbDl7PU9Z\nSWyNNw+GXPsIV/xuPu81LP5GrR3gIxwwhhopOq2qcm08AUiuIJ8EA31mT2ZgwMWB\nRxrnktFRzMbW2fD7Z7njTz1gjw1duPyGApJ+xpqtcjjS2idPNuw1nESZTCE3+TwG\nDk1AKmYt8TvZzFWyo/0ly7vYFFW27Yh7SC3oeDJBoWkvySuIFrevux7ekfKxPOc=\n=wc2m\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Concerns Regarding Threats by a Developer to Remove Commit Access from Other Developers",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Benjamin",
                "Milly Bitcoin",
                "Brooks Boyd",
                "Wladimir J. van der Laan",
                "odinn",
                "Mike Hearn",
                "Owen Gunden",
                "Jorge Tim\u00f3n",
                "Gregory Maxwell",
                "Ross Nicoll",
                "Matt Corallo",
                "Mark Friedenbach",
                "Melvin Carvalho",
                "Jeff Garzik",
                "Bryan Bishop",
                "Pieter Wuille",
                "Matt Whitlock",
                "justusranvier at riseup.net",
                "Gavin Andresen",
                "Eric Lombrozo",
                "Lawrence Nahum",
                "Alex Morcos",
                "Chris Pacia",
                "GC"
            ],
            "messages_count": 60,
            "total_messages_chars_count": 146133
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin core 0.11.0 release candidate 2 available",
        "thread_messages": [
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-18T08:56:37",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nHello,\n\nI've just uploaded Bitcoin Core 0.11.0rc2 executables to:\n\nhttps://bitcoin.org/bin/bitcoin-core-0.11.0/test/\n\nThe source code can be found in the source tarball or in git under the tag 'v0.11.0rc2'\n\nPreliminary release notes can be found here:\n\nhttps://github.com/bitcoin/bitcoin/blob/0.11/doc/release-notes.md\n\nChanges since rc1:\n- - #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system\n- - #5985 `37b4e42` Fix removing of orphan transactions\n- - #6221 `6cb70ca` Prune: Support noncontiguous block files\n- - #6256 `fce474c` Use best header chain timestamps to detect partitioning\n- - #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n- - #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n- - #6285 `ef1d506` Fix scheduler build with some boost versions.\n- - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n- - #6276 `c9fd907` Fix getbalance * 0\n- - #6264 `94cd705` Remove translation for -help-debug options\n- - #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs\n\nThanks to everyone that participated in development, translation or in the gitian build process,\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVgoeFAAoJEHSBCwEjRsmmkggH/3jyzuPXDpUpCpfzyDZDW4CO\nGRqIZwCa8vY9Gv9T0mX5jLXOfXpPAMyzWnCz2Eqh0hRLHK8WzObPqdX+3KLaaoO/\nrOroDCG7AUZB4GaodSZURqJm8RmnNtWNckK7GBwXbZ7qNZrkpRNUh1z2JsatZdum\nbUTBHX6Z9jW4HCmMZNn5lv5hRwu3XzFSi1uu9VyleVnIvdSbyjMhfjKn1VG0Rcnw\nkTrCUgJccMP0htNGpIPni14PTak16ULs7KXMPNtpgB/lo/4LhDLGTivXL5ntjQXX\ngQarGdh9eCqazHyIMSHTj4eO3GvLNUCHp3wM6YTiEhABkkWL3wRwn8yqMRf0EWE=\n=GCM7\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin core 0.11.0 release candidate 2 available",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Wladimir J. van der Laan"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1678
        }
    },
    {
        "title": "[Bitcoin-development] Video summarizations of blocksize issues?",
        "thread_messages": [
            {
                "author": "grarpamp",
                "date": "2015-06-18T11:36:57",
                "message_text_only": "On Thu, Jun 18, 2015 at 4:54 AM, odinn <odinn.cyberguerrilla at riseup.net> wrote:\n> Recently I saw the following video:\n> https://www.youtube.com/watch?v=8JmvkyQyD8w&t=47m58s\n\nFor those loosely following the technical issues from outside development\ncircles, but who may be pressed into a voting/adoption type position (miners,\nusers, investors)... is there a parallel presentation of the concepts and\narguments from the other side (both, or the various, sides) that they\ncan refer to?\nSomeplace where they are collated and presented? A wiki perhaps?\nAre these even valid or necessary questions?"
            }
        ],
        "thread_summary": {
            "title": "Video summarizations of blocksize issues?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "grarpamp"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 596
        }
    },
    {
        "title": "[Bitcoin-development] Ninki Wallet view on blocksize debate",
        "thread_messages": [
            {
                "author": "Team Ninki",
                "date": "2015-06-18T13:14:01",
                "message_text_only": "Hi,\n\nI am the developer for Ninki Wallet which has recently been listed on\nbitcoin.org.\n\nFWIW I support the approach of the existing bitcoin core dev team having\nobserved their work for the last year and their attitude towards consensus,\na clear process for change and discussion of changes.\n\nI think, like everyone else, that the block size limit will have to be\nincreased in the future, but I don't like to see this done in a gung-ho way\nwithout an established consensus on how bitcoin will scale *with*\ndecentralization and maintain it's key value property.\n\nI would not support any group that attempts to fork the blockchain in the\nmanner proposed using XT. I strongly urge Gavin to withdraw from this\nstandoff and work with the bitcoin core devs via the existing and\nsuccessful bip process.\n\nThanks\n\nBen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/a54e8d57/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-18T14:53:46",
                "message_text_only": "Ben,\n\nHow does your wallet calculate the fee that should be paid to miners? Do\nthey automatically adjust when transactions take a long time to be\nconfirmed? And how does it respond when transactions are not mined\nsuccessfully, such as when blocks are full?\n\nI strongly urge Gavin to withdraw from this standoff and work with the\n> bitcoin core devs via the existing and successful bip process.\n>\n\nThe BIP process has not resulted in any hard forks, so this is a little\ndifferent. While I don't like M&G's proposed solution of convincing miners\nand services to switch to Bitcoin-XT, I recognize that it is done out of a\nsense of urgency. These types of changes take a long time to roll out, and\nwe should start them before it is too late.\n\nThis whole debate comes down to: what is more risky, a consensus hard fork\nor letting bitcoin exceed its imposed capacity limits? The former could\nresult in many services not being compatible and even loss of funds. The\nlatter could result in software failures, instability, and inability to\ntransact: essentially, what bitcoin is supposed to be good at. Both are\ndangerous and could result in a significant loss of public confidence.\n\nSomething needs to be done, that's for sure. In the short term, I think we\nneed to do one of two things:\n\n   1. All miners and wallet developers need to upgrade to support\n   first-safe RBF, to allow for double spending one's own transactions when\n   they lack sufficient fees to merit confirmations. Wallets also need to\n   randomly request transactions from blocks to see what kind of fees are\n   being paid to get confirmations, so that fees can be paid dynamically\n   instead of with hard-coded values.\n   2. We can implement either Gavin's or Jeff Garzik's proposal to change\n   the consensus parameters around the block size limit.\n\nSo Ben, if really don't think that going with #2 is the right way to go\n(even though everyone agrees that we will need to increase the block size\nlimit eventually anyway, why not now?), then I hope you start to work hard\non implementing #1 so that your wallet software can handle hitting capacity\nlimits gracefully.\n\nBest,\nStephen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/d7170921/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Ninki Wallet view on blocksize debate",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Stephen Morse",
                "Team Ninki"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 3318
        }
    },
    {
        "title": "[Bitcoin-development] FYI - Mailing List Move Preparations",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-19T04:57:08",
                "message_text_only": "After discussions in #bitcoin-dev in the past day we decided it would be a\nbad idea to link the old and new lists in some way during a transition\nperiod.  We decided we are better off announcing the switchover very soon,\nand after that point all posts to the old list will be rejected with a\nmessage telling them where to find the new list.\n\nThe proposed switchover will be on Tuesday, June 23rd, 2015.  We will know\nan exact scheduled time for the move probably tomorrow.  At the time of the\nswitchover, the old list will reject all messages, archives will be\nexported and imported into the new list server, then the new list will be\nopened.\n\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\nPlease subscribe now and feel free to make test posts.  We are testing\nconfiguration options to fix some long standing spam filter-related\nissues.  Any posts to the new list prior to the final switchover will be\nwiped from the archives.\n\nIf you have opinions on this, please join us in Freenode #bitcoin-dev and\ntalk to warren.\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/b15b48b3/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-19T05:02:35",
                "message_text_only": "BTW, if you are posting from a less popular mail server your initial post\nto the new list may be delayed by 5+ minutes due to greylisting.  If your\nsending SMTP server is behaving properly then posts after the first should\ngo through without delay.\n\nWarren\n\nOn Thu, Jun 18, 2015 at 6:57 PM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> After discussions in #bitcoin-dev in the past day we decided it would be a\n> bad idea to link the old and new lists in some way during a transition\n> period.  We decided we are better off announcing the switchover very soon,\n> and after that point all posts to the old list will be rejected with a\n> message telling them where to find the new list.\n>\n> The proposed switchover will be on Tuesday, June 23rd, 2015.  We will know\n> an exact scheduled time for the move probably tomorrow.  At the time of the\n> switchover, the old list will reject all messages, archives will be\n> exported and imported into the new list server, then the new list will be\n> opened.\n>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> Please subscribe now and feel free to make test posts.  We are testing\n> configuration options to fix some long standing spam filter-related\n> issues.  Any posts to the new list prior to the final switchover will be\n> wiped from the archives.\n>\n> If you have opinions on this, please join us in Freenode #bitcoin-dev and\n> talk to warren.\n>\n> Warren Togami\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/413e1001/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T05:28:44",
                "message_text_only": "Thanks for setting this up, Warren!\n\n\nOn Thu, Jun 18, 2015 at 9:57 PM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> After discussions in #bitcoin-dev in the past day we decided it would be a\n> bad idea to link the old and new lists in some way during a transition\n> period.  We decided we are better off announcing the switchover very soon,\n> and after that point all posts to the old list will be rejected with a\n> message telling them where to find the new list.\n>\n> The proposed switchover will be on Tuesday, June 23rd, 2015.  We will know\n> an exact scheduled time for the move probably tomorrow.  At the time of the\n> switchover, the old list will reject all messages, archives will be\n> exported and imported into the new list server, then the new list will be\n> opened.\n>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> Please subscribe now and feel free to make test posts.  We are testing\n> configuration options to fix some long standing spam filter-related\n> issues.  Any posts to the new list prior to the final switchover will be\n> wiped from the archives.\n>\n> If you have opinions on this, please join us in Freenode #bitcoin-dev and\n> talk to warren.\n>\n> Warren Togami\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/28a6908f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "FYI - Mailing List Move Preparations",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr.",
                "Jeff Garzik"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 4634
        }
    },
    {
        "title": "[Bitcoin-development] improving development model (Re: Concerns Regarding Threats by a Developer to Remove Commit Access from Other Developers",
        "thread_messages": [
            {
                "author": "Dr Adam Back",
                "date": "2015-06-19T09:22:35",
                "message_text_only": "Nicely put Eric.  Relatedly my initial experience with Bitcoin in\ntrying to improve bitcoin in fungibility, privacy & decentralisation,\nI found some interesting things, like Confidential Transactions (that\nGreg Maxwell has now optimised via a new generalisation of the\nhash-ring signature construct he invented and with Pieter made part of\nthe alpha side-chain release) and a few other things.\n\nAs I went then to discuss and learn: a) what are the characteristics\nneeded for inclusion (clearly things need to fit in with how things\nwork, not demand massive rewrites to accommodate and to not conflict\nwith existing important design considerations), so that I could make\nproposals in a practically deployable way, and then b) the\npracticality of getting a proposed change that say people found\nclearly useful.  Then I bumped into the realisation that this is\nactually really high risk to change, and consensus critical coding\nsecurity is very complex and there are some billion $ resting on\ngetting this rigidly correct under live conditions, so that deployment\nmust be cautious and incremental and rigorously tested.\n\nSo then I focussed instead on question of whether we could improve\nbitcoins development model: how could we allow bitcoin to more rapidly\nand agilely test beta features or try novel things to see how they\nwould work (as someone might do in a feature branch of a normal FOSS\nproject, to code and test a proposal for later addition), but with\ncriteria we want real bticoins so there is economic incentive as that\nis actually part of the bitcoin protocol so you've not validated\nsomething unless you're run it in a real network with money.  I was\nhypothesising therefore we need a way to run bitcoin beta network.\nThere's a thread about this here stretching back to may 2013.\n\nOr similarly to run in parallel kind of subnets with different\ntrade-offs or features that are not easy to merge or high risk to\napply all at once to bitcoin with the inflight billions in capital and\ntransactions on it.\n\nAnyway I thought that was a productive line of thinking, and generally\npeople seemed to agree and problem statement of 2wp: then 1wp\nmechanism was proposed and then Greg extracted a concept from his\nSNARK witness idea (which encapsulates a snark variant of a 2wp) but\nnow without snarks, then 2wp a conservative crypto 2wp proposal was\nmade.  This was dec 2013 I think on wizards channel.  The sidechain\nalpha release now makes this a (alpha quality and so testnet coin, and\nwithout DMMS peg) reality.  I could imagine others who have a desire\nto try things could elect to do so and copy that patch-set and make\nmore side-chains.\n\nThis is inherently non-coercive because you largely do not directly\nchange bitcoin by doing this, people elect to use which ever chain\nsuits them best given their usecase.  If the sidechain is really early\nstage it should have test-net coins in it not bitcoins in it, but\nstill its caveat emptor kind of beta chain, with good testing but\nnon-trivial to soft-fork on bitcoin but managable refactor a sidechain\nto integrate something novel or try some existing feature (like the\nsegregated witness which robustly addresses malleability for example)\n\nSo I dont want to say side-chains are some magical solution to\neverything, but its a direction that others may like to consider for\nhow to test or even run alternative trade-offs bitcoin side-chains in\nparallel.  For example it could hypothetically allow 10MB blocks on\none chain and 100kB blocks on the main chain.  People say complexity,\nscary.  Sure I am talking longer term, but we have to also make\nconcrete forward progress to the future or we'll be stuck here talking\nabout perilously large constant changes in 5 years time!\n\nThis approach also avoids the one-size fits all problem.\n\nExtension-blocks are an in-chain sub-net type of thing that has a\nsecurity boost by being soft-fork enforced (relative to side-chains\nwhich are looser coupled and so more flexible relative to the simplest\nform of extension-blocks)\n\nAdam\n\nOn 19 June 2015 at 07:59, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> I don\u2019t think the issue is between larger blocks on the one hand and things\n> like lightning on the other - these two ideas are quite orthogonal.\n>\n> Larger blocks aren\u2019t really about addressing basic scalability concerns -\n> for that we\u2019ll clearly need architectural and algorithmic improvements\u2026and\n> will likely need to move to a model where it isn\u2019t necessary for everyone to\n> validate everyone else\u2019s latte purchases. Larger blocks might, at best, keep\n> the current system chugging along temporarily - although I\u2019m not sure that\u2019s\n> necessarily such a great thing\u2026we need to create a fee market sooner or\n> later, and until we do this, block size issues will continue to crop up\n> again and again and economic incentives will continue to be misplaced. It\n> would be nice to have more time to really develop a good infrastructure for\n> this\u2026but without real market pressures, I\u2019m not sure it will happen at all.\n> Necessity is the mother of invention, after all. The question is how to\n> introduce a fee market smoothly and with the overwhelming consensus of the\n> community - and that's where it starts to get tricky.\n>\n> \u2014\u2014\n>\n> On a separate note, as several others have pointed out in this thread (but I\n> wanted to add my voice to this as well), maintenance of source code\n> repositories is NOT the real issue here. The bitcoin/bitcoin project on\n> github is a reference implementation of the Satoshi protocol\u2026but it is NOT\n> the only implementation\u2026and it wasn\u2019t really meant to be. Anyone is free to\n> fork it, extend it, improve upon it, or create an entirely new network with\n> its own genesis block\u2026a separate cryptoledger.\n>\n> The real issue regarding XT is NOT the forking of source code nor issues\n> surrounding commit access to repositories. The real issue is the *forking of\n> a cryptoledger*.\n>\n> Open source repositories are meant to be forked - in fact, it is often\n> encouraged. It is also encouraged that improvements be submitted for review\n> and possibly merged back into the parent repository\u2026although this doesn\u2019t\n> always happen.\n>\n> However, we currently have no mechanisms in place to support merging of\n> forked cryptoledgers. Software, and most other forms of digital content,\n> generally increases in value with more copies made. However, money is\n> scarce\u2026by design. The entire value of the assets of a decentralized\n> cryptoledger rests on the assumption that nobody can just unilaterally fork\n> it and change the rules. Yes, convincing other people to do things a certain\n> way is HARD\u2026yes, it can be frustratingly slow\u2026I\u2019ve tried to push for many\n> changes to the Bitcoin network\u2026and have only succeeded a very small number\n> of times. And yes, it\u2019s often been quite frustrating. But trying to\n> unilaterally impose a change of consensus rules for an existing cryptoledger\n> sets a horrendous precedent\u2026this isn\u2019t just about things like block size\n> limits, which is a relatively petty issue by comparison.\n>\n> It would be very nice to have a similar workflow with consensus rule\n> evolution as we do with most other open source projects. You create a fork,\n> demonstrate that your ideas are sound by implementing them and giving others\n> something that works so they can review them, and then merge your\n> contributions back in. However, the way Bitcoin is currently designed, this\n> is unfortunately impossible to do this with consensus rules. Once a fork,\n> always a fork - a.k.a. altcoins. Say what you will about how most altcoins\n> are crap - at least most of them have the decency of starting with a clean\n> ledger."
            },
            {
                "author": "Dr Adam Back",
                "date": "2015-06-19T10:45:57",
                "message_text_only": "A lot of people think a layer2 is needed, that has a higher\n(algorithmic) scale in use of layer1 block-space but preserves\nfunctionality and uplifts security from layer1.  An example would be\nlightning or similar.\n\nBut there are many things that could be done.  Pure offchain is a weak\nform of layer2.  Its running today and maybe its handling 90-99% range\nof all transactions right now (mostly in exchanges for example).  This\nlayer can be incrementally hardened.  It can also have standardised\nAPIs across vendors of custodians, and opt-in support of those APIs in\nwallets.  This would provide a convenience choice.  Greenaddress also\nfor low-mid assurances solves the unconfirmed transactions. It's\nprobably not reasonable to expect bitcoin directly solve fast\nunconfirmed transactions.   Probably intermediate configurations in\ncomplexity somewhere between greenaddress (2 of 2 + timelocked 1 sig)\nand lightning may exist also.  The internet doesnt stop at layer1.\n\n(Which would then leave people who are uninterested in changing client\nsoftware to handle layer2, as \"layer1 will always be enough die-hards\"\n(in the refusing the future and facing the O(n^2) scaling wall or\ncentralisation death with perplexing optimism :)  Ok, not so\nconstructive but maybe a gentle reminder that it is not constructive\nin the reverse direction either to throw around often false\ncharacterisations.  We're here now to improve bitcoin so lets do that.\n\nWhat I said here seemed like it maybe subject to misinterpretation so\nto clarify:\n\nOn 19 June 2015 at 11:22, Dr Adam Back <adam at cypherspace.org> wrote:\n> For example it could hypothetically allow 10MB blocks on\n> one chain and 100kB blocks on the main chain.  People say complexity,\n> scary.  Sure I am talking longer term, but we have to also make\n> concrete forward progress to the future or we'll be stuck here talking\n> about perilously large constant changes in 5 years time!\n\nI should clarify that I meant there I was assuming we do one increase\nwithin the next 12 months frame that gives buffer for 5 years r&d to\nimprove things and build layer2.\n\nBut if we do no R&D on layer2, and insist that clients can never\nchange to become layer2 aware, and layer2 is too hard etc then our\nrisk would be we'd be back in the discussion of kicking the can afresh\nagain in some years with some even more centralising size change.\n\nSure we should make the transition and introduction to layer2 and an\nintermediate crunch smoother, but \"20MB now or else\" isn't really\nhelping.  It did help get the conversation revived, but at this point\nits a hindrance.  Seriously a big hindrance.  No offence but please\nfind a way to gracefully stop and rejoin the constructive process.\nYou can disagree on factors and points and be collaborative others\ndisagree frequently and have done productive work cordially for years\nunder the BIP process.\n\n\nAbout scaling again:\n\nHere is what I said before in my TL;DR post about my thoughts on how\nwe would start on throughput short-term to have space to do layer2\ndevelopment.\n\n> I think almost everybody is on board with a combination plan:\n>\n> 1. work to improve decentralisation (specific technical work already\n> underway, and education)\n> 2. create a plan to increase block-size in a slow fashion to not cause\n> system shocks (eg like Jeff is proposing or some better variant)\n> 3. work on actual algorithmic scaling\n>\n> In this way we can have throughput needed for scalability and security\n> work to continue.\n>\n> As I said you can not scale a O(n^2) broadcast network by changing\n> constants, you need algorithmic improvements.\n>\n> People are working on them already.  All of those 3 things are being\n> actively worked on right now, and in the case of algorithmic scaling\n> and improve decentralisation have been worked on for months.\n\n\nBtw I wonder if Gavin or Mike would be willing to answer another\nquestion I forgot from my TL;DR post which was:\n\n- Did you accept payment from companies to lobby for 20MB blocks?  Do\nyou consider that something appropriate to publicly disclose if so?\nDo you consider that user rights should come above or below company\ninterests in Bitcoin?\n\n\nFWIW on pondering that last question \"should user rights come above or\nbelow company interests\" I think my view of the guiding principle is\nstarkly clear to me: that user rights should be the primary thing to\noptimise for.  Businesses are providing service to users, their\ninterests are secondary in so far as if they are enabled to provide\nbetter service thats good.\n\nBitcoin is a user p2p currency, with a social contract and a strong\nuser ethos.  Importing and forcing company interests would likely be\nthe start of a slippery slope towards an end to Bitcoin.   If we allow\nbusiness rights to be paramount it seems likely that we will end back\nat the status quo as bitcoin payment processors grow, conglomerate and\nbecome paypal/bank like or actual banks and then their interests and\nexposures are the same as the banks and they'll want to import their\nbusiness models into Bitcoin and erode the user ethos features that\nare actually what gives Bitcoin any meaning and value in the majority.\n\nThat wont be good for the companies either, but they may not see that\nuntil they've killed it, many companies operate on a1 or 2 year\ntime-horizon.  They may say screw layer2, I have a runway and I need\nmicropayments to the wazoo and I dont have the dev resources for that.\nThats a conflict and the resolution isn't to override bitcoin's\nmeaning, but rather that they should do it at layer2 (eg changeTip\ndoes this.. simple trustme layer2 which is OK given the amounts).  The\nworld needs a neutral social contract enforcing layer1.  Layer1 must\nbe neutral and free from policy and dispute resolution otherwise\ndispute resolution costs are imported and you lose viral open\ninnovation growth vector the internet benefitted from.  Jurisdiction\nand regulation related things belong at the interfaces and at the\npayment protocol layer in my view.  (If thats not obvious to some\nlurkers I elaborate on that argument  amongst other things here:\nhttps://www.youtube.com/watch?v=3dAdI3Gzodo )\n\nAdam\n\nps the O(n^2) misunderstanding of varying assumptions was explored at\nlength on reddit\nhttp://www.reddit.com/r/Bitcoin/comments/3a5f1v/mike_hearn_on_those_who_want_all_scaling_to_be/csboslb\nif people are interested in that topic.  I do not think O( t*n ) is a\nuseful metric because its predictive but only of the obvious and\ninternal, the useful predictive thing is resources vs users (for\nnodes/users or whole-system)."
            },
            {
                "author": "Bryan Bishop",
                "date": "2015-06-19T11:35:28",
                "message_text_only": "On Fri, Jun 19, 2015 at 5:45 AM, Dr Adam Back <adam at cypherspace.org> wrote:\n\n> payment protocol layer in my view.  (If thats not obvious to some\n> lurkers I elaborate on that argument  amongst other things here:\n> https://www.youtube.com/watch?v=3dAdI3Gzodo )\n>\n\nSomeone might find it more convenient to consume that in the form of text\ninstead:\nhttp://diyhpl.us/wiki/transcripts/bitcoin-adam3us-fungibility-privacy/\n\n- Bryan\nhttp://heybryan.org/\n1 512 203 0507\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/5f0d158d/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T12:02:40",
                "message_text_only": "> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org> wrote:\n> \n> That wont be good for the companies either, but they may not see that\n> until they've killed it, many companies operate on a1 or 2 year\n> time-horizon.  They may say screw layer2, I have a runway and I need\n> micropayments to the wazoo and I dont have the dev resources for that.\n\nExactly, Adam.\n\nExcept, I think the genie is out of the bottle - these ideas are too powerful for them to be killed forever. They will probably survive even if this scenario comes to pass\u2026but in a different network under a different name\u2026and Bitcoin will be relegated to the history books and walls of museums.\n\nMost of the potential brainpower available on this Earth to make serious, profound contributions to this movement haven\u2019t even begun to touch it. Just because you happen to run a Bitcoin startup right now\u2026even if you\u2019ve received millions of dollars in funding\u2026don\u2019t think that the whole world has low standards and is lazy! Someone WILL eventually build something better than we can presently imagine.\n\nFirst mover advantage and the network effect are vastly overrated. At the risk of stating cliches, the Mac came before the Windows PC\u2026Yahoo! came before Google\u2026MySpace came before Facebook\u2026Bitcoin came before <we don\u2019t know yet>.\n\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f58c5233/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f58c5233/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T12:02:40",
                "message_text_only": "> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org <mailto:adam at cypherspace.org>> wrote:\n> \n> That wont be good for the companies either, but they may not see that\n> until they've killed it, many companies operate on a1 or 2 year\n> time-horizon.  They may say screw layer2, I have a runway and I need\n> micropayments to the wazoo and I dont have the dev resources for that.\n\nExactly, Adam.\n\nExcept, I think the genie is out of the bottle - these ideas are too powerful for them to be killed forever. They will probably survive even if this scenario comes to pass\u2026but in a different network under a different name\u2026and Bitcoin will be relegated to the history books and walls of museums.\n\nMost of the potential brainpower available on this Earth to make serious, profound contributions to this movement haven\u2019t even begun to touch it. Just because you happen to run a Bitcoin startup right now\u2026even if you\u2019ve received millions of dollars in funding\u2026don\u2019t think that the whole world has low standards and is lazy! Someone WILL eventually build something better than we can presently imagine.\n\nFirst mover advantage and the network effect are vastly overrated. At the risk of stating cliches, the Mac came before the Windows PC\u2026Yahoo! came before Google\u2026MySpace came before Facebook\u2026Bitcoin came before <we don\u2019t know yet>.\n\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bf5873c0/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bf5873c0/attachment.sig>"
            },
            {
                "author": "Marcel Jamin",
                "date": "2015-06-19T12:48:00",
                "message_text_only": "> At the risk of stating cliches, the Mac came before the Windows PC\u2026Yahoo!\ncame before Google\u2026MySpace came before Facebook\u2026\n\nAnd TCP/IP came before... oh wait...\n\n2015-06-19 14:02 GMT+02:00 Eric Lombrozo <elombrozo at gmail.com>:\n\n>\n> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org> wrote:\n>\n> That wont be good for the companies either, but they may not see that\n> until they've killed it, many companies operate on a1 or 2 year\n> time-horizon.  They may say screw layer2, I have a runway and I need\n> micropayments to the wazoo and I dont have the dev resources for that.\n>\n>\n> Exactly, Adam.\n>\n> Except, I think the genie is out of the bottle - these ideas are too\n> powerful for them to be killed forever. They will probably survive even if\n> this scenario comes to pass\u2026but in a different network under a different\n> name\u2026and Bitcoin will be relegated to the history books and walls of\n> museums.\n>\n> Most of the potential brainpower available on this Earth to make serious,\n> profound contributions to this movement haven\u2019t even begun to touch it.\n> Just because you happen to run a Bitcoin startup right now\u2026even if you\u2019ve\n> received millions of dollars in funding\u2026don\u2019t think that the whole world\n> has low standards and is lazy! Someone WILL eventually build something\n> better than we can presently imagine.\n>\n> First mover advantage and the network effect are vastly overrated. At the\n> risk of stating cliches, the Mac came before the Windows PC\u2026Yahoo! came\n> before Google\u2026MySpace came before Facebook\u2026Bitcoin came before <we don\u2019t\n> know yet>.\n>\n>\n> - Eric Lombrozo\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/78d7b5cf/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-19T13:43:14",
                "message_text_only": "Hi Adam,\n\nI am still confused about whether you actually support an increase in the\nblock size limit to happen right now. As you agree that this \"layer 2\" you\nspeak of doesn't exist yet, and won't within the next 10-12 months (do you\nagree that actually?), can you please state clearly that you will support\nGavin's patch once posted? As Gavin's work takes some ideas from BIP100 but\ndoes/soon will have some code associated with it.\n\nBut if we do no R&D on layer2, and insist that clients can never\n> change to become layer2 aware, and layer2 is too hard etc\n>\n\nI think there's been some confusion here.\n\nI, at least, have never argued that other systems can *never* happen. Never\nis a long time, and I myself maintain a payment channels implementation.\nThese things have their place.\n\nThe argument is solely around the need to raise the block size *now* and\nnot allow the existing layer 1 to gum up and fall over.\n\nIf Stroem or Lightning or other block chains or Coinbase or secure hardware\ntokens or whatever take off and people start moving bitcoins around that\nway - fine. If they're choosing it of their own free will I have no issue\nwith that, nor does anyone else, I suspect.\n\nHowever you don't seem fully confident that people actually will choose\nwhatever is being cooked up as \"layer 2\", if left to their own devices.\nIndeed it's impossible for anyone to know that, as no \"layer 2\" actually\nexists. Any such implementation could have all sorts of flaws that lead to\nit not gaining traction.\n\n\n> No offence but please find a way to gracefully stop and rejoin the\n> constructive process. You can disagree on factors and points and be\n> collaborative others disagree frequently and have done productive work\n> cordially for years  under the BIP process.\n\n\nAs you know from the discussion with myself and Gavin a few days ago on\nIRC, neither of us believe any such constructive process exists. There is\nanother thread to discuss the lack of such a process.\n\n\n> - Did you accept payment from companies to lobby for 20MB blocks?\n\n\nOh please. Conspiracy theories, now, Adam? My position has been consistent\nfor years. I don't care whether the figure is 20 or something else (looks\nlike it'll be lucky 8 instead), but I have always been clear that the limit\nmust rise.\n\nBut for the avoidance of doubt: the answer is no.\n\nGavin is paid by MIT. The MIT deal gives Gavin complete independence.\n\nI am currently self employed and most of income comes from a client that is\nactually interested in Lighthouse. Luckily they have given me some leeway\nto do general Bitcoin development as well, which this business falls under.\nI would *much* rather be working on Lighthouse than this, and so would they.\n\nBut seeing as you've gone there - let me flip this around. Blockstream has\na very serious conflict of interest in this situation. I am by no means the\nfirst to observe this. You are building two major products:\n\n   1. Sidechains, a very complex approach to avoid changing the Bitcoin\n   consensus rules to add new features.\n   2. Lightning, a so-called \"layer two\" system for transaction routing\n\nNo surprise, the position of Blockstream employees is that hard forks must\nnever happen and that everyone's ordinary transactions should go via some\nnew network that doesn't yet exist.\n\nThe problem is that rather than letting the market decide between ordinary\nBitcoin and Lightning, you are attempting to strangle the regular Bitcoin\nprotocol because you don't trust people to spontaneously realise that they\nshould be using your companies products.\n\nI know that many of you guys had these views before joining Blockstream. I\nam not saying you are being paid to have views you didn't previously have.\nI realise that birds of a feather flock together.\n\nRegardless, that conflict of interest DOES exist, whether you like it or\nnot, because if you succeed in running Bitcoin out of capacity your own\ncompany stands to benefit from selling consulting and services around your\npreferred solutions.\n\nWith respect to user rights: all the polling done so far suggests users who\nare paying attention strongly support increasing the block size. For\nexample:\n\nQ: \"Should the bitcoin block size be raised in the next two years\"\nA: 92% yes\n\nhttp://www.poll-maker.com/results329839xee274Cb0-12#tab-2\n\nAdditionally, many Bitcoin users have explicitly delegated handling the\ntechnical details to someone else, like a payment processor or their wallet\ndevelopers. Those people are nearly all sure that the block size limit\nshould rise too.\n\nSo please don't engage in idle speculation about \"users vs companies\". They\naren't some kind of opposing forces. Companies live for their users, and\nmany of those companies were formed by long time Bitcoin users.\n\nAnd finally, the Bitcoin social contract is not defined by whatever random\nstate the code was in at the time Gavin decided to focus on research. Both\nGavin and I have been working on Bitcoin longer than you, Gregory or Peter\nTodd. The social contract was and still is defined by the project's\nfounding vision - written down in words.\n\nHeck, if Satoshi had spent another hour or two on his original size limiter\npatch this entire dispute would never have happened. He'd have put in some\nkind of automatic timeout or limit riser because the plan was to remove it\nall along, and then it'd be you guys arguing for putting a limit in place,\nGavin would object, it'd be controversial and nothing would happen. But\nSatoshi never anticipated this bizarre attempt to turn the project into\nsomething else and so figured he'd just remove it himself later. Too bad.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/9daed28f/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-20T02:59:25",
                "message_text_only": "On 6/19/2015 6:43 AM, Mike Hearn wrote:\n> No surprise, the position of Blockstream employees is that hard forks\n> must never happen and that everyone's ordinary transactions should go\n> via some new network that doesn't yet exist.\n\nIf my company were working on spiffy new ideas that required a hard fork\nto implement, I'd be rather dismayed to see the blocksize hard fork\nhappen *before those ideas were ready*.\n\nBecause then I'd eventually have to convince people that those ideas\nwere worth a hard fork all on their own.  It would be much easier to\nconvince people to roll them in with the already necessary blocksize\nhard fork, if that event could be delayed.\n\nAs far as I know, Blockstream representatives have never said that\nwaiting for other changes to be ready is a reason to delay the blocksize\nhard fork.  So if this were the real reason, it would suggest they have\nbeen hiding their true motives for making such a fuss about the\nblocksize issue.\n\nI've got no evidence at all to support thoughts like this... just the\nparanoid mindset that seems to infect a person who gets involved in\nbitcoin.  But the question is every bit as valid as Adam's query into\nyour motives."
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-19T16:05:38",
                "message_text_only": ">- Did you accept payment from companies to lobby for 20MB blocks? Do \nyou consider that something appropriate to publicly disclose if so? Do \nyou consider that user rights should come above or below company \ninterests in Bitcoin? FWIW on pondering that last question \"should user \nrights come above or below company interests\" I think my view of the \nguiding principle is starkly clear to me: that user rights should be the \nprimary thing to optimise for. Businesses are providing service to \nusers, their interests are secondary in so far as if they are enabled to \nprovide better service thats good. Bitcoin is a user p2p currency, with \na social contract and a strong user ethos. Importing and forcing company \ninterests would likely be the start of a slippery slope towards an end \nto Bitcoin.\n\nI always thought is was the exact opposite.  I thought it was expected \nthat the only incentive for developers (other than increasing the value \nof coins they hold) is to lobby for changes that will benefit the \ncompanies that fund them.  That is the only way you are going to get \nmore full time developers on board.  It focuses their efforts on  \nproducts and services people want rather than some sort philosophical \nagenda that may be unrealistic.  The notion that large numbers of \nvolunteers will do all this work at little or no pay to improve user \nexperience is not a realistic long term plan.  I also think it is \nincorrect to assume some kind of \"social contract\" and \"strong user \nethos.\"  While many early users are like that I think most potential \nusers of Bitcoin don't think that way.\n\nRuss"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T12:49:51",
                "message_text_only": "IPv4 came before IPv6\u2026you pick up on things quickly :)\n\n> On Jun 19, 2015, at 5:48 AM, Marcel Jamin <marcel at jamin.net> wrote:\n> \n> > At the risk of stating cliches, the Mac came before the Windows PC\u2026Yahoo! came before Google\u2026MySpace came before Facebook\u2026\n> \n> And TCP/IP came before... oh wait...\n> \n> 2015-06-19 14:02 GMT+02:00 Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>>:\n> \n>> On Jun 19, 2015, at 3:45 AM, Dr Adam Back <adam at cypherspace.org <mailto:adam at cypherspace.org>> wrote:\n>> \n>> That wont be good for the companies either, but they may not see that\n>> until they've killed it, many companies operate on a1 or 2 year\n>> time-horizon.  They may say screw layer2, I have a runway and I need\n>> micropayments to the wazoo and I dont have the dev resources for that.\n> \n> Exactly, Adam.\n> \n> Except, I think the genie is out of the bottle - these ideas are too powerful for them to be killed forever. They will probably survive even if this scenario comes to pass\u2026but in a different network under a different name\u2026and Bitcoin will be relegated to the history books and walls of museums.\n> \n> Most of the potential brainpower available on this Earth to make serious, profound contributions to this movement haven\u2019t even begun to touch it. Just because you happen to run a Bitcoin startup right now\u2026even if you\u2019ve received millions of dollars in funding\u2026don\u2019t think that the whole world has low standards and is lazy! Someone WILL eventually build something better than we can presently imagine.\n> \n> First mover advantage and the network effect are vastly overrated. At the risk of stating cliches, the Mac came before the Windows PC\u2026Yahoo! came before Google\u2026MySpace came before Facebook\u2026Bitcoin came before <we don\u2019t know yet>.\n> \n> \n> - Eric Lombrozo\n> \n> ------------------------------------------------------------------------------\n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> \n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bef3478d/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bef3478d/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "improving development model (Re: Concerns Regarding Threats by a Developer to Remove Commit Access from Other Developers",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Bryan Bishop",
                "Eric Lombrozo",
                "Mike Hearn",
                "Milly Bitcoin",
                "Dr Adam Back",
                "Marcel Jamin",
                "Tom Harding"
            ],
            "messages_count": 10,
            "total_messages_chars_count": 31836
        }
    },
    {
        "title": "[Bitcoin-development] Mailman incompatibility with DKIM ...",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-19T09:51:50",
                "message_text_only": "Both you and jgarzik experienced mail getting tossed into gmail's spam\nfolder thanks to DKIM... I am concerned that DKIM is too fragile and not\nvery compatible with mailing lists.\n\nWe already removed the footer because it was incompatible with DKIM\nsigning.  Keeping the \"[Bitcoin-dev] \" prepend tag in subject is compatible\nwith DKIM header signing only if the poster manually prepends it in their\nsubject header.\n\nI am already concerned that the lack of the Mailman footer will make it\nhard to identify where exactly subscribers need to go to unsubscribe or\nlook at archives.  Removing the subject tag might make DKIM enforcement\nwork a lot better, but I can easily see our obtuse subscribers as being\nextra confused by this.\n\nOpinions?\n\nWarren\n\nOn Thu, Jun 18, 2015 at 11:38 PM, Arthur <arthur at powaaa.com> wrote:\n\n> warren | bad_duck: try manually adding \"[Bitcoin-dev] \" to the beginning\n> of the subject\n>\n> --\n> Arthur\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150618/3878c132/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-19T09:56:16",
                "message_text_only": ">\n> We already removed the footer because it was incompatible with DKIM\n> signing.  Keeping the \"[Bitcoin-dev] \" prepend tag in subject is compatible\n> with DKIM header signing only if the poster manually prepends it in their\n> subject header.\n>\n\nI still see footers being added to this list by SourceForge?\n\n\n> Opinions?\n>\n\nI've asked Jeff to not use his @bitpay.com account for now.\n\nThe only real fix is to use a mailing list operator that is designed to\noperate correctly with DKIM/DMARC, either by not modifying messages in\ntransit, or by re-sending (and ideally re-signing) under their own identity.\n\nThough I'm sure this won't be an issue for the Linux Foundation, the latter\napproach is dangerous because it means the list operator takes full\nresponsibility for any spamming that occurs from that domain. If the mail\nserver is ever hacked or spammers start posting to the lists themselves,\nall that spam will be seen as originating from the listserv itself and the\nreputation will be degraded. It can end with everyone's mail going to the\nspam folder.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/14c0cfe4/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-19T10:10:25",
                "message_text_only": "On Thu, Jun 18, 2015 at 11:56 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> We already removed the footer because it was incompatible with DKIM\n>> signing.  Keeping the \"[Bitcoin-dev] \" prepend tag in subject is compatible\n>> with DKIM header signing only if the poster manually prepends it in their\n>> subject header.\n>>\n>\n> I still see footers being added to this list by SourceForge?\n>\n\nThe new list currently has footers removed during testing.  I am not\npleased with the need to remove the subject tag and footer to be more\ncompatible with DKIM users.\n\n\n>\n>\n>> Opinions?\n>>\n>\n> I've asked Jeff to not use his @bitpay.com account for now.\n>\n>\nI'm guessing DKIM enforcement is not very common because of issues like\nthis?\n\nIt seems that Sourceforge silently drops DKIM enforced mail like\njgarzik's.  LF seems to pass along their mail but mangles the header/body\nand makes DKIM verification fail, which causes gmail to toss it into the\nspam folder.  I think this behavior is slightly worse than Sourceforge\nbecause it makes the poster think their message was successfully sent (it\nis in the archive), but many subscribers never see it due to the spam\nbinning.\n\nI don't see any good solution to this except an auto-reject for DKIM\nenforced domain postings.  Yes this is rather terrible, but the instant\nrejection is vastly better than Sourceforge silently dropping the post or\nLF getting stuck in spam filters.\n\nWe should also auto-reject any other reason for mail getting stuck in the\nmoderation queue like including non-subscribers.  I considered\nauto-rejecting spam too, but that could go horribly wrong as a false From\naddress could make the Mailman server into a spammer itself.  We may have\nno choice but to silently drop spam for that reason.\n\nWarren\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f9fad649/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-19T10:24:01",
                "message_text_only": ">\n> The new list currently has footers removed during testing.  I am not\n> pleased with the need to remove the subject tag and footer to be more\n> compatible with DKIM users.\n>\n\nLists can do what are effectively MITM attacks on people's messages in any\nway they like, if they resign for the messages themselves. That seems fair\nto me!  :)\n\n\n>  I'm guessing DKIM enforcement is not very common because of issues like\n> this?\n>\n\nDKIM is used by most mail on the internet. DMARC rules that publish in DNS\nstatements like \"All mail from bitpay.com is signed correctly so trash any\nthat isn't\" are used on some of the worlds most heavily phished domains\nlike google.com, PayPal, eBay, and indeed BitPay.\n\nThese rules are understood and enforced by all major webmail providers\nincluding Gmail. It's actually only rusty geek infrastructure that has\nproblems with this, I've never heard of DKIM/DMARC users having issues\noutside of dealing with mailman. The vast majority of email users who never\npost to technical mailing lists benefit from it significantly.\n\nReally everyone should use them. Adding cryptographic integrity to email is\nhardly a crazy idea :)\n\n\n> It seems that Sourceforge silently drops DKIM enforced mail like jgarzik's.\n>\n\nIt's not SourceForge, it's your spam filter. His mail gets through to me\nbut it's all in the spam folder.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/3aababa5/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-19T10:38:30",
                "message_text_only": "On Fri, Jun 19, 2015 at 12:24 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> The new list currently has footers removed during testing.  I am not\n>> pleased with the need to remove the subject tag and footer to be more\n>> compatible with DKIM users.\n>>\n>\n> Lists can do what are effectively MITM attacks on people's messages in any\n> way they like, if they resign for the messages themselves. That seems fair\n> to me!  :)\n>\n\nMailman isn't resigning it.  Should it be?  Does other mailing list\nsoftware?\n\n\n>\n>\n>>  I'm guessing DKIM enforcement is not very common because of issues like\n>> this?\n>>\n>\n> DKIM is used by most mail on the internet. DMARC rules that publish in DNS\n> statements like \"All mail from bitpay.com is signed correctly so trash\n> any that isn't\" are used on some of the worlds most heavily phished domains\n> like google.com, PayPal, eBay, and indeed BitPay.\n>\n> These rules are understood and enforced by all major webmail providers\n> including Gmail. It's actually only rusty geek infrastructure that has\n> problems with this, I've never heard of DKIM/DMARC users having issues\n> outside of dealing with mailman. The vast majority of email users who never\n> post to technical mailing lists benefit from it significantly.\n>\n> Really everyone should use them. Adding cryptographic integrity to email\n> is hardly a crazy idea :)\n>\n\nI understand the reason to protect the \"heavily phished\" domains.  I heard\nthat LKML does not modify the subject or add a footer, perhaps because it\nwould make it incompatible with DKIM of the several big corporate domains\nwho participate.\n\nI suppose it is somewhat acceptable for us to remove subject tags and\nfooters if we have no choice...\n\nWarren\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/bce0b675/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2015-06-19T10:49:40",
                "message_text_only": ">\n> Mailman isn't resigning it.  Should it be?  Does other mailing list\n> software?\n>\n\nMailman must take responsibility for the mail itself. It doesn't have to\nactually sign with DKIM to do so: for backwards compatibility, spam filters\nfall back to other heuristics to try and figure out the 'owner' of the mail\nif it doesn't use DKIM. Those heuristics can go wrong of course. Ideally\nall mail would be DKIM signed. There's no reason not to do it, really.\n\nYes mailing lists that edit people's emails resign. For example, from a\nrecent message to the bitcoinj list\n\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\n        *d=googlegroups.com <http://googlegroups.com>*; s=20120806;\n        h=to:from:subject:date:lines:message-id:references:mime-version\n         :content-type:user-agent:in-reply-to:x-original-sender\n         :x-original-authentication-results:reply-to:precedence:mailing-list\n         :list-id:list-post:list-help:list-archive:sender:list-subscribe\n         :list-unsubscribe;\n\n\n\n> I suppose it is somewhat acceptable for us to remove subject tags and\n> footers if we have no choice...\n>\n\nGood email clients can extract the same information from the headers\nanyway. I filter all my mail based on them, and the headers also contain\nunsubscribe instructions. Gmail is capable of using them programmatically.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/fd13cc68/attachment.html>"
            },
            {
                "author": "Adam Weiss",
                "date": "2015-06-19T19:47:56",
                "message_text_only": "Hi Warren,\n\nIf you set dmarc_moderation_action to \"Munge from\", the list will detect\nwhen someone posts from a domain that publishes a request for strict\nsignature checking for all mails originating from it (in DNS) and rewrite\nthe envelope-from to the list's address.  Reply-to will be added and set to\nthe original sender.\n\nI think that this is probably a better way to workaround the issue (rather\nthan playing with getting the list to not break the signature) until these\nthings mature further.\n\nThoughts?\n\n--adam\n\n\n\n\nOn Fri, Jun 19, 2015 at 6:38 AM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> On Fri, Jun 19, 2015 at 12:24 AM, Mike Hearn <mike at plan99.net> wrote:\n>\n>> The new list currently has footers removed during testing.  I am not\n>>> pleased with the need to remove the subject tag and footer to be more\n>>> compatible with DKIM users.\n>>>\n>>\n>> Lists can do what are effectively MITM attacks on people's messages in\n>> any way they like, if they resign for the messages themselves. That seems\n>> fair to me!  :)\n>>\n>\n> Mailman isn't resigning it.  Should it be?  Does other mailing list\n> software?\n>\n>\n>>\n>>\n>>>  I'm guessing DKIM enforcement is not very common because of issues like\n>>> this?\n>>>\n>>\n>> DKIM is used by most mail on the internet. DMARC rules that publish in\n>> DNS statements like \"All mail from bitpay.com is signed correctly so\n>> trash any that isn't\" are used on some of the worlds most heavily phished\n>> domains like google.com, PayPal, eBay, and indeed BitPay.\n>>\n>> These rules are understood and enforced by all major webmail providers\n>> including Gmail. It's actually only rusty geek infrastructure that has\n>> problems with this, I've never heard of DKIM/DMARC users having issues\n>> outside of dealing with mailman. The vast majority of email users who never\n>> post to technical mailing lists benefit from it significantly.\n>>\n>> Really everyone should use them. Adding cryptographic integrity to email\n>> is hardly a crazy idea :)\n>>\n>\n> I understand the reason to protect the \"heavily phished\" domains.  I heard\n> that LKML does not modify the subject or add a footer, perhaps because it\n> would make it incompatible with DKIM of the several big corporate domains\n> who participate.\n>\n> I suppose it is somewhat acceptable for us to remove subject tags and\n> footers if we have no choice...\n>\n> Warren\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/77f92e86/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T20:44:52",
                "message_text_only": "On Fri, Jun 19, 2015 at 12:47 PM, Adam Weiss <adam at signal11.com> wrote:\n\n> Hi Warren,\n>\n> If you set dmarc_moderation_action to \"Munge from\", the list will detect\n> when someone posts from a domain that publishes a request for strict\n> signature checking for all mails originating from it (in DNS) and rewrite\n> the envelope-from to the list's address.  Reply-to will be added and set to\n> the original sender.\n>\n\nThat seems to change Reply behavior for those recipients?  It would seem to\naccidentally direct mail intended to DKIM-user + list to DKIM-user.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/4c741ccb/attachment.html>"
            },
            {
                "author": "Adam Weiss",
                "date": "2015-06-20T18:43:31",
                "message_text_only": "It changes the mechanics at least.  A quick glance at RFC(2)822 makes it\nclear that this is a pretty weakly specified behavior and is somewhat of an\nedge case.  However, rewriting the envelopes has become somewhat prevalent\nsince strict DMARC has been adopted and I suspect that most recent MUAs\nwill handle it well.  I know that at least with gmail it works as I would\nexpect.  (Makes sense considering that this is how Google Groups handles\nthe problem.)\n\nIn any event, I really think it's worth a shot since having the subject and\nfooter tags is valuable. If it turns out to be problematic, it's not the\nend of the world and things could be easily switched to go the lkml route...\n\n--adam\n\n\nOn Fri, Jun 19, 2015 at 4:44 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> On Fri, Jun 19, 2015 at 12:47 PM, Adam Weiss <adam at signal11.com> wrote:\n>\n>> Hi Warren,\n>>\n>> If you set dmarc_moderation_action to \"Munge from\", the list will detect\n>> when someone posts from a domain that publishes a request for strict\n>> signature checking for all mails originating from it (in DNS) and rewrite\n>> the envelope-from to the list's address.  Reply-to will be added and set to\n>> the original sender.\n>>\n>\n> That seems to change Reply behavior for those recipients?  It would seem\n> to accidentally direct mail intended to DKIM-user + list to DKIM-user.\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/b744a6d1/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Mailman incompatibility with DKIM ...",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr.",
                "Adam Weiss",
                "Mike Hearn",
                "Jeff Garzik"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 14540
        }
    },
    {
        "title": "[Bitcoin-development] F2Pool has enabled full replace-by-fee",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2015-06-19T10:39:59",
                "message_text_only": "Yesterday F2Pool, currently the largest pool with 21% of the hashing\npower, enabled full replace-by-fee (RBF) support after discussions with\nme. This means that transactions that F2Pool has will be replaced if a\nconflicting transaction pays a higher fee. There are no requirements for\nthe replacement transaction to pay addresses that were paid by the\nprevious transaction.\n\n\nI'm a user. What does this mean for me?\n---------------------------------------\n\nIn the short term, very little. Wallet software aimed at average users\nhas no ability to reliably detect conditions where an unconfirmed\ntransaction may be double-spent by the sender. For example, Schildbach's\nBitcoin Wallet for Android doesn't even detect double-spends of\nunconfirmed transactions when connected to a RBF or Bitcoin XT nodes\nthat propagate them. The least sophisticated double-spend attack\npossibly - simply broadcasting two conflicting transactions at the same\ntime - has about 50% probability of success against these wallets.\n\nAdditionally, SPV wallets based on bitcoinj can't even detect invalid\ntransactions reliably, instead trusting the full node(s) it is connected\ntoo over the unauthenticated, unencrypted, P2P protocol to do validation\nfor them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\ndouble-spends that spend the output of the conflicting transaction. I've\npersonally tested this with Schildbach's Bitcoin Wallet for Android,\nwhich shows such invalid transactions as standard, unconfirmed,\ntransactions.\n\nUsers should continue to assume that unconfirmed transactions could be\ntrivially reversed by the sender until the first confirmation. In\ngeneral, only the sender can reverse a transaction, so if you do trust\nthe sender feel free to assume an unconfirmed transaction will\neventually confirm. However, if you do not trust the sender and/or have\nno other recourse if they double-spend you, wait until at least the\nfirst confirmation before assuming the transaction will go through.\n\nIn the long term, miner support of full RBF has a number of advantages\nto users, allowing you to more efficiently make transactions, paying\nlower fees. However you'll need a wallet supporting these features; none\nexist yet.\n\n\nI'm a business. What does this mean for me?\n-------------------------------------------\n\nIf you use your own node to verify transactions, you probably are in a\nsimilar situation as average users, so again, this means very little to\nyou.\n\nIf you use a payment processor/transaction API such as BitPay, Coinbase,\nBlockCypher, etc. you may or may not be accepting unconfirmed\ntransactions, and they may or may not be \"guaranteed\" by your payment\nprocessor even if double-spent. If like most merchants you're using the\nAPI such that confirmations are required prior to accepting orders (e.g.\ntaking a meaningful loss such as shipping a product if the tx is\nreversed) nothing changes for you. If not I recommend you contact your\npayment processor.\n\n\nI'm a miner. Why should I support replace-by-fee?\n-------------------------------------------------\n\nWhether full or first-seen-safe\u2075 RBF support (along with\nchild-pays-for-parent) is an important step towards a fully functioning\ntransaction fee market that doesn't lead to users' transactions getting\nmysteriously \"stuck\", particularly during network flooding\nevents/attacks. A better functioning fee market will help reduce\npressure to increase the blocksize, particularly from the users creating\nthe most valuable transactions.\n\nFull RBF also helps make use of the limited blockchain space more\nefficiently, with up to 90%+ transaction size savings possible in some\ntransaction patterns. (e.g. long payment chains\u2076) More users in less\nblockchain space will lead to higher overall fees per block.\n\nFinally as we'll discuss below full RBF prevents a number of serious\nthreats to the existing level playing field that miners operate in.\n\n\nWhy can't we make accepting unconfirmed txs from untrusted people safe?\n-----------------------------------------------------------------------\n\nFor a decentralized wallet, the situation is pretty bleak. These wallets\nonly have a handful of connections to the network, with no way of\nknowing if those connections give an accurate view of what transactions\nminers actually know about.\n\nThe only serious attempt to fix this problem for decentralized wallets\nthat has been actually deployed is Andresen/Harding's double-spend\nrelaying, implemented in Bitcoin XT. It relays up to one double-spend\ntransaction per double-spent txout, with the intended effect to warn\nrecipients. In practice however this functionality makes it easier to\ndouble-spend rather than harder, by giving an efficient and easy way to\nget double-spends to miners after the fact. Notably my RBF\nimplementation even connects to Bitcoin XT nodes, reserving a % of all\nincoming and outgoing connection slots for them.\n\nAdditionally Bitcoin XT's double-spend relaying is subject to attacks\ninclude bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\ninteractive attacks\u2077 among many others.\n\n\nWhat about centralised wallets?\n-------------------------------\n\nHere the solutions being deployed, planned, and proposed are harmful,\nand even represent serious threats to Bitcoin's decentralization.\n\n\nConfidence factors\n------------------\n\nMany services such as BlockCypher\u00b2 have attempted to predict the\nprobability that unconfirmed transactions will be mined, often\nguaranteeing merchants payment\u00b3 even in the event of a double-spend. The\nkey component of these predictions is to sybil attack the P2P network as\na whole, connecting to as many nodes as possible to measure transaction\npropagation. Additionally these services connect to pools directly via\nthe getblocktemplate protocol, repeatedly downloading via GBT the lists\nof transactions in the to-be-mined blocks to determine what transactions\nminers are attempting to mine.\n\nNone of these measures scale, wasting significant network and miner\nresources; in one instance a sybil attack by Chainalysis even completely\nblocked the users of the SPV wallet Breadwallet\u2074 from accessing the\nnetwork. These measures also don't work very well, giving double-spend\nattackers incentives to sybil attack miners themselves.\n\n\nTransaction processing contracts with miners\n--------------------------------------------\n\nThe next step after measuring propagation fails is to contract with\nminers directly, signing contracts with as much of the hashing power as\npossible to get the transactions they want mined and double-spends\nrejected. The miners/pools would then provide an authenticated API\nendpoint for exclusive use of this service that would allow the service\nto add and remove specific transactions to the mempool on demand.\n\nThere's a number of serious problems with this:\n\n1) Mining contracts can be used to double-spend\n\n...even when they're being used \"honestly\".\n\nSuppose Alice is a merchant using CoinPayCypher, who has contracts with\n75% of the hashing power. Bob, another merchant, meanwhile uses a\ndecentralized Bitcoin Core backend for payments to his website.\n\nMallory wants to double-spend Bob's to buy his expensive products. He\ncan do this by creating a transaction, tx1, that pays Alice, followed by\na second transaction, tx2, that pays Bob. In any circumstance when\nMallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\nthe chance of Malory's double-spend succeeding becomes ~75% because\nCoinPayCypher's contracts with mining ensure the transaction paying\nAlice will get mined.\n\nOf course, dishonest use and/or compromise makes double-spending\ntrivial: Malory can use the API credentials to ask miners to reject\nBob's payment at any time.\n\n\n2) They still don't work, without 51% attacking other miners\n\nEven if CoinPayCypher has 75% of the hashing power on contract, that's\nstill a potentially 75% chance of being double-spent. The 25% of miners\nwho haven't signed contracts have no _decentralized_ way of ensuring\nthey don't create blocks with double-spends, let alone at low cost. If\nthose miners won't or can't sign contracts with CoinPayCypher the only\nnext step available is to reject their blocks entirely.\n\n\n3) Legal contracts give the advantage to non-anonymous miners in\n   Western jurisdictions\n\nSuppose CoinPayCypher is a US company, and you're a miner with 1%\nhashing power located in northern China. The barriers to you succesfully\nnegotiating a contract with CoinPayCypher are significant. You don't\nspeak the same langauge, you're in a completely different jurisdiction\nso enforcing the legal contract is difficult, and being just 1%,\nCoinPayCypher sees you as insignificant.\n\nWho's going to get the profitable hashing power contracts first, if at\nall? Your English speaking competitors in the west. This is inherently a\npressure towards centralization of mining.\n\n\nWhy isn't this being announced on the bitcoin-security list first?\n------------------------------------------------------------------\n\nI've had repeated discussions with services vulnerable to double-spends;\nthey have been made well aware of the risk they're taking. If they've\nfollowed my own and others' advice they'll at minimum have constant\nmonitoring of the rate of double-spends both on their own services and\non the P2P network in general.\n\nIf you choose to take a risk you should accept the consequences.\n\n\nHow do I actually use full RBF?\n-------------------------------\n\nFirst get the full-RBF patch to v0.10.2:\n\n    https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n\nThe above implementation of RBF includes additional code to find and\npreferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\nSecondly, try out my replace-by-fee-tools at:\n\n    https://github.com/petertodd/replace-by-fee-tools\n\nYou can watch double-spends on the network here:\n\n    http://respends.thinlink.com/\n\n\nReferences\n----------\n\n1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n    variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet\",\n   Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n   http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n\n2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n   June 2nd, 2014, Erik Voorhees,\n   https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n\n3) Coinbase Merchant API, Accessed Jun 19th 2015,\n   https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n\n4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n   March 14th 2015, Grace Caffyn, Coindesk,\n   http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n\n5) \"First-Seen-Safe Replace-by-Fee\",\n   May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n   http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n\n6) \"Cost savings by using replace-by-fee, 30-90%\",\n   May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n   http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n\n7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n    Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan Capkun,\n    Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n    http://eprint.iacr.org/2015/578\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/fa3a7c7a/attachment.sig>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-19T13:33:03",
                "message_text_only": "I just sent the following email to F2Pool:\n\n\nI was disappointed to see Peter Todd claiming that you have (or will?) run\nhis replace-by-fee patch.\n\nI strongly encourage you to wait until most wallet software supports\nreplace-by-fee before doing that, because until that happens replace-by-fee\njust makes it easier to steal from bitcoin-accepting merchants.\n\nI will tell you the same thing about 8MB blocks: until most merchants\nsupport bigger blocks I will strongly encourage you keep creating\nless-than-1MB blocks. If we want Bitcoin to succeed more quickly, we should\nall be thinking about what is good for the whole system: users, merchants,\nexchanges and miners.\n\nAs always, if you have questions or concerns feel free to email me.\n\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/230672e9/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T13:52:46",
                "message_text_only": "On Fri, Jun 19, 2015 at 09:33:03AM -0400, Gavin Andresen wrote:\n> I just sent the following email to F2Pool:\n> \n> \n> I was disappointed to see Peter Todd claiming that you have (or will?) run\n> his replace-by-fee patch.\n> \n> I strongly encourage you to wait until most wallet software supports\n> replace-by-fee before doing that, because until that happens replace-by-fee\n> just makes it easier to steal from bitcoin-accepting merchants.\n\nDo you mean just full-RBF, or FSS-RBF as well?\n\n\nSpeaking of, could we get a confirmation that Coinbase is, or is not,\none of the merchant service providers trying to get hashing power\ncontracts with mining pools for guaranteed transaction acceptance? IIRC\nyou are still an advisor to them. This is a serious concern for the\nreasons I outlined in my post.\n\nEqually if anyone else from Coinbase would like to chime in that'd be\ngreat.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000d7110f3a176228445ed710afd332291384992ed89c5c1a7\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/59a7a058/attachment.sig>"
            },
            {
                "author": "Adrian Macneil",
                "date": "2015-06-19T14:00:56",
                "message_text_only": ">\n> For instance, if Coinbase had\n> contracts with 80% of the Bitcoin hashing power to guarantee their\n> transactions would get mined, but 20% of the hashing power didn't sign\n> up, then the only way to guarantee their transactions could be for the\n> 80% to not build on blocks containing doublespends by the 20%.\n>\n\nThis seems to be more of a problem with centralized mining than zeroconf\ntransactions.\n\nSpeaking of, could we get a confirmation that Coinbase is, or is not,\n> one of the merchant service providers trying to get hashing power\n> contracts with mining pools for guaranteed transaction acceptance? IIRC\n> you are still an advisor to them. This is a serious concern for the\n> reasons I outlined in my post.\n>\n\nWe have no contracts in place or plans to do this that I am aware of.\n\nHowever, we do rely pretty heavily on zeroconf transactions for merchant\nprocessing, so if any significant portion of the mining pools started\nrunning your unsafe RBF patch, then we would probably need to look into\nthis as a way to prevent fraud.\n\nIn the long term, I would love to see a safe, decentralized solution for\naccepting zeroconf transactions. However, right now there is no such\nsolution supported by any wallets in use, and I don't think breaking the\ncurrent bitcoin behavior for everyone is the best way to achieve this.\n\nAdrian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f769ac6f/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T14:08:15",
                "message_text_only": "On Fri, Jun 19, 2015 at 07:00:56AM -0700, Adrian Macneil wrote:\n> >\n> > For instance, if Coinbase had\n> > contracts with 80% of the Bitcoin hashing power to guarantee their\n> > transactions would get mined, but 20% of the hashing power didn't sign\n> > up, then the only way to guarantee their transactions could be for the\n> > 80% to not build on blocks containing doublespends by the 20%.\n> >\n> \n> This seems to be more of a problem with centralized mining than zeroconf\n> transactions.\n\nYou're mistaking cause and effect: the contracts will drive\ncentralization of mining, as only the larger, non-anonymous, players\nhave the ability to enter into such contracts.\n\n> Speaking of, could we get a confirmation that Coinbase is, or is not,\n> > one of the merchant service providers trying to get hashing power\n> > contracts with mining pools for guaranteed transaction acceptance? IIRC\n> > you are still an advisor to them. This is a serious concern for the\n> > reasons I outlined in my post.\n> >\n> \n> We have no contracts in place or plans to do this that I am aware of.\n> \n> However, we do rely pretty heavily on zeroconf transactions for merchant\n> processing, so if any significant portion of the mining pools started\n> running your unsafe RBF patch, then we would probably need to look into\n> this as a way to prevent fraud.\n\nWhat happens if the mining pools who are mining double-spends aren't\ndoing it delibrately? Sybil attacking pools appears to have been done\nbefore to get double-spends though, equally there are many other changes\nthe reduce the reliability of transaction confirmations. For instance\nthe higher demands on bandwidth of a higher blocksize will inevitably\nreduce the syncronicity of mempools, resulting in double-spend\nopportunities. Similarly many proposals to limit mempool size allow\nzeroconf double-spends.\n\nIn that case would you enter into such contracts?\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000005a4c76d0bf088ef3e059914d6fc0335683a92b5be01b7dc\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/7536be71/attachment.sig>"
            },
            {
                "author": "Adrian Macneil",
                "date": "2015-06-19T14:30:17",
                "message_text_only": ">\n> > We have no contracts in place or plans to do this that I am aware of.\n> >\n> > However, we do rely pretty heavily on zeroconf transactions for merchant\n> > processing, so if any significant portion of the mining pools started\n> > running your unsafe RBF patch, then we would probably need to look into\n> > this as a way to prevent fraud.\n>\n> What happens if the mining pools who are mining double-spends aren't\n> doing it delibrately? Sybil attacking pools appears to have been done\n> before to get double-spends though, equally there are many other changes\n> the reduce the reliability of transaction confirmations. For instance\n> the higher demands on bandwidth of a higher blocksize will inevitably\n> reduce the syncronicity of mempools, resulting in double-spend\n> opportunities. Similarly many proposals to limit mempool size allow\n> zeroconf double-spends.\n>\n> In that case would you enter into such contracts?\n>\n\nWe take it as it comes.\n\nCurrently, it's perfectly possible to accept zeroconf transactions with\nonly a very small chance of double spend. As long as it's only possible to\ndouble spend a small fraction of the time, it's an acceptable cost to us in\nexchange for being able to provide a fast checkout experience to customers\nand merchants.\n\nIf the status quo changes, then we will need to investigate alternatives\n(which realistically would include mining contracts, or only accepting\ninstant payments from other trusted hosted wallets, which would be a net\nloss for decentralization).\n\nLong term we would prefer to see an open, decentralized solution, such as\npayment channels / green addresses / lightening networks. However, I think\nas a community we are a long way away from choosing a standard here and\nimplementing it across all popular wallet software and merchant processors.\n\nAdrian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/e0ee9118/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T14:59:41",
                "message_text_only": "On Fri, Jun 19, 2015 at 07:30:17AM -0700, Adrian Macneil wrote:\n> > In that case would you enter into such contracts?\n> >\n> \n> We take it as it comes.\n> \n> Currently, it's perfectly possible to accept zeroconf transactions with\n> only a very small chance of double spend. As long as it's only possible to\n> double spend a small fraction of the time, it's an acceptable cost to us in\n> exchange for being able to provide a fast checkout experience to customers\n> and merchants.\n\nUnless you're sybil attacking the network and miners, consuming valuable\nresources and creating systemic risks of failure like we saw with\nChainalysis, I don't see how you're getting \"very small\" double-spend\nprobabilities.\n\nYou realise how the fact that F2Pool is using full-RBF right now does\nstrongly suggest that the chances of a double-spend are not only low,\nbut more importantly, vary greatly? Any small change in relaying policy\nor even network conditions creates opportunities to double-spend.\n\n> If the status quo changes, then we will need to investigate alternatives\n> (which realistically would include mining contracts, or only accepting\n> instant payments from other trusted hosted wallets, which would be a net\n> loss for decentralization).\n\nYou know, you're creating an interesting bit of game theory here: if I'm\na miner who doesn't already have a mining contract, why not implement\nfull-RBF to force Coinbase to offer me one? One reason might be because\nother miners with such a contract - a majority - are going to be asked\nby Coinbase to reorg you out of the blockchain, but then we have a\nsituation where a single entity has control of the blockchain.\n\nFor the good of Bitcoin, and your own company, you'd do well to firmly\nstate that under no condition will Coinbase ever enter into mining\ncontracts.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000fe727215265d9ddacb2930ad2d45920b71920b7aed687f1\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8c3576b9/attachment.sig>"
            },
            {
                "author": "Adrian Macneil",
                "date": "2015-06-19T15:20:52",
                "message_text_only": ">\n> Unless you're sybil attacking the network and miners, consuming valuable\n> resources and creating systemic risks of failure like we saw with\n> Chainalysis, I don't see how you're getting \"very small\" double-spend\n> probabilities.\n>\n\nSo connecting to many nodes just because we can and it's not technically\nprevented is bad for the network and creating systemic risks of failure,\nbut relaying harmful double spend transactions just because you can and\nit's not technically prevented, is good for everyone?\n\n\n> You know, you're creating an interesting bit of game theory here: if I'm\n> a miner who doesn't already have a mining contract, why not implement\n> full-RBF to force Coinbase to offer me one? One reason might be because\n> other miners with such a contract - a majority - are going to be asked\n> by Coinbase to reorg you out of the blockchain, but then we have a\n> situation where a single entity has control of the blockchain.\n>\n\nIf someone did enter into contracts with miners to mine certain\ntransactions, and had a guarantee that the miners would not build on\nprevious blocks which included double spends, then they would only need\ncontracts with 51% of the network anyway. So it wouldn't really matter if\nyou were a small time miner and wanted to run full-RBF.\n\n\n> For the good of Bitcoin, and your own company, you'd do well to firmly\n> state that under no condition will Coinbase ever enter into mining\n> contracts.\n>\n\nI don't personally see what good this does for bitcoin. Now you are\nsuggesting that we should prevent a 51% attack by using policy and\npromises, rather than a technical solution. How is this any better than us\nrelying on existing double spend rules which are based on policy and\npromises?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/ad6b6736/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T15:40:54",
                "message_text_only": "On Fri, Jun 19, 2015 at 08:20:52AM -0700, Adrian Macneil wrote:\n> >\n> > Unless you're sybil attacking the network and miners, consuming valuable\n> > resources and creating systemic risks of failure like we saw with\n> > Chainalysis, I don't see how you're getting \"very small\" double-spend\n> > probabilities.\n> >\n> \n> So connecting to many nodes just because we can and it's not technically\n> prevented is bad for the network and creating systemic risks of failure,\n\nWell it is actually; that's why myself, Wladimir van der Laan, and\nGregory Maxwell all specifically\u00b9 called Chainalysis's actions a sybil\nattack.\n\nThe Bitcoin P2P network is resilliant to failure when the chance of any\none node going down is uncorrelated with others. For instance if you\naccidentally introduced a bug in your nodes that failed to relay\ntransactions/blocks properly, you'd simultaneously be disrupting a large\nportion of the network all at once.\n\nHow many nodes is Coinbase connecting too? What software are they\nrunning? What subnets are they using? In particular, are they all on one\nsubnet or multiple?\n\n> but relaying harmful double spend transactions just because you can and\n> it's not technically prevented, is good for everyone?\n\nYou realise that Hearn/Andresen/Harding's double-spend-relaying patch,\nincluded in Bitcoin XT, relays double-spend transactions right? Do you\nconsider that harmful?\n\n> > You know, you're creating an interesting bit of game theory here: if I'm\n> > a miner who doesn't already have a mining contract, why not implement\n> > full-RBF to force Coinbase to offer me one? One reason might be because\n> > other miners with such a contract - a majority - are going to be asked\n> > by Coinbase to reorg you out of the blockchain, but then we have a\n> > situation where a single entity has control of the blockchain.\n> >\n> \n> If someone did enter into contracts with miners to mine certain\n> transactions, and had a guarantee that the miners would not build on\n> previous blocks which included double spends, then they would only need\n> contracts with 51% of the network anyway. So it wouldn't really matter if\n> you were a small time miner and wanted to run full-RBF.\n\nBut of course, you'd never 51% the network right? After all it's not\npossible to guarantee that your miner won't mine double-spends, as there\nis no single consensus definition of which transaction came first, nor\ncan there be.\n\nOr do you see things differently? If I'm a small miner should I be\nworried my blocks might be rejected by the majority with hashing power\ncontracts because I'm unable to predict which transactions Coinbase\nbelieves should go in the blockchain?\n\n> > For the good of Bitcoin, and your own company, you'd do well to firmly\n> > state that under no condition will Coinbase ever enter into mining\n> > contracts.\n> >\n> \n> I don't personally see what good this does for bitcoin. Now you are\n> suggesting that we should prevent a 51% attack by using policy and\n> promises, rather than a technical solution. How is this any better than us\n> relying on existing double spend rules which are based on policy and\n> promises?\n\nWell, I think I've shown how dangerous mining contracts can be to the\noverall health of the Bitcoin ecosystem; I'm simply asking you to\npromise not to make use of this dangerous option regardless of what\nhappens. Like I said, if for whatever reason the first-seen mempool\nbehavior proves to be insufficient at preventing double-spends from your\nperspective, you did suggest you might use mining contracts to ensure\ntxs you want mined get mined, over others.\n\n\n1) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n   March 14th 2015, Grace Caffyn, Coindesk,\n   http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000e806870e7e9cf4d507af6b78fc709e6839a8d34b52ea334\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/7559ea0b/attachment.sig>"
            },
            {
                "author": "Adrian Macneil",
                "date": "2015-06-19T16:18:54",
                "message_text_only": ">\n> > So connecting to many nodes just because we can and it's not technically\n> > prevented is bad for the network and creating systemic risks of failure,\n>\n> Well it is actually; that's why myself, Wladimir van der Laan, and\n> Gregory Maxwell all specifically\u00b9 called Chainalysis's actions a sybil\n> attack.\n>\n> The Bitcoin P2P network is resilliant to failure when the chance of any\n> one node going down is uncorrelated with others. For instance if you\n> accidentally introduced a bug in your nodes that failed to relay\n> transactions/blocks properly, you'd simultaneously be disrupting a large\n> portion of the network all at once.\n>\n\nThis is exactly what your RBF patch is doing. By your own logic, nodes on\nthe network should be allowed to relay (or not relay) whatever they wish.\n\n\n> How many nodes is Coinbase connecting too? What software are they\n> running? What subnets are they using? In particular, are they all on one\n> subnet or multiple?\n>\n\nWe're running about a dozen nodes running regular Bitcoin Core in various\nsubnets. We aren't doing anything particularly out of the ordinary here.\nNothing that would fall under your definition of a sybil attack or harmful\nto the network.\n\n> > You know, you're creating an interesting bit of game theory here: if I'm\n> > > a miner who doesn't already have a mining contract, why not implement\n> > > full-RBF to force Coinbase to offer me one? One reason might be because\n> > > other miners with such a contract - a majority - are going to be asked\n> > > by Coinbase to reorg you out of the blockchain, but then we have a\n> > > situation where a single entity has control of the blockchain.\n> > >\n> >\n> > If someone did enter into contracts with miners to mine certain\n> > transactions, and had a guarantee that the miners would not build on\n> > previous blocks which included double spends, then they would only need\n> > contracts with 51% of the network anyway. So it wouldn't really matter if\n> > you were a small time miner and wanted to run full-RBF.\n>\n> But of course, you'd never 51% the network right? After all it's not\n> possible to guarantee that your miner won't mine double-spends, as there\n> is no single consensus definition of which transaction came first, nor\n> can there be.\n>\n> Or do you see things differently? If I'm a small miner should I be\n> worried my blocks might be rejected by the majority with hashing power\n> contracts because I'm unable to predict which transactions Coinbase\n> believes should go in the blockchain?\n>\n\nYou seem so concerned that we are actively trying to harm or control the\nnetwork. We're simply trying to drive bitcoin adoption by making it easy\nfor people to spend their bitcoin with merchants online. The problems we\nface are no different from other merchant processors, or small independent\nmerchants accepting online or point-of-sale payments.\n\nWe've historically had relatively little interest in what miners were doing\n(until RBF came out) - for the most part it didn't affect our business.\nHowever, most large merchants would be simply uninterested in accepting\nbitcoin if we forced their customers to wait 10-60 minutes for their\npayments to confirm. Many have inventory management systems which can not\neven place items on hold that long.\n\nIf full-RBF sees any significant adoption by miners, then it will actively\nharm bitcoin adoption by reducing or removing the ability for online or POS\nmerchants to accept bitcoin payments at all. I do not see a single benefit\nto running full-RBF.\n\nFWIW, I'm fine with the first-seen-safe RBF, that seems like a sensible\naddition and a good way to allow fees to be added or increased on existing\ntransactions, without harming existing applications of bitcoin.\n\nAdrian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/67e0dce0/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T16:37:46",
                "message_text_only": "On Fri, Jun 19, 2015 at 09:18:54AM -0700, Adrian Macneil wrote:\n> >\n> > > So connecting to many nodes just because we can and it's not technically\n> > > prevented is bad for the network and creating systemic risks of failure,\n> >\n> > Well it is actually; that's why myself, Wladimir van der Laan, and\n> > Gregory Maxwell all specifically\u00b9 called Chainalysis's actions a sybil\n> > attack.\n> >\n> > The Bitcoin P2P network is resilliant to failure when the chance of any\n> > one node going down is uncorrelated with others. For instance if you\n> > accidentally introduced a bug in your nodes that failed to relay\n> > transactions/blocks properly, you'd simultaneously be disrupting a large\n> > portion of the network all at once.\n> >\n> \n> This is exactly what your RBF patch is doing. By your own logic, nodes on\n> the network should be allowed to relay (or not relay) whatever they wish.\n\nAh, seems you misunderstand the problem.\n\nBy properly we're concerned that things do get relayed, not that they do\nnot. In particularl with blocks a fairly to relay valid blocks will\nquickly lead to a loss of consensus.\n\n> > How many nodes is Coinbase connecting too? What software are they\n> > running? What subnets are they using? In particular, are they all on one\n> > subnet or multiple?\n> >\n> \n> We're running about a dozen nodes running regular Bitcoin Core in various\n> subnets. We aren't doing anything particularly out of the ordinary here.\n> Nothing that would fall under your definition of a sybil attack or harmful\n> to the network.\n\nRight, so those dozen nodes, how many outgoing connections are they\nmaking?\n\n> > But of course, you'd never 51% the network right? After all it's not\n> > possible to guarantee that your miner won't mine double-spends, as there\n> > is no single consensus definition of which transaction came first, nor\n> > can there be.\n> >\n> > Or do you see things differently? If I'm a small miner should I be\n> > worried my blocks might be rejected by the majority with hashing power\n> > contracts because I'm unable to predict which transactions Coinbase\n> > believes should go in the blockchain?\n> >\n> \n> You seem so concerned that we are actively trying to harm or control the\n> network. We're simply trying to drive bitcoin adoption by making it easy\n> for people to spend their bitcoin with merchants online. The problems we\n> face are no different from other merchant processors, or small independent\n> merchants accepting online or point-of-sale payments.\n>\n> We've historically had relatively little interest in what miners were doing\n> (until RBF came out) - for the most part it didn't affect our business.\n> However, most large merchants would be simply uninterested in accepting\n> bitcoin if we forced their customers to wait 10-60 minutes for their\n> payments to confirm. Many have inventory management systems which can not\n> even place items on hold that long.\n\nWhile your goals may be reasonable, again, the question is how are you\ngoing to achieve them? Do you accept that you may be in a position where\nyou can't guarantee confirmations? Again, what's your plan to deal with\nthis? For instance, I know Coinbase is contractually obliged to accept\nzeroconf payments with at least some of your customers - how strong are\nthose agreements?\n\nWhat we're worried about is your plan appears to include nothing\nconcrete beyond the possibility of getting contracts with hashing power,\nmaybe even just a majority of hashing power. This is something that\nshould concern everyone in the Bitcoin ecosystem, and it'd help if you\nclearly stated what your intentions are.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000001128683847671e0ca022f9c74df90a3dc718545379101b72\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/654f5968/attachment.sig>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-19T20:39:41",
                "message_text_only": "On Friday, 19 June 2015, at 9:18 am, Adrian Macneil wrote:\n> If full-RBF sees any significant adoption by miners, then it will actively\n> harm bitcoin adoption by reducing or removing the ability for online or POS\n> merchants to accept bitcoin payments at all.\n\nRetail POS merchants probably should not be accepting vanilla Bitcoin payments, as Bitcoin alone does not (and cannot) guarantee the irreversibility of a transaction until it has been buried several blocks deep in the chain. Retail merchants should be requiring a co-signature from a mutually trusted co-signer that vows never to sign a double-spend. The reason we don't yet see such technology permeating the ecosystem is because, to date, zero-conf transactions have been irreversible \"enough,\" but this has only been a happy accident; it was never promised, and it should not be relied upon."
            },
            {
                "author": "Frank Flores",
                "date": "2015-06-19T21:05:56",
                "message_text_only": "Has anyone from Mycelium weighed in on this? Is their doublespend attack\ndetection broken with this kind of irresponsible behavior?\n\nOn Fri, Jun 19, 2015 at 3:39 PM, Matt Whitlock <bip at mattwhitlock.name>\nwrote:\n\n> On Friday, 19 June 2015, at 9:18 am, Adrian Macneil wrote:\n> > If full-RBF sees any significant adoption by miners, then it will\n> actively\n> > harm bitcoin adoption by reducing or removing the ability for online or\n> POS\n> > merchants to accept bitcoin payments at all.\n>\n> Retail POS merchants probably should not be accepting vanilla Bitcoin\n> payments, as Bitcoin alone does not (and cannot) guarantee the\n> irreversibility of a transaction until it has been buried several blocks\n> deep in the chain. Retail merchants should be requiring a co-signature from\n> a mutually trusted co-signer that vows never to sign a double-spend. The\n> reason we don't yet see such technology permeating the ecosystem is\n> because, to date, zero-conf transactions have been irreversible \"enough,\"\n> but this has only been a happy accident; it was never promised, and it\n> should not be relied upon.\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n*MONEY IS OVER!*\n                                IF YOU WANT IT\n<http://www.zeitgeistmovie.com/>\n=====================================================\nThe causes of my servitude can be traced to the tyranny of money.\n-Serj Tankian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/4829df69/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T21:15:21",
                "message_text_only": "Double spend detection is by definition best-effort.\n\nThe purpose of bitcoin is to provide security (confirmations) to otherwise\ninsecure, possibly double spent transactions.\n\n\n\n\nOn Fri, Jun 19, 2015 at 2:05 PM, Frank Flores <frankf44 at gmail.com> wrote:\n\n> Has anyone from Mycelium weighed in on this? Is their doublespend attack\n> detection broken with this kind of irresponsible behavior?\n>\n> On Fri, Jun 19, 2015 at 3:39 PM, Matt Whitlock <bip at mattwhitlock.name>\n> wrote:\n>\n>> On Friday, 19 June 2015, at 9:18 am, Adrian Macneil wrote:\n>> > If full-RBF sees any significant adoption by miners, then it will\n>> actively\n>> > harm bitcoin adoption by reducing or removing the ability for online or\n>> POS\n>> > merchants to accept bitcoin payments at all.\n>>\n>> Retail POS merchants probably should not be accepting vanilla Bitcoin\n>> payments, as Bitcoin alone does not (and cannot) guarantee the\n>> irreversibility of a transaction until it has been buried several blocks\n>> deep in the chain. Retail merchants should be requiring a co-signature from\n>> a mutually trusted co-signer that vows never to sign a double-spend. The\n>> reason we don't yet see such technology permeating the ecosystem is\n>> because, to date, zero-conf transactions have been irreversible \"enough,\"\n>> but this has only been a happy accident; it was never promised, and it\n>> should not be relied upon.\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> --\n> *MONEY IS OVER!*\n>                                 IF YOU WANT IT\n> <http://www.zeitgeistmovie.com/>\n> =====================================================\n> The causes of my servitude can be traced to the tyranny of money.\n> -Serj Tankian\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/a36b7617/attachment.html>"
            },
            {
                "author": "Andreas Petersson",
                "date": "2015-06-20T00:47:06",
                "message_text_only": "I have some experience here. If you are seriously suggesting these\nmeasures, you might as well kill retail transactions altogether.\n\nIn practice, if a retail place starts to accept bitcoin they have a\nsimilar situation as with cash, only that the fraud potential is much\nlower. (e.g. 100-dollar bill for a sandwich might turn out fake later)\nand the fraud frequency is also much lower.\n\n0-conf concerns were never a problem in practice. except for 2-way atms\ni have never heard of a problem that was caused by double spends.\nwhile adding these measures is generally positive, requiring them means\nexcluding 99.9% of the potential users. so you might as well not do it.\n\nRBF as implemented by F2Pool just flat out lowers Bitcoins utility\nvalue. So it's a bad thing.\n\nfor any online or automated system, waiting for a handful of\nconfirmations was always recommended practice.\n\nAm 19.06.2015 um 22:39 schrieb Matt Whitlock:\n> Retail POS merchants probably should not be accepting vanilla Bitcoin\n> payments, as Bitcoin alone does not (and cannot) guarantee the\n> irreversibility of a transaction until it has been buried several\n> blocks deep in the chain. Retail merchants should be requiring a\n> co-signature from a mutually trusted co-signer that vows never to sign\n> a double-spend.  \n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: 0xAA4EDEEF.asc\nType: application/pgp-keys\nSize: 998 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/84f25498/attachment.bin>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-20T01:09:53",
                "message_text_only": "What retail needs is escrowed microchannel hubs (what lightning provides,\nfor example), which enable untrusted instant payments. Not reliance on\nsingle-signer zeroconf transactions that can never be made safe.\n\nOn Fri, Jun 19, 2015 at 5:47 PM, Andreas Petersson <andreas at petersson.at>\nwrote:\n\n> I have some experience here. If you are seriously suggesting these\n> measures, you might as well kill retail transactions altogether.\n>\n> In practice, if a retail place starts to accept bitcoin they have a\n> similar situation as with cash, only that the fraud potential is much\n> lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)\n> and the fraud frequency is also much lower.\n>\n> 0-conf concerns were never a problem in practice. except for 2-way atms\n> i have never heard of a problem that was caused by double spends.\n> while adding these measures is generally positive, requiring them means\n> excluding 99.9% of the potential users. so you might as well not do it.\n>\n> RBF as implemented by F2Pool just flat out lowers Bitcoins utility\n> value. So it's a bad thing.\n>\n> for any online or automated system, waiting for a handful of\n> confirmations was always recommended practice.\n>\n> Am 19.06.2015 um 22:39 schrieb Matt Whitlock:\n> > Retail POS merchants probably should not be accepting vanilla Bitcoin\n> > payments, as Bitcoin alone does not (and cannot) guarantee the\n> > irreversibility of a transaction until it has been buried several\n> > blocks deep in the chain. Retail merchants should be requiring a\n> > co-signature from a mutually trusted co-signer that vows never to sign\n> > a double-spend.\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/c2719e0f/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-20T01:23:03",
                "message_text_only": "> What retail needs is escrowed microchannel hubs (what lightning provides,\nfor example), which enable untrusted instant payments. Not reliance on\nsingle-signer zeroconf transactions that can never be made safe.\n\nThey don't need to be made cryptographically safe, they just have to be\nsafer than, for instance, credit card payments that can be charged back. As\nlong as it's reasonably good in practice, that's fine.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Fri, Jun 19, 2015 at 6:09 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> What retail needs is escrowed microchannel hubs (what lightning provides,\n> for example), which enable untrusted instant payments. Not reliance on\n> single-signer zeroconf transactions that can never be made safe.\n>\n> On Fri, Jun 19, 2015 at 5:47 PM, Andreas Petersson <andreas at petersson.at>\n> wrote:\n>\n>> I have some experience here. If you are seriously suggesting these\n>> measures, you might as well kill retail transactions altogether.\n>>\n>> In practice, if a retail place starts to accept bitcoin they have a\n>> similar situation as with cash, only that the fraud potential is much\n>> lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)\n>> and the fraud frequency is also much lower.\n>>\n>> 0-conf concerns were never a problem in practice. except for 2-way atms\n>> i have never heard of a problem that was caused by double spends.\n>> while adding these measures is generally positive, requiring them means\n>> excluding 99.9% of the potential users. so you might as well not do it.\n>>\n>> RBF as implemented by F2Pool just flat out lowers Bitcoins utility\n>> value. So it's a bad thing.\n>>\n>> for any online or automated system, waiting for a handful of\n>> confirmations was always recommended practice.\n>>\n>> Am 19.06.2015 um 22:39 schrieb Matt Whitlock:\n>> > Retail POS merchants probably should not be accepting vanilla Bitcoin\n>> > payments, as Bitcoin alone does not (and cannot) guarantee the\n>> > irreversibility of a transaction until it has been buried several\n>> > blocks deep in the chain. Retail merchants should be requiring a\n>> > co-signature from a mutually trusted co-signer that vows never to sign\n>> > a double-spend.\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8f05595a/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-20T03:07:02",
                "message_text_only": "It all comes down to managing risk. If you\u2019ve got a decent risk model with capped losses and safe recovery mechanisms\u2026and it\u2019s still profitable\u2026it\u2019s fine. But most payment processors and merchants right now probably don\u2019t have particularly good risk models and are making many dangerous assumptions\u2026and probably would not be able to gracefully handle very many risk scenarios.\n\n- Eric Lombrozo\n\n\n> On Jun 19, 2015, at 6:23 PM, Aaron Voisine <voisine at gmail.com> wrote:\n> \n> > What retail needs is escrowed microchannel hubs (what lightning provides, for example), which enable untrusted instant payments. Not reliance on single-signer zeroconf transactions that can never be made safe.\n> \n> They don't need to be made cryptographically safe, they just have to be safer than, for instance, credit card payments that can be charged back. As long as it's reasonably good in practice, that's fine.\n> \n> \n> Aaron Voisine\n> co-founder and CEO\n> breadwallet.com <http://breadwallet.com/>\n> On Fri, Jun 19, 2015 at 6:09 PM, Mark Friedenbach <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:\n> What retail needs is escrowed microchannel hubs (what lightning provides, for example), which enable untrusted instant payments. Not reliance on single-signer zeroconf transactions that can never be made safe.\n> \n> On Fri, Jun 19, 2015 at 5:47 PM, Andreas Petersson <andreas at petersson.at <mailto:andreas at petersson.at>> wrote:\n> I have some experience here. If you are seriously suggesting these\n> measures, you might as well kill retail transactions altogether.\n> \n> In practice, if a retail place starts to accept bitcoin they have a\n> similar situation as with cash, only that the fraud potential is much\n> lower. (e.g. 100-dollar bill for a sandwich might turn out fake later)\n> and the fraud frequency is also much lower.\n> \n> 0-conf concerns were never a problem in practice. except for 2-way atms\n> i have never heard of a problem that was caused by double spends.\n> while adding these measures is generally positive, requiring them means\n> excluding 99.9% of the potential users. so you might as well not do it.\n> \n> RBF as implemented by F2Pool just flat out lowers Bitcoins utility\n> value. So it's a bad thing.\n> \n> for any online or automated system, waiting for a handful of\n> confirmations was always recommended practice.\n> \n> Am 19.06.2015 um 22:39 schrieb Matt Whitlock:\n> > Retail POS merchants probably should not be accepting vanilla Bitcoin\n> > payments, as Bitcoin alone does not (and cannot) guarantee the\n> > irreversibility of a transaction until it has been buried several\n> > blocks deep in the chain. Retail merchants should be requiring a\n> > co-signature from a mutually trusted co-signer that vows never to sign\n> > a double-spend.\n> \n> \n> ------------------------------------------------------------------------------\n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> \n> \n> ------------------------------------------------------------------------------\n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/21052728/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/21052728/attachment.sig>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-20T03:48:05",
                "message_text_only": "On Saturday, June 20, 2015 1:23:03 AM Aaron Voisine wrote:\n> They don't need to be made cryptographically safe, they just have to be\n> safer than, for instance, credit card payments that can be charged back. As\n> long as it's reasonably good in practice, that's fine.\n\nThey never will be. You can get a decent rate of success merely by making one \ntransaction propagate fast (eg, 1 input, 1 output) and the other slow (eg, \n1000 inputs, 1000 outputs) and choosing your peers carefully. The only reason \nunconfirmed transactions aren't double spent today is because nobody is \nseriously *trying*.\n\nLuke"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-20T04:02:06",
                "message_text_only": "> On Jun 19, 2015, at 8:48 PM, Luke Dashjr <luke at dashjr.org> wrote:\n> \n> On Saturday, June 20, 2015 1:23:03 AM Aaron Voisine wrote:\n>> They don't need to be made cryptographically safe, they just have to be\n>> safer than, for instance, credit card payments that can be charged back. As\n>> long as it's reasonably good in practice, that's fine.\n> \n> They never will be. You can get a decent rate of success merely by making one\n> transaction propagate fast (eg, 1 input, 1 output) and the other slow (eg,\n> 1000 inputs, 1000 outputs) and choosing your peers carefully. The only reason\n> unconfirmed transactions aren't double spent today is because nobody is\n> seriously *trying*.\n> \n> Luke\n> \n\n\nNewspapers are often sold in vending machines that make it possible for anyone to just pay the price of one and take them all\u2026and most of the time they are not that carefully monitored. Why? Because most people have better things to do than try to steal a few newspapers. They probably were much more closely monitored earlier in their history\u2026but once it became clear that despite the obvious attack vector very few people actually try to game it, vendors figured it wasn\u2019t really that big a risk. Same thing applies to people trying to steal a piece of bubble gum at the cash register at a convenience store by double-spending.\n\n- Eric Lombrozo\n\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/82936006/attachment.sig>"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-20T16:43:02",
                "message_text_only": "Yep - similarly: you live in a neighborhood with a local coffee store. Sure\nyou could use a stolen credit card or a fake $5 bill, but it's not worth\nthe risk of being caught for a $3 coffee. And on the other side, the store\ncan deal with 1% of transactions getting reversed or having a fake bill so\nthey don't change their procedures.\n\nPerfection is not necessary in all situations.\n\nOn Sat, Jun 20, 2015 at 12:02 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n>\n> > On Jun 19, 2015, at 8:48 PM, Luke Dashjr <luke at dashjr.org> wrote:\n> >\n> > On Saturday, June 20, 2015 1:23:03 AM Aaron Voisine wrote:\n> >> They don't need to be made cryptographically safe, they just have to be\n> >> safer than, for instance, credit card payments that can be charged\n> back. As\n> >> long as it's reasonably good in practice, that's fine.\n> >\n> > They never will be. You can get a decent rate of success merely by\n> making one\n> > transaction propagate fast (eg, 1 input, 1 output) and the other slow\n> (eg,\n> > 1000 inputs, 1000 outputs) and choosing your peers carefully. The only\n> reason\n> > unconfirmed transactions aren't double spent today is because nobody is\n> > seriously *trying*.\n> >\n> > Luke\n> >\n>\n>\n> Newspapers are often sold in vending machines that make it possible for\n> anyone to just pay the price of one and take them all\u2026and most of the time\n> they are not that carefully monitored. Why? Because most people have better\n> things to do than try to steal a few newspapers. They probably were much\n> more closely monitored earlier in their history\u2026but once it became clear\n> that despite the obvious attack vector very few people actually try to game\n> it, vendors figured it wasn\u2019t really that big a risk. Same thing applies to\n> people trying to steal a piece of bubble gum at the cash register at a\n> convenience store by double-spending.\n>\n> - Eric Lombrozo\n>\n> >\n> ------------------------------------------------------------------------------\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/5b12e445/attachment.html>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-19T14:40:59",
                "message_text_only": "On Fri, Jun 19, 2015 at 10:00 PM, Adrian Macneil <adrian at coinbase.com> wrote:\n> However, we do rely pretty heavily on zeroconf transactions for merchant\n> processing, so if any significant portion of the mining pools started\n> running your unsafe RBF patch, then we would probably need to look into this\n> as a way to prevent fraud.\n\nThis might be useful to you: https://www.f2pool.com/api/mempool"
            },
            {
                "author": "Adrian Macneil",
                "date": "2015-06-19T15:22:28",
                "message_text_only": "Great. Thank you for this!\n\nAdrian\n\nOn Fri, Jun 19, 2015 at 7:40 AM, Chun Wang <1240902 at gmail.com> wrote:\n\n> On Fri, Jun 19, 2015 at 10:00 PM, Adrian Macneil <adrian at coinbase.com>\n> wrote:\n> > However, we do rely pretty heavily on zeroconf transactions for merchant\n> > processing, so if any significant portion of the mining pools started\n> > running your unsafe RBF patch, then we would probably need to look into\n> this\n> > as a way to prevent fraud.\n>\n> This might be useful to you: https://www.f2pool.com/api/mempool\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/d962d207/attachment.html>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-19T13:33:05",
                "message_text_only": "It is disappointing that F2Pool would enable full RBF when the safe\nalternative, first-seen-safe RBF, is also available, especially since the\nfees they would gain by supporting full RBF over FSS RBF would likely be\nnegligible. Did they consider using FSS RBF instead?\n\nBest,\nStephen\n\nOn Fri, Jun 19, 2015 at 6:39 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> Yesterday F2Pool, currently the largest pool with 21% of the hashing\n> power, enabled full replace-by-fee (RBF) support after discussions with\n> me. This means that transactions that F2Pool has will be replaced if a\n> conflicting transaction pays a higher fee. There are no requirements for\n> the replacement transaction to pay addresses that were paid by the\n> previous transaction.\n>\n>\n> I'm a user. What does this mean for me?\n> ---------------------------------------\n>\n> In the short term, very little. Wallet software aimed at average users\n> has no ability to reliably detect conditions where an unconfirmed\n> transaction may be double-spent by the sender. For example, Schildbach's\n> Bitcoin Wallet for Android doesn't even detect double-spends of\n> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes\n> that propagate them. The least sophisticated double-spend attack\n> possibly - simply broadcasting two conflicting transactions at the same\n> time - has about 50% probability of success against these wallets.\n>\n> Additionally, SPV wallets based on bitcoinj can't even detect invalid\n> transactions reliably, instead trusting the full node(s) it is connected\n> too over the unauthenticated, unencrypted, P2P protocol to do validation\n> for them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\n> double-spends that spend the output of the conflicting transaction. I've\n> personally tested this with Schildbach's Bitcoin Wallet for Android,\n> which shows such invalid transactions as standard, unconfirmed,\n> transactions.\n>\n> Users should continue to assume that unconfirmed transactions could be\n> trivially reversed by the sender until the first confirmation. In\n> general, only the sender can reverse a transaction, so if you do trust\n> the sender feel free to assume an unconfirmed transaction will\n> eventually confirm. However, if you do not trust the sender and/or have\n> no other recourse if they double-spend you, wait until at least the\n> first confirmation before assuming the transaction will go through.\n>\n> In the long term, miner support of full RBF has a number of advantages\n> to users, allowing you to more efficiently make transactions, paying\n> lower fees. However you'll need a wallet supporting these features; none\n> exist yet.\n>\n>\n> I'm a business. What does this mean for me?\n> -------------------------------------------\n>\n> If you use your own node to verify transactions, you probably are in a\n> similar situation as average users, so again, this means very little to\n> you.\n>\n> If you use a payment processor/transaction API such as BitPay, Coinbase,\n> BlockCypher, etc. you may or may not be accepting unconfirmed\n> transactions, and they may or may not be \"guaranteed\" by your payment\n> processor even if double-spent. If like most merchants you're using the\n> API such that confirmations are required prior to accepting orders (e.g.\n> taking a meaningful loss such as shipping a product if the tx is\n> reversed) nothing changes for you. If not I recommend you contact your\n> payment processor.\n>\n>\n> I'm a miner. Why should I support replace-by-fee?\n> -------------------------------------------------\n>\n> Whether full or first-seen-safe\u2075 RBF support (along with\n> child-pays-for-parent) is an important step towards a fully functioning\n> transaction fee market that doesn't lead to users' transactions getting\n> mysteriously \"stuck\", particularly during network flooding\n> events/attacks. A better functioning fee market will help reduce\n> pressure to increase the blocksize, particularly from the users creating\n> the most valuable transactions.\n>\n> Full RBF also helps make use of the limited blockchain space more\n> efficiently, with up to 90%+ transaction size savings possible in some\n> transaction patterns. (e.g. long payment chains\u2076) More users in less\n> blockchain space will lead to higher overall fees per block.\n>\n> Finally as we'll discuss below full RBF prevents a number of serious\n> threats to the existing level playing field that miners operate in.\n>\n>\n> Why can't we make accepting unconfirmed txs from untrusted people safe?\n> -----------------------------------------------------------------------\n>\n> For a decentralized wallet, the situation is pretty bleak. These wallets\n> only have a handful of connections to the network, with no way of\n> knowing if those connections give an accurate view of what transactions\n> miners actually know about.\n>\n> The only serious attempt to fix this problem for decentralized wallets\n> that has been actually deployed is Andresen/Harding's double-spend\n> relaying, implemented in Bitcoin XT. It relays up to one double-spend\n> transaction per double-spent txout, with the intended effect to warn\n> recipients. In practice however this functionality makes it easier to\n> double-spend rather than harder, by giving an efficient and easy way to\n> get double-spends to miners after the fact. Notably my RBF\n> implementation even connects to Bitcoin XT nodes, reserving a % of all\n> incoming and outgoing connection slots for them.\n>\n> Additionally Bitcoin XT's double-spend relaying is subject to attacks\n> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\n> interactive attacks\u2077 among many others.\n>\n>\n> What about centralised wallets?\n> -------------------------------\n>\n> Here the solutions being deployed, planned, and proposed are harmful,\n> and even represent serious threats to Bitcoin's decentralization.\n>\n>\n> Confidence factors\n> ------------------\n>\n> Many services such as BlockCypher\u00b2 have attempted to predict the\n> probability that unconfirmed transactions will be mined, often\n> guaranteeing merchants payment\u00b3 even in the event of a double-spend. The\n> key component of these predictions is to sybil attack the P2P network as\n> a whole, connecting to as many nodes as possible to measure transaction\n> propagation. Additionally these services connect to pools directly via\n> the getblocktemplate protocol, repeatedly downloading via GBT the lists\n> of transactions in the to-be-mined blocks to determine what transactions\n> miners are attempting to mine.\n>\n> None of these measures scale, wasting significant network and miner\n> resources; in one instance a sybil attack by Chainalysis even completely\n> blocked the users of the SPV wallet Breadwallet\u2074 from accessing the\n> network. These measures also don't work very well, giving double-spend\n> attackers incentives to sybil attack miners themselves.\n>\n>\n> Transaction processing contracts with miners\n> --------------------------------------------\n>\n> The next step after measuring propagation fails is to contract with\n> miners directly, signing contracts with as much of the hashing power as\n> possible to get the transactions they want mined and double-spends\n> rejected. The miners/pools would then provide an authenticated API\n> endpoint for exclusive use of this service that would allow the service\n> to add and remove specific transactions to the mempool on demand.\n>\n> There's a number of serious problems with this:\n>\n> 1) Mining contracts can be used to double-spend\n>\n> ...even when they're being used \"honestly\".\n>\n> Suppose Alice is a merchant using CoinPayCypher, who has contracts with\n> 75% of the hashing power. Bob, another merchant, meanwhile uses a\n> decentralized Bitcoin Core backend for payments to his website.\n>\n> Mallory wants to double-spend Bob's to buy his expensive products. He\n> can do this by creating a transaction, tx1, that pays Alice, followed by\n> a second transaction, tx2, that pays Bob. In any circumstance when\n> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\n> the chance of Malory's double-spend succeeding becomes ~75% because\n> CoinPayCypher's contracts with mining ensure the transaction paying\n> Alice will get mined.\n>\n> Of course, dishonest use and/or compromise makes double-spending\n> trivial: Malory can use the API credentials to ask miners to reject\n> Bob's payment at any time.\n>\n>\n> 2) They still don't work, without 51% attacking other miners\n>\n> Even if CoinPayCypher has 75% of the hashing power on contract, that's\n> still a potentially 75% chance of being double-spent. The 25% of miners\n> who haven't signed contracts have no _decentralized_ way of ensuring\n> they don't create blocks with double-spends, let alone at low cost. If\n> those miners won't or can't sign contracts with CoinPayCypher the only\n> next step available is to reject their blocks entirely.\n>\n>\n> 3) Legal contracts give the advantage to non-anonymous miners in\n>    Western jurisdictions\n>\n> Suppose CoinPayCypher is a US company, and you're a miner with 1%\n> hashing power located in northern China. The barriers to you succesfully\n> negotiating a contract with CoinPayCypher are significant. You don't\n> speak the same langauge, you're in a completely different jurisdiction\n> so enforcing the legal contract is difficult, and being just 1%,\n> CoinPayCypher sees you as insignificant.\n>\n> Who's going to get the profitable hashing power contracts first, if at\n> all? Your English speaking competitors in the west. This is inherently a\n> pressure towards centralization of mining.\n>\n>\n> Why isn't this being announced on the bitcoin-security list first?\n> ------------------------------------------------------------------\n>\n> I've had repeated discussions with services vulnerable to double-spends;\n> they have been made well aware of the risk they're taking. If they've\n> followed my own and others' advice they'll at minimum have constant\n> monitoring of the rate of double-spends both on their own services and\n> on the P2P network in general.\n>\n> If you choose to take a risk you should accept the consequences.\n>\n>\n> How do I actually use full RBF?\n> -------------------------------\n>\n> First get the full-RBF patch to v0.10.2:\n>\n>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n>\n> The above implementation of RBF includes additional code to find and\n> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\n> Secondly, try out my replace-by-fee-tools at:\n>\n>     https://github.com/petertodd/replace-by-fee-tools\n>\n> You can watch double-spends on the network here:\n>\n>     http://respends.thinlink.com/\n>\n>\n> References\n> ----------\n>\n> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet\",\n>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n>\n> 2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n>    June 2nd, 2014, Erik Voorhees,\n>\n> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n>\n> 3) Coinbase Merchant API, Accessed Jun 19th 2015,\n>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>\n> 4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n>    March 14th 2015, Grace Caffyn, Coindesk,\n>\n> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n>\n> 5) \"First-Seen-Safe Replace-by-Fee\",\n>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>\n> 6) \"Cost savings by using replace-by-fee, 30-90%\",\n>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>\n> 7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan\n> Capkun,\n>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n>     http://eprint.iacr.org/2015/578\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/331698c4/attachment.html>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-19T13:37:49",
                "message_text_only": "Hello. We recognize the problem. We will switch to FSS RBF soon. Thanks.\n\nOn Fri, Jun 19, 2015 at 9:33 PM, Stephen Morse\n<stephencalebmorse at gmail.com> wrote:\n> It is disappointing that F2Pool would enable full RBF when the safe\n> alternative, first-seen-safe RBF, is also available, especially since the\n> fees they would gain by supporting full RBF over FSS RBF would likely be\n> negligible. Did they consider using FSS RBF instead?\n>\n> Best,\n> Stephen\n>\n> On Fri, Jun 19, 2015 at 6:39 AM, Peter Todd <pete at petertodd.org> wrote:\n>>\n>> Yesterday F2Pool, currently the largest pool with 21% of the hashing\n>> power, enabled full replace-by-fee (RBF) support after discussions with\n>> me. This means that transactions that F2Pool has will be replaced if a\n>> conflicting transaction pays a higher fee. There are no requirements for\n>> the replacement transaction to pay addresses that were paid by the\n>> previous transaction.\n>>\n>>\n>> I'm a user. What does this mean for me?\n>> ---------------------------------------\n>>\n>> In the short term, very little. Wallet software aimed at average users\n>> has no ability to reliably detect conditions where an unconfirmed\n>> transaction may be double-spent by the sender. For example, Schildbach's\n>> Bitcoin Wallet for Android doesn't even detect double-spends of\n>> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes\n>> that propagate them. The least sophisticated double-spend attack\n>> possibly - simply broadcasting two conflicting transactions at the same\n>> time - has about 50% probability of success against these wallets.\n>>\n>> Additionally, SPV wallets based on bitcoinj can't even detect invalid\n>> transactions reliably, instead trusting the full node(s) it is connected\n>> too over the unauthenticated, unencrypted, P2P protocol to do validation\n>> for them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\n>> double-spends that spend the output of the conflicting transaction. I've\n>> personally tested this with Schildbach's Bitcoin Wallet for Android,\n>> which shows such invalid transactions as standard, unconfirmed,\n>> transactions.\n>>\n>> Users should continue to assume that unconfirmed transactions could be\n>> trivially reversed by the sender until the first confirmation. In\n>> general, only the sender can reverse a transaction, so if you do trust\n>> the sender feel free to assume an unconfirmed transaction will\n>> eventually confirm. However, if you do not trust the sender and/or have\n>> no other recourse if they double-spend you, wait until at least the\n>> first confirmation before assuming the transaction will go through.\n>>\n>> In the long term, miner support of full RBF has a number of advantages\n>> to users, allowing you to more efficiently make transactions, paying\n>> lower fees. However you'll need a wallet supporting these features; none\n>> exist yet.\n>>\n>>\n>> I'm a business. What does this mean for me?\n>> -------------------------------------------\n>>\n>> If you use your own node to verify transactions, you probably are in a\n>> similar situation as average users, so again, this means very little to\n>> you.\n>>\n>> If you use a payment processor/transaction API such as BitPay, Coinbase,\n>> BlockCypher, etc. you may or may not be accepting unconfirmed\n>> transactions, and they may or may not be \"guaranteed\" by your payment\n>> processor even if double-spent. If like most merchants you're using the\n>> API such that confirmations are required prior to accepting orders (e.g.\n>> taking a meaningful loss such as shipping a product if the tx is\n>> reversed) nothing changes for you. If not I recommend you contact your\n>> payment processor.\n>>\n>>\n>> I'm a miner. Why should I support replace-by-fee?\n>> -------------------------------------------------\n>>\n>> Whether full or first-seen-safe\u2075 RBF support (along with\n>> child-pays-for-parent) is an important step towards a fully functioning\n>> transaction fee market that doesn't lead to users' transactions getting\n>> mysteriously \"stuck\", particularly during network flooding\n>> events/attacks. A better functioning fee market will help reduce\n>> pressure to increase the blocksize, particularly from the users creating\n>> the most valuable transactions.\n>>\n>> Full RBF also helps make use of the limited blockchain space more\n>> efficiently, with up to 90%+ transaction size savings possible in some\n>> transaction patterns. (e.g. long payment chains\u2076) More users in less\n>> blockchain space will lead to higher overall fees per block.\n>>\n>> Finally as we'll discuss below full RBF prevents a number of serious\n>> threats to the existing level playing field that miners operate in.\n>>\n>>\n>> Why can't we make accepting unconfirmed txs from untrusted people safe?\n>> -----------------------------------------------------------------------\n>>\n>> For a decentralized wallet, the situation is pretty bleak. These wallets\n>> only have a handful of connections to the network, with no way of\n>> knowing if those connections give an accurate view of what transactions\n>> miners actually know about.\n>>\n>> The only serious attempt to fix this problem for decentralized wallets\n>> that has been actually deployed is Andresen/Harding's double-spend\n>> relaying, implemented in Bitcoin XT. It relays up to one double-spend\n>> transaction per double-spent txout, with the intended effect to warn\n>> recipients. In practice however this functionality makes it easier to\n>> double-spend rather than harder, by giving an efficient and easy way to\n>> get double-spends to miners after the fact. Notably my RBF\n>> implementation even connects to Bitcoin XT nodes, reserving a % of all\n>> incoming and outgoing connection slots for them.\n>>\n>> Additionally Bitcoin XT's double-spend relaying is subject to attacks\n>> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\n>> interactive attacks\u2077 among many others.\n>>\n>>\n>> What about centralised wallets?\n>> -------------------------------\n>>\n>> Here the solutions being deployed, planned, and proposed are harmful,\n>> and even represent serious threats to Bitcoin's decentralization.\n>>\n>>\n>> Confidence factors\n>> ------------------\n>>\n>> Many services such as BlockCypher\u00b2 have attempted to predict the\n>> probability that unconfirmed transactions will be mined, often\n>> guaranteeing merchants payment\u00b3 even in the event of a double-spend. The\n>> key component of these predictions is to sybil attack the P2P network as\n>> a whole, connecting to as many nodes as possible to measure transaction\n>> propagation. Additionally these services connect to pools directly via\n>> the getblocktemplate protocol, repeatedly downloading via GBT the lists\n>> of transactions in the to-be-mined blocks to determine what transactions\n>> miners are attempting to mine.\n>>\n>> None of these measures scale, wasting significant network and miner\n>> resources; in one instance a sybil attack by Chainalysis even completely\n>> blocked the users of the SPV wallet Breadwallet\u2074 from accessing the\n>> network. These measures also don't work very well, giving double-spend\n>> attackers incentives to sybil attack miners themselves.\n>>\n>>\n>> Transaction processing contracts with miners\n>> --------------------------------------------\n>>\n>> The next step after measuring propagation fails is to contract with\n>> miners directly, signing contracts with as much of the hashing power as\n>> possible to get the transactions they want mined and double-spends\n>> rejected. The miners/pools would then provide an authenticated API\n>> endpoint for exclusive use of this service that would allow the service\n>> to add and remove specific transactions to the mempool on demand.\n>>\n>> There's a number of serious problems with this:\n>>\n>> 1) Mining contracts can be used to double-spend\n>>\n>> ...even when they're being used \"honestly\".\n>>\n>> Suppose Alice is a merchant using CoinPayCypher, who has contracts with\n>> 75% of the hashing power. Bob, another merchant, meanwhile uses a\n>> decentralized Bitcoin Core backend for payments to his website.\n>>\n>> Mallory wants to double-spend Bob's to buy his expensive products. He\n>> can do this by creating a transaction, tx1, that pays Alice, followed by\n>> a second transaction, tx2, that pays Bob. In any circumstance when\n>> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\n>> the chance of Malory's double-spend succeeding becomes ~75% because\n>> CoinPayCypher's contracts with mining ensure the transaction paying\n>> Alice will get mined.\n>>\n>> Of course, dishonest use and/or compromise makes double-spending\n>> trivial: Malory can use the API credentials to ask miners to reject\n>> Bob's payment at any time.\n>>\n>>\n>> 2) They still don't work, without 51% attacking other miners\n>>\n>> Even if CoinPayCypher has 75% of the hashing power on contract, that's\n>> still a potentially 75% chance of being double-spent. The 25% of miners\n>> who haven't signed contracts have no _decentralized_ way of ensuring\n>> they don't create blocks with double-spends, let alone at low cost. If\n>> those miners won't or can't sign contracts with CoinPayCypher the only\n>> next step available is to reject their blocks entirely.\n>>\n>>\n>> 3) Legal contracts give the advantage to non-anonymous miners in\n>>    Western jurisdictions\n>>\n>> Suppose CoinPayCypher is a US company, and you're a miner with 1%\n>> hashing power located in northern China. The barriers to you succesfully\n>> negotiating a contract with CoinPayCypher are significant. You don't\n>> speak the same langauge, you're in a completely different jurisdiction\n>> so enforcing the legal contract is difficult, and being just 1%,\n>> CoinPayCypher sees you as insignificant.\n>>\n>> Who's going to get the profitable hashing power contracts first, if at\n>> all? Your English speaking competitors in the west. This is inherently a\n>> pressure towards centralization of mining.\n>>\n>>\n>> Why isn't this being announced on the bitcoin-security list first?\n>> ------------------------------------------------------------------\n>>\n>> I've had repeated discussions with services vulnerable to double-spends;\n>> they have been made well aware of the risk they're taking. If they've\n>> followed my own and others' advice they'll at minimum have constant\n>> monitoring of the rate of double-spends both on their own services and\n>> on the P2P network in general.\n>>\n>> If you choose to take a risk you should accept the consequences.\n>>\n>>\n>> How do I actually use full RBF?\n>> -------------------------------\n>>\n>> First get the full-RBF patch to v0.10.2:\n>>\n>>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n>>\n>> The above implementation of RBF includes additional code to find and\n>> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\n>> Secondly, try out my replace-by-fee-tools at:\n>>\n>>     https://github.com/petertodd/replace-by-fee-tools\n>>\n>> You can watch double-spends on the network here:\n>>\n>>     http://respends.thinlink.com/\n>>\n>>\n>> References\n>> ----------\n>>\n>> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n>>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin\n>> Wallet\",\n>>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n>>\n>> 2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n>>    June 2nd, 2014, Erik Voorhees,\n>>\n>> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n>>\n>> 3) Coinbase Merchant API, Accessed Jun 19th 2015,\n>>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>>\n>> 4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n>>    March 14th 2015, Grace Caffyn, Coindesk,\n>>\n>> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n>>\n>> 5) \"First-Seen-Safe Replace-by-Fee\",\n>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>>\n>> 6) \"Cost savings by using replace-by-fee, 30-90%\",\n>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>>\n>> 7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n>>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan\n>> Capkun,\n>>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n>>     http://eprint.iacr.org/2015/578\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T13:48:21",
                "message_text_only": "On Fri, Jun 19, 2015 at 09:37:49PM +0800, Chun Wang wrote:\n> Hello. We recognize the problem. We will switch to FSS RBF soon. Thanks.\n\nNo worries, let me know if you have any issues. You have my phone\nnumber.\n\nWhile my own preference - and a number of other devs - is full-RBF,\neither one is a good step forward for Bitcoin.\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/801d33e3/attachment.sig>"
            },
            {
                "author": "Lawrence Nahum",
                "date": "2015-06-19T14:16:23",
                "message_text_only": "Chun Wang <1240902 <at> gmail.com> writes:\n\n> Hello. We recognize the problem. We will switch to FSS RBF soon. Thanks.\n\nFSS RBF is better than no RBF but we think it is better to use full RBF.\n\nWe think Full RBF is better for a number of reasons:\n\n-user experience\n-efficiency\n-cost\n-code complexity\n\nWe think FSS RBF is  great progress but ultimately less efficient and more \ncomplicated to keep alive something that never worked properly.\n\nAnd why would miner pick the option paying less when other miners run the \noption paying more? It may be soon more than 1-5% of block reward.\n\nA lot of users don't have multiple UTXO handy.\n\nFull RBF is the best, second FSS RBF and we'd be looking into supporting \nthem both separately so that miners and users can pick whichever they \nprefer.\n\nIf users only had one UTXO it makes sense to use Full RBF since there are no \nother options.\n\nDisclosure: GreenAddress always believed zero conf transactions are not \nsecure and that miners have the incentive to run FBF; this bias doesn't make \nthe above less true"
            },
            {
                "author": "Adrian Macneil",
                "date": "2015-06-19T13:40:23",
                "message_text_only": "Extremely disappointed to hear this. This change turns double spending from\na calculable (and affordable) risk for merchant payment processors into\ncertain profit for scammers, and provides no useful benefit for consumers.\n\nI sincerely hope that F2Pool reconsider, given that RBF will decrease the\noverall utility of bitcoin and reduce the number of people using it for\nonline purchases.\n\nAdrian\n\n\n\n\nOn Fri, Jun 19, 2015 at 6:33 AM, Stephen Morse <stephencalebmorse at gmail.com>\nwrote:\n\n> It is disappointing that F2Pool would enable full RBF when the safe\n> alternative, first-seen-safe RBF, is also available, especially since the\n> fees they would gain by supporting full RBF over FSS RBF would likely be\n> negligible. Did they consider using FSS RBF instead?\n>\n> Best,\n> Stephen\n>\n> On Fri, Jun 19, 2015 at 6:39 AM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> Yesterday F2Pool, currently the largest pool with 21% of the hashing\n>> power, enabled full replace-by-fee (RBF) support after discussions with\n>> me. This means that transactions that F2Pool has will be replaced if a\n>> conflicting transaction pays a higher fee. There are no requirements for\n>> the replacement transaction to pay addresses that were paid by the\n>> previous transaction.\n>>\n>>\n>> I'm a user. What does this mean for me?\n>> ---------------------------------------\n>>\n>> In the short term, very little. Wallet software aimed at average users\n>> has no ability to reliably detect conditions where an unconfirmed\n>> transaction may be double-spent by the sender. For example, Schildbach's\n>> Bitcoin Wallet for Android doesn't even detect double-spends of\n>> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes\n>> that propagate them. The least sophisticated double-spend attack\n>> possibly - simply broadcasting two conflicting transactions at the same\n>> time - has about 50% probability of success against these wallets.\n>>\n>> Additionally, SPV wallets based on bitcoinj can't even detect invalid\n>> transactions reliably, instead trusting the full node(s) it is connected\n>> too over the unauthenticated, unencrypted, P2P protocol to do validation\n>> for them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\n>> double-spends that spend the output of the conflicting transaction. I've\n>> personally tested this with Schildbach's Bitcoin Wallet for Android,\n>> which shows such invalid transactions as standard, unconfirmed,\n>> transactions.\n>>\n>> Users should continue to assume that unconfirmed transactions could be\n>> trivially reversed by the sender until the first confirmation. In\n>> general, only the sender can reverse a transaction, so if you do trust\n>> the sender feel free to assume an unconfirmed transaction will\n>> eventually confirm. However, if you do not trust the sender and/or have\n>> no other recourse if they double-spend you, wait until at least the\n>> first confirmation before assuming the transaction will go through.\n>>\n>> In the long term, miner support of full RBF has a number of advantages\n>> to users, allowing you to more efficiently make transactions, paying\n>> lower fees. However you'll need a wallet supporting these features; none\n>> exist yet.\n>>\n>>\n>> I'm a business. What does this mean for me?\n>> -------------------------------------------\n>>\n>> If you use your own node to verify transactions, you probably are in a\n>> similar situation as average users, so again, this means very little to\n>> you.\n>>\n>> If you use a payment processor/transaction API such as BitPay, Coinbase,\n>> BlockCypher, etc. you may or may not be accepting unconfirmed\n>> transactions, and they may or may not be \"guaranteed\" by your payment\n>> processor even if double-spent. If like most merchants you're using the\n>> API such that confirmations are required prior to accepting orders (e.g.\n>> taking a meaningful loss such as shipping a product if the tx is\n>> reversed) nothing changes for you. If not I recommend you contact your\n>> payment processor.\n>>\n>>\n>> I'm a miner. Why should I support replace-by-fee?\n>> -------------------------------------------------\n>>\n>> Whether full or first-seen-safe\u2075 RBF support (along with\n>> child-pays-for-parent) is an important step towards a fully functioning\n>> transaction fee market that doesn't lead to users' transactions getting\n>> mysteriously \"stuck\", particularly during network flooding\n>> events/attacks. A better functioning fee market will help reduce\n>> pressure to increase the blocksize, particularly from the users creating\n>> the most valuable transactions.\n>>\n>> Full RBF also helps make use of the limited blockchain space more\n>> efficiently, with up to 90%+ transaction size savings possible in some\n>> transaction patterns. (e.g. long payment chains\u2076) More users in less\n>> blockchain space will lead to higher overall fees per block.\n>>\n>> Finally as we'll discuss below full RBF prevents a number of serious\n>> threats to the existing level playing field that miners operate in.\n>>\n>>\n>> Why can't we make accepting unconfirmed txs from untrusted people safe?\n>> -----------------------------------------------------------------------\n>>\n>> For a decentralized wallet, the situation is pretty bleak. These wallets\n>> only have a handful of connections to the network, with no way of\n>> knowing if those connections give an accurate view of what transactions\n>> miners actually know about.\n>>\n>> The only serious attempt to fix this problem for decentralized wallets\n>> that has been actually deployed is Andresen/Harding's double-spend\n>> relaying, implemented in Bitcoin XT. It relays up to one double-spend\n>> transaction per double-spent txout, with the intended effect to warn\n>> recipients. In practice however this functionality makes it easier to\n>> double-spend rather than harder, by giving an efficient and easy way to\n>> get double-spends to miners after the fact. Notably my RBF\n>> implementation even connects to Bitcoin XT nodes, reserving a % of all\n>> incoming and outgoing connection slots for them.\n>>\n>> Additionally Bitcoin XT's double-spend relaying is subject to attacks\n>> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\n>> interactive attacks\u2077 among many others.\n>>\n>>\n>> What about centralised wallets?\n>> -------------------------------\n>>\n>> Here the solutions being deployed, planned, and proposed are harmful,\n>> and even represent serious threats to Bitcoin's decentralization.\n>>\n>>\n>> Confidence factors\n>> ------------------\n>>\n>> Many services such as BlockCypher\u00b2 have attempted to predict the\n>> probability that unconfirmed transactions will be mined, often\n>> guaranteeing merchants payment\u00b3 even in the event of a double-spend. The\n>> key component of these predictions is to sybil attack the P2P network as\n>> a whole, connecting to as many nodes as possible to measure transaction\n>> propagation. Additionally these services connect to pools directly via\n>> the getblocktemplate protocol, repeatedly downloading via GBT the lists\n>> of transactions in the to-be-mined blocks to determine what transactions\n>> miners are attempting to mine.\n>>\n>> None of these measures scale, wasting significant network and miner\n>> resources; in one instance a sybil attack by Chainalysis even completely\n>> blocked the users of the SPV wallet Breadwallet\u2074 from accessing the\n>> network. These measures also don't work very well, giving double-spend\n>> attackers incentives to sybil attack miners themselves.\n>>\n>>\n>> Transaction processing contracts with miners\n>> --------------------------------------------\n>>\n>> The next step after measuring propagation fails is to contract with\n>> miners directly, signing contracts with as much of the hashing power as\n>> possible to get the transactions they want mined and double-spends\n>> rejected. The miners/pools would then provide an authenticated API\n>> endpoint for exclusive use of this service that would allow the service\n>> to add and remove specific transactions to the mempool on demand.\n>>\n>> There's a number of serious problems with this:\n>>\n>> 1) Mining contracts can be used to double-spend\n>>\n>> ...even when they're being used \"honestly\".\n>>\n>> Suppose Alice is a merchant using CoinPayCypher, who has contracts with\n>> 75% of the hashing power. Bob, another merchant, meanwhile uses a\n>> decentralized Bitcoin Core backend for payments to his website.\n>>\n>> Mallory wants to double-spend Bob's to buy his expensive products. He\n>> can do this by creating a transaction, tx1, that pays Alice, followed by\n>> a second transaction, tx2, that pays Bob. In any circumstance when\n>> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\n>> the chance of Malory's double-spend succeeding becomes ~75% because\n>> CoinPayCypher's contracts with mining ensure the transaction paying\n>> Alice will get mined.\n>>\n>> Of course, dishonest use and/or compromise makes double-spending\n>> trivial: Malory can use the API credentials to ask miners to reject\n>> Bob's payment at any time.\n>>\n>>\n>> 2) They still don't work, without 51% attacking other miners\n>>\n>> Even if CoinPayCypher has 75% of the hashing power on contract, that's\n>> still a potentially 75% chance of being double-spent. The 25% of miners\n>> who haven't signed contracts have no _decentralized_ way of ensuring\n>> they don't create blocks with double-spends, let alone at low cost. If\n>> those miners won't or can't sign contracts with CoinPayCypher the only\n>> next step available is to reject their blocks entirely.\n>>\n>>\n>> 3) Legal contracts give the advantage to non-anonymous miners in\n>>    Western jurisdictions\n>>\n>> Suppose CoinPayCypher is a US company, and you're a miner with 1%\n>> hashing power located in northern China. The barriers to you succesfully\n>> negotiating a contract with CoinPayCypher are significant. You don't\n>> speak the same langauge, you're in a completely different jurisdiction\n>> so enforcing the legal contract is difficult, and being just 1%,\n>> CoinPayCypher sees you as insignificant.\n>>\n>> Who's going to get the profitable hashing power contracts first, if at\n>> all? Your English speaking competitors in the west. This is inherently a\n>> pressure towards centralization of mining.\n>>\n>>\n>> Why isn't this being announced on the bitcoin-security list first?\n>> ------------------------------------------------------------------\n>>\n>> I've had repeated discussions with services vulnerable to double-spends;\n>> they have been made well aware of the risk they're taking. If they've\n>> followed my own and others' advice they'll at minimum have constant\n>> monitoring of the rate of double-spends both on their own services and\n>> on the P2P network in general.\n>>\n>> If you choose to take a risk you should accept the consequences.\n>>\n>>\n>> How do I actually use full RBF?\n>> -------------------------------\n>>\n>> First get the full-RBF patch to v0.10.2:\n>>\n>>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n>>\n>> The above implementation of RBF includes additional code to find and\n>> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\n>> Secondly, try out my replace-by-fee-tools at:\n>>\n>>     https://github.com/petertodd/replace-by-fee-tools\n>>\n>> You can watch double-spends on the network here:\n>>\n>>     http://respends.thinlink.com/\n>>\n>>\n>> References\n>> ----------\n>>\n>> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n>>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin\n>> Wallet\",\n>>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n>>\n>> 2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n>>    June 2nd, 2014, Erik Voorhees,\n>>\n>> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n>>\n>> 3) Coinbase Merchant API, Accessed Jun 19th 2015,\n>>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>>\n>> 4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n>>    March 14th 2015, Grace Caffyn, Coindesk,\n>>\n>> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n>>\n>> 5) \"First-Seen-Safe Replace-by-Fee\",\n>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>>\n>> 6) \"Cost savings by using replace-by-fee, 30-90%\",\n>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>>\n>> 7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n>>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan\n>> Capkun,\n>>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n>>     http://eprint.iacr.org/2015/578\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/54877f1f/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T13:44:08",
                "message_text_only": "On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:\n> It is disappointing that F2Pool would enable full RBF when the safe\n> alternative, first-seen-safe RBF, is also available, especially since the\n> fees they would gain by supporting full RBF over FSS RBF would likely be\n> negligible. Did they consider using FSS RBF instead?\n\nSpecifically the following is what I told them:\n\n> We are\n> interested in the replace-by-fee patch, but I am not following the\n> development closely, more background info is needed, like what the\n> difference between standard and zeroconf versions? Thanks.\n\nGreat!\n\nBasically both let you replace one transaction with another that pays a\nhigher fee. First-seen-safe replace-by-fee adds the additional criteria\nthat all outputs of the old transaction still need to be paid by the new\ntransaction, with >= as many Bitcoins. Basically, it makes sure that if\nsomeone was paid by tx1, then tx2 will still pay them.\n\nI've written about how wallets can use RBF and FSS-RBF to more\nefficiently use the blockchain on the bitcoin-development mailing list:\n\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07829.html\n\nBasically, for the purpose of increasing fees, RBF is something like %50\ncheaper than CPFP, and FSS-RBF is something like %25 cheaper.\n\nIn addition, for ease of implementation, my new FSS-RBF has a number of\nother restrictions. For instance, you can't replace multiple\ntransactions with one, you can't replace a transaction whose outputs\nhave already been spent, you can't replace a transaction with one that\nspends additional unconfirmed inputs, etc. These restrictions aren't\n\"set in stone\", but they do make the code simpler and less likely to\nhave bugs.\n\nIn comparison my previous standard RBF patch can replace multiple\ntransactions with one, can replace long chains of transactions, etc.\nIt's willing to do more computation before deciding if a transaction\nshould be replaced, with more complex logic; it probably has a higher\nchance of having a bug or DoS attack.\n\nYou've probably seen the huge controversy around zeroconf with regard to\nstandard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,\nit also doesn't make it any more dangerous, so politically with regard\nto zeroconf it makes no difference. You *can* still use it doublespend\nby taking advantage of how different transactions are accepted\ndifferently, but that's true of *every* change we've ever made to\nBitcoin Core - by upgrading to v0.10 from v0.9 you've also \"broken\"\nzeroconf in the same way.\n\n\nHaving said that... honestly, zeroconf is pretty broken already. Only\nwith pretty heroic measures like connecting to a significant fraction of\nthe Bitcoin network at once, as well as connecting to getblocktemplate\nsupporting miners to figure out what transactions are being mined, are\nservices having any hope of avoiding getting ripped off. For the average\nuser their wallets do a terrible job of showing whether or not an\nunconfirmed transaction will go through. For example, Schildbach's\nBitcoin wallet for Android has no code at all to detect double-spends\nuntil they get mined, and I've been able to trick it into showing\ncompletely invalid transactions. In fact, currently Bitcoin XT will\nrelay invalid transactions that are doublepsends, and Schildbach's\nwallet displays them as valid, unconfirmed, payments. It's really no\nsurprise to me that nearly no-one in the Bitcoin ecosystem accepts\nunconfirmed transactions without some kind of protection that doesn't\nrely on first-seen-safe mempool behavior. For instance, many ATM's these\ndays know who their customers are due to AML requirements, so while you\ncan deposit Bitcoins and get your funds instantly, the protection for\nthe ATM operator is that they can go to the police if you rip them off;\nI've spoken to ATM operators who didn't do this who've lost hundreds or\neven thousands of dollars before giving up on zeroconf.\n\nMy big worry with zeroconf is a service like Coinbase or Shapeshift\ncoming to rely on it, and then attempting to secure it by gaining\ncontrol of a majority of hashing power. For instance, if Coinbase had\ncontracts with 80% of the Bitcoin hashing power to guarantee their\ntransactions would get mined, but 20% of the hashing power didn't sign\nup, then the only way to guarantee their transactions could be for the\n80% to not build on blocks containing doublespends by the 20%. There's\nno way in a decentralized network to come to consensus about what\ntransactions are or are not valid without mining itself, so you could\nend up in a situation where unless you're part of one of the big pools\nyou can't reliably mine at all because your blocks may get rejected for\ncontaining doublespends.\n\nOne of my goal with standard replace-by-fee is to prevent this scenario\nby forcing merchants and others to implement ways of accepting zeroconf\ntransactions safely that work in a decentralized environment regardless\nof what miners do; we have a stronger and safer Bitcoin ecosystem if\nwe're relying on math rather than trust to secure our zeroconf\ntransactions. We're also being more honest to users, who right now often\nhave the very wrong impression that unconfirmed transactions are safe to\naccept - this does get people ripped off all too often!\n\n\nAnyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am\nwaiting to get some feedback:\n\n    https://github.com/bitcoin/bitcoin/pull/6176\n\nSuhas Daftuar did find a pretty serious bug in it, now fixed. I'm\nworking on porting it to v0.10.2, and once that's done I'm going to put\nup a bounty for anyone who can find a DoS attack in the patch. If no-one\nclaims the bounty after a week or two I think I'll start feeling\nconfident about using it in production.\n\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/0ea5bf90/attachment.sig>"
            },
            {
                "author": "Chun Wang",
                "date": "2015-06-19T13:52:40",
                "message_text_only": "Before F2Pool's launch, I performed probably the only successful\nbitcoin double spend in the March 2013 fork without any mining power.\n[ https://bitcointalk.org/index.php?topic=152348.0 ] I know how bad\nthe full RBF is. We are going to switch to FSS RBF in a few hours.\nSorry.\n\nOn Fri, Jun 19, 2015 at 9:44 PM, Peter Todd <pete at petertodd.org> wrote:\n> On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:\n>> It is disappointing that F2Pool would enable full RBF when the safe\n>> alternative, first-seen-safe RBF, is also available, especially since the\n>> fees they would gain by supporting full RBF over FSS RBF would likely be\n>> negligible. Did they consider using FSS RBF instead?\n>\n> Specifically the following is what I told them:\n>\n>> We are\n>> interested in the replace-by-fee patch, but I am not following the\n>> development closely, more background info is needed, like what the\n>> difference between standard and zeroconf versions? Thanks.\n>\n> Great!\n>\n> Basically both let you replace one transaction with another that pays a\n> higher fee. First-seen-safe replace-by-fee adds the additional criteria\n> that all outputs of the old transaction still need to be paid by the new\n> transaction, with >= as many Bitcoins. Basically, it makes sure that if\n> someone was paid by tx1, then tx2 will still pay them.\n>\n> I've written about how wallets can use RBF and FSS-RBF to more\n> efficiently use the blockchain on the bitcoin-development mailing list:\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07829.html\n>\n> Basically, for the purpose of increasing fees, RBF is something like %50\n> cheaper than CPFP, and FSS-RBF is something like %25 cheaper.\n>\n> In addition, for ease of implementation, my new FSS-RBF has a number of\n> other restrictions. For instance, you can't replace multiple\n> transactions with one, you can't replace a transaction whose outputs\n> have already been spent, you can't replace a transaction with one that\n> spends additional unconfirmed inputs, etc. These restrictions aren't\n> \"set in stone\", but they do make the code simpler and less likely to\n> have bugs.\n>\n> In comparison my previous standard RBF patch can replace multiple\n> transactions with one, can replace long chains of transactions, etc.\n> It's willing to do more computation before deciding if a transaction\n> should be replaced, with more complex logic; it probably has a higher\n> chance of having a bug or DoS attack.\n>\n> You've probably seen the huge controversy around zeroconf with regard to\n> standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,\n> it also doesn't make it any more dangerous, so politically with regard\n> to zeroconf it makes no difference. You *can* still use it doublespend\n> by taking advantage of how different transactions are accepted\n> differently, but that's true of *every* change we've ever made to\n> Bitcoin Core - by upgrading to v0.10 from v0.9 you've also \"broken\"\n> zeroconf in the same way.\n>\n>\n> Having said that... honestly, zeroconf is pretty broken already. Only\n> with pretty heroic measures like connecting to a significant fraction of\n> the Bitcoin network at once, as well as connecting to getblocktemplate\n> supporting miners to figure out what transactions are being mined, are\n> services having any hope of avoiding getting ripped off. For the average\n> user their wallets do a terrible job of showing whether or not an\n> unconfirmed transaction will go through. For example, Schildbach's\n> Bitcoin wallet for Android has no code at all to detect double-spends\n> until they get mined, and I've been able to trick it into showing\n> completely invalid transactions. In fact, currently Bitcoin XT will\n> relay invalid transactions that are doublepsends, and Schildbach's\n> wallet displays them as valid, unconfirmed, payments. It's really no\n> surprise to me that nearly no-one in the Bitcoin ecosystem accepts\n> unconfirmed transactions without some kind of protection that doesn't\n> rely on first-seen-safe mempool behavior. For instance, many ATM's these\n> days know who their customers are due to AML requirements, so while you\n> can deposit Bitcoins and get your funds instantly, the protection for\n> the ATM operator is that they can go to the police if you rip them off;\n> I've spoken to ATM operators who didn't do this who've lost hundreds or\n> even thousands of dollars before giving up on zeroconf.\n>\n> My big worry with zeroconf is a service like Coinbase or Shapeshift\n> coming to rely on it, and then attempting to secure it by gaining\n> control of a majority of hashing power. For instance, if Coinbase had\n> contracts with 80% of the Bitcoin hashing power to guarantee their\n> transactions would get mined, but 20% of the hashing power didn't sign\n> up, then the only way to guarantee their transactions could be for the\n> 80% to not build on blocks containing doublespends by the 20%. There's\n> no way in a decentralized network to come to consensus about what\n> transactions are or are not valid without mining itself, so you could\n> end up in a situation where unless you're part of one of the big pools\n> you can't reliably mine at all because your blocks may get rejected for\n> containing doublespends.\n>\n> One of my goal with standard replace-by-fee is to prevent this scenario\n> by forcing merchants and others to implement ways of accepting zeroconf\n> transactions safely that work in a decentralized environment regardless\n> of what miners do; we have a stronger and safer Bitcoin ecosystem if\n> we're relying on math rather than trust to secure our zeroconf\n> transactions. We're also being more honest to users, who right now often\n> have the very wrong impression that unconfirmed transactions are safe to\n> accept - this does get people ripped off all too often!\n>\n>\n> Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am\n> waiting to get some feedback:\n>\n>     https://github.com/bitcoin/bitcoin/pull/6176\n>\n> Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm\n> working on porting it to v0.10.2, and once that's done I'm going to put\n> up a bounty for anyone who can find a DoS attack in the patch. If no-one\n> claims the bounty after a week or two I think I'll start feeling\n> confident about using it in production.\n>\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T15:43:25",
                "message_text_only": "Yes, FSS RBF is far better.\n\n\nOn Fri, Jun 19, 2015 at 6:52 AM, Chun Wang <1240902 at gmail.com> wrote:\n\n> Before F2Pool's launch, I performed probably the only successful\n> bitcoin double spend in the March 2013 fork without any mining power.\n> [ https://bitcointalk.org/index.php?topic=152348.0 ] I know how bad\n> the full RBF is. We are going to switch to FSS RBF in a few hours.\n> Sorry.\n>\n> On Fri, Jun 19, 2015 at 9:44 PM, Peter Todd <pete at petertodd.org> wrote:\n> > On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:\n> >> It is disappointing that F2Pool would enable full RBF when the safe\n> >> alternative, first-seen-safe RBF, is also available, especially since\n> the\n> >> fees they would gain by supporting full RBF over FSS RBF would likely be\n> >> negligible. Did they consider using FSS RBF instead?\n> >\n> > Specifically the following is what I told them:\n> >\n> >> We are\n> >> interested in the replace-by-fee patch, but I am not following the\n> >> development closely, more background info is needed, like what the\n> >> difference between standard and zeroconf versions? Thanks.\n> >\n> > Great!\n> >\n> > Basically both let you replace one transaction with another that pays a\n> > higher fee. First-seen-safe replace-by-fee adds the additional criteria\n> > that all outputs of the old transaction still need to be paid by the new\n> > transaction, with >= as many Bitcoins. Basically, it makes sure that if\n> > someone was paid by tx1, then tx2 will still pay them.\n> >\n> > I've written about how wallets can use RBF and FSS-RBF to more\n> > efficiently use the blockchain on the bitcoin-development mailing list:\n> >\n> >\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n> >\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07829.html\n> >\n> > Basically, for the purpose of increasing fees, RBF is something like %50\n> > cheaper than CPFP, and FSS-RBF is something like %25 cheaper.\n> >\n> > In addition, for ease of implementation, my new FSS-RBF has a number of\n> > other restrictions. For instance, you can't replace multiple\n> > transactions with one, you can't replace a transaction whose outputs\n> > have already been spent, you can't replace a transaction with one that\n> > spends additional unconfirmed inputs, etc. These restrictions aren't\n> > \"set in stone\", but they do make the code simpler and less likely to\n> > have bugs.\n> >\n> > In comparison my previous standard RBF patch can replace multiple\n> > transactions with one, can replace long chains of transactions, etc.\n> > It's willing to do more computation before deciding if a transaction\n> > should be replaced, with more complex logic; it probably has a higher\n> > chance of having a bug or DoS attack.\n> >\n> > You've probably seen the huge controversy around zeroconf with regard to\n> > standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,\n> > it also doesn't make it any more dangerous, so politically with regard\n> > to zeroconf it makes no difference. You *can* still use it doublespend\n> > by taking advantage of how different transactions are accepted\n> > differently, but that's true of *every* change we've ever made to\n> > Bitcoin Core - by upgrading to v0.10 from v0.9 you've also \"broken\"\n> > zeroconf in the same way.\n> >\n> >\n> > Having said that... honestly, zeroconf is pretty broken already. Only\n> > with pretty heroic measures like connecting to a significant fraction of\n> > the Bitcoin network at once, as well as connecting to getblocktemplate\n> > supporting miners to figure out what transactions are being mined, are\n> > services having any hope of avoiding getting ripped off. For the average\n> > user their wallets do a terrible job of showing whether or not an\n> > unconfirmed transaction will go through. For example, Schildbach's\n> > Bitcoin wallet for Android has no code at all to detect double-spends\n> > until they get mined, and I've been able to trick it into showing\n> > completely invalid transactions. In fact, currently Bitcoin XT will\n> > relay invalid transactions that are doublepsends, and Schildbach's\n> > wallet displays them as valid, unconfirmed, payments. It's really no\n> > surprise to me that nearly no-one in the Bitcoin ecosystem accepts\n> > unconfirmed transactions without some kind of protection that doesn't\n> > rely on first-seen-safe mempool behavior. For instance, many ATM's these\n> > days know who their customers are due to AML requirements, so while you\n> > can deposit Bitcoins and get your funds instantly, the protection for\n> > the ATM operator is that they can go to the police if you rip them off;\n> > I've spoken to ATM operators who didn't do this who've lost hundreds or\n> > even thousands of dollars before giving up on zeroconf.\n> >\n> > My big worry with zeroconf is a service like Coinbase or Shapeshift\n> > coming to rely on it, and then attempting to secure it by gaining\n> > control of a majority of hashing power. For instance, if Coinbase had\n> > contracts with 80% of the Bitcoin hashing power to guarantee their\n> > transactions would get mined, but 20% of the hashing power didn't sign\n> > up, then the only way to guarantee their transactions could be for the\n> > 80% to not build on blocks containing doublespends by the 20%. There's\n> > no way in a decentralized network to come to consensus about what\n> > transactions are or are not valid without mining itself, so you could\n> > end up in a situation where unless you're part of one of the big pools\n> > you can't reliably mine at all because your blocks may get rejected for\n> > containing doublespends.\n> >\n> > One of my goal with standard replace-by-fee is to prevent this scenario\n> > by forcing merchants and others to implement ways of accepting zeroconf\n> > transactions safely that work in a decentralized environment regardless\n> > of what miners do; we have a stronger and safer Bitcoin ecosystem if\n> > we're relying on math rather than trust to secure our zeroconf\n> > transactions. We're also being more honest to users, who right now often\n> > have the very wrong impression that unconfirmed transactions are safe to\n> > accept - this does get people ripped off all too often!\n> >\n> >\n> > Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am\n> > waiting to get some feedback:\n> >\n> >     https://github.com/bitcoin/bitcoin/pull/6176\n> >\n> > Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm\n> > working on porting it to v0.10.2, and once that's done I'm going to put\n> > up a bounty for anyone who can find a DoS attack in the patch. If no-one\n> > claims the bounty after a week or two I think I'll start feeling\n> > confident about using it in production.\n> >\n> >\n> > --\n> > 'peter'[:-1]@petertodd.org\n> > 000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab\n> >\n> >\n> ------------------------------------------------------------------------------\n> >\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/2897fe9a/attachment.html>"
            },
            {
                "author": "Jeffrey Paul",
                "date": "2015-06-19T19:49:23",
                "message_text_only": "It seems to me that FSS RBF must enforce identical OP_RETURN data on the output scripts as the first seen transaction, as well, to safely continue support for various other applications built atop the blockchain.\n\nIs there a canonical implementation of FSS RBF around somewhere I can review?\n\nBest,\n-jp\n\n-- \nJeffrey Paul   +1 (312) 361-0355\n5539 AD00 DE4C 42F3 AFE1 1575 0524 43F4 DF2A 55C2\n\n> On 19.06.2015, at 15:52, Chun Wang <1240902 at gmail.com> wrote:\n> \n> Before F2Pool's launch, I performed probably the only successful\n> bitcoin double spend in the March 2013 fork without any mining power.\n> [ https://bitcointalk.org/index.php?topic=152348.0 ] I know how bad\n> the full RBF is. We are going to switch to FSS RBF in a few hours.\n> Sorry.\n> \n>> On Fri, Jun 19, 2015 at 9:44 PM, Peter Todd <pete at petertodd.org> wrote:\n>>> On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:\n>>> It is disappointing that F2Pool would enable full RBF when the safe\n>>> alternative, first-seen-safe RBF, is also available, especially since the\n>>> fees they would gain by supporting full RBF over FSS RBF would likely be\n>>> negligible. Did they consider using FSS RBF instead?\n>> \n>> Specifically the following is what I told them:\n>> \n>>> We are\n>>> interested in the replace-by-fee patch, but I am not following the\n>>> development closely, more background info is needed, like what the\n>>> difference between standard and zeroconf versions? Thanks.\n>> \n>> Great!\n>> \n>> Basically both let you replace one transaction with another that pays a\n>> higher fee. First-seen-safe replace-by-fee adds the additional criteria\n>> that all outputs of the old transaction still need to be paid by the new\n>> transaction, with >= as many Bitcoins. Basically, it makes sure that if\n>> someone was paid by tx1, then tx2 will still pay them.\n>> \n>> I've written about how wallets can use RBF and FSS-RBF to more\n>> efficiently use the blockchain on the bitcoin-development mailing list:\n>> \n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07829.html\n>> \n>> Basically, for the purpose of increasing fees, RBF is something like %50\n>> cheaper than CPFP, and FSS-RBF is something like %25 cheaper.\n>> \n>> In addition, for ease of implementation, my new FSS-RBF has a number of\n>> other restrictions. For instance, you can't replace multiple\n>> transactions with one, you can't replace a transaction whose outputs\n>> have already been spent, you can't replace a transaction with one that\n>> spends additional unconfirmed inputs, etc. These restrictions aren't\n>> \"set in stone\", but they do make the code simpler and less likely to\n>> have bugs.\n>> \n>> In comparison my previous standard RBF patch can replace multiple\n>> transactions with one, can replace long chains of transactions, etc.\n>> It's willing to do more computation before deciding if a transaction\n>> should be replaced, with more complex logic; it probably has a higher\n>> chance of having a bug or DoS attack.\n>> \n>> You've probably seen the huge controversy around zeroconf with regard to\n>> standard replace-by-fee. While FSS RBF doesn't make zeroconf any safer,\n>> it also doesn't make it any more dangerous, so politically with regard\n>> to zeroconf it makes no difference. You *can* still use it doublespend\n>> by taking advantage of how different transactions are accepted\n>> differently, but that's true of *every* change we've ever made to\n>> Bitcoin Core - by upgrading to v0.10 from v0.9 you've also \"broken\"\n>> zeroconf in the same way.\n>> \n>> \n>> Having said that... honestly, zeroconf is pretty broken already. Only\n>> with pretty heroic measures like connecting to a significant fraction of\n>> the Bitcoin network at once, as well as connecting to getblocktemplate\n>> supporting miners to figure out what transactions are being mined, are\n>> services having any hope of avoiding getting ripped off. For the average\n>> user their wallets do a terrible job of showing whether or not an\n>> unconfirmed transaction will go through. For example, Schildbach's\n>> Bitcoin wallet for Android has no code at all to detect double-spends\n>> until they get mined, and I've been able to trick it into showing\n>> completely invalid transactions. In fact, currently Bitcoin XT will\n>> relay invalid transactions that are doublepsends, and Schildbach's\n>> wallet displays them as valid, unconfirmed, payments. It's really no\n>> surprise to me that nearly no-one in the Bitcoin ecosystem accepts\n>> unconfirmed transactions without some kind of protection that doesn't\n>> rely on first-seen-safe mempool behavior. For instance, many ATM's these\n>> days know who their customers are due to AML requirements, so while you\n>> can deposit Bitcoins and get your funds instantly, the protection for\n>> the ATM operator is that they can go to the police if you rip them off;\n>> I've spoken to ATM operators who didn't do this who've lost hundreds or\n>> even thousands of dollars before giving up on zeroconf.\n>> \n>> My big worry with zeroconf is a service like Coinbase or Shapeshift\n>> coming to rely on it, and then attempting to secure it by gaining\n>> control of a majority of hashing power. For instance, if Coinbase had\n>> contracts with 80% of the Bitcoin hashing power to guarantee their\n>> transactions would get mined, but 20% of the hashing power didn't sign\n>> up, then the only way to guarantee their transactions could be for the\n>> 80% to not build on blocks containing doublespends by the 20%. There's\n>> no way in a decentralized network to come to consensus about what\n>> transactions are or are not valid without mining itself, so you could\n>> end up in a situation where unless you're part of one of the big pools\n>> you can't reliably mine at all because your blocks may get rejected for\n>> containing doublespends.\n>> \n>> One of my goal with standard replace-by-fee is to prevent this scenario\n>> by forcing merchants and others to implement ways of accepting zeroconf\n>> transactions safely that work in a decentralized environment regardless\n>> of what miners do; we have a stronger and safer Bitcoin ecosystem if\n>> we're relying on math rather than trust to secure our zeroconf\n>> transactions. We're also being more honest to users, who right now often\n>> have the very wrong impression that unconfirmed transactions are safe to\n>> accept - this does get people ripped off all too often!\n>> \n>> \n>> Anyway, sorry for the rant! FWIW I updated my FSS-RBF patch and am\n>> waiting to get some feedback:\n>> \n>>    https://github.com/bitcoin/bitcoin/pull/6176\n>> \n>> Suhas Daftuar did find a pretty serious bug in it, now fixed. I'm\n>> working on porting it to v0.10.2, and once that's done I'm going to put\n>> up a bounty for anyone who can find a DoS attack in the patch. If no-one\n>> claims the bounty after a week or two I think I'll start feeling\n>> confident about using it in production.\n>> \n>> \n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 000000000000000003188926be14e5fbe2f8f9c63c9fb8e2ba4b14ab04f1c9ab\n>> \n>> ------------------------------------------------------------------------------\n>> \n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T15:42:53",
                "message_text_only": "On Fri, Jun 19, 2015 at 6:44 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> Having said that... honestly, zeroconf is pretty broken already. Only\n> with pretty heroic measures like connecting to a significant fraction of\n> the Bitcoin network at once, as well as connecting to getblocktemplate\n> supporting miners to figure out what transactions are being mined, are\n> services having any hope of avoiding getting ripped off. For the average\n> user their wallets do a terrible job of showing whether or not an\n>\n\nThis is no excuse for further degrading the overall network security.\n\nThere are many issues to address in the bitcoin ecosystem.  It negatively\nimpacts users to roll out \"scorched earth\" replace-by-fee given today's\necosystem.\n\nYes, zero conf security is poor.  An outright attack on zero conf degrades\nuser security even more.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/5bb9893d/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T16:15:53",
                "message_text_only": "On Fri, Jun 19, 2015 at 09:44:08AM -0400, Peter Todd wrote:\n> On Fri, Jun 19, 2015 at 09:33:05AM -0400, Stephen Morse wrote:\n> > It is disappointing that F2Pool would enable full RBF when the safe\n> > alternative, first-seen-safe RBF, is also available, especially since the\n> > fees they would gain by supporting full RBF over FSS RBF would likely be\n> > negligible. Did they consider using FSS RBF instead?\n> \n> Specifically the following is what I told them:\n\nIncidentally, because someone asked that message was sent two weeks ago.\n\n\nAlso, a shout-out to Marshal Long of FinalHash for his help with\n(FSS)-RBF deployment and for getting F2Pool and myself in touch, as well\nas his work in talking getting pools on board with BIP66.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000bb4abd88c6b023e9f19a1c1deaac120467279c330a803cf\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8f8feff6/attachment.sig>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T15:00:57",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 10:39, Peter Todd wrote:\n\n     Yesterday F2Pool, currently the largest pool with 21% of the hashing\n     power, enabled full replace-by-fee (RBF) support after discussions \nwith\n     me. This means that transactions that F2Pool has will be replaced if \na\n     conflicting transaction pays a higher fee. There are no requirements \nfor\n     the replacement transaction to pay addresses that were paid by the\n     previous transaction.\n\n\nIntentional fraud is a bad thing to add to a financial protocol.\n\nA user who creates conflicting transactions, one that pays someone else \nand another which does not pay them, and broadcasts both of them, has \njust self-incriminated themselves by producing prima facie evidence of \nfraud.\n\nIt may be the case that since Bitcoin spans multiple legal jurisdictions \nand can be use anonymously that the victims of such fraud can not rely \non legal recourse, and it may also be the case that proof of work is how \nBitcoin deals with the aforementioned factors, but regardless \nun-prosecutable fraud is still fraud and anyone who encourages it should \nbe recognied as a bad actors.\n\nCommitting vandalism and encouraging fraud to prove a point may be \nsomething the network can't stop on a technical level, but there's no \nreason not to call it out for what it is.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhCsXAAoJECpf2nDq2eYjA08P/ApDFcIGws55TsgDFxPhDpN+\nIq9a06mPbXVjUfRxP5ZwmJuiM+XzHQ4QL3C2BH0OETatIV+bh7GP2mGHPcUAISYt\n1j4TKhurnC+mqN+YAsiI5hQsws8DvPYXBTYYn0savaJTbq6/Q77+xvfRgNxofcPW\nEHpnl/5wcmYGgp3mVyStGJ+qIP17yywzCLnSA3WEPaZG/9/FPrIq3Ptw2+RHod79\nnzDiFBiKLK8E5NPbdbXS+gkjkkBA/QeCzZObpMOeWMriu/PIifVi8KssLSznnEwx\nr7hiv6ISW47BTzkRbjxmXmGep3wfl8MjH7BZq3g0uyiApMdmjohIJ2lyuvOXdh7s\n47+4r2xA8gG+z0aQTmCx5TS75T0Hnj3I78ZtCVr31Ip2OLbNI1mQ2gPR2zaoZkUZ\natp2XCssHDlY2s30k5hAnIHxuN6CkyGkZCECSuv46Z3ok6ll/nIP80qB7BBzVlP1\nxfSOPZh57J31U8PxZBZcwgdRg+HBiExvg484grE+h18izxcrjNfPRSWP4+7nEZtK\nLN7JL7YcmhVfhqKTSd6+C4bD2LsKsrcMiUhH1xHkD/hzAxc7egL6lgYTHJjU+yPu\nBTIh0VHJxBgroHB45Vq6loa4B3l4ZCl4Ykw8Opm7NJIfueJ0l0ySyJXi6ix4bjVf\nZRF0Ot9RP0M0fHEwOpT6\n=s0w/\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T15:11:27",
                "message_text_only": "On Fri, Jun 19, 2015 at 03:00:57PM +0000, justusranvier at riseup.net wrote:\n> On 2015-06-19 10:39, Peter Todd wrote:\n> \n>      Yesterday F2Pool, currently the largest pool with 21% of the hashing\n>      power, enabled full replace-by-fee (RBF) support after discussions \n> with\n>      me. This means that transactions that F2Pool has will be replaced if \n> a\n>      conflicting transaction pays a higher fee. There are no requirements \n> for\n>      the replacement transaction to pay addresses that were paid by the\n>      previous transaction.\n> \n> \n> Intentional fraud is a bad thing to add to a financial protocol.\n> \n> A user who creates conflicting transactions, one that pays someone else \n> and another which does not pay them, and broadcasts both of them, has \n> just self-incriminated themselves by producing prima facie evidence of \n> fraud.\n\nDepends.\n\nIf you ask me to pay you 1BTC at address A and I create tx1 that pays\n1BTC to A1 and 2BTC of chain to C, what's wrong with me creating tx2\nthat still pays 1BTC to A, but now only pays 1.999BTC to C? I'm not\ndefrauding you, I'm just reducing the value of my change address to pay\na higher fee. Similarly if I now need to pay Bob 0.5BTC, I can create\ntx3 paying 1BTC to A, 0.5BTC to B, and 1.498BTC to C.\n\nYet from the point of view of an external observer they have no idea why\nthe transaction outputs reduced in size, nor any way of knowing if fraud\ndid or did not occur.\n\nEqually, maybe you tell me \"Actually, just give me 0.5BTC to cancel out\nthat debt\", in which case I'm not breaking any contract at all by giving\nyou less money than I first promised - the contract has changed.\n\nAgain, none of this can or should be observable to anyone other than the\nparties directly involved.\n\n> It may be the case that since Bitcoin spans multiple legal jurisdictions \n> and can be use anonymously that the victims of such fraud can not rely \n> on legal recourse, and it may also be the case that proof of work is how \n> Bitcoin deals with the aforementioned factors, but regardless \n> un-prosecutable fraud is still fraud and anyone who encourages it should \n> be recognied as a bad actors.\n> \n> Committing vandalism and encouraging fraud to prove a point may be \n> something the network can't stop on a technical level, but there's no \n> reason not to call it out for what it is.\n\nWhat do you think of Bitcoin XT then? It relays double-spends, which\nmakes it much easier to get double-spends to miners than before. In\nparticular you see a lot of zero-fee transactions being replaced by\nfee-paying transactions, relayed through Bitcoin XT nodes and then\nmined. Is that encouraging fraud?\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000003932458055c68d4ee2b6d68441c4764efbdf6b0b1683717\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/8664ea09/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T15:37:10",
                "message_text_only": "OK, a few things here:\n\nThe Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time\u2026and relaxing this assumption without adequately assessing the risk (i.e. I\u2019ve never been hacked before so I can assume it\u2019s safe) is extremely dangerous at best and just horrid security practice at worst. Your users might not thank you for not getting hacked - but they surely will not like it when you DO get hacked\u2026and lack a proper recovery plan.\n\nFurthermore, the protocol itself makes no assumptions regarding the intentions behind someone signing two conflicting transactions. There are many potential use cases where doing so could make a lot of sense. Had the protocol been designed along the lines of, say, tendermint\u2026where signing multiple conflicting blocks results in loss of one\u2019s funds\u2026then the protocol itself disincentivizes the behavior without requiring any sort of altruistic, moralistic assumptions. That would also mean we\u2019d need a different mechanism for the use cases that things like RBF address.\n\nThirdly, taken to the extreme, the viewpoint of \u201csigning a conflicting transaction is fraud and vandalism\u201d means that if for whatever reason you attempt to propagate a transaction and nobody mines it for a very long time, you\u2019re not entitled to immediately reclaim those funds\u2026they must remain in limbo forever.\n\n\n- Eric Lombrozo\n\n\n> On Jun 19, 2015, at 8:11 AM, Peter Todd <pete at petertodd.org> wrote:\n> \n> On Fri, Jun 19, 2015 at 03:00:57PM +0000, justusranvier at riseup.net wrote:\n>> On 2015-06-19 10:39, Peter Todd wrote:\n>> \n>>     Yesterday F2Pool, currently the largest pool with 21% of the hashing\n>>     power, enabled full replace-by-fee (RBF) support after discussions\n>> with\n>>     me. This means that transactions that F2Pool has will be replaced if\n>> a\n>>     conflicting transaction pays a higher fee. There are no requirements\n>> for\n>>     the replacement transaction to pay addresses that were paid by the\n>>     previous transaction.\n>> \n>> \n>> Intentional fraud is a bad thing to add to a financial protocol.\n>> \n>> A user who creates conflicting transactions, one that pays someone else\n>> and another which does not pay them, and broadcasts both of them, has\n>> just self-incriminated themselves by producing prima facie evidence of\n>> fraud.\n> \n> Depends.\n> \n> If you ask me to pay you 1BTC at address A and I create tx1 that pays\n> 1BTC to A1 and 2BTC of chain to C, what's wrong with me creating tx2\n> that still pays 1BTC to A, but now only pays 1.999BTC to C? I'm not\n> defrauding you, I'm just reducing the value of my change address to pay\n> a higher fee. Similarly if I now need to pay Bob 0.5BTC, I can create\n> tx3 paying 1BTC to A, 0.5BTC to B, and 1.498BTC to C.\n> \n> Yet from the point of view of an external observer they have no idea why\n> the transaction outputs reduced in size, nor any way of knowing if fraud\n> did or did not occur.\n> \n> Equally, maybe you tell me \"Actually, just give me 0.5BTC to cancel out\n> that debt\", in which case I'm not breaking any contract at all by giving\n> you less money than I first promised - the contract has changed.\n> \n> Again, none of this can or should be observable to anyone other than the\n> parties directly involved.\n> \n>> It may be the case that since Bitcoin spans multiple legal jurisdictions\n>> and can be use anonymously that the victims of such fraud can not rely\n>> on legal recourse, and it may also be the case that proof of work is how\n>> Bitcoin deals with the aforementioned factors, but regardless\n>> un-prosecutable fraud is still fraud and anyone who encourages it should\n>> be recognied as a bad actors.\n>> \n>> Committing vandalism and encouraging fraud to prove a point may be\n>> something the network can't stop on a technical level, but there's no\n>> reason not to call it out for what it is.\n> \n> What do you think of Bitcoin XT then? It relays double-spends, which\n> makes it much easier to get double-spends to miners than before. In\n> particular you see a lot of zero-fee transactions being replaced by\n> fee-paying transactions, relayed through Bitcoin XT nodes and then\n> mined. Is that encouraging fraud?\n> \n> --\n> 'peter'[:-1]@petertodd.org\n> 000000000000000003932458055c68d4ee2b6d68441c4764efbdf6b0b1683717\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/7b6748ec/attachment.sig>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T15:53:01",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 15:37, Eric Lombrozo wrote:\n> OK, a few things here:\n> \n> The Bitcoin network was designed (or should be designed) with the\n> requirement that it can withstand deliberate double-spend attacks that\n> can come from anywhere at any time\u2026and relaxing this assumption\n> without adequately assessing the risk (i.e. I\u2019ve never been hacked\n> before so I can assume it\u2019s safe) is extremely dangerous at best and\n> just horrid security practice at worst. Your users might not thank you\n> for not getting hacked - but they surely will not like it when you DO\n> get hacked\u2026and lack a proper recovery plan.\n> \n> Furthermore, the protocol itself makes no assumptions regarding the\n> intentions behind someone signing two conflicting transactions. There\n> are many potential use cases where doing so could make a lot of sense.\n> Had the protocol been designed along the lines of, say,\n> tendermint\u2026where signing multiple conflicting blocks results in loss\n> of one\u2019s funds\u2026then the protocol itself disincentivizes the behavior\n> without requiring any sort of altruistic, moralistic assumptions. That\n> would also mean we\u2019d need a different mechanism for the use cases that\n> things like RBF address.\n> \n> Thirdly, taken to the extreme, the viewpoint of \u201csigning a conflicting\n> transaction is fraud and vandalism\u201d means that if for whatever reason\n> you attempt to propagate a transaction and nobody mines it for a very\n> long time, you\u2019re not entitled to immediately reclaim those funds\u2026they\n> must remain in limbo forever.\n\nI'm not talking about changing the protocol - I'm talking about the \nbusiness relationships between users of Bitcoin.\n\nI would expect a payment processor to inform the merchants of relevant \ndouble spends that it observes on the network, even if the payment is \nactually successful, so that the merchant can decide for themselves \nwhether or not to pursue it out of band.\n\nMining is a kind of technical fallback that allows the network to \nresolve human misbehavior without human intervention. If nobody ever \nattempted to make a fraudulent payment, we wouldn't need mining at all \nbecause the signed transaction itself is proof of intention to pay. That \nit exists doesn't suddenly make fraud less fraudulent and mean that \nusers who are in a position to pursue out of band recourse shouldn't do \nso.\n\nI agree that there are valid reasons for replacing transactions in the \nmempool, I just think they should be implemented in a way that doesn't \nfacilitate fraud.\n\nI'd also like to note that \"prima facie\" doesn't mean \"always\", it means \nthat \"the default assumption, unless proven otherwise.\"\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhDqcAAoJECpf2nDq2eYjX/UP/RlVIGqzwvdKftFW8kRW1+Dk\n3befE2vEIEWFAShNt0pk7/Isqk7prRWQDKP+VNZSJfaoyE3akOe7s3OPWuevVRqM\nY1N658hYnG6NPebkyp5zUQkjT3mXVxOo9Fw9k7JyHgkWaDcwx330z2n6yztleodq\n7hlKdW6sZrgqHw+DoF0Zal3QPN0WYm0XAno3uy71RXOs5cAoUxViuVzWHY0oReTQ\nuggTggT1A5acmyOM7v65h9Cb2AKcLvHKfSEIwVQbHxYMOT+3GIJOXPKAluh8MjB3\noWg8ERy5dEEHu5kF/MLPQMg5yVQACuQmO2dlmtRoOs3mUQQj+q7dEil/dZMIp0f+\nunDKIwLhXMa0sZ+63123UOgaKGZkF7afed3ueniJWQM80VS0WoZvZYhQadT/sCED\nNtfxifi1ZqCiKFeshyN9z7jDC8QEJ3N176Kr/wX76h/vvnPYicMEcfRgSE8EGd10\n+oRQQpYzb69WPSFRhhrR3yG9Dev1JfzNPEaIKKYerDk9Vo3OnQ3VaaqBNZwBDo46\n4r3O5orFES/ZxMdzWE1cWp99n4T4L6KxdZXmfQSYHehUJBnt62vKuEk9X/Li2ZWo\ni3dr3yxx8xhKGGjsSjG03arz70bkXE7SvrICPOs9OEAdGlJI2liLrSWzYU9BbTle\neWvElyVQJsJHgAU8ygvn\n=77NP\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-19T16:36:11",
                "message_text_only": "On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:\n> I'd also like to note that \"prima facie\" doesn't mean \"always\", it means\n> that \"the default assumption, unless proven otherwise.\"\n\nWhy would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend."
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-19T16:42:33",
                "message_text_only": "If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on \u201cprima facie\u201d assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay\u2026\n\n\n> On Jun 19, 2015, at 9:36 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n> \n> On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:\n>> I'd also like to note that \"prima facie\" doesn't mean \"always\", it means\n>> that \"the default assumption, unless proven otherwise.\"\n> \n> Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/d461c2f9/attachment.sig>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-19T16:46:35",
                "message_text_only": "Even if you could prove \"intent to pay,\" this would be almost useless. I can sincerely intend to do a lot of things, but this doesn't mean I'll ever actually do them.\n\nI am in favor of more zero-confirmation transactions being reversed / double-spent. Bitcoin users largely still believe that accepting zero-conf transactions is safe, and evidently it's going to take some harsh lessons in reality to correct this belief.\n\n\nOn Friday, 19 June 2015, at 9:42 am, Eric Lombrozo wrote:\n> If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on \u201cprima facie\u201d assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay\u2026\n> \n> \n> > On Jun 19, 2015, at 9:36 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n> > \n> > On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:\n> >> I'd also like to note that \"prima facie\" doesn't mean \"always\", it means\n> >> that \"the default assumption, unless proven otherwise.\"\n> > \n> > Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.\n>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-19T16:53:19",
                "message_text_only": "On Fri, Jun 19, 2015 at 09:42:33AM -0700, Eric Lombrozo wrote:\n> If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on \u201cprima facie\u201d assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay\u2026\n\nIndeed.\n\nFor instance, one of the ideas behind my Proofchains work is that you\ncould hind all details of a smartcontract-whatchamacallit protocol\nbehind single-use-seals in a consensus blockchain. Closing those seals,\nthat is spending the appropriate txouts, represents things in the\nprotocol which are absolutely unobservable to anyone without the data\nbehind those hashes, an extreme version of the above.\n\n\nIncidentally, some patent prior-art exposure:\n\nhttps://github.com/proofchains/python-proofchains\n\n:)\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000a203bd78c8536399f67275064107def6c7afea29c4e3a7b\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/82e55b95/attachment.sig>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T16:54:42",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 16:42, Eric Lombrozo wrote:\n> If we want a non-repudiation mechanism in the protocol, we should\n> explicitly define one rather than relying on \u201cprima facie\u201d\n> assumptions. Otherwise, I would recommend not relying on the existence\n> of a signed transaction as proof of intent to pay\u2026\n\nAgain, I'm not talking about any changes to the protocol. The mining \nmechanism in the Bitcoin protocol is the fallback method of resolving \nfraud that isn't prevented or resolved via other mechanisms.\n\nThere are plenty of other ways economic actors resolve their \ndisagreements other than blockchain adjudication. Sometimes when both \nparties are identified and reside in the same legal jurisdiction, \ncontract violations and fraud can be adjudicated in courts. In some \nsituations, the parties involved may have access to private dispute \nresolution techniques.\n\nSometimes the stakeholders in the network act to preserve the long term \nvalue of their investments, even if it means passing short-term profits. \nThe more of those stakeholders there are in Bitcoin, the more effective \nit is to make the case for choices that are long-term beneficial.\n\nThe degree to which anyone should rely on a signed transaction as \nassurance of future payment is not a question with a universal answer. \nIt depends on the particular details of the situation, and the parties \ninvolved, and their own risk tolerances and time preferences. There's no \nright answer for everyone, which is why \"let's break zeroconf because \n*I* don't think it's safe enough\" is a kind of vandalism.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhEkhAAoJECpf2nDq2eYj8qAP/0qYP7FJDjke1qNARGkySjC5\n8fSuefu8bus/O2fNYsvPf0OcHeqepLUtQ/hgTml5AHaF1Fa9iZopVr8nZv0NFMuF\nsv9RfkBKvnnrLWre3e/kQIdKzdMXompEsDwGfIeM3qvVV9AD3mKrz/YNmjs60+hU\nrEdLCX8xw3ZvF3CGOzE1KnOMbADEd7i3E/Pm1n7pLVdRAg2CIU+w6mjErgucSdvB\nkQ9SNAVQngjhMJyVbxsQh/+/xgecdqeZ07aaGsLhiw6zML2Tz8KMhrjJ9xw9+7h0\nGze+JdqxpgH4QrvD8KMDnlZjM+cWDUGyoVfsRvrVvPdW6kejU1r1B5Pf6dJg9TwZ\nkK48RJFdd2rpAkz/kAbvQtoNMxSxhm2gKKFLEMi7g8MZUiGa/Rxj0tWL7OL9SA1U\nVfpUzgAovoat9lBQM92T5vcS6kfhiNgAmF24ULGGYIhts77Ae6h8Fl3TECtnR0dM\n1U1yio4Im1TfUDfjqNSK+ZjVpzkQli0R057y6XzI9HWkSYo94WyjNVoUlUozuAam\n/2+tUMTrMYPeApRv+1nv13InYO8RZiFqs0E4w4TmB5V4Xt6uGUz4Olioyuo0NqMO\nlBZwa1ZWKw4fLgHHDu9FhTEOXsOcX5W0gEgcoqMlzTzyoapekk9Esd0pAFLYxYMY\nYQyAWtWUA4JBbgLxlB8Y\n=x8eh\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-19T17:00:55",
                "message_text_only": "On Fri, Jun 19, 2015 at 5:42 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> If we want a non-repudiation mechanism in the protocol, we should\n> explicitly define one rather than relying on \u201cprima facie\u201d assumptions.\n> Otherwise, I would recommend not relying on the existence of a signed\n> transaction as proof of intent to pay\u2026\n>\n\nOutputs could be marked as \"locked\".  If you are performing a zero\nconfirmation spend, then the recipient could insist that you flag the\noutput for them as non-reducible.\n\nThis reduces privacy since it would be obvious which output was change.  If\nboth are locked, then the fee can't be increased.\n\nThis would be information that miners could ignore though.\n\nCreating the right incentives is hard though.  Blocks could be\n\"discouraged\" if they have a double spend that is known about for a while\nwhich reduces payment for a locked output.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f5cec10d/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-20T23:20:26",
                "message_text_only": "On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> If we want a non-repudiation mechanism in the protocol, we should explicitly define one rather than relying on \u201cprima facie\u201d assumptions. Otherwise, I would recommend not relying on the existence of a signed transaction as proof of intent to pay\u2026\n\nNon-repudiation can be built on top of the payment protocol layer."
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-20T23:37:22",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 2015-06-20 18:20, Jorge Tim\u00f3n wrote:\n> On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com> \n> wrote:\n>> If we want a non-repudiation mechanism in the protocol, we should \n>> explicitly define one rather than relying on \u201cprima facie\u201d \n>> assumptions. Otherwise, I would recommend not relying on the existence \n>> of a signed transaction as proof of intent to pay\u2026\n> \n> Non-repudiation can be built on top of the payment protocol layer.\n\n\nNon-repudiation is an intrinsic property of the ECDSA signatures which \nBitcoin uses - it's not a feature that needs to be built.\n\nThere's no way to accidentally sign a transaction and accidentally \nannounce it publicly. There is no form of third-party error that can \nresult in a payee receiving an erroneous contract.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAEBAgAGBQJVhfkXAAoJECpf2nDq2eYjTwIP/ApsURTKJgAsSYb4/lvoujAE\nEhOUBfmb+WkrEceASWGgmXFfQBQW7c99sT46cA1HdCPLZMtYhZYPubtYRouSupfF\nvOfeKLsZsUXCadeLuzxP7av3PJhmvB1CO1Rv8CLBQptKUFkzyM3CypBviNTy33X6\nKL2zyAMERpCVOejg7MSP3IUXIjgG1ayEm+mzwqi4j2Ms0h+oT6I/krAKV0J9SwJC\nPtLq/JRRriVtb2FE+biEqYRYfeOcZDYNbr+/y0HPtqqMxg6azNwx1z2aG5A+ziCd\nEvVqVJXU3TAINQdIvVS4ACF1J+ttMJ99r8VW0yN7o3fEckuRr3pyymx4I+XExSX5\nujflqadRGUS8ZenUPTPUbLfhARnmBwLM94L+xiQvIwiinxxtOKn3WW1oDv9FNp0l\n99fkv9mbV5RnYlkMfWMn2AcwcBv7TSgpFGsZY4wBn/mgFh1PotGc2tA5kU79cz8R\n+F/k49+GwfgTPML7UhIGtjQjPreeqDyHNtv9XHtyp8LF5vO1na4oHSO6SeU4rIXH\n4oIjw+Q6X/2L/fp8QNLB+onmKWobcl1Ec+0H+ZfQBujtew5BHFwcPwFmlC4tofiJ\n7r8QjoPsRhJmaxm+MJOK/BIzhZErkMz26AQ/tfY4jtJCuLbEDdMLtC9hYVuiDHIb\nHBxxif83dALjX1Sgid66\n=o9dG\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T00:19:08",
                "message_text_only": "> On Jun 20, 2015, at 4:37 PM, justusranvier at riseup.net wrote:\n> \n> Signed PGP part\n> On 2015-06-20 18:20, Jorge Tim\u00f3n wrote:\n> > On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com>\n> > wrote:\n> >> If we want a non-repudiation mechanism in the protocol, we should\n> >> explicitly define one rather than relying on \u201cprima facie\u201d\n> >> assumptions. Otherwise, I would recommend not relying on the existence\n> >> of a signed transaction as proof of intent to pay\u2026\n> >\n> > Non-repudiation can be built on top of the payment protocol layer.\n> \n> \n> Non-repudiation is an intrinsic property of the ECDSA signatures which\n> Bitcoin uses - it's not a feature that needs to be built.\n> \n> There's no way to accidentally sign a transaction and accidentally\n> announce it publicly. There is no form of third-party error that can\n> result in a payee receiving an erroneous contract.\n> \n> \n\nJustus,\n\nWe don\u2019t even have a concept of identity in the Bitcoin protocol, let alone non-repudiation. What good is non-repudiation if there\u2019s no way to even associate a signature with a legal entity?\n\nSure, we could use the ECDSA signatures in transactions as part of a non-repudiation scheme - but the recipient would have to also have a means to establish the identity of the sender and associate it with the the transaction.\n\n\nFurthermore, in light of the fact that there *are* fully legitimate use cases for sending conflicting transactions\u2026and the fact that determination of intent isn\u2019t always entirely clear\u2026we should refrain from attaching any further significance transaction signatures other than that \u201cthe sender was willing to have it included in the blockchain if a miner were to have seen it and accepted it\u2026but perhaps the sender would have changed their mind before it actually did get accepted.\u201d\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/9dd48b8f/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/9dd48b8f/attachment.sig>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-21T00:27:40",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 2015-06-20 19:19, Eric Lombrozo wrote:\n>> On Jun 20, 2015, at 4:37 PM, justusranvier at riseup.net wrote:\n>> \n>> Signed PGP part\n>> On 2015-06-20 18:20, Jorge Tim\u00f3n wrote:\n>> > On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com>\n>> > wrote:\n>> >> If we want a non-repudiation mechanism in the protocol, we should\n>> >> explicitly define one rather than relying on \u201cprima facie\u201d\n>> >> assumptions. Otherwise, I would recommend not relying on the existence\n>> >> of a signed transaction as proof of intent to pay\u2026\n>> >\n>> > Non-repudiation can be built on top of the payment protocol layer.\n>> \n>> \n>> Non-repudiation is an intrinsic property of the ECDSA signatures which\n>> Bitcoin uses - it's not a feature that needs to be built.\n>> \n>> There's no way to accidentally sign a transaction and accidentally\n>> announce it publicly. There is no form of third-party error that can\n>> result in a payee receiving an erroneous contract.\n>> \n>> \n> \n> Justus,\n> \n> We don\u2019t even have a concept of identity in the Bitcoin protocol, let\n> alone non-repudiation. What good is non-repudiation if there\u2019s no way\n> to even associate a signature with a legal entity?\n> \n> Sure, we could use the ECDSA signatures in transactions as part of a\n> non-repudiation scheme - but the recipient would have to also have a\n> means to establish the identity of the sender and associate it with\n> the the transaction.\n> \n> \n> Furthermore, in light of the fact that there *are* fully legitimate\n> use cases for sending conflicting transactions\u2026and the fact that\n> determination of intent isn\u2019t always entirely clear\u2026we should refrain\n> from attaching any further significance transaction signatures other\n> than that \u201cthe sender was willing to have it included in the\n> blockchain if a miner were to have seen it and accepted it\u2026but perhaps\n> the sender would have changed their mind before it actually did get\n> accepted.\u201d\n\nBitcoin has no concept of identity, but in any type of commercial \ntransaction the parties involved must know some minimal amount of \nidentity information in order to transact at all.\n\nExcept for some identifiable special cases, I think a payee is perfectly \njustified in treating a double spend of a payment sent to them as part \nof a commercial transaction as a fraud attempt and employing whatever \nnon-Bitcoin recourse mechanisms, if any, they have access to.\n\n- From the perspective of the network, the obviously correct action for \nany node or miner is to relay the first version of any transaction they \nsee. The primary purpose of mining is to resolve this \notherwise-unresolvable problem of determining which transaction among a \nset of conflicting transactions happened first.\n\nIf a node or miner wants to deviate from the obviously correct \nbehaviour, and if they want to avoid harming the value of the network, \nthey should be particularly careful to make sure their deviation from \n\"first seen\" doesn't introduce harmful unintended side effects, like \nmaking fraud easier.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAEBAgAGBQJVhgTgAAoJECpf2nDq2eYjkksQAJyRVhT2vNQUqlOfH9Z/9EeT\nLkUm8eg3f1i3xhJVxtLGVJkRmMYmuNtH0lIsH/B3iED732oZSzhwM1F5ky948Mw7\nFFG65iUTrXVup9eKZuD7T3/FaQHfC5YME36F4UvEtSUcRDUKmongRGuuw7sNv617\nAPl3MDwZ8tVWaDb7yZ251is6Fx1l3b6tR4tHUzyIWPyIOuXOsyUaoS1cYJ00YcI5\nWIzIXIlRDNpvpIXv4NFtr0BH6BmTCCZOJH3X9Hmtxqrg/dlnfnmc1pZgAyqRXj1d\n5of7dYwb+bhHpU9TvcDYprN55Kmida2gTZewfr33rTXcVyjhs5N3bmIRIRrPltMA\nfFqlKJ7Fo4ldyJ4OEK6upuFHwmQRNL7qr/ODmYg83rJj3BdTzXsJ1l3BRAUBS+cm\ngc8Q3urxmVyspht+U64GO+ieLA9xb9izFMa+GL8nag0VuHc5J7XDjfzXBT8VK5be\n646AZ0tFULNLOBWEJuBRbCRUs90YK2ePpGnAwiZ7HuwHMAC333FYiBuRxgwgn+xv\nhHMlQWTtrl0zJrxD+pcb5axC7zQdVHVeyNJDi4RF1Wau2NX/itHcUqRr75N8/Si+\nGPF8JSnvLlplEsEMBAtbKvg4dn1AOEuJpXtDYrWrzZDs+/wwz5PfQ2oCZ3YRHNx2\npo6di9uOSlLq0BJJfSrM\n=HbNG\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T00:36:47",
                "message_text_only": "> On Jun 20, 2015, at 5:27 PM, justusranvier at riseup.net wrote:\n> \n> Signed PGP part\n> On 2015-06-20 19:19, Eric Lombrozo wrote:\n> >> On Jun 20, 2015, at 4:37 PM, justusranvier at riseup.net wrote:\n> >>\n> >> Signed PGP part\n> >> On 2015-06-20 18:20, Jorge Tim\u00f3n wrote:\n> >> > On Fri, Jun 19, 2015 at 6:42 PM, Eric Lombrozo <elombrozo at gmail.com>\n> >> > wrote:\n> >> >> If we want a non-repudiation mechanism in the protocol, we should\n> >> >> explicitly define one rather than relying on \u201cprima facie\u201d\n> >> >> assumptions. Otherwise, I would recommend not relying on the existence\n> >> >> of a signed transaction as proof of intent to pay\u2026\n> >> >\n> >> > Non-repudiation can be built on top of the payment protocol layer.\n> >>\n> >>\n> >> Non-repudiation is an intrinsic property of the ECDSA signatures which\n> >> Bitcoin uses - it's not a feature that needs to be built.\n> >>\n> >> There's no way to accidentally sign a transaction and accidentally\n> >> announce it publicly. There is no form of third-party error that can\n> >> result in a payee receiving an erroneous contract.\n> >>\n> >>\n> >\n> > Justus,\n> >\n> > We don\u2019t even have a concept of identity in the Bitcoin protocol, let\n> > alone non-repudiation. What good is non-repudiation if there\u2019s no way\n> > to even associate a signature with a legal entity?\n> >\n> > Sure, we could use the ECDSA signatures in transactions as part of a\n> > non-repudiation scheme - but the recipient would have to also have a\n> > means to establish the identity of the sender and associate it with\n> > the the transaction.\n> >\n> >\n> > Furthermore, in light of the fact that there *are* fully legitimate\n> > use cases for sending conflicting transactions\u2026and the fact that\n> > determination of intent isn\u2019t always entirely clear\u2026we should refrain\n> > from attaching any further significance transaction signatures other\n> > than that \u201cthe sender was willing to have it included in the\n> > blockchain if a miner were to have seen it and accepted it\u2026but perhaps\n> > the sender would have changed their mind before it actually did get\n> > accepted.\u201d\n> \n> Bitcoin has no concept of identity, but in any type of commercial\n> transaction the parties involved must know some minimal amount of\n> identity information in order to transact at all.\n> \n> Except for some identifiable special cases, I think a payee is perfectly\n> justified in treating a double spend of a payment sent to them as part\n> of a commercial transaction as a fraud attempt and employing whatever\n> non-Bitcoin recourse mechanisms, if any, they have access to.\n> \n> From the perspective of the network, the obviously correct action for\n> any node or miner is to relay the first version of any transaction they\n> see. The primary purpose of mining is to resolve this\n> otherwise-unresolvable problem of determining which transaction among a\n> set of conflicting transactions happened first.\n> \n> If a node or miner wants to deviate from the obviously correct\n> behaviour, and if they want to avoid harming the value of the network,\n> they should be particularly careful to make sure their deviation from\n> \"first seen\" doesn't introduce harmful unintended side effects, like\n> making fraud easier.\n> \n\nThe contract between the buyer and seller is actually outside the Bitcoin network. Yes, a merchant that gets cheated could seek some other recourse in such an event\u2026but the behavior you\u2019re claiming as \u201cobviously correct\u201d is NOT obviously correct.  In fact, there are arguments against this \u201cobviously correct\u201d way even if we were to accept the premise that the signature implies a promise to pay (which I think many reasonable individuals would also dispute). For instance, by relaying conflicting transactions it makes it potentially easier for others to discover the double-spend attempt (of course, this requires wallets to not be lazy about this\u2026perhaps such relays could be flagged or placed in a special message type).\n\n- Eric Lombrozo\n\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/ccb0176e/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/ccb0176e/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T00:54:39",
                "message_text_only": "One more thing I would like to add to this thread: I want to make it unequivocally clear that I believe what is making double-spends easier has relatively little to do with the protocol and almost everything to do with poor software and poor security policy on the merchant end. Perhaps it isn\u2019t prudent to push out changes to the relay policy that make these exploits even easier right now - but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient so that we have more room for changes on things like relay policy without significant disruption to the network.\n\n- Eric Lombrozo\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/2a4ae83e/attachment.sig>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-21T05:56:13",
                "message_text_only": "On 6/20/2015 5:54 PM, Eric Lombrozo wrote:\n> Perhaps it isn\u2019t prudent to push out changes to the relay policy that make these exploits even easier right now - but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient so that we have more room for changes on things like relay policy without significant disruption to the network.\n>\n\nThere's no need to worry about causing more problems by relaying\ndouble-spends.  After a year of watching, it's clear that already only\n20% of hash power strictly obeys first-seen.\n\nhttp://i.imgur.com/0bYXrjn.png\n\nIt may be surprising that\n - The period of ambiguity is very short - just 2 seconds\n   (this makes sense, given the .5s median propagation time)\n - Fast double-spends between 2 and 15 seconds are less successful\n - The steady-state 80% respend success rate is reached after just 15\nseconds\n\nThe >30s data point includes txes that were respent after a long time,\nsometimes months.  Those longer-term respends are to be expected, as\npeople reclaim stuck txes.\n\nPaying attention to double-spends is an opportunity for wallets and\nmerchants .  With 140 Bitcoin XT nodes online, you're probably already\nreceiving them.  Most wallets, including vanilla core, don't even alert\nwhen a double-spend of a wallet transaction appears in a block - even\nthough there may still be time to withhold delivery of the goods/services.\n\nIf FSS RBF gains miner share, fewer successful zero-conf double-spends\nwill occur.  Only radical twisted logic finds that to be an undesirable\nresult."
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-21T06:45:34",
                "message_text_only": "On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n>  but we NEED to be applying some kind of pressure on the merchant end to\n> upgrade their stuff to be more resilient\n>\n\nCan you be specific?  What precise technical steps would you have BitPay\nand Coinbase do?  We upgrade our stuff to... what exactly?\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/97d71b05/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T07:42:43",
                "message_text_only": "> On Jun 20, 2015, at 11:45 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> \n> On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:\n>  but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient\n> \n> Can you be specific?  What precise technical steps would you have BitPay and Coinbase do?  We upgrade our stuff to... what exactly?\n> \n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/ <https://bitpay.com/>\nThanks for asking *the* question, Jeff. We often get caught up in these philosophical debates\u2026but at the end of the day we need something concrete.\n\nEven more important than the specific software you\u2019re using is the security policy.\n\nIf you must accept zero confirmation transactions, there are a few concrete things you can do to reduce your exposure:\n\n1) limit the transaction amounts for zero confirmation transactions - do not accept them for very high priced goods\u2026especially if they require physical shipping.\n2) limit the total amount of unconfirmed revenue you\u2019ll tolerate at any given moment - if the amount is exceeded, require confirmations.\n3) give merchants of subscription services (i.e. servers, hosting, etc\u2026) the ability to shut the user out if a double-spend is detected.\n4) collect legal information on purchasers (or have the merchants collect this information) so you have someone to go after if they try to screw you\n5) create a risk profile for users\u2026and flag suspicious behavior (i.e. someone trying to purchase a bunch of stuff that totally doesn\u2019t fit into their purchasing habits).\n6) get insurance (although right now reasonably-priced insurance is probably pretty hard to obtain since statistics are generally of little use\u2026we\u2019re entering uncharted territory).\n7) set up a warning system and a \u201cpanic\u201d button so that if you start to see an attack you can immediately disable all zero confirmation transactions system-wide.\n8) independently verify all inbound transactions and connect to multiple network nodes\u2026check them against one another.\n\n\nAs for software tools to accomplish these things, we can talk about that offline :)\n\n\n- Eric Lombrozo\n\n\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/95ab06d4/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/95ab06d4/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T08:35:50",
                "message_text_only": "> On Jun 21, 2015, at 12:42 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n> \n>> On Jun 20, 2015, at 11:45 PM, Jeff Garzik <jgarzik at bitpay.com <mailto:jgarzik at bitpay.com>> wrote:\n>> \n>> On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:\n>>  but we NEED to be applying some kind of pressure on the merchant end to upgrade their stuff to be more resilient\n>> \n>> Can you be specific?  What precise technical steps would you have BitPay and Coinbase do?  We upgrade our stuff to... what exactly?\n>> \n>> --\n>> Jeff Garzik\n>> Bitcoin core developer and open source evangelist\n>> BitPay, Inc.      https://bitpay.com/ <https://bitpay.com/>\n> Thanks for asking *the* question, Jeff. We often get caught up in these philosophical debates\u2026but at the end of the day we need something concrete.\n> \n> Even more important than the specific software you\u2019re using is the security policy.\n> \n> If you must accept zero confirmation transactions, there are a few concrete things you can do to reduce your exposure:\n> \n> 1) limit the transaction amounts for zero confirmation transactions - do not accept them for very high priced goods\u2026especially if they require physical shipping.\n> 2) limit the total amount of unconfirmed revenue you\u2019ll tolerate at any given moment - if the amount is exceeded, require confirmations.\n> 3) give merchants of subscription services (i.e. servers, hosting, etc\u2026) the ability to shut the user out if a double-spend is detected.\n> 4) collect legal information on purchasers (or have the merchants collect this information) so you have someone to go after if they try to screw you\n> 5) create a risk profile for users\u2026and flag suspicious behavior (i.e. someone trying to purchase a bunch of stuff that totally doesn\u2019t fit into their purchasing habits).\n> 6) get insurance (although right now reasonably-priced insurance is probably pretty hard to obtain since statistics are generally of little use\u2026we\u2019re entering uncharted territory).\n> 7) set up a warning system and a \u201cpanic\u201d button so that if you start to see an attack you can immediately disable all zero confirmation transactions system-wide.\n> 8) independently verify all inbound transactions and connect to multiple network nodes\u2026check them against one another.\n> \n> \n> As for software tools to accomplish these things, we can talk about that offline :)\n> \n> \n> - Eric Lombrozo\n> \n> \n> \n> \n\nI should also point out that pretty much all of these suggestions (except for maybe 8) would apply to ANY payment system\u2026they are NOT specific to Bitcoin whatsoever. Any serious payment processor should have these sorts of policies engrained as part of company culture\u2026or else one day (probably not too long from now) you\u2019ll be out of business. The mere suggestion that changing relay policy would pose significant threats to the bottom line of a payment processor is about the height of amateurishness, IMHO.\n\n\n- Eric Lombrozo\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/02d84c3a/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/02d84c3a/attachment.sig>"
            },
            {
                "author": "Btc Drak",
                "date": "2015-06-21T08:41:44",
                "message_text_only": "Eric,\n\nBitPay clearly do understand the risks of 0-conf. In case you were not\naware BitPay does not particularly \"accept zero confirm transactions\". When\na payment is seen on the network the payment screen reports the invoice has\nbeen paid, but that's front-end user facing. On the back end it's marked as\npaid but the API exposes the the confirmation status allowing the merchant\nto make business decisions about when to progress to fulfilment. A good\nexample of this is Neteller (a sort of paypal variant) which allows one to\nfund the account with fiat using Bitcoin, via Bitpay. When you pay the\nbitpay invoice, your account is marked as payment pending until there are\nsome confirmations.\n\nCoinbase does not expose the confirmation status and from what I understand\n(not checked myself) they guarantee payment to merchants for 0-confirm,\nregardless of whether they confirm or not.\n\nI want to address something stated by Justus, that signing a payment\nmessage and broadcasting somehow solidifies intent and going back on that\nwould be fraud. This seriously conflates cryptographic certainty with human\nbehaviour. For one, humans make mistakes all the time. We get tired, we get\ndistracted, we make copy paste errors. It's entirely possible on sends a\npayment only to find it's been sent to the wrong address or the wrong\namount has been sent or the fee is wrong. Software may also misbehave\n(Electrum for example has a weird UI glitch with fees where the specified\nfee can be overwritten). r/bitcoin it littered with sad examples. What\nECDSA signing tells is that it was signed by your private key, but nothing\nelse. It does not say if *you* signed it, or that the message you signed\nwas correct.\n\n\nOn Sun, Jun 21, 2015 at 8:42 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n>\n> On Jun 20, 2015, at 11:45 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>\n> On Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com>\n> wrote:\n>\n>>  but we NEED to be applying some kind of pressure on the merchant end to\n>> upgrade their stuff to be more resilient\n>>\n>\n> Can you be specific?  What precise technical steps would you have BitPay\n> and Coinbase do?  We upgrade our stuff to... what exactly?\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n>\n> Thanks for asking *the* question, Jeff. We often get caught up in these\n> philosophical debates\u2026but at the end of the day we need something concrete.\n>\n> Even more important than the specific software you\u2019re using is the\n> security policy.\n>\n> If you must accept zero confirmation transactions, there are a few\n> concrete things you can do to reduce your exposure:\n>\n> 1) limit the transaction amounts for zero confirmation transactions - do\n> not accept them for very high priced goods\u2026especially if they require\n> physical shipping.\n> 2) limit the total amount of unconfirmed revenue you\u2019ll tolerate at any\n> given moment - if the amount is exceeded, require confirmations.\n> 3) give merchants of subscription services (i.e. servers, hosting, etc\u2026)\n> the ability to shut the user out if a double-spend is detected.\n> 4) collect legal information on purchasers (or have the merchants collect\n> this information) so you have someone to go after if they try to screw you\n> 5) create a risk profile for users\u2026and flag suspicious behavior (i.e.\n> someone trying to purchase a bunch of stuff that totally doesn\u2019t fit into\n> their purchasing habits).\n> 6) get insurance (although right now reasonably-priced insurance is\n> probably pretty hard to obtain since statistics are generally of little\n> use\u2026we\u2019re entering uncharted territory).\n> 7) set up a warning system and a \u201cpanic\u201d button so that if you start to\n> see an attack you can immediately disable all zero confirmation\n> transactions system-wide.\n> 8) independently verify all inbound transactions and connect to multiple\n> network nodes\u2026check them against one another.\n>\n>\n> As for software tools to accomplish these things, we can talk about that\n> offline :)\n>\n>\n> - Eric Lombrozo\n>\n>\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/4abdd8ca/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T08:51:51",
                "message_text_only": "> On Jun 21, 2015, at 1:41 AM, Btc Drak <btcdrak at gmail.com> wrote:\n> \n> Eric,\n> \n> BitPay clearly do understand the risks of 0-conf. In case you were not aware BitPay does not particularly \"accept zero confirm transactions\". When a payment is seen on the network the payment screen reports the invoice has been paid, but that's front-end user facing. On the back end it's marked as paid but the API exposes the the confirmation status allowing the merchant to make business decisions about when to progress to fulfilment. A good example of this is Neteller (a sort of paypal variant) which allows one to fund the account with fiat using Bitcoin, via Bitpay. When you pay the bitpay invoice, your account is marked as payment pending until there are some confirmations.\n> \n\nI am glad to hear that. Yes, it absolutely makes sense to let the merchant to make business decisions still pending confirmation (i.e. should I actually ship?)\n\n> Coinbase does not expose the confirmation status and from what I understand (not checked myself) they guarantee payment to merchants for 0-confirm, regardless of whether they confirm or not.\n\nThen Coinbase is essentially taking on the role of an insurer\u2026are they taking the appropriate precautions to limit potential losses? Can they make up for these losses with fees? And if not (or if they don\u2019t really have a quantifiable risk model) could they survive a worst-case scenario with at most a surface wound? (i.e. a systemic attack involving many machines in many different places all attacking at once).\n\nIt would be absolutely the height of idiocy to guarantee payment on merchandise that has yet to ship, i.e. So I hope these reports are wrong :)\n\n\n- Eric Lombrozo\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/e71b8a85/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-21T19:49:41",
                "message_text_only": "On Sun, Jun 21, 2015 at 12:42 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Thanks for asking *the* question, Jeff. We often get caught up in these\n> philosophical debates\u2026but at the end of the day we need something concrete.\n>\n> Even more important than the specific software you\u2019re using is the\n> security policy.\n>\n> If you must accept zero confirmation transactions, there are a few\n> concrete things you can do to reduce your exposure:\n>\n> 1) limit the transaction amounts for zero confirmation transactions - do\n> not accept them for very high priced goods\u2026especially if they require\n> physical shipping.\n> 2) limit the total amount of unconfirmed revenue you\u2019ll tolerate at any\n> given moment - if the amount is exceeded, require confirmations.\n> 3) give merchants of subscription services (i.e. servers, hosting, etc\u2026)\n> the ability to shut the user out if a double-spend is detected.\n>\n\nAlready done -- BitPay merchants choose their level of transaction\nsecurity.  Level of confirmations is directly exposed to merchants, so that\nthey choose the level of risk for themselves.\n\nPhysically shipped orders and subscriptions are actually the easy cases and\nare already handled.  These can accept 0-conf for an initial order phase,\nthen have the luxury of time to wait for confirmations before shipping /\ncanceling a subscription.\n\nElectronic goods instantly delivered are the toughest use case.  Even\nthere, merchants choose their level of risk.\n\n\n\n> 4) collect legal information on purchasers (or have the merchants collect\n> this information) so you have someone to go after if they try to screw you\n>\n\nThe system requests this information on orders yes.  Merchants also collect\nthis info as their needs dictate.\n\n\n\n> 5) create a risk profile for users\u2026and flag suspicious behavior (i.e.\n> someone trying to purchase a bunch of stuff that totally doesn\u2019t fit into\n> their purchasing habits).\n> 6) get insurance (although right now reasonably-priced insurance is\n> probably pretty hard to obtain since statistics are generally of little\n> use\u2026we\u2019re entering uncharted territory).\n> 7) set up a warning system and a \u201cpanic\u201d button so that if you start to\n> see an attack you can immediately disable all zero confirmation\n> transactions system-wide.\n> 8) independently verify all inbound transactions and connect to multiple\n> network nodes\u2026check them against one another.\n>\n\nDefinitely looking at or have implemented this sort of stuff.  I cannot get\ninto detail in public...\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/8d925c35/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-21T18:23:20",
                "message_text_only": "We should use relay and default tx selection rules to raise the cost of\ndouble spend attacks as far as it is easy and practical to do so. This\nincreases the value of the bitcoin network by making it practical to use in\nmore situations for more people. Merchants of course can't rely on them\nbeing cryptographically safe, but the safer they are, the more useful.\n\nThe argument that since they can't be made perfectly safe, they should be\nas easy as possible to reverse so that merchants learn not to rely on them,\nis an incorrect one that reduces the usefulness and value of bitcoin.\nMerchants will learn very quickly what the costs of accepting bitcoin\npayments are, and the lower they are, the greater bitcoin merchant adoption\nwill be.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Sat, Jun 20, 2015 at 5:54 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> One more thing I would like to add to this thread: I want to make it\n> unequivocally clear that I believe what is making double-spends easier has\n> relatively little to do with the protocol and almost everything to do with\n> poor software and poor security policy on the merchant end. Perhaps it\n> isn\u2019t prudent to push out changes to the relay policy that make these\n> exploits even easier right now - but we NEED to be applying some kind of\n> pressure on the merchant end to upgrade their stuff to be more resilient so\n> that we have more room for changes on things like relay policy without\n> significant disruption to the network.\n>\n> - Eric Lombrozo\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/d1b29009/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T16:44:08",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 16:36, Matt Whitlock wrote:\n> On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:\n>> I'd also like to note that \"prima facie\" doesn't mean \"always\", it \n>> means\n>> that \"the default assumption, unless proven otherwise.\"\n> \n> Why would you automatically assume fraud by default? Shouldn't the\n> null hypothesis be the default? Without any information one way or\n> another, you ought to make *no assumption* about the fraudulence or\n> non-fraudulence of any given double-spend.\n\nIf we have ECDSA proof that an entity intentionally made and publicly \nannounced incompatible promises regarding the disposition of particular \nBitcoins under their control, then why shouldn't that be assumed to be a \nfraud attempt unless shown otherwise?\n\nThere are ways of achiving transaction fee adjustment after broadcast \nthat do not present the appearance of, or opportunity for, fraud. If \nthose options are available and the user chooses not to use them in \nfavor of the option that does, that makes bad intentions even more \nprobable.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhEasAAoJECpf2nDq2eYjcwIP/25yoRpNvZkkdFfYiBKaiL/g\nXRH8iFAyM5q3/75sA23vD/fzCNGIRRWYyp8PWk+23NF1gdsgVU6gFNNCUmDbjANv\nnWTt2Bd926St24jcU+OxMewSGlxpenDSFDNQVtxhNFKst6hoPatwK1Zfa0Eq7/Qw\n+r0H2Pse1ulrN4P1n5xnrYMq2w/GF3zinNZbrn2KOZCnsDa8lKlP8y9eNFHBJ//Z\nwDrOcfZ1WLhf5/5xlV1NiH0tdxzABilH0ITimm2LCKbj3JcSJayZlyu4n3NypE0E\ncVFeYpBaVZW9wuKUv/va5fzcyWDFPAo+OrR2B3siAb8nfY1jONXNhuV3yZ76pzMr\nj39lvuSpoTbLobnEWMCJQ5bI/ngbhatT57gqMfF92sO0YjMe/gi/iU6urR9fi5Gz\n3Ov6QA78vxzy/YduFjkc/1FV2dNdbGJtq6b0stmz5TtM1uljeGUoj6JZ8kOJ0EXn\n857KFAqEd3hG9eYtBdFQcYeV2ShndALBQE0k3cqQvV6XYdHwHuTY15i1nq+u91MZ\nVwsR1M69PrDX5Ps6qo1F6QYJA/fA4fyOZ9dwIvh+cgtu4wBptr/NOpL3XH0kE2+G\nb2FRGOwdb2KlejIXSL9p4mfJTX9lmk4twbZe2Spjiy4FinOUyzxEobNoUTMcFCU7\nZu2i5yjMlJzrDB8yXz/N\n=xtXD\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T17:40:00",
                "message_text_only": "On Fri, Jun 19, 2015 at 9:44 AM, <justusranvier at riseup.net> wrote:\n\n> If we have ECDSA proof that an entity intentionally made and publicly\n> announced incompatible promises regarding the disposition of particular\n> Bitcoins under their control, then why shouldn't that be assumed to be a\n> fraud attempt unless shown otherwise?\n>\n\nMaking multiple incompatible versions of a spend is a -requirement- of\nvarious refund contract protocols.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/a49350a3/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T17:48:25",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 17:40, Jeff Garzik wrote:\n> Making multiple incompatible versions of a spend is a -requirement- of\n> various refund contract protocols.\n\nIs there not a dedicated field in a transaction (nSequence) for express \npurpose of indicating when a protocol like this is in use?\n\nAs far as I know, transactions which are using those protocols can be \neasily differentiated from those that aren't (which is probably good \nfrom a payment assurance standpoint and bad from a privacy standpoint).\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhFW3AAoJECpf2nDq2eYjkegQAINcnzIPbO/bKqNv14TOonb8\n9g/pfvMSQyZjUiu4rB6Iwtn+h1hyLkPc3cdSFV4diQSWeG7Q27ZJzH1T1kYdKp4W\nDDH8DwD8PtOu+dgRK9eBsy9h72OncA4JTFhnAXMgfLVBY9eRqXk/DWlzwV/WOn/j\n3G5xKKOOeHmKJCaKFwdpZghraLouS72AKSdxCNvleRc4zllV+zqWyHHssNDg7sGH\nb/62O3DBZXdlzIEzK8/IeaNMY+UXd984/yQ8KCrHCKjc9uiUjNUCCw4JPo4rB/ZA\nItoc8b6pexRs8h40FdXGYAwvN5xQgcaOL7SsN2nNx/DQWYf+1krBO8Iy4kYw2KGl\n8JctcHBOI2gLCxTpB2cWeGPwBQbKJhPsmxTxaTNw5fC6ycAnjoJ2bO1Uz0KfwdnI\n2jmwxccB9KauC9zNthxGbvdsHOxE8foZ6AnSDI/qbYQK6MqtSnsa7BUn8vc/y4Uf\nbVCsxiywVlHttCJqPh5v16rejCcH2el5Rd5PVCkEagxYFfLA3681ZJKD22UV742l\nn8ii7RUJXeps6zjRAc35Ccj5qjhB4SP4qYvKmyEoltYbw1EwXbm93UCsFpuxmQ9g\nGbQ/jZXsB1cmHBC+c+3X6SaU6eZdy2jDHsICP7sMx2CrZpcZZO058bqRbmdk8JE6\nJI17MYG0ofTLfdCfkgEG\n=en1q\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T17:50:15",
                "message_text_only": "On Fri, Jun 19, 2015 at 10:48 AM, <justusranvier at riseup.net> wrote:\n\n> On 2015-06-19 17:40, Jeff Garzik wrote:\n>\n>> Making multiple incompatible versions of a spend is a -requirement- of\n>> various refund contract protocols.\n>>\n>\n> Is there not a dedicated field in a transaction (nSequence) for express\n> purpose of indicating when a protocol like this is in use?\n>\n\nNo.  You cannot know which is the 'right' or wrong transaction.  One tx has\nobvious nSequence adjustments, the other - the refund transaction - may not.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/260466f9/attachment.html>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T18:00:05",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 17:50, Jeff Garzik wrote:\n> No.  You cannot know which is the 'right' or wrong transaction.  One tx \n> has\n> obvious nSequence adjustments, the other - the refund transaction - may \n> not.\n\nI'm still not seeing a case where a node could see conflicting \ntransactions on the network as part of a micropayment channel, and not \nknow it was observing the resolution of a channel rather than a likely \nretail double spend.\n\nIf both transactions have been broadcast, then one of the conflicting \nmembers of the set will have nSequence adjustments.\n\nMaybe a clever griefer could try to make their retail double spend look \nlike a micropayment channel, but it seems like they'd be missing the \nother identifiable markers of that protocol.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhFhqAAoJECpf2nDq2eYjWtgP/2ir11TUfxoIIzK9t0groKY3\nyMR32HP3caDLKdc5ML41jf0l0cp7a54sFPuRE+Am8rkg9ogcf6fho/hCwLnhhNb4\nYYBqJ2pzqCU1uN8jwPYSwSw3AO+F+hPE8gcm7lKD297a1k9xpYayAFjChJowoyNT\nWuq9YDkakQeSjV1aCiRHuXNxqnnbymf9xHEiB0buVnSgnyXrgZNCnefAo8DeXYqi\nFTSceakNwdkklddK5ObNNK9ZoLpjHhX6hZwRiXsOoG+WUzXhLQ+BsyIFzsCKxQk1\ncXjTvLn+Ub9FasRCK5KXMBkkPa1U5JLs1nTn6eTbPyroTs10WLkXWjIpZHrkf7ZW\n9RsxoKIRaJur8gbYd6BMvV5rgkfGdb6j24pVNxFF2t89SLo44H0NvqE6koNzgubG\n4DyXZ+UlzxzwRVBNDeF4pdlKZGsz2ycvQPuNHRoaZY2IsieMBN/5HEqGNOmXsvKf\ntCg1SInO/FkE4njCxSW0R31s2KXCpgVCuq3qmoIKZobDdx7AC8GnpY1rdxUGpVoy\nUSJwZ2IOgtNfl/rBtOpkp/BaUCmCYOiUj13/ycDrqWvnM4TmiDdzJNEZNfez5UQp\nUvgvstoo88sewv9hGsuBWX0nC+ze/m43ZRReFhQDsypEaOw6pL2LSG9dD3tzulax\nTrbPXPlN55NarQ3nmPIW\n=Hj0x\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-19T16:50:53",
                "message_text_only": "\"prima facie\" generally means that in a court case the burden of proof \nshifts from one party to another. For instance, if you have a federal \ntrademark registration that is prima fascia evidence of those rights \neven though they could still be challenged.  To say a prosecutor would \nhave prima fascia evidence of a crime because double spend was detected \nis quite a stretch.\n\n\n\nOn 6/19/2015 12:36 PM, Matt Whitlock wrote:\n> On Friday, 19 June 2015, at 3:53 pm, justusranvier at riseup.net wrote:\n>> I'd also like to note that \"prima facie\" doesn't mean \"always\", it means\n>> that \"the default assumption, unless proven otherwise.\"\n> Why would you automatically assume fraud by default? Shouldn't the null hypothesis be the default? Without any information one way or another, you ought to make *no assumption* about the fraudulence or non-fraudulence of any given double-spend.\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-20T23:16:20",
                "message_text_only": "On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time\u2026\n\nI disagree with this premise. Please, don't take this as an argument\nfrom authority fallacy, but I will cite Satoshi to express what I\nthink the assumptions while using the system should be:\n\n\"As long as a majority of CPU power is controlled by nodes that are\nnot cooperating to attack the network, they'll generate the longest\nchain and outpace attackers.\"\n\nI can't say for sure what was meant by \"attacking the network\" in this\ncontext but I personally mean trying to rewrite valid and\nproof-of-work-timestamped history.\nUnconfirmed transactions are simply not part of history yet. Ordering\nunconfirmed transactions in a consensus compatible way without a\nuniversal clock is impossible, that's why we're using proof of work in\nthe first place.\n\nAlternative policies are NOT attacks on the network."
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-20T23:47:53",
                "message_text_only": "> On Jun 20, 2015, at 4:16 PM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n> \n> On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n>> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time\u2026\n> \n> I disagree with this premise. Please, don't take this as an argument\n> from authority fallacy, but I will cite Satoshi to express what I\n> think the assumptions while using the system should be:\n> \n> \"As long as a majority of CPU power is controlled by nodes that are\n> not cooperating to attack the network, they'll generate the longest\n> chain and outpace attackers.\"\n> \n> I can't say for sure what was meant by \"attacking the network\" in this\n> context but I personally mean trying to rewrite valid and\n> proof-of-work-timestamped history.\n> Unconfirmed transactions are simply not part of history yet. Ordering\n> unconfirmed transactions in a consensus compatible way without a\n> universal clock is impossible, that's why we're using proof of work in\n> the first place.\n> \n> Alternative policies are NOT attacks on the network.\n\nJust to be clear, Jorge, I wasn\u2019t suggesting that unconfirmed transactions are part of any sort of global consensus. In fact, they very much AREN\u2019T. Which is exactly why it is extremely dangerous to accept unconfirmed transactions as final unless you clearly have assessed the risks and it makes sense for the particular business use case.\n\n- Eric Lombrozo\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/a7c74859/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-20T23:52:26",
                "message_text_only": "I should also add that I think many in this space believe they have assessed the risk as acceptable but haven\u2019t really considered how to cap potential losses nor made contingency plans for when the inevitable attacks *do* come.\n\n- Eric Lombrozo\n\n> On Jun 20, 2015, at 4:47 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n> \n>> On Jun 20, 2015, at 4:16 PM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n>> \n>> On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n>>> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time\u2026\n>> \n>> I disagree with this premise. Please, don't take this as an argument\n>> from authority fallacy, but I will cite Satoshi to express what I\n>> think the assumptions while using the system should be:\n>> \n>> \"As long as a majority of CPU power is controlled by nodes that are\n>> not cooperating to attack the network, they'll generate the longest\n>> chain and outpace attackers.\"\n>> \n>> I can't say for sure what was meant by \"attacking the network\" in this\n>> context but I personally mean trying to rewrite valid and\n>> proof-of-work-timestamped history.\n>> Unconfirmed transactions are simply not part of history yet. Ordering\n>> unconfirmed transactions in a consensus compatible way without a\n>> universal clock is impossible, that's why we're using proof of work in\n>> the first place.\n>> \n>> Alternative policies are NOT attacks on the network.\n> \n> Just to be clear, Jorge, I wasn\u2019t suggesting that unconfirmed transactions are part of any sort of global consensus. In fact, they very much AREN\u2019T. Which is exactly why it is extremely dangerous to accept unconfirmed transactions as final unless you clearly have assessed the risks and it makes sense for the particular business use case.\n> \n> - Eric Lombrozo\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/bb11155c/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-20T23:56:14",
                "message_text_only": "> On Jun 20, 2015, at 4:47 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n> \n>> On Jun 20, 2015, at 4:16 PM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n>> \n>> On Fri, Jun 19, 2015 at 5:37 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n>>> The Bitcoin network was designed (or should be designed) with the requirement that it can withstand deliberate double-spend attacks that can come from anywhere at any time\u2026\n>> \n>> I disagree with this premise. Please, don't take this as an argument\n>> from authority fallacy, but I will cite Satoshi to express what I\n>> think the assumptions while using the system should be:\n>> \n>> \"As long as a majority of CPU power is controlled by nodes that are\n>> not cooperating to attack the network, they'll generate the longest\n>> chain and outpace attackers.\"\n>> \n>> I can't say for sure what was meant by \"attacking the network\" in this\n>> context but I personally mean trying to rewrite valid and\n>> proof-of-work-timestamped history.\n>> Unconfirmed transactions are simply not part of history yet. Ordering\n>> unconfirmed transactions in a consensus compatible way without a\n>> universal clock is impossible, that's why we're using proof of work in\n>> the first place.\n>> \n>> Alternative policies are NOT attacks on the network.\n> \n> Just to be clear, Jorge, I wasn\u2019t suggesting that unconfirmed transactions are part of any sort of global consensus. In fact, they very much AREN\u2019T. Which is exactly why it is extremely dangerous to accept unconfirmed transactions as final unless you clearly have assessed the risks and it makes sense for the particular business use case.\n> \n> - Eric Lombrozo\n\nI think the misunderstanding was in perhaps my earlier statement seemed like I was suggesting that it\u2019s the protocol\u2019s responsibility to protect merchants from double-spends. On the contrary - I think we agree - the protocol CANNOT make any guarantees to ANYONE until we do converge on a history. The \u201cdesign\u201d I speak of here is more on the merchant side.\n\n- Eric Lombrozo\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/1ecc0abe/attachment.sig>"
            },
            {
                "author": "justusranvier at riseup.net",
                "date": "2015-06-19T15:39:15",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn 2015-06-19 15:11, Peter Todd wrote:\n> If you ask me to pay you 1BTC at address A and I create tx1 that pays\n> 1BTC to A1 and 2BTC of chain to C, what's wrong with me creating tx2\n> that still pays 1BTC to A, but now only pays 1.999BTC to C? I'm not\n> defrauding you, I'm just reducing the value of my change address to pay\n> a higher fee. Similarly if I now need to pay Bob 0.5BTC, I can create\n> tx3 paying 1BTC to A, 0.5BTC to B, and 1.498BTC to C.\n> \n> Yet from the point of view of an external observer they have no idea \n> why\n> the transaction outputs reduced in size, nor any way of knowing if \n> fraud\n> did or did not occur.\n\nIf there are two transactions which spend the same inputs, and each \ntransaction has completely different output scripts, then this is prima \nfacie fraudulent. https://en.wikipedia.org/wiki/Prima_facie\n\nIf the two transactions have identical output scripts, and one output is \nreduced in value to increase the transaction fee, that has the \nappearance of honest dealing. There is a possibility that the payer has \nchose to under-pay their payee in order to over-pay the miner, but \nthat's not what a reasonable observer would assume at first glance.\n\nAdding outputs to a transaction, while keeping all the existing outputs \nexactly how they are is another way of increasing the transaction fee of \na transaction and is prima facie non-fraudulent.\n\nNote that child-pays-for-parent has none of this ambiguity.\n\n> What do you think of Bitcoin XT then? It relays double-spends, which\n> makes it much easier to get double-spends to miners than before. In\n> particular you see a lot of zero-fee transactions being replaced by\n> fee-paying transactions, relayed through Bitcoin XT nodes and then\n> mined. Is that encouraging fraud?\n\nI haven't closely looked into the features of Bitcoin XT because I'm \nhoping that it never becomes relevant. I do want to see a heterogenous \nimplementation network develop, but Bitcoin XT doesn't really count \nsince it's a derivative of the Bitcoin Core codebase.\n\nIn general, I think every signed Bitcoin transaction sent between \ndifferent parties is part of a valid, enforceable contract (using common \nlaw definitions which predate any particular legal jurisdiction). \nHandling contracts and money is Serious Business and so the decision of \nhow software should respond to double spends should not be made \nfrivolously.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBCgAGBQJVhDcpAAoJECpf2nDq2eYj23gP/ja9zqWZBoI/EfTJM0ZDVVY1\n7lNwPJrAhO7oKQOKDrqhimA0TPRkoU0rCoYXSUEWn5X8ZIFlz9SQnGwXjIxt7PfG\nyZTxF+vJbFCDifNcUlF7DRs07cavEFM9AOutYi8PyVg0LoV5+0VMhhWT4Kc5vnlZ\n4Tw91r1lvtI9MCif+KFpida/PnPlhvIfjASEuaK+vYx3ro1ovSUesh558xZmCZ9A\nJfs+EwXBrxDO0zC0fatnaoRMkYQN7i/Dq1PFis7OHcZYBaQwgQTUoF8/wASvr8fQ\ndPXJNzhgpYYXeu4IsYH/Of9HkEw+N+/0DEW07asJJ5OIgQmcyoGn+ph8QzrPqG5m\nRgb9BAmpqfCX+KrG6VDxU7xHLebwPhrPoYMIppvf77xhB2mV8c7Xky16Y/1tmxcH\nNLOL/WQelNBqCvx2+6c9yDJsJoY12Z0n1tdbIfp3m65xcFzqHPFPtTpsNl0p/gX7\nxOMSEUdSVyjvsJjXxWOG3B06+dVRqjS0Pr9ERjjviqx40XVpg4Q0b6y+LL0ZVweE\nvs8ECN4y3vB7Qg2swYryVA7kNBh6GwCs7pMCh0DFw1mynGKndCKD+cPh8r3taP1u\n8SlrKaD33schk4x70kxbtUzU+C7Yb5187Ct4U5kmsXhz1sypu4ebFPuWbJYG/Sjl\nuEW4Vcn+HxlNI/rhxBw4\n=odRL\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-19T15:39:20",
                "message_text_only": "This is very disappointing.  \"scorched earth\" replace-by-fee implemented\nfirst at a pool, without updating wallets and merchants, is very\nanti-social and increases the ability to perform Finney attacks and\ndouble-spends.\n\nThe community is progressing more towards a safer replace-by-fee model, as\nindicated by the following code change:\nhttps://github.com/bitcoin/bitcoin/pull/6176\n\n\nOn Fri, Jun 19, 2015 at 3:39 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> Yesterday F2Pool, currently the largest pool with 21% of the hashing\n> power, enabled full replace-by-fee (RBF) support after discussions with\n> me. This means that transactions that F2Pool has will be replaced if a\n> conflicting transaction pays a higher fee. There are no requirements for\n> the replacement transaction to pay addresses that were paid by the\n> previous transaction.\n>\n>\n> I'm a user. What does this mean for me?\n> ---------------------------------------\n>\n> In the short term, very little. Wallet software aimed at average users\n> has no ability to reliably detect conditions where an unconfirmed\n> transaction may be double-spent by the sender. For example, Schildbach's\n> Bitcoin Wallet for Android doesn't even detect double-spends of\n> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes\n> that propagate them. The least sophisticated double-spend attack\n> possibly - simply broadcasting two conflicting transactions at the same\n> time - has about 50% probability of success against these wallets.\n>\n> Additionally, SPV wallets based on bitcoinj can't even detect invalid\n> transactions reliably, instead trusting the full node(s) it is connected\n> too over the unauthenticated, unencrypted, P2P protocol to do validation\n> for them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\n> double-spends that spend the output of the conflicting transaction. I've\n> personally tested this with Schildbach's Bitcoin Wallet for Android,\n> which shows such invalid transactions as standard, unconfirmed,\n> transactions.\n>\n> Users should continue to assume that unconfirmed transactions could be\n> trivially reversed by the sender until the first confirmation. In\n> general, only the sender can reverse a transaction, so if you do trust\n> the sender feel free to assume an unconfirmed transaction will\n> eventually confirm. However, if you do not trust the sender and/or have\n> no other recourse if they double-spend you, wait until at least the\n> first confirmation before assuming the transaction will go through.\n>\n> In the long term, miner support of full RBF has a number of advantages\n> to users, allowing you to more efficiently make transactions, paying\n> lower fees. However you'll need a wallet supporting these features; none\n> exist yet.\n>\n>\n> I'm a business. What does this mean for me?\n> -------------------------------------------\n>\n> If you use your own node to verify transactions, you probably are in a\n> similar situation as average users, so again, this means very little to\n> you.\n>\n> If you use a payment processor/transaction API such as BitPay, Coinbase,\n> BlockCypher, etc. you may or may not be accepting unconfirmed\n> transactions, and they may or may not be \"guaranteed\" by your payment\n> processor even if double-spent. If like most merchants you're using the\n> API such that confirmations are required prior to accepting orders (e.g.\n> taking a meaningful loss such as shipping a product if the tx is\n> reversed) nothing changes for you. If not I recommend you contact your\n> payment processor.\n>\n>\n> I'm a miner. Why should I support replace-by-fee?\n> -------------------------------------------------\n>\n> Whether full or first-seen-safe\u2075 RBF support (along with\n> child-pays-for-parent) is an important step towards a fully functioning\n> transaction fee market that doesn't lead to users' transactions getting\n> mysteriously \"stuck\", particularly during network flooding\n> events/attacks. A better functioning fee market will help reduce\n> pressure to increase the blocksize, particularly from the users creating\n> the most valuable transactions.\n>\n> Full RBF also helps make use of the limited blockchain space more\n> efficiently, with up to 90%+ transaction size savings possible in some\n> transaction patterns. (e.g. long payment chains\u2076) More users in less\n> blockchain space will lead to higher overall fees per block.\n>\n> Finally as we'll discuss below full RBF prevents a number of serious\n> threats to the existing level playing field that miners operate in.\n>\n>\n> Why can't we make accepting unconfirmed txs from untrusted people safe?\n> -----------------------------------------------------------------------\n>\n> For a decentralized wallet, the situation is pretty bleak. These wallets\n> only have a handful of connections to the network, with no way of\n> knowing if those connections give an accurate view of what transactions\n> miners actually know about.\n>\n> The only serious attempt to fix this problem for decentralized wallets\n> that has been actually deployed is Andresen/Harding's double-spend\n> relaying, implemented in Bitcoin XT. It relays up to one double-spend\n> transaction per double-spent txout, with the intended effect to warn\n> recipients. In practice however this functionality makes it easier to\n> double-spend rather than harder, by giving an efficient and easy way to\n> get double-spends to miners after the fact. Notably my RBF\n> implementation even connects to Bitcoin XT nodes, reserving a % of all\n> incoming and outgoing connection slots for them.\n>\n> Additionally Bitcoin XT's double-spend relaying is subject to attacks\n> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\n> interactive attacks\u2077 among many others.\n>\n>\n> What about centralised wallets?\n> -------------------------------\n>\n> Here the solutions being deployed, planned, and proposed are harmful,\n> and even represent serious threats to Bitcoin's decentralization.\n>\n>\n> Confidence factors\n> ------------------\n>\n> Many services such as BlockCypher\u00b2 have attempted to predict the\n> probability that unconfirmed transactions will be mined, often\n> guaranteeing merchants payment\u00b3 even in the event of a double-spend. The\n> key component of these predictions is to sybil attack the P2P network as\n> a whole, connecting to as many nodes as possible to measure transaction\n> propagation. Additionally these services connect to pools directly via\n> the getblocktemplate protocol, repeatedly downloading via GBT the lists\n> of transactions in the to-be-mined blocks to determine what transactions\n> miners are attempting to mine.\n>\n> None of these measures scale, wasting significant network and miner\n> resources; in one instance a sybil attack by Chainalysis even completely\n> blocked the users of the SPV wallet Breadwallet\u2074 from accessing the\n> network. These measures also don't work very well, giving double-spend\n> attackers incentives to sybil attack miners themselves.\n>\n>\n> Transaction processing contracts with miners\n> --------------------------------------------\n>\n> The next step after measuring propagation fails is to contract with\n> miners directly, signing contracts with as much of the hashing power as\n> possible to get the transactions they want mined and double-spends\n> rejected. The miners/pools would then provide an authenticated API\n> endpoint for exclusive use of this service that would allow the service\n> to add and remove specific transactions to the mempool on demand.\n>\n> There's a number of serious problems with this:\n>\n> 1) Mining contracts can be used to double-spend\n>\n> ...even when they're being used \"honestly\".\n>\n> Suppose Alice is a merchant using CoinPayCypher, who has contracts with\n> 75% of the hashing power. Bob, another merchant, meanwhile uses a\n> decentralized Bitcoin Core backend for payments to his website.\n>\n> Mallory wants to double-spend Bob's to buy his expensive products. He\n> can do this by creating a transaction, tx1, that pays Alice, followed by\n> a second transaction, tx2, that pays Bob. In any circumstance when\n> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\n> the chance of Malory's double-spend succeeding becomes ~75% because\n> CoinPayCypher's contracts with mining ensure the transaction paying\n> Alice will get mined.\n>\n> Of course, dishonest use and/or compromise makes double-spending\n> trivial: Malory can use the API credentials to ask miners to reject\n> Bob's payment at any time.\n>\n>\n> 2) They still don't work, without 51% attacking other miners\n>\n> Even if CoinPayCypher has 75% of the hashing power on contract, that's\n> still a potentially 75% chance of being double-spent. The 25% of miners\n> who haven't signed contracts have no _decentralized_ way of ensuring\n> they don't create blocks with double-spends, let alone at low cost. If\n> those miners won't or can't sign contracts with CoinPayCypher the only\n> next step available is to reject their blocks entirely.\n>\n>\n> 3) Legal contracts give the advantage to non-anonymous miners in\n>    Western jurisdictions\n>\n> Suppose CoinPayCypher is a US company, and you're a miner with 1%\n> hashing power located in northern China. The barriers to you succesfully\n> negotiating a contract with CoinPayCypher are significant. You don't\n> speak the same langauge, you're in a completely different jurisdiction\n> so enforcing the legal contract is difficult, and being just 1%,\n> CoinPayCypher sees you as insignificant.\n>\n> Who's going to get the profitable hashing power contracts first, if at\n> all? Your English speaking competitors in the west. This is inherently a\n> pressure towards centralization of mining.\n>\n>\n> Why isn't this being announced on the bitcoin-security list first?\n> ------------------------------------------------------------------\n>\n> I've had repeated discussions with services vulnerable to double-spends;\n> they have been made well aware of the risk they're taking. If they've\n> followed my own and others' advice they'll at minimum have constant\n> monitoring of the rate of double-spends both on their own services and\n> on the P2P network in general.\n>\n> If you choose to take a risk you should accept the consequences.\n>\n>\n> How do I actually use full RBF?\n> -------------------------------\n>\n> First get the full-RBF patch to v0.10.2:\n>\n>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n>\n> The above implementation of RBF includes additional code to find and\n> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\n> Secondly, try out my replace-by-fee-tools at:\n>\n>     https://github.com/petertodd/replace-by-fee-tools\n>\n> You can watch double-spends on the network here:\n>\n>     http://respends.thinlink.com/\n>\n>\n> References\n> ----------\n>\n> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet\",\n>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n>\n> 2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n>    June 2nd, 2014, Erik Voorhees,\n>\n> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n>\n> 3) Coinbase Merchant API, Accessed Jun 19th 2015,\n>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>\n> 4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n>    March 14th 2015, Grace Caffyn, Coindesk,\n>\n> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n>\n> 5) \"First-Seen-Safe Replace-by-Fee\",\n>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>\n> 6) \"Cost savings by using replace-by-fee, 30-90%\",\n>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>\n> 7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan\n> Capkun,\n>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n>     http://eprint.iacr.org/2015/578\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f1279cf6/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-20T20:04:48",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nPeter,\n\nRecently there was a brouhaha over Coinbase censoring the ability of\nfirearms businesses to accept bitcoins via Coinbase\nhttps://www.reddit.com/r/Bitcoin/comments/3agbs7/coinbase_shuts_down_bit\ncoin_biz_for_firearms/\n\nThe question and relevance here to this is that for people who are\ngoing for the alternate route (e.g., bailing on Coinbase / Bitpay /\nsimilar web wallets, in favor of setting up with something like\nElectrum and using Gear https://gear.mycelium.com/ as payment\nprocessor or Straight\nhttps://github.com/snitko/straight-server,\nwhat would be the answer to \"What does this mean for me?\" for this topic\n?\n\nOn 06/19/2015 03:39 AM, Peter Todd wrote:\n> Yesterday F2Pool, currently the largest pool with 21% of the\n> hashing power, enabled full replace-by-fee (RBF) support after\n> discussions with me. This means that transactions that F2Pool has\n> will be replaced if a conflicting transaction pays a higher fee.\n> There are no requirements for the replacement transaction to pay\n> addresses that were paid by the previous transaction.\n> \n> \n> I'm a user. What does this mean for me? \n> ---------------------------------------\n> \n> In the short term, very little. Wallet software aimed at average\n> users has no ability to reliably detect conditions where an\n> unconfirmed transaction may be double-spent by the sender. For\n> example, Schildbach's Bitcoin Wallet for Android doesn't even\n> detect double-spends of unconfirmed transactions when connected to\n> a RBF or Bitcoin XT nodes that propagate them. The least\n> sophisticated double-spend attack possibly - simply broadcasting\n> two conflicting transactions at the same time - has about 50%\n> probability of success against these wallets.\n> \n> Additionally, SPV wallets based on bitcoinj can't even detect\n> invalid transactions reliably, instead trusting the full node(s) it\n> is connected too over the unauthenticated, unencrypted, P2P\n> protocol to do validation for them. For instance due to a unfixed\n> bug\u00b9 Bitcoin XT nodes will relay double-spends that spend the\n> output of the conflicting transaction. I've personally tested this\n> with Schildbach's Bitcoin Wallet for Android, which shows such\n> invalid transactions as standard, unconfirmed, transactions.\n> \n> Users should continue to assume that unconfirmed transactions could\n> be trivially reversed by the sender until the first confirmation.\n> In general, only the sender can reverse a transaction, so if you do\n> trust the sender feel free to assume an unconfirmed transaction\n> will eventually confirm. However, if you do not trust the sender\n> and/or have no other recourse if they double-spend you, wait until\n> at least the first confirmation before assuming the transaction\n> will go through.\n> \n> In the long term, miner support of full RBF has a number of\n> advantages to users, allowing you to more efficiently make\n> transactions, paying lower fees. However you'll need a wallet\n> supporting these features; none exist yet.\n> \n> \n> I'm a business. What does this mean for me? \n> -------------------------------------------\n> \n> If you use your own node to verify transactions, you probably are\n> in a similar situation as average users, so again, this means very\n> little to you.\n> \n> If you use a payment processor/transaction API such as BitPay,\n> Coinbase, BlockCypher, etc. you may or may not be accepting\n> unconfirmed transactions, and they may or may not be \"guaranteed\"\n> by your payment processor even if double-spent. If like most\n> merchants you're using the API such that confirmations are required\n> prior to accepting orders (e.g. taking a meaningful loss such as\n> shipping a product if the tx is reversed) nothing changes for you.\n> If not I recommend you contact your payment processor.\n> \n> \n> I'm a miner. Why should I support replace-by-fee? \n> -------------------------------------------------\n> \n> Whether full or first-seen-safe\u2075 RBF support (along with \n> child-pays-for-parent) is an important step towards a fully\n> functioning transaction fee market that doesn't lead to users'\n> transactions getting mysteriously \"stuck\", particularly during\n> network flooding events/attacks. A better functioning fee market\n> will help reduce pressure to increase the blocksize, particularly\n> from the users creating the most valuable transactions.\n> \n> Full RBF also helps make use of the limited blockchain space more \n> efficiently, with up to 90%+ transaction size savings possible in\n> some transaction patterns. (e.g. long payment chains\u2076) More users\n> in less blockchain space will lead to higher overall fees per\n> block.\n> \n> Finally as we'll discuss below full RBF prevents a number of\n> serious threats to the existing level playing field that miners\n> operate in.\n> \n> \n> Why can't we make accepting unconfirmed txs from untrusted people\n> safe? \n> ----------------------------------------------------------------------\n- -\n>\n>  For a decentralized wallet, the situation is pretty bleak. These\n> wallets only have a handful of connections to the network, with no\n> way of knowing if those connections give an accurate view of what\n> transactions miners actually know about.\n> \n> The only serious attempt to fix this problem for decentralized\n> wallets that has been actually deployed is Andresen/Harding's\n> double-spend relaying, implemented in Bitcoin XT. It relays up to\n> one double-spend transaction per double-spent txout, with the\n> intended effect to warn recipients. In practice however this\n> functionality makes it easier to double-spend rather than harder,\n> by giving an efficient and easy way to get double-spends to miners\n> after the fact. Notably my RBF implementation even connects to\n> Bitcoin XT nodes, reserving a % of all incoming and outgoing\n> connection slots for them.\n> \n> Additionally Bitcoin XT's double-spend relaying is subject to\n> attacks include bandwidth exhaustion, sybil attacks, and Gervais's\n> non-sybil interactive attacks\u2077 among many others.\n> \n> \n> What about centralised wallets? -------------------------------\n> \n> Here the solutions being deployed, planned, and proposed are\n> harmful, and even represent serious threats to Bitcoin's\n> decentralization.\n> \n> \n> Confidence factors ------------------\n> \n> Many services such as BlockCypher\u00b2 have attempted to predict the \n> probability that unconfirmed transactions will be mined, often \n> guaranteeing merchants payment\u00b3 even in the event of a\n> double-spend. The key component of these predictions is to sybil\n> attack the P2P network as a whole, connecting to as many nodes as\n> possible to measure transaction propagation. Additionally these\n> services connect to pools directly via the getblocktemplate\n> protocol, repeatedly downloading via GBT the lists of transactions\n> in the to-be-mined blocks to determine what transactions miners are\n> attempting to mine.\n> \n> None of these measures scale, wasting significant network and\n> miner resources; in one instance a sybil attack by Chainalysis even\n> completely blocked the users of the SPV wallet Breadwallet\u2074 from\n> accessing the network. These measures also don't work very well,\n> giving double-spend attackers incentives to sybil attack miners\n> themselves.\n> \n> \n> Transaction processing contracts with miners \n> --------------------------------------------\n> \n> The next step after measuring propagation fails is to contract\n> with miners directly, signing contracts with as much of the hashing\n> power as possible to get the transactions they want mined and\n> double-spends rejected. The miners/pools would then provide an\n> authenticated API endpoint for exclusive use of this service that\n> would allow the service to add and remove specific transactions to\n> the mempool on demand.\n> \n> There's a number of serious problems with this:\n> \n> 1) Mining contracts can be used to double-spend\n> \n> ...even when they're being used \"honestly\".\n> \n> Suppose Alice is a merchant using CoinPayCypher, who has contracts\n> with 75% of the hashing power. Bob, another merchant, meanwhile\n> uses a decentralized Bitcoin Core backend for payments to his\n> website.\n> \n> Mallory wants to double-spend Bob's to buy his expensive products.\n> He can do this by creating a transaction, tx1, that pays Alice,\n> followed by a second transaction, tx2, that pays Bob. In any\n> circumstance when Mallory can convince Bob to accept tx2, but\n> prevent Bob from seeing tx1, the chance of Malory's double-spend\n> succeeding becomes ~75% because CoinPayCypher's contracts with\n> mining ensure the transaction paying Alice will get mined.\n> \n> Of course, dishonest use and/or compromise makes double-spending \n> trivial: Malory can use the API credentials to ask miners to\n> reject Bob's payment at any time.\n> \n> \n> 2) They still don't work, without 51% attacking other miners\n> \n> Even if CoinPayCypher has 75% of the hashing power on contract,\n> that's still a potentially 75% chance of being double-spent. The\n> 25% of miners who haven't signed contracts have no _decentralized_\n> way of ensuring they don't create blocks with double-spends, let\n> alone at low cost. If those miners won't or can't sign contracts\n> with CoinPayCypher the only next step available is to reject their\n> blocks entirely.\n> \n> \n> 3) Legal contracts give the advantage to non-anonymous miners in \n> Western jurisdictions\n> \n> Suppose CoinPayCypher is a US company, and you're a miner with 1% \n> hashing power located in northern China. The barriers to you\n> succesfully negotiating a contract with CoinPayCypher are\n> significant. You don't speak the same langauge, you're in a\n> completely different jurisdiction so enforcing the legal contract\n> is difficult, and being just 1%, CoinPayCypher sees you as\n> insignificant.\n> \n> Who's going to get the profitable hashing power contracts first, if\n> at all? Your English speaking competitors in the west. This is\n> inherently a pressure towards centralization of mining.\n> \n> \n> Why isn't this being announced on the bitcoin-security list first? \n> ------------------------------------------------------------------\n> \n> I've had repeated discussions with services vulnerable to\n> double-spends; they have been made well aware of the risk they're\n> taking. If they've followed my own and others' advice they'll at\n> minimum have constant monitoring of the rate of double-spends both\n> on their own services and on the P2P network in general.\n> \n> If you choose to take a risk you should accept the consequences.\n> \n> \n> How do I actually use full RBF? -------------------------------\n> \n> First get the full-RBF patch to v0.10.2:\n> \n> https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n> \n> The above implementation of RBF includes additional code to find\n> and preferentially connect to other RBF nodes, as well as Bitcoin\n> XT nodes. Secondly, try out my replace-by-fee-tools at:\n> \n> https://github.com/petertodd/replace-by-fee-tools\n> \n> You can watch double-spends on the network here:\n> \n> http://respends.thinlink.com/\n> \n> \n> References ----------\n> \n> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also\n> novel variants of existing attacks w/ Bitcoin XT and Android\n> Bitcoin Wallet\", Peter Todd, May 23rd 2015, Bitcoin-development\n> mailing list, \n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/\nmsg07795.html\n>\n>  2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\", June\n> 2nd, 2014, Erik Voorhees, \n> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transact\nions-in-8-seconds-7c9edcb3b734\n>\n>  3) Coinbase Merchant API, Accessed Jun 19th 2015, \n> https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>\n>  4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\", \n> March 14th 2015, Grace Caffyn, Coindesk, \n> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-\non-bitcoin-network/\n>\n>  5) \"First-Seen-Safe Replace-by-Fee\", May 25th 2015, Peter Todd,\n> Bitcoin-development mailing list, \n> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.ne\nt/msg07829.html\n>\n>  6) \"Cost savings by using replace-by-fee, 30-90%\", May 25th 2015,\n> Peter Todd, Bitcoin-development mailing list, \n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/\nmsg07813.html\n>\n>  7) \"Tampering with the Delivery of Blocks and Transactions in\n> Bitcoin\", Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame\n> and Srdjan Capkun, Cryptology ePrint Archive: Report 2015/578, Jun\n> 10th 2015, http://eprint.iacr.org/2015/578\n> \n> \n> \n> ----------------------------------------------------------------------\n- --------\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVhcdfAAoJEGxwq/inSG8CVxUH/1E7P/fuAaDaVMGexaW8MVRT\nwEPx/sI1IU7S7UC5wXdcm9EufSK4smPLyPuW97LAPRIGnSvTF8BEYW+EW1hLtt0V\np9Vbj7+Ii5CJtarLebjeYKjiNSXF8h2p8oH+eeCjUygnzHt5Hsbc8R0aMRyPDJkT\nlNQmzWGxN1rBTjTQZ+FDA2E2AA1Dkv7UXL15MwudxLOCUONTMh3uwUKC5dz9HE+5\ndz3iZWx879VLuaQscDz65FBf5axSKFjL+RGkIuPLF8B1ybsSl0ZYEctmPIv5Ld4V\nw0bw+oABCFvCKbINdUY+VOdXogDXJDVmCaY/Bbu6sPoZcr0FmHrvHd9KfngjkR4=\n=7W68\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Dario Sneidermanis",
                "date": "2015-06-21T02:11:49",
                "message_text_only": "se, lo re putearon a Peter Todd en reddit por esto\nOn Jun 19, 2015 7:42 AM, \"Peter Todd\" <pete at petertodd.org> wrote:\n\n> Yesterday F2Pool, currently the largest pool with 21% of the hashing\n> power, enabled full replace-by-fee (RBF) support after discussions with\n> me. This means that transactions that F2Pool has will be replaced if a\n> conflicting transaction pays a higher fee. There are no requirements for\n> the replacement transaction to pay addresses that were paid by the\n> previous transaction.\n>\n>\n> I'm a user. What does this mean for me?\n> ---------------------------------------\n>\n> In the short term, very little. Wallet software aimed at average users\n> has no ability to reliably detect conditions where an unconfirmed\n> transaction may be double-spent by the sender. For example, Schildbach's\n> Bitcoin Wallet for Android doesn't even detect double-spends of\n> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes\n> that propagate them. The least sophisticated double-spend attack\n> possibly - simply broadcasting two conflicting transactions at the same\n> time - has about 50% probability of success against these wallets.\n>\n> Additionally, SPV wallets based on bitcoinj can't even detect invalid\n> transactions reliably, instead trusting the full node(s) it is connected\n> too over the unauthenticated, unencrypted, P2P protocol to do validation\n> for them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\n> double-spends that spend the output of the conflicting transaction. I've\n> personally tested this with Schildbach's Bitcoin Wallet for Android,\n> which shows such invalid transactions as standard, unconfirmed,\n> transactions.\n>\n> Users should continue to assume that unconfirmed transactions could be\n> trivially reversed by the sender until the first confirmation. In\n> general, only the sender can reverse a transaction, so if you do trust\n> the sender feel free to assume an unconfirmed transaction will\n> eventually confirm. However, if you do not trust the sender and/or have\n> no other recourse if they double-spend you, wait until at least the\n> first confirmation before assuming the transaction will go through.\n>\n> In the long term, miner support of full RBF has a number of advantages\n> to users, allowing you to more efficiently make transactions, paying\n> lower fees. However you'll need a wallet supporting these features; none\n> exist yet.\n>\n>\n> I'm a business. What does this mean for me?\n> -------------------------------------------\n>\n> If you use your own node to verify transactions, you probably are in a\n> similar situation as average users, so again, this means very little to\n> you.\n>\n> If you use a payment processor/transaction API such as BitPay, Coinbase,\n> BlockCypher, etc. you may or may not be accepting unconfirmed\n> transactions, and they may or may not be \"guaranteed\" by your payment\n> processor even if double-spent. If like most merchants you're using the\n> API such that confirmations are required prior to accepting orders (e.g.\n> taking a meaningful loss such as shipping a product if the tx is\n> reversed) nothing changes for you. If not I recommend you contact your\n> payment processor.\n>\n>\n> I'm a miner. Why should I support replace-by-fee?\n> -------------------------------------------------\n>\n> Whether full or first-seen-safe\u2075 RBF support (along with\n> child-pays-for-parent) is an important step towards a fully functioning\n> transaction fee market that doesn't lead to users' transactions getting\n> mysteriously \"stuck\", particularly during network flooding\n> events/attacks. A better functioning fee market will help reduce\n> pressure to increase the blocksize, particularly from the users creating\n> the most valuable transactions.\n>\n> Full RBF also helps make use of the limited blockchain space more\n> efficiently, with up to 90%+ transaction size savings possible in some\n> transaction patterns. (e.g. long payment chains\u2076) More users in less\n> blockchain space will lead to higher overall fees per block.\n>\n> Finally as we'll discuss below full RBF prevents a number of serious\n> threats to the existing level playing field that miners operate in.\n>\n>\n> Why can't we make accepting unconfirmed txs from untrusted people safe?\n> -----------------------------------------------------------------------\n>\n> For a decentralized wallet, the situation is pretty bleak. These wallets\n> only have a handful of connections to the network, with no way of\n> knowing if those connections give an accurate view of what transactions\n> miners actually know about.\n>\n> The only serious attempt to fix this problem for decentralized wallets\n> that has been actually deployed is Andresen/Harding's double-spend\n> relaying, implemented in Bitcoin XT. It relays up to one double-spend\n> transaction per double-spent txout, with the intended effect to warn\n> recipients. In practice however this functionality makes it easier to\n> double-spend rather than harder, by giving an efficient and easy way to\n> get double-spends to miners after the fact. Notably my RBF\n> implementation even connects to Bitcoin XT nodes, reserving a % of all\n> incoming and outgoing connection slots for them.\n>\n> Additionally Bitcoin XT's double-spend relaying is subject to attacks\n> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\n> interactive attacks\u2077 among many others.\n>\n>\n> What about centralised wallets?\n> -------------------------------\n>\n> Here the solutions being deployed, planned, and proposed are harmful,\n> and even represent serious threats to Bitcoin's decentralization.\n>\n>\n> Confidence factors\n> ------------------\n>\n> Many services such as BlockCypher\u00b2 have attempted to predict the\n> probability that unconfirmed transactions will be mined, often\n> guaranteeing merchants payment\u00b3 even in the event of a double-spend. The\n> key component of these predictions is to sybil attack the P2P network as\n> a whole, connecting to as many nodes as possible to measure transaction\n> propagation. Additionally these services connect to pools directly via\n> the getblocktemplate protocol, repeatedly downloading via GBT the lists\n> of transactions in the to-be-mined blocks to determine what transactions\n> miners are attempting to mine.\n>\n> None of these measures scale, wasting significant network and miner\n> resources; in one instance a sybil attack by Chainalysis even completely\n> blocked the users of the SPV wallet Breadwallet\u2074 from accessing the\n> network. These measures also don't work very well, giving double-spend\n> attackers incentives to sybil attack miners themselves.\n>\n>\n> Transaction processing contracts with miners\n> --------------------------------------------\n>\n> The next step after measuring propagation fails is to contract with\n> miners directly, signing contracts with as much of the hashing power as\n> possible to get the transactions they want mined and double-spends\n> rejected. The miners/pools would then provide an authenticated API\n> endpoint for exclusive use of this service that would allow the service\n> to add and remove specific transactions to the mempool on demand.\n>\n> There's a number of serious problems with this:\n>\n> 1) Mining contracts can be used to double-spend\n>\n> ...even when they're being used \"honestly\".\n>\n> Suppose Alice is a merchant using CoinPayCypher, who has contracts with\n> 75% of the hashing power. Bob, another merchant, meanwhile uses a\n> decentralized Bitcoin Core backend for payments to his website.\n>\n> Mallory wants to double-spend Bob's to buy his expensive products. He\n> can do this by creating a transaction, tx1, that pays Alice, followed by\n> a second transaction, tx2, that pays Bob. In any circumstance when\n> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\n> the chance of Malory's double-spend succeeding becomes ~75% because\n> CoinPayCypher's contracts with mining ensure the transaction paying\n> Alice will get mined.\n>\n> Of course, dishonest use and/or compromise makes double-spending\n> trivial: Malory can use the API credentials to ask miners to reject\n> Bob's payment at any time.\n>\n>\n> 2) They still don't work, without 51% attacking other miners\n>\n> Even if CoinPayCypher has 75% of the hashing power on contract, that's\n> still a potentially 75% chance of being double-spent. The 25% of miners\n> who haven't signed contracts have no _decentralized_ way of ensuring\n> they don't create blocks with double-spends, let alone at low cost. If\n> those miners won't or can't sign contracts with CoinPayCypher the only\n> next step available is to reject their blocks entirely.\n>\n>\n> 3) Legal contracts give the advantage to non-anonymous miners in\n>    Western jurisdictions\n>\n> Suppose CoinPayCypher is a US company, and you're a miner with 1%\n> hashing power located in northern China. The barriers to you succesfully\n> negotiating a contract with CoinPayCypher are significant. You don't\n> speak the same langauge, you're in a completely different jurisdiction\n> so enforcing the legal contract is difficult, and being just 1%,\n> CoinPayCypher sees you as insignificant.\n>\n> Who's going to get the profitable hashing power contracts first, if at\n> all? Your English speaking competitors in the west. This is inherently a\n> pressure towards centralization of mining.\n>\n>\n> Why isn't this being announced on the bitcoin-security list first?\n> ------------------------------------------------------------------\n>\n> I've had repeated discussions with services vulnerable to double-spends;\n> they have been made well aware of the risk they're taking. If they've\n> followed my own and others' advice they'll at minimum have constant\n> monitoring of the rate of double-spends both on their own services and\n> on the P2P network in general.\n>\n> If you choose to take a risk you should accept the consequences.\n>\n>\n> How do I actually use full RBF?\n> -------------------------------\n>\n> First get the full-RBF patch to v0.10.2:\n>\n>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n>\n> The above implementation of RBF includes additional code to find and\n> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\n> Secondly, try out my replace-by-fee-tools at:\n>\n>     https://github.com/petertodd/replace-by-fee-tools\n>\n> You can watch double-spends on the network here:\n>\n>     http://respends.thinlink.com/\n>\n>\n> References\n> ----------\n>\n> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin Wallet\",\n>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n>\n> 2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n>    June 2nd, 2014, Erik Voorhees,\n>\n> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n>\n> 3) Coinbase Merchant API, Accessed Jun 19th 2015,\n>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>\n> 4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n>    March 14th 2015, Grace Caffyn, Coindesk,\n>\n> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n>\n> 5) \"First-Seen-Safe Replace-by-Fee\",\n>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>\n> 6) \"Cost savings by using replace-by-fee, 30-90%\",\n>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>\n> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>\n> 7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan\n> Capkun,\n>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n>     http://eprint.iacr.org/2015/578\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/2c858ddf/attachment.html>"
            },
            {
                "author": "Dario Sneidermanis",
                "date": "2015-06-21T02:23:27",
                "message_text_only": "Sorry about that, ignore me\nOn Jun 20, 2015 11:11 PM, \"Dario Sneidermanis\" <dariosn at gmail.com> wrote:\n\n> se, lo re putearon a Peter Todd en reddit por esto\n> On Jun 19, 2015 7:42 AM, \"Peter Todd\" <pete at petertodd.org> wrote:\n>\n>> Yesterday F2Pool, currently the largest pool with 21% of the hashing\n>> power, enabled full replace-by-fee (RBF) support after discussions with\n>> me. This means that transactions that F2Pool has will be replaced if a\n>> conflicting transaction pays a higher fee. There are no requirements for\n>> the replacement transaction to pay addresses that were paid by the\n>> previous transaction.\n>>\n>>\n>> I'm a user. What does this mean for me?\n>> ---------------------------------------\n>>\n>> In the short term, very little. Wallet software aimed at average users\n>> has no ability to reliably detect conditions where an unconfirmed\n>> transaction may be double-spent by the sender. For example, Schildbach's\n>> Bitcoin Wallet for Android doesn't even detect double-spends of\n>> unconfirmed transactions when connected to a RBF or Bitcoin XT nodes\n>> that propagate them. The least sophisticated double-spend attack\n>> possibly - simply broadcasting two conflicting transactions at the same\n>> time - has about 50% probability of success against these wallets.\n>>\n>> Additionally, SPV wallets based on bitcoinj can't even detect invalid\n>> transactions reliably, instead trusting the full node(s) it is connected\n>> too over the unauthenticated, unencrypted, P2P protocol to do validation\n>> for them. For instance due to a unfixed bug\u00b9 Bitcoin XT nodes will relay\n>> double-spends that spend the output of the conflicting transaction. I've\n>> personally tested this with Schildbach's Bitcoin Wallet for Android,\n>> which shows such invalid transactions as standard, unconfirmed,\n>> transactions.\n>>\n>> Users should continue to assume that unconfirmed transactions could be\n>> trivially reversed by the sender until the first confirmation. In\n>> general, only the sender can reverse a transaction, so if you do trust\n>> the sender feel free to assume an unconfirmed transaction will\n>> eventually confirm. However, if you do not trust the sender and/or have\n>> no other recourse if they double-spend you, wait until at least the\n>> first confirmation before assuming the transaction will go through.\n>>\n>> In the long term, miner support of full RBF has a number of advantages\n>> to users, allowing you to more efficiently make transactions, paying\n>> lower fees. However you'll need a wallet supporting these features; none\n>> exist yet.\n>>\n>>\n>> I'm a business. What does this mean for me?\n>> -------------------------------------------\n>>\n>> If you use your own node to verify transactions, you probably are in a\n>> similar situation as average users, so again, this means very little to\n>> you.\n>>\n>> If you use a payment processor/transaction API such as BitPay, Coinbase,\n>> BlockCypher, etc. you may or may not be accepting unconfirmed\n>> transactions, and they may or may not be \"guaranteed\" by your payment\n>> processor even if double-spent. If like most merchants you're using the\n>> API such that confirmations are required prior to accepting orders (e.g.\n>> taking a meaningful loss such as shipping a product if the tx is\n>> reversed) nothing changes for you. If not I recommend you contact your\n>> payment processor.\n>>\n>>\n>> I'm a miner. Why should I support replace-by-fee?\n>> -------------------------------------------------\n>>\n>> Whether full or first-seen-safe\u2075 RBF support (along with\n>> child-pays-for-parent) is an important step towards a fully functioning\n>> transaction fee market that doesn't lead to users' transactions getting\n>> mysteriously \"stuck\", particularly during network flooding\n>> events/attacks. A better functioning fee market will help reduce\n>> pressure to increase the blocksize, particularly from the users creating\n>> the most valuable transactions.\n>>\n>> Full RBF also helps make use of the limited blockchain space more\n>> efficiently, with up to 90%+ transaction size savings possible in some\n>> transaction patterns. (e.g. long payment chains\u2076) More users in less\n>> blockchain space will lead to higher overall fees per block.\n>>\n>> Finally as we'll discuss below full RBF prevents a number of serious\n>> threats to the existing level playing field that miners operate in.\n>>\n>>\n>> Why can't we make accepting unconfirmed txs from untrusted people safe?\n>> -----------------------------------------------------------------------\n>>\n>> For a decentralized wallet, the situation is pretty bleak. These wallets\n>> only have a handful of connections to the network, with no way of\n>> knowing if those connections give an accurate view of what transactions\n>> miners actually know about.\n>>\n>> The only serious attempt to fix this problem for decentralized wallets\n>> that has been actually deployed is Andresen/Harding's double-spend\n>> relaying, implemented in Bitcoin XT. It relays up to one double-spend\n>> transaction per double-spent txout, with the intended effect to warn\n>> recipients. In practice however this functionality makes it easier to\n>> double-spend rather than harder, by giving an efficient and easy way to\n>> get double-spends to miners after the fact. Notably my RBF\n>> implementation even connects to Bitcoin XT nodes, reserving a % of all\n>> incoming and outgoing connection slots for them.\n>>\n>> Additionally Bitcoin XT's double-spend relaying is subject to attacks\n>> include bandwidth exhaustion, sybil attacks, and Gervais's non-sybil\n>> interactive attacks\u2077 among many others.\n>>\n>>\n>> What about centralised wallets?\n>> -------------------------------\n>>\n>> Here the solutions being deployed, planned, and proposed are harmful,\n>> and even represent serious threats to Bitcoin's decentralization.\n>>\n>>\n>> Confidence factors\n>> ------------------\n>>\n>> Many services such as BlockCypher\u00b2 have attempted to predict the\n>> probability that unconfirmed transactions will be mined, often\n>> guaranteeing merchants payment\u00b3 even in the event of a double-spend. The\n>> key component of these predictions is to sybil attack the P2P network as\n>> a whole, connecting to as many nodes as possible to measure transaction\n>> propagation. Additionally these services connect to pools directly via\n>> the getblocktemplate protocol, repeatedly downloading via GBT the lists\n>> of transactions in the to-be-mined blocks to determine what transactions\n>> miners are attempting to mine.\n>>\n>> None of these measures scale, wasting significant network and miner\n>> resources; in one instance a sybil attack by Chainalysis even completely\n>> blocked the users of the SPV wallet Breadwallet\u2074 from accessing the\n>> network. These measures also don't work very well, giving double-spend\n>> attackers incentives to sybil attack miners themselves.\n>>\n>>\n>> Transaction processing contracts with miners\n>> --------------------------------------------\n>>\n>> The next step after measuring propagation fails is to contract with\n>> miners directly, signing contracts with as much of the hashing power as\n>> possible to get the transactions they want mined and double-spends\n>> rejected. The miners/pools would then provide an authenticated API\n>> endpoint for exclusive use of this service that would allow the service\n>> to add and remove specific transactions to the mempool on demand.\n>>\n>> There's a number of serious problems with this:\n>>\n>> 1) Mining contracts can be used to double-spend\n>>\n>> ...even when they're being used \"honestly\".\n>>\n>> Suppose Alice is a merchant using CoinPayCypher, who has contracts with\n>> 75% of the hashing power. Bob, another merchant, meanwhile uses a\n>> decentralized Bitcoin Core backend for payments to his website.\n>>\n>> Mallory wants to double-spend Bob's to buy his expensive products. He\n>> can do this by creating a transaction, tx1, that pays Alice, followed by\n>> a second transaction, tx2, that pays Bob. In any circumstance when\n>> Mallory can convince Bob to accept tx2, but prevent Bob from seeing tx1,\n>> the chance of Malory's double-spend succeeding becomes ~75% because\n>> CoinPayCypher's contracts with mining ensure the transaction paying\n>> Alice will get mined.\n>>\n>> Of course, dishonest use and/or compromise makes double-spending\n>> trivial: Malory can use the API credentials to ask miners to reject\n>> Bob's payment at any time.\n>>\n>>\n>> 2) They still don't work, without 51% attacking other miners\n>>\n>> Even if CoinPayCypher has 75% of the hashing power on contract, that's\n>> still a potentially 75% chance of being double-spent. The 25% of miners\n>> who haven't signed contracts have no _decentralized_ way of ensuring\n>> they don't create blocks with double-spends, let alone at low cost. If\n>> those miners won't or can't sign contracts with CoinPayCypher the only\n>> next step available is to reject their blocks entirely.\n>>\n>>\n>> 3) Legal contracts give the advantage to non-anonymous miners in\n>>    Western jurisdictions\n>>\n>> Suppose CoinPayCypher is a US company, and you're a miner with 1%\n>> hashing power located in northern China. The barriers to you succesfully\n>> negotiating a contract with CoinPayCypher are significant. You don't\n>> speak the same langauge, you're in a completely different jurisdiction\n>> so enforcing the legal contract is difficult, and being just 1%,\n>> CoinPayCypher sees you as insignificant.\n>>\n>> Who's going to get the profitable hashing power contracts first, if at\n>> all? Your English speaking competitors in the west. This is inherently a\n>> pressure towards centralization of mining.\n>>\n>>\n>> Why isn't this being announced on the bitcoin-security list first?\n>> ------------------------------------------------------------------\n>>\n>> I've had repeated discussions with services vulnerable to double-spends;\n>> they have been made well aware of the risk they're taking. If they've\n>> followed my own and others' advice they'll at minimum have constant\n>> monitoring of the rate of double-spends both on their own services and\n>> on the P2P network in general.\n>>\n>> If you choose to take a risk you should accept the consequences.\n>>\n>>\n>> How do I actually use full RBF?\n>> -------------------------------\n>>\n>> First get the full-RBF patch to v0.10.2:\n>>\n>>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.10.2\n>>\n>> The above implementation of RBF includes additional code to find and\n>> preferentially connect to other RBF nodes, as well as Bitcoin XT nodes.\n>> Secondly, try out my replace-by-fee-tools at:\n>>\n>>     https://github.com/petertodd/replace-by-fee-tools\n>>\n>> You can watch double-spends on the network here:\n>>\n>>     http://respends.thinlink.com/\n>>\n>>\n>> References\n>> ----------\n>>\n>> 1) \"Replace-by-fee v0.10.2 - Serious DoS attack fixed! - Also novel\n>>     variants of existing attacks w/ Bitcoin XT and Android Bitcoin\n>> Wallet\",\n>>    Peter Todd, May 23rd 2015, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07795.html\n>>\n>> 2) \"From Zero to Hero: Bitcoin Transactions in 8 Seconds\",\n>>    June 2nd, 2014, Erik Voorhees,\n>>\n>> https://medium.com/blockcypher-blog/from-zero-to-hero-bitcoin-transactions-in-8-seconds-7c9edcb3b734\n>>\n>> 3) Coinbase Merchant API, Accessed Jun 19th 2015,\n>>    https://developers.coinbase.com/docs/merchants/callbacks#confirmations\n>>\n>> 4) \"Chainalysis CEO Denies 'Sybil Attack' on Bitcoin's Network\",\n>>    March 14th 2015, Grace Caffyn, Coindesk,\n>>\n>> http://www.coindesk.com/chainalysis-ceo-denies-launching-sybil-attack-on-bitcoin-network/\n>>\n>> 5) \"First-Seen-Safe Replace-by-Fee\",\n>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>>\n>> 6) \"Cost savings by using replace-by-fee, 30-90%\",\n>>    May 25th 2015, Peter Todd, Bitcoin-development mailing list,\n>>\n>> http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07813.html\n>>\n>> 7) \"Tampering with the Delivery of Blocks and Transactions in Bitcoin\",\n>>     Arthur Gervais and Hubert Ritzdorf and Ghassan O. Karame and Srdjan\n>> Capkun,\n>>     Cryptology ePrint Archive: Report 2015/578, Jun 10th 2015,\n>>     http://eprint.iacr.org/2015/578\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000070a2bb3b92c20d5c2c971e6e1a7abe55cdbbe6a2dd9a5ad\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/74d91624/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "F2Pool has enabled full replace-by-fee",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Stephen Morse",
                "Frank Flores",
                "Milly Bitcoin",
                "Tier Nolan",
                "Tom Harding",
                "odinn",
                "Jeffrey Paul",
                "Peter Todd",
                "Jorge Tim\u00f3n",
                "Btc Drak",
                "Mark Friedenbach",
                "Adrian Macneil",
                "Dario Sneidermanis",
                "Aaron Voisine",
                "Jeff Garzik",
                "Andreas Petersson",
                "Matt Whitlock",
                "justusranvier at riseup.net",
                "Luke Dashjr",
                "Gavin Andresen",
                "Chun Wang",
                "Ivan Brightly",
                "Eric Lombrozo",
                "Lawrence Nahum"
            ],
            "messages_count": 73,
            "total_messages_chars_count": 254750
        }
    },
    {
        "title": "[Bitcoin-development]  F2Pool has enabled full replace-by-fee",
        "thread_messages": [
            {
                "author": "Cameron Hejazi",
                "date": "2015-06-20T17:38:50",
                "message_text_only": "On Saturday, June 20, 2015, Ivan Brightly <ibrightly at gmail.com\n<javascript:_e(%7B%7D,'cvml','ibrightly at gmail.com');>> wrote:\n\n> Yep - similarly: you live in a neighborhood with a local coffee store.\n> Sure you could use a stolen credit card or a fake $5 bill, but it's not\n> worth the risk of being caught for a $3 coffee. And on the other side, the\n> store can deal with 1% of transactions getting reversed or having a fake\n> bill so they don't change their procedures.\n>\n\nThese analogies being brought are based on the goal of quick\npayments, which is different from the goal of Bitcoin:\ncryptographically sound, distributed consensus.\n\n\n\n> Perfection is not necessary in all situations.\n>\n\nIf you want zeroconf transactions, first realize that this goal currently\nhas no sound solution in Bitcoin and until it does, supporting it should\nnot be a part of the agenda. There are two paths going forward, not\nindependent of one another, that would achieve the goal of quick payments\nfor your coffee etc:\n- Research/implement a solution that is consistent with the goal of Bitcoin\n- Rely on a cosigning central authority\n\nIf you think the latter option is nasty, remember that people,\nlike corporations, can be nasty as well. Do not rely on the good faith of\npeople.\n\nCameron\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/744fcd89/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "F2Pool has enabled full replace-by-fee",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Cameron Hejazi"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1462
        }
    },
    {
        "title": "[Bitcoin-development] Remove Us Please",
        "thread_messages": [
            {
                "author": "Gigas Gaming Inc.",
                "date": "2015-06-19T16:41:23",
                "message_text_only": "This is no longer a mailing list, this is a chatroom.\nPlease remove this email from your list, you are now interfering with \nofficial company business.\n\nThanks"
            },
            {
                "author": "Jameson Lopp",
                "date": "2015-06-19T18:34:21",
                "message_text_only": "You are free to remove yourself; the URL is at the bottom of every email:\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\nOn Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <\ncorporate at gigasgaming.com> wrote:\n\n> This is no longer a mailing list, this is a chatroom.\n> Please remove this email from your list, you are now interfering with\n> official company business.\n>\n> Thanks\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/39901652/attachment.html>"
            },
            {
                "author": "John Bodeen",
                "date": "2015-06-19T19:55:43",
                "message_text_only": "from their website, humorous bits highlighted\n\n\n> *October 14, 2014 *In latest Hiatus new, the company has taken on yet\n> another crazy project but this one is going to benefit the world in which\n> it entered not long ago.  The company had done a lot of research on crypto\n> currencies, built one for itself, for testing purposes (GigasCorpCoin) and\n> found the underlaying problem of Bitcoin and was poised to solve it.\n> Company execs decided it would be a good investment to launch its own coin\n> and back it itself.\n> The company is currently in motion and will hire an expert to do some of\n> the coding by October 14, 2015.  Company President refused to be\n> interviewed due to too much work that needs done for this secret and\n> upcoming project.\n\n\nOn Fri, Jun 19, 2015 at 10:34 AM, Jameson Lopp <jameson.lopp at gmail.com>\nwrote:\n\n> You are free to remove yourself; the URL is at the bottom of every email:\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n> On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <\n> corporate at gigasgaming.com> wrote:\n>\n>> This is no longer a mailing list, this is a chatroom.\n>> Please remove this email from your list, you are now interfering with\n>> official company business.\n>>\n>> Thanks\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/3f457deb/attachment.html>"
            },
            {
                "author": "Brian Hoffman",
                "date": "2015-06-19T20:01:08",
                "message_text_only": "damn he was just on the verge of solving the underlaying problem with Bitcoin and you interrupted his focus.\n\n> On Jun 19, 2015, at 3:55 PM, John Bodeen <john-bodeen at uiowa.edu> wrote:\n> \n> from their website, humorous bits highlighted\n> \n> October 14, 2014 \n> In latest Hiatus new, the company has taken on yet another crazy project but this one is going to benefit the world in which it entered not long ago.  The company had done a lot of research on crypto currencies, built one for itself, for testing purposes (GigasCorpCoin) and found the underlaying problem of Bitcoin and was poised to solve it.  Company execs decided it would be a good investment to launch its own coin and back it itself.\n> The company is currently in motion and will hire an expert to do some of the coding by October 14, 2015.  Company President refused to be interviewed due to too much work that needs done for this secret and upcoming project.\n> \n> On Fri, Jun 19, 2015 at 10:34 AM, Jameson Lopp <jameson.lopp at gmail.com <mailto:jameson.lopp at gmail.com>> wrote:\n> You are free to remove yourself; the URL is at the bottom of every email: https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <corporate at gigasgaming.com <mailto:corporate at gigasgaming.com>> wrote:\n> This is no longer a mailing list, this is a chatroom.\n> Please remove this email from your list, you are now interfering with\n> official company business.\n> \n> Thanks\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> \n> ------------------------------------------------------------------------------\n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net <mailto:Bitcoin-development at lists.sourceforge.net>\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development <https://lists.sourceforge.net/lists/listinfo/bitcoin-development>\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/aee1cdb9/attachment.html>"
            },
            {
                "author": "Jameson Lopp",
                "date": "2015-06-19T20:27:05",
                "message_text_only": "You're only strengthening Gigas' point about the mailing list by posting\nderisive emails. Take your nonconstructive comments elsewhere.\n\n- Jameson\n\nOn Fri, Jun 19, 2015 at 4:01 PM, Brian Hoffman <brianchoffman at gmail.com>\nwrote:\n\n> damn he was just on the verge of solving the underlaying problem with\n> Bitcoin and you interrupted his focus.\n>\n> On Jun 19, 2015, at 3:55 PM, John Bodeen <john-bodeen at uiowa.edu> wrote:\n>\n> from their website, humorous bits highlighted\n>\n>\n>> *October 14, 2014 *In latest Hiatus new, the company has taken on yet\n>> another crazy project but this one is going to benefit the world in which\n>> it entered not long ago.  The company had done a lot of research on crypto\n>> currencies, built one for itself, for testing purposes (GigasCorpCoin) and\n>> found the underlaying problem of Bitcoin and was poised to solve it.\n>> Company execs decided it would be a good investment to launch its own coin\n>> and back it itself.\n>> The company is currently in motion and will hire an expert to do some of\n>> the coding by October 14, 2015.  Company President refused to be\n>> interviewed due to too much work that needs done for this secret and\n>> upcoming project.\n>\n>\n> On Fri, Jun 19, 2015 at 10:34 AM, Jameson Lopp <jameson.lopp at gmail.com>\n> wrote:\n>\n>> You are free to remove yourself; the URL is at the bottom of every email:\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>> On Fri, Jun 19, 2015 at 12:41 PM, Gigas Gaming Inc. <\n>> corporate at gigasgaming.com> wrote:\n>>\n>>> This is no longer a mailing list, this is a chatroom.\n>>> Please remove this email from your list, you are now interfering with\n>>> official company business.\n>>>\n>>> Thanks\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/818916e2/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Remove Us Please",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jameson Lopp",
                "John Bodeen",
                "Brian Hoffman",
                "Gigas Gaming Inc."
            ],
            "messages_count": 5,
            "total_messages_chars_count": 8968
        }
    },
    {
        "title": "[Bitcoin-development] Fee Market Effects",
        "thread_messages": [
            {
                "author": "Tim Witters",
                "date": "2015-06-19T12:03:48",
                "message_text_only": "A lot of standpoints for keeping the current block size are focused on \ncreating a healthy fee market. I have some open questions for this list \nin regards to the user incentives of using bitcoin, when such a strong \nfee market is in place.\nIn my scenario the average fee for a normal transactions will be around \n1$ to put in on the blockchain with a reasonable confirmation time.\n    \n1. How will we get user adoptions if the fees on bitcoin transactions \nour not competitive with other services like PayPal and the like. (from \na payment solution viewpoint) It is one of the main \u2018pitch lines\u2019 to get \npeople to adopt bitcoin. \u201cSend value to the other side of the world for \nalmost 0 fees\u201d\n\n    2. Many suggest the use of a level 2 layer will facilitate the \nscalability for bitcoin with technologies like the lightning network. \nBut to my knowledge, all these solutions still need to publish to the \nactual blockchain when they need to settle. Meaning you will have to pay \nthe fees at least once. In case of lightning this will be when the \nchannel is closed. \n\nThis means moves more to a monthly payed service, where you open a \npayment channel each month and pay the fee at the end. But a system like \nthis keeps money locked for the duration of the channel. And one of the \nmain \u2018pitch\u2019 point of the bitcoin economy was you get your money \ninstantly, not at the end of the month when the payment channel is \nclosed. \n\n    3. The idea of the fee market is people will start using the layer 2 \nsystems. When this happens, what are the incentives to keep running a \nnode? The incentives today are already quite small, the only real one is \nto support the network or make payments through your own trusted node. \nIf you are only using a layer 2 solution, are there any reasons left to \nrun my own bitcoin node, resulting in less decentralization.\n\n    4. Do we need a fee market right now? It seems to me the current \nblock reward is still high enough for miners to be able to make money \nand secure the network. No real fee market is therefore needed to help \nthese miners. \n\nRegardless of our opinion, why don\u2019t we let the miners decide? The \nBIP100 proposal seems to do this. If the majority of miners decide they \nwant bigger blocks they just vote for this. If they want a fee market \nbecause their return is enough, they can keep the limit and let the \ndemand for more blockspace result in a higher fee market. \nJust some of my thoughts about the results of full blocks and the \nresulting fee market. It seems to me a strong fee market might hurt the \nyoung ecosystem more, then it might help it (miners are currently \ncompensated enough). The same goes for decentralization, when people \nmore their resources to the level 2 solution or stop using bitcoin due \nto the higher fees compared to comparable services.\nCheers,\nTim Witters"
            }
        ],
        "thread_summary": {
            "title": "Fee Market Effects",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Tim Witters"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2841
        }
    },
    {
        "title": "[Bitcoin-development] Alternate HD path structure: BIP, blog, or wat?",
        "thread_messages": [
            {
                "author": "Matt Smith",
                "date": "2015-06-19T20:42:00",
                "message_text_only": "Hey guys,\n\nThe crew at Gem is considering a new HD wallet path structure for our\nwallets, which are coin-agnostic, that separates the coin_type field\ninto two fields as such:\n\nm / purpose' / network' / asset_type' / account' / change / index\n\nwhere network refers to the blockchain (0 - bitcoin, 1 - testnet3, 2 -\nlitecoin, etc) and the new asset_type refers to the kind of asset to be\nheld in accounts below that path (Open Assets, Omni, Counterparty).\n\nThe intent is to allow us to validate the address format, select the\nappropriate daemon to scan for tokenized assets, and choose multiple\nblockchain data sources (that may not know anything about token systems\nrunning on the blockchain they expose) relevant to an HDNode in the\nwallet using only information in the HDNode's path -- without having to\nmaintain an explicit mapping of coin_type -> network.\n\nFor example, we already have the issue of mapping network identifiers\nbecause of the lack of standardization across cryptocurrency libraries\nwhich ends up being ugly and obnoxious to maintain, i.e.\n\nnetcode_map = {\n  testnet: testnet3,\n  bitcoin_testnet: testnet3,\n  testnet3: testnet3,\n  XTN: testnet3, ...\n}\nnetcode_i_want = netcode_map[netcode_returned_by_libwhatever]\n\nWe want to avoid maintaining a similar asset_type_to_blockchain mapping.\nAdditionally, it would be helpful for utxo selection to exclude utxos\ntied to assets based on path.\n\nBIP43 seems to suggest that we request a BIP number and publish an\ninformational BIP specifying the new purpose. If that's not appropriate,\nthen maybe we just need to publish the information in a blog post to\nallow any wallet developers who want to to implement\nimport_from_gem_structure.\n\nI was also wondering if anyone had previously suggested something\nsimilar that I missed when cruising the mailing list archives on the\nsubject.\n\nThanks,\n\u2013\nMatt Smith | Gem\nhttps://gem.co | GH: @thedoctor\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: 0x63331857.asc\nType: application/pgp-keys\nSize: 2164 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/33922f4c/attachment.bin>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 455 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/33922f4c/attachment.sig>"
            },
            {
                "author": "Matt @ Envrin Group",
                "date": "2015-06-19T21:25:36",
                "message_text_only": "Hi Matt,\n\nI think your best bet is probably just push it out privately via blog \npost / Github, and see if it gains any traction with other developers.\n\nI'm a little uncertain as to the relevance though.  All those variables \n(purpose, network, asset_type, account, change, index) need to be stored \ninternally within the wallet database, as there's no way to retrieve the \npath used from just the address, correct?  In that case, what's the \nmeaning of that exact path structure when a) it can't be retrieved from \njust the address, and b) the values will be stored internally within the \nwallet when you lookup the address.\n\nMatt\n\n\n\nOn 06/20/2015 03:42 AM, Matt Smith wrote:\n> Hey guys,\n>\n> The crew at Gem is considering a new HD wallet path structure for our\n> wallets, which are coin-agnostic, that separates the coin_type field\n> into two fields as such:\n>\n> m / purpose' / network' / asset_type' / account' / change / index\n>\n> where network refers to the blockchain (0 - bitcoin, 1 - testnet3, 2 -\n> litecoin, etc) and the new asset_type refers to the kind of asset to be\n> held in accounts below that path (Open Assets, Omni, Counterparty).\n>\n> The intent is to allow us to validate the address format, select the\n> appropriate daemon to scan for tokenized assets, and choose multiple\n> blockchain data sources (that may not know anything about token systems\n> running on the blockchain they expose) relevant to an HDNode in the\n> wallet using only information in the HDNode's path -- without having to\n> maintain an explicit mapping of coin_type -> network.\n>\n> For example, we already have the issue of mapping network identifiers\n> because of the lack of standardization across cryptocurrency libraries\n> which ends up being ugly and obnoxious to maintain, i.e.\n>\n> netcode_map = {\n>    testnet: testnet3,\n>    bitcoin_testnet: testnet3,\n>    testnet3: testnet3,\n>    XTN: testnet3, ...\n> }\n> netcode_i_want = netcode_map[netcode_returned_by_libwhatever]\n>\n> We want to avoid maintaining a similar asset_type_to_blockchain mapping.\n> Additionally, it would be helpful for utxo selection to exclude utxos\n> tied to assets based on path.\n>\n> BIP43 seems to suggest that we request a BIP number and publish an\n> informational BIP specifying the new purpose. If that's not appropriate,\n> then maybe we just need to publish the information in a blog post to\n> allow any wallet developers who want to to implement\n> import_from_gem_structure.\n>\n> I was also wondering if anyone had previously suggested something\n> similar that I missed when cruising the mailing list archives on the\n> subject.\n>\n> Thanks,\n> --\n> Matt Smith | Gem\n> https://gem.co | GH: @thedoctor\n>\n>\n> ------------------------------------------------------------------------------\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/a83d828a/attachment.html>"
            },
            {
                "author": "Matt Smith",
                "date": "2015-06-19T23:31:51",
                "message_text_only": "I'm not sure I understand your question about the need to store paths in\nthe wallet database -- there's no way to infer the path of an address\ninside an HD wallet from the address alone (short of an exhaustive\nsearch), and HD wallets need to store either the paths, addresses, or\nboth that have been previously derived/used to monitor the blockchain\nusefully, but those facts aren't new or specific to this path format.\n\nThe motivation for this path structure over standard bip44 is that it\nseparates the concept of network (or which blockchain I'm using) and\ncoin_type (or what kind of thing I'm sending over that blockchain).\n\nThis is useful, for example, if I want to import a wallet into my\napplication and I know that an account was in use at\n\nm/##'/0'/99'/0'\n\nwhere 99 is the identifier for, say, counterparty - I only need to check\nthe addresses derived below that path for balances against\ncounterpartyd. It may be worth pointing out that I expect multisig HD\nwallet imports to require master keys and a list of account paths \u2013 not\na list of addresses, as it's very possible that a new address could be\nderived between the time when the wallet data was exported and when it\nwill be imported.\n\nThis use case might be very specific to our model, but the reason I\nfigured we should request a BIP # for this is that to start using it, we\nneed to pick a number for the purpose field and don't want to do it\narbitrarily (and risk having to change it later) or overload 44 (which\nwould be misleading).\n\nDid I either  a) answer  or  b) misunderstand  your questions?\n--\nMatt Smith | Gem\nhttps://gem.co | GH: @thedoctor\n\n\n\nOn 6/19/15 2:25 PM, Matt @ Envrin Group wrote:\n> \n> Hi Matt,\n> \n> I think your best bet is probably just push it out privately via blog\n> post / Github, and see if it gains any traction with other developers.\n> \n> I'm a little uncertain as to the relevance though.  All those variables\n> (purpose, network, asset_type, account, change, index) need to be stored\n> internally within the wallet database, as there's no way to retrieve the\n> path used from just the address, correct?  In that case, what's the\n> meaning of that exact path structure when a) it can't be retrieved from\n> just the address, and b) the values will be stored internally within the\n> wallet when you lookup the address.\n> \n> Matt\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 455 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/ef0aa3d0/attachment.sig>"
            },
            {
                "author": "Andreas Petersson",
                "date": "2015-06-20T00:57:41",
                "message_text_only": ">m/##'/0'/99'/0'\n>\n>where 99 is the identifier for, say, counterparty\n\n\nWhat is stopping you from using m/44'/9'/a'/c/i as descibed here:\nhttp://doc.satoshilabs.com/slips/slip-0044.html\n\nto avoid having an internal mapping from 9'-> 0' to find out what\nblockchain to query, this sounds like it should be trivial for any wallet."
            },
            {
                "author": "Matt Smith",
                "date": "2015-06-20T02:40:52",
                "message_text_only": "> to avoid having an internal mapping from 9'-> 0' to find out what\n> blockchain to query, this sounds like it should be trivial for any wallet.\n\nTrivial to implement, a headache to *maintain*\n\nBut if a new platform is released on an existing blockchain, my wallet\ndoesn't need to know about the new magic number it claims in order to\nhandle it correctly.\n\nSay I make a new token layer, BobCoin, which runs on bitcoin and say I\nuse an HD wallet and always generate new BobCoin token addresses as\nm/##'/0'/808'/*'/*/*. If I import that wallet into older HD wallet\nsoftware that doesn't know anything about BobCoin, it will still:\n\n- understand what blockchain to query for utxos on the addresses below\nthat path\n- be able to generate valid BobCoin addresses without any updates\n\nI think this is particularly valuable if you're developing against a\nplatform where updates can't be forced on clients.\n\nTo be clear: I am not suggesting this as a general-purpose successor to\nBIP44.\n\n\u2013\nMatt Smith | Gem\nhttps://gem.co | GH: @thedoctor\n\n\nOn 6/19/15 5:57 PM, Andreas Petersson wrote:\n>> m/##'/0'/99'/0'\n>>\n>> where 99 is the identifier for, say, counterparty\n> \n> \n> What is stopping you from using m/44'/9'/a'/c/i as descibed here:\n> http://doc.satoshilabs.com/slips/slip-0044.html\n> \n> to avoid having an internal mapping from 9'-> 0' to find out what\n> blockchain to query, this sounds like it should be trivial for any wallet.\n> \n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 455 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/f45c283e/attachment.sig>"
            },
            {
                "author": "Matt @ Envrin Group",
                "date": "2015-06-20T01:58:46",
                "message_text_only": "Say you generate a child key using the path m/6'/4'/7'/99'/0/196, which \nis what your proposed path structure would be, and it results in the \naddress 1DpY7PtPVURvjrGsdAjbZAZ7cL9GD8tc5w.\n\nWhen the wallet notices a transaction in the blockchain that has \n1DpY7PtPVURvjrGsdAjbZAZ7cL9GD8tc5w as an output, it's going to have to \nlookup the address within its database to get the values 6/4/7/99/0/196, \nas there's no way to retrieve them from just the address.  So \ntechnically, you might as well just use m/account'/change/index if using \nhardened child keys, or m/change/index if not, as recommended, because \nthe wallet will still function the exact same way.\n\nMatt\n\n\n\nOn 06/20/2015 06:31 AM, Matt Smith wrote:\n> I'm not sure I understand your question about the need to store paths in\n> the wallet database -- there's no way to infer the path of an address\n> inside an HD wallet from the address alone (short of an exhaustive\n> search), and HD wallets need to store either the paths, addresses, or\n> both that have been previously derived/used to monitor the blockchain\n> usefully, but those facts aren't new or specific to this path format.\n>\n> The motivation for this path structure over standard bip44 is that it\n> separates the concept of network (or which blockchain I'm using) and\n> coin_type (or what kind of thing I'm sending over that blockchain).\n>\n> This is useful, for example, if I want to import a wallet into my\n> application and I know that an account was in use at\n>\n> m/##'/0'/99'/0'\n>\n> where 99 is the identifier for, say, counterparty - I only need to check\n> the addresses derived below that path for balances against\n> counterpartyd. It may be worth pointing out that I expect multisig HD\n> wallet imports to require master keys and a list of account paths \u2013 not\n> a list of addresses, as it's very possible that a new address could be\n> derived between the time when the wallet data was exported and when it\n> will be imported.\n>\n> This use case might be very specific to our model, but the reason I\n> figured we should request a BIP # for this is that to start using it, we\n> need to pick a number for the purpose field and don't want to do it\n> arbitrarily (and risk having to change it later) or overload 44 (which\n> would be misleading).\n>\n> Did I either  a) answer  or  b) misunderstand  your questions?\n> --\n> Matt Smith | Gem\n> https://gem.co | GH: @thedoctor\n>\n>\n>\n> On 6/19/15 2:25 PM, Matt @ Envrin Group wrote:\n>> Hi Matt,\n>>\n>> I think your best bet is probably just push it out privately via blog\n>> post / Github, and see if it gains any traction with other developers.\n>>\n>> I'm a little uncertain as to the relevance though.  All those variables\n>> (purpose, network, asset_type, account, change, index) need to be stored\n>> internally within the wallet database, as there's no way to retrieve the\n>> path used from just the address, correct?  In that case, what's the\n>> meaning of that exact path structure when a) it can't be retrieved from\n>> just the address, and b) the values will be stored internally within the\n>> wallet when you lookup the address.\n>>\n>> Matt"
            },
            {
                "author": "Jonas Schnelli",
                "date": "2015-06-20T10:11:41",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n > m / purpose' / network' / asset_type' / account' / change / index\n> \n> ...\n> \n> I was also wondering if anyone had previously suggested something \n> similar that I missed when cruising the mailing list archives on\n> the subject.\n\n\nHi Matt\n\na)\nIn my opinion, HD chain standards like Bip43/44 are there to allow\nusers to use different wallets with the same seed/wordlist (switch\nover or use in parallel).\nIn practice, wallet re-importing / re-creating is not trivial and has\nrisks of missing out spent or spendable coins.\nTake the current landscape. Electrum doesn\u2019t follow the Bip39 standard\n[1]. Breadwallet does not support Bip44 [2].\nIf users start to think, as long as they keep the Bip39 wordlist save,\nnothing can happen, is a material fallacy (and i see a trend into this\ndirection).\nA hd seed will not recover your non-blockchain-metadata. HD seed\nrecovery is a disaster recovery method.\n\nBecause of that I am unsure if standards of hd chainstructurs does lead\nusers and developers into the right directions.\nIn my opinion, reimporting a hd seed is a experts feature that requires\nmanual configuration.\n\n\nb)\nCreating deep level chains like m/a/b/c/d/e/f/g/h requires more cpu\npower to derive private key with a given seed or wordlist.\nIf you are using hardware wallets like Trezor or Digitalbitbox, you\nprobably feel the required time when signing/deriving.\n\n[1] https://bitcointalk.org/index.php?topic=1082586.0\n[2] https://github.com/voisine/breadwallet/issues/131\n\n</jonas>\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAEBAgAGBQJVhTxdAAoJECnUvLZBb1Ps7HIP/00wqG9uEDGE77S6QsSmWWWm\nOHYSlWzSeFURnkWyH4B1pcyGL9JxkHJMqmiHr5aBGIt0WGM8S1xwFImg7aFeWe8B\ns5tjT80QwH6/RrGnrIFwdJp4QdAriVq7G0lfexika8O8LxW45LzP7BTQ1SoFVZ5o\nmQuEzLG3A+NaKREqUMXBiSWAAuM9m08GBcRGsqd9tpvUUxqiJFHAbKqn2yVtuR3h\nf+wJeQyjUf6ZqkIDor73lyjay6YpDyYveHaIxP9WfKJGvEVCVisuOXx0C3C7u5ps\nSF1p2xCQUEC1xRVHySBgr0VdTYQlMpSVg7XOWSPRPXjfyBBwGW9aLZyGuDDTe0ca\nWa+u3CNRg3wIwsp3gG15wWK/M2eFPMKNwlE0DqSP9Siin0QlLRcuRe39D5BSjcsQ\nxfQXNEf2gA0C7rMGA47K5fmxnB4qukkM8UqrOSqtczUO2AP1vdhhwJRi+/Cq9l1r\ni1isL4cncwtf3/z965eN9vvou+a1dgU9L2gONmHp5eHwOtPh83u8BXEUof+VMUrN\nB+vLHJMRRMucyASlehmzGe8EJiJ3Hlo4NjVpTNg/V8bnHY59lpm6GylvCa7YjR/d\nxWB6jmG/7nqyRrJ0byIdZRGLtr/LuleIoFCwPUAO1jR4x626h0iVo82wPBPQXAJ1\nIhkX/FW90s9i8vErMjwf\n=To1w\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Alternate HD path structure: BIP, blog, or wat?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matt Smith",
                "Jonas Schnelli",
                "Matt @ Envrin Group",
                "Andreas Petersson"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 15994
        }
    },
    {
        "title": "[Bitcoin-development] IMPORTANT - Bitcoin Dev List Move Tuesday, June 23rd 8pm UTC",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-20T07:48:16",
                "message_text_only": "This is an important notice to all members of the Bitcoin Dev List.\n\n\n*Tuesday, June 23rd 8pm UTC (1pm PDT) the following will happen.*\n\n   - The current list at bitcoin-development at lists.sourceforge.net will\n   reject all posts.\n   - The current archives at\n   http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/ will be\n   exported.\n   - The test archives at the new list will be wiped and replaced with an\n   import from the old list.\n   - The new list\n   https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev will be\n   open to posts after the archive import is complete.\n\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\nEveryone may to subscribe at the new list now.  Feel free to make test\nposts.   Anything posted prior to the switchover on Tuesday will be wiped\nfrom the archives.\n\n*DMARC Status*\nA current issue with this list is posts from domains that require DKIM\nsignature verification will end up in the spam folder at popular providers\nlike gmail.  Initially the new list will have that exact same problem as we\nwill continue to have the subject tag and footer.  Within a few weeks LF\nwill upgrade Mailman to do automatic Munge From\n<http://wiki.list.org/DEV/DMARC> which will solve this problem.\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150619/01b23a5a/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "IMPORTANT - Bitcoin Dev List Move Tuesday, June 23rd 8pm UTC",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1446
        }
    },
    {
        "title": "[Bitcoin-development] Hard fork via miner vote",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2015-06-20T17:13:06",
                "message_text_only": "Hello all,\n\nI've seen ideas around hard fork proposals that involve a block version\nvote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I\nbelieve this is a bad idea, independent of what the hard fork itself is.\n\nUltimately, the purpose of a hard fork is asking the whole community to\nchange their full nodes to new code. The purpose of the trigger mechanism\nis to establish when that has happened.\n\nUsing a 95% threshold, implies the fork can happen when at least 5% of\nminers have not upgraded, which implies some full nodes have not (as miners\nare nodes), and in addition, means the old chain can keep growing too,\nconfusing old non-miner nodes as well.\n\nIdeally, the fork should be scheduled when one is certain nodes will have\nupgraded, and the risk for a fork will be gone. If everyone has upgraded,\nno vote is necessary, and if nodes have not, it remains risky to fork them\noff.\n\nI understand that, in order to keep humans in the loop, you want an\nobservable trigger mechanism, and a hashrate vote is an easy way to do\nthis. But at least, use a minimum timestamp you believe to be reasonable\nfor upgrade, and a 100% threshold afterwards. Anything else guarantees that\nyour forking change happens *knowingly* before the risk is gone.\n\nYou may argue that miners would be asked to - and have it in their best\ninterest - to not actually make blocks that violate the changed rule before\nthey are reasonably sure that everyone has upgraded. That is possible, but\nit does not gain you anything over just using a 100% threshold, as how\nwould they be reasonably sure everyone has upgraded, while blocks creater\nby non-upgraded miners are still being created?\n\nTL;DR: use a timestamp switchover for a hard fork, or add a block voting\nthreshold as a means to keep humans in the loop, but if you do, use 100% as\nthreshold.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/97364dc3/attachment.html>"
            },
            {
                "author": "David Vorick",
                "date": "2015-06-20T17:26:29",
                "message_text_only": "I see it as unreasonable to expect all nodes to upgrade during a hardfork.\nIf you are intentionally waiting for that to happen, it's possible for an\nextreme minority of nodes to hold the rest of the network hostage by simply\nrefusing to upgrade. However you want nodes to be able to protest until it\nis clear that they have lost the battle without being at risk of getting\nhardforked out of the network unexpectedly.\n\nI think it makes sense to add a second fuse. After the 95% barrier has been\ncrossed, a 6 week timer starts that gives the remaining 5% time to upgrade.\nIf they still don't upgrade, they have intentionally forked themselves from\nthe network and it is not something that the remaining 95% need to be\nconcerned with.\n\nOn Sat, Jun 20, 2015 at 1:13 PM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> Hello all,\n>\n> I've seen ideas around hard fork proposals that involve a block version\n> vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I\n> believe this is a bad idea, independent of what the hard fork itself is.\n>\n> Ultimately, the purpose of a hard fork is asking the whole community to\n> change their full nodes to new code. The purpose of the trigger mechanism\n> is to establish when that has happened.\n>\n> Using a 95% threshold, implies the fork can happen when at least 5% of\n> miners have not upgraded, which implies some full nodes have not (as miners\n> are nodes), and in addition, means the old chain can keep growing too,\n> confusing old non-miner nodes as well.\n>\n> Ideally, the fork should be scheduled when one is certain nodes will have\n> upgraded, and the risk for a fork will be gone. If everyone has upgraded,\n> no vote is necessary, and if nodes have not, it remains risky to fork them\n> off.\n>\n> I understand that, in order to keep humans in the loop, you want an\n> observable trigger mechanism, and a hashrate vote is an easy way to do\n> this. But at least, use a minimum timestamp you believe to be reasonable\n> for upgrade, and a 100% threshold afterwards. Anything else guarantees that\n> your forking change happens *knowingly* before the risk is gone.\n>\n> You may argue that miners would be asked to - and have it in their best\n> interest - to not actually make blocks that violate the changed rule before\n> they are reasonably sure that everyone has upgraded. That is possible, but\n> it does not gain you anything over just using a 100% threshold, as how\n> would they be reasonably sure everyone has upgraded, while blocks creater\n> by non-upgraded miners are still being created?\n>\n> TL;DR: use a timestamp switchover for a hard fork, or add a block voting\n> threshold as a means to keep humans in the loop, but if you do, use 100% as\n> threshold.\n>\n> --\n> Pieter\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/fe7f5f4e/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-20T18:11:53",
                "message_text_only": "On Sat, Jun 20, 2015 at 7:26 PM, David Vorick <david.vorick at gmail.com>\nwrote:\n\n> I see it as unreasonable to expect all nodes to upgrade during a hardfork.\n> If you are intentionally waiting for that to happen, it's possible for an\n> extreme minority of nodes to hold the rest of the network hostage by simply\n> refusing to upgrade. However you want nodes to be able to protest until it\n> is clear that they have lost the battle without being at risk of getting\n> hardforked out of the network unexpectedly.\n>\n\nYou can't observe the majority of nodes, only miners, and weighed by\nhashrate. If you need a mechanism for protest, that should happen before\nthe hard fork change code is rolled out. I am assuming a completely\nuncontroversial change, in order to not confuse this discussion with the\ndebate about what hard forks should be done.\n\nSo I am not talking about protest, just about deploying a change. And yes,\nit is unreasonable to expect that every single node will upgrade. But there\nis a difference between ignoring old unmaintained nodes that do not\ninfluence anyone's behaviour, and ignoring the nodes that power miners\nproducing actual blocks. In addition, having no blocks on the old chain is\nsafer than producing a small number, as you want full nodes that have not\nnoticed the fork to fail rather than see a slow but otherwise functional\nchain.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/9b72f78e/attachment.html>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-20T18:17:18",
                "message_text_only": "On Saturday, 20 June 2015, at 8:11 pm, Pieter Wuille wrote:\n> you want full nodes that have not noticed the fork to fail rather than see a slow but otherwise functional chain.\n\nIsn't that what the Alert mechanism is for? If these nodes continue running despite an alert telling them they're outdated, then it must be intentional."
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-20T17:46:52",
                "message_text_only": "I agree giving notice that the change is going to happen is critical for a\nhard fork.  If miners vote in favor, they need to give people time to\nupgrade (or to decide to reject the fork).\n\nThe BIP 100 proposal is that no change will happen until a timestamp is\nreached.  It isn't clear exactly how it would work.\n\nTestnet: Sep 1st 2015\nMainnet: Jan 11th 2016\n\nIt suggests 90% of 12000 blocks (~83 days).\n\nThis means that if 10800 of the last 12000 blocks are the updated version,\nthen the change is considered locked in.\n\nI think having an earlier \"fail\" threshold would be a good idea too.  This\nguarantees notice.\n\nAssuming 3 is <old rule> and 4 is <new rule>\n\nIf the median of 11 timestamp is after 1st Sep 2015 and less than 10800 of\nthe last 12000 blocks are version 4+, then reject version 4 blocks\nIf the median of 11 timestamp is after 1st Nov 2015 and at least 10800 of\nthe last 12000 blocks are version 4+, then reject version 3 blocks\n(lock-in)\nIf the median of 11 timestamp is after 1st Jan 2016 and at least 10800 of\nthe last 12000 blocks are version 4+, the allow <new rule>\n\nThis means that if the 90% threshold is lost at any time between 1st Sep\nand 1st Nov, then the fork is rejected.  Otherwise, after the 1st Nov, it\nis locked in, but the new rules don't activate until 1st Jan.\n\nFor block size, miners could still soft fork back to 1MB after 1st Nov, it\nthere is a user/merchant revolt (maybe that would be version 5 blocks).\n\n\nOn Sat, Jun 20, 2015 at 6:13 PM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> Hello all,\n>\n> I've seen ideas around hard fork proposals that involve a block version\n> vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I\n> believe this is a bad idea, independent of what the hard fork itself is.\n>\n> Ultimately, the purpose of a hard fork is asking the whole community to\n> change their full nodes to new code. The purpose of the trigger mechanism\n> is to establish when that has happened.\n>\n> Using a 95% threshold, implies the fork can happen when at least 5% of\n> miners have not upgraded, which implies some full nodes have not (as miners\n> are nodes), and in addition, means the old chain can keep growing too,\n> confusing old non-miner nodes as well.\n>\n> Ideally, the fork should be scheduled when one is certain nodes will have\n> upgraded, and the risk for a fork will be gone. If everyone has upgraded,\n> no vote is necessary, and if nodes have not, it remains risky to fork them\n> off.\n>\n> I understand that, in order to keep humans in the loop, you want an\n> observable trigger mechanism, and a hashrate vote is an easy way to do\n> this. But at least, use a minimum timestamp you believe to be reasonable\n> for upgrade, and a 100% threshold afterwards. Anything else guarantees that\n> your forking change happens *knowingly* before the risk is gone.\n>\n> You may argue that miners would be asked to - and have it in their best\n> interest - to not actually make blocks that violate the changed rule before\n> they are reasonably sure that everyone has upgraded. That is possible, but\n> it does not gain you anything over just using a 100% threshold, as how\n> would they be reasonably sure everyone has upgraded, while blocks creater\n> by non-upgraded miners are still being created?\n>\n> TL;DR: use a timestamp switchover for a hard fork, or add a block voting\n> threshold as a means to keep humans in the loop, but if you do, use 100% as\n> threshold.\n>\n> --\n> Pieter\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/564e4909/attachment.html>"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-20T18:42:51",
                "message_text_only": "As I've observed before, Gavin originally advocated either a 99% or\n100% buy in by miners for a hard fork to trigger.\n\nhttps://gist.github.com/gavinandresen/2355445\n\nI don't understand why people (Gavin included) now seem to favour a\nmuch more modest supermajority except perhaps that they believe that\nthat level of consensus is unachievable.\n\nFWIW I'm in favour of a block size increase.  I just wish that half as\nmuch energy had gone into discussing whether we want a 100%\nsupermajority or a 99% supermajority or an 80% supermajority, as has\ngone into discussing whether we want 1MB blocks or 8MB blocks or 20MB\nblocks.  (So thank you, Pieter, for raising this.)\n\nroy\n\nOn Sat, Jun 20, 2015 at 07:13:06PM +0200, Pieter Wuille wrote:\n> Hello all,\n> \n> I've seen ideas around hard fork proposals that involve a block version\n> vote (a la BIP34, BIP66, or my more recent versionbits BIP draft). I\n> believe this is a bad idea, independent of what the hard fork itself is.\n> \n> Ultimately, the purpose of a hard fork is asking the whole community to\n> change their full nodes to new code. The purpose of the trigger mechanism\n> is to establish when that has happened.\n> \n> Using a 95% threshold, implies the fork can happen when at least 5% of\n> miners have not upgraded, which implies some full nodes have not (as miners\n> are nodes), and in addition, means the old chain can keep growing too,\n> confusing old non-miner nodes as well.\n> \n> Ideally, the fork should be scheduled when one is certain nodes will have\n> upgraded, and the risk for a fork will be gone. If everyone has upgraded,\n> no vote is necessary, and if nodes have not, it remains risky to fork them\n> off.\n> \n> I understand that, in order to keep humans in the loop, you want an\n> observable trigger mechanism, and a hashrate vote is an easy way to do\n> this. But at least, use a minimum timestamp you believe to be reasonable\n> for upgrade, and a 100% threshold afterwards. Anything else guarantees that\n> your forking change happens *knowingly* before the risk is gone.\n> \n> You may argue that miners would be asked to - and have it in their best\n> interest - to not actually make blocks that violate the changed rule before\n> they are reasonably sure that everyone has upgraded. That is possible, but\n> it does not gain you anything over just using a 100% threshold, as how\n> would they be reasonably sure everyone has upgraded, while blocks creater\n> by non-upgraded miners are still being created?\n> \n> TL;DR: use a timestamp switchover for a hard fork, or add a block voting\n> threshold as a means to keep humans in the loop, but if you do, use 100% as\n> threshold.\n> \n> -- \n> Pieter\n\n> ------------------------------------------------------------------------------\n\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-20T20:07:53",
                "message_text_only": "> I just wish that half as much energy had gone into discussing\n> whether we want a 100% supermajority or a 99% supermajority or an\n> 80% supermajority, as has gone into discussing whether we want 1MB\n> blocks or 8MB blocks or 20MB blocks.\n\nAnd I understand that Gavin is now proposing that a 75% supermajority\nshould be enough.  This constantly reducing threshold worries me\ngreatly.\n\nThere is a risk that we get a situation where a stable amount of\nhashing power somewhat over 75% (say 80%) accepts the fork - and\ntherefore triggers it - but both a significant minority (say 20%) of\nhashrate rejects it *and* the economic majority rejects it.\n\nI'm not saying this is a likely outcome - indeed I hope it's not - but\nit is a _possible_ outcome.  Ok, the chain that the economic marjority\nis using will have a bit of a temporary crisis due to 50 minute block\ntimes, but it will recover in a few weeks as difficulty adjusts.  And,\nin the worst case, you end up with two competing semi-stable\necosystems both claiming to be 'the real Bitcoin'.\n\nMy fear is that in that situation it could take an extended period -\nperhaps many months - for one fork to clearly win and the other fork\nto lose support (or at least lose sufficient support to be relegated\nto altcoin status).  I think such an extended period of uncertainty\nwould be the ultimate worst case scenario for Bitcoin.  It _probably_\nwouldn't be fatal to Bitcoin, but it would certainly be far worse for\nBitcoin than getting the blocksize wrong even by an order of magnitude\n(in either direction).  Therefore if we can design the hardfork\nmechanism to make such an outcome impossible, I believe we really need\nto.\n\nroy"
            }
        ],
        "thread_summary": {
            "title": "Hard fork via miner vote",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "David Vorick",
                "Roy Badami",
                "Matt Whitlock",
                "Tier Nolan",
                "Pieter Wuille"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 15640
        }
    },
    {
        "title": "[Bitcoin-development] [BIP draft] Motivation and deployment of consensus rules changes ([soft/hard]forks)",
        "thread_messages": [
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-20T21:22:41",
                "message_text_only": "This is an attempt to unify views on why and how hardforks can be\ndeployed. I would like to turn this into an informational BIP later\nafter gathering some feedback.\n\nPlease, do not discuss block size issues here: there's plenty of\nthreads to do so. The scope of this one is only hardforks and\nsoftforks in a more abstract way. Sometimes block size changes are\nused as examples because no other example came to mind\n(non-blocksize-related examples for the same cases [or others] are\na user should be just ignored. But what if the welcomed), and\nif we go into too much detail they stop being useful as examples. So\nplease, try to avoid going into too much detail about the concrete\nexamples when possible.\n\nhttps://github.com/jtimon/bips/blob/bip-forks/bip-forks.org\n\nPlease, feel free to make suggestions or bike-shed some of the terms."
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-20T22:08:19",
                "message_text_only": "The off by 1 bug could be fixed by a soft fork.  Since the point is to show\nhow a non-controversial hard fork works, it doesn't matter much.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150620/5151bb9a/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-21T10:31:34",
                "message_text_only": "On Sun, Jun 21, 2015 at 12:08 AM, Tier Nolan <tier.nolan at gmail.com> wrote:\n> The off by 1 bug could be fixed by a soft fork.  Since the point is to show\n> how a non-controversial hard fork works, it doesn't matter much.\n\nYou mean the timewarp fix can be coded as a softfork instead of a\nhardfork? How so?\nIf that's the case, do you have a better candidate?"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-21T10:54:07",
                "message_text_only": "On Sun, Jun 21, 2015 at 11:31 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n\n> You mean the timewarp fix can be coded as a softfork instead of a\n> hardfork? How so?\n>\n\nThe easiest would be a rule requiring that all blocks are within 1 day of\nthe median of the previous 11 blocks.  At the moment, you need to be\ngreater than that value.  This would add a condition at the other end.\n\nIt wouldn't be a total fix, but it would protect against the exploit.\n\nA stricter soft fork would be that the two blocks in question have to have\nthe same timestamp.  This would force the off by 1 and the correct value to\ngive the same result.\n\nIf that's the case, do you have a better candidate?\n>\n\nI think it is fine, since fixing it \"right\" does require a hard fork,\nespecially if it is only to show a non controversial hard fork.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/a9aa4739/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Motivation and deployment of consensus rules changes (forks)",
            "categories": [
                "Bitcoin-development",
                "BIP draft",
                "soft/hard"
            ],
            "authors": [
                "Tier Nolan",
                "Jorge Tim\u00f3n"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 2515
        }
    },
    {
        "title": "[Bitcoin-development] Membership disabled due to bounces",
        "thread_messages": [
            {
                "author": "Braun Brelin",
                "date": "2015-06-21T07:06:45",
                "message_text_only": "Hi all,\n\nI got a message saying that my membership in the list was disabled due to\nexcessive bounces.  As far as I can remember,  I've only ever sent out one\ne-mail on the list (not including this one) and that was a few weeks ago.\nHas anyone else seen this problem?  Could this be related in some way to\nthe issues regarding source forge and the mail list hosting issue?\n\nBraun Brelin\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/b317aa7c/attachment.html>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2015-06-21T11:00:36",
                "message_text_only": "I too got this message and had to re-enable my membership on the list. There's no reason why messages sent by the list to my address would be bouncing.\n\n\nOn Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:\n> Hi all,\n> \n> I got a message saying that my membership in the list was disabled due to\n> excessive bounces.  As far as I can remember,  I've only ever sent out one\n> e-mail on the list (not including this one) and that was a few weeks ago.\n> Has anyone else seen this problem?  Could this be related in some way to\n> the issues regarding source forge and the mail list hosting issue?\n> \n> Braun Brelin"
            },
            {
                "author": "Laszlo Hanyecz",
                "date": "2015-06-21T15:14:45",
                "message_text_only": "I got ~500 uncaught bounce notifications, so it seems like something broke.\n\nOn Jun 21, 2015, at 11:00 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n\n> I too got this message and had to re-enable my membership on the list. There's no reason why messages sent by the list to my address would be bouncing.\n> \n> \n> On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:\n>> Hi all,\n>> \n>> I got a message saying that my membership in the list was disabled due to\n>> excessive bounces.  As far as I can remember,  I've only ever sent out one\n>> e-mail on the list (not including this one) and that was a few weeks ago.\n>> Has anyone else seen this problem?  Could this be related in some way to\n>> the issues regarding source forge and the mail list hosting issue?\n>> \n>> Braun Brelin\n> \n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T19:17:09",
                "message_text_only": "Was literally *everyone* unsubscribed?  Sigh.\n\nAs much as this is good reason to move the list ASAP, we need both the LF\nsysadmin and an existing SF list admin to be online simultaneously to\neffect an orderly transition.  We have a scheduled time for this on Tuesday\nat 8pm UTC.  I can ask if they are both available now...\n\nPlease talk in #bitcoin-dev if you have any opinion on moving the list\nsooner.\n\nWarren\n\n\n\nOn Sun, Jun 21, 2015 at 5:14 AM, Laszlo Hanyecz <laszlo at heliacal.net> wrote:\n\n> I got ~500 uncaught bounce notifications, so it seems like something broke.\n>\n> On Jun 21, 2015, at 11:00 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n>\n> > I too got this message and had to re-enable my membership on the list.\n> There's no reason why messages sent by the list to my address would be\n> bouncing.\n> >\n> >\n> > On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:\n> >> Hi all,\n> >>\n> >> I got a message saying that my membership in the list was disabled due\n> to\n> >> excessive bounces.  As far as I can remember,  I've only ever sent out\n> one\n> >> e-mail on the list (not including this one) and that was a few weeks\n> ago.\n> >> Has anyone else seen this problem?  Could this be related in some way to\n> >> the issues regarding source forge and the mail list hosting issue?\n> >>\n> >> Braun Brelin\n> >\n> >\n> ------------------------------------------------------------------------------\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/bd54b898/attachment.html>"
            },
            {
                "author": "Trevin Hofmann",
                "date": "2015-06-21T19:17:37",
                "message_text_only": "I also received this message and re-enabled membership.\nOn Jun 21, 2015 4:06 AM, \"Matt Whitlock\" <bip at mattwhitlock.name> wrote:\n\n> I too got this message and had to re-enable my membership on the list.\n> There's no reason why messages sent by the list to my address would be\n> bouncing.\n>\n>\n> On Sunday, 21 June 2015, at 9:06 am, Braun Brelin wrote:\n> > Hi all,\n> >\n> > I got a message saying that my membership in the list was disabled due to\n> > excessive bounces.  As far as I can remember,  I've only ever sent out\n> one\n> > e-mail on the list (not including this one) and that was a few weeks ago.\n> > Has anyone else seen this problem?  Could this be related in some way to\n> > the issues regarding source forge and the mail list hosting issue?\n> >\n> > Braun Brelin\n>\n>\n> ------------------------------------------------------------------------------\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/6ef7668b/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T19:07:59",
                "message_text_only": "I set that password back in 2013 ... shortly after a fun debate that was\nlargely responsible for my decision to fix up Litecoin.\n\nThanks Gavin!\n\nOn Sun, Jun 21, 2015 at 2:59 AM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> I just got this mail ... unclear how mail with my gmail account would be\n> causing bounces with this list.\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0268ae64/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Membership disabled due to bounces",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Laszlo Hanyecz",
                "Warren Togami Jr.",
                "Trevin Hofmann",
                "Braun Brelin",
                "Matt Whitlock"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 6105
        }
    },
    {
        "title": "[Bitcoin-development] Question regarding transactions with NLOCKTIME > 0",
        "thread_messages": [
            {
                "author": "Braun Brelin",
                "date": "2015-06-21T07:10:20",
                "message_text_only": "Hi all,\n\nWhen a transaction with N_LOCKTIME>0 is created, does that transaction get\nstored in a block on the blockchain or is it stored in the mempool until\nthe actual time (or block number) exceeds the current value?  If it is\nstored on the blockchain, how does that affect the concept of pruning that\nis supposed to be going in to version 0.11?  I.e. if I create a transaction\nthat doesn't take effect for 10 years, and that transaction is stored in a\nblock, does that block stay on the active list for that period of time?\n\nThanks,\n\nBraun Brelin\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/e85f1939/attachment.html>"
            },
            {
                "author": "s7r",
                "date": "2015-06-21T08:45:30",
                "message_text_only": "Hi\n\nI don't think that a transaction with nLockTime>0 will be accepted by\nnodes / relayed in the Bitcoin network, until its time expires (e.g.\nnLockTime==now). This means it obviously cannot be stored in a block,\nbefore its locktime expires. nLockTime is designed in a way that you,\nneed to keep it offline (not broadcast it to the network because it\nwon't be accepted or relayed by nodes) until the locktime expires, then\nyou can broadcast it and it will be mined and included in a block, like\na normal tx.\n\nThis is exactly why Peter Todd and others are working on\nCHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an\nenhancement to basic nLockTime which tends to offer to users the\nguarantee that if you have a transaction with nLockTime, the signer\nholding the private keys used to sign it cannot sign another one, with\nnLockTime 0 and broadcast it before the locktime for your tx expires.\n\nCheers!\n\nOn 6/21/2015 10:10 AM, Braun Brelin wrote:\n> Hi all, \n> \n> When a transaction with N_LOCKTIME>0 is created, does that transaction\n> get stored in a block on the blockchain or is it stored in the mempool\n> until the actual time (or block number) exceeds the current value?  If\n> it is stored on the blockchain, how does that affect the concept of\n> pruning that is supposed to be going in to version 0.11?  I.e. if I\n> create a transaction that doesn't take effect for 10 years, and that\n> transaction is stored in a block, does that block stay on the active\n> list for that period of time?\n> \n> Thanks,\n> \n> Braun Brelin\n> \n> \n> \n> ------------------------------------------------------------------------------\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Braun Brelin",
                "date": "2015-06-21T12:11:36",
                "message_text_only": "So, basically it sounds as though the wallet generating the transaction is\nwhat is responsible for holding on to the transaction and then\nonly releasing it to the network when the NLOCKTIME value is less than or\nequal to the current time.  Does that sound right?\n\nBraun\n\n\nOn Sun, Jun 21, 2015 at 10:45 AM, s7r <s7r at sky-ip.org> wrote:\n\n> Hi\n>\n> I don't think that a transaction with nLockTime>0 will be accepted by\n> nodes / relayed in the Bitcoin network, until its time expires (e.g.\n> nLockTime==now). This means it obviously cannot be stored in a block,\n> before its locktime expires. nLockTime is designed in a way that you,\n> need to keep it offline (not broadcast it to the network because it\n> won't be accepted or relayed by nodes) until the locktime expires, then\n> you can broadcast it and it will be mined and included in a block, like\n> a normal tx.\n>\n> This is exactly why Peter Todd and others are working on\n> CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an\n> enhancement to basic nLockTime which tends to offer to users the\n> guarantee that if you have a transaction with nLockTime, the signer\n> holding the private keys used to sign it cannot sign another one, with\n> nLockTime 0 and broadcast it before the locktime for your tx expires.\n>\n> Cheers!\n>\n> On 6/21/2015 10:10 AM, Braun Brelin wrote:\n> > Hi all,\n> >\n> > When a transaction with N_LOCKTIME>0 is created, does that transaction\n> > get stored in a block on the blockchain or is it stored in the mempool\n> > until the actual time (or block number) exceeds the current value?  If\n> > it is stored on the blockchain, how does that affect the concept of\n> > pruning that is supposed to be going in to version 0.11?  I.e. if I\n> > create a transaction that doesn't take effect for 10 years, and that\n> > transaction is stored in a block, does that block stay on the active\n> > list for that period of time?\n> >\n> > Thanks,\n> >\n> > Braun Brelin\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> >\n> >\n> >\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/62b1a575/attachment.html>"
            },
            {
                "author": "s7r",
                "date": "2015-06-21T12:32:29",
                "message_text_only": "Hi,\n\nWell, depends on your model and what you want to achieve. That would\ndepend on each wallet, I couldn't confirm nor deny that this is or isn't\ntrue. You have to check with your wallet how it handles transactions\nwith nLockTime. Maybe you are the one who generates the nLockTime\ntransaction,  but that needs to be broadcasted by the payee (your\nrecipient) when the locktime expires?\n\nOne way I would use nLockTime is to have the tx generated, and keep it\nsomewhere not related to my wallet(s) until the nLockTime expires, then\nI can broadcast it to the network by /sendrawtransaction and have it\nmined and included into a block.\n\n\nOn 6/21/2015 3:11 PM, Braun Brelin wrote:\n> So, basically it sounds as though the wallet generating the transaction\n> is what is responsible for holding on to the transaction and then\n> only releasing it to the network when the NLOCKTIME value is less than\n> or equal to the current time.  Does that sound right?  \n> \n> Braun\n> \n> \n> On Sun, Jun 21, 2015 at 10:45 AM, s7r <s7r at sky-ip.org\n> <mailto:s7r at sky-ip.org>> wrote:\n> \n>     Hi\n> \n>     I don't think that a transaction with nLockTime>0 will be accepted by\n>     nodes / relayed in the Bitcoin network, until its time expires (e.g.\n>     nLockTime==now). This means it obviously cannot be stored in a block,\n>     before its locktime expires. nLockTime is designed in a way that you,\n>     need to keep it offline (not broadcast it to the network because it\n>     won't be accepted or relayed by nodes) until the locktime expires, then\n>     you can broadcast it and it will be mined and included in a block, like\n>     a normal tx.\n> \n>     This is exactly why Peter Todd and others are working on\n>     CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an\n>     enhancement to basic nLockTime which tends to offer to users the\n>     guarantee that if you have a transaction with nLockTime, the signer\n>     holding the private keys used to sign it cannot sign another one, with\n>     nLockTime 0 and broadcast it before the locktime for your tx expires.\n> \n>     Cheers!\n> \n>     On 6/21/2015 10:10 AM, Braun Brelin wrote:\n>     > Hi all,\n>     >\n>     > When a transaction with N_LOCKTIME>0 is created, does that transaction\n>     > get stored in a block on the blockchain or is it stored in the mempool\n>     > until the actual time (or block number) exceeds the current value?  If\n>     > it is stored on the blockchain, how does that affect the concept of\n>     > pruning that is supposed to be going in to version 0.11?  I.e. if I\n>     > create a transaction that doesn't take effect for 10 years, and that\n>     > transaction is stored in a block, does that block stay on the active\n>     > list for that period of time?\n>     >\n>     > Thanks,\n>     >\n>     > Braun Brelin\n>     >\n>     >\n>     >\n>     >\n>     ------------------------------------------------------------------------------\n>     >\n>     >\n>     >\n>     > _______________________________________________\n>     > Bitcoin-development mailing list\n>     > Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>     >\n> \n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-21T16:54:08",
                "message_text_only": "Yes, that is correct.  The network will not relay until locktime reaches\n\"maturity\", i.e. it can be confirmed into a block.\n\nThe wallet holds onto the transaction -- or simply does not generate --\nuntil it can be confirmed.\n\nOn Sun, Jun 21, 2015 at 5:11 AM, Braun Brelin <bbrelin at gmail.com> wrote:\n\n> So, basically it sounds as though the wallet generating the transaction is\n> what is responsible for holding on to the transaction and then\n> only releasing it to the network when the NLOCKTIME value is less than or\n> equal to the current time.  Does that sound right?\n>\n> Braun\n>\n>\n> On Sun, Jun 21, 2015 at 10:45 AM, s7r <s7r at sky-ip.org> wrote:\n>\n>> Hi\n>>\n>> I don't think that a transaction with nLockTime>0 will be accepted by\n>> nodes / relayed in the Bitcoin network, until its time expires (e.g.\n>> nLockTime==now). This means it obviously cannot be stored in a block,\n>> before its locktime expires. nLockTime is designed in a way that you,\n>> need to keep it offline (not broadcast it to the network because it\n>> won't be accepted or relayed by nodes) until the locktime expires, then\n>> you can broadcast it and it will be mined and included in a block, like\n>> a normal tx.\n>>\n>> This is exactly why Peter Todd and others are working on\n>> CHECKLOCKTIMEVERIFY and RELATIVE CHECKLOCKTIMEVERIFY - this is an\n>> enhancement to basic nLockTime which tends to offer to users the\n>> guarantee that if you have a transaction with nLockTime, the signer\n>> holding the private keys used to sign it cannot sign another one, with\n>> nLockTime 0 and broadcast it before the locktime for your tx expires.\n>>\n>> Cheers!\n>>\n>> On 6/21/2015 10:10 AM, Braun Brelin wrote:\n>> > Hi all,\n>> >\n>> > When a transaction with N_LOCKTIME>0 is created, does that transaction\n>> > get stored in a block on the blockchain or is it stored in the mempool\n>> > until the actual time (or block number) exceeds the current value?  If\n>> > it is stored on the blockchain, how does that affect the concept of\n>> > pruning that is supposed to be going in to version 0.11?  I.e. if I\n>> > create a transaction that doesn't take effect for 10 years, and that\n>> > transaction is stored in a block, does that block stay on the active\n>> > list for that period of time?\n>> >\n>> > Thanks,\n>> >\n>> > Braun Brelin\n>> >\n>> >\n>> >\n>> >\n>> ------------------------------------------------------------------------------\n>> >\n>> >\n>> >\n>> > _______________________________________________\n>> > Bitcoin-development mailing list\n>> > Bitcoin-development at lists.sourceforge.net\n>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> >\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/f0c06aec/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Question regarding transactions with NLOCKTIME > 0",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Braun Brelin",
                "s7r",
                "Jeff Garzik"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 11442
        }
    },
    {
        "title": "[Bitcoin-development] Fwd: Re: [RFC] Canonical input and output ordering in transactions",
        "thread_messages": [
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-21T07:27:33",
                "message_text_only": "---------- Forwarded message ----------\nFrom: \"Jorge Tim\u00f3n\" <jtimon at jtimon.cc>\nDate: Jun 17, 2015 6:59 PM\nSubject: Re: [Bitcoin-development] [RFC] Canonical input and output\nordering in transactions\nTo: \"Rusty Russell\" <rusty at rustcorp.com.au>\nCc:\n\nOn Tue, Jun 16, 2015 at 10:06 AM, Rusty Russell <rusty at rustcorp.com.au>\nwrote:\n> Jorge Tim\u00f3n <jtimon at jtimon.cc> writes:\n>> On Jun 15, 2015 11:43 PM, \"Rusty Russell\" <rusty at rustcorp.com.au> wrote:\n>>\n>>> Though Peter Todd's more general best-effort language might make more\n>>> sense.  It's not like you can hide an OP_RETURN transaction to make it\n>>> look like something else, so that transaction not going to be\n>>> distinguished by non-canonical ordering.\n>>\n>> What about commitments that don't use op_return (ie pay2contract\n>> commitments)?\n>\n> I have no idea what they are? :)\n\nHere's a short explanation and the code:\n\nhttps://github.com/Blockstream/contracthashtool\n\nHere's a longer explanation with a concrete use case (the contract is\nthe invoice):\n\nhttps://www.youtube.com/watch?v=qwyALGlG33Q\n\n> Yes, my plan B would be an informational bip with simple code,\n> suggesting a way to permute a transaction based on some secret.  No\n> point everyone reinventing the wheel, badly.\n\nGreat. Well, then all I'm saying is that I like this as plan A.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/d20ce7e1/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Fwd: Re: Canonical input and output ordering in transactions",
            "categories": [
                "Bitcoin-development",
                "RFC"
            ],
            "authors": [
                "Jorge Tim\u00f3n"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1498
        }
    },
    {
        "title": "[Bitcoin-development] confirm 1e595b258d48a8badd07523cbd8a8d74c150803c",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T12:59:05",
                "message_text_only": "I just got this mail ... unclear how mail with my gmail account would be\ncausing bounces with this list.\n\nOn Sat, Jun 20, 2015 at 8:56 PM, <\nbitcoin-development-request at lists.sourceforge.net> wrote:\n\n> Your membership in the mailing list Bitcoin-development has been\n> disabled due to excessive bounces The last bounce received from you\n> was dated 21-Jun-2015.  You will not get any more messages from this\n> list until you re-enable your membership.  You will receive 3 more\n> reminders like this before your membership in the list is deleted.\n>\n> To re-enable your membership, you can simply respond to this message\n> (leaving the Subject: line intact), or visit the confirmation page at\n>\n>\n> https://lists.sourceforge.net/lists/confirm/bitcoin-development/1e595b258d48a8badd07523cbd8a8d74c150803c\n>\n>\n> You can also visit your membership page at\n>\n>\n> https://lists.sourceforge.net/lists/options/bitcoin-development/wtogami%40gmail.com\n>\n>\n> On your membership page, you can change various delivery options such\n> as your email address and whether you get digests or not.  As a\n> reminder, your membership password is\n>\n>      GavinIsGreat!\n>\n> If you have any questions or problems, you can contact the list owner\n> at\n>\n>     bitcoin-development-owner at lists.sourceforge.net\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/2e4d70d2/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "confirm 1e595b258d48a8badd07523cbd8a8d74c150803c",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1471
        }
    },
    {
        "title": "[Bitcoin-development] Emergency List Move: Sunday, June 21st, 2015 at 9pm UTC",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T20:08:32",
                "message_text_only": "Given the Sourceforge list server exploded and unsubscribed the majority of\nthe old list, we decided to move forward with the planned list move in\nroughly 50 minutes from now.  9pm UTC or 2pm PDT this list will be\npermanently shut down with auto-reject on all posts.\n\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\nPlease subscribe to the new list.  It will be opened for posts shortly\nafter 9pm UTC after the final archive import.\n\nhttps://en.wikipedia.org/wiki/Greylisting\nDo not panic if your post does not immediately reach the new list.  Your\nfirst post to the new list may be delayed by 5+ minutes due to greylisting.\n\nPlease chat in Freenode #bitcoin-dev if you have any questions or concerns.\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0d3528dc/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Emergency List Move: Sunday, June 21st, 2015 at 9pm UTC",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 914
        }
    },
    {
        "title": "[bitcoin-dev] Welcome to the new Bitcoin Dev List",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T21:29:13",
                "message_text_only": "Hi folks,\n\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\nThe move is now complete.  The previous archive has been fully imported and\nnew posts here will now be saved.\n\n*Greylisting Notice*\nYour first post to this list may be delayed by 5+ minutes due to Greylisting\n<https://en.wikipedia.org/wiki/Greylisting>. Subsequent posts should go\nthrough without delay. Contact Freenode #bitcoin-dev if you have any\nquestions or concerns.\n\n*TODO*\n\n   - LF will be upgrading Mailman soon to better handle posts from DKIM\n   enforced domains.\n   - There will be a few more config tweaks like auto-rejecting\n   non-subscribed posts.  Nobody has time to moderate this list, and mail\n   silently disappearing into the moderation hold blackhole is worse than an\n   instant reject message telling people to subscribe.   Unfortunately, it is\n   too dangerous to auto-reject spam ... those messages need to go into a\n   blackhole to prevent bounce abuse.\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/719ef682/attachment.html>"
            },
            {
                "author": "Btc Drak",
                "date": "2015-06-21T21:31:57",
                "message_text_only": "Thanks for all your hard work setting this up, and to everyone else\ninvolved.\n\nDrak\n\nOn Sun, Jun 21, 2015 at 10:29 PM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> Hi folks,\n>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> The move is now complete.  The previous archive has been fully imported\n> and new posts here will now be saved.\n>\n> *Greylisting Notice*\n> Your first post to this list may be delayed by 5+ minutes due to\n> Greylisting <https://en.wikipedia.org/wiki/Greylisting>. Subsequent posts\n> should go through without delay. Contact Freenode #bitcoin-dev if you have\n> any questions or concerns.\n>\n> *TODO*\n>\n>    - LF will be upgrading Mailman soon to better handle posts from DKIM\n>    enforced domains.\n>    - There will be a few more config tweaks like auto-rejecting\n>    non-subscribed posts.  Nobody has time to moderate this list, and mail\n>    silently disappearing into the moderation hold blackhole is worse than an\n>    instant reject message telling people to subscribe.   Unfortunately, it is\n>    too dangerous to auto-reject spam ... those messages need to go into a\n>    blackhole to prevent bounce abuse.\n>\n> Warren Togami\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0a8bbc88/attachment.html>"
            },
            {
                "author": "s7r",
                "date": "2015-06-21T21:35:30",
                "message_text_only": "ACK - all seams fine here.\n\n\nDo we have all the archives imported? I run several full nodes and\nmirrors for open source projects, if you think it's useful, I can\nprovide a mirror for the mail list archives.\n\nOn 6/22/2015 12:29 AM, Warren Togami Jr. wrote:\n> Hi folks,\n> \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> The move is now complete.  The previous archive has been fully imported\n> and new posts here will now be saved.\n> \n> *Greylisting Notice* \n> Your first post to this list may be delayed by 5+ minutes due\n> to Greylisting <https://en.wikipedia.org/wiki/Greylisting>. Subsequent\n> posts should go through without delay. Contact Freenode #bitcoin-dev if\n> you have any questions or concerns.\n> \n> *TODO*\n> \n>   * LF will be upgrading Mailman soon to better handle posts from DKIM\n>     enforced domains.\n>   * There will be a few more config tweaks like auto-rejecting\n>     non-subscribed posts.  Nobody has time to moderate this list, and\n>     mail silently disappearing into the moderation hold blackhole is\n>     worse than an instant reject message telling people to subscribe.  \n>     Unfortunately, it is too dangerous to auto-reject spam ... those\n>     messages need to go into a blackhole to prevent bounce abuse.\n> \n> Warren Togami \n> \n> \n> \n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Jonas Schnelli",
                "date": "2015-06-22T06:40:15",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev The\n> move is now complete.  The previous archive has been fully\n> imported and new posts here will now be saved.\n\nThanks for the work!\n\nWhat about updating bitcoin.org (https://bitcoin.org/en/development)?\nI guess people start looking there...\n\nSame for this...\nhttps://bitcointalk.org/index.php?topic=15527.0\n\nBip0001 needs also an update...\nhttps://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki\n\n</jonas>\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAEBAgAGBQJVh63PAAoJECnUvLZBb1PsppEQAJTanEPNxRGZk88rlQP2OpYy\n1Giw5LwBHLQ/ybaiUxCzEHJqztvK+kHblXWsh/W1QtHV0Mi1HqfYLFpwN9a02bAh\n2uBGmHURsmIM1Gr/5ayj+Sz5YtvqXKIUMYlI4vnbvRYWV/JEuoTjsWtavb5prZZc\ng0VwQkNZBpBbgQ2apmdZ9ywa8sn4ShUSZiVnmi63pGijqOU3E1w0vt193cvCm85F\nh535XF6j5ZFNbdC1EIMo6QZXTRUhLTJ+XYTbJZckF+Ncm0uQOPlqo046jynSdgcK\nnUfoodKPq/fyOtOayVAd+Pwqat15oMmUd+Y7qzmxEBSewcmfwLKI+BUnlb332JTz\nzgeB4k4JW5627iOwa7wably/XHRbPeByqMyEVEX8nMbrypAcHVGWdjkJCVUdjcrZ\nu0PgSAytnIytQrbhA+woUlYhitqx8EYZXmiCs+pBuGwAnwxLXS9fnuKKns7w3glB\nMR6b9Ab25bSdVmIJ93W4tEcmfTHzWc9aNBU2td1/c+YuLnH+OFJuu15ef4dWlNeR\nEd+f+cZuGXS8kgEnE/XB+HUVWfktktpUgKvmtZ5kUP/vErBwA+/B+i1drOp38kfv\niGuUThCiep38w64dkV9KVJNp5z1k3PMoVCvgIhZjiDoL8YSBzlXL1iuGDKxtRhRk\n6IuBDtLlegeL0/I0d3UV\n=ShCq\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-22T07:48:39",
                "message_text_only": "On Mon, Jun 22, 2015 at 08:40:15AM +0200, Jonas Schnelli wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n> \n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev The\n> > move is now complete.  The previous archive has been fully\n> > imported and new posts here will now be saved.\n> \n> Thanks for the work!\n> \n> What about updating bitcoin.org (https://bitcoin.org/en/development)?\n> I guess people start looking there...\n> \n> Same for this...\n> https://bitcointalk.org/index.php?topic=15527.0\n> \n> Bip0001 needs also an update...\n> https://github.com/bitcoin/bips/blob/master/bip-0001.mediawiki\n\nhttps://github.com/bitcoin/bips/pull/161\nhttps://github.com/bitcoin/bitcoin.org/pull/908\nhttps://github.com/bitcoin/bitcoin/pull/6319\n\nThe bitcoin.org one probably still needs some tweaking.\n\nWladimir"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-23T18:45:01",
                "message_text_only": "Hello,\n\nI'm not sure if anyone has submitted a request for gmane to monitor and \narchive this new list, but I did. Maybe it's not best for many people to \nre-request that? For those who aren't aware, gmane has a nice HTTP/HTML \narchive as well as a newsgroup proxy that is also very nice for reading \nthe archive. They'll also subscribe the list to mail-archive.com for you.\n\nI've also noticed that gmane \n(http://dir.gmane.org/gmane.comp.bitcoin.devel) does not have exactly \nthe same archive for the old bitcoin-development list \n(http://sourceforge.net/p/bitcoin/mailman/bitcoin-development/). It's \nmissing a few months at the beginning. The new list archive does contain \nthe same thing as the old list \n(https://lists.linuxfoundation.org/pipermail/bitcoin-dev/).\n\ngmane has an option to import old archives, so I'm seeing if they can do \nthat with the https://lists.linuxfoundation.org/pipermail/bitcoin-dev/ \nlist, since it is complete. In order to avoid confusion on what list is \nthe most complete, if they can, I may request them delete or rename \ntheir old, incomplete archive at \nhttp://dir.gmane.org/gmane.comp.bitcoin.devel . It's possible they could \neven make this new list use that same name after deleting or renaming \nthat old archive.\n\n\nThere is also bitcoin-list \n(http://sourceforge.net/p/bitcoin/mailman/bitcoin-list/). I think that \none may be discontinued? That list appears to be older and contains some \nof Satoshi's original e-mails. On gmane though \n(http://dir.gmane.org/gmane.comp.bitcoin.user), it is missing the first \nfew years of archives. Do we want to try and preserve this historical \ncorrespondence on any way before sourceforce disappears?\n\n\n\n\nRegarding message footers and the subject prefix of [bitcoin-dev], it \nwould be cool if mailman allowed people to change this on a per-user basis.\n\nAndy Schroder\n\nOn 06/21/2015 05:29 PM, Warren Togami Jr. wrote:\n> Hi folks,\n>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> The move is now complete.  The previous archive has been fully \n> imported and new posts here will now be saved.\n>\n> *Greylisting Notice*\n> Your first post to this list may be delayed by 5+ minutes due to \n> Greylisting <https://en.wikipedia.org/wiki/Greylisting>. Subsequent \n> posts should go through without delay. Contact Freenode #bitcoin-dev \n> if you have any questions or concerns.\n>\n> *TODO*\n>\n>   * LF will be upgrading Mailman soon to better handle posts from DKIM\n>     enforced domains.\n>   * There will be a few more config tweaks like auto-rejecting\n>     non-subscribed posts.  Nobody has time to moderate this list, and\n>     mail silently disappearing into the moderation hold blackhole is\n>     worse than an instant reject message telling people to subscribe.\n>     Unfortunately, it is too dangerous to auto-reject spam ... those\n>     messages need to go into a blackhole to prevent bounce abuse.\n>\n> Warren Togami\n>\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/b38622a0/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/b38622a0/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Welcome to the new Bitcoin Dev List",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Warren Togami Jr.",
                "s7r",
                "Btc Drak",
                "Wladimir J. van der Laan",
                "Andy Schroder",
                "Jonas Schnelli"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 9925
        }
    },
    {
        "title": "[bitcoin-dev] new thread posting something else",
        "thread_messages": [
            {
                "author": "s7r",
                "date": "2015-06-21T21:53:34",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nThis is a new thread posting something else.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.22 (MingW32)\n\niQEcBAEBCAAGBQJVhzJeAAoJEIN/pSyBJlsRX00IAMKa4w5V5RJjnZ9zPo8gQBQJ\nWFnnXQGVx5HlYQuaP/oV4EWeVUP/EZM6QiYV3aE3gJxVJAX99k7Cm9ilZthkhzhq\n+LztI6SBeX1y61MueQUcj6eHW376e08HRkwn4OfOTvl6V9LnZ0Gf9etSnJsTPop4\n0ebu53HKkOjpfxhX3r6riqty7K+TZberPlJ5ljkKm/Hg+tklNaReTWwZDn2hWwyI\n/0uU9TKW5sKF/tjYjWXRsruyrHeDAXMMGsIL5KocYho2SG15aNmVvtvqF7szrapJ\n9RYWCwCiWf4hnBe8R6IIN/Wu84Kq4/kqIsJGYficYMHUzLRYf13QfBL1fcfWrBA=\n=XHak\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "new thread posting something else",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "s7r"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 581
        }
    },
    {
        "title": "[bitcoin-dev] test",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T22:10:43",
                "message_text_only": "test\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/5cad14b3/attachment.html>"
            },
            {
                "author": "David Shares",
                "date": "2015-06-21T22:13:51",
                "message_text_only": "Received! \n\nSent from my iPhone\n\n> On Jun 21, 2015, at 6:10 PM, Warren Togami Jr. <warren at togami.com> wrote:\n> \n> test\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            }
        ],
        "thread_summary": {
            "title": "test",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Warren Togami Jr.",
                "David Shares"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 493
        }
    },
    {
        "title": "[bitcoin-dev] test #2",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T22:19:28",
                "message_text_only": "This post from wtogami at apache.org is from an address not subscribed to the\nlist.  It should be auto-rejected by the server.  If this goes through to\nthe list then something is wrong with the configuration.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/9af25dcf/attachment-0001.html>"
            },
            {
                "author": "s7r",
                "date": "2015-06-21T22:21:52",
                "message_text_only": "It did go through the list - I got it like any message from a subscribed\nuser.\n\nOn 6/22/2015 1:19 AM, Warren Togami Jr. wrote:\n> This post from wtogami at apache.org <mailto:wtogami at apache.org> is from an\n> address not subscribed to the list.  It should be auto-rejected by the\n> server.  If this goes through to the list then something is wrong with\n> the configuration.\n> \n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            }
        ],
        "thread_summary": {
            "title": "test #2",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Warren Togami Jr.",
                "s7r"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 963
        }
    },
    {
        "title": "[bitcoin-dev] Test",
        "thread_messages": [
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T22:19:29",
                "message_text_only": "Blah...\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/3e1a0340/attachment.sig>"
            },
            {
                "author": "Johnathan Corgan",
                "date": "2015-06-22T17:45:44",
                "message_text_only": "ivan hiding message oak\n\n-- \nJohnathan Corgan\nCorgan Labs - SDR Training and Development Services\nhttp://corganlabs.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/4b71c94e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Test",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Eric Lombrozo",
                "Johnathan Corgan"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 610
        }
    },
    {
        "title": "[bitcoin-dev] Test #3",
        "thread_messages": [
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T22:57:48",
                "message_text_only": "Boo!\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/c4785d29/attachment.sig>"
            },
            {
                "author": "kendrick eastes",
                "date": "2015-06-21T23:17:40",
                "message_text_only": "boo who?\n\nOn Sun, Jun 21, 2015 at 4:57 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Boo!\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/ffe97c89/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-21T23:18:20",
                "message_text_only": "Boo you!\n\n> On Jun 21, 2015, at 4:17 PM, kendrick eastes <keastes at gmail.com> wrote:\n> \n> boo who?\n> \n> On Sun, Jun 21, 2015 at 4:57 PM, Eric Lombrozo <elombrozo at gmail.com <mailto:elombrozo at gmail.com>> wrote:\n> Boo!\n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org <mailto:bitcoin-dev at lists.linuxfoundation.org>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev <https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev>\n> \n> \n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/a1c11508/attachment-0001.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/a1c11508/attachment-0001.sig>"
            }
        ],
        "thread_summary": {
            "title": "Test #3",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Eric Lombrozo",
                "kendrick eastes"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 1802
        }
    },
    {
        "title": "[bitcoin-dev] test #3",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-21T22:25:03",
                "message_text_only": "This post from wtogami at apache.org is again from an address not subscribed\nto the list. It should be auto-rejected by the server. If this goes through\nto the list then something is wrong with the configuration.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/22f4a02c/attachment.html>"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-21T22:35:20",
                "message_text_only": "Received as any other message from the mailing list.\n\nOn Sun, Jun 21, 2015 at 6:25 PM, Warren Togami Jr. <wtogami at apache.org>\nwrote:\n\n> This post from wtogami at apache.org is again from an address not subscribed\n> to the list. It should be auto-rejected by the server. If this goes through\n> to the list then something is wrong with the configuration.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/10e53413/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "test #3",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Warren Togami Jr.",
                "Ivan Brightly"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1124
        }
    },
    {
        "title": "[bitcoin-dev] Just FYI",
        "thread_messages": [
            {
                "author": "Frank Flores",
                "date": "2015-06-22T01:14:04",
                "message_text_only": "If you're going to go through the trouble of signing your public emails,\nplease publish your public key on a major key server or at least somewhere\nwhere google can crawl it. Thank you.\n\n-- \n*MONEY IS OVER!*\n                                IF YOU WANT IT\n<http://www.zeitgeistmovie.com/>\n=====================================================\nThe causes of my servitude can be traced to the tyranny of money.\n-Serj Tankian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/10c76ddc/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-22T02:06:52",
                "message_text_only": "On Sun, Jun 21, 2015 at 08:14:04PM -0500, Frank Flores wrote:\n> If you're going to go through the trouble of signing your public emails,\n> please publish your public key on a major key server or at least somewhere\n> where google can crawl it. Thank you.\n\nAs for how you can do that, on stock gnupg:\n\n    gpg --send-key 934023AE18144354\n\nOr possibly:\n\n    gpg --keyserver hkp://keys.gnupg.net --send-key 934023AE18144354\n\nIf your gpg.conf doesn't have a keyserver set.\n\nNote that if you add a new subkey (as well as other changes to your key)\nyou need to resend your key to the keyservers or people won't be able to\nverify your signatures.\n\n\nDisclaimer: OpenPGP kinda sucks. Deal with it.\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000006e2d86bc8460d5900351f1cf9b2b4e4acdebc1d0a063901\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150621/0ddfdbf6/attachment.sig>"
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-22T06:49:32",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nGranted this is not the gnuPG support list, it would help me and most\nmembers, here, to know just a little more, following your gpg advice\nabout publishing keys:\n\nSay, subsequent to publishing a key to a keyserver, I then sign that\nkey (or someone else signs it)\n\n1) would the key need to be published again?\n\n2) does the key used to sign it need to be published in order to make\nsignature verification possible?\n\nVenzen\n\n\nOn 06/22/2015 09:06 AM, Peter Todd wrote:\n> gpg --keyserver hkp://keys.gnupg.net --send-key\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVh6/4AAoJEGwAhlQc8H1mlL0IAIFZdzyzawOjc43SODLYePo6\nNJU+DRKCQLiNhiED/keCFR/t51XarY4dvgG81wr1qskckRarW6s2ZEWU/2l4oaHa\nYs+yO5ASbWOp9jbcBWIMFcAou+ULYx732wqEGTXOgSXljrSsuGa4DO+8vSW1UToc\nkY6BhFUa9rjEUQXt+gUqfrXiFlgRFHY4/nd1Tk47VEBipZgcQsJr4j6SYhlXHfbb\nCpixpFeIeVFfdHSNQiDMqPkF3xsTLQcqq2LvZpT8TXrA5vQ0wv/gZH49zIIy5QjR\nxjmSb1tZl0GZRTZ3CYCsoK4Zq4BdhqdU8XIhlwACC2WXHFDnqQrTXwH4nLeWcG0=\n=pYDp\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Frank Flores",
                "date": "2015-06-22T08:45:13",
                "message_text_only": "Whenever a public key is altered in any way it should be\nresubmitted/republished, so yes, please do so.\n\nDO NOT PUBLISH YOUR PRIVATE KEY. That is the data used to sign a document.\nYou only need to publish your PUBLIC KEY or otherwise share it with\nrecipients of your signed message so that others can verify it as properly\nsigned or not.\n\nOn Mon, Jun 22, 2015 at 1:49 AM, Venzen Khaosan <venzen at mail.bihthai.net>\nwrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> Granted this is not the gnuPG support list, it would help me and most\n> members, here, to know just a little more, following your gpg advice\n> about publishing keys:\n>\n> Say, subsequent to publishing a key to a keyserver, I then sign that\n> key (or someone else signs it)\n>\n> 1) would the key need to be published again?\n>\n> 2) does the key used to sign it need to be published in order to make\n> signature verification possible?\n>\n> Venzen\n>\n>\n> On 06/22/2015 09:06 AM, Peter Todd wrote:\n> > gpg --keyserver hkp://keys.gnupg.net --send-key\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n>\n> iQEcBAEBAgAGBQJVh6/4AAoJEGwAhlQc8H1mlL0IAIFZdzyzawOjc43SODLYePo6\n> NJU+DRKCQLiNhiED/keCFR/t51XarY4dvgG81wr1qskckRarW6s2ZEWU/2l4oaHa\n> Ys+yO5ASbWOp9jbcBWIMFcAou+ULYx732wqEGTXOgSXljrSsuGa4DO+8vSW1UToc\n> kY6BhFUa9rjEUQXt+gUqfrXiFlgRFHY4/nd1Tk47VEBipZgcQsJr4j6SYhlXHfbb\n> CpixpFeIeVFfdHSNQiDMqPkF3xsTLQcqq2LvZpT8TXrA5vQ0wv/gZH49zIIy5QjR\n> xjmSb1tZl0GZRTZ3CYCsoK4Zq4BdhqdU8XIhlwACC2WXHFDnqQrTXwH4nLeWcG0=\n> =pYDp\n> -----END PGP SIGNATURE-----\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n\n\n\n-- \n*MONEY IS OVER!*\n                                IF YOU WANT IT\n<http://www.zeitgeistmovie.com/>\n=====================================================\nThe causes of my servitude can be traced to the tyranny of money.\n-Serj Tankian\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/c25d6467/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Just FYI",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Frank Flores",
                "Venzen Khaosan",
                "Peter Todd"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 4819
        }
    },
    {
        "title": "[bitcoin-dev] test post",
        "thread_messages": [
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-22T16:23:36",
                "message_text_only": "hello world.\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/a928cecb/attachment.html>"
            },
            {
                "author": "Richard Winder",
                "date": "2015-06-22T16:46:50",
                "message_text_only": "awaiting transmission transmission\n\nOn Mon, Jun 22, 2015 at 5:23 PM, Nathan Wilcox <nathan at leastauthority.com>\nwrote:\n\n> hello world.\n>\n> --\n> Nathan Wilcox\n> Least Authoritarian\n>\n> email: nathan at leastauthority.com\n> twitter: @least_nathan\n> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/ad30754d/attachment.html>"
            },
            {
                "author": "Nathan Wilcox",
                "date": "2015-06-22T16:52:19",
                "message_text_only": "attack at dawn.\n\nOn Mon, Jun 22, 2015 at 10:46 AM, Richard Winder <richard at windstone.co.za>\nwrote:\n\n> awaiting transmission transmission\n>\n> On Mon, Jun 22, 2015 at 5:23 PM, Nathan Wilcox <nathan at leastauthority.com>\n> wrote:\n>\n>> hello world.\n>>\n>> --\n>> Nathan Wilcox\n>> Least Authoritarian\n>>\n>> email: nathan at leastauthority.com\n>> twitter: @least_nathan\n>> PGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n\n\n-- \nNathan Wilcox\nLeast Authoritarian\n\nemail: nathan at leastauthority.com\ntwitter: @least_nathan\nPGP: 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/07928fe3/attachment.html>"
            },
            {
                "author": "odinn",
                "date": "2015-06-24T01:26:23",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nohai\n\nOn 06/22/2015 09:23 AM, Nathan Wilcox wrote:\n> hello world.\n> \n> -- Nathan Wilcox Least Authoritarian\n> \n> email: nathan at leastauthority.com\n> <mailto:nathan at leastauthority.com> twitter: @least_nathan PGP:\n> 11169993 / AAAC 5675 E3F7 514C 67ED  E9C9 3BFE 5263 1116 9993\n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVigc+AAoJEGxwq/inSG8CJ80H/RCWzbiS1OBi1pPhC/0uRHFS\nRAfXqmyvnjHomI4vfEKq0bocEEGW5BPDjD+bVuPlTbi3sBheaHkMJyjSBPcXBoH1\n3V8sGVEl5lxt9/pbNMXEAyuCpXllI/EQmwXLkbDXwGclLWe+VUawLXLMj6p3r0w1\nZ0JC1oidTZR2khnrLKsnTtymMznr5dOj1WDa7ej5m/xikhcADwJk22R9XmY1mf4L\nLqYLnVtrXIhw7A0Xuc/E6v0BjBvlxGhHhkbxRC3DRj6U2eBeOpE610vuX86JGp6D\nv6dfNyWnuQ3MPy0A5i7ZpGUIwPHEtV+w4+SHwN2QMrsHtQZnfqJirrhCKPOX3HY=\n=zDQL\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Daniel Wilczynski",
                "date": "2015-06-23T01:45:13",
                "message_text_only": "Hallo.\n\n\nDaniel W."
            }
        ],
        "thread_summary": {
            "title": "test post",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Richard Winder",
                "odinn",
                "Nathan Wilcox",
                "Daniel Wilczynski"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 3200
        }
    },
    {
        "title": "[bitcoin-dev] Draft BIP : fixed-schedule block size increase",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2015-06-22T18:18:19",
                "message_text_only": "I promised to write a BIP after I'd implemented\nincrease-the-maximum-block-size code, so here it is. It also lives at:\nhttps://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n\nI don't expect any proposal to please everybody; there are unavoidable\ntradeoffs to increasing the maximum block size. I prioritize implementation\nsimplicity -- it is hard to write consensus-critical code, so simpler is\nbetter.\n\n\n\n\n  BIP: ??\n  Title: Increase Maximum Block Size\n  Author: Gavin Andresen <gavinandresen at gmail.com>\n  Status: Draft\n  Type: Standards Track\n  Created: 2015-06-22\n\n==Abstract==\n\nThis BIP proposes replacing the fixed one megabyte maximum block size with\na maximum size that grows over time at a predictable rate.\n\n==Motivation==\n\nTransaction volume on the Bitcoin network has been growing, and will soon\nreach the one-megabyte-every-ten-minutes limit imposed by the one megabyte\nmaximum block size. Increasing the maximum size reduces the impact of that\nlimit on Bitcoin adoption and growth.\n\n==Specification==\n\nAfter deployment on the network (see the Deployment section for details),\nthe maximum allowed size of a block on the main network shall be calculated\nbased on the timestamp in the block header.\n\nThe maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11\n00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000\nseconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC\n(timestamp 2083190400). The maximum size of blocks in between doublings\nwill increase linearly based on the block's timestamp. The maximum size of\nblocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.\n\nExpressed in pseudo-code, using integer math:\n\n    function max_block_size(block_timestamp):\n\n        time_start = 1452470400\n        time_double = 60*60*24*365*2\n        size_start = 8000000\n        if block_timestamp >= time_start+time_double*10\n            return size_start * 2^10\n\n        // Piecewise-linear-between-doublings growth:\n        time_delta = block_timestamp - t_start\n        doublings = time_delta / time_double\n        remainder = time_delta % time_double\n        interpolate = (size_start * 2^doublings * remainder) / time_double\n        max_size = size_start * 2^doublings + interpolate\n\n        return max_size\n\n==Deployment==\n\nDeployment shall be controlled by hash-power supermajority vote (similar to\nthe technique used in BIP34), but the earliest possible activation time is\n2016-01-11 00:00:00 UTC.\n\nActivation is achieved when 750 of 1,000 consecutive blocks in the best\nchain have a version number with bits 3 and 14 set (0x20000004 in hex). The\nactivation time will be the timestamp of the 750'th block plus a two week\n(1,209,600 second) grace period to give any remaining miners or services\ntime to upgrade to support larger blocks. If a supermajority is achieved\nmore than two weeks before 2016-01-11 00:00:00 UTC, the activation time\nwill be 2016-01-11 00:00:00 UTC.\n\nBlock version numbers are used only for activation; once activation is\nachieved, the maximum block size shall be as described in the specification\nsection, regardless of the version number of the block.\n\n\n==Rationale==\n\nThe initial size of 8,000,000 bytes was chosen after testing the current\nreference implementation code with larger block sizes and receiving\nfeedback from miners stuck behind bandwidth-constrained networks (in\nparticular, Chinese miners behind the Great Firewall of China).\n\nThe doubling interval was chosen based on long-term growth trends for CPU\npower, storage, and Internet bandwidth. The 20-year limit was chosen\nbecause exponential growth cannot continue forever.\n\nCalculations are based on timestamps and not blockchain height because a\ntimestamp is part of every block's header. This allows implementations to\nknow a block's maximum size after they have downloaded it's header, but\nbefore downloading any transactions.\n\nThe deployment plan is taken from Jeff Garzik's proposed BIP100 block size\nincrease, and is designed to give miners, merchants, and\nfull-node-running-end-users sufficient time to upgrade to software that\nsupports bigger blocks. A 75% supermajority was chosen so that one large\nmining pool does not have effective veto power over a blocksize increase.\nThe version number scheme is designed to be compatible with Pieter's\nWuille's proposed \"Version bits\" BIP.\n\nTODO: summarize objections/arguments from\nhttp://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n\nTODO: describe other proposals and their advantages/disadvantages over this\nproposal.\n\n\n==Compatibility==\n\nThis is a hard-forking change to the Bitcoin protocol; anybody running code\nthat fully validates blocks must upgrade before the activation time or they\nwill risk rejecting a chain containing larger-than-one-megabyte blocks.\n\nSimplified Payment Verification software is not affected, unless it makes\nassumptions about the maximum depth of a transaction's merkle branch based\non the minimum size of a transaction and the maximum block size.\n\n==Implementation==\n\nhttps://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/15ca6d1f/attachment-0001.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-22T18:33:45",
                "message_text_only": "The BIP-100 proposal uses a window of 12000 blocks (83 days) rather than\nthe standard 1000.  Given that the threshold is lower than is normal for\nhard-forks, noise on the measurement could cause an activation even if less\nthan 75% of miners agree.  It also means that the vote has to be sustained\nfor longer and inherently gives a longer notice period.\n\nTwo weeks seems low for an upgrade warning.  I guess there would be an\nalert on the network.\n\nDo old nodes detect an upgrade by version numbers?  If that was headers\nonly, then they could detect that large blocks have activated.\n\nHave you considered a \"fail\" condition?  For example, if 750 of the last\n1000 blocks set bits 4 and 14, then it counts as a rejection by 75% of the\nminers.  Alternatively, if the rule doesn't activate by 11th Jan 2017, then\nit is disabled.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/c4698689/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-22T18:46:03",
                "message_text_only": "On Mon, Jun 22, 2015 at 2:33 PM, Tier Nolan <tier.nolan at gmail.com> wrote:\n\n> The BIP-100 proposal uses a window of 12000 blocks (83 days) rather than\n> the standard 1000.  Given that the threshold is lower than is normal for\n> hard-forks, noise on the measurement could cause an activation even if less\n> than 75% of miners agree.  It also means that the vote has to be sustained\n> for longer and inherently gives a longer notice period.\n>\n\n9,000 of last 12,000 blocks is OK with me (I don't think scanning through\nthe last 12,000 block headers every new block will cause performance\nproblems, but I'd want to benchmark it to be absolutely sure).\n\n\n> Two weeks seems low for an upgrade warning.  I guess there would be an\n> alert on the network.\n>\nDo old nodes detect an upgrade by version numbers?  If that was headers\n> only, then they could detect that large blocks have activated.\n>\n\nBitcoin Core will alert when automatically when 51% of blocks have a\nversion it doesn't understand.\n\nIt will also alert automatically if it detects a chain with more work that\nit doesn't consider valid for some reason. And 0.11 contains code that\nalerts if you're on a chain that is being mined really slowly.\n\nHave you considered a \"fail\" condition?  For example, if 750 of the last\n> 1000 blocks set bits 4 and 14, then it counts as a rejection by 75% of the\n> miners.  Alternatively, if the rule doesn't activate by 11th Jan 2017, then\n> it is disabled.\n>\n\nI like the fail-if-not-activated-by idea. Not so crazy about the vote idea\n(what if miners set bits 3 AND 4 ?).\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/9cf73348/attachment.html>"
            },
            {
                "author": "Martin Schwarz",
                "date": "2015-06-22T19:10:40",
                "message_text_only": "Gavin,\n\nin 2022 your proposal (BIP as well as code) crosses the 32MB maximum\nmessage size limit. In order to avoid deployment of code that deterministically\nfails fatally in 2022, I'd propose to stop the doublings at 32MB for now and fix\nthe message size limit in the mean time. Since the message size fix requires\na 2nd hard fork anyway, your current 8GB limit could be re-instateted in that\n2nd fork as well. Even if you disagree, I'd suggest to address the topic in the BIP.\n\nbest regards,\nMartin"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-22T19:28:49",
                "message_text_only": "On Mon, Jun 22, 2015 at 8:10 PM, Martin Schwarz <martin.schwarz at gmail.com>\nwrote:\n\n> Gavin,\n>\n> in 2022 your proposal (BIP as well as code) crosses the 32MB maximum\n> message size limit. In order to avoid deployment of code that\n> deterministically\n> fails fatally in 2022, I'd propose to stop the doublings at 32MB for now\n> and fix\n> the message size limit in the mean time.\n\n\nThere is an exception in the code for \"block\" messages.\n\nhttps://github.com/gavinandresen/bitcoinxt/commit/c81898ec46e4962daf975e352931b848026fdc34#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR3548\n\nThis means 2MB limit for all other messages.  \"block\" messages are limited\nto the max block size for 2 hours into the future.\n\nI think setting it to a week into the future might be better, since it is\nonly a DOS protection.  This would guarantee that message sizes are\nreasonable.  The size check would still be done anyway.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/2457767e/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-22T19:54:26",
                "message_text_only": "As Tier says, the current network message limit is 2MB (reduced from 32MB\nin the... uhh, 0.10? release).\n\nI think keeping the consensus rules distinct from limitations of the p2p\nnetwork makes sense-- we are already seeing different protocols for\nannouncing transactions and blocks (Matt's relay network is, essentially, a\nseparate protocol). I could write a separate BIP describing the change to\nthe p2p network protocol, but that feels like busy-work to me.\n\nRE: setting the DoS size check farther than 2 hours into the future: the\nblock, itself, will be rejected if it has a timestamp more than 2 hours in\nthe future. That is already a consensus rule.\n\nRE: what happens if block timestamps are not in chronological order:\nNothing.\n\nThe activation counting happens in block-height-order, so timestamps on all\nbut the \"activating\" block are all that matters.\n\nCode that looks for the activation condition must properly handle re-orgs\naround the activation block, of course.\n\n\nRE: testnet parameters:  big blocks can be tested in -regtest mode with\narbitrary timestamps in the past or future. Testing maximum-8MB-blocks\nmined \"in the past\" on testnet will just result in a testnet that is even\nmore useless for ordinary testing of products or services being developed\n-- part of what makes testnet useful for things like testing transaction\ncreation code is it syncs quickly.\n\nThat said, I have thought for a while now somebody should take a fresh look\nat the testnet, talk to people who might be customers for a reset testnet\nor testnets (we probably want separate testnets for people testing mining\nand people testing transaction creation, for example), and implement\ntestnets designed to make it easy to test what people need testing.\n\nRE: scraping together money to run a few hundred full-load full-nodes:\n hardware is cheap, people are expensive. You seem to expect that companies\nwill be willing to invest the time of their people testing something that\nmay never happen (8MB of transactions every ten minutes). Maybe they would,\nbut most companies are very busy trying to stay in business by attracting\ncustomers to their products or services. Scaling up is a good problem to\nhave, and, in my experience, the way to be successful scaling up is to\ntackle problems as they occur.\n\nBecause there's no use spending a bunch of person-hours hyper-optimizing\nfor 8MB blocks stored in MySQL if a year from now you find out your\ncustomers don't actually want your product or MySQL 5.11 comes out and is\n100 times faster....\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/72da223e/attachment-0001.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-22T20:12:47",
                "message_text_only": "On Mon, Jun 22, 2015 at 03:54:26PM -0400, Gavin Andresen wrote:\n\nIt would be useful if you replied directly to the emails in question as\nopposed to breaking the flow of conversation and taking replies out of\ncontext for other readers.\n\n> As Tier says, the current network message limit is 2MB (reduced from 32MB\n> in the... uhh, 0.10? release).\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000a58e4b27940e4350a2a11e7c5a45ff2a44401d15998f0e1\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/6a9f655d/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-22T19:23:09",
                "message_text_only": "On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:\n> I promised to write a BIP after I'd implemented\n> increase-the-maximum-block-size code, so here it is. It also lives at:\n> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n\nIt's important that we see a wide range of realistic testing of what an\n8MB limit could look in the near future. An important part of that\ntesting is load testing.\n\nAs of writing the BIP above has no mention of what switchover rules will\nbe used for testnet; code floating around has August 1st 2015 as that\ndate. I propose we use August 1st 2013.\n\nThis switch over date should be set in the _past_ to allow for the\ncreation (via reorg) of a realistic full-load blockchain on testnet to\nfully test the real-world behavior of the entire infrastructure\necosystem, including questions like the scalability of block explorers,\nSPV wallets, feasibility of initial syncronization, scalability of the\nUTXO set, etc. While this is of course inconvenient - 2 years of 8MB\nblocks is 840GB worth of data - the Bitcoin ecosystem can-not afford to\nmake a change like this blindly.\n\nI'm sure with a $3.5 billion market cap at stake we can scrape together\nthe resources to voluntarily run a few hundred full-load full-nodes for\ntesting a change with the potential to destroy that market cap.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000b953816d4c31e79b04d5b075bcacb8cf20e54ee3b61c316\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/4f20e897/attachment.sig>"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-23T07:35:40",
                "message_text_only": "I don't think essentially replacing most of Testnet with a specialised \ntest chain is a good idea, but this might be a good time to consider a \n4th test network with very large blocks from genesis onwards.\n\nI do tend to think 2 years of 8mb blocks is excessive as a test, too, \nand while certainly large projects should have or can raise funds for \ntest infrastructure, I would worry about the smaller stuff out there. Is \nthere anything specific 2 years gives us over, say, 6 months?\n\nRoss\n\nOn 22/06/2015 20:23, Peter Todd wrote:\n> On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:\n>> I promised to write a BIP after I'd implemented\n>> increase-the-maximum-block-size code, so here it is. It also lives at:\n>> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n> It's important that we see a wide range of realistic testing of what an\n> 8MB limit could look in the near future. An important part of that\n> testing is load testing.\n>\n> As of writing the BIP above has no mention of what switchover rules will\n> be used for testnet; code floating around has August 1st 2015 as that\n> date. I propose we use August 1st 2013.\n>\n> This switch over date should be set in the _past_ to allow for the\n> creation (via reorg) of a realistic full-load blockchain on testnet to\n> fully test the real-world behavior of the entire infrastructure\n> ecosystem, including questions like the scalability of block explorers,\n> SPV wallets, feasibility of initial syncronization, scalability of the\n> UTXO set, etc. While this is of course inconvenient - 2 years of 8MB\n> blocks is 840GB worth of data - the Bitcoin ecosystem can-not afford to\n> make a change like this blindly.\n>\n> I'm sure with a $3.5 billion market cap at stake we can scrape together\n> the resources to voluntarily run a few hundred full-load full-nodes for\n> testing a change with the potential to destroy that market cap.\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/7a41e361/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-23T19:16:59",
                "message_text_only": "On Mon, Jun 22, 2015 at 03:23:09PM -0400, Peter Todd wrote:\n> On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:\n> > I promised to write a BIP after I'd implemented\n> > increase-the-maximum-block-size code, so here it is. It also lives at:\n> > https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n> \n> It's important that we see a wide range of realistic testing of what an\n> 8MB limit could look in the near future. An important part of that\n> testing is load testing.\n> \n> As of writing the BIP above has no mention of what switchover rules will\n> be used for testnet; code floating around has August 1st 2015 as that\n> date. I propose we use August 1st 2013.\n> \n> This switch over date should be set in the _past_ to allow for the\n> creation (via reorg) of a realistic full-load blockchain on testnet to\n> fully test the real-world behavior of the entire infrastructure\n> ecosystem, including questions like the scalability of block explorers,\n> SPV wallets, feasibility of initial syncronization, scalability of the\n> UTXO set, etc. While this is of course inconvenient - 2 years of 8MB\n> blocks is 840GB worth of data - the Bitcoin ecosystem can-not afford to\n> make a change like this blindly.\n> \n> I'm sure with a $3.5 billion market cap at stake we can scrape together\n> the resources to voluntarily run a few hundred full-load full-nodes for\n> testing a change with the potential to destroy that market cap.\n\nAlso, as a few people have pointed out to me, the BIP proposal has no\ninformation at all about testing, reproducable or not.\n\nAs much of the discussion about the acceptability of this BIP will be\nheavily influenced by real world test results we should expect\nsufficient information available to understand and reproduce those\ntests; the Quality Assurance Test Plan done for BIP16 is a model worth\nlooking at:\n\nhttps://github.com/bitcoin/bips/blob/master/bip-0016/qa.mediawiki\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/f093269b/attachment.sig>"
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-22T20:27:19",
                "message_text_only": "Thank you!\n\nA few questions/comments:\n\n* In the specification, you refer to \"t_start\". I guess you mean \"time_start\"?\n\n* Miners can, especially when close to a block doubling or shortly\nafter activation, to some extent manipulate max block size by\nmanipulating the time stamp in the block header within valid limits.\nAccording to the pseudo code in the specification, the first and a\nhandful of subsequent blocks after activation could actually have\nnegative max block sizes due to this (depending on how you define the\n% operator of the pseudo code). I haven't checked the reference\nimplementation, but I do think that the specification section should\nexplicitly handle this.\n\nRegards,\nKalle\n\n2015-06-22 20:18 GMT+02:00 Gavin Andresen <gavinandresen at gmail.com>:\n> I promised to write a BIP after I'd implemented\n> increase-the-maximum-block-size code, so here it is. It also lives at:\n> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n>\n> I don't expect any proposal to please everybody; there are unavoidable\n> tradeoffs to increasing the maximum block size. I prioritize implementation\n> simplicity -- it is hard to write consensus-critical code, so simpler is\n> better.\n>\n>\n>\n>\n>   BIP: ??\n>   Title: Increase Maximum Block Size\n>   Author: Gavin Andresen <gavinandresen at gmail.com>\n>   Status: Draft\n>   Type: Standards Track\n>   Created: 2015-06-22\n>\n> ==Abstract==\n>\n> This BIP proposes replacing the fixed one megabyte maximum block size with a\n> maximum size that grows over time at a predictable rate.\n>\n> ==Motivation==\n>\n> Transaction volume on the Bitcoin network has been growing, and will soon\n> reach the one-megabyte-every-ten-minutes limit imposed by the one megabyte\n> maximum block size. Increasing the maximum size reduces the impact of that\n> limit on Bitcoin adoption and growth.\n>\n> ==Specification==\n>\n> After deployment on the network (see the Deployment section for details),\n> the maximum allowed size of a block on the main network shall be calculated\n> based on the timestamp in the block header.\n>\n> The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11\n> 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000\n> seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC\n> (timestamp 2083190400). The maximum size of blocks in between doublings will\n> increase linearly based on the block's timestamp. The maximum size of blocks\n> after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.\n>\n> Expressed in pseudo-code, using integer math:\n>\n>     function max_block_size(block_timestamp):\n>\n>         time_start = 1452470400\n>         time_double = 60*60*24*365*2\n>         size_start = 8000000\n>         if block_timestamp >= time_start+time_double*10\n>             return size_start * 2^10\n>\n>         // Piecewise-linear-between-doublings growth:\n>         time_delta = block_timestamp - t_start\n>         doublings = time_delta / time_double\n>         remainder = time_delta % time_double\n>         interpolate = (size_start * 2^doublings * remainder) / time_double\n>         max_size = size_start * 2^doublings + interpolate\n>\n>         return max_size\n>\n> ==Deployment==\n>\n> Deployment shall be controlled by hash-power supermajority vote (similar to\n> the technique used in BIP34), but the earliest possible activation time is\n> 2016-01-11 00:00:00 UTC.\n>\n> Activation is achieved when 750 of 1,000 consecutive blocks in the best\n> chain have a version number with bits 3 and 14 set (0x20000004 in hex). The\n> activation time will be the timestamp of the 750'th block plus a two week\n> (1,209,600 second) grace period to give any remaining miners or services\n> time to upgrade to support larger blocks. If a supermajority is achieved\n> more than two weeks before 2016-01-11 00:00:00 UTC, the activation time will\n> be 2016-01-11 00:00:00 UTC.\n>\n> Block version numbers are used only for activation; once activation is\n> achieved, the maximum block size shall be as described in the specification\n> section, regardless of the version number of the block.\n>\n>\n> ==Rationale==\n>\n> The initial size of 8,000,000 bytes was chosen after testing the current\n> reference implementation code with larger block sizes and receiving feedback\n> from miners stuck behind bandwidth-constrained networks (in particular,\n> Chinese miners behind the Great Firewall of China).\n>\n> The doubling interval was chosen based on long-term growth trends for CPU\n> power, storage, and Internet bandwidth. The 20-year limit was chosen because\n> exponential growth cannot continue forever.\n>\n> Calculations are based on timestamps and not blockchain height because a\n> timestamp is part of every block's header. This allows implementations to\n> know a block's maximum size after they have downloaded it's header, but\n> before downloading any transactions.\n>\n> The deployment plan is taken from Jeff Garzik's proposed BIP100 block size\n> increase, and is designed to give miners, merchants, and\n> full-node-running-end-users sufficient time to upgrade to software that\n> supports bigger blocks. A 75% supermajority was chosen so that one large\n> mining pool does not have effective veto power over a blocksize increase.\n> The version number scheme is designed to be compatible with Pieter's\n> Wuille's proposed \"Version bits\" BIP.\n>\n> TODO: summarize objections/arguments from\n> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n>\n> TODO: describe other proposals and their advantages/disadvantages over this\n> proposal.\n>\n>\n> ==Compatibility==\n>\n> This is a hard-forking change to the Bitcoin protocol; anybody running code\n> that fully validates blocks must upgrade before the activation time or they\n> will risk rejecting a chain containing larger-than-one-megabyte blocks.\n>\n> Simplified Payment Verification software is not affected, unless it makes\n> assumptions about the maximum depth of a transaction's merkle branch based\n> on the minimum size of a transaction and the maximum block size.\n>\n> ==Implementation==\n>\n> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-22T20:46:51",
                "message_text_only": "On Mon, Jun 22, 2015 at 4:27 PM, Kalle Rosenbaum <kalle at rosenbaum.se> wrote:\n\n> * In the specification, you refer to \"t_start\". I guess you mean\n> \"time_start\"?\n>\n\nThanks, I'll fix.\n\n\n> * Miners can, especially when close to a block doubling or shortly\n> after activation, to some extent manipulate max block size by\n> manipulating the time stamp in the block header within valid limits.\n> According to the pseudo code in the specification, the first and a\n> handful of subsequent blocks after activation could actually have\n> negative max block sizes due to this (depending on how you define the\n> % operator of the pseudo code). I haven't checked the reference\n> implementation, but I do think that the specification section should\n> explicitly handle this.\n>\n\nExcellent point. That could only happen if activation happened on 11 Jan\n2016; instead of complicating the code and spec with another condition, I\nthink it would be better to specify that the activation date is the later\nof the miner supermajority and 11 Jan, with the first big block two weeks\nlater.\n\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/adbbace4/attachment-0001.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-22T20:51:23",
                "message_text_only": "On Mon, Jun 22, 2015 at 4:46 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> Excellent point. That could only happen if activation happened on 11 Jan\n> 2016; instead of complicating the code and spec with another condition, I\n> think it would be better to specify that the activation date is the later\n> of the miner supermajority and 11 Jan, with the first big block two weeks\n> later.\n>\n\n.... I take that back, I'm wrong and Tier is correct: if activation\nhappened right at midnight 11 Jan 2016 and the next block's timestamp was\nbefore midnight, that next block would just be limited to 1MB in size.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/385adf94/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-22T21:52:32",
                "message_text_only": "Can you please add a discussion of the tradeoffs of decentralization vs\nblock size?\n\nOn Mon, Jun 22, 2015 at 11:18 AM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> I promised to write a BIP after I'd implemented\n> increase-the-maximum-block-size code, so here it is. It also lives at:\n> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n>\n> I don't expect any proposal to please everybody; there are unavoidable\n> tradeoffs to increasing the maximum block size. I prioritize implementation\n> simplicity -- it is hard to write consensus-critical code, so simpler is\n> better.\n>\n>\n>\n>\n>   BIP: ??\n>   Title: Increase Maximum Block Size\n>   Author: Gavin Andresen <gavinandresen at gmail.com>\n>   Status: Draft\n>   Type: Standards Track\n>   Created: 2015-06-22\n>\n> ==Abstract==\n>\n> This BIP proposes replacing the fixed one megabyte maximum block size with\n> a maximum size that grows over time at a predictable rate.\n>\n> ==Motivation==\n>\n> Transaction volume on the Bitcoin network has been growing, and will soon\n> reach the one-megabyte-every-ten-minutes limit imposed by the one megabyte\n> maximum block size. Increasing the maximum size reduces the impact of that\n> limit on Bitcoin adoption and growth.\n>\n> ==Specification==\n>\n> After deployment on the network (see the Deployment section for details),\n> the maximum allowed size of a block on the main network shall be calculated\n> based on the timestamp in the block header.\n>\n> The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11\n> 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000\n> seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC\n> (timestamp 2083190400). The maximum size of blocks in between doublings\n> will increase linearly based on the block's timestamp. The maximum size of\n> blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.\n>\n> Expressed in pseudo-code, using integer math:\n>\n>     function max_block_size(block_timestamp):\n>\n>         time_start = 1452470400\n>         time_double = 60*60*24*365*2\n>         size_start = 8000000\n>         if block_timestamp >= time_start+time_double*10\n>             return size_start * 2^10\n>\n>         // Piecewise-linear-between-doublings growth:\n>         time_delta = block_timestamp - t_start\n>         doublings = time_delta / time_double\n>         remainder = time_delta % time_double\n>         interpolate = (size_start * 2^doublings * remainder) / time_double\n>         max_size = size_start * 2^doublings + interpolate\n>\n>         return max_size\n>\n> ==Deployment==\n>\n> Deployment shall be controlled by hash-power supermajority vote (similar\n> to the technique used in BIP34), but the earliest possible activation time\n> is 2016-01-11 00:00:00 UTC.\n>\n> Activation is achieved when 750 of 1,000 consecutive blocks in the best\n> chain have a version number with bits 3 and 14 set (0x20000004 in hex). The\n> activation time will be the timestamp of the 750'th block plus a two week\n> (1,209,600 second) grace period to give any remaining miners or services\n> time to upgrade to support larger blocks. If a supermajority is achieved\n> more than two weeks before 2016-01-11 00:00:00 UTC, the activation time\n> will be 2016-01-11 00:00:00 UTC.\n>\n> Block version numbers are used only for activation; once activation is\n> achieved, the maximum block size shall be as described in the specification\n> section, regardless of the version number of the block.\n>\n>\n> ==Rationale==\n>\n> The initial size of 8,000,000 bytes was chosen after testing the current\n> reference implementation code with larger block sizes and receiving\n> feedback from miners stuck behind bandwidth-constrained networks (in\n> particular, Chinese miners behind the Great Firewall of China).\n>\n> The doubling interval was chosen based on long-term growth trends for CPU\n> power, storage, and Internet bandwidth. The 20-year limit was chosen\n> because exponential growth cannot continue forever.\n>\n> Calculations are based on timestamps and not blockchain height because a\n> timestamp is part of every block's header. This allows implementations to\n> know a block's maximum size after they have downloaded it's header, but\n> before downloading any transactions.\n>\n> The deployment plan is taken from Jeff Garzik's proposed BIP100 block size\n> increase, and is designed to give miners, merchants, and\n> full-node-running-end-users sufficient time to upgrade to software that\n> supports bigger blocks. A 75% supermajority was chosen so that one large\n> mining pool does not have effective veto power over a blocksize increase.\n> The version number scheme is designed to be compatible with Pieter's\n> Wuille's proposed \"Version bits\" BIP.\n>\n> TODO: summarize objections/arguments from\n> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n>\n> TODO: describe other proposals and their advantages/disadvantages over\n> this proposal.\n>\n>\n> ==Compatibility==\n>\n> This is a hard-forking change to the Bitcoin protocol; anybody running\n> code that fully validates blocks must upgrade before the activation time or\n> they will risk rejecting a chain containing larger-than-one-megabyte blocks.\n>\n> Simplified Payment Verification software is not affected, unless it makes\n> assumptions about the maximum depth of a transaction's merkle branch based\n> on the minimum size of a transaction and the maximum block size.\n>\n> ==Implementation==\n>\n> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/fb29411c/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-23T19:28:38",
                "message_text_only": "On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:\n> ==Rationale==\n> \n> The initial size of 8,000,000 bytes was chosen after testing the current\n> reference implementation code with larger block sizes and receiving\n> feedback from miners stuck behind bandwidth-constrained networks (in\n> particular, Chinese miners behind the Great Firewall of China).\n> \n> The doubling interval was chosen based on long-term growth trends for CPU\n> power, storage, and Internet bandwidth. The 20-year limit was chosen\n> because exponential growth cannot continue forever.\n\nWladimir noted that 'The original presented intention of block size\nincrease was a one-time \"scaling\" to grant time for more decentralizing\nsolutions to develop'\n\nComments?\n\nIn particular, if bandwidth scaling doesn't go according to your plan,\ne.g. the exponential exponent is too large, perhaps due to technological\ngrowth not keeping pace, or the political realities of actual bandwidth\ndeployment making theoretical technological growth irrelevant, what\nmechanism will prevent centralization? (if any)\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/2c0ea51b/attachment.sig>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-23T20:12:17",
                "message_text_only": "On Tue, Jun 23, 2015 at 3:28 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:\n> > ==Rationale==\n> >\n> > The initial size of 8,000,000 bytes was chosen after testing the current\n> > reference implementation code with larger block sizes and receiving\n> > feedback from miners stuck behind bandwidth-constrained networks (in\n> > particular, Chinese miners behind the Great Firewall of China).\n> >\n> > The doubling interval was chosen based on long-term growth trends for CPU\n> > power, storage, and Internet bandwidth. The 20-year limit was chosen\n> > because exponential growth cannot continue forever.\n>\n> Wladimir noted that 'The original presented intention of block size\n> increase was a one-time \"scaling\" to grant time for more decentralizing\n> solutions to develop'\n>\n> Comments?\n>\n\nConsensus is that this process is too painful to go through once a year.  I\nagree.\n\nIf you disagree and would like to see a Blocksize Council meet once a year\nto issue a decree on what the maximum block size shall be for the next\nyear, then propose a process for who gets to sit on the Council and how\ntheir decrees are enforced.....\n\n\n>\n> In particular, if bandwidth scaling doesn't go according to your plan,\n> e.g. the exponential exponent is too large, perhaps due to technological\n> growth not keeping pace, or the political realities of actual bandwidth\n> deployment making theoretical technological growth irrelevant, what\n> mechanism will prevent centralization? (if any)\n\n\nSimulations show that:\n\nLatency/bandwidth matter for miners.  Low latency, high bandwidth is\nbetter. However, miners with bad connectivity can simply create smaller\nblocks...\n\n... until transaction fees become significant.  But by the time that\nhappens, protocol optimizations of block propagation will make the block\nsize an insignificant term in the \"how profitable is it to mine in THIS\nparticular place on the Internet / part of the world\" equation.\n\n(Reference:\nhttps://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08224.html\n)\n\nSo: for the immediate future, there is no problem. And in the long term,\nthere is no problem.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/2e36743c/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-23T20:26:38",
                "message_text_only": "On Tue, Jun 23, 2015 at 10:12 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> On Tue, Jun 23, 2015 at 3:28 PM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> Wladimir noted that 'The original presented intention of block size\n>> increase was a one-time \"scaling\" to grant time for more decentralizing\n>> solutions to develop'\n>>\n>> Comments?\n>>\n>\n> Consensus is that this process is too painful to go through once a year.\n> I agree.\n>\n\nIf you believe we will need to go through this process once a year, we are\nnot talking about a one-time scaling to grant time for more decentralizing\nsolutions. It means you think we should keep scaling. I don't disagree\nthere - as long as we're talking about scaling as availability of\nbandwidth, storage and processing power increase, there is no reason\nBitcoin's blockchain can't grow proportionally.\n\nHowever, an initial bump 8 MB and the growth rate afterwards seem more like\na no-effectively-limit-ever to me.\n\nI fear that the wish of not wanting to deal with - admittedly - a very hard\nproblem, resulted here in throwing away several protections we currently\nhave. And yes, I know you believe 8 MB won't be created immediately. I\ntruly, honestly, do not think so either. But I prefer a system where I\ndon't need to rely on anyone's guesses for the future.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/a2560dc8/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-23T20:50:43",
                "message_text_only": "On Tue, Jun 23, 2015 at 10:26:38PM +0200, Pieter Wuille wrote:\n> On Tue, Jun 23, 2015 at 10:12 PM, Gavin Andresen <gavinandresen at gmail.com>\n> wrote:\n> \n> > On Tue, Jun 23, 2015 at 3:28 PM, Peter Todd <pete at petertodd.org> wrote:\n> >\n> >> Wladimir noted that 'The original presented intention of block size\n> >> increase was a one-time \"scaling\" to grant time for more decentralizing\n> >> solutions to develop'\n> >>\n> >> Comments?\n> >>\n> >\n> > Consensus is that this process is too painful to go through once a year.\n> > I agree.\n> >\n> \n> If you believe we will need to go through this process once a year, we are\n> not talking about a one-time scaling to grant time for more decentralizing\n> solutions. It means you think we should keep scaling. I don't disagree\n> there - as long as we're talking about scaling as availability of\n> bandwidth, storage and processing power increase, there is no reason\n> Bitcoin's blockchain can't grow proportionally.\n> \n> However, an initial bump 8 MB and the growth rate afterwards seem more like\n> a no-effectively-limit-ever to me.\n\nIn particular, note how this bump is being proposed at a time when\nblockchain space demand is so low that transactions usually cost well\nunder a penny each, a insignificant amount of money for almost all\nuse-cases.\n\n> I fear that the wish of not wanting to deal with - admittedly - a very hard\n> problem, resulted here in throwing away several protections we currently\n> have. And yes, I know you believe 8 MB won't be created immediately. I\n> truly, honestly, do not think so either. But I prefer a system where I\n> don't need to rely on anyone's guesses for the future.\n\nIn that regard Jeff Garzik's proposal of a blocksize increase with a\nminer vote feedback mechanism is a huge improvement over Gavin's\nproposal.\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/804e5dbb/attachment.sig>"
            },
            {
                "author": "grarpamp",
                "date": "2015-06-24T06:14:22",
                "message_text_only": "On Tue, Jun 23, 2015 at 4:50 PM, Peter Todd <pete at petertodd.org> wrote:\n> In particular, note how this bump is being proposed at a time when\n> blockchain space demand is so low that transactions usually cost well\n> under a penny each\n\nRecent averages seem to be offering around $0.04...\nhttps://tradeblock.com/blog/bitcoin-network-capacity-analysis-part-2-macro-transaction-trends\nWith various stress tests indicate needing 10x more...\nhttp://www.reddit.com/r/Bitcoin/search?restrict_sr=on&q=stress+test+fees\n\n> a insignificant amount of money for almost all\n> use-cases.\n\nPenny stocks? Voting? Notarizing?\nThere's a whole ecosystem of non-purchase cases\nfor which non-profit-mining fees are enabling."
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-23T20:46:47",
                "message_text_only": "On Tue, Jun 23, 2015 at 04:12:17PM -0400, Gavin Andresen wrote:\n> > In particular, if bandwidth scaling doesn't go according to your plan,\n> > e.g. the exponential exponent is too large, perhaps due to technological\n> > growth not keeping pace, or the political realities of actual bandwidth\n> > deployment making theoretical technological growth irrelevant, what\n> > mechanism will prevent centralization? (if any)\n> \n> \n> Simulations show that:\n> \n> Latency/bandwidth matter for miners.  Low latency, high bandwidth is\n> better. However, miners with bad connectivity can simply create smaller\n> blocks...\n\nPieter Wuille showed with simulations that miners with bad connectivity\nare negatively affected by other miners creating larger blocks.\nSimilarly I showed that with equation-based analysis. I've seen no\nresponse to either argument, and it's a centralization pressure.\n\nNote how propagation times are important enough to miners that they\nalready mine on top of unverified headers from other miners to increase\nprofitability, a grave threat to the security of the Bitcoin network.\n\n> ... until transaction fees become significant.  But by the time that\n> happens, protocol optimizations of block propagation will make the block\n> size an insignificant term in the \"how profitable is it to mine in THIS\n> particular place on the Internet / part of the world\" equation.\n\nThese block propagation improvements are both already implemented (Matt\nCorallo's relay network, p2pool) and require co-operation.\n\nFor instance, notice the recent full-RBF debate where Coinbase said\nthey'd consider getting contracts directly with miners to get\ntransactions they desired mined even when they otherwise would not be\ndue to double-spends. This is one of many scenarios where block\npropagation improvements fail. Thus for a safety engineering\nanalysis we need to talk about worst-case scenarios.\n\nEqually, I don't see any analysis from anyone of that % of non-optimized\ntransactions need to fail for what kind of centralizing pressure.\n\n\nIn any case, this ponts to the need for your proposal to explictly talk\nabout what kind of resources are needed by miners for what kind of\nprofitability, including the case where other miners are sabotaging\ntheir profitability.\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000008c0be16e152f86ab3a271a13c3f41c56228d72990abf7bd\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/97ccb0af/attachment.sig>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-23T21:24:23",
                "message_text_only": "On Tue, Jun 23, 2015 at 4:46 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> Pieter Wuille showed with simulations that miners with bad connectivity\n> are negatively affected by other miners creating larger blocks.\n>\n\n... but the effect is only significant if they have an absurdly\nlow-bandwidth connection and do NOTHING to work around it (like rent a\nserver on the other side of the bandwidth bottleneck and write some code to\nmake sure you're creating blocks that will propagate quickly on both sides\nof the bottleneck).\n\n\nWhy do you think connectivity is a centralizing effect? It is just one\nfactor in the profitability-of-mining equation. A location with bad\nconnectivity (the US, maybe) but 10% cheaper electricity might be just as\ngood as one with great connectivity but more expensive electricity.\n\nHaving lots of variables in the profitability equation is a decentralizing\nforce, it means there is very likely to be several different places in the\nworld / on the net where mining is equally profitable.\n\n\n> ... until transaction fees become significant.  But by the time that\n> > happens, protocol optimizations of block propagation will make the block\n> > size an insignificant term in the \"how profitable is it to mine in THIS\n> > particular place on the Internet / part of the world\" equation.\n>\n> These block propagation improvements are both already implemented (Matt\n> Corallo's relay network, p2pool) and require co-operation.\n>\n\nLong term the p2p protocol will evolve to incorporate those optimizations,\nso will require no co-operation.\n\n\n\n> For instance, notice the recent full-RBF debate where Coinbase said\n> they'd consider getting contracts directly with miners to get\n> transactions they desired mined even when they otherwise would not be\n> due to double-spends. This is one of many scenarios where block\n> propagation improvements fail. Thus for a safety engineering\n> analysis we need to talk about worst-case scenarioss\n\n\n\n> Equally, I don't see any analysis from anyone of that % of non-optimized\n> transactions need to fail for what kind of centralizing pressure.\n>\n> In any case, this ponts to the need for your proposal to explictly talk\n> about what kind of resources are needed by miners for what kind of\n> profitability, including the case where other miners are sabotaging\n> their profitability.\n>\n\nAre you familiar with the terms \"Gish Gallop\" and \"Moving the Goalposts\" ?\n\nI have written quite a lot about the kind of resources needed to run a full\nnode, and have asked you, specifically, several times \"how much do you\nthink is too much\" and received no answer.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/a0f02566/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-26T19:08:07",
                "message_text_only": "On Tue, Jun 23, 2015 at 05:24:23PM -0400, Gavin Andresen wrote:\n> On Tue, Jun 23, 2015 at 4:46 PM, Peter Todd <pete at petertodd.org> wrote:\n> \n> > Pieter Wuille showed with simulations that miners with bad connectivity\n> > are negatively affected by other miners creating larger blocks.\n> >\n> \n> ... but the effect is only significant if they have an absurdly\n> low-bandwidth connection and do NOTHING to work around it (like rent a\n> server on the other side of the bandwidth bottleneck and write some code to\n> make sure you're creating blocks that will propagate quickly on both sides\n> of the bottleneck).\n\n\"Just rent a server\" forces miners into deploying insecure hosted\ninfrastructure that's vulnerable to hacking and seizure; that we\nencourage this already is worrying; requiring it for miners to be\nprofitable isn't acceptable.\n\n> Why do you think connectivity is a centralizing effect? It is just one\n> factor in the profitability-of-mining equation. A location with bad\n> connectivity (the US, maybe) but 10% cheaper electricity might be just as\n> good as one with great connectivity but more expensive electricity.\n\nSee above. The obvious thing to do if connectivity matters is keep your\nhashing in the cheapest possible place and sell that hashing power to\ncentralized miners, an effect we're already seeing. Making this effect\nabout an order of magnitude worse, then doubling the problem every two\nyears is dangerous.\n\n> Having lots of variables in the profitability equation is a decentralizing\n> force, it means there is very likely to be several different places in the\n> world / on the net where mining is equally profitable.\n\nAs mining and hashing can be trivially separated that theory just\ndoesn't work.\n\nAgain, what concretely works against centralization of mining control?\nA proper proposal would discuss this issue, and explain what the\nexpected effect will be.\n\n> > These block propagation improvements are both already implemented (Matt\n> > Corallo's relay network, p2pool) and require co-operation.\n> >\n> \n> Long term the p2p protocol will evolve to incorporate those optimizations,\n> so will require no co-operation.\n\nThe co-operation comes form the fact that mempool policies have to be\nsyncronized, not the protocol itself.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/94de4a1b/attachment.sig>"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-26T22:01:14",
                "message_text_only": "On Fri, Jun 26, 2015 at 3:08 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Tue, Jun 23, 2015 at 05:24:23PM -0400, Gavin Andresen wrote:\n> > On Tue, Jun 23, 2015 at 4:46 PM, Peter Todd <pete at petertodd.org> wrote:\n> >\n> > > Pieter Wuille showed with simulations that miners with bad connectivity\n> > > are negatively affected by other miners creating larger blocks.\n> > >\n> >\n> > ... but the effect is only significant if they have an absurdly\n> > low-bandwidth connection and do NOTHING to work around it (like rent a\n> > server on the other side of the bandwidth bottleneck and write some code\n> to\n> > make sure you're creating blocks that will propagate quickly on both\n> sides\n> > of the bottleneck).\n>\n> \"Just rent a server\" forces miners into deploying insecure hosted\n> infrastructure that's vulnerable to hacking and seizure; that we\n> encourage this already is worrying; requiring it for miners to be\n> profitable isn't acceptable.\n>\n\nThere are a number of factors that contribute to mining vulnerabilities.\nFor example, presuming a miner is a meaningful contributor to the network,\nthey'll be using more electricity than their neighbors and will be easily\nidentifiable in the same way illegal grow-houses are identified by the\nlocal power company working with authorities. A hacked or seized hosted\nserver is far easier to recover from than seized equipment. Its hard to see\nhow requiring a reasonably reliable internet connection is a particularly\nhigh barrier to entry when compared to the other mining requirements, such\nas funds to purchase ASICs, competitive electricity costs, reasonable\nbelief that equipment won't be stolen or seized, the technical knowledge\nfor setting up a p2pool node, etc.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/abe98de7/attachment-0001.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-26T19:25:28",
                "message_text_only": "On Tue, Jun 23, 2015 at 05:24:23PM -0400, Gavin Andresen wrote:\n> > In any case, this ponts to the need for your proposal to explictly talk\n> > about what kind of resources are needed by miners for what kind of\n> > profitability, including the case where other miners are sabotaging\n> > their profitability.\n> >\n> \n> Are you familiar with the terms \"Gish Gallop\" and \"Moving the Goalposts\" ?\n> \n> I have written quite a lot about the kind of resources needed to run a full\n> node, and have asked you, specifically, several times \"how much do you\n> think is too much\" and received no answer.\n\nYou're the one proposing a change here; we're evaluating the safety of\nthat change.\n\nAn analogous situation is imagine we have two islands, with a suspension\nbridge between them. The bridge has just two lanes in either direction,\nso obviously there's a limited amount of traffic that can flow across\nit. It used to be used to little that people would joyride back and\nforth as the toll booths at either end just charged a hundreth of a\npenny per trip, or even not at all, but as demand has been increasing\ntolls are going up as well.\n\nYou've come along with a bold new plan to add fifteen more lanes to that\nbridge by expanding the bridge deck, then hire contractors in advance to\ndouble the number of lanes every two years after that with no clear way\nof terminating their contract if anything goes wrong. (in just over a\ndecade our two lane bridge will be a mile wide!)\n\nOf course, obviously if we add enough lanes the cables holding it up\nwill snap, so we've better carefully analyse the carrying capacity of\nthe brdige and the threats it faces. For instance, earthquakes happen\nevery so often - the last one even snapped a few strands in the main\ncables, which people claim were fixed... but we don't really know for\nsure as a thick layer of paint was quickly slapped over the fix and\nno-one's been able to inspect it.\n\nIt's perfectly reasonable to ask what kind of earthquakes you expect the\nbridge to withstand, as well as peer-reviewed and peer-reproducable\nfigures about the strength of the cables and the weight of the traffic.\nSimilarly, we've got the funds to make a test bridge of the same\ndimensions and see if it collapses. Any bridge widening proposal that\ndoesn't have this data is simply incomplete, end of story.\n\nAs for the other side, the worst that happens if nothing changes is\nusage of this bridge gets proportioned to the most valuable users by the\nsupply and demand toll system. Some people might decide to take the bus\nacross rather than an inefficient individual car, some of the\nadvertising companies running trucks back and forth with billboards on\nthe side are going to stop doing that. But traffic is still going to get\nacross. It's not a politically easy position to be in - there's enormous\npressure to quickly \"do something\" however dangerous - but the actual\neffects of doing nothing are ultimately not a big deal.\n\nIn civil engineering we have enough experience with disasters to know\nthat you can't give into political pressure to do potentially dangerous\nthings until the consequences are well understood; hopefully we'll learn\nthat in the consensus cryptography space before a big disaster rather\nthan after.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/14d87e07/attachment-0001.sig>"
            },
            {
                "author": "Simon Liu",
                "date": "2015-06-26T22:16:15",
                "message_text_only": "If Bitcoin is a $3bn project where stakeholder interests are to be\nsafeguarded, or if Bitcoin is to be compared to a civil engineering\nproject where life and death is at stake, it seems only logical that a\nwell-defined and well-documented process be introduced to properly\nevaluate proposed changes.  Although too late for the block size debate,\nit seems odd that discussion of such a process is often dismissed out of\nhand.\n\nTo maintain the current approach of supermajority consensus, based\naround ingrained wisdom, personal preference and unwritten rules would\nsuggest that Bitcoin is still an experiment, in which case perhaps any\ndecision regarding the block size should be based upon technical merit\nalone rather than economic interest.\n\n--Simon\n\n> You're the one proposing a change here; we're evaluating the safety of\nthat change.\n\n> In civil engineering we have enough experience with disasters to know\n> that you can't give into political pressure to do potentially dangerous\n> things until the consequences are well understood; hopefully we'll learn\n> that in the consensus cryptography space before a big disaster rather\n> than after."
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-27T02:14:47",
                "message_text_only": "It is actually not odd at all that a formal process is dismissed out of \nhand.  It is all about protecting turf and holding on to power.  If \nthere is a well defined process then that takes the power out of the \nhands of the people who have been running the show and making up the \nrules.  In some cases developers see Bitcoin as their \"baby\" and they \nthink they must control it in order to protect it but in doing so they \ncan become an \"overprotective parent.\"  Another problem is that some \npeople in Bitcoin have disdain for the people they need such as \nfinancial, economic, security, and legal experts.  Some think they are \nsmarter than those people because they discovered Bitcoin first and they \nthink their knowledge of Bitcoin means they are also superior in all \nthese other areas.  I have seen some discussions of developers who have \nmet with people from the financial sector and they come out of the \nmeeting with the attitude that all the experts are stupid and that \nBitcoiners have everything figured out.  One developer tried to tell me \nthat you can't do systems engineering in Bitcoin because it involves \nsecurity rather than safety (of course that issue has been well vetted \nand NIST has a whole series of documents to address that very issue \nhttp://csrc.nist.gov/publications/PubsSPs.html).\n\nRuss\n\n\n\n\nOn 6/26/2015 6:16 PM, Simon Liu wrote:\n> If Bitcoin is a $3bn project where stakeholder interests are to be\n> safeguarded, or if Bitcoin is to be compared to a civil engineering\n> project where life and death is at stake, it seems only logical that a\n> well-defined and well-documented process be introduced to properly\n> evaluate proposed changes.  Although too late for the block size debate,\n> it seems odd that discussion of such a process is often dismissed out of\n> hand.\n>\n> To maintain the current approach of supermajority consensus, based\n> around ingrained wisdom, personal preference and unwritten rules would\n> suggest that Bitcoin is still an experiment, in which case perhaps any\n> decision regarding the block size should be based upon technical merit\n> alone rather than economic interest.\n>\n> --Simon\n>\n>> You're the one proposing a change here; we're evaluating the safety of\n> that change.\n>\n>> In civil engineering we have enough experience with disasters to know\n>> that you can't give into political pressure to do potentially dangerous\n>> things until the consequences are well understood; hopefully we'll learn\n>> that in the consensus cryptography space before a big disaster rather\n>> than after.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-23T20:55:40",
                "message_text_only": "> Consensus is that this process is too painful to go through once a year.  I\n> agree.\n> \n> If you disagree and would like to see a Blocksize Council meet once a year\n> to issue a decree on what the maximum block size shall be for the next\n> year, then propose a process for who gets to sit on the Council and how\n> their decrees are enforced.....\n\nWe could just as well say that the increases continue for 20 years, or\nuntil there is concensus to schedule a soft-fork to prevent further\nincrease - whichever comes first.  That is the case already, of\ncourse, since there is no way to prevent a modest supermajority of\nminers from pushing through a soft-fork.  But explicitly accepting the\npossibility that the community might choose to cut the process short\nmight make the BIP more palatable to some.\n\nIt is also the reality: halting the blocksize increase before it hits\nthe final 8GB limit is relatively easy, compared to the task of\nsetting it in motion, so it does no real harm to set the \"20 years\"\nfigure at the upper range of what we think is reasonable - even though\nunder other circumstances one would probably say that extrapolating\nexponentials that far out would be foolhardy...\n\nroy"
            },
            {
                "author": "odinn",
                "date": "2015-06-24T01:43:38",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n1) Hard fork not (necessarily) needed\n2) See Garzik's BIP 100, better (this is not meant to say \"superior to\nyour stuff,\" but rather simply to say, \"Better you should work with\nGarzik to implement BIP-100, that would be good\")\n3) See points 1 and 2 above\n4) If still reading... changes should be (as you seem to have been\ntrying to lean towards)... lean towards gradual change; hence, changes\nthat would flow from this BIP would be better off oriented in a\nprocess that dies not require the \"way you have done it.\"\n\nYou did address that, to be fair - in your TODO, this link:\nhttp://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n\ncontained the following link:\n\nhttp://gavinandresen.ninja/bigger-blocks-another-way\n\nHowever, in reading that, I didn't see any meaningful statements that\nwould refute the approach in Garzik's BIP-100.\n\nMaybe a better way to say this is,\n\nWork with Jeff Garzik (which I am sure you are already having such\ndiscussions in private) as well as the list discussions,\nMove forward on BIP-100 with Garzik and other developers (not such a\nbad plan really) and don't get caught up in XT.  (If you feel you can\ndevelop XT further, that is your thing but it would perhaps make you\nlose focus, work together with other developers.)\n\nRelax into the process.  Things will be ok.\n\nRespectfully,\n\n- -O\n\nOn 06/22/2015 11:18 AM, Gavin Andresen wrote:\n> I promised to write a BIP after I'd implemented \n> increase-the-maximum-block-size code, so here it is. It also lives\n> at: \n> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n>\n>  I don't expect any proposal to please everybody; there are\n> unavoidable tradeoffs to increasing the maximum block size. I\n> prioritize implementation simplicity -- it is hard to write\n> consensus-critical code, so simpler is better.\n> \n> \n> \n> \n> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n> Draft Type: Standards Track Created: 2015-06-22\n> \n> ==Abstract==\n> \n> This BIP proposes replacing the fixed one megabyte maximum block\n> size with a maximum size that grows over time at a predictable\n> rate.\n> \n> ==Motivation==\n> \n> Transaction volume on the Bitcoin network has been growing, and\n> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n> the one megabyte maximum block size. Increasing the maximum size\n> reduces the impact of that limit on Bitcoin adoption and growth.\n> \n> ==Specification==\n> \n> After deployment on the network (see the Deployment section for \n> details), the maximum allowed size of a block on the main network\n> shall be calculated based on the timestamp in the block header.\n> \n> The maximum size shall be 8,000,000 bytes at a timestamp of\n> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n> every 63,072,000 seconds (two years, ignoring leap years), until\n> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n> blocks in between doublings will increase linearly based on the\n> block's timestamp. The maximum size of blocks after 2036-01-06\n> 00:00:00 UTC shall be 8,192,000,000 bytes.\n> \n> Expressed in pseudo-code, using integer math:\n> \n> function max_block_size(block_timestamp):\n> \n> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n> 8000000 if block_timestamp >= time_start+time_double*10 return\n> size_start * 2^10\n> \n> // Piecewise-linear-between-doublings growth: time_delta =\n> block_timestamp - t_start doublings = time_delta / time_double \n> remainder = time_delta % time_double interpolate = (size_start *\n> 2^doublings * remainder) / time_double max_size = size_start *\n> 2^doublings + interpolate\n> \n> return max_size\n> \n> ==Deployment==\n> \n> Deployment shall be controlled by hash-power supermajority vote\n> (similar to the technique used in BIP34), but the earliest possible\n> activation time is 2016-01-11 00:00:00 UTC.\n> \n> Activation is achieved when 750 of 1,000 consecutive blocks in the\n> best chain have a version number with bits 3 and 14 set (0x20000004\n> in hex). The activation time will be the timestamp of the 750'th\n> block plus a two week (1,209,600 second) grace period to give any\n> remaining miners or services time to upgrade to support larger\n> blocks. If a supermajority is achieved more than two weeks before\n> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n> 00:00:00 UTC.\n> \n> Block version numbers are used only for activation; once activation\n> is achieved, the maximum block size shall be as described in the \n> specification section, regardless of the version number of the\n> block.\n> \n> \n> ==Rationale==\n> \n> The initial size of 8,000,000 bytes was chosen after testing the\n> current reference implementation code with larger block sizes and\n> receiving feedback from miners stuck behind bandwidth-constrained\n> networks (in particular, Chinese miners behind the Great Firewall\n> of China).\n> \n> The doubling interval was chosen based on long-term growth trends\n> for CPU power, storage, and Internet bandwidth. The 20-year limit\n> was chosen because exponential growth cannot continue forever.\n> \n> Calculations are based on timestamps and not blockchain height\n> because a timestamp is part of every block's header. This allows\n> implementations to know a block's maximum size after they have\n> downloaded it's header, but before downloading any transactions.\n> \n> The deployment plan is taken from Jeff Garzik's proposed BIP100\n> block size increase, and is designed to give miners, merchants,\n> and full-node-running-end-users sufficient time to upgrade to\n> software that supports bigger blocks. A 75% supermajority was\n> chosen so that one large mining pool does not have effective veto\n> power over a blocksize increase. The version number scheme is\n> designed to be compatible with Pieter's Wuille's proposed \"Version\n> bits\" BIP.\n> \n> TODO: summarize objections/arguments from \n> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n> \n> TODO: describe other proposals and their advantages/disadvantages\n> over this proposal.\n> \n> \n> ==Compatibility==\n> \n> This is a hard-forking change to the Bitcoin protocol; anybody\n> running code that fully validates blocks must upgrade before the\n> activation time or they will risk rejecting a chain containing\n> larger-than-one-megabyte blocks.\n> \n> Simplified Payment Verification software is not affected, unless\n> it makes assumptions about the maximum depth of a transaction's\n> merkle branch based on the minimum size of a transaction and the\n> maximum block size.\n> \n> ==Implementation==\n> \n> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n> \n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n\n- -- \nhttp://abis.io ~\n\"a protocol concept to enable decentralization\nand expansion of a giving economy, and a new social good\"\nhttps://keybase.io/odinn\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\nCrov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\nK2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\nOtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\nfZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\nCgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n=ft62\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "William Madden",
                "date": "2015-06-24T03:05:50",
                "message_text_only": "Here are refutations of the approach in BIP-100 here:\nhttp://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n\nTo recap BIP-100:\n\n1) Hard form to remove static 1MB block size limit\n2) Add new floating block size limit set to 1MB\n3) Historical 32MB message limit remains\n4) Hard form on testnet 9/1/2015\n5) Hard form on main 1/11/2016\n6) 1MB limit changed via one-way lock in upgrade with a 12,000 block\nthreshold by 90% of blocks\n7) Limit increase or decrease may not exceed 2x in any one step\n8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase\nscriptSig, e.g. \"/BV8000000/\" to vote for 8M.\n9) Votes are evaluated by dropping bottom 20% and top 20%, and then the\nmost common floor (minimum) is chosen.\n\n8MB limits doubling just under every 2 years makes a static value grow\nin a predictable manner.\n\nBIP-100 makes a static value grow (or more importantly potentially\nshrink) in an unpredictable manner based on voting mechanics that are\nuntested in this capacity in the bitcoin network.  Introducing a highly\nvariable and untested dynamic into an already complex system is\nunnecessarily risky.\n\nFor example, the largely arbitrary voting rules listed in 9 above can be\ngamed.  If I control pools or have affiliates involved in pools that\nmine slightly more than 20% of blocks, I could wait until block sizes\nare 10MB, and then suddenly vote \"/BV5000000/\" for 20% of blocks and\n\"/BV5000001/\" for the remaining 10%.  If others don't consistently vote\nfor the same \"/BV#/\" value, vote too consistently and have their value\nthrown out as the top 20%, I could win the resize to half capacity\n\"/BV5000001/\" because it was the lowest repeated value not in the bottom\n20%.\n\nI could use this to force an exodus to my sidechain/alt coin, or to\nchoke out the bitcoin network.  A first improvement would be to only let\nBIP-100 raise the cap and not lower it, but if I can think of a\nvulnerability off the top of my head, there will be others on the other\nside of the equation that have not been thought of.  Why bother\nintroducing a rube goldberg machine like voting when a simple 8mb cap\nwith predictable growth gets the job done, potentially permanently?\n\n\nOn 6/23/2015 9:43 PM, odinn wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n> \n> 1) Hard fork not (necessarily) needed\n> 2) See Garzik's BIP 100, better (this is not meant to say \"superior to\n> your stuff,\" but rather simply to say, \"Better you should work with\n> Garzik to implement BIP-100, that would be good\")\n> 3) See points 1 and 2 above\n> 4) If still reading... changes should be (as you seem to have been\n> trying to lean towards)... lean towards gradual change; hence, changes\n> that would flow from this BIP would be better off oriented in a\n> process that dies not require the \"way you have done it.\"\n> \n> You did address that, to be fair - in your TODO, this link:\n> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n> \n> contained the following link:\n> \n> http://gavinandresen.ninja/bigger-blocks-another-way\n> \n> However, in reading that, I didn't see any meaningful statements that\n> would refute the approach in Garzik's BIP-100.\n> \n> Maybe a better way to say this is,\n> \n> Work with Jeff Garzik (which I am sure you are already having such\n> discussions in private) as well as the list discussions,\n> Move forward on BIP-100 with Garzik and other developers (not such a\n> bad plan really) and don't get caught up in XT.  (If you feel you can\n> develop XT further, that is your thing but it would perhaps make you\n> lose focus, work together with other developers.)\n> \n> Relax into the process.  Things will be ok.\n> \n> Respectfully,\n> \n> - -O\n> \n> On 06/22/2015 11:18 AM, Gavin Andresen wrote:\n>> I promised to write a BIP after I'd implemented \n>> increase-the-maximum-block-size code, so here it is. It also lives\n>> at: \n>> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n>>\n>>  I don't expect any proposal to please everybody; there are\n>> unavoidable tradeoffs to increasing the maximum block size. I\n>> prioritize implementation simplicity -- it is hard to write\n>> consensus-critical code, so simpler is better.\n>>\n>>\n>>\n>>\n>> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n>> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n>> Draft Type: Standards Track Created: 2015-06-22\n>>\n>> ==Abstract==\n>>\n>> This BIP proposes replacing the fixed one megabyte maximum block\n>> size with a maximum size that grows over time at a predictable\n>> rate.\n>>\n>> ==Motivation==\n>>\n>> Transaction volume on the Bitcoin network has been growing, and\n>> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n>> the one megabyte maximum block size. Increasing the maximum size\n>> reduces the impact of that limit on Bitcoin adoption and growth.\n>>\n>> ==Specification==\n>>\n>> After deployment on the network (see the Deployment section for \n>> details), the maximum allowed size of a block on the main network\n>> shall be calculated based on the timestamp in the block header.\n>>\n>> The maximum size shall be 8,000,000 bytes at a timestamp of\n>> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n>> every 63,072,000 seconds (two years, ignoring leap years), until\n>> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n>> blocks in between doublings will increase linearly based on the\n>> block's timestamp. The maximum size of blocks after 2036-01-06\n>> 00:00:00 UTC shall be 8,192,000,000 bytes.\n>>\n>> Expressed in pseudo-code, using integer math:\n>>\n>> function max_block_size(block_timestamp):\n>>\n>> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n>> 8000000 if block_timestamp >= time_start+time_double*10 return\n>> size_start * 2^10\n>>\n>> // Piecewise-linear-between-doublings growth: time_delta =\n>> block_timestamp - t_start doublings = time_delta / time_double \n>> remainder = time_delta % time_double interpolate = (size_start *\n>> 2^doublings * remainder) / time_double max_size = size_start *\n>> 2^doublings + interpolate\n>>\n>> return max_size\n>>\n>> ==Deployment==\n>>\n>> Deployment shall be controlled by hash-power supermajority vote\n>> (similar to the technique used in BIP34), but the earliest possible\n>> activation time is 2016-01-11 00:00:00 UTC.\n>>\n>> Activation is achieved when 750 of 1,000 consecutive blocks in the\n>> best chain have a version number with bits 3 and 14 set (0x20000004\n>> in hex). The activation time will be the timestamp of the 750'th\n>> block plus a two week (1,209,600 second) grace period to give any\n>> remaining miners or services time to upgrade to support larger\n>> blocks. If a supermajority is achieved more than two weeks before\n>> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n>> 00:00:00 UTC.\n>>\n>> Block version numbers are used only for activation; once activation\n>> is achieved, the maximum block size shall be as described in the \n>> specification section, regardless of the version number of the\n>> block.\n>>\n>>\n>> ==Rationale==\n>>\n>> The initial size of 8,000,000 bytes was chosen after testing the\n>> current reference implementation code with larger block sizes and\n>> receiving feedback from miners stuck behind bandwidth-constrained\n>> networks (in particular, Chinese miners behind the Great Firewall\n>> of China).\n>>\n>> The doubling interval was chosen based on long-term growth trends\n>> for CPU power, storage, and Internet bandwidth. The 20-year limit\n>> was chosen because exponential growth cannot continue forever.\n>>\n>> Calculations are based on timestamps and not blockchain height\n>> because a timestamp is part of every block's header. This allows\n>> implementations to know a block's maximum size after they have\n>> downloaded it's header, but before downloading any transactions.\n>>\n>> The deployment plan is taken from Jeff Garzik's proposed BIP100\n>> block size increase, and is designed to give miners, merchants,\n>> and full-node-running-end-users sufficient time to upgrade to\n>> software that supports bigger blocks. A 75% supermajority was\n>> chosen so that one large mining pool does not have effective veto\n>> power over a blocksize increase. The version number scheme is\n>> designed to be compatible with Pieter's Wuille's proposed \"Version\n>> bits\" BIP.\n>>\n>> TODO: summarize objections/arguments from \n>> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n>>\n>> TODO: describe other proposals and their advantages/disadvantages\n>> over this proposal.\n>>\n>>\n>> ==Compatibility==\n>>\n>> This is a hard-forking change to the Bitcoin protocol; anybody\n>> running code that fully validates blocks must upgrade before the\n>> activation time or they will risk rejecting a chain containing\n>> larger-than-one-megabyte blocks.\n>>\n>> Simplified Payment Verification software is not affected, unless\n>> it makes assumptions about the maximum depth of a transaction's\n>> merkle branch based on the minimum size of a transaction and the\n>> maximum block size.\n>>\n>> ==Implementation==\n>>\n>> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n>>\n>>\n>>\n>> _______________________________________________ bitcoin-dev mailing\n>> list bitcoin-dev at lists.linuxfoundation.org \n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> \n> - -- \n> http://abis.io ~\n> \"a protocol concept to enable decentralization\n> and expansion of a giving economy, and a new social good\"\n> https://keybase.io/odinn\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n> \n> iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\n> Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\n> K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\n> OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\n> fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\n> CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n> =ft62\n> -----END PGP SIGNATURE-----\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-24T03:49:51",
                "message_text_only": "Miners can collude today to lower the block size limit.\n\nIn fact, this largely happens already out of laziness - miners often follow\nthe \"soft\" default limit set by Bitcoin Core, to the point where you can\nchart when miners upgrade to new software:\nhttp://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block\n\n\n\nOn Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>\nwrote:\n\n> Here are refutations of the approach in BIP-100 here:\n> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>\n> To recap BIP-100:\n>\n> 1) Hard form to remove static 1MB block size limit\n> 2) Add new floating block size limit set to 1MB\n> 3) Historical 32MB message limit remains\n> 4) Hard form on testnet 9/1/2015\n> 5) Hard form on main 1/11/2016\n> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block\n> threshold by 90% of blocks\n> 7) Limit increase or decrease may not exceed 2x in any one step\n> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase\n> scriptSig, e.g. \"/BV8000000/\" to vote for 8M.\n> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the\n> most common floor (minimum) is chosen.\n>\n> 8MB limits doubling just under every 2 years makes a static value grow\n> in a predictable manner.\n>\n> BIP-100 makes a static value grow (or more importantly potentially\n> shrink) in an unpredictable manner based on voting mechanics that are\n> untested in this capacity in the bitcoin network.  Introducing a highly\n> variable and untested dynamic into an already complex system is\n> unnecessarily risky.\n>\n> For example, the largely arbitrary voting rules listed in 9 above can be\n> gamed.  If I control pools or have affiliates involved in pools that\n> mine slightly more than 20% of blocks, I could wait until block sizes\n> are 10MB, and then suddenly vote \"/BV5000000/\" for 20% of blocks and\n> \"/BV5000001/\" for the remaining 10%.  If others don't consistently vote\n> for the same \"/BV#/\" value, vote too consistently and have their value\n> thrown out as the top 20%, I could win the resize to half capacity\n> \"/BV5000001/\" because it was the lowest repeated value not in the bottom\n> 20%.\n>\n> I could use this to force an exodus to my sidechain/alt coin, or to\n> choke out the bitcoin network.  A first improvement would be to only let\n> BIP-100 raise the cap and not lower it, but if I can think of a\n> vulnerability off the top of my head, there will be others on the other\n> side of the equation that have not been thought of.  Why bother\n> introducing a rube goldberg machine like voting when a simple 8mb cap\n> with predictable growth gets the job done, potentially permanently?\n>\n>\n> On 6/23/2015 9:43 PM, odinn wrote:\n> > -----BEGIN PGP SIGNED MESSAGE-----\n> > Hash: SHA1\n> >\n> > 1) Hard fork not (necessarily) needed\n> > 2) See Garzik's BIP 100, better (this is not meant to say \"superior to\n> > your stuff,\" but rather simply to say, \"Better you should work with\n> > Garzik to implement BIP-100, that would be good\")\n> > 3) See points 1 and 2 above\n> > 4) If still reading... changes should be (as you seem to have been\n> > trying to lean towards)... lean towards gradual change; hence, changes\n> > that would flow from this BIP would be better off oriented in a\n> > process that dies not require the \"way you have done it.\"\n> >\n> > You did address that, to be fair - in your TODO, this link:\n> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n> >\n> > contained the following link:\n> >\n> > http://gavinandresen.ninja/bigger-blocks-another-way\n> >\n> > However, in reading that, I didn't see any meaningful statements that\n> > would refute the approach in Garzik's BIP-100.\n> >\n> > Maybe a better way to say this is,\n> >\n> > Work with Jeff Garzik (which I am sure you are already having such\n> > discussions in private) as well as the list discussions,\n> > Move forward on BIP-100 with Garzik and other developers (not such a\n> > bad plan really) and don't get caught up in XT.  (If you feel you can\n> > develop XT further, that is your thing but it would perhaps make you\n> > lose focus, work together with other developers.)\n> >\n> > Relax into the process.  Things will be ok.\n> >\n> > Respectfully,\n> >\n> > - -O\n> >\n> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:\n> >> I promised to write a BIP after I'd implemented\n> >> increase-the-maximum-block-size code, so here it is. It also lives\n> >> at:\n> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n> >>\n> >>  I don't expect any proposal to please everybody; there are\n> >> unavoidable tradeoffs to increasing the maximum block size. I\n> >> prioritize implementation simplicity -- it is hard to write\n> >> consensus-critical code, so simpler is better.\n> >>\n> >>\n> >>\n> >>\n> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n> >> Draft Type: Standards Track Created: 2015-06-22\n> >>\n> >> ==Abstract==\n> >>\n> >> This BIP proposes replacing the fixed one megabyte maximum block\n> >> size with a maximum size that grows over time at a predictable\n> >> rate.\n> >>\n> >> ==Motivation==\n> >>\n> >> Transaction volume on the Bitcoin network has been growing, and\n> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n> >> the one megabyte maximum block size. Increasing the maximum size\n> >> reduces the impact of that limit on Bitcoin adoption and growth.\n> >>\n> >> ==Specification==\n> >>\n> >> After deployment on the network (see the Deployment section for\n> >> details), the maximum allowed size of a block on the main network\n> >> shall be calculated based on the timestamp in the block header.\n> >>\n> >> The maximum size shall be 8,000,000 bytes at a timestamp of\n> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n> >> every 63,072,000 seconds (two years, ignoring leap years), until\n> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n> >> blocks in between doublings will increase linearly based on the\n> >> block's timestamp. The maximum size of blocks after 2036-01-06\n> >> 00:00:00 UTC shall be 8,192,000,000 bytes.\n> >>\n> >> Expressed in pseudo-code, using integer math:\n> >>\n> >> function max_block_size(block_timestamp):\n> >>\n> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n> >> 8000000 if block_timestamp >= time_start+time_double*10 return\n> >> size_start * 2^10\n> >>\n> >> // Piecewise-linear-between-doublings growth: time_delta =\n> >> block_timestamp - t_start doublings = time_delta / time_double\n> >> remainder = time_delta % time_double interpolate = (size_start *\n> >> 2^doublings * remainder) / time_double max_size = size_start *\n> >> 2^doublings + interpolate\n> >>\n> >> return max_size\n> >>\n> >> ==Deployment==\n> >>\n> >> Deployment shall be controlled by hash-power supermajority vote\n> >> (similar to the technique used in BIP34), but the earliest possible\n> >> activation time is 2016-01-11 00:00:00 UTC.\n> >>\n> >> Activation is achieved when 750 of 1,000 consecutive blocks in the\n> >> best chain have a version number with bits 3 and 14 set (0x20000004\n> >> in hex). The activation time will be the timestamp of the 750'th\n> >> block plus a two week (1,209,600 second) grace period to give any\n> >> remaining miners or services time to upgrade to support larger\n> >> blocks. If a supermajority is achieved more than two weeks before\n> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n> >> 00:00:00 UTC.\n> >>\n> >> Block version numbers are used only for activation; once activation\n> >> is achieved, the maximum block size shall be as described in the\n> >> specification section, regardless of the version number of the\n> >> block.\n> >>\n> >>\n> >> ==Rationale==\n> >>\n> >> The initial size of 8,000,000 bytes was chosen after testing the\n> >> current reference implementation code with larger block sizes and\n> >> receiving feedback from miners stuck behind bandwidth-constrained\n> >> networks (in particular, Chinese miners behind the Great Firewall\n> >> of China).\n> >>\n> >> The doubling interval was chosen based on long-term growth trends\n> >> for CPU power, storage, and Internet bandwidth. The 20-year limit\n> >> was chosen because exponential growth cannot continue forever.\n> >>\n> >> Calculations are based on timestamps and not blockchain height\n> >> because a timestamp is part of every block's header. This allows\n> >> implementations to know a block's maximum size after they have\n> >> downloaded it's header, but before downloading any transactions.\n> >>\n> >> The deployment plan is taken from Jeff Garzik's proposed BIP100\n> >> block size increase, and is designed to give miners, merchants,\n> >> and full-node-running-end-users sufficient time to upgrade to\n> >> software that supports bigger blocks. A 75% supermajority was\n> >> chosen so that one large mining pool does not have effective veto\n> >> power over a blocksize increase. The version number scheme is\n> >> designed to be compatible with Pieter's Wuille's proposed \"Version\n> >> bits\" BIP.\n> >>\n> >> TODO: summarize objections/arguments from\n> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n> >>\n> >> TODO: describe other proposals and their advantages/disadvantages\n> >> over this proposal.\n> >>\n> >>\n> >> ==Compatibility==\n> >>\n> >> This is a hard-forking change to the Bitcoin protocol; anybody\n> >> running code that fully validates blocks must upgrade before the\n> >> activation time or they will risk rejecting a chain containing\n> >> larger-than-one-megabyte blocks.\n> >>\n> >> Simplified Payment Verification software is not affected, unless\n> >> it makes assumptions about the maximum depth of a transaction's\n> >> merkle branch based on the minimum size of a transaction and the\n> >> maximum block size.\n> >>\n> >> ==Implementation==\n> >>\n> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n> >>\n> >>\n> >>\n> >> _______________________________________________ bitcoin-dev mailing\n> >> list bitcoin-dev at lists.linuxfoundation.org\n> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>\n> >\n> > - --\n> > http://abis.io ~\n> > \"a protocol concept to enable decentralization\n> > and expansion of a giving economy, and a new social good\"\n> > https://keybase.io/odinn\n> > -----BEGIN PGP SIGNATURE-----\n> > Version: GnuPG v1\n> >\n> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\n> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\n> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\n> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\n> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\n> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n> > =ft62\n> > -----END PGP SIGNATURE-----\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/a3e483fb/attachment-0001.html>"
            },
            {
                "author": "Will",
                "date": "2015-06-24T13:06:40",
                "message_text_only": "Yes, but with a key distinction.   Today miners may collude to (or unintentionally) lower the block size limit for blocks they win.  BIP-100 introduces the possibility of lowering the block size limit for everyone over the next 12,000 blocks.\n\nAnother gap involves laziness.  What is a far more likely issue is not a conspiracy but that miners will be lazy and hard code their vote values, requiring arm twisting later to change them.  Preventing this headache introduces the need for more complexity, either by making the default a non-vote (which makes it easier to game the system with less voting power), or by making the default vote = MAX_BLOCK_SIZE * 1.09 (which makes the default similar is to Gavin's proposal).\n\nI think with a default vote that is ~9% larger than the previous max block size and no option to lower the max block size then BIP-100 could work without added risk or defeating the intended purpose.  Still, one has to ask if the benefit is there to justify the additional moving parts.\n\n> On Jun 23, 2015, at 11:49 PM, Jeff Garzik <jgarzik at gmail.com> wrote:\n> \n> Miners can collude today to lower the block size limit.\n> \n> In fact, this largely happens already out of laziness - miners often follow the \"soft\" default limit set by Bitcoin Core, to the point where you can chart when miners upgrade to new software: http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block\n> \n> \n> \n>> On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com> wrote:\n>> Here are refutations of the approach in BIP-100 here:\n>> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>> \n>> To recap BIP-100:\n>> \n>> 1) Hard form to remove static 1MB block size limit\n>> 2) Add new floating block size limit set to 1MB\n>> 3) Historical 32MB message limit remains\n>> 4) Hard form on testnet 9/1/2015\n>> 5) Hard form on main 1/11/2016\n>> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block\n>> threshold by 90% of blocks\n>> 7) Limit increase or decrease may not exceed 2x in any one step\n>> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase\n>> scriptSig, e.g. \"/BV8000000/\" to vote for 8M.\n>> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the\n>> most common floor (minimum) is chosen.\n>> \n>> 8MB limits doubling just under every 2 years makes a static value grow\n>> in a predictable manner.\n>> \n>> BIP-100 makes a static value grow (or more importantly potentially\n>> shrink) in an unpredictable manner based on voting mechanics that are\n>> untested in this capacity in the bitcoin network.  Introducing a highly\n>> variable and untested dynamic into an already complex system is\n>> unnecessarily risky.\n>> \n>> For example, the largely arbitrary voting rules listed in 9 above can be\n>> gamed.  If I control pools or have affiliates involved in pools that\n>> mine slightly more than 20% of blocks, I could wait until block sizes\n>> are 10MB, and then suddenly vote \"/BV5000000/\" for 20% of blocks and\n>> \"/BV5000001/\" for the remaining 10%.  If others don't consistently vote\n>> for the same \"/BV#/\" value, vote too consistently and have their value\n>> thrown out as the top 20%, I could win the resize to half capacity\n>> \"/BV5000001/\" because it was the lowest repeated value not in the bottom\n>> 20%.\n>> \n>> I could use this to force an exodus to my sidechain/alt coin, or to\n>> choke out the bitcoin network.  A first improvement would be to only let\n>> BIP-100 raise the cap and not lower it, but if I can think of a\n>> vulnerability off the top of my head, there will be others on the other\n>> side of the equation that have not been thought of.  Why bother\n>> introducing a rube goldberg machine like voting when a simple 8mb cap\n>> with predictable growth gets the job done, potentially permanently?\n>> \n>> \n>> On 6/23/2015 9:43 PM, odinn wrote:\n>> > -----BEGIN PGP SIGNED MESSAGE-----\n>> > Hash: SHA1\n>> >\n>> > 1) Hard fork not (necessarily) needed\n>> > 2) See Garzik's BIP 100, better (this is not meant to say \"superior to\n>> > your stuff,\" but rather simply to say, \"Better you should work with\n>> > Garzik to implement BIP-100, that would be good\")\n>> > 3) See points 1 and 2 above\n>> > 4) If still reading... changes should be (as you seem to have been\n>> > trying to lean towards)... lean towards gradual change; hence, changes\n>> > that would flow from this BIP would be better off oriented in a\n>> > process that dies not require the \"way you have done it.\"\n>> >\n>> > You did address that, to be fair - in your TODO, this link:\n>> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n>> >\n>> > contained the following link:\n>> >\n>> > http://gavinandresen.ninja/bigger-blocks-another-way\n>> >\n>> > However, in reading that, I didn't see any meaningful statements that\n>> > would refute the approach in Garzik's BIP-100.\n>> >\n>> > Maybe a better way to say this is,\n>> >\n>> > Work with Jeff Garzik (which I am sure you are already having such\n>> > discussions in private) as well as the list discussions,\n>> > Move forward on BIP-100 with Garzik and other developers (not such a\n>> > bad plan really) and don't get caught up in XT.  (If you feel you can\n>> > develop XT further, that is your thing but it would perhaps make you\n>> > lose focus, work together with other developers.)\n>> >\n>> > Relax into the process.  Things will be ok.\n>> >\n>> > Respectfully,\n>> >\n>> > - -O\n>> >\n>> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:\n>> >> I promised to write a BIP after I'd implemented\n>> >> increase-the-maximum-block-size code, so here it is. It also lives\n>> >> at:\n>> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n>> >>\n>> >>  I don't expect any proposal to please everybody; there are\n>> >> unavoidable tradeoffs to increasing the maximum block size. I\n>> >> prioritize implementation simplicity -- it is hard to write\n>> >> consensus-critical code, so simpler is better.\n>> >>\n>> >>\n>> >>\n>> >>\n>> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n>> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n>> >> Draft Type: Standards Track Created: 2015-06-22\n>> >>\n>> >> ==Abstract==\n>> >>\n>> >> This BIP proposes replacing the fixed one megabyte maximum block\n>> >> size with a maximum size that grows over time at a predictable\n>> >> rate.\n>> >>\n>> >> ==Motivation==\n>> >>\n>> >> Transaction volume on the Bitcoin network has been growing, and\n>> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n>> >> the one megabyte maximum block size. Increasing the maximum size\n>> >> reduces the impact of that limit on Bitcoin adoption and growth.\n>> >>\n>> >> ==Specification==\n>> >>\n>> >> After deployment on the network (see the Deployment section for\n>> >> details), the maximum allowed size of a block on the main network\n>> >> shall be calculated based on the timestamp in the block header.\n>> >>\n>> >> The maximum size shall be 8,000,000 bytes at a timestamp of\n>> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n>> >> every 63,072,000 seconds (two years, ignoring leap years), until\n>> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n>> >> blocks in between doublings will increase linearly based on the\n>> >> block's timestamp. The maximum size of blocks after 2036-01-06\n>> >> 00:00:00 UTC shall be 8,192,000,000 bytes.\n>> >>\n>> >> Expressed in pseudo-code, using integer math:\n>> >>\n>> >> function max_block_size(block_timestamp):\n>> >>\n>> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n>> >> 8000000 if block_timestamp >= time_start+time_double*10 return\n>> >> size_start * 2^10\n>> >>\n>> >> // Piecewise-linear-between-doublings growth: time_delta =\n>> >> block_timestamp - t_start doublings = time_delta / time_double\n>> >> remainder = time_delta % time_double interpolate = (size_start *\n>> >> 2^doublings * remainder) / time_double max_size = size_start *\n>> >> 2^doublings + interpolate\n>> >>\n>> >> return max_size\n>> >>\n>> >> ==Deployment==\n>> >>\n>> >> Deployment shall be controlled by hash-power supermajority vote\n>> >> (similar to the technique used in BIP34), but the earliest possible\n>> >> activation time is 2016-01-11 00:00:00 UTC.\n>> >>\n>> >> Activation is achieved when 750 of 1,000 consecutive blocks in the\n>> >> best chain have a version number with bits 3 and 14 set (0x20000004\n>> >> in hex). The activation time will be the timestamp of the 750'th\n>> >> block plus a two week (1,209,600 second) grace period to give any\n>> >> remaining miners or services time to upgrade to support larger\n>> >> blocks. If a supermajority is achieved more than two weeks before\n>> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n>> >> 00:00:00 UTC.\n>> >>\n>> >> Block version numbers are used only for activation; once activation\n>> >> is achieved, the maximum block size shall be as described in the\n>> >> specification section, regardless of the version number of the\n>> >> block.\n>> >>\n>> >>\n>> >> ==Rationale==\n>> >>\n>> >> The initial size of 8,000,000 bytes was chosen after testing the\n>> >> current reference implementation code with larger block sizes and\n>> >> receiving feedback from miners stuck behind bandwidth-constrained\n>> >> networks (in particular, Chinese miners behind the Great Firewall\n>> >> of China).\n>> >>\n>> >> The doubling interval was chosen based on long-term growth trends\n>> >> for CPU power, storage, and Internet bandwidth. The 20-year limit\n>> >> was chosen because exponential growth cannot continue forever.\n>> >>\n>> >> Calculations are based on timestamps and not blockchain height\n>> >> because a timestamp is part of every block's header. This allows\n>> >> implementations to know a block's maximum size after they have\n>> >> downloaded it's header, but before downloading any transactions.\n>> >>\n>> >> The deployment plan is taken from Jeff Garzik's proposed BIP100\n>> >> block size increase, and is designed to give miners, merchants,\n>> >> and full-node-running-end-users sufficient time to upgrade to\n>> >> software that supports bigger blocks. A 75% supermajority was\n>> >> chosen so that one large mining pool does not have effective veto\n>> >> power over a blocksize increase. The version number scheme is\n>> >> designed to be compatible with Pieter's Wuille's proposed \"Version\n>> >> bits\" BIP.\n>> >>\n>> >> TODO: summarize objections/arguments from\n>> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n>> >>\n>> >> TODO: describe other proposals and their advantages/disadvantages\n>> >> over this proposal.\n>> >>\n>> >>\n>> >> ==Compatibility==\n>> >>\n>> >> This is a hard-forking change to the Bitcoin protocol; anybody\n>> >> running code that fully validates blocks must upgrade before the\n>> >> activation time or they will risk rejecting a chain containing\n>> >> larger-than-one-megabyte blocks.\n>> >>\n>> >> Simplified Payment Verification software is not affected, unless\n>> >> it makes assumptions about the maximum depth of a transaction's\n>> >> merkle branch based on the minimum size of a transaction and the\n>> >> maximum block size.\n>> >>\n>> >> ==Implementation==\n>> >>\n>> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n>> >>\n>> >>\n>> >>\n>> >> _______________________________________________ bitcoin-dev mailing\n>> >> list bitcoin-dev at lists.linuxfoundation.org\n>> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >>\n>> >\n>> > - --\n>> > http://abis.io ~\n>> > \"a protocol concept to enable decentralization\n>> > and expansion of a giving economy, and a new social good\"\n>> > https://keybase.io/odinn\n>> > -----BEGIN PGP SIGNATURE-----\n>> > Version: GnuPG v1\n>> >\n>> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\n>> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\n>> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\n>> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\n>> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\n>> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n>> > =ft62\n>> > -----END PGP SIGNATURE-----\n>> > _______________________________________________\n>> > bitcoin-dev mailing list\n>> > bitcoin-dev at lists.linuxfoundation.org\n>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/cc0ad835/attachment-0001.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-24T13:44:13",
                "message_text_only": "This BIP has been assigned number 101 by the BIP editor. I plan on filling\nin the TODOs and will submit it as a pull request to the BIP repository\ntoday.\n\n> Title: Increase Maximum Block Size\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/b7442be1/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-25T00:32:33",
                "message_text_only": "Dear Gavin,\n\nThank you for your kind consideration and for working within the\nestablished BIP process.\n\nhttp://cointelegraph.com/news/114657/chinese-mining-pools-call-for-consensus-refuse-switch-to-bitcoin-xt\n\np.\n\n\nOn Wed, Jun 24, 2015 at 9:44 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> This BIP has been assigned number 101 by the BIP editor. I plan on filling\n> in the TODOs and will submit it as a pull request to the BIP repository\n> today.\n>\n> > Title: Increase Maximum Block Size\n>\n> --\n> --\n> Gavin Andresen\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/74e70804/attachment.html>"
            },
            {
                "author": "Gareth Williams",
                "date": "2015-06-25T13:50:41",
                "message_text_only": "On 24 June 2015 1:49:51 PM AEST, Jeff Garzik <jgarzik at gmail.com> wrote:\n>Miners can collude today to lower the block size limit.\n\nOf course they can. What, then, is the need for BIP100's hard-limit voting mechanism?\n\nYou only need consensus rules to enforce block size limits if you're enforcing them _against_ miners. Which may be a perfectly valid thing to do (if your threat model includes, for example, the possibility that large miners deliberately create large blocks to gain an advantage over small miners.) But BIP100 doesn't address that anyway. \n\nWouldn't it be safer for consensus to get behind Gavin's simpler 8MB->8GB hard-limit growth curve*, and then encourage miners to enforce a soft limit below that, agreed through a voting mechanism? The later can be implemented at any time without consensus changes -- nobody can prevent miners from coordinating the max block size they'll build on anyway.\n\n* but with a safer \"supermajority\" than 75% please :)\n-- \nSent from my Android device with K-9 Mail. Please excuse my brevity."
            },
            {
                "author": "Adam Back",
                "date": "2015-06-25T14:07:59",
                "message_text_only": "Note Jeff's proposal and Greg Maxwell's flexcap proposals also have a\ngrowth limiter as a hard-cap and a mechanism for influencing a dynamic\ncap within that envelope.\n\nThe hard-cap serves the purpose of a safety limit in case our\nunderstanding about the economics, incentives or game-theory is wrong\nworst case.\n\nMore comments to follow.\n\nAdam\n\n\nOn 25 June 2015 at 15:50, Gareth Williams <gacrux at gmail.com> wrote:\n> On 24 June 2015 1:49:51 PM AEST, Jeff Garzik <jgarzik at gmail.com> wrote:\n>>Miners can collude today to lower the block size limit.\n>\n> Of course they can. What, then, is the need for BIP100's hard-limit voting mechanism?\n>\n> You only need consensus rules to enforce block size limits if you're enforcing them _against_ miners. Which may be a perfectly valid thing to do (if your threat model includes, for example, the possibility that large miners deliberately create large blocks to gain an advantage over small miners.) But BIP100 doesn't address that anyway.\n>\n> Wouldn't it be safer for consensus to get behind Gavin's simpler 8MB->8GB hard-limit growth curve*, and then encourage miners to enforce a soft limit below that, agreed through a voting mechanism? The later can be implemented at any time without consensus changes -- nobody can prevent miners from coordinating the max block size they'll build on anyway.\n>\n> * but with a safer \"supermajority\" than 75% please :)\n> --\n> Sent from my Android device with K-9 Mail. Please excuse my brevity.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-26T13:47:24",
                "message_text_only": "On Thu, Jun 25, 2015 at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:\n\n> The hard-cap serves the purpose of a safety limit in case our\n> understanding about the economics, incentives or game-theory is wrong\n> worst case.\n>\n\nTrue.\n\nBIP 100 and 101 could be combined.  Would that increase consensus?\n\n- Miner vote threshold reached\n- Wait notice period or until earliest start time\n- Block size default target set to 1 MB\n- Soft limit set to 1MB\n- Hard limit set to 8MB + double every 2 years\n- Miner vote to decide soft limit (lowest size ignoring bottom 20% but 1MB\nminimum)\n\nBlock size updates could be aligned with the difficulty setting and based\non the last 2016 blocks.\n\nMiners could leave the 1MB limit in place initially.  The vote is to get\nthe option to increase the block size.\n\nLegacy clients would remain in the network until >80% of miners vote to\nraise the limit and a miner produces a >1MB block.\n\nIf the growth rate over-estimates hardware improvements, the devs could add\na limit into the core client.  If they give notice and enough users update,\nthen miners would have to accept it.\n\nThe block size becomes min(miner's vote, core devs).  Even if 4 years\nnotice is given, blocks would only be 4X optimal.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/03a1d7e6/attachment.html>"
            },
            {
                "author": "Will",
                "date": "2015-06-26T15:13:38",
                "message_text_only": "Make the default soft vote = to previous max block size * 1.09 every 12k (or whatever mirrors the hard cap growth rate) and don't allow voting to lower the soft limit and I think you have something.\n\nYou need a default that grows because most miners are lazy and will do squirrelly things like hard code 8000000 as their vote permanently.  \n\nMake the lazy miners' default choice grow at the hard cap growth rate and you should be ok if you want voting.\n\n> On Jun 26, 2015, at 9:47 AM, Tier Nolan <tier.nolan at gmail.com> wrote:\n> \n>> On Thu, Jun 25, 2015 at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:\n>> The hard-cap serves the purpose of a safety limit in case our\n>> understanding about the economics, incentives or game-theory is wrong\n>> worst case.\n> \n> True.\n> \n> BIP 100 and 101 could be combined.  Would that increase consensus?\n> \n> - Miner vote threshold reached\n> - Wait notice period or until earliest start time\n> - Block size default target set to 1 MB\n> - Soft limit set to 1MB\n> - Hard limit set to 8MB + double every 2 years\n> - Miner vote to decide soft limit (lowest size ignoring bottom 20% but 1MB minimum)\n> \n> Block size updates could be aligned with the difficulty setting and based on the last 2016 blocks.\n> \n> Miners could leave the 1MB limit in place initially.  The vote is to get the option to increase the block size.\n> \n> Legacy clients would remain in the network until >80% of miners vote to raise the limit and a miner produces a >1MB block.\n> \n> If the growth rate over-estimates hardware improvements, the devs could add a limit into the core client.  If they give notice and enough users update, then miners would have to accept it.\n> \n> The block size becomes min(miner's vote, core devs).  Even if 4 years notice is given, blocks would only be 4X optimal.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/14ba600c/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-26T17:39:58",
                "message_text_only": "On Fri, Jun 26, 2015 at 11:13 AM, Will <will.madden at novauri.com> wrote:\n\n> Make the lazy miners' default choice grow at the hard cap growth rate and\n> you should be ok if you want voting.\n\n\nI think the default block size is an orthogonal issue to the max block size.\n\nHOWEVER: I think changing the default 'target' block size from the current,\nfixed 750K to the average of the size of the last N blocks would have some\nnice properties. It is policy-neutral (we should get out of the business of\ndeciding the right block size and let the miners who care drive block size\nup or down) and if there are a significant proportion of lazy miners going\nwith defaults it gives the system a healthy \"fee pressure.\"\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/03235a77/attachment.html>"
            },
            {
                "author": "Will",
                "date": "2015-06-26T19:07:30",
                "message_text_only": "Moving averages have upsides and downsides vs fixed growth.  Moving averages are backwards looking and don't handle seasonalities or unanticipated increases in demand very well.\n\nThink \"Black Friday\" or the horribly named \"Cyber \nMonday\" in retail or market hysteria where millions of noobs jump into or out of bitcoin.\n\nIf you want to create fee pressure I think this can be done, but I would keep both of these in mind before choosing a value for N.  Adjustments would need to be frequent and nimble enough to handle seasonalities and other unanticipated outliers.\n\n> On Jun 26, 2015, at 1:39 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> \n>> On Fri, Jun 26, 2015 at 11:13 AM, Will <will.madden at novauri.com> wrote:\n>> Make the lazy miners' default choice grow at the hard cap growth rate and you should be ok if you want voting.\n> \n> I think the default block size is an orthogonal issue to the max block size.\n> \n> HOWEVER: I think changing the default 'target' block size from the current, fixed 750K to the average of the size of the last N blocks would have some nice properties. It is policy-neutral (we should get out of the business of deciding the right block size and let the miners who care drive block size up or down) and if there are a significant proportion of lazy miners going with defaults it gives the system a healthy \"fee pressure.\"\n> \n> -- \n> --\n> Gavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/7bb2f08e/attachment-0001.html>"
            },
            {
                "author": "Carsten Otto",
                "date": "2015-06-26T21:07:42",
                "message_text_only": "Dear all,\n\nOn Mon, Jun 22, 2015 at 02:18:19PM -0400, Gavin Andresen wrote:\n> I promised to write a BIP after I'd implemented\n> increase-the-maximum-block-size code, so here it is. It also lives at:\n> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n\nThe URL is dead, and the BIP moved here:\nhttps://github.com/gavinandresen/bips/blob/blocksize/bip-0101.mediawiki\n\nCorresponding Pull Request:\nhttps://github.com/bitcoin/bips/pull/163/\n\nBest regards,\nDr. Carsten Otto\n-- \nandrena objects ag\nB\u00fcro Frankfurt\nClemensstr. 8\n60487 Frankfurt\n\nTel: +49 (0) 69 977 860 38\nFax: +49 (0) 69 977 860 39\nhttp://www.andrena.de\n\nVorstand: Hagen Buchwald, Matthias Grund, Dr. Dieter Kuhn\nAufsichtsratsvorsitzender: Rolf Hetzelberger\n\nSitz der Gesellschaft: Karlsruhe\nAmtsgericht Mannheim, HRB 109694\nUSt-IdNr. DE174314824\n\nBitte beachten Sie auch unsere anstehenden Veranstaltungen:\nhttp://www.andrena.de/events\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 181 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/610fc0e7/attachment.sig>"
            },
            {
                "author": "Jean-Paul Kogelman",
                "date": "2015-06-22T19:32:22",
                "message_text_only": "On Jun 22, 2015, at 11:18 AM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n\nThe maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000 seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of blocks in between doublings will increase linearly based on the block's timestamp. The maximum size of blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.\n\u00a0\nSince it's possible that block timestamps aren't chronological in order, what would happen if a block following a size increase trigger is back in the past before the size increase? Would that block have a lower size restriction again? Would using block height not be a more stable number to work with?\n\njp\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/2b279abf/attachment.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-22T20:43:41",
                "message_text_only": "On Mon, Jun 22, 2015 at 8:32 PM, Jean-Paul Kogelman <jeanpaulkogelman at me.com\n> wrote:\n\n>\n> Since it's possible that block timestamps aren't chronological in order,\n> what would happen if a block following a size increase trigger is back in\n> the past before the size increase? Would that block have a lower size\n> restriction again? Would using block height not be a more stable number to\n> work with?\n>\n\nThe activation or not rule is purely timestamp based.  Blocks with a\ntimestamp less than 1452470400 have a limit of 1MB.  There could be an 8MB\nblock followed by a block that is limited to 1MB.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/2fbf6432/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-22T20:54:21",
                "message_text_only": "On Mon, Jun 22, 2015 at 07:32:22PM +0000, Jean-Paul Kogelman wrote:\n> \n> \n> On Jun 22, 2015, at 11:18 AM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> \n> The maximum size shall be 8,000,000 bytes at a timestamp of 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double every 63,072,000 seconds (two years, ignoring leap years), until 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of blocks in between doublings will increase linearly based on the block's timestamp. The maximum size of blocks after 2036-01-06 00:00:00 UTC shall be 8,192,000,000 bytes.\n> \u00a0\n> Since it's possible that block timestamps aren't chronological in order, what would happen if a block following a size increase trigger is back in the past before the size increase? Would that block have a lower size restriction again? Would using block height not be a more stable number to work with?\n\nIn the nVersion bits proposal that I co-authored we solved that issue by\ncomparing the timestamp against the median time, which is guaranteed by\nthe protocol rules to monotonically advance.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000138b2613c026e0ed1dbf6f8f193f1c3115bdf540dc22fbf6\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/0f5603a7/attachment.sig>"
            },
            {
                "author": "Stephen Morse",
                "date": "2015-06-22T21:04:59",
                "message_text_only": "> In the nVersion bits proposal that I co-authored we solved that issue by\n> comparing the timestamp against the median time, which is guaranteed by\n> the protocol rules to monotonically advance.\n>\n\nI'm also a fan of using the median time to ensure that there is a clear\npoint where the protocol change starts. Something like \"blocks only allow\nthe larger block size if the associate pindex has pindex->GetMedianTimePast()\nafter midnight 11 Jan 2016 and where a supermajority showing support for\nthe fork has previously been reached\".\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/98a3b24f/attachment.html>"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-22T21:32:15",
                "message_text_only": "Potentially daft question, why not use a minimum height? Yes, it's \nimprecise, but over an extended period of time they're good enough IMHO.\n\nI'd have to do more careful calculations to confirm, but block 388,000 \nshould be about right as a minimum.\n\nRoss\n\nOn 22/06/2015 22:04, Stephen Morse wrote:\n>\n>     In the nVersion bits proposal that I co-authored we solved that\n>     issue by\n>     comparing the timestamp against the median time, which is\n>     guaranteed by\n>     the protocol rules to monotonically advance.\n>\n>\n> I'm also a fan of using the median time to ensure that there is a \n> clear point where the protocol change starts. Something like \"blocks \n> only allow the larger block size if the associate pindex has \n> pindex->GetMedianTimePast() after midnight 11 Jan 2016 and where a \n> supermajority showing support for the fork has previously been reached\".\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/b29ea6b5/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-22T21:21:40",
                "message_text_only": "On Mon, Jun 22, 2015 at 4:54 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> > Since it's possible that block timestamps aren't chronological in order,\n> what would happen if a block following a size increase trigger is back in\n> the past before the size increase? Would that block have a lower size\n> restriction again? Would using block height not be a more stable number to\n> work with?\n>\n> In the nVersion bits proposal that I co-authored we solved that issue by\n> comparing the timestamp against the median time, which is guaranteed by\n> the protocol rules to monotonically advance.\n>\n\nThat complicates the implementation quite a bit.\n\nI mostly implemented a variant that replaced the MAX_BLOCK_SIZE constant\nwith a function that took both a timestamp and a block height, and there\nare several places in the current reference implementation where digging\nout the block height (or, worse, calculating the median timestamp for the\nblock) would involve changing quite a few functions in the call-chain or\nacquiring the cs_main lock to consult the current best chain.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/1bd8ad59/attachment.html>"
            },
            {
                "author": "Patrick Strateman",
                "date": "2015-06-22T21:39:07",
                "message_text_only": "If you truly have a consensus then the rational behavior is to\npermanently change the nodes behavior after the trigger.\n\nOn 06/22/2015 02:21 PM, Gavin Andresen wrote:\n> On Mon, Jun 22, 2015 at 4:54 PM, Peter Todd <pete at petertodd.org\n> <mailto:pete at petertodd.org>> wrote:\n>\n>     > Since it's possible that block timestamps aren't chronological\n>     in order, what would happen if a block following a size increase\n>     trigger is back in the past before the size increase? Would that\n>     block have a lower size restriction again? Would using block\n>     height not be a more stable number to work with?\n>\n>     In the nVersion bits proposal that I co-authored we solved that\n>     issue by\n>     comparing the timestamp against the median time, which is\n>     guaranteed by\n>     the protocol rules to monotonically advance.\n>\n>\n> That complicates the implementation quite a bit.\n>\n> I mostly implemented a variant that replaced the MAX_BLOCK_SIZE\n> constant with a function that took both a timestamp and a block\n> height, and there are several places in the current reference\n> implementation where digging out the block height (or, worse,\n> calculating the median timestamp for the block) would involve changing\n> quite a few functions in the call-chain or acquiring the cs_main lock\n> to consult the current best chain.\n>\n> -- \n> --\n> Gavin Andresen\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/7494ff4d/attachment-0001.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-22T21:48:01",
                "message_text_only": "On Mon, Jun 22, 2015 at 10:21 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> That complicates the implementation quite a bit.\n>\n\nI think trying to keep the number of rules that require context to a\nminimum is a good idea.  As pointed out in the BIP, using only the\ntimestamp of the block means that the block limit can be determined purely\nfrom the block header.\n\nI don't think there is much issue with having a 1MB block following an 8MB\nblock during the activation.\n\nThis is inherent in using the timestamps.  It occurs for every block that\nhas a timestamp lower than its parent, but to a lesser degree.\n\nWhen fees are the main source of income, it does create a slight incentive\nto use higher timestamps, but that is probably not massive, since it is 2\nhours out of the 2 year doubling time.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150622/63c8f1df/attachment.html>"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-23T07:59:42",
                "message_text_only": "Also, before that's turned into \"8MB blocks are infeasible\", my presumption is that blocks are not expected to jump suddenly to 8MB, and that most will have time to ramp up storage and bandwidth.\n\nThe point about not outright replacing existing test data is the more critical one, anyway, although in retrospect we could simply add spam transactions on top of existing transactions.\n\nRoss\n\nOn 23 Jun 2015 08:35, Ross Nicoll <jrn at jrn.me.uk> wrote:"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-24T04:31:40",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/218ff5e9/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-24T17:05:42",
                "message_text_only": "They do so by not building on larger blocks\nOn Jun 23, 2015 9:31 PM, \"Raystonn\" <raystonn at hotmail.com> wrote:\n\n> No, they can lower their own block sizes.  But they cannot currently lower\n> the sizes of blocks mined by others.  That is not the same thing by any\n> stretch of the imagination.\n> On 23 Jun 2015 8:50 pm, Jeff Garzik <jgarzik at gmail.com> wrote:\n>\n> Miners can collude today to lower the block size limit.\n>\n> In fact, this largely happens already out of laziness - miners often\n> follow the \"soft\" default limit set by Bitcoin Core, to the point where you\n> can chart when miners upgrade to new software:\n> http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block\n>\n>\n>\n> On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>\n> wrote:\n>\n> Here are refutations of the approach in BIP-100 here:\n> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>\n> To recap BIP-100:\n>\n> 1) Hard form to remove static 1MB block size limit\n> 2) Add new floating block size limit set to 1MB\n> 3) Historical 32MB message limit remains\n> 4) Hard form on testnet 9/1/2015\n> 5) Hard form on main 1/11/2016\n> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block\n> threshold by 90% of blocks\n> 7) Limit increase or decrease may not exceed 2x in any one step\n> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase\n> scriptSig, e.g. \"/BV8000000/\" to vote for 8M.\n> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the\n> most common floor (minimum) is chosen.\n>\n> 8MB limits doubling just under every 2 years makes a static value grow\n> in a predictable manner.\n>\n> BIP-100 makes a static value grow (or more importantly potentially\n> shrink) in an unpredictable manner based on voting mechanics that are\n> untested in this capacity in the bitcoin network.  Introducing a highly\n> variable and untested dynamic into an already complex system is\n> unnecessarily risky.\n>\n> For example, the largely arbitrary voting rules listed in 9 above can be\n> gamed.  If I control pools or have affiliates involved in pools that\n> mine slightly more than 20% of blocks, I could wait until block sizes\n> are 10MB, and then suddenly vote \"/BV5000000/\" for 20% of blocks and\n> \"/BV5000001/\" for the remaining 10%.  If others don't consistently vote\n> for the same \"/BV#/\" value, vote too consistently and have their value\n> thrown out as the top 20%, I could win the resize to half capacity\n> \"/BV5000001/\" because it was the lowest repeated value not in the bottom\n> 20%.\n>\n> I could use this to force an exodus to my sidechain/alt coin, or to\n> choke out the bitcoin network.  A first improvement would be to only let\n> BIP-100 raise the cap and not lower it, but if I can think of a\n> vulnerability off the top of my head, there will be others on the other\n> side of the equation that have not been thought of.  Why bother\n> introducing a rube goldberg machine like voting when a simple 8mb cap\n> with predictable growth gets the job done, potentially permanently?\n>\n>\n> On 6/23/2015 9:43 PM, odinn wrote:\n> > -----BEGIN PGP SIGNED MESSAGE-----\n> > Hash: SHA1\n> >\n> > 1) Hard fork not (necessarily) needed\n> > 2) See Garzik's BIP 100, better (this is not meant to say \"superior to\n> > your stuff,\" but rather simply to say, \"Better you should work with\n> > Garzik to implement BIP-100, that would be good\")\n> > 3) See points 1 and 2 above\n> > 4) If still reading... changes should be (as you seem to have been\n> > trying to lean towards)... lean towards gradual change; hence, changes\n> > that would flow from this BIP would be better off oriented in a\n> > process that dies not require the \"way you have done it.\"\n> >\n> > You did address that, to be fair - in your TODO, this link:\n> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n> >\n> > contained the following link:\n> >\n> > http://gavinandresen.ninja/bigger-blocks-another-way\n> >\n> > However, in reading that, I didn't see any meaningful statements that\n> > would refute the approach in Garzik's BIP-100.\n> >\n> > Maybe a better way to say this is,\n> >\n> > Work with Jeff Garzik (which I am sure you are already having such\n> > discussions in private) as well as the list discussions,\n> > Move forward on BIP-100 with Garzik and other developers (not such a\n> > bad plan really) and don't get caught up in XT.  (If you feel you can\n> > develop XT further, that is your thing but it would perhaps make you\n> > lose focus, work together with other developers.)\n> >\n> > Relax into the process.  Things will be ok.\n> >\n> > Respectfully,\n> >\n> > - -O\n> >\n> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:\n> >> I promised to write a BIP after I'd implemented\n> >> increase-the-maximum-block-size code, so here it is. It also lives\n> >> at:\n> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n> >>\n> >>  I don't expect any proposal to please everybody; there are\n> >> unavoidable tradeoffs to increasing the maximum block size. I\n> >> prioritize implementation simplicity -- it is hard to write\n> >> consensus-critical code, so simpler is better.\n> >>\n> >>\n> >>\n> >>\n> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n> >> Draft Type: Standards Track Created: 2015-06-22\n> >>\n> >> ==Abstract==\n> >>\n> >> This BIP proposes replacing the fixed one megabyte maximum block\n> >> size with a maximum size that grows over time at a predictable\n> >> rate.\n> >>\n> >> ==Motivation==\n> >>\n> >> Transaction volume on the Bitcoin network has been growing, and\n> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n> >> the one megabyte maximum block size. Increasing the maximum size\n> >> reduces the impact of that limit on Bitcoin adoption and growth.\n> >>\n> >> ==Specification==\n> >>\n> >> After deployment on the network (see the Deployment section for\n> >> details), the maximum allowed size of a block on the main network\n> >> shall be calculated based on the timestamp in the block header.\n> >>\n> >> The maximum size shall be 8,000,000 bytes at a timestamp of\n> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n> >> every 63,072,000 seconds (two years, ignoring leap years), until\n> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n> >> blocks in between doublings will increase linearly based on the\n> >> block's timestamp. The maximum size of blocks after 2036-01-06\n> >> 00:00:00 UTC shall be 8,192,000,000 bytes.\n> >>\n> >> Expressed in pseudo-code, using integer math:\n> >>\n> >> function max_block_size(block_timestamp):\n> >>\n> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n> >> 8000000 if block_timestamp >= time_start+time_double*10 return\n> >> size_start * 2^10\n> >>\n> >> // Piecewise-linear-between-doublings growth: time_delta =\n> >> block_timestamp - t_start doublings = time_delta / time_double\n> >> remainder = time_delta % time_double interpolate = (size_start *\n> >> 2^doublings * remainder) / time_double max_size = size_start *\n> >> 2^doublings + interpolate\n> >>\n> >> return max_size\n> >>\n> >> ==Deployment==\n> >>\n> >> Deployment shall be controlled by hash-power supermajority vote\n> >> (similar to the technique used in BIP34), but the earliest possible\n> >> activation time is 2016-01-11 00:00:00 UTC.\n> >>\n> >> Activation is achieved when 750 of 1,000 consecutive blocks in the\n> >> best chain have a version number with bits 3 and 14 set (0x20000004\n> >> in hex). The activation time will be the timestamp of the 750'th\n> >> block plus a two week (1,209,600 second) grace period to give any\n> >> remaining miners or services time to upgrade to support larger\n> >> blocks. If a supermajority is achieved more than two weeks before\n> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n> >> 00:00:00 UTC.\n> >>\n> >> Block version numbers are used only for activation; once activation\n> >> is achieved, the maximum block size shall be as described in the\n> >> specification section, regardless of the version number of the\n> >> block.\n> >>\n> >>\n> >> ==Rationale==\n> >>\n> >> The initial size of 8,000,000 bytes was chosen after testing the\n> >> current reference implementation code with larger block sizes and\n> >> receiving feedback from miners stuck behind bandwidth-constrained\n> >> networks (in particular, Chinese miners behind the Great Firewall\n> >> of China).\n> >>\n> >> The doubling interval was chosen based on long-term growth trends\n> >> for CPU power, storage, and Internet bandwidth. The 20-year limit\n> >> was chosen because exponential growth cannot continue forever.\n> >>\n> >> Calculations are based on timestamps and not blockchain height\n> >> because a timestamp is part of every block's header. This allows\n> >> implementations to know a block's maximum size after they have\n> >> downloaded it's header, but before downloading any transactions.\n> >>\n> >> The deployment plan is taken from Jeff Garzik's proposed BIP100\n> >> block size increase, and is designed to give miners, merchants,\n> >> and full-node-running-end-users sufficient time to upgrade to\n> >> software that supports bigger blocks. A 75% supermajority was\n> >> chosen so that one large mining pool does not have effective veto\n> >> power over a blocksize increase. The version number scheme is\n> >> designed to be compatible with Pieter's Wuille's proposed \"Version\n> >> bits\" BIP.\n> >>\n> >> TODO: summarize objections/arguments from\n> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n> >>\n> >> TODO: describe other proposals and their advantages/disadvantages\n> >> over this proposal.\n> >>\n> >>\n> >> ==Compatibility==\n> >>\n> >> This is a hard-forking change to the Bitcoin protocol; anybody\n> >> running code that fully validates blocks must upgrade before the\n> >> activation time or they will risk rejecting a chain containing\n> >> larger-than-one-megabyte blocks.\n> >>\n> >> Simplified Payment Verification software is not affected, unless\n> >> it makes assumptions about the maximum depth of a transaction's\n> >> merkle branch based on the minimum size of a transaction and the\n> >> maximum block size.\n> >>\n> >> ==Implementation==\n> >>\n> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n> >>\n> >>\n> >>\n> >> _______________________________________________ bitcoin-dev mailing\n> >> list bitcoin-dev at lists.linuxfoundation.org\n> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>\n> >\n> > - --\n> > http://abis.io ~\n> > \"a protocol concept to enable decentralization\n> > and expansion of a giving economy, and a new social good\"\n> > https://keybase.io/odinn\n> > -----BEGIN PGP SIGNATURE-----\n> > Version: GnuPG v1\n> >\n> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\n> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\n> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\n> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\n> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\n> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n> > =ft62\n> > -----END PGP SIGNATURE-----\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/f22ea381/attachment-0001.html>"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-24T17:24:45",
                "message_text_only": "Or put another way, lowering the block size limit (or cancelling an\nincrease) is a soft fork.  Like all soft forks, a majority of the hash\npower can force the soft fork to take place.\n\nOn Wed, Jun 24, 2015 at 10:05:42AM -0700, Mark Friedenbach wrote:\n> They do so by not building on larger blocks\n> On Jun 23, 2015 9:31 PM, \"Raystonn\" <raystonn at hotmail.com> wrote:\n> \n> > No, they can lower their own block sizes.  But they cannot currently lower\n> > the sizes of blocks mined by others.  That is not the same thing by any\n> > stretch of the imagination.\n> > On 23 Jun 2015 8:50 pm, Jeff Garzik <jgarzik at gmail.com> wrote:\n> >\n> > Miners can collude today to lower the block size limit.\n> >\n> > In fact, this largely happens already out of laziness - miners often\n> > follow the \"soft\" default limit set by Bitcoin Core, to the point where you\n> > can chart when miners upgrade to new software:\n> > http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block\n> >\n> >\n> >\n> > On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>\n> > wrote:\n> >\n> > Here are refutations of the approach in BIP-100 here:\n> > http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n> >\n> > To recap BIP-100:\n> >\n> > 1) Hard form to remove static 1MB block size limit\n> > 2) Add new floating block size limit set to 1MB\n> > 3) Historical 32MB message limit remains\n> > 4) Hard form on testnet 9/1/2015\n> > 5) Hard form on main 1/11/2016\n> > 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block\n> > threshold by 90% of blocks\n> > 7) Limit increase or decrease may not exceed 2x in any one step\n> > 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase\n> > scriptSig, e.g. \"/BV8000000/\" to vote for 8M.\n> > 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the\n> > most common floor (minimum) is chosen.\n> >\n> > 8MB limits doubling just under every 2 years makes a static value grow\n> > in a predictable manner.\n> >\n> > BIP-100 makes a static value grow (or more importantly potentially\n> > shrink) in an unpredictable manner based on voting mechanics that are\n> > untested in this capacity in the bitcoin network.  Introducing a highly\n> > variable and untested dynamic into an already complex system is\n> > unnecessarily risky.\n> >\n> > For example, the largely arbitrary voting rules listed in 9 above can be\n> > gamed.  If I control pools or have affiliates involved in pools that\n> > mine slightly more than 20% of blocks, I could wait until block sizes\n> > are 10MB, and then suddenly vote \"/BV5000000/\" for 20% of blocks and\n> > \"/BV5000001/\" for the remaining 10%.  If others don't consistently vote\n> > for the same \"/BV#/\" value, vote too consistently and have their value\n> > thrown out as the top 20%, I could win the resize to half capacity\n> > \"/BV5000001/\" because it was the lowest repeated value not in the bottom\n> > 20%.\n> >\n> > I could use this to force an exodus to my sidechain/alt coin, or to\n> > choke out the bitcoin network.  A first improvement would be to only let\n> > BIP-100 raise the cap and not lower it, but if I can think of a\n> > vulnerability off the top of my head, there will be others on the other\n> > side of the equation that have not been thought of.  Why bother\n> > introducing a rube goldberg machine like voting when a simple 8mb cap\n> > with predictable growth gets the job done, potentially permanently?\n> >\n> >\n> > On 6/23/2015 9:43 PM, odinn wrote:\n> > > -----BEGIN PGP SIGNED MESSAGE-----\n> > > Hash: SHA1\n> > >\n> > > 1) Hard fork not (necessarily) needed\n> > > 2) See Garzik's BIP 100, better (this is not meant to say \"superior to\n> > > your stuff,\" but rather simply to say, \"Better you should work with\n> > > Garzik to implement BIP-100, that would be good\")\n> > > 3) See points 1 and 2 above\n> > > 4) If still reading... changes should be (as you seem to have been\n> > > trying to lean towards)... lean towards gradual change; hence, changes\n> > > that would flow from this BIP would be better off oriented in a\n> > > process that dies not require the \"way you have done it.\"\n> > >\n> > > You did address that, to be fair - in your TODO, this link:\n> > > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n> > >\n> > > contained the following link:\n> > >\n> > > http://gavinandresen.ninja/bigger-blocks-another-way\n> > >\n> > > However, in reading that, I didn't see any meaningful statements that\n> > > would refute the approach in Garzik's BIP-100.\n> > >\n> > > Maybe a better way to say this is,\n> > >\n> > > Work with Jeff Garzik (which I am sure you are already having such\n> > > discussions in private) as well as the list discussions,\n> > > Move forward on BIP-100 with Garzik and other developers (not such a\n> > > bad plan really) and don't get caught up in XT.  (If you feel you can\n> > > develop XT further, that is your thing but it would perhaps make you\n> > > lose focus, work together with other developers.)\n> > >\n> > > Relax into the process.  Things will be ok.\n> > >\n> > > Respectfully,\n> > >\n> > > - -O\n> > >\n> > > On 06/22/2015 11:18 AM, Gavin Andresen wrote:\n> > >> I promised to write a BIP after I'd implemented\n> > >> increase-the-maximum-block-size code, so here it is. It also lives\n> > >> at:\n> > >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n> > >>\n> > >>  I don't expect any proposal to please everybody; there are\n> > >> unavoidable tradeoffs to increasing the maximum block size. I\n> > >> prioritize implementation simplicity -- it is hard to write\n> > >> consensus-critical code, so simpler is better.\n> > >>\n> > >>\n> > >>\n> > >>\n> > >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n> > >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n> > >> Draft Type: Standards Track Created: 2015-06-22\n> > >>\n> > >> ==Abstract==\n> > >>\n> > >> This BIP proposes replacing the fixed one megabyte maximum block\n> > >> size with a maximum size that grows over time at a predictable\n> > >> rate.\n> > >>\n> > >> ==Motivation==\n> > >>\n> > >> Transaction volume on the Bitcoin network has been growing, and\n> > >> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n> > >> the one megabyte maximum block size. Increasing the maximum size\n> > >> reduces the impact of that limit on Bitcoin adoption and growth.\n> > >>\n> > >> ==Specification==\n> > >>\n> > >> After deployment on the network (see the Deployment section for\n> > >> details), the maximum allowed size of a block on the main network\n> > >> shall be calculated based on the timestamp in the block header.\n> > >>\n> > >> The maximum size shall be 8,000,000 bytes at a timestamp of\n> > >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n> > >> every 63,072,000 seconds (two years, ignoring leap years), until\n> > >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n> > >> blocks in between doublings will increase linearly based on the\n> > >> block's timestamp. The maximum size of blocks after 2036-01-06\n> > >> 00:00:00 UTC shall be 8,192,000,000 bytes.\n> > >>\n> > >> Expressed in pseudo-code, using integer math:\n> > >>\n> > >> function max_block_size(block_timestamp):\n> > >>\n> > >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n> > >> 8000000 if block_timestamp >= time_start+time_double*10 return\n> > >> size_start * 2^10\n> > >>\n> > >> // Piecewise-linear-between-doublings growth: time_delta =\n> > >> block_timestamp - t_start doublings = time_delta / time_double\n> > >> remainder = time_delta % time_double interpolate = (size_start *\n> > >> 2^doublings * remainder) / time_double max_size = size_start *\n> > >> 2^doublings + interpolate\n> > >>\n> > >> return max_size\n> > >>\n> > >> ==Deployment==\n> > >>\n> > >> Deployment shall be controlled by hash-power supermajority vote\n> > >> (similar to the technique used in BIP34), but the earliest possible\n> > >> activation time is 2016-01-11 00:00:00 UTC.\n> > >>\n> > >> Activation is achieved when 750 of 1,000 consecutive blocks in the\n> > >> best chain have a version number with bits 3 and 14 set (0x20000004\n> > >> in hex). The activation time will be the timestamp of the 750'th\n> > >> block plus a two week (1,209,600 second) grace period to give any\n> > >> remaining miners or services time to upgrade to support larger\n> > >> blocks. If a supermajority is achieved more than two weeks before\n> > >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n> > >> 00:00:00 UTC.\n> > >>\n> > >> Block version numbers are used only for activation; once activation\n> > >> is achieved, the maximum block size shall be as described in the\n> > >> specification section, regardless of the version number of the\n> > >> block.\n> > >>\n> > >>\n> > >> ==Rationale==\n> > >>\n> > >> The initial size of 8,000,000 bytes was chosen after testing the\n> > >> current reference implementation code with larger block sizes and\n> > >> receiving feedback from miners stuck behind bandwidth-constrained\n> > >> networks (in particular, Chinese miners behind the Great Firewall\n> > >> of China).\n> > >>\n> > >> The doubling interval was chosen based on long-term growth trends\n> > >> for CPU power, storage, and Internet bandwidth. The 20-year limit\n> > >> was chosen because exponential growth cannot continue forever.\n> > >>\n> > >> Calculations are based on timestamps and not blockchain height\n> > >> because a timestamp is part of every block's header. This allows\n> > >> implementations to know a block's maximum size after they have\n> > >> downloaded it's header, but before downloading any transactions.\n> > >>\n> > >> The deployment plan is taken from Jeff Garzik's proposed BIP100\n> > >> block size increase, and is designed to give miners, merchants,\n> > >> and full-node-running-end-users sufficient time to upgrade to\n> > >> software that supports bigger blocks. A 75% supermajority was\n> > >> chosen so that one large mining pool does not have effective veto\n> > >> power over a blocksize increase. The version number scheme is\n> > >> designed to be compatible with Pieter's Wuille's proposed \"Version\n> > >> bits\" BIP.\n> > >>\n> > >> TODO: summarize objections/arguments from\n> > >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n> > >>\n> > >> TODO: describe other proposals and their advantages/disadvantages\n> > >> over this proposal.\n> > >>\n> > >>\n> > >> ==Compatibility==\n> > >>\n> > >> This is a hard-forking change to the Bitcoin protocol; anybody\n> > >> running code that fully validates blocks must upgrade before the\n> > >> activation time or they will risk rejecting a chain containing\n> > >> larger-than-one-megabyte blocks.\n> > >>\n> > >> Simplified Payment Verification software is not affected, unless\n> > >> it makes assumptions about the maximum depth of a transaction's\n> > >> merkle branch based on the minimum size of a transaction and the\n> > >> maximum block size.\n> > >>\n> > >> ==Implementation==\n> > >>\n> > >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n> > >>\n> > >>\n> > >>\n> > >> _______________________________________________ bitcoin-dev mailing\n> > >> list bitcoin-dev at lists.linuxfoundation.org\n> > >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > >>\n> > >\n> > > - --\n> > > http://abis.io ~\n> > > \"a protocol concept to enable decentralization\n> > > and expansion of a giving economy, and a new social good\"\n> > > https://keybase.io/odinn\n> > > -----BEGIN PGP SIGNATURE-----\n> > > Version: GnuPG v1\n> > >\n> > > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\n> > > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\n> > > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\n> > > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\n> > > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\n> > > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n> > > =ft62\n> > > -----END PGP SIGNATURE-----\n> > > _______________________________________________\n> > > bitcoin-dev mailing list\n> > > bitcoin-dev at lists.linuxfoundation.org\n> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > >\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> >\n> >\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> >\n\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-24T17:23:18",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/457d008a/attachment.html>"
            },
            {
                "author": "Allen Piscitello",
                "date": "2015-06-24T17:24:32",
                "message_text_only": "This is no different than any other soft fork.  Proper communication can\ncoordinate soft forks easily.\n\nOn Wed, Jun 24, 2015 at 12:23 PM, Raystonn <raystonn at hotmail.com> wrote:\n\n> You really believe they would risk getting orphaned by skipping the longer\n> chain, just to attempt to reduce average block size? No, that doesn't\n> happen today. Laziness in leaving the default size is common. But that is\n> not collusion, nor an attempt to manipulate the block sizes of other miners.\n>  On 24 Jun 2015 10:05 am, Mark Friedenbach <mark at friedenbach.org> wrote:\n>\n> They do so by not building on larger blocks\n> On Jun 23, 2015 9:31 PM, \"Raystonn\" <raystonn at hotmail.com> wrote:\n>\n> No, they can lower their own block sizes.  But they cannot currently lower\n> the sizes of blocks mined by others.  That is not the same thing by any\n> stretch of the imagination.\n> On 23 Jun 2015 8:50 pm, Jeff Garzik <jgarzik at gmail.com> wrote:\n>\n> Miners can collude today to lower the block size limit.\n>\n> In fact, this largely happens already out of laziness - miners often\n> follow the \"soft\" default limit set by Bitcoin Core, to the point where you\n> can chart when miners upgrade to new software:\n> http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block\n>\n>\n>\n> On Tue, Jun 23, 2015 at 8:05 PM, William Madden <will.madden at novauri.com>\n> wrote:\n>\n> Here are refutations of the approach in BIP-100 here:\n> http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\n>\n> To recap BIP-100:\n>\n> 1) Hard form to remove static 1MB block size limit\n> 2) Add new floating block size limit set to 1MB\n> 3) Historical 32MB message limit remains\n> 4) Hard form on testnet 9/1/2015\n> 5) Hard form on main 1/11/2016\n> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block\n> threshold by 90% of blocks\n> 7) Limit increase or decrease may not exceed 2x in any one step\n> 8) Miners vote by encoding 'BV'+BlockSizeRequestValue into coinbase\n> scriptSig, e.g. \"/BV8000000/\" to vote for 8M.\n> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the\n> most common floor (minimum) is chosen.\n>\n> 8MB limits doubling just under every 2 years makes a static value grow\n> in a predictable manner.\n>\n> BIP-100 makes a static value grow (or more importantly potentially\n> shrink) in an unpredictable manner based on voting mechanics that are\n> untested in this capacity in the bitcoin network.  Introducing a highly\n> variable and untested dynamic into an already complex system is\n> unnecessarily risky.\n>\n> For example, the largely arbitrary voting rules listed in 9 above can be\n> gamed.  If I control pools or have affiliates involved in pools that\n> mine slightly more than 20% of blocks, I could wait until block sizes\n> are 10MB, and then suddenly vote \"/BV5000000/\" for 20% of blocks and\n> \"/BV5000001/\" for the remaining 10%.  If others don't consistently vote\n> for the same \"/BV#/\" value, vote too consistently and have their value\n> thrown out as the top 20%, I could win the resize to half capacity\n> \"/BV5000001/\" because it was the lowest repeated value not in the bottom\n> 20%.\n>\n> I could use this to force an exodus to my sidechain/alt coin, or to\n> choke out the bitcoin network.  A first improvement would be to only let\n> BIP-100 raise the cap and not lower it, but if I can think of a\n> vulnerability off the top of my head, there will be others on the other\n> side of the equation that have not been thought of.  Why bother\n> introducing a rube goldberg machine like voting when a simple 8mb cap\n> with predictable growth gets the job done, potentially permanently?\n>\n>\n> On 6/23/2015 9:43 PM, odinn wrote:\n> > -----BEGIN PGP SIGNED MESSAGE-----\n> > Hash: SHA1\n> >\n> > 1) Hard fork not (necessarily) needed\n> > 2) See Garzik's BIP 100, better (this is not meant to say \"superior to\n> > your stuff,\" but rather simply to say, \"Better you should work with\n> > Garzik to implement BIP-100, that would be good\")\n> > 3) See points 1 and 2 above\n> > 4) If still reading... changes should be (as you seem to have been\n> > trying to lean towards)... lean towards gradual change; hence, changes\n> > that would flow from this BIP would be better off oriented in a\n> > process that dies not require the \"way you have done it.\"\n> >\n> > You did address that, to be fair - in your TODO, this link:\n> > http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\n> >\n> > contained the following link:\n> >\n> > http://gavinandresen.ninja/bigger-blocks-another-way\n> >\n> > However, in reading that, I didn't see any meaningful statements that\n> > would refute the approach in Garzik's BIP-100.\n> >\n> > Maybe a better way to say this is,\n> >\n> > Work with Jeff Garzik (which I am sure you are already having such\n> > discussions in private) as well as the list discussions,\n> > Move forward on BIP-100 with Garzik and other developers (not such a\n> > bad plan really) and don't get caught up in XT.  (If you feel you can\n> > develop XT further, that is your thing but it would perhaps make you\n> > lose focus, work together with other developers.)\n> >\n> > Relax into the process.  Things will be ok.\n> >\n> > Respectfully,\n> >\n> > - -O\n> >\n> > On 06/22/2015 11:18 AM, Gavin Andresen wrote:\n> >> I promised to write a BIP after I'd implemented\n> >> increase-the-maximum-block-size code, so here it is. It also lives\n> >> at:\n> >> https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\n> >>\n> >>  I don't expect any proposal to please everybody; there are\n> >> unavoidable tradeoffs to increasing the maximum block size. I\n> >> prioritize implementation simplicity -- it is hard to write\n> >> consensus-critical code, so simpler is better.\n> >>\n> >>\n> >>\n> >>\n> >> BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen\n> >> <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>> Status:\n> >> Draft Type: Standards Track Created: 2015-06-22\n> >>\n> >> ==Abstract==\n> >>\n> >> This BIP proposes replacing the fixed one megabyte maximum block\n> >> size with a maximum size that grows over time at a predictable\n> >> rate.\n> >>\n> >> ==Motivation==\n> >>\n> >> Transaction volume on the Bitcoin network has been growing, and\n> >> will soon reach the one-megabyte-every-ten-minutes limit imposed by\n> >> the one megabyte maximum block size. Increasing the maximum size\n> >> reduces the impact of that limit on Bitcoin adoption and growth.\n> >>\n> >> ==Specification==\n> >>\n> >> After deployment on the network (see the Deployment section for\n> >> details), the maximum allowed size of a block on the main network\n> >> shall be calculated based on the timestamp in the block header.\n> >>\n> >> The maximum size shall be 8,000,000 bytes at a timestamp of\n> >> 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double\n> >> every 63,072,000 seconds (two years, ignoring leap years), until\n> >> 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of\n> >> blocks in between doublings will increase linearly based on the\n> >> block's timestamp. The maximum size of blocks after 2036-01-06\n> >> 00:00:00 UTC shall be 8,192,000,000 bytes.\n> >>\n> >> Expressed in pseudo-code, using integer math:\n> >>\n> >> function max_block_size(block_timestamp):\n> >>\n> >> time_start = 1452470400 time_double = 60*60*24*365*2 size_start =\n> >> 8000000 if block_timestamp >= time_start+time_double*10 return\n> >> size_start * 2^10\n> >>\n> >> // Piecewise-linear-between-doublings growth: time_delta =\n> >> block_timestamp - t_start doublings = time_delta / time_double\n> >> remainder = time_delta % time_double interpolate = (size_start *\n> >> 2^doublings * remainder) / time_double max_size = size_start *\n> >> 2^doublings + interpolate\n> >>\n> >> return max_size\n> >>\n> >> ==Deployment==\n> >>\n> >> Deployment shall be controlled by hash-power supermajority vote\n> >> (similar to the technique used in BIP34), but the earliest possible\n> >> activation time is 2016-01-11 00:00:00 UTC.\n> >>\n> >> Activation is achieved when 750 of 1,000 consecutive blocks in the\n> >> best chain have a version number with bits 3 and 14 set (0x20000004\n> >> in hex). The activation time will be the timestamp of the 750'th\n> >> block plus a two week (1,209,600 second) grace period to give any\n> >> remaining miners or services time to upgrade to support larger\n> >> blocks. If a supermajority is achieved more than two weeks before\n> >> 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11\n> >> 00:00:00 UTC.\n> >>\n> >> Block version numbers are used only for activation; once activation\n> >> is achieved, the maximum block size shall be as described in the\n> >> specification section, regardless of the version number of the\n> >> block.\n> >>\n> >>\n> >> ==Rationale==\n> >>\n> >> The initial size of 8,000,000 bytes was chosen after testing the\n> >> current reference implementation code with larger block sizes and\n> >> receiving feedback from miners stuck behind bandwidth-constrained\n> >> networks (in particular, Chinese miners behind the Great Firewall\n> >> of China).\n> >>\n> >> The doubling interval was chosen based on long-term growth trends\n> >> for CPU power, storage, and Internet bandwidth. The 20-year limit\n> >> was chosen because exponential growth cannot continue forever.\n> >>\n> >> Calculations are based on timestamps and not blockchain height\n> >> because a timestamp is part of every block's header. This allows\n> >> implementations to know a block's maximum size after they have\n> >> downloaded it's header, but before downloading any transactions.\n> >>\n> >> The deployment plan is taken from Jeff Garzik's proposed BIP100\n> >> block size increase, and is designed to give miners, merchants,\n> >> and full-node-running-end-users sufficient time to upgrade to\n> >> software that supports bigger blocks. A 75% supermajority was\n> >> chosen so that one large mining pool does not have effective veto\n> >> power over a blocksize increase. The version number scheme is\n> >> designed to be compatible with Pieter's Wuille's proposed \"Version\n> >> bits\" BIP.\n> >>\n> >> TODO: summarize objections/arguments from\n> >> http://gavinandresen.ninja/time-to-roll-out-bigger-blocks.\n> >>\n> >> TODO: describe other proposals and their advantages/disadvantages\n> >> over this proposal.\n> >>\n> >>\n> >> ==Compatibility==\n> >>\n> >> This is a hard-forking change to the Bitcoin protocol; anybody\n> >> running code that fully validates blocks must upgrade before the\n> >> activation time or they will risk rejecting a chain containing\n> >> larger-than-one-megabyte blocks.\n> >>\n> >> Simplified Payment Verification software is not affected, unless\n> >> it makes assumptions about the maximum depth of a transaction's\n> >> merkle branch based on the minimum size of a transaction and the\n> >> maximum block size.\n> >>\n> >> ==Implementation==\n> >>\n> >> https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\n> >>\n> >>\n> >>\n> >> _______________________________________________ bitcoin-dev mailing\n> >> list bitcoin-dev at lists.linuxfoundation.org\n> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>\n> >\n> > - --\n> > http://abis.io ~\n> > \"a protocol concept to enable decentralization\n> > and expansion of a giving economy, and a new social good\"\n> > https://keybase.io/odinn\n> > -----BEGIN PGP SIGNATURE-----\n> > Version: GnuPG v1\n> >\n> > iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175\n> > Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO+\n> > K2h3DmAcA6W/Thk0C2cV3ewv+OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw\n> > OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN\n> > fZAeLCuwuN2qWMrVrr+cbpCXjEuE1xZG3WEj7ppYoGR+AgF/Y5/U1j7S4PVpk85s\n> > CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo=\n> > =ft62\n> > -----END PGP SIGNATURE-----\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/cb6e3180/attachment-0001.html>"
            },
            {
                "author": "Roy Badami",
                "date": "2015-06-24T17:28:47",
                "message_text_only": "60% of the hashrate can easily agree to force a softfork which reduces\nthe block size.  As soon as the fork occurs, there is a very strong\nincentive for all the remaining 40% to go along with it: if they\ndon't, they're mining worthless blocks.\n\nThey can use a BIP-34 style mechanism to trigger the fork so there's\nnegligible risk to the miners.\n\nOn Wed, Jun 24, 2015 at 10:23:18AM -0700, Raystonn wrote:\n> <p dir=\"ltr\">You really believe they would risk getting orphaned by skipping the longer chain, just to attempt to reduce average block size? No, that doesn't happen today. Laziness in leaving the default size is common. But that is not collusion, nor an attempt to manipulate the block sizes of other miners.<br>\n> </p>\n> <div class=\"gmail_quote\">On 24 Jun 2015 10:05 am, Mark Friedenbach &lt;mark at friedenbach.org&gt; wrote:<br type='attribution'><blockquote class=\"quote\" style=\"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex\"><p dir=\"ltr\">They do so by not building on larger blocks</p>\n> <div class=\"elided-text\">On Jun 23, 2015 9:31 PM, &#34;Raystonn&#34; &lt;<a href=\"mailto:raystonn&#64;hotmail.com\">raystonn&#64;hotmail.com</a>&gt; wrote:<br /><blockquote style=\"margin:0 0 0 0.8ex;border-left:1px #ccc solid;padding-left:1ex\"><p dir=\"ltr\">No, they can lower their own block sizes.?? But they cannot currently lower the sizes of blocks mined by others.?? That is not the same thing by any stretch of the imagination.</p>\n> <div class=\"elided-text\">On 23 Jun 2015 8:50 pm, Jeff Garzik &lt;<a href=\"mailto:jgarzik&#64;gmail.com\">jgarzik&#64;gmail.com</a>&gt; wrote:<br /><blockquote style=\"margin:0 0 0 0.8ex;border-left:1px #ccc solid;padding-left:1ex\"><div dir=\"ltr\">Miners can collude today to lower the block size limit.<div><br /></div><div>In fact, this largely happens already out of laziness - miners often follow the &#34;soft&#34; default limit set by Bitcoin Core, to the point where you can chart when miners upgrade to new software:??<a href=\"http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block\">http://hashingit.com/analysis/39-the-myth-of-the-megabyte-bitcoin-block</a></div><div><br /></div><div><br /></div></div><div><br /><div>On Tue, Jun 23, 2015 at 8:05 PM, William Madden <span dir=\"ltr\">&lt;<a href=\"mailto:will.madden&#64;novauri.com\">will.madden&#64;novauri.com</a>&gt;</span> wrote:<br /><blockquote style=\"margin:0 0 0 0.8ex;border-left:1px #ccc solid;padding-left:1ex\">Here are refutations of the approach in BIP-100 here:<br />\n> <a href=\"http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf\">http://gtf.org/garzik/bitcoin/BIP100-blocksizechangeproposal.pdf</a><br />\n> <br />\n> To recap BIP-100:<br />\n> <br />\n> 1) Hard form to remove static 1MB block size limit<br />\n> 2) Add new floating block size limit set to 1MB<br />\n> 3) Historical 32MB message limit remains<br />\n> 4) Hard form on testnet 9/1/2015<br />\n> 5) Hard form on main 1/11/2016<br />\n> 6) 1MB limit changed via one-way lock in upgrade with a 12,000 block<br />\n> threshold by 90% of blocks<br />\n> 7) Limit increase or decrease may not exceed 2x in any one step<br />\n> 8) Miners vote by encoding &#39;BV&#39;&#43;BlockSizeRequestValue into coinbase<br />\n> scriptSig, e.g. &#34;/BV8000000/&#34; to vote for 8M.<br />\n> 9) Votes are evaluated by dropping bottom 20% and top 20%, and then the<br />\n> most common floor (minimum) is chosen.<br />\n> <br />\n> 8MB limits doubling just under every 2 years makes a static value grow<br />\n> in a predictable manner.<br />\n> <br />\n> BIP-100 makes a static value grow (or more importantly potentially<br />\n> shrink) in an unpredictable manner based on voting mechanics that are<br />\n> untested in this capacity in the bitcoin network.?? Introducing a highly<br />\n> variable and untested dynamic into an already complex system is<br />\n> unnecessarily risky.<br />\n> <br />\n> For example, the largely arbitrary voting rules listed in 9 above can be<br />\n> gamed.?? If I control pools or have affiliates involved in pools that<br />\n> mine slightly more than 20% of blocks, I could wait until block sizes<br />\n> are 10MB, and then suddenly vote &#34;/BV5000000/&#34; for 20% of blocks and<br />\n> &#34;/BV5000001/&#34; for the remaining 10%.?? If others don&#39;t consistently vote<br />\n> for the same &#34;/BV#/&#34; value, vote too consistently and have their value<br />\n> thrown out as the top 20%, I could win the resize to half capacity<br />\n> &#34;/BV5000001/&#34; because it was the lowest repeated value not in the bottom<br />\n> 20%.<br />\n> <br />\n> I could use this to force an exodus to my sidechain/alt coin, or to<br />\n> choke out the bitcoin network.?? A first improvement would be to only let<br />\n> BIP-100 raise the cap and not lower it, but if I can think of a<br />\n> vulnerability off the top of my head, there will be others on the other<br />\n> side of the equation that have not been thought of.?? Why bother<br />\n> introducing a rube goldberg machine like voting when a simple 8mb cap<br />\n> with predictable growth gets the job done, potentially permanently?<br />\n> <div><div><br />\n> <br />\n> On 6/23/2015 9:43 PM, odinn wrote:<br />\n> &gt; -----BEGIN PGP SIGNED MESSAGE-----<br />\n> &gt; Hash: SHA1<br />\n> &gt;<br />\n> &gt; 1) Hard fork not (necessarily) needed<br />\n> &gt; 2) See Garzik&#39;s BIP 100, better (this is not meant to say &#34;superior to<br />\n> &gt; your stuff,&#34; but rather simply to say, &#34;Better you should work with<br />\n> &gt; Garzik to implement BIP-100, that would be good&#34;)<br />\n> &gt; 3) See points 1 and 2 above<br />\n> &gt; 4) If still reading... changes should be (as you seem to have been<br />\n> &gt; trying to lean towards)... lean towards gradual change; hence, changes<br />\n> &gt; that would flow from this BIP would be better off oriented in a<br />\n> &gt; process that dies not require the &#34;way you have done it.&#34;<br />\n> &gt;<br />\n> &gt; You did address that, to be fair - in your TODO, this link:<br />\n> &gt; <a href=\"http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\">http://gavinandresen.ninja/time-to-roll-out-bigger-blocks</a><br />\n> &gt;<br />\n> &gt; contained the following link:<br />\n> &gt;<br />\n> &gt; <a href=\"http://gavinandresen.ninja/bigger-blocks-another-way\">http://gavinandresen.ninja/bigger-blocks-another-way</a><br />\n> &gt;<br />\n> &gt; However, in reading that, I didn&#39;t see any meaningful statements that<br />\n> &gt; would refute the approach in Garzik&#39;s BIP-100.<br />\n> &gt;<br />\n> &gt; Maybe a better way to say this is,<br />\n> &gt;<br />\n> &gt; Work with Jeff Garzik (which I am sure you are already having such<br />\n> &gt; discussions in private) as well as the list discussions,<br />\n> &gt; Move forward on BIP-100 with Garzik and other developers (not such a<br />\n> &gt; bad plan really) and don&#39;t get caught up in XT.?? (If you feel you can<br />\n> &gt; develop XT further, that is your thing but it would perhaps make you<br />\n> &gt; lose focus, work together with other developers.)<br />\n> &gt;<br />\n> &gt; Relax into the process.?? Things will be ok.<br />\n> &gt;<br />\n> &gt; Respectfully,<br />\n> &gt;<br />\n> &gt; - -O<br />\n> &gt;<br />\n> &gt; On 06/22/2015 11:18 AM, Gavin Andresen wrote:<br />\n> &gt;&gt; I promised to write a BIP after I&#39;d implemented<br />\n> &gt;&gt; increase-the-maximum-block-size code, so here it is. It also lives<br />\n> &gt;&gt; at:<br />\n> &gt;&gt; <a href=\"https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki\">https://github.com/gavinandresen/bips/blob/blocksize/bip-8MB.mediawiki</a><br />\n> &gt;&gt;<br />\n> &gt;&gt;?? I don&#39;t expect any proposal to please everybody; there are<br />\n> &gt;&gt; unavoidable tradeoffs to increasing the maximum block size. I<br />\n> &gt;&gt; prioritize implementation simplicity -- it is hard to write<br />\n> &gt;&gt; consensus-critical code, so simpler is better.<br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt; BIP: ?? Title: Increase Maximum Block Size Author: Gavin Andresen<br />\n> &gt;&gt; &lt;<a href=\"mailto:gavinandresen&#64;gmail.com\">gavinandresen&#64;gmail.com</a> &lt;mailto:<a href=\"mailto:gavinandresen&#64;gmail.com\">gavinandresen&#64;gmail.com</a>&gt;&gt; Status:<br />\n> &gt;&gt; Draft Type: Standards Track Created: 2015-06-22<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Abstract&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; This BIP proposes replacing the fixed one megabyte maximum block<br />\n> &gt;&gt; size with a maximum size that grows over time at a predictable<br />\n> &gt;&gt; rate.<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Motivation&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; Transaction volume on the Bitcoin network has been growing, and<br />\n> &gt;&gt; will soon reach the one-megabyte-every-ten-minutes limit imposed by<br />\n> &gt;&gt; the one megabyte maximum block size. Increasing the maximum size<br />\n> &gt;&gt; reduces the impact of that limit on Bitcoin adoption and growth.<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Specification&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; After deployment on the network (see the Deployment section for<br />\n> &gt;&gt; details), the maximum allowed size of a block on the main network<br />\n> &gt;&gt; shall be calculated based on the timestamp in the block header.<br />\n> &gt;&gt;<br />\n> &gt;&gt; The maximum size shall be 8,000,000 bytes at a timestamp of<br />\n> &gt;&gt; 2016-01-11 00:00:00 UTC (timestamp 1452470400), and shall double<br />\n> &gt;&gt; every 63,072,000 seconds (two years, ignoring leap years), until<br />\n> &gt;&gt; 2036-01-06 00:00:00 UTC (timestamp 2083190400). The maximum size of<br />\n> &gt;&gt; blocks in between doublings will increase linearly based on the<br />\n> &gt;&gt; block&#39;s timestamp. The maximum size of blocks after 2036-01-06<br />\n> &gt;&gt; 00:00:00 UTC shall be 8,192,000,000 bytes.<br />\n> &gt;&gt;<br />\n> &gt;&gt; Expressed in pseudo-code, using integer math:<br />\n> &gt;&gt;<br />\n> &gt;&gt; function max_block_size(block_timestamp):<br />\n> &gt;&gt;<br />\n> &gt;&gt; time_start &#61; 1452470400 time_double &#61; 60*60*24*365*2 size_start &#61;<br />\n> &gt;&gt; 8000000 if block_timestamp &gt;&#61; time_start&#43;time_double*10 return<br />\n> &gt;&gt; size_start * 2^10<br />\n> &gt;&gt;<br />\n> &gt;&gt; // Piecewise-linear-between-doublings growth: time_delta &#61;<br />\n> &gt;&gt; block_timestamp - t_start doublings &#61; time_delta / time_double<br />\n> &gt;&gt; remainder &#61; time_delta % time_double interpolate &#61; (size_start *<br />\n> &gt;&gt; 2^doublings * remainder) / time_double max_size &#61; size_start *<br />\n> &gt;&gt; 2^doublings &#43; interpolate<br />\n> &gt;&gt;<br />\n> &gt;&gt; return max_size<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Deployment&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; Deployment shall be controlled by hash-power supermajority vote<br />\n> &gt;&gt; (similar to the technique used in BIP34), but the earliest possible<br />\n> &gt;&gt; activation time is 2016-01-11 00:00:00 UTC.<br />\n> &gt;&gt;<br />\n> &gt;&gt; Activation is achieved when 750 of 1,000 consecutive blocks in the<br />\n> &gt;&gt; best chain have a version number with bits 3 and 14 set (0x20000004<br />\n> &gt;&gt; in hex). The activation time will be the timestamp of the 750&#39;th<br />\n> &gt;&gt; block plus a two week (1,209,600 second) grace period to give any<br />\n> &gt;&gt; remaining miners or services time to upgrade to support larger<br />\n> &gt;&gt; blocks. If a supermajority is achieved more than two weeks before<br />\n> &gt;&gt; 2016-01-11 00:00:00 UTC, the activation time will be 2016-01-11<br />\n> &gt;&gt; 00:00:00 UTC.<br />\n> &gt;&gt;<br />\n> &gt;&gt; Block version numbers are used only for activation; once activation<br />\n> &gt;&gt; is achieved, the maximum block size shall be as described in the<br />\n> &gt;&gt; specification section, regardless of the version number of the<br />\n> &gt;&gt; block.<br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Rationale&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; The initial size of 8,000,000 bytes was chosen after testing the<br />\n> &gt;&gt; current reference implementation code with larger block sizes and<br />\n> &gt;&gt; receiving feedback from miners stuck behind bandwidth-constrained<br />\n> &gt;&gt; networks (in particular, Chinese miners behind the Great Firewall<br />\n> &gt;&gt; of China).<br />\n> &gt;&gt;<br />\n> &gt;&gt; The doubling interval was chosen based on long-term growth trends<br />\n> &gt;&gt; for CPU power, storage, and Internet bandwidth. The 20-year limit<br />\n> &gt;&gt; was chosen because exponential growth cannot continue forever.<br />\n> &gt;&gt;<br />\n> &gt;&gt; Calculations are based on timestamps and not blockchain height<br />\n> &gt;&gt; because a timestamp is part of every block&#39;s header. This allows<br />\n> &gt;&gt; implementations to know a block&#39;s maximum size after they have<br />\n> &gt;&gt; downloaded it&#39;s header, but before downloading any transactions.<br />\n> &gt;&gt;<br />\n> &gt;&gt; The deployment plan is taken from Jeff Garzik&#39;s proposed BIP100<br />\n> &gt;&gt; block size increase, and is designed to give miners, merchants,<br />\n> &gt;&gt; and full-node-running-end-users sufficient time to upgrade to<br />\n> &gt;&gt; software that supports bigger blocks. A 75% supermajority was<br />\n> &gt;&gt; chosen so that one large mining pool does not have effective veto<br />\n> &gt;&gt; power over a blocksize increase. The version number scheme is<br />\n> &gt;&gt; designed to be compatible with Pieter&#39;s Wuille&#39;s proposed &#34;Version<br />\n> &gt;&gt; bits&#34; BIP.<br />\n> &gt;&gt;<br />\n> &gt;&gt; TODO: summarize objections/arguments from<br />\n> &gt;&gt; <a href=\"http://gavinandresen.ninja/time-to-roll-out-bigger-blocks\">http://gavinandresen.ninja/time-to-roll-out-bigger-blocks</a>.<br />\n> &gt;&gt;<br />\n> &gt;&gt; TODO: describe other proposals and their advantages/disadvantages<br />\n> &gt;&gt; over this proposal.<br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Compatibility&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; This is a hard-forking change to the Bitcoin protocol; anybody<br />\n> &gt;&gt; running code that fully validates blocks must upgrade before the<br />\n> &gt;&gt; activation time or they will risk rejecting a chain containing<br />\n> &gt;&gt; larger-than-one-megabyte blocks.<br />\n> &gt;&gt;<br />\n> &gt;&gt; Simplified Payment Verification software is not affected, unless<br />\n> &gt;&gt; it makes assumptions about the maximum depth of a transaction&#39;s<br />\n> &gt;&gt; merkle branch based on the minimum size of a transaction and the<br />\n> &gt;&gt; maximum block size.<br />\n> &gt;&gt;<br />\n> &gt;&gt; &#61;&#61;Implementation&#61;&#61;<br />\n> &gt;&gt;<br />\n> &gt;&gt; <a href=\"https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork\">https://github.com/gavinandresen/bitcoinxt/tree/blocksize_fork</a><br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt;<br />\n> &gt;&gt; _______________________________________________ bitcoin-dev mailing<br />\n> &gt;&gt; list <a href=\"mailto:bitcoin-dev&#64;lists.linuxfoundation.org\">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />\n> &gt;&gt; <a href=\"https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />\n> &gt;&gt;<br />\n> &gt;<br />\n> &gt; - --<br />\n> &gt; <a href=\"http://abis.io\">http://abis.io</a> ~<br />\n> &gt; &#34;a protocol concept to enable decentralization<br />\n> &gt; and expansion of a giving economy, and a new social good&#34;<br />\n> &gt; <a href=\"https://keybase.io/odinn\">https://keybase.io/odinn</a><br />\n> &gt; -----BEGIN PGP SIGNATURE-----<br />\n> &gt; Version: GnuPG v1<br />\n> &gt;<br />\n> &gt; iQEcBAEBAgAGBQJVigtJAAoJEGxwq/inSG8CqZwIAIG3ZQzekfccPxBOMqtim175<br />\n> &gt; Crov6hrO9FaIzbLljECpUi60RKuDM/fs09ZJsKKIaJPkB5dlJjs4huc206veAIO&#43;<br />\n> &gt; K2h3DmAcA6W/Thk0C2cV3ewv&#43;OiELDOhpeoddBBLPadAfaBGr4l9ltqWLdBtMCmw<br />\n> &gt; OtmiWstEuXTao9ApgoFOmybdmCjbfrfhejOOHs/pMiSn5xVE60RK4x2HFTFsHfAN<br />\n> &gt; fZAeLCuwuN2qWMrVrr&#43;cbpCXjEuE1xZG3WEj7ppYoGR&#43;AgF/Y5/U1j7S4PVpk85s<br />\n> &gt; CgMkpcWvLnBMmSCrllnRZy1Gfrwk36Pg0rXD/l/NNd0/KTpmPSvkX/bCyzFwbzo&#61;<br />\n> &gt; &#61;ft62<br />\n> &gt; -----END PGP SIGNATURE-----<br />\n> &gt; _______________________________________________<br />\n> &gt; bitcoin-dev mailing list<br />\n> &gt; <a href=\"mailto:bitcoin-dev&#64;lists.linuxfoundation.org\">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />\n> &gt; <a href=\"https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />\n> &gt;<br />\n> _______________________________________________<br />\n> bitcoin-dev mailing list<br />\n> <a href=\"mailto:bitcoin-dev&#64;lists.linuxfoundation.org\">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />\n> <a href=\"https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />\n> </div></div></blockquote></div><br /></div>\n> </blockquote></div><br />_______________________________________________<br />\n> bitcoin-dev mailing list<br />\n> <a href=\"mailto:bitcoin-dev&#64;lists.linuxfoundation.org\">bitcoin-dev&#64;lists.linuxfoundation.org</a><br />\n> <a href=\"https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\">https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev</a><br />\n> <br /></blockquote></div>\n> </blockquote></div>\n\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            }
        ],
        "thread_summary": {
            "title": "Draft BIP : fixed-schedule block size increase",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Stephen Morse",
                "Milly Bitcoin",
                "Roy Badami",
                "Tier Nolan",
                "William Madden",
                "Martin Schwarz",
                "Allen Piscitello",
                "odinn",
                "Raystonn",
                "Adam Back",
                "Peter Todd",
                "Ross Nicoll",
                "Mark Friedenbach",
                "Jeff Garzik",
                "Patrick Strateman",
                "Kalle Rosenbaum",
                "Simon Liu",
                "Gareth Williams",
                "Jean-Paul Kogelman",
                "Gavin Andresen",
                "Will",
                "Ivan Brightly",
                "Carsten Otto",
                "Pieter Wuille",
                "Pindar Wong",
                "grarpamp"
            ],
            "messages_count": 55,
            "total_messages_chars_count": 178647
        }
    },
    {
        "title": "[bitcoin-dev] [RFC] IBLT block testing implementation",
        "thread_messages": [
            {
                "author": "Rusty Russell",
                "date": "2015-06-23T05:53:27",
                "message_text_only": "Hi all,\n\n        I've come up with a model for using IBLT to communicate blocks\nbetween peers.  The gory details can be found on github: it's a\nstandalone C++ app for testing not integrated with bitcoin.\n\n        https://github.com/rustyrussell/bitcoin-iblt\n\nAssumptions and details:\n\n1. The base idea comes from Gavin's Block Propagation gist:\n        https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2\n\n2. It relies on similarity in mempools, with some selection hints.  This\n   is designed to be as flexible as possible to make fewest assumptions\n   on tx selection policy.\n\n3. The selection hints are: minimum fee-per-byte (fixed point) and\n   bitmaps of included-despite-that and rejected-despite-that.  The\n   former covers things like child-pays-for-parent and the priority\n   area.  The latter covers other cases like Eligius censoring \"spam\",\n   bitcoin version differences, etc.\n\n4. Cost to represent these exceptional added or excluded transactions is\n   (on average) log2(transactions in mempool) bits.\n\n5. At Peiter Wuille's suggestion, it is designed to be reencoded between\n   nodes.  It seems fast enough for that, and neighboring nodes should\n   have most similar mempools.\n\n6. It performs reasonably well on my 100 block sample in bitcoin-corpus\n   (chosen to include a mempool spike):\n\n   Average block range (bytes):                         7988-999829\n   Block size mean (bytes):                             401926\n\n   Minimal decodable BLT size range (bytes):            314-386361\n   Minimal decodable BLT size mean (bytes):             13265\n\n7. Actual results will have to be worse than these minima, as peers will\n   have to oversize the IBLT to have reasonable chance of success.\n\n8. There is more work to do, and more investigation to be done, but I\n   don't expect more than a 25% reduction in this \"ideal minimum\"\n   result.\n\nSpecial thanks to Kalle Rosenbaum for helping investigate IBLTs with me\nlast year.\n\nCheers,\nRusty.\nPS. I work for Blockstream.  And I'm supposed to be working on\n    Lightning, not this."
            },
            {
                "author": "Kalle Rosenbaum",
                "date": "2015-06-25T21:02:25",
                "message_text_only": "2015-06-23 7:53 GMT+02:00 Rusty Russell <rusty at rustcorp.com.au>:\n> Hi all,\n>\n>         I've come up with a model for using IBLT to communicate blocks\n> between peers.  The gory details can be found on github: it's a\n> standalone C++ app for testing not integrated with bitcoin.\n>\n>         https://github.com/rustyrussell/bitcoin-iblt\n\nGood to see that you're working on this. Really exciting!\n\nI want to take the opportunity to link to my previous work on IBLTs, for\nthose that haven't seen it, where I investigate the behaviour of the IBLT\nwhen changing different parameters, like cell count, hashFunctionCount etc:\nhttps://github.com/kallerosenbaum/bitcoin-iblt/wiki\n\n>From glancing over your implementation, I see that you don't use a\nkeyHashSum, in fact you don't use a key at all, but only a\nconcatenatenation of (txid48, fragid, tx-chunk) as value. Here the\ntxid48+fragid functions as a kind of keyHashSum. I think this might be a\nvery good idea,\n\nIf you have a false positive with count == 1, then you would probably\ndetect it if fragid is outside reasonable limit from from base_fragid. Did\nyou implement your idea to remove all the count==1 fagments in ascending\norder of (fragid-base_fragid)?\n\nAnyhow, I think we should make some more comparable tests, just as you\nproposed last year when I didn't reply, sorry... My code is a more straight\nforward implementation of the IBLT paper (http://arxiv.org/pdf/1101.2245.pdf)\nand encoding blocks is done pretty much as Gavin proposed in his gist. That\nshould function as a baseline so that we can validate that your\noptimizations actually work. Please contact me directly if you are\ninterested in that, and we'll figure something out.\n\nMore comments/questions inline:\n\n>\n> Assumptions and details:\n>\n> 1. The base idea comes from Gavin's Block Propagation gist:\n>         https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2\n>\n> 2. It relies on similarity in mempools, with some selection hints.  This\n>    is designed to be as flexible as possible to make fewest assumptions\n>    on tx selection policy.\n>\n> 3. The selection hints are: minimum fee-per-byte (fixed point) and\n>    bitmaps of included-despite-that and rejected-despite-that.  The\n>    former covers things like child-pays-for-parent and the priority\n>    area.  The latter covers other cases like Eligius censoring \"spam\",\n>    bitcoin version differences, etc.\n>\n\nThere is a chance that the bit prefix of the added or removed tx is not\nunique within the receiver's mempool. In that case the receiver can\nprobably just use the earliest matching transaction and hope for the best.\nIf not -> bad luck. Is that how you do it?\n\n> 4. Cost to represent these exceptional added or excluded transactions is\n>    (on average) log2(transactions in mempool) bits.\n\nThese exceptional tx *could* instead be encoded in the IBLT, just as if\nthey were unknown differences. Your bitmaps is probably a more compact\nrepresentation, but it's also more complex.\n\n>\n> 5. At Peiter Wuille's suggestion, it is designed to be reencoded between\n>    nodes.  It seems fast enough for that, and neighboring nodes should\n>    have most similar mempools.\n>\n\nWhat is the purpose of reencoding when relaying? Is that to improve the\nfailure probability as new tx may have arrived in the mempool of the\nintermediary node?\n\n> 6. It performs reasonably well on my 100 block sample in bitcoin-corpus\n>    (chosen to include a mempool spike):\n>\n>    Average block range (bytes):                         7988-999829\n>    Block size mean (bytes):                             401926\n>\n>    Minimal decodable BLT size range (bytes):            314-386361\n>    Minimal decodable BLT size mean (bytes):             13265\n>\n> 7. Actual results will have to be worse than these minima, as peers will\n>    have to oversize the IBLT to have reasonable chance of success.\n>\n\nYes, I have made some analysis on this here:\nhttps://github.com/kallerosenbaum/bitcoin-iblt/wiki/FailureProbability. We\nuse quite different data structures for encoding blocks in IBLT, but it\nmight apply to your implementation as well. An interesting result is that\nthe space saving percentage actually increases as blocks grow.\n\n> 8. There is more work to do, and more investigation to be done, but I\n>    don't expect more than a 25% reduction in this \"ideal minimum\"\n>    result.\n>\n> Special thanks to Kalle Rosenbaum for helping investigate IBLTs with me\n> last year.\n\nThank you too!\n\nRegards,\nKalle\n\n>\n> Cheers,\n> Rusty.\n> PS. I work for Blockstream.  And I'm supposed to be working on\n>     Lightning, not this.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/6fd25491/attachment.html>"
            },
            {
                "author": "Rusty Russell",
                "date": "2015-06-27T04:46:35",
                "message_text_only": "Kalle Rosenbaum <kalle at rosenbaum.se> writes:\n> 2015-06-23 7:53 GMT+02:00 Rusty Russell <rusty at rustcorp.com.au>:\n>> Hi all,\n>>\n>>         I've come up with a model for using IBLT to communicate blocks\n>> between peers.  The gory details can be found on github: it's a\n>> standalone C++ app for testing not integrated with bitcoin.\n>>\n>>         https://github.com/rustyrussell/bitcoin-iblt\n>\n> Good to see that you're working on this. Really exciting!\n>\n> I want to take the opportunity to link to my previous work on IBLTs, for\n> those that haven't seen it, where I investigate the behaviour of the IBLT\n> when changing different parameters, like cell count, hashFunctionCount etc:\n> https://github.com/kallerosenbaum/bitcoin-iblt/wiki\n\nYep, I stole the hashFunctionCount = 3 straight from there, same\nwith 64-byte bucket contents.\n\n>>From glancing over your implementation, I see that you don't use a\n> keyHashSum, in fact you don't use a key at all, but only a\n> concatenatenation of (txid48, fragid, tx-chunk) as value. Here the\n> txid48+fragid functions as a kind of keyHashSum. I think this might be a\n> very good idea,\n>\n> If you have a false positive with count == 1, then you would probably\n> detect it if fragid is outside reasonable limit from from base_fragid. Did\n> you implement your idea to remove all the count==1 fagments in ascending\n> order of (fragid-base_fragid)?\n\nYep!  I keep records of all the 1 and -1 buckets; separate lists\ndepending on how far they are off the base.  Lists for 0, 1, 2, ... 7,\nthen powers of 2.  See todo in iblt.cpp.\n\n> Anyhow, I think we should make some more comparable tests, just as you\n> proposed last year when I didn't reply, sorry... My code is a more straight\n> forward implementation of the IBLT paper (http://arxiv.org/pdf/1101.2245.pdf)\n> and encoding blocks is done pretty much as Gavin proposed in his gist. That\n> should function as a baseline so that we can validate that your\n> optimizations actually work. Please contact me directly if you are\n> interested in that, and we'll figure something out.\n\nAbsolutely, will do that offline.\n\n> More comments/questions inline:\n>\n>>\n>> Assumptions and details:\n>>\n>> 1. The base idea comes from Gavin's Block Propagation gist:\n>>         https://gist.github.com/gavinandresen/e20c3b5a1d4b97f79ac2\n>>\n>> 2. It relies on similarity in mempools, with some selection hints.  This\n>>    is designed to be as flexible as possible to make fewest assumptions\n>>    on tx selection policy.\n>>\n>> 3. The selection hints are: minimum fee-per-byte (fixed point) and\n>>    bitmaps of included-despite-that and rejected-despite-that.  The\n>>    former covers things like child-pays-for-parent and the priority\n>>    area.  The latter covers other cases like Eligius censoring \"spam\",\n>>    bitcoin version differences, etc.\n>>\n>\n> There is a chance that the bit prefix of the added or removed tx is not\n> unique within the receiver's mempool. In that case the receiver can\n> probably just use the earliest matching transaction and hope for the best.\n> If not -> bad luck. Is that how you do it?\n\nNo; they add or remove all matching.  If they add too many, that's the\neasy case, of course.  They can't remove too many (since they know that\nbit prefix was unique on the other end).\n\n>> 4. Cost to represent these exceptional added or excluded transactions is\n>>    (on average) log2(transactions in mempool) bits.\n>\n> These exceptional tx *could* instead be encoded in the IBLT, just as if\n> they were unknown differences. Your bitmaps is probably a more compact\n> representation, but it's also more complex.\n\nIt's pretty easy to cut the bitmaps to zero and test this (comment them\nout in wire_encode.cpp, for example).\n\nBut the overhead of IBLT is some factor greater than txsize (need to\nmeasure that factor, too!); whereas these are a log(#txs-in-mempool) bits.\n\n>> 5. At Peiter Wuille's suggestion, it is designed to be reencoded between\n>>    nodes.  It seems fast enough for that, and neighboring nodes should\n>>    have most similar mempools.\n>\n> What is the purpose of reencoding when relaying? Is that to improve the\n> failure probability as new tx may have arrived in the mempool of the\n> intermediary node?\n\nYep, and estimation ability.  The theory is that adjacent nodes will\nhave closer mempools, allowing for smaller IBLTs.  The size of mempool\ndifferences for each block can be fed back, so you have an idea of the\nlikely delta to peers (ie. add that to the actual difference between\nyour mempool and the new block, to estimate the amount of IBLT\nreconstruction required).\n\n>> 6. It performs reasonably well on my 100 block sample in bitcoin-corpus\n>>    (chosen to include a mempool spike):\n>>\n>>    Average block range (bytes):                         7988-999829\n>>    Block size mean (bytes):                             401926\n>>\n>>    Minimal decodable BLT size range (bytes):            314-386361\n>>    Minimal decodable BLT size mean (bytes):             13265\n>>\n>> 7. Actual results will have to be worse than these minima, as peers will\n>>    have to oversize the IBLT to have reasonable chance of success.\n>>\n>\n> Yes, I have made some analysis on this here:\n> https://github.com/kallerosenbaum/bitcoin-iblt/wiki/FailureProbability. We\n> use quite different data structures for encoding blocks in IBLT, but it\n> might apply to your implementation as well. An interesting result is that\n> the space saving percentage actually increases as blocks grow.\n\nLet's pick a 5% as our failure target (given most nodes will get blocks\nfrom more than 1 peer, and our other estimates of mempool differences\nwill be conservative).  Seems like 16/16 transactions takes ~400 cells\nfor recovery, 64/64 takes ~1400, 128/128 takes ~2480, 256/256 says\n~4600.\n\nUsing that 128/128 => 198k number, and your txs were about 300B, that\nimplies an overhead of 2.6, right?\n\nWe're probably better estimating in terms of \"cells recovered\" (ie. sum\nof cells for txs which we were missing, plus number of txs we added\nerroneously).\n\nCheers,\nRusty."
            }
        ],
        "thread_summary": {
            "title": "IBLT block testing implementation",
            "categories": [
                "bitcoin-dev",
                "RFC"
            ],
            "authors": [
                "Rusty Russell",
                "Kalle Rosenbaum"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 12840
        }
    },
    {
        "title": "[bitcoin-dev] game-theory, miner incentive alignment vs current proposals",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2015-06-23T19:42:37",
                "message_text_only": "We shouldnt lose track of the aspect that miner's interests are not\ndirectly aligned with user interests.  Users want security,\ndecentralisation properties and reasonably cheap fees, miners profit\nfrom fees.  Particular miners may profit from centralisation.  Miners\nare in competition with each other in a complex game.\n\nWe could do with some analysis on Jeff's BIP and Greg Maxwell's\nflexcap (or Meni Rosenfeld's somewhat similar pay for size variant) --\nand Gavin's proposal of what miner game-theory is anticipated and how\nthe proposals hold up under those attacks.\n\nIn Gavin's proposal why would we assume that 8MB wont be used?  Or the\nhuge 8GB later. It is free even for a miner to create blocks of any\nsize up to the cap (zero fees or fees paid to himself).\n\nThe stale rate of propagation delay maybe hidden by the relay-network\nor by collusion, or advantage of a miner already knowing its own\nblock.\n\nWill a group of network topology close miners try to create big blocks\nthat disadvantage other miners?\n\nOr will miners keep blocks small to extract switching-cost fees from\nusers.  (Regardless of cap).\n\nJeff's proposal has a cost free miner vote for cap increase with a\n25%-ile and 90% threshold.  But in the second attack (keeping blocks\nsmall) it alternatively becomes easy for an advantaged 10% to force\nthe block to stay small, in order to extract switching cost fees from\nusers.  Maybe users really love the decentralised features of bitcoin\nand are willing to pay a lot!  Of course overlaid as Jeff observes by\nmeta-incentive that miners need to sell mined bitcoin to pay\nelectricity bills, and want Bitcoin to be in demand and therefore\nindirectly to satisfy user demand.  But that may still result in a\nfair bit of switching cost.  Switching cost economics is common in\nmany networks.\n\nI submit that in terms of robustness of mechanism assuring security,\nit be ordered something like:\n\n1. consensus rule\n2. aligned economic interest\n3. attack requires miner collusion\n4. meta-incentive\n\nThen we could evaluate proposals for how robustly they can enforce\nuser interests vs miner game-theory attack or collusion scenarios.\n\nAdam\n\nOn 23 June 2015 at 09:59, Ross Nicoll <jrn at jrn.me.uk> wrote:\n> Also, before that's turned into \"8MB blocks are infeasible\", my presumption is that blocks are not expected to jump suddenly to 8MB, and that most will have time to ramp up storage and bandwidth.\n>\n> The point about not outright replacing existing test data is the more critical one, anyway, although in retrospect we could simply add spam transactions on top of existing transactions."
            }
        ],
        "thread_summary": {
            "title": "game-theory, miner incentive alignment vs current proposals",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Adam Back"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2597
        }
    },
    {
        "title": "[bitcoin-dev] Mempool size consensus + dynamic block size re-targetting",
        "thread_messages": [
            {
                "author": "Filipe Farinha",
                "date": "2015-06-24T02:02:51",
                "message_text_only": "To my knowledge so far the main proposals regarding block size changes \nare either based on predictions, which traditionally we're not very good \nat, or a voting mechanism by a limited set of stakeholders (miners) \nwhose interests may not be aligned with the rest of the community.\n\nNeither strategy takes into account the most important factor: real-time \nchanges to the mempool. This is for a valid reason, there is currently \nno consensus on the size of the mempool.\n\nSo my question is: has anyone considered the pros and cons of creating \nconsensus around the current (approximate) mempool size?\n\nI propose that, at the expense of some transaction overhead (3 or 4 \nextra bytes?), each full-node that broadcasts a new transaction can add \na mempool_size field that represents their current view of the mempool. \nAs blocks are mined with this new data (which may or not be aggregated \nin the block header), all nodes can quickly reach consensus on the \ncurrent average/median/etc mempool size, and agree on a suitable \nperiodic blocksize \"re-targetting\" (similarly to mining difficulty).\n\nSince all full-nodes (not just miners) get to vote with their \ntransactions the consensus is truly global, and we don't have to change \nblocksize blindly in anticipation of an unpredictable future.\n\nWould this not work, and if not, why?\n\nFilipe Farinha"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-24T02:15:55",
                "message_text_only": "Anyone could lie.\nOn Jun 23, 2015 7:12 PM, \"Filipe Farinha\" <filipe at ktorn.com> wrote:\n\n> To my knowledge so far the main proposals regarding block size changes are\n> either based on predictions, which traditionally we're not very good at, or\n> a voting mechanism by a limited set of stakeholders (miners) whose\n> interests may not be aligned with the rest of the community.\n>\n> Neither strategy takes into account the most important factor: real-time\n> changes to the mempool. This is for a valid reason, there is currently no\n> consensus on the size of the mempool.\n>\n> So my question is: has anyone considered the pros and cons of creating\n> consensus around the current (approximate) mempool size?\n>\n> I propose that, at the expense of some transaction overhead (3 or 4 extra\n> bytes?), each full-node that broadcasts a new transaction can add a\n> mempool_size field that represents their current view of the mempool. As\n> blocks are mined with this new data (which may or not be aggregated in the\n> block header), all nodes can quickly reach consensus on the current\n> average/median/etc mempool size, and agree on a suitable periodic blocksize\n> \"re-targetting\" (similarly to mining difficulty).\n>\n> Since all full-nodes (not just miners) get to vote with their transactions\n> the consensus is truly global, and we don't have to change blocksize\n> blindly in anticipation of an unpredictable future.\n>\n> Would this not work, and if not, why?\n>\n> Filipe Farinha\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/819e7bde/attachment-0001.html>"
            },
            {
                "author": "Filipe Farinha",
                "date": "2015-06-24T02:24:03",
                "message_text_only": "On 24/06/2015 10:15, Mark Friedenbach wrote:\n>\n> Anyone could lie.\n>\nTrue.\nWhat would be the incentive for the majority of transaction broadcasting \nfull-nodes to lie about the mempool size?"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-24T02:43:44",
                "message_text_only": "On Wed, Jun 24, 2015 at 10:24:03AM +0800, Filipe Farinha wrote:\n> On 24/06/2015 10:15, Mark Friedenbach wrote:\n> >\n> >Anyone could lie.\n> >\n> True.\n> What would be the incentive for the majority of transaction\n> broadcasting full-nodes to lie about the mempool size?\n\nIt might help you to answer the following: If your mempool consensus\nidea worked, could you use it to replace proof-of-work? Why? Why not?\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000001256cc4d7dc7b68be627cbbf65f2b7827fb3e2cc41cf2517\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150623/19817249/attachment.sig>"
            },
            {
                "author": "Filipe Farinha",
                "date": "2015-06-24T03:02:37",
                "message_text_only": "On 24/06/2015 10:43, Peter Todd wrote:\n> It might help you to answer the following: If your mempool consensus \n> idea worked, could you use it to replace proof-of-work? Why? Why not? \nI shouldn't have to answer that, but the answer is clearly no.\n\nPlease consider this argument when evaluating the pros and cons of BIP 100.\n\nFilipe Farinha"
            }
        ],
        "thread_summary": {
            "title": "Mempool size consensus + dynamic block size re-targetting",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Filipe Farinha",
                "Peter Todd",
                "Mark Friedenbach"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 4496
        }
    },
    {
        "title": "[bitcoin-dev] New GPG signing key for Bitcoin Core binary releases",
        "thread_messages": [
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-24T11:47:28",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nHello,\n\nStarting with 0.11.0rc3, SHA256SUMS.asc will be signed with the following key:\n\n    pub   4096R/36C2E964 2015-06-24 Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj at gmail.com>\n    Primary key fingerprint: 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964\n\nFor gitian and commit signing I will keep using this key.\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJViphCAAoJEHSBCwEjRsmmtRoIALBzJMGXzoj5t9OQSedxjnjP\nsxfHuBwQxeuPYXbRlMjY5UZhmabbt0/mLRfVSdscnCzp0YxbMRwD7I6MdHqXyBtd\noS+TUfMNir5lk7Ti2hRStgvxqsAbHUJ08LlqpJXV5dq3QgeJyJwZM76a6yyaGwxP\nSwqvKklQZ/qdrKOgjjn6d5HywgsmybJSDzEDR3k+ogkLsfM1jcpqZhwFeRVpk94m\nSgZGLLx5zAIKcLHn4I1FaZ+OAmmS0ukYcmotMOUk6NBEjHTDfjEFBrbrlwvL4G7r\nkjd1mRxkaJMxX3nJicXiEQClVoeUrMVyJrrsTGyPixSicdQbItuyLWXm37fAfE0=\n=4v49\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "New GPG signing key for Bitcoin Core binary releases",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Wladimir J. van der Laan"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 883
        }
    },
    {
        "title": "[bitcoin-dev] Announcing Individual User Accounts at statoshi.info",
        "thread_messages": [
            {
                "author": "Jameson Lopp",
                "date": "2015-06-24T19:36:33",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI'm pleased to announce support for creating individual accounts on https://statoshi.info so that devs can create, save, and share their own dashboards. If you want to create an account for yourself, follow these instructions: https://medium.com/@lopp/statoshi-info-account-creation-guide-8033b745a5b7\n\nIf you're unfamiliar with Statoshi, check out these two posts:\n\nhttps://medium.com/@lopp/announcing-statoshi-realtime-bitcoin-node-statistics-61457f07ee87\n\nhttps://medium.com/@lopp/announcing-statoshi-info-5c377997b30c\n\nMy goal with Statoshi is to provide insight into the operations of Bitcoin Core nodes. If there are any metrics or instrumentation that you think should be added to Statoshi, please submit an issue or a pull request at https://github.com/jlopp/statoshi\n\n- --\nJameson Lopp\nSoftware Engineer\nBitGo, Inc\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJViwbBAAoJEIch3FSFNiDcrs4IAKssrsgi+KoD4mHB3duIbTae\neeQ3G1obCmnz6gK/nuS/1L6ywYSzQ5rhfHpZeN/ZKVPyRrIGpWh8PPD9QYa19NyS\nuJFeuvWtbNEkQmKtWQeXFyf265QqehTayAZkW4S9HdlnC8zfQ+E/b6Zs4KA7ZaPa\n/psIcgCGWmdbegIB2Cqqg2xqlIori5oEHlLsA449u5i5d5X0pw+COtLxL2LKG5Bd\nmDaGBheSbsO1yzg98ey9+mWMEZXs6w9JUGdvoIkDHYnyVy1ws2oa6qyGblXF4nQS\nmwD1VnXtOOZmqORT4HwIFSItFEoAagdM5RlhtqGwa4OfUIfEae4fkghZ0JDzC20=\n=k/Sc\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Announcing Individual User Accounts at statoshi.info",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Jameson Lopp"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1343
        }
    },
    {
        "title": "[bitcoin-dev]  BIP Process and Votes",
        "thread_messages": [
            {
                "author": "Raystonn",
                "date": "2015-06-24T23:41:10",
                "message_text_only": "I would like to start a civil discussion on an undefined, or at least unwritten, portion of the BIP process.  Who should get to vote on approval to commit a BIP implementation into Bitcoin Core?  Is a simple majority of these voters sufficient for approval?  If not, then what is?\n\nRaystonn"
            }
        ],
        "thread_summary": {
            "title": "BIP Process and Votes",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Raystonn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 290
        }
    },
    {
        "title": "[bitcoin-dev] BIP Process and Votes",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2015-06-24T23:49:25",
                "message_text_only": "BIPs  are accepted into BIP repo with a low \"reasonable\" threshold.\n\nCode is accepted into the Bitcoin Core repo when it is likely that the\ncommunity will accept a change.\n\nThere is no voting in the way you think. Devs commit changes the users will\naccept and use. Users \"fire\" developers by choosing different devs or\ndifferent software.\n\nStandard open source method.\n On Jun 24, 2015 4:41 PM, \"Raystonn\" <raystonn at hotmail.com> wrote:\n\n> I would like to start a civil discussion on an undefined, or at least\n> unwritten, portion of the BIP process.  Who should get to vote on approval\n> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n> these voters sufficient for approval?  If not, then what is?\n>\n> Raystonn\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/5eae6595/attachment-0001.html>"
            },
            {
                "author": "Bryan Bishop",
                "date": "2015-06-25T00:11:53",
                "message_text_only": "On Wed, Jun 24, 2015 at 6:49 PM, Jeff Garzik <jgarzik at gmail.com> wrote:\n\n> There is no voting in the way you think. Devs commit changes the users\n> will accept and use. Users \"fire\" developers by choosing different devs or\n> different software.\n\n\nI think that statement is too weak. Users are all personally responsible\nfor evaluating all rules for themselves. Many have chosen and will continue\nto choose to just keep an ear out for rule changes that they may be\ninterested in using. Ever user should be educated on this topic...\notherwise there are too many principal agent problems, even with the\nability to \"fire\" developers (a.k.a \"use different software\"). It's similar\nto the reasons why it's important to see all the transactions on the\nnetwork.\n\n- Bryan\nhttp://heybryan.org/\n1 512 203 0507\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/92da5acc/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T00:21:00",
                "message_text_only": ">There is no voting in the way you think. Devs commit changes the users \nwill accept and use. Users \"fire\" developers by choosing different devs \nor different software.\n\n >Standard open source method.\n\nMost open source projects do not require 100% user adoption in order for \nother users to be compatible.  Very different than most open source \nprojects.  Repeating \"stock\" answers does nothing to advanced the \ndiscussion.\n\nRuss"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T00:07:14",
                "message_text_only": "I have seen this question asked many times.  Most developers become \ndefensive and they usually give a very vague 1-sentence answer when this \nquestion is asked.  It seems to be it is based on personalities rather \nthan any kind of definable process.  To have that discussion the \npersonalities must be separated out and answers like \"such-and-such \nwouldn't do that\" don't really do much to advance the discussion.  Also, \nthe incentive for new developers to come in is that they will be paid by \ncompanies who want to influence the code and this should be considered \n(some developers take this statement as an insult when it is just a \nstatement of the incentive process).\n\nThe other problem you are having is the lead developer does not want to \nbe a \"decider\" when, in fact, he is a very significant decider.  While \nthe users have the ultimate choice in a practical sense the chief \ndeveloper is the \"decider.\"  Now people don't want to get him upset so \nnobody wants to push the issue or fully define the process.  Now you are \nleft with a broken, unwritten/unspoken process.  While this type of \nthing may work with a small group of developers businesses/investors \nlooking in from the outside will see this as a risk.\n\nUntil you get passed all the personality-based arguments you are going \nto have a tough time defining a real process.\n\nRuss\n\n\n\n\n\nOn 6/24/2015 7:41 PM, Raystonn wrote:\n> I would like to start a civil discussion on an undefined, or at least unwritten, portion of the BIP process.  Who should get to vote on approval to commit a BIP implementation into Bitcoin Core?  Is a simple majority of these voters sufficient for approval?  If not, then what is?\n>\n> Raystonn\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-25T01:50:59",
                "message_text_only": "I'm sorry but this is absolutely not the case, Milly. The reason that\npeople get defensive is that we have a carefully constructed process that\ndoes work (thank you very much!) and is well documented. We talk about it\nquite often in fact as it is a defining characteristic of how bitcoin is\ndeveloped which differs in some ways from how other open source software is\ndeveloped -- although it remains the same in most other ways.\n\nChanges to the non-consensus sections of Bitcoin Core tend to get merged\nwhen there are a few reviews, tests, and ACKs from recognized developers,\nthere are no outstanding objections, and the maintainer doing the merge\nmakes a subjective judgement that the code is ready.\n\nConsensus-changes, on the other hand, get merged into Bitcoin Core only\nafter the above criteria are met AND an extremely long discussion period\nthat has given all the relevant stakeholders a chance to comment, and no\nsignificant objections remain. Consensus-code changes are unanimous. They\nmust be.\n\nThe sort of process that exists in standards bodies for example, with\nworking groups and formal voting procedures, has no place where changes\ndefine the nature and validity of other people's money. Who has the right\nto reach into your pocket and define how you can or cannot spend your\ncoins? The premise of bitcoin is that no one has that right, yet that is\nvery much what we do when consensus code changes are made. That is why when\nwe make a change to the rules governing the nature of bitcoin, we must make\nsure that everyone is made aware of the change and consents to it.\n\nEveryone. Does this work? Does this scale? So far, it does. Uncontroversial\nchanges, such as BIP 66, are deployed without issue. Every indication is\nthat BIP 66 will complete deployment in the very near future, and we intend\nto repeat this process for more interesting changes such as BIP65:\nCHECKLOCKTIMEVERIFY.\n\nThis isn't about no one stepping forward to be the \"decider.\" This is about\nno one having the right to decide these things on the behalf of others. If\na contentious change is proposed and not accepted by the process of\nconsensus, that is because the process is doing its job at rejecting\ncontroversial changes. It has nothing to do with personality, and\neverything to do with the nature of bitcoin itself.\n\n\nOn Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n\n> I have seen this question asked many times.  Most developers become\n> defensive and they usually give a very vague 1-sentence answer when this\n> question is asked.  It seems to be it is based on personalities rather than\n> any kind of definable process.  To have that discussion the personalities\n> must be separated out and answers like \"such-and-such wouldn't do that\"\n> don't really do much to advance the discussion.  Also, the incentive for\n> new developers to come in is that they will be paid by companies who want\n> to influence the code and this should be considered (some developers take\n> this statement as an insult when it is just a statement of the incentive\n> process).\n>\n> The other problem you are having is the lead developer does not want to be\n> a \"decider\" when, in fact, he is a very significant decider.  While the\n> users have the ultimate choice in a practical sense the chief developer is\n> the \"decider.\"  Now people don't want to get him upset so nobody wants to\n> push the issue or fully define the process.  Now you are left with a\n> broken, unwritten/unspoken process.  While this type of thing may work with\n> a small group of developers businesses/investors looking in from the\n> outside will see this as a risk.\n>\n> Until you get passed all the personality-based arguments you are going to\n> have a tough time defining a real process.\n>\n> Russ\n>\n>\n>\n>\n>\n>\n> On 6/24/2015 7:41 PM, Raystonn wrote:\n>\n>> I would like to start a civil discussion on an undefined, or at least\n>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>> these voters sufficient for approval?  If not, then what is?\n>>\n>> Raystonn\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/5488f38b/attachment-0001.html>"
            },
            {
                "author": "Alex Morcos",
                "date": "2015-06-25T02:30:53",
                "message_text_only": "+1 Mark!\n\n\nOn Wed, Jun 24, 2015 at 9:50 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> I'm sorry but this is absolutely not the case, Milly. The reason that\n> people get defensive is that we have a carefully constructed process that\n> does work (thank you very much!) and is well documented. We talk about it\n> quite often in fact as it is a defining characteristic of how bitcoin is\n> developed which differs in some ways from how other open source software is\n> developed -- although it remains the same in most other ways.\n>\n> Changes to the non-consensus sections of Bitcoin Core tend to get merged\n> when there are a few reviews, tests, and ACKs from recognized developers,\n> there are no outstanding objections, and the maintainer doing the merge\n> makes a subjective judgement that the code is ready.\n>\n> Consensus-changes, on the other hand, get merged into Bitcoin Core only\n> after the above criteria are met AND an extremely long discussion period\n> that has given all the relevant stakeholders a chance to comment, and no\n> significant objections remain. Consensus-code changes are unanimous. They\n> must be.\n>\n> The sort of process that exists in standards bodies for example, with\n> working groups and formal voting procedures, has no place where changes\n> define the nature and validity of other people's money. Who has the right\n> to reach into your pocket and define how you can or cannot spend your\n> coins? The premise of bitcoin is that no one has that right, yet that is\n> very much what we do when consensus code changes are made. That is why when\n> we make a change to the rules governing the nature of bitcoin, we must make\n> sure that everyone is made aware of the change and consents to it.\n>\n> Everyone. Does this work? Does this scale? So far, it does.\n> Uncontroversial changes, such as BIP 66, are deployed without issue. Every\n> indication is that BIP 66 will complete deployment in the very near future,\n> and we intend to repeat this process for more interesting changes such as\n> BIP65: CHECKLOCKTIMEVERIFY.\n>\n> This isn't about no one stepping forward to be the \"decider.\" This is\n> about no one having the right to decide these things on the behalf of\n> others. If a contentious change is proposed and not accepted by the process\n> of consensus, that is because the process is doing its job at rejecting\n> controversial changes. It has nothing to do with personality, and\n> everything to do with the nature of bitcoin itself.\n>\n>\n> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin <milly at bitcoins.info>\n> wrote:\n>\n>> I have seen this question asked many times.  Most developers become\n>> defensive and they usually give a very vague 1-sentence answer when this\n>> question is asked.  It seems to be it is based on personalities rather than\n>> any kind of definable process.  To have that discussion the personalities\n>> must be separated out and answers like \"such-and-such wouldn't do that\"\n>> don't really do much to advance the discussion.  Also, the incentive for\n>> new developers to come in is that they will be paid by companies who want\n>> to influence the code and this should be considered (some developers take\n>> this statement as an insult when it is just a statement of the incentive\n>> process).\n>>\n>> The other problem you are having is the lead developer does not want to\n>> be a \"decider\" when, in fact, he is a very significant decider.  While the\n>> users have the ultimate choice in a practical sense the chief developer is\n>> the \"decider.\"  Now people don't want to get him upset so nobody wants to\n>> push the issue or fully define the process.  Now you are left with a\n>> broken, unwritten/unspoken process.  While this type of thing may work with\n>> a small group of developers businesses/investors looking in from the\n>> outside will see this as a risk.\n>>\n>> Until you get passed all the personality-based arguments you are going to\n>> have a tough time defining a real process.\n>>\n>> Russ\n>>\n>>\n>>\n>>\n>>\n>>\n>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>\n>>> I would like to start a civil discussion on an undefined, or at least\n>>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>>> these voters sufficient for approval?  If not, then what is?\n>>>\n>>> Raystonn\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/3c10f6ac/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T02:34:43",
                "message_text_only": "I'm sorry but that is the kind of defensive, cultish response everyone \ngets when they ask that question.  If you had a well constructed \ndocumented process then you would be able to point to it ... but you \ncan't.  While there are a few bits and pieces scattered  about in \ndifferent places there is no coherent plan or process.\n\nIt is easy to make statements like \"consensus must be unanimous\" but the \nissue is that you never have true 100% consensus yet you have to move \nforward in some fashion and everyone has to run software with the same \nconsensus rules.  The issue is how you move forward is the question that \nnobody wants to answer because (a) it is a hard question to answer and \n(b) developers see it as a threat to their authority/position.  If \npeople just keep shutting down the discussion with a bunch of cultish \nstock answers then you are never going to move forward with developing \nsome kind of process.\n\n From what I can see much of the discussion is personality-driven and \nnot based on Computer Science or and defined process.  The issue is that \na personality has changed so the process is perceived to be different \nand some people want to hard fork. Previously, the cultish answer is \nthat Bitcoin development is decentralized because people can fork the \ncode.  Now that some developers want to fork the code suddenly it is a \nbig problem. Is forking the code part of the consensus process or is it \nthe work of the devil?   The fact that there is so much diverse opinion \non this shows a defined process has never been fully vetted or understood.\n\nI have worked on these processes for many years for projects orders of \nmagnitudes larger than Bitcoin.  I can absolutely assure you the current \nmishmash does not scale and huge amounts of time are wasted.  That \nshould be readily apparent from the recent discussions and the recent \nconcern it has caused from people outside the developer's inner circle.\n\nLack of defined process = high risk and wasted effort.\n\nRuss\n\n\n\n\nOn 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n> I'm sorry but this is absolutely not the case, Milly. The reason that \n> people get defensive is that we have a carefully constructed process \n> that does work (thank you very much!) and is well documented. We talk \n> about it quite often in fact as it is a defining characteristic of how \n> bitcoin is developed which differs in some ways from how other open \n> source software is developed -- although it remains the same in most \n> other ways.\n>\n> Changes to the non-consensus sections of Bitcoin Core tend to get \n> merged when there are a few reviews, tests, and ACKs from recognized \n> developers, there are no outstanding objections, and the maintainer \n> doing the merge makes a subjective judgement that the code is ready.\n>\n> Consensus-changes, on the other hand, get merged into Bitcoin Core \n> only after the above criteria are met AND an extremely long discussion \n> period that has given all the relevant stakeholders a chance to \n> comment, and no significant objections remain. Consensus-code changes \n> are unanimous. They must be.\n>\n> The sort of process that exists in standards bodies for example, with \n> working groups and formal voting procedures, has no place where \n> changes define the nature and validity of other people's money. Who \n> has the right to reach into your pocket and define how you can or \n> cannot spend your coins? The premise of bitcoin is that no one has \n> that right, yet that is very much what we do when consensus code \n> changes are made. That is why when we make a change to the rules \n> governing the nature of bitcoin, we must make sure that everyone is \n> made aware of the change and consents to it.\n>\n> Everyone. Does this work? Does this scale? So far, it does. \n> Uncontroversial changes, such as BIP 66, are deployed without issue. \n> Every indication is that BIP 66 will complete deployment in the very \n> near future, and we intend to repeat this process for more interesting \n> changes such as BIP65: CHECKLOCKTIMEVERIFY.\n>\n> This isn't about no one stepping forward to be the \"decider.\" This is \n> about no one having the right to decide these things on the behalf of \n> others. If a contentious change is proposed and not accepted by the \n> process of consensus, that is because the process is doing its job at \n> rejecting controversial changes. It has nothing to do with \n> personality, and everything to do with the nature of bitcoin itself.\n>\n>\n> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin <milly at bitcoins.info \n> <mailto:milly at bitcoins.info>> wrote:\n>\n>     I have seen this question asked many times.  Most developers\n>     become defensive and they usually give a very vague 1-sentence\n>     answer when this question is asked.  It seems to be it is based on\n>     personalities rather than any kind of definable process.  To have\n>     that discussion the personalities must be separated out and\n>     answers like \"such-and-such wouldn't do that\" don't really do much\n>     to advance the discussion.  Also, the incentive for new developers\n>     to come in is that they will be paid by companies who want to\n>     influence the code and this should be considered (some developers\n>     take this statement as an insult when it is just a statement of\n>     the incentive process).\n>\n>     The other problem you are having is the lead developer does not\n>     want to be a \"decider\" when, in fact, he is a very significant\n>     decider.  While the users have the ultimate choice in a practical\n>     sense the chief developer is the \"decider.\"  Now people don't want\n>     to get him upset so nobody wants to push the issue or fully define\n>     the process. Now you are left with a broken, unwritten/unspoken\n>     process.  While this type of thing may work with a small group of\n>     developers businesses/investors looking in from the outside will\n>     see this as a risk.\n>\n>     Until you get passed all the personality-based arguments you are\n>     going to have a tough time defining a real process.\n>\n>     Russ\n>\n>\n>\n>\n>\n>\n>     On 6/24/2015 7:41 PM, Raystonn wrote:\n>\n>         I would like to start a civil discussion on an undefined, or\n>         at least unwritten, portion of the BIP process.  Who should\n>         get to vote on approval to commit a BIP implementation into\n>         Bitcoin Core?  Is a simple majority of these voters sufficient\n>         for approval?  If not, then what is?\n>\n>         Raystonn\n>         _______________________________________________\n>         bitcoin-dev mailing list\n>         bitcoin-dev at lists.linuxfoundation.org\n>         <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n>     _______________________________________________\n>     bitcoin-dev mailing list\n>     bitcoin-dev at lists.linuxfoundation.org\n>     <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/a0c7ba21/attachment-0001.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-25T05:07:26",
                "message_text_only": "Ladies & gents, please do not feed the troll.  This has been explained to\nMilly multiple times in the past, on previous mailing list & github with no\nimpact.\n\n\nOn Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n\n>  I'm sorry but that is the kind of defensive, cultish response everyone\n> gets when they ask that question.  If you had a well constructed documented\n> process then you would be able to point to it ... but you can't.  While\n> there are a few bits and pieces scattered  about in different places there\n> is no coherent plan or process.\n>\n> It is easy to make statements like \"consensus must be unanimous\" but the\n> issue is that you never have true 100% consensus yet you have to move\n> forward in some fashion and everyone has to run software with the same\n> consensus rules.  The issue is how you move forward is the question that\n> nobody wants to answer because (a) it is a hard question to answer and (b)\n> developers see it as a threat to their authority/position.  If people just\n> keep shutting down the discussion with a bunch of cultish stock answers\n> then you are never going to move forward with developing some kind of\n> process.\n>\n> From what I can see much of the discussion is personality-driven and not\n> based on Computer Science or and defined process.  The issue is that a\n> personality has changed so the process is perceived to be different and\n> some people want to hard fork.  Previously, the cultish answer is that\n> Bitcoin development is decentralized because people can fork the code.  Now\n> that some developers want to fork the code suddenly it is a big problem.\n> Is forking the code part of the consensus process or is it the work of the\n> devil?   The fact that there is so much diverse opinion on this shows a\n> defined process has never been fully vetted or understood.\n>\n> I have worked on these processes for many years for projects orders of\n> magnitudes larger than Bitcoin.  I can absolutely assure you the current\n> mishmash does not scale and huge amounts of time are wasted.  That should\n> be readily apparent from the recent discussions and the recent concern it\n> has caused from people outside the developer's inner circle.\n>\n> Lack of defined process = high risk and wasted effort.\n>\n> Russ\n>\n>\n>\n>\n>\n> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>\n>   I'm sorry but this is absolutely not the case, Milly. The reason that\n> people get defensive is that we have a carefully constructed process that\n> does work (thank you very much!) and is well documented. We talk about it\n> quite often in fact as it is a defining characteristic of how bitcoin is\n> developed which differs in some ways from how other open source software is\n> developed -- although it remains the same in most other ways.\n>\n>  Changes to the non-consensus sections of Bitcoin Core tend to get merged\n> when there are a few reviews, tests, and ACKs from recognized developers,\n> there are no outstanding objections, and the maintainer doing the merge\n> makes a subjective judgement that the code is ready.\n>\n>  Consensus-changes, on the other hand, get merged into Bitcoin Core only\n> after the above criteria are met AND an extremely long discussion period\n> that has given all the relevant stakeholders a chance to comment, and no\n> significant objections remain. Consensus-code changes are unanimous. They\n> must be.\n>\n>  The sort of process that exists in standards bodies for example, with\n> working groups and formal voting procedures, has no place where changes\n> define the nature and validity of other people's money. Who has the right\n> to reach into your pocket and define how you can or cannot spend your\n> coins? The premise of bitcoin is that no one has that right, yet that is\n> very much what we do when consensus code changes are made. That is why when\n> we make a change to the rules governing the nature of bitcoin, we must make\n> sure that everyone is made aware of the change and consents to it.\n>\n>  Everyone. Does this work? Does this scale? So far, it does.\n> Uncontroversial changes, such as BIP 66, are deployed without issue. Every\n> indication is that BIP 66 will complete deployment in the very near future,\n> and we intend to repeat this process for more interesting changes such as\n> BIP65: CHECKLOCKTIMEVERIFY.\n>\n>  This isn't about no one stepping forward to be the \"decider.\" This is\n> about no one having the right to decide these things on the behalf of\n> others. If a contentious change is proposed and not accepted by the process\n> of consensus, that is because the process is doing its job at rejecting\n> controversial changes. It has nothing to do with personality, and\n> everything to do with the nature of bitcoin itself.\n>\n>\n> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>\n> milly at bitcoins.info> wrote:\n>\n>> I have seen this question asked many times.  Most developers become\n>> defensive and they usually give a very vague 1-sentence answer when this\n>> question is asked.  It seems to be it is based on personalities rather than\n>> any kind of definable process.  To have that discussion the personalities\n>> must be separated out and answers like \"such-and-such wouldn't do that\"\n>> don't really do much to advance the discussion.  Also, the incentive for\n>> new developers to come in is that they will be paid by companies who want\n>> to influence the code and this should be considered (some developers take\n>> this statement as an insult when it is just a statement of the incentive\n>> process).\n>>\n>> The other problem you are having is the lead developer does not want to\n>> be a \"decider\" when, in fact, he is a very significant decider.  While the\n>> users have the ultimate choice in a practical sense the chief developer is\n>> the \"decider.\"  Now people don't want to get him upset so nobody wants to\n>> push the issue or fully define the process.  Now you are left with a\n>> broken, unwritten/unspoken process.  While this type of thing may work with\n>> a small group of developers businesses/investors looking in from the\n>> outside will see this as a risk.\n>>\n>> Until you get passed all the personality-based arguments you are going to\n>> have a tough time defining a real process.\n>>\n>> Russ\n>>\n>>\n>>\n>>\n>>\n>>\n>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>\n>>> I would like to start a civil discussion on an undefined, or at least\n>>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>>> these voters sufficient for approval?  If not, then what is?\n>>>\n>>> Raystonn\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/42b42299/attachment-0001.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T05:41:24",
                "message_text_only": "These are the kind of silly responses you often get when this subject \ncomes up.  Mr. Garzik knows how to ignore messages he doesn't want so I \nsee no need for him to use the list to attack people he doesn't agree \nwith and/or try to interfere with discussions of others on the list.\nHe turns it into a personality discussion rather than a discussion of \nSystems Engineering.  He also tries to intimate anyone who brings up the \ndiscussion and \"punish\" them as a lesson to anyone else who may raise \nthe issue.\n\nIt is interesting that people like that are attracted to a decentralized \nsystem.   The reply is simply an attempt at protecting turf which is why \nMr. Garzik's vague replies are never taken seriously on the subject of \ndecision-making process for the software.\n\nRuss\n\n\nOn 6/25/2015 1:07 AM, Jeff Garzik wrote:\n> Ladies & gents, please do not feed the troll. This has been explained \n> to Milly multiple times in the past, on previous mailing list & github \n> with no impact.\n>\n>\n> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info \n> <mailto:milly at bitcoins.info>> wrote:\n>\n>     I'm sorry but that is the kind of defensive, cultish response\n>     everyone gets when they ask that question.  If you had a well\n>     constructed documented process then you would be able to point to\n>     it ... but you can't.  While there are a few bits and pieces\n>     scattered  about in different places there is no coherent plan or\n>     process.\n>\n>     It is easy to make statements like \"consensus must be unanimous\"\n>     but the issue is that you never have true 100% consensus yet you\n>     have to move forward in some fashion and everyone has to run\n>     software with the same consensus rules.  The issue is how you move\n>     forward is the question that nobody wants to answer because (a) it\n>     is a hard question to answer and (b) developers see it as a threat\n>     to their authority/position.  If people just keep shutting down\n>     the discussion with a bunch of cultish stock answers then you are\n>     never going to move forward with developing some kind of process.\n>\n>     From what I can see much of the discussion is personality-driven\n>     and not based on Computer Science or and defined process.  The\n>     issue is that a personality has changed so the process is\n>     perceived to be different and some people want to hard fork. \n>     Previously, the cultish answer is that Bitcoin development is\n>     decentralized because people can fork the code.  Now that some\n>     developers want to fork the code suddenly it is a big problem.  \n>     Is forking the code part of the consensus process or is it the\n>     work of the devil?   The fact that there is so much diverse\n>     opinion on this shows a defined process has never been fully\n>     vetted or understood.\n>\n>     I have worked on these processes for many years for projects\n>     orders of magnitudes larger than Bitcoin.  I can absolutely assure\n>     you the current mishmash does not scale and huge amounts of time\n>     are wasted.  That should be readily apparent from the recent\n>     discussions and the recent concern it has caused from people\n>     outside the developer's inner circle.\n>\n>     Lack of defined process = high risk and wasted effort.\n>\n>     Russ\n>\n>\n>\n>\n>\n>     On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>>     I'm sorry but this is absolutely not the case, Milly. The reason\n>>     that people get defensive is that we have a carefully constructed\n>>     process that does work (thank you very much!) and is well\n>>     documented. We talk about it quite often in fact as it is a\n>>     defining characteristic of how bitcoin is developed which differs\n>>     in some ways from how other open source software is developed --\n>>     although it remains the same in most other ways.\n>>\n>>     Changes to the non-consensus sections of Bitcoin Core tend to get\n>>     merged when there are a few reviews, tests, and ACKs from\n>>     recognized developers, there are no outstanding objections, and\n>>     the maintainer doing the merge makes a subjective judgement that\n>>     the code is ready.\n>>\n>>     Consensus-changes, on the other hand, get merged into Bitcoin\n>>     Core only after the above criteria are met AND an extremely long\n>>     discussion period that has given all the relevant stakeholders a\n>>     chance to comment, and no significant objections remain.\n>>     Consensus-code changes are unanimous. They must be.\n>>\n>>     The sort of process that exists in standards bodies for example,\n>>     with working groups and formal voting procedures, has no place\n>>     where changes define the nature and validity of other people's\n>>     money. Who has the right to reach into your pocket and define how\n>>     you can or cannot spend your coins? The premise of bitcoin is\n>>     that no one has that right, yet that is very much what we do when\n>>     consensus code changes are made. That is why when we make a\n>>     change to the rules governing the nature of bitcoin, we must make\n>>     sure that everyone is made aware of the change and consents to it.\n>>\n>>     Everyone. Does this work? Does this scale? So far, it does.\n>>     Uncontroversial changes, such as BIP 66, are deployed without\n>>     issue. Every indication is that BIP 66 will complete deployment\n>>     in the very near future, and we intend to repeat this process for\n>>     more interesting changes such as BIP65: CHECKLOCKTIMEVERIFY.\n>>\n>>     This isn't about no one stepping forward to be the \"decider.\"\n>>     This is about no one having the right to decide these things on\n>>     the behalf of others. If a contentious change is proposed and not\n>>     accepted by the process of consensus, that is because the process\n>>     is doing its job at rejecting controversial changes. It has\n>>     nothing to do with personality, and everything to do with the\n>>     nature of bitcoin itself.\n>>\n>>\n>>     On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin\n>>     <milly at bitcoins.info <mailto:milly at bitcoins.info>> wrote:\n>>\n>>         I have seen this question asked many times. Most developers\n>>         become defensive and they usually give a very vague\n>>         1-sentence answer when this question is asked.  It seems to\n>>         be it is based on personalities rather than any kind of\n>>         definable process.  To have that discussion the personalities\n>>         must be separated out and answers like \"such-and-such\n>>         wouldn't do that\" don't really do much to advance the\n>>         discussion. Also, the incentive for new developers to come in\n>>         is that they will be paid by companies who want to influence\n>>         the code and this should be considered (some developers take\n>>         this statement as an insult when it is just a statement of\n>>         the incentive process).\n>>\n>>         The other problem you are having is the lead developer does\n>>         not want to be a \"decider\" when, in fact, he is a very\n>>         significant decider.  While the users have the ultimate\n>>         choice in a practical sense the chief developer is the\n>>         \"decider.\"  Now people don't want to get him upset so nobody\n>>         wants to push the issue or fully define the process.  Now you\n>>         are left with a broken, unwritten/unspoken process.  While\n>>         this type of thing may work with a small group of developers\n>>         businesses/investors looking in from the outside will see\n>>         this as a risk.\n>>\n>>         Until you get passed all the personality-based arguments you\n>>         are going to have a tough time defining a real process.\n>>\n>>         Russ\n>>\n>>\n>>\n>>\n>>\n>>\n>>         On 6/24/2015 7:41 PM, Raystonn wrote:\n>>\n>>             I would like to start a civil discussion on an undefined,\n>>             or at least unwritten, portion of the BIP process.  Who\n>>             should get to vote on approval to commit a BIP\n>>             implementation into Bitcoin Core?  Is a simple majority\n>>             of these voters sufficient for approval?  If not, then\n>>             what is?\n>>\n>>             Raystonn\n>>             _______________________________________________\n>>             bitcoin-dev mailing list\n>>             bitcoin-dev at lists.linuxfoundation.org\n>>             <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>>\n>>         _______________________________________________\n>>         bitcoin-dev mailing list\n>>         bitcoin-dev at lists.linuxfoundation.org\n>>         <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n>\n>     _______________________________________________\n>     bitcoin-dev mailing list\n>     bitcoin-dev at lists.linuxfoundation.org\n>     <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/3deb2320/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-25T06:06:09",
                "message_text_only": "In the process of 'mining consensus', perhaps before voting there should be\nrobust system testing and telemetry.\n\nMay I ask a questions w.r.t. Process BIPs, what is the process for\nestablishing a new testnet (e.g. for testing with 8MB blocks)?\n\np.\n\n\nOn Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n\n>  These are the kind of silly responses you often get when this subject\n> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see\n> no need for him to use the list to attack people he doesn't agree with\n> and/or try to interfere with discussions of others on the list.\n> He turns it into a personality discussion rather than a discussion of\n> Systems Engineering.  He also tries to intimate anyone who brings up the\n> discussion and \"punish\" them as a lesson to anyone else who may raise the\n> issue.\n>\n> It is interesting that people like that are attracted to a decentralized\n> system.   The reply is simply an attempt at protecting turf which is why\n> Mr. Garzik's vague replies are never taken seriously on the subject of\n> decision-making process for the software.\n>\n> Russ\n>\n>\n>\n> On 6/25/2015 1:07 AM, Jeff Garzik wrote:\n>\n> Ladies & gents, please do not feed the troll.  This has been explained to\n> Milly multiple times in the past, on previous mailing list & github with no\n> impact.\n>\n>\n> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>\n> wrote:\n>\n>>  I'm sorry but that is the kind of defensive, cultish response everyone\n>> gets when they ask that question.  If you had a well constructed documented\n>> process then you would be able to point to it ... but you can't.  While\n>> there are a few bits and pieces scattered  about in different places there\n>> is no coherent plan or process.\n>>\n>> It is easy to make statements like \"consensus must be unanimous\" but the\n>> issue is that you never have true 100% consensus yet you have to move\n>> forward in some fashion and everyone has to run software with the same\n>> consensus rules.  The issue is how you move forward is the question that\n>> nobody wants to answer because (a) it is a hard question to answer and (b)\n>> developers see it as a threat to their authority/position.  If people just\n>> keep shutting down the discussion with a bunch of cultish stock answers\n>> then you are never going to move forward with developing some kind of\n>> process.\n>>\n>> From what I can see much of the discussion is personality-driven and not\n>> based on Computer Science or and defined process.  The issue is that a\n>> personality has changed so the process is perceived to be different and\n>> some people want to hard fork.  Previously, the cultish answer is that\n>> Bitcoin development is decentralized because people can fork the code.  Now\n>> that some developers want to fork the code suddenly it is a big problem.\n>> Is forking the code part of the consensus process or is it the work of the\n>> devil?   The fact that there is so much diverse opinion on this shows a\n>> defined process has never been fully vetted or understood.\n>>\n>> I have worked on these processes for many years for projects orders of\n>> magnitudes larger than Bitcoin.  I can absolutely assure you the current\n>> mishmash does not scale and huge amounts of time are wasted.  That should\n>> be readily apparent from the recent discussions and the recent concern it\n>> has caused from people outside the developer's inner circle.\n>>\n>> Lack of defined process = high risk and wasted effort.\n>>\n>> Russ\n>>\n>>\n>>\n>>\n>>\n>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>>\n>>   I'm sorry but this is absolutely not the case, Milly. The reason that\n>> people get defensive is that we have a carefully constructed process that\n>> does work (thank you very much!) and is well documented. We talk about it\n>> quite often in fact as it is a defining characteristic of how bitcoin is\n>> developed which differs in some ways from how other open source software is\n>> developed -- although it remains the same in most other ways.\n>>\n>>  Changes to the non-consensus sections of Bitcoin Core tend to get merged\n>> when there are a few reviews, tests, and ACKs from recognized developers,\n>> there are no outstanding objections, and the maintainer doing the merge\n>> makes a subjective judgement that the code is ready.\n>>\n>>  Consensus-changes, on the other hand, get merged into Bitcoin Core only\n>> after the above criteria are met AND an extremely long discussion period\n>> that has given all the relevant stakeholders a chance to comment, and no\n>> significant objections remain. Consensus-code changes are unanimous. They\n>> must be.\n>>\n>>  The sort of process that exists in standards bodies for example, with\n>> working groups and formal voting procedures, has no place where changes\n>> define the nature and validity of other people's money. Who has the right\n>> to reach into your pocket and define how you can or cannot spend your\n>> coins? The premise of bitcoin is that no one has that right, yet that is\n>> very much what we do when consensus code changes are made. That is why when\n>> we make a change to the rules governing the nature of bitcoin, we must make\n>> sure that everyone is made aware of the change and consents to it.\n>>\n>>  Everyone. Does this work? Does this scale? So far, it does.\n>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every\n>> indication is that BIP 66 will complete deployment in the very near future,\n>> and we intend to repeat this process for more interesting changes such as\n>> BIP65: CHECKLOCKTIMEVERIFY.\n>>\n>>  This isn't about no one stepping forward to be the \"decider.\" This is\n>> about no one having the right to decide these things on the behalf of\n>> others. If a contentious change is proposed and not accepted by the process\n>> of consensus, that is because the process is doing its job at rejecting\n>> controversial changes. It has nothing to do with personality, and\n>> everything to do with the nature of bitcoin itself.\n>>\n>>\n>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>\n>> milly at bitcoins.info> wrote:\n>>\n>>> I have seen this question asked many times.  Most developers become\n>>> defensive and they usually give a very vague 1-sentence answer when this\n>>> question is asked.  It seems to be it is based on personalities rather than\n>>> any kind of definable process.  To have that discussion the personalities\n>>> must be separated out and answers like \"such-and-such wouldn't do that\"\n>>> don't really do much to advance the discussion.  Also, the incentive for\n>>> new developers to come in is that they will be paid by companies who want\n>>> to influence the code and this should be considered (some developers take\n>>> this statement as an insult when it is just a statement of the incentive\n>>> process).\n>>>\n>>> The other problem you are having is the lead developer does not want to\n>>> be a \"decider\" when, in fact, he is a very significant decider.  While the\n>>> users have the ultimate choice in a practical sense the chief developer is\n>>> the \"decider.\"  Now people don't want to get him upset so nobody wants to\n>>> push the issue or fully define the process.  Now you are left with a\n>>> broken, unwritten/unspoken process.  While this type of thing may work with\n>>> a small group of developers businesses/investors looking in from the\n>>> outside will see this as a risk.\n>>>\n>>> Until you get passed all the personality-based arguments you are going\n>>> to have a tough time defining a real process.\n>>>\n>>> Russ\n>>>\n>>>\n>>>\n>>>\n>>>\n>>>\n>>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>>\n>>>> I would like to start a civil discussion on an undefined, or at least\n>>>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>>>> these voters sufficient for approval?  If not, then what is?\n>>>>\n>>>> Raystonn\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/1f890e9e/attachment-0001.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-25T06:15:38",
                "message_text_only": "You don't need to ask permission for testnet. Here is one with 100MB blocks:\n\nhttps://github.com/pstratem/bitcoin/tree/testnet4\nOn Jun 24, 2015 11:06 PM, \"Pindar Wong\" <pindar.wong at gmail.com> wrote:\n\n> In the process of 'mining consensus', perhaps before voting there should\n> be robust system testing and telemetry.\n>\n> May I ask a questions w.r.t. Process BIPs, what is the process for\n> establishing a new testnet (e.g. for testing with 8MB blocks)?\n>\n> p.\n>\n>\n> On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info>\n> wrote:\n>\n>>  These are the kind of silly responses you often get when this subject\n>> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see\n>> no need for him to use the list to attack people he doesn't agree with\n>> and/or try to interfere with discussions of others on the list.\n>> He turns it into a personality discussion rather than a discussion of\n>> Systems Engineering.  He also tries to intimate anyone who brings up the\n>> discussion and \"punish\" them as a lesson to anyone else who may raise the\n>> issue.\n>>\n>> It is interesting that people like that are attracted to a decentralized\n>> system.   The reply is simply an attempt at protecting turf which is why\n>> Mr. Garzik's vague replies are never taken seriously on the subject of\n>> decision-making process for the software.\n>>\n>> Russ\n>>\n>>\n>>\n>> On 6/25/2015 1:07 AM, Jeff Garzik wrote:\n>>\n>> Ladies & gents, please do not feed the troll.  This has been explained to\n>> Milly multiple times in the past, on previous mailing list & github with no\n>> impact.\n>>\n>>\n>> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>\n>> wrote:\n>>\n>>>  I'm sorry but that is the kind of defensive, cultish response everyone\n>>> gets when they ask that question.  If you had a well constructed documented\n>>> process then you would be able to point to it ... but you can't.  While\n>>> there are a few bits and pieces scattered  about in different places there\n>>> is no coherent plan or process.\n>>>\n>>> It is easy to make statements like \"consensus must be unanimous\" but the\n>>> issue is that you never have true 100% consensus yet you have to move\n>>> forward in some fashion and everyone has to run software with the same\n>>> consensus rules.  The issue is how you move forward is the question that\n>>> nobody wants to answer because (a) it is a hard question to answer and (b)\n>>> developers see it as a threat to their authority/position.  If people just\n>>> keep shutting down the discussion with a bunch of cultish stock answers\n>>> then you are never going to move forward with developing some kind of\n>>> process.\n>>>\n>>> From what I can see much of the discussion is personality-driven and not\n>>> based on Computer Science or and defined process.  The issue is that a\n>>> personality has changed so the process is perceived to be different and\n>>> some people want to hard fork.  Previously, the cultish answer is that\n>>> Bitcoin development is decentralized because people can fork the code.  Now\n>>> that some developers want to fork the code suddenly it is a big problem.\n>>> Is forking the code part of the consensus process or is it the work of the\n>>> devil?   The fact that there is so much diverse opinion on this shows a\n>>> defined process has never been fully vetted or understood.\n>>>\n>>> I have worked on these processes for many years for projects orders of\n>>> magnitudes larger than Bitcoin.  I can absolutely assure you the current\n>>> mishmash does not scale and huge amounts of time are wasted.  That should\n>>> be readily apparent from the recent discussions and the recent concern it\n>>> has caused from people outside the developer's inner circle.\n>>>\n>>> Lack of defined process = high risk and wasted effort.\n>>>\n>>> Russ\n>>>\n>>>\n>>>\n>>>\n>>>\n>>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>>>\n>>>   I'm sorry but this is absolutely not the case, Milly. The reason that\n>>> people get defensive is that we have a carefully constructed process that\n>>> does work (thank you very much!) and is well documented. We talk about it\n>>> quite often in fact as it is a defining characteristic of how bitcoin is\n>>> developed which differs in some ways from how other open source software is\n>>> developed -- although it remains the same in most other ways.\n>>>\n>>>  Changes to the non-consensus sections of Bitcoin Core tend to get\n>>> merged when there are a few reviews, tests, and ACKs from recognized\n>>> developers, there are no outstanding objections, and the maintainer doing\n>>> the merge makes a subjective judgement that the code is ready.\n>>>\n>>>  Consensus-changes, on the other hand, get merged into Bitcoin Core only\n>>> after the above criteria are met AND an extremely long discussion period\n>>> that has given all the relevant stakeholders a chance to comment, and no\n>>> significant objections remain. Consensus-code changes are unanimous. They\n>>> must be.\n>>>\n>>>  The sort of process that exists in standards bodies for example, with\n>>> working groups and formal voting procedures, has no place where changes\n>>> define the nature and validity of other people's money. Who has the right\n>>> to reach into your pocket and define how you can or cannot spend your\n>>> coins? The premise of bitcoin is that no one has that right, yet that is\n>>> very much what we do when consensus code changes are made. That is why when\n>>> we make a change to the rules governing the nature of bitcoin, we must make\n>>> sure that everyone is made aware of the change and consents to it.\n>>>\n>>>  Everyone. Does this work? Does this scale? So far, it does.\n>>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every\n>>> indication is that BIP 66 will complete deployment in the very near future,\n>>> and we intend to repeat this process for more interesting changes such as\n>>> BIP65: CHECKLOCKTIMEVERIFY.\n>>>\n>>>  This isn't about no one stepping forward to be the \"decider.\" This is\n>>> about no one having the right to decide these things on the behalf of\n>>> others. If a contentious change is proposed and not accepted by the process\n>>> of consensus, that is because the process is doing its job at rejecting\n>>> controversial changes. It has nothing to do with personality, and\n>>> everything to do with the nature of bitcoin itself.\n>>>\n>>>\n>>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>\n>>> milly at bitcoins.info> wrote:\n>>>\n>>>> I have seen this question asked many times.  Most developers become\n>>>> defensive and they usually give a very vague 1-sentence answer when this\n>>>> question is asked.  It seems to be it is based on personalities rather than\n>>>> any kind of definable process.  To have that discussion the personalities\n>>>> must be separated out and answers like \"such-and-such wouldn't do that\"\n>>>> don't really do much to advance the discussion.  Also, the incentive for\n>>>> new developers to come in is that they will be paid by companies who want\n>>>> to influence the code and this should be considered (some developers take\n>>>> this statement as an insult when it is just a statement of the incentive\n>>>> process).\n>>>>\n>>>> The other problem you are having is the lead developer does not want to\n>>>> be a \"decider\" when, in fact, he is a very significant decider.  While the\n>>>> users have the ultimate choice in a practical sense the chief developer is\n>>>> the \"decider.\"  Now people don't want to get him upset so nobody wants to\n>>>> push the issue or fully define the process.  Now you are left with a\n>>>> broken, unwritten/unspoken process.  While this type of thing may work with\n>>>> a small group of developers businesses/investors looking in from the\n>>>> outside will see this as a risk.\n>>>>\n>>>> Until you get passed all the personality-based arguments you are going\n>>>> to have a tough time defining a real process.\n>>>>\n>>>> Russ\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>>>\n>>>>> I would like to start a civil discussion on an undefined, or at least\n>>>>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>>>>> these voters sufficient for approval?  If not, then what is?\n>>>>>\n>>>>> Raystonn\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>\n>>>>>\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/1e70f0ed/attachment-0001.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-25T06:16:52",
                "message_text_only": "https://github.com/pstratem/bitcoin/commits/testnet4\n\nSee these two commits for an example of changing all the testnet chain\nparameters to create an entirely separate testnet network.  This example\n\"testnet4\" changed to different port numbers, pchMessageStart magic, and\nwith stupid large block sizes.\n\nhttp://rusty.ozlabs.org/?p=509\nRusty used this to test block propagation latency.\n\nOn Wed, Jun 24, 2015 at 11:06 PM, Pindar Wong <pindar.wong at gmail.com> wrote:\n\n> In the process of 'mining consensus', perhaps before voting there should\n> be robust system testing and telemetry.\n>\n> May I ask a questions w.r.t. Process BIPs, what is the process for\n> establishing a new testnet (e.g. for testing with 8MB blocks)?\n>\n> p.\n>\n>\n> On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info>\n> wrote:\n>\n>>  These are the kind of silly responses you often get when this subject\n>> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see\n>> no need for him to use the list to attack people he doesn't agree with\n>> and/or try to interfere with discussions of others on the list.\n>> He turns it into a personality discussion rather than a discussion of\n>> Systems Engineering.  He also tries to intimate anyone who brings up the\n>> discussion and \"punish\" them as a lesson to anyone else who may raise the\n>> issue.\n>>\n>> It is interesting that people like that are attracted to a decentralized\n>> system.   The reply is simply an attempt at protecting turf which is why\n>> Mr. Garzik's vague replies are never taken seriously on the subject of\n>> decision-making process for the software.\n>>\n>> Russ\n>>\n>>\n>>\n>> On 6/25/2015 1:07 AM, Jeff Garzik wrote:\n>>\n>> Ladies & gents, please do not feed the troll.  This has been explained to\n>> Milly multiple times in the past, on previous mailing list & github with no\n>> impact.\n>>\n>>\n>> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>\n>> wrote:\n>>\n>>>  I'm sorry but that is the kind of defensive, cultish response everyone\n>>> gets when they ask that question.  If you had a well constructed documented\n>>> process then you would be able to point to it ... but you can't.  While\n>>> there are a few bits and pieces scattered  about in different places there\n>>> is no coherent plan or process.\n>>>\n>>> It is easy to make statements like \"consensus must be unanimous\" but the\n>>> issue is that you never have true 100% consensus yet you have to move\n>>> forward in some fashion and everyone has to run software with the same\n>>> consensus rules.  The issue is how you move forward is the question that\n>>> nobody wants to answer because (a) it is a hard question to answer and (b)\n>>> developers see it as a threat to their authority/position.  If people just\n>>> keep shutting down the discussion with a bunch of cultish stock answers\n>>> then you are never going to move forward with developing some kind of\n>>> process.\n>>>\n>>> From what I can see much of the discussion is personality-driven and not\n>>> based on Computer Science or and defined process.  The issue is that a\n>>> personality has changed so the process is perceived to be different and\n>>> some people want to hard fork.  Previously, the cultish answer is that\n>>> Bitcoin development is decentralized because people can fork the code.  Now\n>>> that some developers want to fork the code suddenly it is a big problem.\n>>> Is forking the code part of the consensus process or is it the work of the\n>>> devil?   The fact that there is so much diverse opinion on this shows a\n>>> defined process has never been fully vetted or understood.\n>>>\n>>> I have worked on these processes for many years for projects orders of\n>>> magnitudes larger than Bitcoin.  I can absolutely assure you the current\n>>> mishmash does not scale and huge amounts of time are wasted.  That should\n>>> be readily apparent from the recent discussions and the recent concern it\n>>> has caused from people outside the developer's inner circle.\n>>>\n>>> Lack of defined process = high risk and wasted effort.\n>>>\n>>> Russ\n>>>\n>>>\n>>>\n>>>\n>>>\n>>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>>>\n>>>   I'm sorry but this is absolutely not the case, Milly. The reason that\n>>> people get defensive is that we have a carefully constructed process that\n>>> does work (thank you very much!) and is well documented. We talk about it\n>>> quite often in fact as it is a defining characteristic of how bitcoin is\n>>> developed which differs in some ways from how other open source software is\n>>> developed -- although it remains the same in most other ways.\n>>>\n>>>  Changes to the non-consensus sections of Bitcoin Core tend to get\n>>> merged when there are a few reviews, tests, and ACKs from recognized\n>>> developers, there are no outstanding objections, and the maintainer doing\n>>> the merge makes a subjective judgement that the code is ready.\n>>>\n>>>  Consensus-changes, on the other hand, get merged into Bitcoin Core only\n>>> after the above criteria are met AND an extremely long discussion period\n>>> that has given all the relevant stakeholders a chance to comment, and no\n>>> significant objections remain. Consensus-code changes are unanimous. They\n>>> must be.\n>>>\n>>>  The sort of process that exists in standards bodies for example, with\n>>> working groups and formal voting procedures, has no place where changes\n>>> define the nature and validity of other people's money. Who has the right\n>>> to reach into your pocket and define how you can or cannot spend your\n>>> coins? The premise of bitcoin is that no one has that right, yet that is\n>>> very much what we do when consensus code changes are made. That is why when\n>>> we make a change to the rules governing the nature of bitcoin, we must make\n>>> sure that everyone is made aware of the change and consents to it.\n>>>\n>>>  Everyone. Does this work? Does this scale? So far, it does.\n>>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every\n>>> indication is that BIP 66 will complete deployment in the very near future,\n>>> and we intend to repeat this process for more interesting changes such as\n>>> BIP65: CHECKLOCKTIMEVERIFY.\n>>>\n>>>  This isn't about no one stepping forward to be the \"decider.\" This is\n>>> about no one having the right to decide these things on the behalf of\n>>> others. If a contentious change is proposed and not accepted by the process\n>>> of consensus, that is because the process is doing its job at rejecting\n>>> controversial changes. It has nothing to do with personality, and\n>>> everything to do with the nature of bitcoin itself.\n>>>\n>>>\n>>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>\n>>> milly at bitcoins.info> wrote:\n>>>\n>>>> I have seen this question asked many times.  Most developers become\n>>>> defensive and they usually give a very vague 1-sentence answer when this\n>>>> question is asked.  It seems to be it is based on personalities rather than\n>>>> any kind of definable process.  To have that discussion the personalities\n>>>> must be separated out and answers like \"such-and-such wouldn't do that\"\n>>>> don't really do much to advance the discussion.  Also, the incentive for\n>>>> new developers to come in is that they will be paid by companies who want\n>>>> to influence the code and this should be considered (some developers take\n>>>> this statement as an insult when it is just a statement of the incentive\n>>>> process).\n>>>>\n>>>> The other problem you are having is the lead developer does not want to\n>>>> be a \"decider\" when, in fact, he is a very significant decider.  While the\n>>>> users have the ultimate choice in a practical sense the chief developer is\n>>>> the \"decider.\"  Now people don't want to get him upset so nobody wants to\n>>>> push the issue or fully define the process.  Now you are left with a\n>>>> broken, unwritten/unspoken process.  While this type of thing may work with\n>>>> a small group of developers businesses/investors looking in from the\n>>>> outside will see this as a risk.\n>>>>\n>>>> Until you get passed all the personality-based arguments you are going\n>>>> to have a tough time defining a real process.\n>>>>\n>>>> Russ\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>>>\n>>>>> I would like to start a civil discussion on an undefined, or at least\n>>>>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>>>>> these voters sufficient for approval?  If not, then what is?\n>>>>>\n>>>>> Raystonn\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>\n>>>>>\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/1482dee3/attachment-0001.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-25T06:27:37",
                "message_text_only": "Thank you very much Mark and Warren this is most helpful.\n\nRegards,\n\np.\n\n\nOn Thu, Jun 25, 2015 at 2:16 PM, Warren Togami Jr. <wtogami at gmail.com>\nwrote:\n\n> https://github.com/pstratem/bitcoin/commits/testnet4\n>\n> See these two commits for an example of changing all the testnet chain\n> parameters to create an entirely separate testnet network.  This example\n> \"testnet4\" changed to different port numbers, pchMessageStart magic, and\n> with stupid large block sizes.\n>\n> http://rusty.ozlabs.org/?p=509\n> Rusty used this to test block propagation latency.\n>\n> On Wed, Jun 24, 2015 at 11:06 PM, Pindar Wong <pindar.wong at gmail.com>\n> wrote:\n>\n>> In the process of 'mining consensus', perhaps before voting there should\n>> be robust system testing and telemetry.\n>>\n>> May I ask a questions w.r.t. Process BIPs, what is the process for\n>> establishing a new testnet (e.g. for testing with 8MB blocks)?\n>>\n>> p.\n>>\n>>\n>> On Thu, Jun 25, 2015 at 1:41 PM, Milly Bitcoin <milly at bitcoins.info>\n>> wrote:\n>>\n>>>  These are the kind of silly responses you often get when this subject\n>>> comes up.  Mr. Garzik knows how to ignore messages he doesn't want so I see\n>>> no need for him to use the list to attack people he doesn't agree with\n>>> and/or try to interfere with discussions of others on the list.\n>>> He turns it into a personality discussion rather than a discussion of\n>>> Systems Engineering.  He also tries to intimate anyone who brings up the\n>>> discussion and \"punish\" them as a lesson to anyone else who may raise the\n>>> issue.\n>>>\n>>> It is interesting that people like that are attracted to a decentralized\n>>> system.   The reply is simply an attempt at protecting turf which is why\n>>> Mr. Garzik's vague replies are never taken seriously on the subject of\n>>> decision-making process for the software.\n>>>\n>>> Russ\n>>>\n>>>\n>>>\n>>> On 6/25/2015 1:07 AM, Jeff Garzik wrote:\n>>>\n>>> Ladies & gents, please do not feed the troll.  This has been explained\n>>> to Milly multiple times in the past, on previous mailing list & github with\n>>> no impact.\n>>>\n>>>\n>>> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info>\n>>> wrote:\n>>>\n>>>>  I'm sorry but that is the kind of defensive, cultish response\n>>>> everyone gets when they ask that question.  If you had a well constructed\n>>>> documented process then you would be able to point to it ... but you\n>>>> can't.  While there are a few bits and pieces scattered  about in different\n>>>> places there is no coherent plan or process.\n>>>>\n>>>> It is easy to make statements like \"consensus must be unanimous\" but\n>>>> the issue is that you never have true 100% consensus yet you have to move\n>>>> forward in some fashion and everyone has to run software with the same\n>>>> consensus rules.  The issue is how you move forward is the question that\n>>>> nobody wants to answer because (a) it is a hard question to answer and (b)\n>>>> developers see it as a threat to their authority/position.  If people just\n>>>> keep shutting down the discussion with a bunch of cultish stock answers\n>>>> then you are never going to move forward with developing some kind of\n>>>> process.\n>>>>\n>>>> From what I can see much of the discussion is personality-driven and\n>>>> not based on Computer Science or and defined process.  The issue is that a\n>>>> personality has changed so the process is perceived to be different and\n>>>> some people want to hard fork.  Previously, the cultish answer is that\n>>>> Bitcoin development is decentralized because people can fork the code.  Now\n>>>> that some developers want to fork the code suddenly it is a big problem.\n>>>> Is forking the code part of the consensus process or is it the work of the\n>>>> devil?   The fact that there is so much diverse opinion on this shows a\n>>>> defined process has never been fully vetted or understood.\n>>>>\n>>>> I have worked on these processes for many years for projects orders of\n>>>> magnitudes larger than Bitcoin.  I can absolutely assure you the current\n>>>> mishmash does not scale and huge amounts of time are wasted.  That should\n>>>> be readily apparent from the recent discussions and the recent concern it\n>>>> has caused from people outside the developer's inner circle.\n>>>>\n>>>> Lack of defined process = high risk and wasted effort.\n>>>>\n>>>> Russ\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>> On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>>>>\n>>>>   I'm sorry but this is absolutely not the case, Milly. The reason\n>>>> that people get defensive is that we have a carefully constructed process\n>>>> that does work (thank you very much!) and is well documented. We talk about\n>>>> it quite often in fact as it is a defining characteristic of how bitcoin is\n>>>> developed which differs in some ways from how other open source software is\n>>>> developed -- although it remains the same in most other ways.\n>>>>\n>>>>  Changes to the non-consensus sections of Bitcoin Core tend to get\n>>>> merged when there are a few reviews, tests, and ACKs from recognized\n>>>> developers, there are no outstanding objections, and the maintainer doing\n>>>> the merge makes a subjective judgement that the code is ready.\n>>>>\n>>>>  Consensus-changes, on the other hand, get merged into Bitcoin Core\n>>>> only after the above criteria are met AND an extremely long discussion\n>>>> period that has given all the relevant stakeholders a chance to comment,\n>>>> and no significant objections remain. Consensus-code changes are unanimous.\n>>>> They must be.\n>>>>\n>>>>  The sort of process that exists in standards bodies for example, with\n>>>> working groups and formal voting procedures, has no place where changes\n>>>> define the nature and validity of other people's money. Who has the right\n>>>> to reach into your pocket and define how you can or cannot spend your\n>>>> coins? The premise of bitcoin is that no one has that right, yet that is\n>>>> very much what we do when consensus code changes are made. That is why when\n>>>> we make a change to the rules governing the nature of bitcoin, we must make\n>>>> sure that everyone is made aware of the change and consents to it.\n>>>>\n>>>>  Everyone. Does this work? Does this scale? So far, it does.\n>>>> Uncontroversial changes, such as BIP 66, are deployed without issue. Every\n>>>> indication is that BIP 66 will complete deployment in the very near future,\n>>>> and we intend to repeat this process for more interesting changes such as\n>>>> BIP65: CHECKLOCKTIMEVERIFY.\n>>>>\n>>>>  This isn't about no one stepping forward to be the \"decider.\" This is\n>>>> about no one having the right to decide these things on the behalf of\n>>>> others. If a contentious change is proposed and not accepted by the process\n>>>> of consensus, that is because the process is doing its job at rejecting\n>>>> controversial changes. It has nothing to do with personality, and\n>>>> everything to do with the nature of bitcoin itself.\n>>>>\n>>>>\n>>>> On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin < <milly at bitcoins.info>\n>>>> milly at bitcoins.info> wrote:\n>>>>\n>>>>> I have seen this question asked many times.  Most developers become\n>>>>> defensive and they usually give a very vague 1-sentence answer when this\n>>>>> question is asked.  It seems to be it is based on personalities rather than\n>>>>> any kind of definable process.  To have that discussion the personalities\n>>>>> must be separated out and answers like \"such-and-such wouldn't do that\"\n>>>>> don't really do much to advance the discussion.  Also, the incentive for\n>>>>> new developers to come in is that they will be paid by companies who want\n>>>>> to influence the code and this should be considered (some developers take\n>>>>> this statement as an insult when it is just a statement of the incentive\n>>>>> process).\n>>>>>\n>>>>> The other problem you are having is the lead developer does not want\n>>>>> to be a \"decider\" when, in fact, he is a very significant decider.  While\n>>>>> the users have the ultimate choice in a practical sense the chief developer\n>>>>> is the \"decider.\"  Now people don't want to get him upset so nobody wants\n>>>>> to push the issue or fully define the process.  Now you are left with a\n>>>>> broken, unwritten/unspoken process.  While this type of thing may work with\n>>>>> a small group of developers businesses/investors looking in from the\n>>>>> outside will see this as a risk.\n>>>>>\n>>>>> Until you get passed all the personality-based arguments you are going\n>>>>> to have a tough time defining a real process.\n>>>>>\n>>>>> Russ\n>>>>>\n>>>>>\n>>>>>\n>>>>>\n>>>>>\n>>>>>\n>>>>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>>>>\n>>>>>> I would like to start a civil discussion on an undefined, or at least\n>>>>>> unwritten, portion of the BIP process.  Who should get to vote on approval\n>>>>>> to commit a BIP implementation into Bitcoin Core?  Is a simple majority of\n>>>>>> these voters sufficient for approval?  If not, then what is?\n>>>>>>\n>>>>>> Raystonn\n>>>>>> _______________________________________________\n>>>>>> bitcoin-dev mailing list\n>>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>>\n>>>>>>\n>>>>>\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>\n>>>>\n>>>>\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>>\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing listbitcoin-dev at lists.linuxfoundation.orghttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/51c533b1/attachment-0001.html>"
            },
            {
                "author": "cipher anthem",
                "date": "2015-06-25T07:51:20",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/5383b79c/attachment.html>"
            },
            {
                "author": "nxtchg at hush.com",
                "date": "2015-06-25T10:09:06",
                "message_text_only": "You just proved his point once again with yet another ad hominem :)\n\nGood job.\n\nOn 6/25/2015 at 10:56 AM, \"cipher anthem\"  wrote:+1 on this!\n I have come across Milly a couple of times on reddit and disqus and\nshe basically dismisses anyone who doesn't agree with her opinions.\nalways labeling them \"cultish\". Please ignore her so you can stay\nproductive.    \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/ef081ed8/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T12:42:40",
                "message_text_only": "\"Cultish\" means making claims without any supporting facts.  Labeling \nOpen Source software as being \"decentralized\" just because people can \nchoose which version to run is a \"cultish\" claim.  Just because Bitcoin \nuses the mining process to come to consensus over the state of the \nledger that does not mean the software versions have the same level of \ndecentralization because users can decide which version to run. I am in \nthe USA and I can vote in elections but I would not call the US \ngovernment \"decentralized.\"  It is a very complicated issue and cannot \nbe explained in one or two sentences of hand-waiving arguments like you \noften see here.\n\nRuss\n\n\n\n\nOn 6/25/2015 3:51 AM, cipher anthem wrote:\n> +1 on this!\n>\n> I have come across Milly a couple of times on reddit and disqus and \n> she basically dismisses anyone who doesn't agree with her opinions. \n> always labeling them \"cultish\". Please ignore her so you can stay \n> productive.\n> *Sent:* Thursday, June 25, 2015 at 5:07 AM\n> *From:* \"Jeff Garzik\" <jgarzik at gmail.com>\n> *To:* bitcoin-dev at lists.linuxfoundation.org\n> *Subject:* Re: [bitcoin-dev] BIP Process and Votes\n> Ladies & gents, please do not feed the troll. This has been explained \n> to Milly multiple times in the past, on previous mailing list & github \n> with no impact.\n> On Wed, Jun 24, 2015 at 7:34 PM, Milly Bitcoin <milly at bitcoins.info> \n> wrote:\n>\n>     I'm sorry but that is the kind of defensive, cultish response\n>     everyone gets when they ask that question.  If you had a well\n>     constructed documented process then you would be able to point to\n>     it ... but you can't. While there are a few bits and pieces\n>     scattered  about in different places there is no coherent plan or\n>     process.\n>\n>     It is easy to make statements like \"consensus must be unanimous\"\n>     but the issue is that you never have true 100% consensus yet you\n>     have to move forward in some fashion and everyone has to run\n>     software with the same consensus rules.  The issue is how you move\n>     forward is the question that nobody wants to answer because (a) it\n>     is a hard question to answer and (b) developers see it as a threat\n>     to their authority/position.  If people just keep shutting down\n>     the discussion with a bunch of cultish stock answers then you are\n>     never going to move forward with developing some kind of process.\n>\n>     >From what I can see much of the discussion is personality-driven\n>     and not based on Computer Science or and defined process.  The\n>     issue is that a personality has changed so the process is\n>     perceived to be different and some people want to hard fork. \n>     Previously, the cultish answer is that Bitcoin development is\n>     decentralized because people can fork the code.  Now that some\n>     developers want to fork the code suddenly it is a big problem.  \n>     Is forking the code part of the consensus process or is it the\n>     work of the devil?   The fact that there is so much diverse\n>     opinion on this shows a defined process has never been fully\n>     vetted or understood.\n>\n>     I have worked on these processes for many years for projects\n>     orders of magnitudes larger than Bitcoin.  I can absolutely assure\n>     you the current mishmash does not scale and huge amounts of time\n>     are wasted.  That should be readily apparent from the recent\n>     discussions and the recent concern it has caused from people\n>     outside the developer's inner circle.\n>\n>     Lack of defined process = high risk and wasted effort.\n>\n>     Russ\n>\n>\n>\n>\n>\n>     On 6/24/2015 9:50 PM, Mark Friedenbach wrote:\n>\n>         I'm sorry but this is absolutely not the case, Milly. The\n>         reason that people get defensive is that we have a carefully\n>         constructed process that does work (thank you very much!) and\n>         is well documented. We talk about it quite often in fact as it\n>         is a defining characteristic of how bitcoin is developed which\n>         differs in some ways from how other open source software is\n>         developed -- although it remains the same in most other ways.\n>         Changes to the non-consensus sections of Bitcoin Core tend to\n>         get merged when there are a few reviews, tests, and ACKs from\n>         recognized developers, there are no outstanding objections,\n>         and the maintainer doing the merge makes a subjective\n>         judgement that the code is ready.\n>         Consensus-changes, on the other hand, get merged into Bitcoin\n>         Core only after the above criteria are met AND an extremely\n>         long discussion period that has given all the relevant\n>         stakeholders a chance to comment, and no significant\n>         objections remain. Consensus-code changes are unanimous. They\n>         must be.\n>         The sort of process that exists in standards bodies for\n>         example, with working groups and formal voting procedures, has\n>         no place where changes define the nature and validity of other\n>         people's money. Who has the right to reach into your pocket\n>         and define how you can or cannot spend your coins? The premise\n>         of bitcoin is that no one has that right, yet that is very\n>         much what we do when consensus code changes are made. That is\n>         why when we make a change to the rules governing the nature of\n>         bitcoin, we must make sure that everyone is made aware of the\n>         change and consents to it.\n>         Everyone. Does this work? Does this scale? So far, it does.\n>         Uncontroversial changes, such as BIP 66, are deployed without\n>         issue. Every indication is that BIP 66 will complete\n>         deployment in the very near future, and we intend to repeat\n>         this process for more interesting changes such as BIP65:\n>         CHECKLOCKTIMEVERIFY.\n>         This isn't about no one stepping forward to be the \"decider.\"\n>         This is about no one having the right to decide these things\n>         on the behalf of others. If a contentious change is proposed\n>         and not accepted by the process of consensus, that is because\n>         the process is doing its job at rejecting controversial\n>         changes. It has nothing to do with personality, and everything\n>         to do with the nature of bitcoin itself.\n>         On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin\n>         <milly at bitcoins.info> wrote:\n>\n>             I have seen this question asked many times.  Most\n>             developers become defensive and they usually give a very\n>             vague 1-sentence answer when this question is asked. It\n>             seems to be it is based on personalities rather than any\n>             kind of definable process.  To have that discussion the\n>             personalities must be separated out and answers like\n>             \"such-and-such wouldn't do that\" don't really do much to\n>             advance the discussion.  Also, the incentive for new\n>             developers to come in is that they will be paid by\n>             companies who want to influence the code and this should\n>             be considered (some developers take this statement as an\n>             insult when it is just a statement of the incentive process).\n>\n>             The other problem you are having is the lead developer\n>             does not want to be a \"decider\" when, in fact, he is a\n>             very significant decider. While the users have the\n>             ultimate choice in a practical sense the chief developer\n>             is the \"decider.\"  Now people don't want to get him upset\n>             so nobody wants to push the issue or fully define the\n>             process.  Now you are left with a broken,\n>             unwritten/unspoken process.  While this type of thing may\n>             work with a small group of developers businesses/investors\n>             looking in from the outside will see this as a risk.\n>\n>             Until you get passed all the personality-based arguments\n>             you are going to have a tough time defining a real process.\n>\n>             Russ\n>\n>\n>\n>\n>\n>\n>             On 6/24/2015 7:41 PM, Raystonn wrote:\n>\n>                 I would like to start a civil discussion on an\n>                 undefined, or at least unwritten, portion of the BIP\n>                 process.  Who should get to vote on approval to commit\n>                 a BIP implementation into Bitcoin Core? Is a simple\n>                 majority of these voters sufficient for approval?  If\n>                 not, then what is?\n>\n>                 Raystonn\n>                 _______________________________________________\n>                 bitcoin-dev mailing list\n>                 bitcoin-dev at lists.linuxfoundation.org\n>                 https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n>             _______________________________________________\n>             bitcoin-dev mailing list\n>             bitcoin-dev at lists.linuxfoundation.org\n>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>     _______________________________________________\n>     bitcoin-dev mailing list\n>     bitcoin-dev at lists.linuxfoundation.org\n>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n> _______________________________________________ bitcoin-dev mailing \n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/51d968ab/attachment-0001.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-25T20:05:40",
                "message_text_only": "On Thu, Jun 25, 2015 at 2:50 AM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> I'm sorry but this is absolutely not the case, Milly. The reason that\n> people get defensive is that we have a carefully constructed process that\n> does work (thank you very much!) and is well documented.\n>\n\nThere is no process for handling hard forks, which aren't bug fixes.\n\nSoft forks have a defined process of something like\n\n- BIP proposal + discussion\n- Proposed code\n- Dev acceptance\n- Release\n- Miner vote/acceptance\n\nThe devs have a weak veto.  If they refuse to move forward with changes,\nminers could perform a soft fork on their own.  They don't want to do that,\nas it would be controversial and the devs know the software better.\n\nThe miner veto is stronger (for soft forks) but not absolute.  The devs\ncould checkpoint/blacklist a chain if miners implemented a fork that wasn't\nacceptable (assuming the community backed them).\n\nWhen ASICs arrived, it was pointed out by some that the devs could hit back\nif ASICs weren't made publicly available.  If they slightly tweaked the\nhashing algorithm, then current generation of ASICs would be useless.   The\npotential threat may have acted as a disincentive for ASIC manufacturers to\nuse the ASICs themselves.\n\nMoving forward with agreement between all involved is the recommended and\ndesirable approach.\n\nConsensus between all parties is the goal but isn't absolutely required.\nThis escape valve is partly what makes consensus work.  If you dig your\nheels in, then the other side can bypass you, but they have an incentive to\ntry to convince you to compromise first.  The outcome is better if a middle\nground can be found.\n\nHard forks are different.  The \"checks and balances\" of weak vetoes are not\npresent.  This means that things can devolve from consensus to mutual\nveto.  Consensus ceases to be a goal and becomes a requirement.\n\nThis is partly a reflection of the nature of hard forks.  Everyone needs to\nupgrade.  On the other hand, if most of the various groups upgrade, then\nusers of the legacy software would have to upgrade or get left behind.  If\n5% of the users decided not to upgrade, should they be allowed to demand\nthat nobody else does?\n\nThere is clearly some kind of threshold that is reasonable.\n\nThe fundamental problem is that there isn't agreement on what the block\nsize is.  Is it equal in status to the 21 million BTC limit?\n\nIf Satoshi had said that 1MB was part of the definition of Bitcoin, then I\nthink people would accept it to the same extent as they accept the 21\nmillion coin limit.  It might cause people to leave the coin though.\n\nIt was intended to be temporary, but people have realized that it might be\na good idea to keep it.  In effect both sides could argue that they should\nbe considered the status quo.\n\nI wonder if a coin toss would be acceptable :).  \"Come to an agreement or\nwe decide by coin toss\"\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/b2ce86a5/attachment-0001.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-26T00:42:11",
                "message_text_only": "That description makes sense.  It also makes sense to separate out the \nhard fork from the soft fork process.   Right now some people want to \nuse the soft fork procedure for a hard fork simply because there is no \nother way to do it.\n\nI am under the impression that most users expect changes/improvements \nthat would require a hard fork so I think some kind of process needs to \nbe developed.  Taking the responsibility off the shoulder of the core \nmaintainer also makes sense.  The hard fork issue is too much of a \ndistraction for people trying to maintain the nuts and bolts of the \nunderlying system.\n\nI saw a suggestion that regularly scheduled hard forks should be \nplanned.  That seems to make sense so you would have some sort of \nschedule where you would have cut off dates for hard-fork BIP \nsubmissions.  That way you avoid the debates over whether there should \nbe hard forks to what should be contained within the hard fork (if \nneeded).  It makes sense to follow the BIP process as close as \npossible.  Possibly adding another step after \"Dev acceptance\" to \ninclude input from others such as merchants/exchanges/miners/users.  It \nwill only be an approximation of \"decentralization\" and the process \nwon't be perfect but if you want to move forward then you need some way \nto do it.\n\nRuss\n\n\nOn 6/25/2015 4:05 PM, Tier Nolan wrote:\n> On Thu, Jun 25, 2015 at 2:50 AM, Mark Friedenbach \n> <mark at friedenbach.org <mailto:mark at friedenbach.org>> wrote:\n>\n>     I'm sorry but this is absolutely not the case, Milly. The reason\n>     that people get defensive is that we have a carefully constructed\n>     process that does work (thank you very much!) and is well documented.\n>\n>\n> There is no process for handling hard forks, which aren't bug fixes.\n>\n> Soft forks have a defined process of something like\n>\n> - BIP proposal + discussion\n> - Proposed code\n> - Dev acceptance\n> - Release\n> - Miner vote/acceptance\n>\n> The devs have a weak veto.  If they refuse to move forward with \n> changes, miners could perform a soft fork on their own.  They don't \n> want to do that, as it would be controversial and the devs know the \n> software better.\n>\n> The miner veto is stronger (for soft forks) but not absolute.  The \n> devs could checkpoint/blacklist a chain if miners implemented a fork \n> that wasn't acceptable (assuming the community backed them).\n>\n> When ASICs arrived, it was pointed out by some that the devs could hit \n> back if ASICs weren't made publicly available.  If they slightly \n> tweaked the hashing algorithm, then current generation of ASICs would \n> be useless.   The potential threat may have acted as a disincentive \n> for ASIC manufacturers to use the ASICs themselves.\n>\n> Moving forward with agreement between all involved is the recommended \n> and desirable approach.\n>\n> Consensus between all parties is the goal but isn't absolutely \n> required.  This escape valve is partly what makes consensus work.  If \n> you dig your heels in, then the other side can bypass you, but they \n> have an incentive to try to convince you to compromise first.  The \n> outcome is better if a middle ground can be found.\n>\n> Hard forks are different.  The \"checks and balances\" of weak vetoes \n> are not present.  This means that things can devolve from consensus to \n> mutual veto.  Consensus ceases to be a goal and becomes a requirement.\n>\n> This is partly a reflection of the nature of hard forks.  Everyone \n> needs to upgrade.  On the other hand, if most of the various groups \n> upgrade, then users of the legacy software would have to upgrade or \n> get left behind. If 5% of the users decided not to upgrade, should \n> they be allowed to demand that nobody else does?\n>\n> There is clearly some kind of threshold that is reasonable.\n>\n> The fundamental problem is that there isn't agreement on what the \n> block size is.  Is it equal in status to the 21 million BTC limit?\n>\n> If Satoshi had said that 1MB was part of the definition of Bitcoin, \n> then I think people would accept it to the same extent as they accept \n> the 21 million coin limit.  It might cause people to leave the coin \n> though.\n>\n> It was intended to be temporary, but people have realized that it \n> might be a good idea to keep it.  In effect both sides could argue \n> that they should be considered the status quo.\n>\n> I wonder if a coin toss would be acceptable :).  \"Come to an agreement \n> or we decide by coin toss\"\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/f1c23619/attachment.html>"
            },
            {
                "author": "Gareth Williams",
                "date": "2015-06-25T03:42:52",
                "message_text_only": "On Thu, Jun 25, 2015 at 10:07 AM, Milly Bitcoin <milly at bitcoins.info>\nwrote:\n<snip>\n> Also, the incentive for new\n> developers to come in is that they will be paid by companies who want to\n> influence the code and this should be considered\n<snip>\n> Now you are left with a broken, unwritten/unspoken process.\n\nYour former statement is a great example of why \"rough consensus and\nrunning code\" is superior to design by committee.\nAn argument should be assessed on its technical merit alone, not on\nthe number of people advancing it -- a process that would be open to\nexactly the type of external manipulation you say you are concerned\nabout."
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T04:10:46",
                "message_text_only": "I am not giving an opinion on the incentive process for developers.  I \nam just saying it exists and it needs to be taken into account when \ndeveloping a process. Pretending it doesn't exist or taking it as some \nkind of personal insult does not do anything to advance the process.  \nThe developer incentives feeds into the consensus process.\n\nDepending on some kind of \"rough consensus\" with unstated \npersonality-based rules of the game works fine with small projects.  As \nthe project gets larger that does not scale as can be seen with the \nrecent events.  That is just a taste of what will happen in the future \nas new issue arise.  Developers will end up spending all day tweeting \nand making videos instead of writing code.\n\nThe current process does not guarantee changes are approved on technical \nmerit alone and that is part of the problem.  Since there is no defined \nprocess people make claims of all sorts of motives that may or may not \nexist.  The idea is to get a defined process that gives a certain level \nof assurance to outsiders that the process is based on things like \ntechnical merit.\n\nRuss\n\n\nOn 6/24/2015 11:42 PM, Gareth Williams wrote:\n> On Thu, Jun 25, 2015 at 10:07 AM, Milly Bitcoin <milly at bitcoins.info>\n> wrote:\n> <snip>\n>> Also, the incentive for new\n>> developers to come in is that they will be paid by companies who want to\n>> influence the code and this should be considered\n> <snip>\n>> Now you are left with a broken, unwritten/unspoken process.\n> Your former statement is a great example of why \"rough consensus and\n> running code\" is superior to design by committee.\n> An argument should be assessed on its technical merit alone, not on\n> the number of people advancing it -- a process that would be open to\n> exactly the type of external manipulation you say you are concerned\n> about.\n>"
            },
            {
                "author": "s7r",
                "date": "2015-06-25T13:36:49",
                "message_text_only": "I guess you mean Wladimir here. You are wrong, Wladimir does decide and\nif you look at the commit history on github.com for bitcoin core you\nwill see, that he does actually decide and does it really good.\n\nHe just does not want to decide (and he really should not) on CONSENSUS\nchanges or protocol changes. This is totally different.\n\nStop the analogy with \"other open source projects\". This is an open\nsource project (the code part) but unlike any other open source projects\nwhich can just be forked, without affecting the other users, in bitcoin\nwe need all the users to trust a single blockchain, so it'll have value.\nIf some users fork the blockchain and change consensus rules, they are\nnot just harming themselves, they are affecting ALL the users, since\nsuch a thing would have strong impact over the BTC/FIAT rate, affecting\neveryone in the ecosystem. There is economics involved here and human\nelement, things which are hard to fix via code, even if the code is\ndeveloped in open source style.\n\nIt's one thing to decide to merge some patches, improve the code, etc.\nand another thing to decide for consensus rules when you literary play\nwith 4 billion united states dollars of other people's money. This\nshouldn't be Wladimir's responsibility, it's just unfair for people to\nthrow this on his shoulders.\n\nI do not under any circumstances suggest that the consensus should\nremain as it is now forever. We need to improve it, but this should not\nbe on the maintainer. I've seen smart suggestions on this mail list\nwhere consensus changes can be made during a long period of time,\nthrough soft forks, where all users/miners/exchangers/merchants get the\nchance to choose / take action.\n\nOn 6/25/2015 3:07 AM, Milly Bitcoin wrote:\n> I have seen this question asked many times.  Most developers become\n> defensive and they usually give a very vague 1-sentence answer when this\n> question is asked.  It seems to be it is based on personalities rather\n> than any kind of definable process.  To have that discussion the\n> personalities must be separated out and answers like \"such-and-such\n> wouldn't do that\" don't really do much to advance the discussion.  Also,\n> the incentive for new developers to come in is that they will be paid by\n> companies who want to influence the code and this should be considered\n> (some developers take this statement as an insult when it is just a\n> statement of the incentive process).\n> \n> The other problem you are having is the lead developer does not want to\n> be a \"decider\" when, in fact, he is a very significant decider.  While\n> the users have the ultimate choice in a practical sense the chief\n> developer is the \"decider.\"  Now people don't want to get him upset so\n> nobody wants to push the issue or fully define the process.  Now you are\n> left with a broken, unwritten/unspoken process.  While this type of\n> thing may work with a small group of developers businesses/investors\n> looking in from the outside will see this as a risk.\n> \n> Until you get passed all the personality-based arguments you are going\n> to have a tough time defining a real process.\n> \n> Russ\n> \n> \n> \n> \n> \n> On 6/24/2015 7:41 PM, Raystonn wrote:\n>> I would like to start a civil discussion on an undefined, or at least\n>> unwritten, portion of the BIP process.  Who should get to vote on\n>> approval to commit a BIP implementation into Bitcoin Core?  Is a\n>> simple majority of these voters sufficient for approval?  If not, then\n>> what is?\n>>\n>> Raystonn\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> \n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-25T13:41:01",
                "message_text_only": "Wladimir is doing an amazing job under difficult circumstances. Give the guy a break, please.\n\n- Eric Lombrozo\n\n> On Jun 25, 2015, at 6:36 AM, s7r <s7r at sky-ip.org> wrote:\n> \n> I guess you mean Wladimir here. You are wrong, Wladimir does decide and\n> if you look at the commit history on github.com for bitcoin core you\n> will see, that he does actually decide and does it really good.\n> \n> He just does not want to decide (and he really should not) on CONSENSUS\n> changes or protocol changes. This is totally different.\n> \n> Stop the analogy with \"other open source projects\". This is an open\n> source project (the code part) but unlike any other open source projects\n> which can just be forked, without affecting the other users, in bitcoin\n> we need all the users to trust a single blockchain, so it'll have value.\n> If some users fork the blockchain and change consensus rules, they are\n> not just harming themselves, they are affecting ALL the users, since\n> such a thing would have strong impact over the BTC/FIAT rate, affecting\n> everyone in the ecosystem. There is economics involved here and human\n> element, things which are hard to fix via code, even if the code is\n> developed in open source style.\n> \n> It's one thing to decide to merge some patches, improve the code, etc.\n> and another thing to decide for consensus rules when you literary play\n> with 4 billion united states dollars of other people's money. This\n> shouldn't be Wladimir's responsibility, it's just unfair for people to\n> throw this on his shoulders.\n> \n> I do not under any circumstances suggest that the consensus should\n> remain as it is now forever. We need to improve it, but this should not\n> be on the maintainer. I've seen smart suggestions on this mail list\n> where consensus changes can be made during a long period of time,\n> through soft forks, where all users/miners/exchangers/merchants get the\n> chance to choose / take action.\n> \n> On 6/25/2015 3:07 AM, Milly Bitcoin wrote:\n>> I have seen this question asked many times.  Most developers become\n>> defensive and they usually give a very vague 1-sentence answer when this\n>> question is asked.  It seems to be it is based on personalities rather\n>> than any kind of definable process.  To have that discussion the\n>> personalities must be separated out and answers like \"such-and-such\n>> wouldn't do that\" don't really do much to advance the discussion.  Also,\n>> the incentive for new developers to come in is that they will be paid by\n>> companies who want to influence the code and this should be considered\n>> (some developers take this statement as an insult when it is just a\n>> statement of the incentive process).\n>> \n>> The other problem you are having is the lead developer does not want to\n>> be a \"decider\" when, in fact, he is a very significant decider.  While\n>> the users have the ultimate choice in a practical sense the chief\n>> developer is the \"decider.\"  Now people don't want to get him upset so\n>> nobody wants to push the issue or fully define the process.  Now you are\n>> left with a broken, unwritten/unspoken process.  While this type of\n>> thing may work with a small group of developers businesses/investors\n>> looking in from the outside will see this as a risk.\n>> \n>> Until you get passed all the personality-based arguments you are going\n>> to have a tough time defining a real process.\n>> \n>> Russ\n>> \n>> \n>> \n>> \n>> \n>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>> I would like to start a civil discussion on an undefined, or at least\n>>> unwritten, portion of the BIP process.  Who should get to vote on\n>>> approval to commit a BIP implementation into Bitcoin Core?  Is a\n>>> simple majority of these voters sufficient for approval?  If not, then\n>>> what is?\n>>> \n>>> Raystonn\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> \n>> \n>> \n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/79673426/attachment.sig>"
            },
            {
                "author": "s7r",
                "date": "2015-06-25T13:51:33",
                "message_text_only": "+1 for Wladimir, as I said. Anyone who checks the commit history on\ngithub can see that he decides quite well all the time for code changes.\nThese fake arguments are thrown by people who hope they will force him\ninto deciding for consensus / protocol changes. This won't happen.\n\nOn 6/25/2015 4:41 PM, Eric Lombrozo wrote:\n> Wladimir is doing an amazing job under difficult circumstances. Give the guy a break, please.\n> \n> - Eric Lombrozo\n> \n>> On Jun 25, 2015, at 6:36 AM, s7r <s7r at sky-ip.org> wrote:\n>>\n>> I guess you mean Wladimir here. You are wrong, Wladimir does decide and\n>> if you look at the commit history on github.com for bitcoin core you\n>> will see, that he does actually decide and does it really good.\n>>\n>> He just does not want to decide (and he really should not) on CONSENSUS\n>> changes or protocol changes. This is totally different.\n>>\n>> Stop the analogy with \"other open source projects\". This is an open\n>> source project (the code part) but unlike any other open source projects\n>> which can just be forked, without affecting the other users, in bitcoin\n>> we need all the users to trust a single blockchain, so it'll have value.\n>> If some users fork the blockchain and change consensus rules, they are\n>> not just harming themselves, they are affecting ALL the users, since\n>> such a thing would have strong impact over the BTC/FIAT rate, affecting\n>> everyone in the ecosystem. There is economics involved here and human\n>> element, things which are hard to fix via code, even if the code is\n>> developed in open source style.\n>>\n>> It's one thing to decide to merge some patches, improve the code, etc.\n>> and another thing to decide for consensus rules when you literary play\n>> with 4 billion united states dollars of other people's money. This\n>> shouldn't be Wladimir's responsibility, it's just unfair for people to\n>> throw this on his shoulders.\n>>\n>> I do not under any circumstances suggest that the consensus should\n>> remain as it is now forever. We need to improve it, but this should not\n>> be on the maintainer. I've seen smart suggestions on this mail list\n>> where consensus changes can be made during a long period of time,\n>> through soft forks, where all users/miners/exchangers/merchants get the\n>> chance to choose / take action.\n>>\n>> On 6/25/2015 3:07 AM, Milly Bitcoin wrote:\n>>> I have seen this question asked many times.  Most developers become\n>>> defensive and they usually give a very vague 1-sentence answer when this\n>>> question is asked.  It seems to be it is based on personalities rather\n>>> than any kind of definable process.  To have that discussion the\n>>> personalities must be separated out and answers like \"such-and-such\n>>> wouldn't do that\" don't really do much to advance the discussion.  Also,\n>>> the incentive for new developers to come in is that they will be paid by\n>>> companies who want to influence the code and this should be considered\n>>> (some developers take this statement as an insult when it is just a\n>>> statement of the incentive process).\n>>>\n>>> The other problem you are having is the lead developer does not want to\n>>> be a \"decider\" when, in fact, he is a very significant decider.  While\n>>> the users have the ultimate choice in a practical sense the chief\n>>> developer is the \"decider.\"  Now people don't want to get him upset so\n>>> nobody wants to push the issue or fully define the process.  Now you are\n>>> left with a broken, unwritten/unspoken process.  While this type of\n>>> thing may work with a small group of developers businesses/investors\n>>> looking in from the outside will see this as a risk.\n>>>\n>>> Until you get passed all the personality-based arguments you are going\n>>> to have a tough time defining a real process.\n>>>\n>>> Russ\n>>>\n>>>\n>>>\n>>>\n>>>\n>>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>>> I would like to start a civil discussion on an undefined, or at least\n>>>> unwritten, portion of the BIP process.  Who should get to vote on\n>>>> approval to commit a BIP implementation into Bitcoin Core?  Is a\n>>>> simple majority of these voters sufficient for approval?  If not, then\n>>>> what is?\n>>>>\n>>>> Raystonn\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T14:08:51",
                "message_text_only": "I agree with all this.  However, as a practical matter the consensus \nrules are not separated out so one person decides whether the \"rough \nconsensus\" has been reached and if the consensus rules should be \nchanged.  It really has nothing to do with any personality involved or \nwhether they do a good or bad job.  The final decision should probably \nnot fall into the lap of one person but it does for now and that is just \nthe way it is because there is no better way to do it if you want to get \nthings done.\n\nI am also not saying any specific process is good or bad, I am saying \nthe lack of a defined process causes wasted time and effort.  Once you \ndefine the process you have now (the baseline) then you can evaluate \nwhether parts of it are good or bad.\n\nAs the developer system transitions into a paid system where commercial \nentities hire developers then there is no incentive for them to do that \nif changes can never be made.  A defined process will give more \nassurance for commercial entities to bring more developers on board.\n\nRuss\n\n\nOn 6/25/2015 9:41 AM, Eric Lombrozo wrote:\n> Wladimir is doing an amazing job under difficult circumstances. Give the guy a break, please.\n>\n> - Eric Lombrozo\n>\n>> On Jun 25, 2015, at 6:36 AM, s7r <s7r at sky-ip.org> wrote:\n>>\n>> I guess you mean Wladimir here. You are wrong, Wladimir does decide and\n>> if you look at the commit history on github.com for bitcoin core you\n>> will see, that he does actually decide and does it really good.\n>>\n>> He just does not want to decide (and he really should not) on CONSENSUS\n>> changes or protocol changes. This is totally different.\n>>\n>> Stop the analogy with \"other open source projects\". This is an open\n>> source project (the code part) but unlike any other open source projects\n>> which can just be forked, without affecting the other users, in bitcoin\n>> we need all the users to trust a single blockchain, so it'll have value.\n>> If some users fork the blockchain and change consensus rules, they are\n>> not just harming themselves, they are affecting ALL the users, since\n>> such a thing would have strong impact over the BTC/FIAT rate, affecting\n>> everyone in the ecosystem. There is economics involved here and human\n>> element, things which are hard to fix via code, even if the code is\n>> developed in open source style.\n>>\n>> It's one thing to decide to merge some patches, improve the code, etc.\n>> and another thing to decide for consensus rules when you literary play\n>> with 4 billion united states dollars of other people's money. This\n>> shouldn't be Wladimir's responsibility, it's just unfair for people to\n>> throw this on his shoulders.\n>>\n>> I do not under any circumstances suggest that the consensus should\n>> remain as it is now forever. We need to improve it, but this should not\n>> be on the maintainer. I've seen smart suggestions on this mail list\n>> where consensus changes can be made during a long period of time,\n>> through soft forks, where all users/miners/exchangers/merchants get the\n>> chance to choose / take action.\n>>\n>> On 6/25/2015 3:07 AM, Milly Bitcoin wrote:\n>>> I have seen this question asked many times.  Most developers become\n>>> defensive and they usually give a very vague 1-sentence answer when this\n>>> question is asked.  It seems to be it is based on personalities rather\n>>> than any kind of definable process.  To have that discussion the\n>>> personalities must be separated out and answers like \"such-and-such\n>>> wouldn't do that\" don't really do much to advance the discussion.  Also,\n>>> the incentive for new developers to come in is that they will be paid by\n>>> companies who want to influence the code and this should be considered\n>>> (some developers take this statement as an insult when it is just a\n>>> statement of the incentive process).\n>>>\n>>> The other problem you are having is the lead developer does not want to\n>>> be a \"decider\" when, in fact, he is a very significant decider.  While\n>>> the users have the ultimate choice in a practical sense the chief\n>>> developer is the \"decider.\"  Now people don't want to get him upset so\n>>> nobody wants to push the issue or fully define the process.  Now you are\n>>> left with a broken, unwritten/unspoken process.  While this type of\n>>> thing may work with a small group of developers businesses/investors\n>>> looking in from the outside will see this as a risk.\n>>>\n>>> Until you get passed all the personality-based arguments you are going\n>>> to have a tough time defining a real process.\n>>>\n>>> Russ\n>>>\n>>>\n>>>\n>>>\n>>>\n>>> On 6/24/2015 7:41 PM, Raystonn wrote:\n>>>> I would like to start a civil discussion on an undefined, or at least\n>>>> unwritten, portion of the BIP process.  Who should get to vote on\n>>>> approval to commit a BIP implementation into Bitcoin Core?  Is a\n>>>> simple majority of these voters sufficient for approval?  If not, then\n>>>> what is?\n>>>>\n>>>> Raystonn\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-25T17:03:47",
                "message_text_only": "On Thu, Jun 25, 2015 at 6:41 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Wladimir is doing an amazing job under difficult circumstances. Give the\n> guy a break, please\n\n\nA+ agreed.  He is not an elected decider - he is the Bitcoin Core release\nmanager, and has been doing a damn fine job.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/035d6855/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T17:29:43",
                "message_text_only": "In the context of this discussion the Bitcoin Core release manager is \nthe \"decider\" of what goes into the release.  Nobody said he was \nelected.  The discussion also has nothing to do with any specific person \nand nobody said anyone did anything wrong.  One of the reason why a \nprocess needs to be developed so issues are not sidetracked into a \ndramatized discussion over personalities which is a big waste of time.  \nSome of the developers are now essentially full time drama queens who \nwrite a little bit of code on the side.\n\nRuss\n\n\n\n\nOn 6/25/2015 1:03 PM, Jeff Garzik wrote:\n> On Thu, Jun 25, 2015 at 6:41 AM, Eric Lombrozo <elombrozo at gmail.com \n> <mailto:elombrozo at gmail.com>> wrote:\n>\n>     Wladimir is doing an amazing job under difficult circumstances.\n>     Give the guy a break, please\n>\n>\n> A+ agreed.  He is not an elected decider - he is the Bitcoin Core \n> release manager, and has been doing a damn fine job.\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/b0b2a67a/attachment.html>"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-25T00:18:22",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/f4a52371/attachment.html>"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-25T03:00:44",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/ab408f33/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-25T03:19:46",
                "message_text_only": "The more specific answer (from a user's perspective) is that there is \nunanimous approval within the constraints of the Bitcoin system.  The \nconstraint is that your software must be compatible with merchants and \nexchanges for your coins to have value.  Stating \"unanimous approval\" \nwithout identifying the constraint is misstating the issue.\n\nAs for developers, the consensus on code changes are almost never 100% \nand someone has to make the decision about what is an a acceptable \nconsensus.  Most of the cultish answers completely overlook this issue \neven though it is main point of the question.\n\nRuss\n\n\n\n\n\n\nOn 6/24/2015 11:00 PM, Raystonn wrote:\n>\n> > Consensus-code changes are unanimous. They must be.\n>\n> Excellent. Now we are getting to some actual written rules. How about \n> updating the BIP process documentation with this? Everyone should be \n> able to read the rules of the coin they are buying.\n>\n> One moment though. Can you tell me how this particular rule came to \n> be? The creator of Bitcoin violated this rule many times. So it must \n> have been adopted after his departure. What process was followed to \n> adopt this new rule? Was there consensus for it at the time? A huge \n> portion of the user community is under the impression that Satoshi's \n> written plans, some of which violate this new rule, will be \n> implemented. So there certainly would not be consensus for this rule \n> today.\n>\n> On 24 Jun 2015 6:51 pm, Mark Friedenbach <mark at friedenbach.org> wrote:\n>\n>     I'm sorry but this is absolutely not the case, Milly. The reason\n>     that people get defensive is that we have a carefully constructed\n>     process that does work (thank you very much!) and is well\n>     documented. We talk about it quite often in fact as it is a\n>     defining characteristic of how bitcoin is developed which differs\n>     in some ways from how other open source software is developed --\n>     although it remains the same in most other ways.\n>\n>     Changes to the non-consensus sections of Bitcoin Core tend to get\n>     merged when there are a few reviews, tests, and ACKs from\n>     recognized developers, there are no outstanding objections, and\n>     the maintainer doing the merge makes a subjective judgement that\n>     the code is ready.\n>\n>     Consensus-changes, on the other hand, get merged into Bitcoin Core\n>     only after the above criteria are met AND an extremely long\n>     discussion period that has given all the relevant stakeholders a\n>     chance to comment, and no significant objections remain.\n>     Consensus-code changes are unanimous. They must be.\n>\n>     The sort of process that exists in standards bodies for example,\n>     with working groups and formal voting procedures, has no place\n>     where changes define the nature and validity of other people's\n>     money. Who has the right to reach into your pocket and define how\n>     you can or cannot spend your coins? The premise of bitcoin is that\n>     no one has that right, yet that is very much what we do when\n>     consensus code changes are made. That is why when we make a change\n>     to the rules governing the nature of bitcoin, we must make sure\n>     that everyone is made aware of the change and consents to it.\n>\n>     Everyone. Does this work? Does this scale? So far, it does.\n>     Uncontroversial changes, such as BIP 66, are deployed without\n>     issue. Every indication is that BIP 66 will complete deployment in\n>     the very near future, and we intend to repeat this process for\n>     more interesting changes such as BIP65: CHECKLOCKTIMEVERIFY.\n>\n>     This isn't about no one stepping forward to be the \"decider.\" This\n>     is about no one having the right to decide these things on the\n>     behalf of others. If a contentious change is proposed and not\n>     accepted by the process of consensus, that is because the process\n>     is doing its job at rejecting controversial changes. It has\n>     nothing to do with personality, and everything to do with the\n>     nature of bitcoin itself.\n>\n>\n>     On Wed, Jun 24, 2015 at 5:07 PM, Milly Bitcoin\n>     <milly at bitcoins.info <mailto:milly at bitcoins.info>> wrote:\n>\n>         I have seen this question asked many times.  Most developers\n>         become defensive and they usually give a very vague 1-sentence\n>         answer when this question is asked.  It seems to be it is\n>         based on personalities rather than any kind of definable\n>         process.  To have that discussion the personalities must be\n>         separated out and answers like \"such-and-such wouldn't do\n>         that\" don't really do much to advance the discussion.  Also,\n>         the incentive for new developers to come in is that they will\n>         be paid by companies who want to influence the code and this\n>         should be considered (some developers take this statement as\n>         an insult when it is just a statement of the incentive process).\n>\n>         The other problem you are having is the lead developer does\n>         not want to be a \"decider\" when, in fact, he is a very\n>         significant decider.  While the users have the ultimate choice\n>         in a practical sense the chief developer is the \"decider.\" \n>         Now people don't want to get him upset so nobody wants to push\n>         the issue or fully define the process.  Now you are left with\n>         a broken, unwritten/unspoken process.  While this type of\n>         thing may work with a small group of developers\n>         businesses/investors looking in from the outside will see this\n>         as a risk.\n>\n>         Until you get passed all the personality-based arguments you\n>         are going to have a tough time defining a real process.\n>\n>         Russ\n>\n>\n>\n>\n>\n>\n>         On 6/24/2015 7:41 PM, Raystonn wrote:\n>\n>             I would like to start a civil discussion on an undefined,\n>             or at least unwritten, portion of the BIP process.  Who\n>             should get to vote on approval to commit a BIP\n>             implementation into Bitcoin Core?  Is a simple majority of\n>             these voters sufficient for approval?  If not, then what is?\n>\n>             Raystonn\n>             _______________________________________________\n>             bitcoin-dev mailing list\n>             bitcoin-dev at lists.linuxfoundation.org\n>             <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n>         _______________________________________________\n>         bitcoin-dev mailing list\n>         bitcoin-dev at lists.linuxfoundation.org\n>         <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>         https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/db6e451a/attachment-0001.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-26T11:13:17",
                "message_text_only": "On Thu, Jun 25, 2015 at 2:42 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n> \"Cultish\" means making claims without any supporting facts.\n\nOn Thu, Jun 25, 2015 at 5:19 AM, Milly Bitcoin <milly at bitcoins.info> wrote:\n> As for developers, the consensus on code changes are almost never 100% and\n> someone has to make the decision about what is an a acceptable consensus.\n\nThis statement seems \"cultish\" by your own definition.\nI'm going to make the opposite statement:  the consensus on code\nchanges is almost always 100%.\nMark has already given a couple examples of changes to consensus rules\n(the most risky type of change), here's a few thousand other examples\nof changes to the bitcoin core's code that had no opposition:\n\nhttps://github.com/bitcoin/bitcoin/commits/master\n\nCan you please point us to a few examples were changes were made with\nopposition to them?\nIn those cases (which you assure is what happens almost always), would\nyou say that the result of letting a decider decide instead of fixing\nor addressing all the concerns (either by changing the proposed code\nor explaining it) better in restrospective?"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-26T12:34:52",
                "message_text_only": "Without looking up specific links I am confident people like Mircea \nPopescu will oppose just about any change.  Maybe they don't post their \nobjection to Github but the point I am making is that no matter what \nchange you make someone, somewhere will be against it.  Some of the \ndevelopers think that Github is the only place that matters and that the \nonly opinions that matter is a tiny group of insiders.  I don't think \nthat way which is the reasoning behind my statement.\n\nI am saying that after all the concerns are addressed as far as \nreasonably possible someone, somewhere has to decide whether or not to \ncommit the changes to the official release.  Right now the only person \nwho makes that decision if the version manager.  I agree it should not \nfall onto the shoulders of one person who is also very busy doing other \nthings.  I am saying there should be some process to move forward and \nmake decisions when needed.\n\nAlso, you already saw one of the Core developers calling me a \"troll\" \nand telling others to ignore my messages.  I have heard of several \npeople who just drop out of the github discussions because of stuff like \nthat.  They also delete message from Gihub discussions so that archive \nis not 100% credible.  I have seen things like a Github discussion \nbetween 3 or 4 people and then Garzik send out a tweet that there is \nnear universal approval for the proposed change as it nobody is allowed \nto question it.  After watching the github process for a couple years I \nsimply don't trust it because the developers in charge have a \ndictatorial style and they shut out many stakeholders instead of \nsoliciting their opinions.  I view the Github system as the biggest \ncentralized choke-point in Bitcoin and probably its biggest threat to \nits continued survival.  Anyone can come in and hire a couple core \ndevelopers and veto any change they don't want.\n\nRuss\n\n\n\n\n\n\n\n\nOn 6/26/2015 7:13 AM, Jorge Tim\u00f3n wrote:\n> On Thu, Jun 25, 2015 at 2:42 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n>> \"Cultish\" means making claims without any supporting facts.\n> On Thu, Jun 25, 2015 at 5:19 AM, Milly Bitcoin <milly at bitcoins.info> wrote:\n>> As for developers, the consensus on code changes are almost never 100% and\n>> someone has to make the decision about what is an a acceptable consensus.\n> This statement seems \"cultish\" by your own definition.\n> I'm going to make the opposite statement:  the consensus on code\n> changes is almost always 100%.\n> Mark has already given a couple examples of changes to consensus rules\n> (the most risky type of change), here's a few thousand other examples\n> of changes to the bitcoin core's code that had no opposition:\n>\n> https://github.com/bitcoin/bitcoin/commits/master\n>\n> Can you please point us to a few examples were changes were made with\n> opposition to them?\n> In those cases (which you assure is what happens almost always), would\n> you say that the result of letting a decider decide instead of fixing\n> or addressing all the concerns (either by changing the proposed code\n> or explaining it) better in restrospective?\n>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-27T11:28:50",
                "message_text_only": "On Fri, Jun 26, 2015 at 2:34 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n> Without looking up specific links I am confident people like Mircea Popescu\n> will oppose just about any change.  Maybe they don't post their objection to\n> Github but the point I am making is that no matter what change you make\n> someone, somewhere will be against it.  Some of the developers think that\n> Github is the only place that matters and that the only opinions that matter\n> is a tiny group of insiders.  I don't think that way which is the reasoning\n> behind my statement.\n\nYes, I understand that it may be difficult to define\n\"uncontroversial\", as I explain in\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html\n\n> I have seen things like a Github discussion between 3 or 4 people\n> and then Garzik send out a tweet that there is near universal approval for\n> the proposed change as it nobody is allowed to question it.  After watching\n> the github process for a couple years I simply don't trust it because the\n> developers in charge have a dictatorial style and they shut out many\n> stakeholders instead of soliciting their opinions.\n\nCan you provide anything to back your claim?\nNote that even if that's true, still, Bitcoin core != Bitcoin consensus rules.\n\n> I view the Github system\n> as the biggest centralized choke-point in Bitcoin and probably its biggest\n> threat to its continued survival.  Anyone can come in and hire a couple core\n> developers and veto any change they don't want.\n\nWell, yes, github is centralized and so it is bitcoin core development.\nBut bitcoin core developers don't decide hardfork changes.\nSo far, softfork changes have been made because they have been\nconsidered \"uncontroversial\", not because there's any centralized\nnegotiating table or voting process to decide when to force every user\nto adapt their software to new consensus rules."
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-27T12:50:14",
                "message_text_only": "On 6/27/2015 7:28 AM, Jorge Tim\u00f3n wrote:\n> On Fri, Jun 26, 2015 at 2:34 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n>> Without looking up specific links I am confident people like Mircea Popescu\n>> will oppose just about any change.  Maybe they don't post their objection to\n>> Github but the point I am making is that no matter what change you make\n>> someone, somewhere will be against it.  Some of the developers think that\n>> Github is the only place that matters and that the only opinions that matter\n>> is a tiny group of insiders.  I don't think that way which is the reasoning\n>> behind my statement.\n> Yes, I understand that it may be difficult to define\n> \"uncontroversial\", as I explain in\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html\n>\n>> I have seen things like a Github discussion between 3 or 4 people\n>> and then Garzik send out a tweet that there is near universal approval for\n>> the proposed change as it nobody is allowed to question it.  After watching\n>> the github process for a couple years I simply don't trust it because the\n>> developers in charge have a dictatorial style and they shut out many\n>> stakeholders instead of soliciting their opinions.\n> Can you provide anything to back your claim?\n> Note that even if that's true, still, Bitcoin core != Bitcoin consensus rules.\nI saw this problem first hand when Andreas Antonopolis got into a big \ndispute with some of the core developers over the press contacts.  The \ngithub made up their rules as they went along and simply ignored input \nfrom anyone outside their inner circle.  Since that time several people \nhave told me they dropped out of participating in the github process.  \nThe maintainers deleted some of my messages and I have been told I am \nbanned form github. Further, as you can see on here Jeff Garzik, a guy \nwho claims only to hold a few hundred Bitcoin, told people on this list \nto ignore my messages.  There is also the incident where Gavin lambasted \nsomeone for \"hiding behind anonymity\" when the whole project is based on \nan anonymous contributor.  I find it interesting that many developers \nwho work on a decentralized system.  I don't like the general attitude \nof the developers that they are the protectors of the system and that \neveryone else is trying to exploit or do damage. they often characterize \ndifferent users/businesses/miners as abusers, spammers, people trying to \ngame the system, etc. while they characterize the developers as pure and \ngood.  When the issue comes up about authority over the code (which \nincludes the consensus rules) they spout all kinds of nonsense about how \nthey don't have significant control and are not deciders yet they never \npoint to who does decide.  If they weren't the deciders then people \nwould not be spending all that time lobbying them.  just because there \nare some checks and balances does not mean it is \"decentralized\" or they \nare not deciders.\n\nAs for your proclamation**at Bitcoin core != Bitcoin consensus rules, \nthat is simply not true in practice.  There is one piece of software \nwith one maintainer.  If you want it changed you have to convince that \none person to approve the change.\n\n>> I view the Github system\n>> as the biggest centralized choke-point in Bitcoin and probably its biggest\n>> threat to its continued survival.  Anyone can come in and hire a couple core\n>> developers and veto any change they don't want.\n> Well, yes, github is centralized and so it is bitcoin core development.\n> But bitcoin core developers don't decide hardfork changes.\n> So far, softfork changes have been made because they have been\n> considered \"uncontroversial\", not because there's any centralized\n> negotiating table or voting process to decide when to force every user\n> to adapt their software to new consensus rules.\n>\nThe core developers have the biggest influence by far to decide hard \nfork changes.  There is no other place to go.  While anyone can fork the \ncode someone compare it to the river Thames.  if you don't like where \nthe river runs you can dig a new one ... here is a spoon.  I can vote in \nelections but that does not mean the US government is \"decentralized.\"  \nThe core maintainer has decided on a hard fork change, he has decided \nnot to do it.\n\nIn any case what happened in the past does not matter.  What is going to \nhappen now is the question.  If nothing happens and everybody sits \naround saying they are not in charge of the consensus rules and nothing \never gets done I see Bitcoin just fading away into oblivion.  I am under \nthe impression that at least some of the developers (such as Garzik) \ndon't actually hold that many bitcoins and don't have a large stake in \nthe system yet they have significant control.  Anyone can attack the \nsystem by simply hiring a couple core developers and creating the \ngridlock we see now.\n\nRuss\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/9e573a71/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T12:30:55",
                "message_text_only": "On Sat, Jun 27, 2015 at 2:50 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n> On 6/27/2015 7:28 AM, Jorge Tim\u00f3n wrote:\n> I have seen things like a Github discussion between 3 or 4 people\n> and then Garzik send out a tweet that there is near universal approval for\n> the proposed change as it nobody is allowed to question it.  After watching\n> the github process for a couple years I simply don't trust it because the\n> developers in charge have a dictatorial style and they shut out many\n> stakeholders instead of soliciting their opinions.\n> [...]\n>\n> I saw this problem first hand when Andreas Antonopolis got into a big\n> dispute with some of the core developers over the press contacts.  The\n> github made up their rules as they went along and simply ignored input from\n> anyone outside their inner circle.  Since that time several people have told\n> me they dropped out of participating in the github process.  The maintainers\n> deleted some of my messages and I have been told I am banned form github.\n\nI wasn't asking for an example of something that was rejected, there's\nplenty of those.\nYou were saying people were opposing a change and jgarzik unilaterally added it.\nWhen did that happen?\n\n> As for your proclamation at Bitcoin core != Bitcoin consensus rules, that is\n> simply not true in practice.  There is one piece of software with one\n> maintainer.  If you want it changed you have to convince that one person to\n> approve the change.\n\nThere are many pieces of software and many maintainers, libbitcoin,\nfor example, is another full node implementation different from\nBitcoin core.\nAlso, to change Bitcoin core I don't need to convince anyone, I do it\nall the time here https://github.com/jtimon/bitcoin\n\n> The core developers have the biggest influence by far to decide hard fork\n> changes.  There is no other place to go.  While anyone can fork the code\n> someone compare it to the river Thames.  if you don't like where the river\n> runs you can dig a new one ... here is a spoon.  I can vote in elections but\n> that does not mean the US government is \"decentralized.\"  The core\n> maintainer has decided on a hard fork change, he has decided not to do it.\n\nMaybe Bitcoin core devs have more influence, but still, they don't\nhave the power to decide for everyone else what the consensus rules\nare.\nYour analogy is ridiculous, it literally takes seconds to fork bitcoin\nand is as simple as clicking a button.\nWladimir has explained many times that he hasn't decided anything\nbecause he can't decide that.\nYou keep insisting that he has control over consensus rules. Are you\ndoing it because you want him to be threaten, tortured, kidnapped or\nkilled?\nIf you don't, please stop making false claims about powers he doesn't\nhave because some bad guy could believe you.\n\n> I am under the\n> impression that at least some of the developers (such as Garzik) don't\n> actually hold that many bitcoins and don't have a large stake in the system\n> yet they have significant control.\n\nFor the last time, they may have control over Bitcoin core (one\nimplementation of the Bitcoin protocol), not the consensus rules.\nWhy are anyone's bitcoin holdings relevant in any technical discussion?\nPlease, keep this kind of offtopic comments out.\n\n>  Anyone can attack the system by simply\n> hiring a couple core developers and creating the gridlock we see now.\n\nAs said several times, yes, it is hard to define \"uncontroversial\"\nwithout giving veto powers to any random guy on the internet.\nBut this is clearly not what is happening now. Most Bitcoin core devs\nare against the current proposals, that cannot be considered\nuncontroversial for any sane definition of it."
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-28T13:13:43",
                "message_text_only": "I never said something was approved by garzik added something after it \nwas opposed.  What I said was a proposal was made and 4 people commented \non the Github.  He then tweeted there was near universal approval before \nmost people even heard about the subject.  It was not controversial but \ni was pointing out the arrogance of some of the developers.  He \nconsiders the entire universe of Bitcoin stakeholders to be a very small \ngroup of insiders, not the entire universe of Bitcoin users.  Another \nthing I have seen on Github for bitcoin.org is how some the maintainers \nchange the rules on the fly.  Sometimes they say a proposal had no \nobjections so it is approved.  Other times they say a proposal has no \nsupport so it is rejected.\n\nYou are also trying to say that the core developers actually have little \ninfluence and are not \"deciders\" because anyone can fork the code.  That \nhas already been discussed at length and such an argument is faulty \nbecause there is a constraint that your software is incompatible with \neveryone else.  The issue is that there is no way right now to change \nthe consensus rules except to go through the core maintainer unless you \nget everybody on the network to switch to your fork.  People who keep \nrepeating that the software development is \"decentralized because you \nfork the code\" without explaining the constraints are just cultists.\n\nThe discussion has nothing to do with who has the position now and I \nnever said he has \"control over the consensus rules.\"  The maintainer \nhas a very large influence way beyond anyone else.  As for your claim \nthat I want someone hurt because I am explaining the process, that is \nridiculous.  If the Core maintainers did not have significant influence \nto change the consensus rules then everybody would not be spending all \nthis time lobbying them to have them changed.\n\nThe outside influences and stake of the developer is a relevant topic.  \nThe same types of things are discussed on this list all the time in the \ncontext of miners, users, merchants, and exchanges.  Again, the \ndevelopers try to place themselves on some kind of pedestal where they \nare the protectors and pure and everyone else (miners, users, merchants) \nare abusers, spammers, attackers, scammers, cheaters, etc.  It is Garzik \nwho voluntarily made an issue of how many bitcoins he holds and he made \nthat issue in the same place where he announces many of the technical \nissues.  It is very relevant that he has a minimal stake in Bitcoin \nholdings yet he goes around making major decisions about Bitcoin and \ntrying to dictate who is allowed to participate in discussions.  If a \ncore developer has minimal stake in Bitcoin yet has major veto power \nover code change that is a problem.\n\nYou are correct that you cannot give power to any person over the \nInternet which is why some kind of process needs to be developed that \ndoes not involve trying to convince one person to make the changes or a \nsystem that depends on unwritten, ever-changing rules maintained by a \nhandful of people.\n\nRuss\n\n\n\n\nOn 6/28/2015 8:30 AM, Jorge Tim\u00f3n wrote:\n> On Sat, Jun 27, 2015 at 2:50 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n>> On 6/27/2015 7:28 AM, Jorge Tim\u00f3n wrote:\n>> I have seen things like a Github discussion between 3 or 4 people\n>> and then Garzik send out a tweet that there is near universal approval for\n>> the proposed change as it nobody is allowed to question it.  After watching\n>> the github process for a couple years I simply don't trust it because the\n>> developers in charge have a dictatorial style and they shut out many\n>> stakeholders instead of soliciting their opinions.\n>> [...]\n>>\n>> I saw this problem first hand when Andreas Antonopolis got into a big\n>> dispute with some of the core developers over the press contacts.  The\n>> github made up their rules as they went along and simply ignored input from\n>> anyone outside their inner circle.  Since that time several people have told\n>> me they dropped out of participating in the github process.  The maintainers\n>> deleted some of my messages and I have been told I am banned form github.\n> I wasn't asking for an example of something that was rejected, there's\n> plenty of those.\n> You were saying people were opposing a change and jgarzik unilaterally added it.\n> When did that happen?\n>\n>> As for your proclamation at Bitcoin core != Bitcoin consensus rules, that is\n>> simply not true in practice.  There is one piece of software with one\n>> maintainer.  If you want it changed you have to convince that one person to\n>> approve the change.\n> There are many pieces of software and many maintainers, libbitcoin,\n> for example, is another full node implementation different from\n> Bitcoin core.\n> Also, to change Bitcoin core I don't need to convince anyone, I do it\n> all the time here https://github.com/jtimon/bitcoin\n>\n>> The core developers have the biggest influence by far to decide hard fork\n>> changes.  There is no other place to go.  While anyone can fork the code\n>> someone compare it to the river Thames.  if you don't like where the river\n>> runs you can dig a new one ... here is a spoon.  I can vote in elections but\n>> that does not mean the US government is \"decentralized.\"  The core\n>> maintainer has decided on a hard fork change, he has decided not to do it.\n> Maybe Bitcoin core devs have more influence, but still, they don't\n> have the power to decide for everyone else what the consensus rules\n> are.\n> Your analogy is ridiculous, it literally takes seconds to fork bitcoin\n> and is as simple as clicking a button.\n> Wladimir has explained many times that he hasn't decided anything\n> because he can't decide that.\n> You keep insisting that he has control over consensus rules. Are you\n> doing it because you want him to be threaten, tortured, kidnapped or\n> killed?\n> If you don't, please stop making false claims about powers he doesn't\n> have because some bad guy could believe you.\n>\n>> I am under the\n>> impression that at least some of the developers (such as Garzik) don't\n>> actually hold that many bitcoins and don't have a large stake in the system\n>> yet they have significant control.\n> For the last time, they may have control over Bitcoin core (one\n> implementation of the Bitcoin protocol), not the consensus rules.\n> Why are anyone's bitcoin holdings relevant in any technical discussion?\n> Please, keep this kind of offtopic comments out.\n>\n>>   Anyone can attack the system by simply\n>> hiring a couple core developers and creating the gridlock we see now.\n> As said several times, yes, it is hard to define \"uncontroversial\"\n> without giving veto powers to any random guy on the internet.\n> But this is clearly not what is happening now. Most Bitcoin core devs\n> are against the current proposals, that cannot be considered\n> uncontroversial for any sane definition of it.\n>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T15:35:17",
                "message_text_only": "On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n> I never said something was approved by garzik added something after it was\n> opposed.  What I said was a proposal was made and 4 people commented on the\n> Github.  He then tweeted there was near universal approval before most\n> people even heard about the subject.  It was not controversial but i was\n> pointing out the arrogance of some of the developers.  He considers the\n> entire universe of Bitcoin stakeholders to be a very small group of\n> insiders, not the entire universe of Bitcoin users.  Another thing I have\n> seen on Github for bitcoin.org is how some the maintainers change the rules\n> on the fly.  Sometimes they say a proposal had no objections so it is\n> approved.  Other times they say a proposal has no support so it is rejected.\n\nOk, I misunderstood.\nWell, the fact is that the number of capable reviewers is quite small.\nIf more companies hired and trained more developers to become bitcoin\ncore developers that situation could change, but that's where we are\nnow.\n\n> You are also trying to say that the core developers actually have little\n> influence and are not \"deciders\" because anyone can fork the code.  That has\n> already been discussed at length and such an argument is faulty because\n> there is a constraint that your software is incompatible with everyone else.\n\nOnly if you change the consensus rules (which are, in fact, a\nrelatively small part of the code).\nMike mantains Bitcoin XT and that's fine, Peter Todd maintains patches\nwith the replace by fee policy, libbitcoin also changes many\nnon-consensus things, there's code written in other languages...\nThere's multiple counter-examples to your claim of that argument being faulty.\nSeriously, forking the project is just one click. You should try it\nout like at least 9627 other people have done.\n>From there, you can pay your own developers (if you don't know how to\ncode yourself) and maybe they're also fine being insulted by you as\npart of the job.\nWhat you still can't do is unilaterally change the consensus rules of\na running p2p consensus system, because you cannot force the current\nusers to run any software they don't want to run.\n\n> The issue is that there is no way right now to change the consensus rules\n> except to go through the core maintainer unless you get everybody on the\n> network to switch to your fork.  People who keep repeating that the software\n> development is \"decentralized because you fork the code\" without explaining\n> the constraints are just cultists.\n\nPlease, stop the cultist crap. Maybe insulting people like that is how\nyou got people to call you a troll.\nBut, yes, you are right: there's no known mechanism for safely\ndeploying controversial changes to the consensus rules\n\n> The discussion has nothing to do with who has the position now and I never\n> said he has \"control over the consensus rules.\"  The maintainer has a very\n> large influence way beyond anyone else.  As for your claim that I want\n> someone hurt because I am explaining the process, that is ridiculous.  If\n> the Core maintainers did not have significant influence to change the\n> consensus rules then everybody would not be spending all this time lobbying\n> them to have them changed.\n\nWell, if you don't think he has control over the consensus rules we're\nadvancing.\nI think that was implied from some of your previous claims. He is no\n\"decider\" on consensus changes.\nInsisting on it can indeed get him hurt, so I'm happy that you're\ntaking that back (or clarifying that really wasn't your position).\nInfluence is very relative and not only core devs have \"influence\".\nMaybe Andreas Antonopolous has more \"influence\" than I have because he\nis a more public figure?\nWell, that's fine I think. I don't see the point in discussing who has\nhow much influence.\n\n> The outside influences and stake of the developer is a relevant topic.  The\n> same types of things are discussed on this list all the time in the context\n> of miners, users, merchants, and exchanges.  Again, the developers try to\n> place themselves on some kind of pedestal where they are the protectors and\n> pure and everyone else (miners, users, merchants) are abusers, spammers,\n> attackers, scammers, cheaters, etc.  It is Garzik who voluntarily made an\n> issue of how many bitcoins he holds and he made that issue in the same place\n> where he announces many of the technical issues.  It is very relevant that\n> he has a minimal stake in Bitcoin holdings yet he goes around making major\n> decisions about Bitcoin and trying to dictate who is allowed to participate\n> in discussions.  If a core developer has minimal stake in Bitcoin yet has\n> major veto power over code change that is a problem.\n\nPlease, don't generalize. I don't think I put myself in any kind of pedestal.\nThat is insulting to me and many others (you may not even know and\nyou're insulting them).\nAnd I think my Bitcoin holdings are completely irrelevant when judging\nmy contributions to the software: either they're good or not, and who\nI am or how many Bitcoins I have at any given time shouldn't matter.\nAgain, nobody forces you to use our software, as said there's\nalternatives (including forking the project right now).\n\n> You are correct that you cannot give power to any person over the Internet\n> which is why some kind of process needs to be developed that does not\n> involve trying to convince one person to make the changes or a system that\n> depends on unwritten, ever-changing rules maintained by a handful of people.\n\nWell, for now the process we have is seeking consensus, and although\nour definition of \"uncontroversial\" is very vague, I think it is quite\nobvious when a proposed change is not \"uncontroversial\" (like in the\nblock size debate).\nIt seems to me that any other \"formal process\" would imply\ncentralization in the decision making of the consensus rules (and from\nthere you only have to corrupt that centralized organization to\ndestroy Bitcoin)."
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-28T16:23:25",
                "message_text_only": "The core maintainer has always been in control of the consensus rules.  \nSatoshi came up with the rules and put them in there.  Since then any \nchanges to any part of the code go through the core maintainer.  It \nlooks to me as if people are saying it somehow changed along the way \nbecause they don't want to hurt people's feeling, upset up, get them to \nquit, etc. Sure there are checks and balances and people don't have to \nuse the main code base but if they change the consensus rules they are \nincompatible.\n\nThe notion that because people can download different rules and run them \nis interesting from a theoretical perspective but that is constrained by \nthe network effect.  I can say the US government is not the \"decider\" of \nlaws because I can vote them out, recall them, challenge things in \ncourt, or secede and start my own country.  You can also say the \njudge/jury in a criminal court case is not a \"decider\" because the \npresident can always issue a pardon.  But those points are generally not \nuseful in a practical sense.\n\nThe issue about the developers is the tremendous influence they have to \nveto any changes.  I don't have veto power yet I have more bitcoins than \ngarzik says he has.  The whole Bitcoin software development system is \nsubject to attack from just a couple of people who have this veto \npower.  With all the crying and moaning about centralization on this \nlist I would think that would be a concern.\n\nRuss\n\n\n\nOn 6/28/2015 11:35 AM, Jorge Tim\u00f3n wrote:\n> On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n>> I never said something was approved by garzik added something after it was\n>> opposed.  What I said was a proposal was made and 4 people commented on the\n>> Github.  He then tweeted there was near universal approval before most\n>> people even heard about the subject.  It was not controversial but i was\n>> pointing out the arrogance of some of the developers.  He considers the\n>> entire universe of Bitcoin stakeholders to be a very small group of\n>> insiders, not the entire universe of Bitcoin users.  Another thing I have\n>> seen on Github for bitcoin.org is how some the maintainers change the rules\n>> on the fly.  Sometimes they say a proposal had no objections so it is\n>> approved.  Other times they say a proposal has no support so it is rejected.\n> Ok, I misunderstood.\n> Well, the fact is that the number of capable reviewers is quite small.\n> If more companies hired and trained more developers to become bitcoin\n> core developers that situation could change, but that's where we are\n> now.\n>\n>> You are also trying to say that the core developers actually have little\n>> influence and are not \"deciders\" because anyone can fork the code.  That has\n>> already been discussed at length and such an argument is faulty because\n>> there is a constraint that your software is incompatible with everyone else.\n> Only if you change the consensus rules (which are, in fact, a\n> relatively small part of the code).\n> Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches\n> with the replace by fee policy, libbitcoin also changes many\n> non-consensus things, there's code written in other languages...\n> There's multiple counter-examples to your claim of that argument being faulty.\n> Seriously, forking the project is just one click. You should try it\n> out like at least 9627 other people have done.\n> >From there, you can pay your own developers (if you don't know how to\n> code yourself) and maybe they're also fine being insulted by you as\n> part of the job.\n> What you still can't do is unilaterally change the consensus rules of\n> a running p2p consensus system, because you cannot force the current\n> users to run any software they don't want to run.\n>\n>> The issue is that there is no way right now to change the consensus rules\n>> except to go through the core maintainer unless you get everybody on the\n>> network to switch to your fork.  People who keep repeating that the software\n>> development is \"decentralized because you fork the code\" without explaining\n>> the constraints are just cultists.\n> Please, stop the cultist crap. Maybe insulting people like that is how\n> you got people to call you a troll.\n> But, yes, you are right: there's no known mechanism for safely\n> deploying controversial changes to the consensus rules\n>\n>> The discussion has nothing to do with who has the position now and I never\n>> said he has \"control over the consensus rules.\"  The maintainer has a very\n>> large influence way beyond anyone else.  As for your claim that I want\n>> someone hurt because I am explaining the process, that is ridiculous.  If\n>> the Core maintainers did not have significant influence to change the\n>> consensus rules then everybody would not be spending all this time lobbying\n>> them to have them changed.\n> Well, if you don't think he has control over the consensus rules we're\n> advancing.\n> I think that was implied from some of your previous claims. He is no\n> \"decider\" on consensus changes.\n> Insisting on it can indeed get him hurt, so I'm happy that you're\n> taking that back (or clarifying that really wasn't your position).\n> Influence is very relative and not only core devs have \"influence\".\n> Maybe Andreas Antonopolous has more \"influence\" than I have because he\n> is a more public figure?\n> Well, that's fine I think. I don't see the point in discussing who has\n> how much influence.\n>\n>> The outside influences and stake of the developer is a relevant topic.  The\n>> same types of things are discussed on this list all the time in the context\n>> of miners, users, merchants, and exchanges.  Again, the developers try to\n>> place themselves on some kind of pedestal where they are the protectors and\n>> pure and everyone else (miners, users, merchants) are abusers, spammers,\n>> attackers, scammers, cheaters, etc.  It is Garzik who voluntarily made an\n>> issue of how many bitcoins he holds and he made that issue in the same place\n>> where he announces many of the technical issues.  It is very relevant that\n>> he has a minimal stake in Bitcoin holdings yet he goes around making major\n>> decisions about Bitcoin and trying to dictate who is allowed to participate\n>> in discussions.  If a core developer has minimal stake in Bitcoin yet has\n>> major veto power over code change that is a problem.\n> Please, don't generalize. I don't think I put myself in any kind of pedestal.\n> That is insulting to me and many others (you may not even know and\n> you're insulting them).\n> And I think my Bitcoin holdings are completely irrelevant when judging\n> my contributions to the software: either they're good or not, and who\n> I am or how many Bitcoins I have at any given time shouldn't matter.\n> Again, nobody forces you to use our software, as said there's\n> alternatives (including forking the project right now).\n>\n>> You are correct that you cannot give power to any person over the Internet\n>> which is why some kind of process needs to be developed that does not\n>> involve trying to convince one person to make the changes or a system that\n>> depends on unwritten, ever-changing rules maintained by a handful of people.\n> Well, for now the process we have is seeking consensus, and although\n> our definition of \"uncontroversial\" is very vague, I think it is quite\n> obvious when a proposed change is not \"uncontroversial\" (like in the\n> block size debate).\n> It seems to me that any other \"formal process\" would imply\n> centralization in the decision making of the consensus rules (and from\n> there you only have to corrupt that centralized organization to\n> destroy Bitcoin).\n>"
            },
            {
                "author": "Patrick Murck",
                "date": "2015-06-28T19:05:04",
                "message_text_only": "Wladimir has no more or less \u201cpower\u201d to push change to the Bitcoin Core codebase than any other person with commit privileges to the GitHub repo. If I\u2019m not mistaken there are 7 people with commit privileges and five of them are active. If Wladimir committed a change it could be reverted by any of the others. This is by design and ensures that changes will have reached some level of technical consensus before they are merged, among other things.\n\nFurthermore even assuming the Core Maintainer commits a change to Bitcoin Core (that isn\u2019t reverted and that gets packaged up into the next code release) that still doesn\u2019t push a change to the bitcoin network. There is no auto-update on Bitcoin Core so individuals and companies running Bitcoin Core software have to choose to upgrade. Further still, developers that maintain alternative implementations would have to decide to merge those changes to the codebase they are indepently maintaining (and their users would need to update, etc.).\n\nI understand why it might *seem* to be the case that the Core Maintainer is empowered to make changes to \"teh Bitcoin\" but the reality is that the Core Maintainer role is really about cat herding and project management of Bitcoin Core the open-source software project and not the bitcoin network. We\u2019re lucky Wladimir has agreed to take on so much of the scut work to keep the project moving forward.\n\nThe process might get ugly and inefficient but that\u2019s the cost of having no wizard behind the curtain.\n\n-pm\n\n--\u00a0\nPatrick Murck\n\nOn June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info) wrote:\n\nThe core maintainer has always been in control of the consensus rules.  \nSatoshi came up with the rules and put them in there. Since then any  \nchanges to any part of the code go through the core maintainer. It  \nlooks to me as if people are saying it somehow changed along the way  \nbecause they don't want to hurt people's feeling, upset up, get them to  \nquit, etc. Sure there are checks and balances and people don't have to  \nuse the main code base but if they change the consensus rules they are  \nincompatible.\n\nThe notion that because people can download different rules and run them  \nis interesting from a theoretical perspective but that is constrained by  \nthe network effect. I can say the US government is not the \"decider\" of  \nlaws because I can vote them out, recall them, challenge things in  \ncourt, or secede and start my own country. You can also say the  \njudge/jury in a criminal court case is not a \"decider\" because the  \npresident can always issue a pardon. But those points are generally not  \nuseful in a practical sense.\n\nThe issue about the developers is the tremendous influence they have to  \nveto any changes. I don't have veto power yet I have more bitcoins than  \ngarzik says he has. The whole Bitcoin software development system is  \nsubject to attack from just a couple of people who have this veto  \npower. With all the crying and moaning about centralization on this  \nlist I would think that would be a concern.\n\nRuss\n\n\n\nOn 6/28/2015 11:35 AM, Jorge Tim\u00f3n wrote:\n> On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n>> I never said something was approved by garzik added something after it was\n>> opposed. What I said was a proposal was made and 4 people commented on the\n>> Github. He then tweeted there was near universal approval before most\n>> people even heard about the subject. It was not controversial but i was\n>> pointing out the arrogance of some of the developers. He considers the\n>> entire universe of Bitcoin stakeholders to be a very small group of\n>> insiders, not the entire universe of Bitcoin users. Another thing I have\n>> seen on Github for bitcoin.org is how some the maintainers change the rules\n>> on the fly. Sometimes they say a proposal had no objections so it is\n>> approved. Other times they say a proposal has no support so it is rejected.\n> Ok, I misunderstood.\n> Well, the fact is that the number of capable reviewers is quite small.\n> If more companies hired and trained more developers to become bitcoin\n> core developers that situation could change, but that's where we are\n> now.\n>\n>> You are also trying to say that the core developers actually have little\n>> influence and are not \"deciders\" because anyone can fork the code. That has\n>> already been discussed at length and such an argument is faulty because\n>> there is a constraint that your software is incompatible with everyone else.\n> Only if you change the consensus rules (which are, in fact, a\n> relatively small part of the code).\n> Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches\n> with the replace by fee policy, libbitcoin also changes many\n> non-consensus things, there's code written in other languages...\n> There's multiple counter-examples to your claim of that argument being faulty.\n> Seriously, forking the project is just one click. You should try it\n> out like at least 9627 other people have done.\n> >From there, you can pay your own developers (if you don't know how to\n> code yourself) and maybe they're also fine being insulted by you as\n> part of the job.\n> What you still can't do is unilaterally change the consensus rules of\n> a running p2p consensus system, because you cannot force the current\n> users to run any software they don't want to run.\n>\n>> The issue is that there is no way right now to change the consensus rules\n>> except to go through the core maintainer unless you get everybody on the\n>> network to switch to your fork. People who keep repeating that the software\n>> development is \"decentralized because you fork the code\" without explaining\n>> the constraints are just cultists.\n> Please, stop the cultist crap. Maybe insulting people like that is how\n> you got people to call you a troll.\n> But, yes, you are right: there's no known mechanism for safely\n> deploying controversial changes to the consensus rules\n>\n>> The discussion has nothing to do with who has the position now and I never\n>> said he has \"control over the consensus rules.\" The maintainer has a very\n>> large influence way beyond anyone else. As for your claim that I want\n>> someone hurt because I am explaining the process, that is ridiculous. If\n>> the Core maintainers did not have significant influence to change the\n>> consensus rules then everybody would not be spending all this time lobbying\n>> them to have them changed.\n> Well, if you don't think he has control over the consensus rules we're\n> advancing.\n> I think that was implied from some of your previous claims. He is no\n> \"decider\" on consensus changes.\n> Insisting on it can indeed get him hurt, so I'm happy that you're\n> taking that back (or clarifying that really wasn't your position).\n> Influence is very relative and not only core devs have \"influence\".\n> Maybe Andreas Antonopolous has more \"influence\" than I have because he\n> is a more public figure?\n> Well, that's fine I think. I don't see the point in discussing who has\n> how much influence.\n>\n>> The outside influences and stake of the developer is a relevant topic. The\n>> same types of things are discussed on this list all the time in the context\n>> of miners, users, merchants, and exchanges. Again, the developers try to\n>> place themselves on some kind of pedestal where they are the protectors and\n>> pure and everyone else (miners, users, merchants) are abusers, spammers,\n>> attackers, scammers, cheaters, etc. It is Garzik who voluntarily made an\n>> issue of how many bitcoins he holds and he made that issue in the same place\n>> where he announces many of the technical issues. It is very relevant that\n>> he has a minimal stake in Bitcoin holdings yet he goes around making major\n>> decisions about Bitcoin and trying to dictate who is allowed to participate\n>> in discussions. If a core developer has minimal stake in Bitcoin yet has\n>> major veto power over code change that is a problem.\n> Please, don't generalize. I don't think I put myself in any kind of pedestal.\n> That is insulting to me and many others (you may not even know and\n> you're insulting them).\n> And I think my Bitcoin holdings are completely irrelevant when judging\n> my contributions to the software: either they're good or not, and who\n> I am or how many Bitcoins I have at any given time shouldn't matter.\n> Again, nobody forces you to use our software, as said there's\n> alternatives (including forking the project right now).\n>\n>> You are correct that you cannot give power to any person over the Internet\n>> which is why some kind of process needs to be developed that does not\n>> involve trying to convince one person to make the changes or a system that\n>> depends on unwritten, ever-changing rules maintained by a handful of people.\n> Well, for now the process we have is seeking consensus, and although\n> our definition of \"uncontroversial\" is very vague, I think it is quite\n> obvious when a proposed change is not \"uncontroversial\" (like in the\n> block size debate).\n> It seems to me that any other \"formal process\" would imply\n> centralization in the decision making of the consensus rules (and from\n> there you only have to corrupt that centralized organization to\n> destroy Bitcoin).\n>\n\n\n_______________________________________________\nbitcoin-dev mailing list\nbitcoin-dev at lists.linuxfoundation.org\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/38f1f487/attachment-0001.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-28T20:10:58",
                "message_text_only": "I really don't know who has power to do what behind the scenes.  From \nwhat i understand, if push comes to shove, it is under the ultimate \ncontrol of one person who can revoke commit privileges.  Maybe I am \nwrong about that but the point is most people don't know for sure.\n\nYou are correct about the people having the choice to download but the \ninfluence of the official release is way beyond the influence of any \nforked release.  What that means in the real world is an open question \nand would be different depending upon the specific circumstances and \ndifficult to predict.  It is significant power to have control over the \nofficial release at the present time.  If they did not have significant \npower people would not spend significant efforts lobbying them to make \nchanges.  Any new developers hired by companies will do so because they \ncan influence over the official release since that is the only incentive.\n\nIt seems to me that this block size fork is only the beginning of the \nissues that will arise over the coming years.  Whatever powers the core \nmaintainers have it is going to be exploited one way or another as time \ngoes on.  Maybe there are enough feedback mechanisms to protect against \nthat, I don't really know.\n\nRuss\n\n\n\n\n\nOn 6/28/2015 3:05 PM, Patrick Murck wrote:\n> Wladimir has no more or less \u201cpower\u201d to push change to the Bitcoin \n> Core codebase than any other person with commit privileges to the \n> GitHub repo. If I\u2019m not mistaken there are 7 people with commit \n> privileges and five of them are active. If Wladimir committed a change \n> it could be reverted by any of the others. This is by design and \n> ensures that changes will have reached some level of technical \n> consensus before they are merged, among other things.\n>\n> Furthermore even assuming the Core Maintainer commits a change to \n> Bitcoin Core (that isn\u2019t reverted and that gets packaged up into the \n> next code release) that still doesn\u2019t push a change to the bitcoin \n> network. There is no auto-update on Bitcoin Core so individuals and \n> companies running Bitcoin Core software have to choose to upgrade. \n> Further still, developers that maintain alternative implementations \n> would have to decide to merge those changes to the codebase they are \n> indepently maintaining (and their users would need to update, etc.).\n>\n> I understand why it might *seem* to be the case that the Core \n> Maintainer is empowered to make changes to \"teh Bitcoin\" but the \n> reality is that the Core Maintainer role is really about cat herding \n> and project management of Bitcoin Core the open-source software \n> project and not the bitcoin network. We\u2019re lucky Wladimir has agreed \n> to take on so much of the scut work to keep the project moving forward.\n>\n> The process might get ugly and inefficient but that\u2019s the cost of \n> having no wizard behind the curtain.\n>\n> -pm\n>\n> -- \n> Patrick Murck\n>\n> On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info \n> <mailto:milly at bitcoins.info>) wrote:\n>\n>> The core maintainer has always been in control of the consensus rules.\n>> Satoshi came up with the rules and put them in there. Since then any\n>> changes to any part of the code go through the core maintainer. It\n>> looks to me as if people are saying it somehow changed along the way\n>> because they don't want to hurt people's feeling, upset up, get them to\n>> quit, etc. Sure there are checks and balances and people don't have to\n>> use the main code base but if they change the consensus rules they are\n>> incompatible.\n>>\n>> The notion that because people can download different rules and run them\n>> is interesting from a theoretical perspective but that is constrained by\n>> the network effect. I can say the US government is not the \"decider\" of\n>> laws because I can vote them out, recall them, challenge things in\n>> court, or secede and start my own country. You can also say the\n>> judge/jury in a criminal court case is not a \"decider\" because the\n>> president can always issue a pardon. But those points are generally not\n>> useful in a practical sense.\n>>\n>> The issue about the developers is the tremendous influence they have to\n>> veto any changes. I don't have veto power yet I have more bitcoins than\n>> garzik says he has. The whole Bitcoin software development system is\n>> subject to attack from just a couple of people who have this veto\n>> power. With all the crying and moaning about centralization on this\n>> list I would think that would be a concern.\n>>\n>> Russ\n>>\n>>\n>>\n>> On 6/28/2015 11:35 AM, Jorge Tim\u00f3n wrote:\n>> > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin \n>> <milly at bitcoins.info> wrote:\n>> >> I never said something was approved by garzik added something \n>> after it was\n>> >> opposed. What I said was a proposal was made and 4 people \n>> commented on the\n>> >> Github. He then tweeted there was near universal approval before most\n>> >> people even heard about the subject. It was not controversial but \n>> i was\n>> >> pointing out the arrogance of some of the developers. He considers the\n>> >> entire universe of Bitcoin stakeholders to be a very small group of\n>> >> insiders, not the entire universe of Bitcoin users. Another thing \n>> I have\n>> >> seen on Github for bitcoin.org is how some the maintainers change \n>> the rules\n>> >> on the fly. Sometimes they say a proposal had no objections so it is\n>> >> approved. Other times they say a proposal has no support so it is \n>> rejected.\n>> > Ok, I misunderstood.\n>> > Well, the fact is that the number of capable reviewers is quite small.\n>> > If more companies hired and trained more developers to become bitcoin\n>> > core developers that situation could change, but that's where we are\n>> > now.\n>> >\n>> >> You are also trying to say that the core developers actually have \n>> little\n>> >> influence and are not \"deciders\" because anyone can fork the code. \n>> That has\n>> >> already been discussed at length and such an argument is faulty \n>> because\n>> >> there is a constraint that your software is incompatible with \n>> everyone else.\n>> > Only if you change the consensus rules (which are, in fact, a\n>> > relatively small part of the code).\n>> > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches\n>> > with the replace by fee policy, libbitcoin also changes many\n>> > non-consensus things, there's code written in other languages...\n>> > There's multiple counter-examples to your claim of that argument \n>> being faulty.\n>> > Seriously, forking the project is just one click. You should try it\n>> > out like at least 9627 other people have done.\n>> > >From there, you can pay your own developers (if you don't know how to\n>> > code yourself) and maybe they're also fine being insulted by you as\n>> > part of the job.\n>> > What you still can't do is unilaterally change the consensus rules of\n>> > a running p2p consensus system, because you cannot force the current\n>> > users to run any software they don't want to run.\n>> >\n>> >> The issue is that there is no way right now to change the \n>> consensus rules\n>> >> except to go through the core maintainer unless you get everybody \n>> on the\n>> >> network to switch to your fork. People who keep repeating that the \n>> software\n>> >> development is \"decentralized because you fork the code\" without \n>> explaining\n>> >> the constraints are just cultists.\n>> > Please, stop the cultist crap. Maybe insulting people like that is how\n>> > you got people to call you a troll.\n>> > But, yes, you are right: there's no known mechanism for safely\n>> > deploying controversial changes to the consensus rules\n>> >\n>> >> The discussion has nothing to do with who has the position now and \n>> I never\n>> >> said he has \"control over the consensus rules.\" The maintainer has \n>> a very\n>> >> large influence way beyond anyone else. As for your claim that I want\n>> >> someone hurt because I am explaining the process, that is \n>> ridiculous. If\n>> >> the Core maintainers did not have significant influence to change the\n>> >> consensus rules then everybody would not be spending all this time \n>> lobbying\n>> >> them to have them changed.\n>> > Well, if you don't think he has control over the consensus rules we're\n>> > advancing.\n>> > I think that was implied from some of your previous claims. He is no\n>> > \"decider\" on consensus changes.\n>> > Insisting on it can indeed get him hurt, so I'm happy that you're\n>> > taking that back (or clarifying that really wasn't your position).\n>> > Influence is very relative and not only core devs have \"influence\".\n>> > Maybe Andreas Antonopolous has more \"influence\" than I have because he\n>> > is a more public figure?\n>> > Well, that's fine I think. I don't see the point in discussing who has\n>> > how much influence.\n>> >\n>> >> The outside influences and stake of the developer is a relevant \n>> topic. The\n>> >> same types of things are discussed on this list all the time in \n>> the context\n>> >> of miners, users, merchants, and exchanges. Again, the developers \n>> try to\n>> >> place themselves on some kind of pedestal where they are the \n>> protectors and\n>> >> pure and everyone else (miners, users, merchants) are abusers, \n>> spammers,\n>> >> attackers, scammers, cheaters, etc. It is Garzik who voluntarily \n>> made an\n>> >> issue of how many bitcoins he holds and he made that issue in the \n>> same place\n>> >> where he announces many of the technical issues. It is very \n>> relevant that\n>> >> he has a minimal stake in Bitcoin holdings yet he goes around \n>> making major\n>> >> decisions about Bitcoin and trying to dictate who is allowed to \n>> participate\n>> >> in discussions. If a core developer has minimal stake in Bitcoin \n>> yet has\n>> >> major veto power over code change that is a problem.\n>> > Please, don't generalize. I don't think I put myself in any kind of \n>> pedestal.\n>> > That is insulting to me and many others (you may not even know and\n>> > you're insulting them).\n>> > And I think my Bitcoin holdings are completely irrelevant when judging\n>> > my contributions to the software: either they're good or not, and who\n>> > I am or how many Bitcoins I have at any given time shouldn't matter.\n>> > Again, nobody forces you to use our software, as said there's\n>> > alternatives (including forking the project right now).\n>> >\n>> >> You are correct that you cannot give power to any person over the \n>> Internet\n>> >> which is why some kind of process needs to be developed that does not\n>> >> involve trying to convince one person to make the changes or a \n>> system that\n>> >> depends on unwritten, ever-changing rules maintained by a handful \n>> of people.\n>> > Well, for now the process we have is seeking consensus, and although\n>> > our definition of \"uncontroversial\" is very vague, I think it is quite\n>> > obvious when a proposed change is not \"uncontroversial\" (like in the\n>> > block size debate).\n>> > It seems to me that any other \"formal process\" would imply\n>> > centralization in the decision making of the consensus rules (and from\n>> > there you only have to corrupt that centralized organization to\n>> > destroy Bitcoin).\n>> >\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a1d2d818/attachment-0001.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-28T20:16:18",
                "message_text_only": "Milly you are absolutely wrong as has been pointed out by numerous people\nnumerous times. Your idea of how bitcoin development decision making works\nis demonstrably false. Please stop filling our inboxes with trolling\naccusations, or else this will have to become a moderated list. And no one\nwants that.\nOn Jun 28, 2015 1:11 PM, \"Milly Bitcoin\" <milly at bitcoins.info> wrote:\n\n>  I really don't know who has power to do what behind the scenes.  From\n> what i understand, if push comes to shove, it is under the ultimate control\n> of one person who can revoke commit privileges.  Maybe I am wrong about\n> that but the point is most people don't know for sure.\n>\n> You are correct about the people having the choice to download but the\n> influence of the official release is way beyond the influence of any forked\n> release.  What that means in the real world is an open question and would\n> be different depending upon the specific circumstances and difficult to\n> predict.  It is significant power to have control over the official release\n> at the present time.  If they did not have significant power people would\n> not spend significant efforts lobbying them to make changes.  Any new\n> developers hired by companies will do so because they can influence over\n> the official release since that is the only incentive.\n>\n> It seems to me that this block size fork is only the beginning of the\n> issues that will arise over the coming years.  Whatever powers the core\n> maintainers have it is going to be exploited one way or another as time\n> goes on.  Maybe there are enough feedback mechanisms to protect against\n> that, I don't really know.\n>\n> Russ\n>\n>\n>\n>\n>\n> On 6/28/2015 3:05 PM, Patrick Murck wrote:\n>\n> Wladimir has no more or less \u201cpower\u201d to push change to the Bitcoin Core\n> codebase than any other person with commit privileges to the GitHub repo.\n> If I\u2019m not mistaken there are 7 people with commit privileges and five of\n> them are active. If Wladimir committed a change it could be reverted by any\n> of the others. This is by design and ensures that changes will have reached\n> some level of technical consensus before they are merged, among other\n> things.\n>\n>  Furthermore even assuming the Core Maintainer commits a change to\n> Bitcoin Core (that isn\u2019t reverted and that gets packaged up into the next\n> code release) that still doesn\u2019t push a change to the bitcoin network.\n> There is no auto-update on Bitcoin Core so individuals and companies\n> running Bitcoin Core software have to choose to upgrade. Further still,\n> developers that maintain alternative implementations would have to decide\n> to merge those changes to the codebase they are indepently maintaining (and\n> their users would need to update, etc.).\n>\n>  I understand why it might *seem* to be the case that the Core Maintainer\n> is empowered to make changes to \"teh Bitcoin\" but the reality is that the\n> Core Maintainer role is really about cat herding and project management of\n> Bitcoin Core the open-source software project and not the bitcoin network.\n> We\u2019re lucky Wladimir has agreed to take on so much of the scut work to keep\n> the project moving forward.\n>\n>  The process might get ugly and inefficient but that\u2019s the cost of having\n> no wizard behind the curtain.\n>\n>  -pm\n>\n> --\n> Patrick Murck\n>\n> On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info) wrote:\n>\n>  The core maintainer has always been in control of the consensus rules.\n> Satoshi came up with the rules and put them in there. Since then any\n> changes to any part of the code go through the core maintainer. It\n> looks to me as if people are saying it somehow changed along the way\n> because they don't want to hurt people's feeling, upset up, get them to\n> quit, etc. Sure there are checks and balances and people don't have to\n> use the main code base but if they change the consensus rules they are\n> incompatible.\n>\n> The notion that because people can download different rules and run them\n> is interesting from a theoretical perspective but that is constrained by\n> the network effect. I can say the US government is not the \"decider\" of\n> laws because I can vote them out, recall them, challenge things in\n> court, or secede and start my own country. You can also say the\n> judge/jury in a criminal court case is not a \"decider\" because the\n> president can always issue a pardon. But those points are generally not\n> useful in a practical sense.\n>\n> The issue about the developers is the tremendous influence they have to\n> veto any changes. I don't have veto power yet I have more bitcoins than\n> garzik says he has. The whole Bitcoin software development system is\n> subject to attack from just a couple of people who have this veto\n> power. With all the crying and moaning about centralization on this\n> list I would think that would be a concern.\n>\n> Russ\n>\n>\n>\n> On 6/28/2015 11:35 AM, Jorge Tim\u00f3n wrote:\n> > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info>\n> <milly at bitcoins.info> wrote:\n> >> I never said something was approved by garzik added something after it\n> was\n> >> opposed. What I said was a proposal was made and 4 people commented on\n> the\n> >> Github. He then tweeted there was near universal approval before most\n> >> people even heard about the subject. It was not controversial but i was\n> >> pointing out the arrogance of some of the developers. He considers the\n> >> entire universe of Bitcoin stakeholders to be a very small group of\n> >> insiders, not the entire universe of Bitcoin users. Another thing I have\n> >> seen on Github for bitcoin.org is how some the maintainers change the\n> rules\n> >> on the fly. Sometimes they say a proposal had no objections so it is\n> >> approved. Other times they say a proposal has no support so it is\n> rejected.\n> > Ok, I misunderstood.\n> > Well, the fact is that the number of capable reviewers is quite small.\n> > If more companies hired and trained more developers to become bitcoin\n> > core developers that situation could change, but that's where we are\n> > now.\n> >\n> >> You are also trying to say that the core developers actually have little\n> >> influence and are not \"deciders\" because anyone can fork the code. That\n> has\n> >> already been discussed at length and such an argument is faulty because\n> >> there is a constraint that your software is incompatible with everyone\n> else.\n> > Only if you change the consensus rules (which are, in fact, a\n> > relatively small part of the code).\n> > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches\n> > with the replace by fee policy, libbitcoin also changes many\n> > non-consensus things, there's code written in other languages...\n> > There's multiple counter-examples to your claim of that argument being\n> faulty.\n> > Seriously, forking the project is just one click. You should try it\n> > out like at least 9627 other people have done.\n> > >From there, you can pay your own developers (if you don't know how to\n> > code yourself) and maybe they're also fine being insulted by you as\n> > part of the job.\n> > What you still can't do is unilaterally change the consensus rules of\n> > a running p2p consensus system, because you cannot force the current\n> > users to run any software they don't want to run.\n> >\n> >> The issue is that there is no way right now to change the consensus\n> rules\n> >> except to go through the core maintainer unless you get everybody on the\n> >> network to switch to your fork. People who keep repeating that the\n> software\n> >> development is \"decentralized because you fork the code\" without\n> explaining\n> >> the constraints are just cultists.\n> > Please, stop the cultist crap. Maybe insulting people like that is how\n> > you got people to call you a troll.\n> > But, yes, you are right: there's no known mechanism for safely\n> > deploying controversial changes to the consensus rules\n> >\n> >> The discussion has nothing to do with who has the position now and I\n> never\n> >> said he has \"control over the consensus rules.\" The maintainer has a\n> very\n> >> large influence way beyond anyone else. As for your claim that I want\n> >> someone hurt because I am explaining the process, that is ridiculous. If\n> >> the Core maintainers did not have significant influence to change the\n> >> consensus rules then everybody would not be spending all this time\n> lobbying\n> >> them to have them changed.\n> > Well, if you don't think he has control over the consensus rules we're\n> > advancing.\n> > I think that was implied from some of your previous claims. He is no\n> > \"decider\" on consensus changes.\n> > Insisting on it can indeed get him hurt, so I'm happy that you're\n> > taking that back (or clarifying that really wasn't your position).\n> > Influence is very relative and not only core devs have \"influence\".\n> > Maybe Andreas Antonopolous has more \"influence\" than I have because he\n> > is a more public figure?\n> > Well, that's fine I think. I don't see the point in discussing who has\n> > how much influence.\n> >\n> >> The outside influences and stake of the developer is a relevant topic.\n> The\n> >> same types of things are discussed on this list all the time in the\n> context\n> >> of miners, users, merchants, and exchanges. Again, the developers try to\n> >> place themselves on some kind of pedestal where they are the protectors\n> and\n> >> pure and everyone else (miners, users, merchants) are abusers, spammers,\n> >> attackers, scammers, cheaters, etc. It is Garzik who voluntarily made an\n> >> issue of how many bitcoins he holds and he made that issue in the same\n> place\n> >> where he announces many of the technical issues. It is very relevant\n> that\n> >> he has a minimal stake in Bitcoin holdings yet he goes around making\n> major\n> >> decisions about Bitcoin and trying to dictate who is allowed to\n> participate\n> >> in discussions. If a core developer has minimal stake in Bitcoin yet has\n> >> major veto power over code change that is a problem.\n> > Please, don't generalize. I don't think I put myself in any kind of\n> pedestal.\n> > That is insulting to me and many others (you may not even know and\n> > you're insulting them).\n> > And I think my Bitcoin holdings are completely irrelevant when judging\n> > my contributions to the software: either they're good or not, and who\n> > I am or how many Bitcoins I have at any given time shouldn't matter.\n> > Again, nobody forces you to use our software, as said there's\n> > alternatives (including forking the project right now).\n> >\n> >> You are correct that you cannot give power to any person over the\n> Internet\n> >> which is why some kind of process needs to be developed that does not\n> >> involve trying to convince one person to make the changes or a system\n> that\n> >> depends on unwritten, ever-changing rules maintained by a handful of\n> people.\n> > Well, for now the process we have is seeking consensus, and although\n> > our definition of \"uncontroversial\" is very vague, I think it is quite\n> > obvious when a proposed change is not \"uncontroversial\" (like in the\n> > block size debate).\n> > It seems to me that any other \"formal process\" would imply\n> > centralization in the decision making of the consensus rules (and from\n> > there you only have to corrupt that centralized organization to\n> > destroy Bitcoin).\n> >\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/2b0a55ee/attachment-0001.html>"
            },
            {
                "author": "Ricardo Filipe",
                "date": "2015-06-28T20:26:55",
                "message_text_only": "Then demonstrate it. He has been raising quite valid points over the\nmaintenance of bitcoin core.\n\nThis is the same problem as the changes to consensus rules in bitcoin\ncore: they aren't explicitly defined for the external audience. Thus\nforcing people to lobby for hard forks.\n\n2015-06-28 21:16 GMT+01:00 Mark Friedenbach <mark at friedenbach.org>:\n> Milly you are absolutely wrong as has been pointed out by numerous people\n> numerous times. Your idea of how bitcoin development decision making works\n> is demonstrably false. Please stop filling our inboxes with trolling\n> accusations, or else this will have to become a moderated list. And no one\n> wants that.\n>\n> On Jun 28, 2015 1:11 PM, \"Milly Bitcoin\" <milly at bitcoins.info> wrote:\n>>\n>> I really don't know who has power to do what behind the scenes.  From what\n>> i understand, if push comes to shove, it is under the ultimate control of\n>> one person who can revoke commit privileges.  Maybe I am wrong about that\n>> but the point is most people don't know for sure.\n>>\n>> You are correct about the people having the choice to download but the\n>> influence of the official release is way beyond the influence of any forked\n>> release.  What that means in the real world is an open question and would be\n>> different depending upon the specific circumstances and difficult to\n>> predict.  It is significant power to have control over the official release\n>> at the present time.  If they did not have significant power people would\n>> not spend significant efforts lobbying them to make changes.  Any new\n>> developers hired by companies will do so because they can influence over the\n>> official release since that is the only incentive.\n>>\n>> It seems to me that this block size fork is only the beginning of the\n>> issues that will arise over the coming years.  Whatever powers the core\n>> maintainers have it is going to be exploited one way or another as time goes\n>> on.  Maybe there are enough feedback mechanisms to protect against that, I\n>> don't really know.\n>>\n>> Russ\n>>\n>>\n>>\n>>\n>>\n>> On 6/28/2015 3:05 PM, Patrick Murck wrote:\n>>\n>> Wladimir has no more or less \u201cpower\u201d to push change to the Bitcoin Core\n>> codebase than any other person with commit privileges to the GitHub repo. If\n>> I\u2019m not mistaken there are 7 people with commit privileges and five of them\n>> are active. If Wladimir committed a change it could be reverted by any of\n>> the others. This is by design and ensures that changes will have reached\n>> some level of technical consensus before they are merged, among other\n>> things.\n>>\n>> Furthermore even assuming the Core Maintainer commits a change to Bitcoin\n>> Core (that isn\u2019t reverted and that gets packaged up into the next code\n>> release) that still doesn\u2019t push a change to the bitcoin network. There is\n>> no auto-update on Bitcoin Core so individuals and companies running Bitcoin\n>> Core software have to choose to upgrade. Further still, developers that\n>> maintain alternative implementations would have to decide to merge those\n>> changes to the codebase they are indepently maintaining (and their users\n>> would need to update, etc.).\n>>\n>> I understand why it might *seem* to be the case that the Core Maintainer\n>> is empowered to make changes to \"teh Bitcoin\" but the reality is that the\n>> Core Maintainer role is really about cat herding and project management of\n>> Bitcoin Core the open-source software project and not the bitcoin network.\n>> We\u2019re lucky Wladimir has agreed to take on so much of the scut work to keep\n>> the project moving forward.\n>>\n>> The process might get ugly and inefficient but that\u2019s the cost of having\n>> no wizard behind the curtain.\n>>\n>> -pm\n>>\n>> --\n>> Patrick Murck\n>>\n>> On June 28, 2015 at 9:23:47 AM, Milly Bitcoin (milly at bitcoins.info) wrote:\n>>\n>> The core maintainer has always been in control of the consensus rules.\n>> Satoshi came up with the rules and put them in there. Since then any\n>> changes to any part of the code go through the core maintainer. It\n>> looks to me as if people are saying it somehow changed along the way\n>> because they don't want to hurt people's feeling, upset up, get them to\n>> quit, etc. Sure there are checks and balances and people don't have to\n>> use the main code base but if they change the consensus rules they are\n>> incompatible.\n>>\n>> The notion that because people can download different rules and run them\n>> is interesting from a theoretical perspective but that is constrained by\n>> the network effect. I can say the US government is not the \"decider\" of\n>> laws because I can vote them out, recall them, challenge things in\n>> court, or secede and start my own country. You can also say the\n>> judge/jury in a criminal court case is not a \"decider\" because the\n>> president can always issue a pardon. But those points are generally not\n>> useful in a practical sense.\n>>\n>> The issue about the developers is the tremendous influence they have to\n>> veto any changes. I don't have veto power yet I have more bitcoins than\n>> garzik says he has. The whole Bitcoin software development system is\n>> subject to attack from just a couple of people who have this veto\n>> power. With all the crying and moaning about centralization on this\n>> list I would think that would be a concern.\n>>\n>> Russ\n>>\n>>\n>>\n>> On 6/28/2015 11:35 AM, Jorge Tim\u00f3n wrote:\n>> > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin <milly at bitcoins.info>\n>> > wrote:\n>> >> I never said something was approved by garzik added something after it\n>> >> was\n>> >> opposed. What I said was a proposal was made and 4 people commented on\n>> >> the\n>> >> Github. He then tweeted there was near universal approval before most\n>> >> people even heard about the subject. It was not controversial but i was\n>> >> pointing out the arrogance of some of the developers. He considers the\n>> >> entire universe of Bitcoin stakeholders to be a very small group of\n>> >> insiders, not the entire universe of Bitcoin users. Another thing I\n>> >> have\n>> >> seen on Github for bitcoin.org is how some the maintainers change the\n>> >> rules\n>> >> on the fly. Sometimes they say a proposal had no objections so it is\n>> >> approved. Other times they say a proposal has no support so it is\n>> >> rejected.\n>> > Ok, I misunderstood.\n>> > Well, the fact is that the number of capable reviewers is quite small.\n>> > If more companies hired and trained more developers to become bitcoin\n>> > core developers that situation could change, but that's where we are\n>> > now.\n>> >\n>> >> You are also trying to say that the core developers actually have\n>> >> little\n>> >> influence and are not \"deciders\" because anyone can fork the code. That\n>> >> has\n>> >> already been discussed at length and such an argument is faulty because\n>> >> there is a constraint that your software is incompatible with everyone\n>> >> else.\n>> > Only if you change the consensus rules (which are, in fact, a\n>> > relatively small part of the code).\n>> > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains patches\n>> > with the replace by fee policy, libbitcoin also changes many\n>> > non-consensus things, there's code written in other languages...\n>> > There's multiple counter-examples to your claim of that argument being\n>> > faulty.\n>> > Seriously, forking the project is just one click. You should try it\n>> > out like at least 9627 other people have done.\n>> > >From there, you can pay your own developers (if you don't know how to\n>> > code yourself) and maybe they're also fine being insulted by you as\n>> > part of the job.\n>> > What you still can't do is unilaterally change the consensus rules of\n>> > a running p2p consensus system, because you cannot force the current\n>> > users to run any software they don't want to run.\n>> >\n>> >> The issue is that there is no way right now to change the consensus\n>> >> rules\n>> >> except to go through the core maintainer unless you get everybody on\n>> >> the\n>> >> network to switch to your fork. People who keep repeating that the\n>> >> software\n>> >> development is \"decentralized because you fork the code\" without\n>> >> explaining\n>> >> the constraints are just cultists.\n>> > Please, stop the cultist crap. Maybe insulting people like that is how\n>> > you got people to call you a troll.\n>> > But, yes, you are right: there's no known mechanism for safely\n>> > deploying controversial changes to the consensus rules\n>> >\n>> >> The discussion has nothing to do with who has the position now and I\n>> >> never\n>> >> said he has \"control over the consensus rules.\" The maintainer has a\n>> >> very\n>> >> large influence way beyond anyone else. As for your claim that I want\n>> >> someone hurt because I am explaining the process, that is ridiculous.\n>> >> If\n>> >> the Core maintainers did not have significant influence to change the\n>> >> consensus rules then everybody would not be spending all this time\n>> >> lobbying\n>> >> them to have them changed.\n>> > Well, if you don't think he has control over the consensus rules we're\n>> > advancing.\n>> > I think that was implied from some of your previous claims. He is no\n>> > \"decider\" on consensus changes.\n>> > Insisting on it can indeed get him hurt, so I'm happy that you're\n>> > taking that back (or clarifying that really wasn't your position).\n>> > Influence is very relative and not only core devs have \"influence\".\n>> > Maybe Andreas Antonopolous has more \"influence\" than I have because he\n>> > is a more public figure?\n>> > Well, that's fine I think. I don't see the point in discussing who has\n>> > how much influence.\n>> >\n>> >> The outside influences and stake of the developer is a relevant topic.\n>> >> The\n>> >> same types of things are discussed on this list all the time in the\n>> >> context\n>> >> of miners, users, merchants, and exchanges. Again, the developers try\n>> >> to\n>> >> place themselves on some kind of pedestal where they are the protectors\n>> >> and\n>> >> pure and everyone else (miners, users, merchants) are abusers,\n>> >> spammers,\n>> >> attackers, scammers, cheaters, etc. It is Garzik who voluntarily made\n>> >> an\n>> >> issue of how many bitcoins he holds and he made that issue in the same\n>> >> place\n>> >> where he announces many of the technical issues. It is very relevant\n>> >> that\n>> >> he has a minimal stake in Bitcoin holdings yet he goes around making\n>> >> major\n>> >> decisions about Bitcoin and trying to dictate who is allowed to\n>> >> participate\n>> >> in discussions. If a core developer has minimal stake in Bitcoin yet\n>> >> has\n>> >> major veto power over code change that is a problem.\n>> > Please, don't generalize. I don't think I put myself in any kind of\n>> > pedestal.\n>> > That is insulting to me and many others (you may not even know and\n>> > you're insulting them).\n>> > And I think my Bitcoin holdings are completely irrelevant when judging\n>> > my contributions to the software: either they're good or not, and who\n>> > I am or how many Bitcoins I have at any given time shouldn't matter.\n>> > Again, nobody forces you to use our software, as said there's\n>> > alternatives (including forking the project right now).\n>> >\n>> >> You are correct that you cannot give power to any person over the\n>> >> Internet\n>> >> which is why some kind of process needs to be developed that does not\n>> >> involve trying to convince one person to make the changes or a system\n>> >> that\n>> >> depends on unwritten, ever-changing rules maintained by a handful of\n>> >> people.\n>> > Well, for now the process we have is seeking consensus, and although\n>> > our definition of \"uncontroversial\" is very vague, I think it is quite\n>> > obvious when a proposed change is not \"uncontroversial\" (like in the\n>> > block size debate).\n>> > It seems to me that any other \"formal process\" would imply\n>> > centralization in the decision making of the consensus rules (and from\n>> > there you only have to corrupt that centralized organization to\n>> > destroy Bitcoin).\n>> >\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-28T21:00:28",
                "message_text_only": "I think we need a second mailing list: bitcoin-process for people to\nlearn about bitcoin process.\n\nAnd someone to write a FAQ on it's sign up page so people interested\ncould at least discuss from a starting point of understanding how and\nwhy it works the way it does!\n\nAdam"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-29T00:13:20",
                "message_text_only": "The concern with that is that any FAQ will be developed by the same \nsmall group that controls the github now so they will spin it in an \nunrealistic way.  You see the problem now with the Bitcoin wiki.  While \nthe wiki has some valuable information, it also has a number of \nincorrect and cult-like claims about how Bitcoin works.  Tim Swanson has \nmade some good videos that describe some of the misinformation that \noften gets repeated on the Wiki and other places.\n\nI had suggested the info on the Wiki be reevaluated piece-by-piece and \nmoved to Bitcoin.org but the developers didn't like that. Attempts to \nedit the Wiki often leads to the articles being defaced by the \nmaintainers so that is a waste of time.\n\nRuss\n\n\n\nOn 6/28/2015 5:00 PM, Adam Back wrote:\n> I think we need a second mailing list: bitcoin-process for people to\n> learn about bitcoin process.\n>\n> And someone to write a FAQ on it's sign up page so people interested\n> could at least discuss from a starting point of understanding how and\n> why it works the way it does!\n>\n> Adam\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Andrew Lapp",
                "date": "2015-06-29T00:23:38",
                "message_text_only": "Your discussion is taking up a lot of room in my inbox and it doesn't \nseem like either side is getting through to the other. Perhaps you could \ncreate a document outlining all the failure modes possible due to the \ncurrent system, the current systems security assumptions and possible \nsolutions. Now it seems this is just a semantic debate and would \nprobably be better solved with you writing a BIP and having that \nreviewed and critiqued.\n\n-Andrew Lapp\n\nOn 06/28/2015 08:13 PM, Milly Bitcoin wrote:\n> The concern with that is that any FAQ will be developed by the same \n> small group that controls the github now so they will spin it in an \n> unrealistic way.  You see the problem now with the Bitcoin wiki.  \n> While the wiki has some valuable information, it also has a number of \n> incorrect and cult-like claims about how Bitcoin works. Tim Swanson \n> has made some good videos that describe some of the misinformation \n> that often gets repeated on the Wiki and other places.\n>\n> I had suggested the info on the Wiki be reevaluated piece-by-piece and \n> moved to Bitcoin.org but the developers didn't like that. Attempts to \n> edit the Wiki often leads to the articles being defaced by the \n> maintainers so that is a waste of time.\n>\n> Russ\n>\n>\n>\n> On 6/28/2015 5:00 PM, Adam Back wrote:\n>> I think we need a second mailing list: bitcoin-process for people to\n>> learn about bitcoin process.\n>>\n>> And someone to write a FAQ on it's sign up page so people interested\n>> could at least discuss from a starting point of understanding how and\n>> why it works the way it does!\n>>\n>> Adam\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-29T01:11:13",
                "message_text_only": "That sounds like a good idea except I have been told by the powers that \nbe that I am not allowed to post to Github.  Any Bip proposal is \nsupposed to be vetted on the mailing list first.\n\nMy suggestion has been to continue development of the risk analysis \nstarted by the Bitcoin Foundation found at \nhttps://bitcoinfoundation.org/wp-content/uploads/2014/04/Bitcoin-Risk-Management-Study-Spring-2014.pdf. \nThe idea is to create a living document of risks and mitigations as well \nas a decentralization metric.  When a change is proposed it is measured \nagainst these risks and metrics in a somewhat standard fashion.\n\nIf someone wants to post something like that to Github I can work on \nit.  I am familiar with the process as I worked on something similar for \nmany years for the US FAA.  I worked in information security for large \naviation systems in the R&D stage applying the NIST 800-series documents \nto the process (http://csrc.nist.gov/publications/PubsSPs.html).\n\nRuss\n\n\n\nOn 6/28/2015 8:23 PM, Andrew Lapp wrote:\n> Your discussion is taking up a lot of room in my inbox and it doesn't \n> seem like either side is getting through to the other. Perhaps you \n> could create a document outlining all the failure modes possible due \n> to the current system, the current systems security assumptions and \n> possible solutions. Now it seems this is just a semantic debate and \n> would probably be better solved with you writing a BIP and having that \n> reviewed and critiqued.\n>\n> -Andrew Lapp\n>\n> On 06/28/2015 08:13 PM, Milly Bitcoin wrote:\n>> The concern with that is that any FAQ will be developed by the same \n>> small group that controls the github now so they will spin it in an \n>> unrealistic way.  You see the problem now with the Bitcoin wiki.  \n>> While the wiki has some valuable information, it also has a number of \n>> incorrect and cult-like claims about how Bitcoin works. Tim Swanson \n>> has made some good videos that describe some of the misinformation \n>> that often gets repeated on the Wiki and other places.\n>>\n>> I had suggested the info on the Wiki be reevaluated piece-by-piece \n>> and moved to Bitcoin.org but the developers didn't like that. \n>> Attempts to edit the Wiki often leads to the articles being defaced \n>> by the maintainers so that is a waste of time.\n>>\n>> Russ\n>>\n>>\n>>\n>> On 6/28/2015 5:00 PM, Adam Back wrote:\n>>> I think we need a second mailing list: bitcoin-process for people to\n>>> learn about bitcoin process.\n>>>\n>>> And someone to write a FAQ on it's sign up page so people interested\n>>> could at least discuss from a starting point of understanding how and\n>>> why it works the way it does!\n>>>\n>>> Adam\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-28T23:52:04",
                "message_text_only": "Nobody has pointed out I am \"wrong,\" it is just semantics about the term \n\"decider\" and I am just essentially repeating things said by others.    \nAs for the term \"troll,\" that is used primarily used by teenagers to \ndeal with people they don't agree with.  Unfortunately the developers \nare often 20-something kids like yourself who have never dealt with a \nlarge system of diverse stakeholders or anything outside of their \nspecific technical areas.\n\nAs for your claim that I accused someone of something, I don't know what \nyou are talking about.  If you don't like my messages then don't read \nthem.  It looks to me like you don't like the idea of the developers \nbeing questioned about their authority which is understandable as one of \nthe people involved in Blocksteam because you want the system to stay \nthe way it is.\n\nIf you want to moderate the list the go ahead, I can't stop you but I am \nnot going to listen to anyone who uses the term \"troll.\"\n\nRuss\n\n\n\nOn 6/28/2015 4:16 PM, Mark Friedenbach wrote:\n>\n> Milly you are absolutely wrong as has been pointed out by numerous \n> people numerous times. Your idea of how bitcoin development decision \n> making works is demonstrably false. Please stop filling our inboxes \n> with trolling accusations, or else this will have to become a \n> moderated list. And no one wants that.\n>\n> On Jun 28, 2015 1:11 PM, \"Milly Bitcoin\" <milly at bitcoins.info \n> <mailto:milly at bitcoins.info>> wrote:\n>\n>     I really don't know who has power to do what behind the scenes. \n>     From what i understand, if push comes to shove, it is under the\n>     ultimate control of one person who can revoke commit privileges. \n>     Maybe I am wrong about that but the point is most people don't\n>     know for sure.\n>\n>     You are correct about the people having the choice to download but\n>     the influence of the official release is way beyond the influence\n>     of any forked release.  What that means in the real world is an\n>     open question and would be different depending upon the specific\n>     circumstances and difficult to predict.  It is significant power\n>     to have control over the official release at the present time.  If\n>     they did not have significant power people would not spend\n>     significant efforts lobbying them to make changes.  Any new\n>     developers hired by companies will do so because they can\n>     influence over the official release since that is the only incentive.\n>\n>     It seems to me that this block size fork is only the beginning of\n>     the issues that will arise over the coming years.  Whatever powers\n>     the core maintainers have it is going to be exploited one way or\n>     another as time goes on. Maybe there are enough feedback\n>     mechanisms to protect against that, I don't really know.\n>\n>     Russ\n>\n>\n>\n>\n>\n>     On 6/28/2015 3:05 PM, Patrick Murck wrote:\n>>     Wladimir has no more or less \u201cpower\u201d to push change to the\n>>     Bitcoin Core codebase than any other person with commit\n>>     privileges to the GitHub repo. If I\u2019m not mistaken there are 7\n>>     people with commit privileges and five of them are active. If\n>>     Wladimir committed a change it could be reverted by any of the\n>>     others. This is by design and ensures that changes will have\n>>     reached some level of technical consensus before they are merged,\n>>     among other things.\n>>\n>>     Furthermore even assuming the Core Maintainer commits a change to\n>>     Bitcoin Core (that isn\u2019t reverted and that gets packaged up into\n>>     the next code release) that still doesn\u2019t push a change to the\n>>     bitcoin network. There is no auto-update on Bitcoin Core so\n>>     individuals and companies running Bitcoin Core software have to\n>>     choose to upgrade. Further still, developers that maintain\n>>     alternative implementations would have to decide to merge those\n>>     changes to the codebase they are indepently maintaining (and\n>>     their users would need to update, etc.).\n>>\n>>     I understand why it might *seem* to be the case that the Core\n>>     Maintainer is empowered to make changes to \"teh Bitcoin\" but the\n>>     reality is that the Core Maintainer role is really about cat\n>>     herding and project management of Bitcoin Core the open-source\n>>     software project and not the bitcoin network. We\u2019re lucky\n>>     Wladimir has agreed to take on so much of the scut work to keep\n>>     the project moving forward.\n>>\n>>     The process might get ugly and inefficient but that\u2019s the cost of\n>>     having no wizard behind the curtain.\n>>\n>>     -pm\n>>\n>>     -- \n>>     Patrick Murck\n>>\n>>     On June 28, 2015 at 9:23:47 AM, Milly Bitcoin\n>>     (milly at bitcoins.info <mailto:milly at bitcoins.info>) wrote:\n>>\n>>>     The core maintainer has always been in control of the consensus\n>>>     rules.\n>>>     Satoshi came up with the rules and put them in there. Since then\n>>>     any\n>>>     changes to any part of the code go through the core maintainer. It\n>>>     looks to me as if people are saying it somehow changed along the\n>>>     way\n>>>     because they don't want to hurt people's feeling, upset up, get\n>>>     them to\n>>>     quit, etc. Sure there are checks and balances and people don't\n>>>     have to\n>>>     use the main code base but if they change the consensus rules\n>>>     they are\n>>>     incompatible.\n>>>\n>>>     The notion that because people can download different rules and\n>>>     run them\n>>>     is interesting from a theoretical perspective but that is\n>>>     constrained by\n>>>     the network effect. I can say the US government is not the\n>>>     \"decider\" of\n>>>     laws because I can vote them out, recall them, challenge things in\n>>>     court, or secede and start my own country. You can also say the\n>>>     judge/jury in a criminal court case is not a \"decider\" because the\n>>>     president can always issue a pardon. But those points are\n>>>     generally not\n>>>     useful in a practical sense.\n>>>\n>>>     The issue about the developers is the tremendous influence they\n>>>     have to\n>>>     veto any changes. I don't have veto power yet I have more\n>>>     bitcoins than\n>>>     garzik says he has. The whole Bitcoin software development\n>>>     system is\n>>>     subject to attack from just a couple of people who have this veto\n>>>     power. With all the crying and moaning about centralization on this\n>>>     list I would think that would be a concern.\n>>>\n>>>     Russ\n>>>\n>>>\n>>>\n>>>     On 6/28/2015 11:35 AM, Jorge Tim\u00f3n wrote:\n>>>     > On Sun, Jun 28, 2015 at 3:13 PM, Milly Bitcoin\n>>>     <milly at bitcoins.info> <mailto:milly at bitcoins.info> wrote:\n>>>     >> I never said something was approved by garzik added something\n>>>     after it was\n>>>     >> opposed. What I said was a proposal was made and 4 people\n>>>     commented on the\n>>>     >> Github. He then tweeted there was near universal approval\n>>>     before most\n>>>     >> people even heard about the subject. It was not controversial\n>>>     but i was\n>>>     >> pointing out the arrogance of some of the developers. He\n>>>     considers the\n>>>     >> entire universe of Bitcoin stakeholders to be a very small\n>>>     group of\n>>>     >> insiders, not the entire universe of Bitcoin users. Another\n>>>     thing I have\n>>>     >> seen on Github for bitcoin.org <http://bitcoin.org> is how\n>>>     some the maintainers change the rules\n>>>     >> on the fly. Sometimes they say a proposal had no objections\n>>>     so it is\n>>>     >> approved. Other times they say a proposal has no support so\n>>>     it is rejected.\n>>>     > Ok, I misunderstood.\n>>>     > Well, the fact is that the number of capable reviewers is\n>>>     quite small.\n>>>     > If more companies hired and trained more developers to become\n>>>     bitcoin\n>>>     > core developers that situation could change, but that's where\n>>>     we are\n>>>     > now.\n>>>     >\n>>>     >> You are also trying to say that the core developers actually\n>>>     have little\n>>>     >> influence and are not \"deciders\" because anyone can fork the\n>>>     code. That has\n>>>     >> already been discussed at length and such an argument is\n>>>     faulty because\n>>>     >> there is a constraint that your software is incompatible with\n>>>     everyone else.\n>>>     > Only if you change the consensus rules (which are, in fact, a\n>>>     > relatively small part of the code).\n>>>     > Mike mantains Bitcoin XT and that's fine, Peter Todd maintains\n>>>     patches\n>>>     > with the replace by fee policy, libbitcoin also changes many\n>>>     > non-consensus things, there's code written in other languages...\n>>>     > There's multiple counter-examples to your claim of that\n>>>     argument being faulty.\n>>>     > Seriously, forking the project is just one click. You should\n>>>     try it\n>>>     > out like at least 9627 other people have done.\n>>>     > >From there, you can pay your own developers (if you don't\n>>>     know how to\n>>>     > code yourself) and maybe they're also fine being insulted by\n>>>     you as\n>>>     > part of the job.\n>>>     > What you still can't do is unilaterally change the consensus\n>>>     rules of\n>>>     > a running p2p consensus system, because you cannot force the\n>>>     current\n>>>     > users to run any software they don't want to run.\n>>>     >\n>>>     >> The issue is that there is no way right now to change the\n>>>     consensus rules\n>>>     >> except to go through the core maintainer unless you get\n>>>     everybody on the\n>>>     >> network to switch to your fork. People who keep repeating\n>>>     that the software\n>>>     >> development is \"decentralized because you fork the code\"\n>>>     without explaining\n>>>     >> the constraints are just cultists.\n>>>     > Please, stop the cultist crap. Maybe insulting people like\n>>>     that is how\n>>>     > you got people to call you a troll.\n>>>     > But, yes, you are right: there's no known mechanism for safely\n>>>     > deploying controversial changes to the consensus rules\n>>>     >\n>>>     >> The discussion has nothing to do with who has the position\n>>>     now and I never\n>>>     >> said he has \"control over the consensus rules.\" The\n>>>     maintainer has a very\n>>>     >> large influence way beyond anyone else. As for your claim\n>>>     that I want\n>>>     >> someone hurt because I am explaining the process, that is\n>>>     ridiculous. If\n>>>     >> the Core maintainers did not have significant influence to\n>>>     change the\n>>>     >> consensus rules then everybody would not be spending all this\n>>>     time lobbying\n>>>     >> them to have them changed.\n>>>     > Well, if you don't think he has control over the consensus\n>>>     rules we're\n>>>     > advancing.\n>>>     > I think that was implied from some of your previous claims. He\n>>>     is no\n>>>     > \"decider\" on consensus changes.\n>>>     > Insisting on it can indeed get him hurt, so I'm happy that you're\n>>>     > taking that back (or clarifying that really wasn't your position).\n>>>     > Influence is very relative and not only core devs have\n>>>     \"influence\".\n>>>     > Maybe Andreas Antonopolous has more \"influence\" than I have\n>>>     because he\n>>>     > is a more public figure?\n>>>     > Well, that's fine I think. I don't see the point in discussing\n>>>     who has\n>>>     > how much influence.\n>>>     >\n>>>     >> The outside influences and stake of the developer is a\n>>>     relevant topic. The\n>>>     >> same types of things are discussed on this list all the time\n>>>     in the context\n>>>     >> of miners, users, merchants, and exchanges. Again, the\n>>>     developers try to\n>>>     >> place themselves on some kind of pedestal where they are the\n>>>     protectors and\n>>>     >> pure and everyone else (miners, users, merchants) are\n>>>     abusers, spammers,\n>>>     >> attackers, scammers, cheaters, etc. It is Garzik who\n>>>     voluntarily made an\n>>>     >> issue of how many bitcoins he holds and he made that issue in\n>>>     the same place\n>>>     >> where he announces many of the technical issues. It is very\n>>>     relevant that\n>>>     >> he has a minimal stake in Bitcoin holdings yet he goes around\n>>>     making major\n>>>     >> decisions about Bitcoin and trying to dictate who is allowed\n>>>     to participate\n>>>     >> in discussions. If a core developer has minimal stake in\n>>>     Bitcoin yet has\n>>>     >> major veto power over code change that is a problem.\n>>>     > Please, don't generalize. I don't think I put myself in any\n>>>     kind of pedestal.\n>>>     > That is insulting to me and many others (you may not even know and\n>>>     > you're insulting them).\n>>>     > And I think my Bitcoin holdings are completely irrelevant when\n>>>     judging\n>>>     > my contributions to the software: either they're good or not,\n>>>     and who\n>>>     > I am or how many Bitcoins I have at any given time shouldn't\n>>>     matter.\n>>>     > Again, nobody forces you to use our software, as said there's\n>>>     > alternatives (including forking the project right now).\n>>>     >\n>>>     >> You are correct that you cannot give power to any person over\n>>>     the Internet\n>>>     >> which is why some kind of process needs to be developed that\n>>>     does not\n>>>     >> involve trying to convince one person to make the changes or\n>>>     a system that\n>>>     >> depends on unwritten, ever-changing rules maintained by a\n>>>     handful of people.\n>>>     > Well, for now the process we have is seeking consensus, and\n>>>     although\n>>>     > our definition of \"uncontroversial\" is very vague, I think it\n>>>     is quite\n>>>     > obvious when a proposed change is not \"uncontroversial\" (like\n>>>     in the\n>>>     > block size debate).\n>>>     > It seems to me that any other \"formal process\" would imply\n>>>     > centralization in the decision making of the consensus rules\n>>>     (and from\n>>>     > there you only have to corrupt that centralized organization to\n>>>     > destroy Bitcoin).\n>>>     >\n>>>\n>>>\n>>>     _______________________________________________\n>>>     bitcoin-dev mailing list\n>>>     bitcoin-dev at lists.linuxfoundation.org\n>>>     <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>>>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>     _______________________________________________\n>     bitcoin-dev mailing list\n>     bitcoin-dev at lists.linuxfoundation.org\n>     <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>     https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a359d593/attachment-0001.html>"
            },
            {
                "author": "NxtChg",
                "date": "2015-06-28T20:21:26",
                "message_text_only": "On 6/28/2015 at 10:05 PM, \"Patrick Murck\" <patrick.murck at gmail.com> wrote:\n\n>Maintainer is empowered to make changes to \"teh Bitcoin\" but the reality is that the Core Maintainer role is really about cat\n>herding and project management of Bitcoin Core the open-source software project and not the bitcoin network.\n\nIt's not about pushing a change, it's about refusing a change on the grounds of controversy.\n\nThis is _not_ an attack on Wladimir. His position in view of circumstances is perfectly reasonable: to take the safest option.\n\nEven at the risk of stagnation, as he pointed out, at least your funds won't be expropriated. It's a noble position to defend the minority.\n\nUnfortunately (or fortunately), the majority of power usually gets what it wants. Of course, \"they will have it their way anyway\" is not an appropriate reason to flip-flop on an ethical position, so nobody expects Wladimir to change his mind.\n\nThus, we are playing a variation of prisoner's dilemma here: the best solution would be an agreement on both sides, if only they could agree.\n\nIn reality, there's a good chance that Gavin's fork will win, creating precisely the problems and risks, which Wladimir tries to avoid, only more. And we will end up with lose-lose situation.\n\nBut we lack any other mechanism for a scenario where interests of some of those 7 committers become misaligned with interests of the majority (which seems to be the case).\n\nAnd every time Bitcoin will face similar disagreement in the future we will go through it again..."
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-25T19:03:57",
                "message_text_only": "On 6/24/2015 8:00 PM, Raystonn wrote:\n>\n> > Consensus-code changes are unanimous. They must be.\n>\n> Excellent. Now we are getting to some actual written rules. How about \n> updating the BIP process documentation with this? Everyone should be \n> able to read the rules of the coin they are buying.\n>\n> One moment though. Can you tell me how this particular rule came to \n> be? The creator of Bitcoin violated this rule many times. So it must \n> have been adopted after his departure. What process was followed to \n> adopt this new rule? Was there consensus for it at the time? A huge \n> portion of the user community is under the impression that Satoshi's \n> written plans, some of which violate this new rule, will be \n> implemented. So there certainly would not be consensus for this rule \n> today.\n>\n\nGreat question; very fair.  I, for one, eagerly await Mark's answer.\n\nI hope nobody forgot to tell adversaries totally outside the open source \necosystem what the rules for hard forking changes are.\n\nThe Chinese miners have it right - we have to work together.  If you \nwant to see who's trying, look at who has written a concrete BIP/code \nvs. who hasn't; who has made changes in response to feedback, and who \nhasn't."
            },
            {
                "author": "Raystonn",
                "date": "2015-06-25T03:53:53",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150624/66e3d82c/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP Process and Votes",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Warren Togami Jr.",
                "Milly Bitcoin",
                "cipher anthem",
                "Tier Nolan",
                "Tom Harding",
                "Raystonn",
                "Adam Back",
                "Jorge Tim\u00f3n",
                "Ricardo Filipe",
                "Mark Friedenbach",
                "Jeff Garzik",
                "Bryan Bishop",
                "Patrick Murck",
                "s7r",
                "Gareth Williams",
                "NxtChg",
                "Andrew Lapp",
                "Eric Lombrozo",
                "nxtchg at hush.com",
                "Alex Morcos",
                "Pindar Wong"
            ],
            "messages_count": 49,
            "total_messages_chars_count": 231225
        }
    },
    {
        "title": "[bitcoin-dev] BIP65 / CHECKLOCKTIMEVERIFY deployment",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2015-06-25T22:33:44",
                "message_text_only": "BIP66 adoption is quite close to 95% and will likely be enforced for all\nblocks in a few more days; now is time to think about how CLTV will be\ndeployed, particularly given its benefits to much-needed scalability\nsolutions such as payment channels.\n\nWhile I'm both a fan and co-author of the Version bits BIP(1) proposal,\nit hasn't been implemented yet, and the implementation will be\nrelatively complex compared to the previous soft-fork mechanism. I think\nthere is good reason to get CLTV deployed sooner, and I don't think we\nhave any lack of consensus on it. The CLTV code itself has been\nextensively reviewed in the form of the \"mempool-only\" pull-req, has\nbeen included in the Elements sidechain prototype by Mark Friedenbach,\nhas been running in production on Viacoin for six months, and has a few\nworking demos of its functionality implemented. It's also been famously\ndescribed as \"What you thought nLockTime did until you actually tried to\nuse it.\"\n\nTo that end I'm proposing that we simply use the existing median block\nversion mechanism previously used for the nVersion=2 and nVersion=3\nsoft-forks for CLTV. This mechanism is well-tested and understood, and\nwould allow CLTV to be easily backported to v0.10.x (even 0.9.x) with\nlittle risk for rapid deployment. In the event that another soft-fork is\nproposed prior to BIP65, nVersion=4, enforcement, we do have the option\nof setting in motion yet another soft-fork as the median mechanism only\nrequires forks to be serialized in sequence - it does not prevent\nmultiple soft-forks from being \"in-flight\" at the same time.\n\nThoughts? If there are no objections I'll go ahead and write that code,\nusing the same thresholds as BIP66.\n\n1) https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07863.html\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/a25c31da/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-25T23:52:12",
                "message_text_only": "Please do it.\nOn Jun 25, 2015 3:33 PM, \"Peter Todd\" <pete at petertodd.org> wrote:\n\n> BIP66 adoption is quite close to 95% and will likely be enforced for all\n> blocks in a few more days; now is time to think about how CLTV will be\n> deployed, particularly given its benefits to much-needed scalability\n> solutions such as payment channels.\n>\n> While I'm both a fan and co-author of the Version bits BIP(1) proposal,\n> it hasn't been implemented yet, and the implementation will be\n> relatively complex compared to the previous soft-fork mechanism. I think\n> there is good reason to get CLTV deployed sooner, and I don't think we\n> have any lack of consensus on it. The CLTV code itself has been\n> extensively reviewed in the form of the \"mempool-only\" pull-req, has\n> been included in the Elements sidechain prototype by Mark Friedenbach,\n> has been running in production on Viacoin for six months, and has a few\n> working demos of its functionality implemented. It's also been famously\n> described as \"What you thought nLockTime did until you actually tried to\n> use it.\"\n>\n> To that end I'm proposing that we simply use the existing median block\n> version mechanism previously used for the nVersion=2 and nVersion=3\n> soft-forks for CLTV. This mechanism is well-tested and understood, and\n> would allow CLTV to be easily backported to v0.10.x (even 0.9.x) with\n> little risk for rapid deployment. In the event that another soft-fork is\n> proposed prior to BIP65, nVersion=4, enforcement, we do have the option\n> of setting in motion yet another soft-fork as the median mechanism only\n> requires forks to be serialized in sequence - it does not prevent\n> multiple soft-forks from being \"in-flight\" at the same time.\n>\n> Thoughts? If there are no objections I'll go ahead and write that code,\n> using the same thresholds as BIP66.\n>\n> 1)\n> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07863.html\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150625/99d7fb36/attachment.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-26T00:07:48",
                "message_text_only": "It would be possible to run a simplified version of the bits proposal,\nuntil BIP 66 locks.\n\nIt's obviously not worth it at this point though, though it could be 1-2\nweeks more.\n\nVersion 2 means neither option\nVersion 3 means BIP 66 only\nVersion 4 means CLTV only\nVersion 5 means both\n\nIf (Version 3 + version 5) > 95%, reject 2 & 4\nIf (Version 4 + version 5) > 95%, reject 2 & 3\n\nFor 2 options at the same time, this isn't much extra overhead.\n\n\nOn Fri, Jun 26, 2015 at 12:52 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Please do it.\n> On Jun 25, 2015 3:33 PM, \"Peter Todd\" <pete at petertodd.org> wrote:\n>\n>> BIP66 adoption is quite close to 95% and will likely be enforced for all\n>> blocks in a few more days; now is time to think about how CLTV will be\n>> deployed, particularly given its benefits to much-needed scalability\n>> solutions such as payment channels.\n>>\n>> While I'm both a fan and co-author of the Version bits BIP(1) proposal,\n>> it hasn't been implemented yet, and the implementation will be\n>> relatively complex compared to the previous soft-fork mechanism. I think\n>> there is good reason to get CLTV deployed sooner, and I don't think we\n>> have any lack of consensus on it. The CLTV code itself has been\n>> extensively reviewed in the form of the \"mempool-only\" pull-req, has\n>> been included in the Elements sidechain prototype by Mark Friedenbach,\n>> has been running in production on Viacoin for six months, and has a few\n>> working demos of its functionality implemented. It's also been famously\n>> described as \"What you thought nLockTime did until you actually tried to\n>> use it.\"\n>>\n>> To that end I'm proposing that we simply use the existing median block\n>> version mechanism previously used for the nVersion=2 and nVersion=3\n>> soft-forks for CLTV. This mechanism is well-tested and understood, and\n>> would allow CLTV to be easily backported to v0.10.x (even 0.9.x) with\n>> little risk for rapid deployment. In the event that another soft-fork is\n>> proposed prior to BIP65, nVersion=4, enforcement, we do have the option\n>> of setting in motion yet another soft-fork as the median mechanism only\n>> requires forks to be serialized in sequence - it does not prevent\n>> multiple soft-forks from being \"in-flight\" at the same time.\n>>\n>> Thoughts? If there are no objections I'll go ahead and write that code,\n>> using the same thresholds as BIP66.\n>>\n>> 1)\n>> https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg07863.html\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/c1658179/attachment-0001.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-28T19:50:54",
                "message_text_only": "On Thu, Jun 25, 2015 at 06:33:44PM -0400, Peter Todd wrote:\n> Thoughts? If there are no objections I'll go ahead and write that code,\n> using the same thresholds as BIP66.\n\nI've opened a pull-req to deploy CHECKLOCKTIMEVERIFY via the\nIsSuperMajority() mechanism:\n\n    https://github.com/bitcoin/bitcoin/pull/6351\n\n    Final step towards CLTV deployment on mainnet.\n\n    I've copied the logic and tests from the previous BIP66 (DERSIG)\n    soft-fork line-by-line for ease of review; any code review applicable to\n    BIP66 should be applicable to BIP65.\n\n    Once merged I'll prepare a backport of the soft-fork logic for the\n    v0.10.x branch as well.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000dbc12bdcb4d0a340272edd649d24849f86a20d075f0dba1\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/de3ca0ec/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "BIP65 / CHECKLOCKTIMEVERIFY deployment",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Eric Lombrozo",
                "Tier Nolan",
                "Peter Todd"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 8754
        }
    },
    {
        "title": "[bitcoin-dev] The need for larger blocks",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2015-06-26T14:09:18",
                "message_text_only": "Hello all,\n\nhere I'm going to try to address a part of the block size debate which has\nbeen troubling me since the beginning: the reason why people seem to want\nit.\n\nPeople say that larger blocks are necessary. In the long term, I agree - in\nthe sense that systems that do not evolve tend to be replaced by other\nsystems. This evolution can come in terms of layers on top of Bitcoin's\nblockchain, in terms of the technology underlying various aspects of the\nblockchain itself, and also in the scale that this technology supports.\n\nI do, however, fundamentally disagree that a fear for a change in economics\nshould be considered to necessitate larger blocks. If it is, and there is\nconsensus that we should adapt to it, then there is effectively no limit\ngoing forward. This is similar to how Congress voting to increase the\ncopyright term retroactively from time to time is really no different from\nhaving an infinite copyright term in the first place. This scares me.\n\nHere is how Gavin summarizes the future without increasing block sizes in\nPR 6341:\n\n> 1. Transaction confirmation times for transactions with a given fee will\nrise; very-low-fee transactions will fail to get confirmed at all.\n> 2. Average transaction fee paid will rise\n> 3. People or applications unwilling or unable to pay the rising fees will\nstop submitting transactions\n> 4. People and businesses will shelve plans to use Bitcoin, stunting\ngrowth and adoption\n\nIs it fair to summarize this as \"Some use cases won't fit any more, people\nwill decide to no longer use the blockchain for these purposes, and the\nfees will adapt.\"?\n\nI think that is already happening, and will happen at any scale. I believe\ndemand for payments in general is nearly infinite, and only a small portion\nof it will eventually fit on a block chain (independent of whether its size\nis limited by consensus rules or economic or technological means).\nFurthermore, systems that compete with Bitcoin in this space already offer\norders of magnitude more capacity than we can reasonably achieve with any\nblockchain technology at this point.\n\nI don't know what subset of use cases Bitcoin will cater to in the long\nterm. They have already changed - you see way less betting transactions\nthese days than a few years ago for example - and they will keep changing,\nindependent of what effective block sizes we end up with. I don't think we\nshould be afraid of this change or try to stop it.\n\nIf you look at graphs of block sizes over time (for example,\nhttp://rusty.ozlabs.org/?p=498), it seems to me that there is very little\n\"organic\" growth, and a lot of sudden changes (which could correspond to\nchanging defaults in miner software, introduction of popular\nsites/services, changes in the economy). I think these can be seen as the\neconomy changing to full up the available space, and I believe these will\nkeep happening at any size effectively available.\n\nNone of this is a reason why the size can't increase. However, in my\nopinion, we should do it because we believe it increases utility and\nunderstand the risks; not because we're afraid of what might happen if we\ndon't hurry up. And from that point of view, it seems silly to make a huge\nincrease at once...\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/69d0ee83/attachment.html>"
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-26T14:38:58",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nPieter,\n\nSure. Your thinking is sound. I take things beyond where you have in\nyour post, so I neither imply that this is your position or that this\nis the progression of your stated point.\n\nIn one sense, one has to ask the question: is there a reasonable case\nfor making Bitcoin super-capacitated so it can compete with Visa and\njust be the fastest-ever payment network with everyone jizzing in\ntheir pants over its speed and capacity and availability and dividends.\n\nBy virtue of the core requirement of decentralization, for Bitcoin to\nremain meaningful, it will never compete with Visa or the Fed's new\nblockchain-based payment system. So, why attempt the impossible and\nexpend energy on the futile?\n\nBitcoin's protocol and payment network has features and benefits that\nVisa et all cannot have, so I refute the notion, sometimes expressed\nhere, that 7tps is a major cap on growth and adoption.\n\nSuch thinking takes as its axiom the idea that increased adoption\ncorrelates to increased value. Not true. Look at the price chart for\nproof: More businesses accept and more people are using and\ntransacting via Bitcoin now than ever before and yet the price chart\npoints *down*, not up.\n\nWhy should any explicitly centralized exchange and business venture\nhave their use of the protocol facilitated? Was the protocol designed\nto conform to financial capital demands or was it designed to\nfundamentally change the way ordinary users interact with markets?\n\nIf those present here, do not realize that the blockchain is a means\nof escaping (and destroying through its use and promotion)\ncentralization, then they have shells over their eyes. Bitcoin is not\nmeant to fit into the system, it will evolve the system, by the system\ncoming to it.\n\nDoes that mean we shouldn't raise the blocksize? Maybe. But 8GB with\nBIP100's protections seems a reasonable change given the sudden\nincrease in network usage that a global liquidity crisis will impose.\n\nMany scenarios are possible, but there is no onus on developers or on\nBitcoin to \"keep up\". Like it or not, the global economy will\ninevitably be forced to Slow Down as a result of the same thinking\nthat upholds constant growth without sympathetic contraction.\n\nVenzen Khaosan\n\n\nOn 06/26/2015 09:09 PM, Pieter Wuille wrote:\n> Hello all,\n> \n> here I'm going to try to address a part of the block size debate\n> which has been troubling me since the beginning: the reason why\n> people seem to want it.\n> \n> People say that larger blocks are necessary. In the long term, I\n> agree - in the sense that systems that do not evolve tend to be\n> replaced by other systems. This evolution can come in terms of\n> layers on top of Bitcoin's blockchain, in terms of the technology\n> underlying various aspects of the blockchain itself, and also in\n> the scale that this technology supports.\n> \n> I do, however, fundamentally disagree that a fear for a change in \n> economics should be considered to necessitate larger blocks. If it\n> is, and there is consensus that we should adapt to it, then there\n> is effectively no limit going forward. This is similar to how\n> Congress voting to increase the copyright term retroactively from\n> time to time is really no different from having an infinite\n> copyright term in the first place. This scares me.\n> \n> Here is how Gavin summarizes the future without increasing block\n> sizes in PR 6341:\n> \n>> 1. Transaction confirmation times for transactions with a given\n>> fee\n> will rise; very-low-fee transactions will fail to get confirmed at\n> all.\n>> 2. Average transaction fee paid will rise 3. People or\n>> applications unwilling or unable to pay the rising fees\n> will stop submitting transactions\n>> 4. People and businesses will shelve plans to use Bitcoin,\n>> stunting\n> growth and adoption\n> \n> Is it fair to summarize this as \"Some use cases won't fit any\n> more, people will decide to no longer use the blockchain for these\n> purposes, and the fees will adapt.\"?\n> \n> I think that is already happening, and will happen at any scale. I \n> believe demand for payments in general is nearly infinite, and only\n> a small portion of it will eventually fit on a block chain\n> (independent of whether its size is limited by consensus rules or\n> economic or technological means). Furthermore, systems that compete\n> with Bitcoin in this space already offer orders of magnitude more\n> capacity than we can reasonably achieve with any blockchain\n> technology at this point.\n> \n> I don't know what subset of use cases Bitcoin will cater to in the\n> long term. They have already changed - you see way less betting\n> transactions these days than a few years ago for example - and they\n> will keep changing, independent of what effective block sizes we\n> end up with. I don't think we should be afraid of this change or\n> try to stop it.\n> \n> If you look at graphs of block sizes over time (for example, \n> http://rusty.ozlabs.org/?p=498), it seems to me that there is very \n> little \"organic\" growth, and a lot of sudden changes (which could \n> correspond to changing defaults in miner software, introduction of \n> popular sites/services, changes in the economy). I think these can\n> be seen as the economy changing to full up the available space, and\n> I believe these will keep happening at any size effectively\n> available.\n> \n> None of this is a reason why the size can't increase. However, in\n> my opinion, we should do it because we believe it increases utility\n> and understand the risks; not because we're afraid of what might\n> happen if we don't hurry up. And from that point of view, it seems\n> silly to make a huge increase at once...\n> \n> -- Pieter\n> \n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVjWQAAAoJEGwAhlQc8H1mIRMH/Rr8v+N3XdAL/EeEXuniT+Iu\n/TrtieLJKrhmMPkyIX/jAWc4ggUirzWuTMIQZ7qPwOkVrbcWPcKKHOBKTmmUaCc5\nGdnA8wiiC6D6ZMamO1NKtkU2QW7Kzuna/Y4EeqBZWsKWPrMvu1vkirDYH8XRvdiC\nbMksVCzoRFm7QnTMYfimrSYNxNPdwQZxCfhtJDSBnJs2Mi0J68Xpw5riVbx6S0mD\nTOcNlKWosQJEub11TWeh+wD3i901t5GfxFqBNU5XGN85JRn+vAIrrm2io0bbfbIZ\ny58XdqcYcWrx8MQNUdHpQT1EK5+4DAkhxrouW60sjk8jfWHGIVIgfYweDQawbOg=\n=f9Fg\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-26T15:22:14",
                "message_text_only": ">None of this is a reason why the size can't increase. However, in my \nopinion, we should do it because we believe it increases utility and \nunderstand the risks; not because we're afraid of what might happen if \nwe don't hurry up. And from that point of view, it seems silly to make a \nhuge increase at once...\n\nYes.  I think people/businesses want some kind of assurance that there \nis a path to get things done when needed rather than immediate changes.  \nSince there is currently no clear path/schedule to get any changes \naccomplished they gets anxious.\n\nRuss"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-26T15:24:21",
                "message_text_only": "On Fri, Jun 26, 2015 at 5:22 PM, Milly Bitcoin <milly at bitcoins.info> wrote:\n\n> >None of this is a reason why the size can't increase. However, in my\n> opinion, we should do it because we believe it increases utility and\n> understand the risks; not because we're afraid of what might happen if we\n> don't hurry up. And from that point of view, it seems silly to make a huge\n> increase at once...\n>\n> Yes.  I think people/businesses want some kind of assurance that there is\n> a path to get things done when needed rather than immediate changes.  Since\n> there is currently no clear path/schedule to get any changes accomplished\n> they gets anxious.\n>\n\nI think you just proved my point by saying \"when needed\".\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/cc04ed8a/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-26T18:05:30",
                "message_text_only": "On Fri, Jun 26, 2015 at 8:24 AM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> On Fri, Jun 26, 2015 at 5:22 PM, Milly Bitcoin <milly at bitcoins.info>\n> wrote:\n>\n>> >None of this is a reason why the size can't increase. However, in my\n>> opinion, we should do it because we believe it increases utility and\n>> understand the risks; not because we're afraid of what might happen if we\n>> don't hurry up. And from that point of view, it seems silly to make a huge\n>> increase at once...\n>>\n>> Yes.  I think people/businesses want some kind of assurance that there is\n>> a path to get things done when needed rather than immediate changes.  Since\n>> there is currently no clear path/schedule to get any changes accomplished\n>> they gets anxious.\n>>\n>\n> I think you just proved my point by saying \"when needed\".\n>\n\nProposing inaction is not the way you convince people that bitcoin can\nscale.\n\nPeople and businesses cannot perform any capacity planning and future\nprojections under the proposal of \"economic change through inaction.\"\n\nThere will be no growth, by your argument, until there is fee pressure.\nAnd what happens then?\n\na) Block size limit increases, disrupting and rebooting the fee market.\n      or\nb) You argue that fees have taken care of the capacity.\n\nWaiting until blocks are full before taking action produces even more\ndisruption and market-unpredictable behavior than today.\n\nI understand you want a fee market to develop, and increasing the block\nsize limit retards/prevents that.  The fact remains that that is a _major_\nchange to economic policy that creates a _more_ unpredictable system.\n\nWho knows when Pieter will agree that a fee market is healthy?  And at that\ntime, once blocks are full, changing the block size limit then will produce\neven more disruption, going from\n\n            little pressure -> lots of pressure -> little pressure\n\nInaction produces fee pressure produces volatility.  And makes it more\ndifficult for system users to perform capacity planning.\n\nI see a lot of microscopic fee analysis - economically insignificant for at\nleast 12 months to come - and very little holistic analysis from people\narguing that inaction is the best course.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/469d8757/attachment-0001.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-26T18:32:40",
                "message_text_only": "> Proposing inaction is not the way you convince people that bitcoin can \n> scale.\n>\n> People and businesses cannot perform any capacity planning and future \n> projections under the proposal of \"economic change through inaction.\"\n>\n> There will be no growth, by your argument, until there is fee \n> pressure.  And what happens then?\n\nIt is not clear he is proposing \"inaction.\"  I am not sure what he is \nproposing other than being against knee-jerk reactions.  He has also \nsaid he doesn't want to take on the responsibility of deciding on \nwhether to approve hard fork changes which is understandable considering \nall the other things he is doing.  Such a responsibility is probably too \nmuch of a burden to put on any one individual no matter who it is.  The \nnext step is to come up with a process to handle proposed hard-fork \nchanges other than just to ask the Core maintainer to do it.\n\nRuss"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-26T15:38:23",
                "message_text_only": "On 6/26/2015 7:09 AM, Pieter Wuille wrote:\n> Furthermore, systems that compete with Bitcoin in this space already\n> offer orders of magnitude more capacity than we can reasonably achieve\n> with any blockchain technology at this point.\n\n\"Reasonably achievable\" is a guideline that would keep bitcoin out of\ntrouble caused by either too little, or too much, declared capacity. \nThis matches Gavin's thinking, though you may differ on the numbers.\n\n\n>  it seems silly to make a huge increase at once...\n\nUnless it is reasonably achievable.  Leave the rest to the free market."
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-26T16:22:17",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nApologies in advance for pulling you up on your statement, Tom, I've\nnoticed you're a regular and well respected poster in this list:\n\n\"free market\" who?\n\nAre you aware that the Bitcoin rally of 2013 was a result of\nspeculation by elements in Citi Bank, JPMorgan, and by many other Wall\nStreet trading desk managers who saw the opportunity of a\nfree-floating, unregulated commodity?\n\nIf the intention is to leave Bitcoin to the \"free market\" it already\nis, and has been there for some time.\n\nAs for miners, those are finance capitalist interest too - if not\ncurrently, in their majority, then eventually in China and the rest of\nthe world, so what does the term \"free market\" really mean? It must be\ndefined, because you are speaking to developers here, not visionary\neconomists or politicized brains, necessarily.\n\nWe cannot speak about \"the market\" without referencing concerns about\ncentralization, because any centralized business that plays the game\nright seeks, by the rules, to corner the market. If they cannot do it\nalone, they will seek allies.\n\n\"Free market\" means as much under capitalism as \"open democracy\" under\nStalinism. Do you see my point? \"Free Market\" is a multivariate term\nand Bitcoin does not (and should not have to) cater to all its\ndemands. That's like applying Microsoft standards to FOSS efforts -\nbecuase that's the \"business use-case\".\n\nBitcoin developers have to think about economy in an informed manner\nand make provision with protection, else one can just make like Mike\nHearn and jump up and down shouting \"faster-faster more-more\".\nEconomics, markets and speculation is more complicated than that.\n\nVenzen\n\n\nOn 06/26/2015 10:38 PM, Tom Harding wrote:\n> On 6/26/2015 7:09 AM, Pieter Wuille wrote:\n>> Furthermore, systems that compete with Bitcoin in this space\n>> already offer orders of magnitude more capacity than we can\n>> reasonably achieve with any blockchain technology at this point.\n> \n> \"Reasonably achievable\" is a guideline that would keep bitcoin out\n> of trouble caused by either too little, or too much, declared\n> capacity. This matches Gavin's thinking, though you may differ on\n> the numbers.\n> \n> \n>> it seems silly to make a huge increase at once...\n> \n> Unless it is reasonably achievable.  Leave the rest to the free\n> market.\n> \n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVjXw4AAoJEGwAhlQc8H1mX2kIAJCLodhsEhkzxkzZl1hUITkZ\nfFZWuiKomsHTHU+6cCr0snt0VDI7+mP8SgyawWrwXNKdGKqpiUAX+B454I9POYBQ\npf/CUq/sWMFN/WRO1EYpVBz3zH/mDgMUZeLvnGYti05+3YzxJxBsy2cmkX5HCfUL\noUErqWEo+OjeQNT+ZgFSbYYLSBLO2fDJglPzXD4eTF6RrK3AsZpHgnVqQzlAC+4G\nQ7zRQN/h3voXJ5ed684Hy8bb04KKsEo0EYx2Nz6Hd9mGkSnnqydIa8ieJO3ChYyi\nIDyJVXpDOth0TshZARbTFuicYg0ULUmU/l5x38Z3HFp9J1G4GFhnoivBwRozlQ8=\n=a+o4\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-26T17:04:22",
                "message_text_only": "Venzen --\n\nThe market for block space is not at all the same as the market for bitcoin.\n\nThe centralization risk that is discussed in relation to the market for\nblock space arises from the resources (network, storage, processor...)\nrequired to run a full node.  That is a consideration in determining the\nactual (as opposed to declared) capacity of the system.\n\nThe 1MB cap was not indexed to increasing resource availability to begin\nwith, so one way to determine the size of any initial hard cap increase\nwould be to estimate the change in resource availability since that time."
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-26T17:55:28",
                "message_text_only": "I completely agree with Pieter: usage will grow to fill whatever maximum\nblock size the miners decide to allow (or whatever maximum block size is\nimposed by minimum transaction fees or a hard cap on block size).\n\nI am not scared by increased usage, though: more usage and adoption means\nmore investment, more smart engineers, and more people with incentives to\nsolve whatever scaling problems crop up. All of that makes Bitcoin stronger.\n\nAnd I don't feel like this process has been hurried: I've been working on\nthis (thinking, testing, simulating, talking, writing code, talking to key\npeople and companies) almost exclusively since late last year. In my humble\nopinion, BIP 101 is a good compromise between \"no limit, let the miners\ndecide\" and \"lower the max size so a raspberry pi running on a 56K modem\ncan be a full node.\"\n\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/6143a1be/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-26T17:57:42",
                "message_text_only": "It is not \"fear\" of fee pressure.\n\n1) Blocks are mostly not-full on average.\n\n2) Absent long blocks and stress tests, there is little fee pressure above\nthe anti-spam relay fee metric, because of #1.\n\n3) As such, inducing fee pressure is a delta, a change from years-long\nbitcoin economic policy.  Each time we approach the soft limit, Bitcoin\nCore increases the soft limit to prevent \"full\" blocks.  Mike Hearn et. al.\nlobbies miners to upgrade.\n\n(note - this is not an endorsement of these actions - it is a neutral\nobservation)\n\n4) Inaction leads to consistent fee pressure as the months tick on and\nsystem volume grows; thus, inaction leads to economic policy change.\n\n5) Economic policy change leads to market and software disruption.  The\nmarket and software - notably wallets - is not prepared for this.\n\n6) If you want to change economic policy, that's fine.  But be honest and\nadmit you are arguing for a change, a delta from current market\nexpectations and behavior.\n\n7) It is critical to first deal with what _is_, not what you wish the world\nto be.  You want a fee market to develop.  There is nothing wrong with that\ndesire.  It remains a delta from where we are today, and that is critically\nrelevant in a $3b+ market.\n\n\n\n\n\n\n\n\nOn Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> Hello all,\n>\n> here I'm going to try to address a part of the block size debate which has\n> been troubling me since the beginning: the reason why people seem to want\n> it.\n>\n> People say that larger blocks are necessary. In the long term, I agree -\n> in the sense that systems that do not evolve tend to be replaced by other\n> systems. This evolution can come in terms of layers on top of Bitcoin's\n> blockchain, in terms of the technology underlying various aspects of the\n> blockchain itself, and also in the scale that this technology supports.\n>\n> I do, however, fundamentally disagree that a fear for a change in\n> economics should be considered to necessitate larger blocks. If it is, and\n> there is consensus that we should adapt to it, then there is effectively no\n> limit going forward. This is similar to how Congress voting to increase the\n> copyright term retroactively from time to time is really no different from\n> having an infinite copyright term in the first place. This scares me.\n>\n> Here is how Gavin summarizes the future without increasing block sizes in\n> PR 6341:\n>\n> > 1. Transaction confirmation times for transactions with a given fee will\n> rise; very-low-fee transactions will fail to get confirmed at all.\n> > 2. Average transaction fee paid will rise\n> > 3. People or applications unwilling or unable to pay the rising fees\n> will stop submitting transactions\n> > 4. People and businesses will shelve plans to use Bitcoin, stunting\n> growth and adoption\n>\n> Is it fair to summarize this as \"Some use cases won't fit any more, people\n> will decide to no longer use the blockchain for these purposes, and the\n> fees will adapt.\"?\n>\n> I think that is already happening, and will happen at any scale. I believe\n> demand for payments in general is nearly infinite, and only a small portion\n> of it will eventually fit on a block chain (independent of whether its size\n> is limited by consensus rules or economic or technological means).\n> Furthermore, systems that compete with Bitcoin in this space already offer\n> orders of magnitude more capacity than we can reasonably achieve with any\n> blockchain technology at this point.\n>\n> I don't know what subset of use cases Bitcoin will cater to in the long\n> term. They have already changed - you see way less betting transactions\n> these days than a few years ago for example - and they will keep changing,\n> independent of what effective block sizes we end up with. I don't think we\n> should be afraid of this change or try to stop it.\n>\n> If you look at graphs of block sizes over time (for example,\n> http://rusty.ozlabs.org/?p=498), it seems to me that there is very little\n> \"organic\" growth, and a lot of sudden changes (which could correspond to\n> changing defaults in miner software, introduction of popular\n> sites/services, changes in the economy). I think these can be seen as the\n> economy changing to full up the available space, and I believe these will\n> keep happening at any size effectively available.\n>\n> None of this is a reason why the size can't increase. However, in my\n> opinion, we should do it because we believe it increases utility and\n> understand the risks; not because we're afraid of what might happen if we\n> don't hurry up. And from that point of view, it seems silly to make a huge\n> increase at once...\n>\n> --\n> Pieter\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/4d6992ee/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-26T18:12:54",
                "message_text_only": "I am not saying that economic change is what we want. Only that it is\ninevitable, independent of whether larger blocks happen or not.\n\nI am saying that acting because of fear of economic change is a bad reason.\nThe reason for increase should be because of the higher utility. We need it\nat some point, but there should be no rush.\n\nI do understand that we want to avoid a *sudden* change in economic policy,\nbut I'm generally not too worried. Either fees increase and they get paid,\nand we're good. But more likely is that some uses just move off-chain\nbecause the block chain does not offer what they need. That's sad, but it\nis inevitable at any size: some uses fit, some don't.\n\n-- \nPieter\n On Jun 26, 2015 7:57 PM, \"Jeff Garzik\" <jgarzik at gmail.com> wrote:\n\n> It is not \"fear\" of fee pressure.\n>\n> 1) Blocks are mostly not-full on average.\n>\n> 2) Absent long blocks and stress tests, there is little fee pressure above\n> the anti-spam relay fee metric, because of #1.\n>\n> 3) As such, inducing fee pressure is a delta, a change from years-long\n> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin\n> Core increases the soft limit to prevent \"full\" blocks.  Mike Hearn et. al.\n> lobbies miners to upgrade.\n>\n> (note - this is not an endorsement of these actions - it is a neutral\n> observation)\n>\n> 4) Inaction leads to consistent fee pressure as the months tick on and\n> system volume grows; thus, inaction leads to economic policy change.\n>\n> 5) Economic policy change leads to market and software disruption.  The\n> market and software - notably wallets - is not prepared for this.\n>\n> 6) If you want to change economic policy, that's fine.  But be honest and\n> admit you are arguing for a change, a delta from current market\n> expectations and behavior.\n>\n> 7) It is critical to first deal with what _is_, not what you wish the\n> world to be.  You want a fee market to develop.  There is nothing wrong\n> with that desire.  It remains a delta from where we are today, and that is\n> critically relevant in a $3b+ market.\n>\n>\n>\n>\n>\n>\n>\n>\n> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>\n> wrote:\n>\n>> Hello all,\n>>\n>> here I'm going to try to address a part of the block size debate which\n>> has been troubling me since the beginning: the reason why people seem to\n>> want it.\n>>\n>> People say that larger blocks are necessary. In the long term, I agree -\n>> in the sense that systems that do not evolve tend to be replaced by other\n>> systems. This evolution can come in terms of layers on top of Bitcoin's\n>> blockchain, in terms of the technology underlying various aspects of the\n>> blockchain itself, and also in the scale that this technology supports.\n>>\n>> I do, however, fundamentally disagree that a fear for a change in\n>> economics should be considered to necessitate larger blocks. If it is, and\n>> there is consensus that we should adapt to it, then there is effectively no\n>> limit going forward. This is similar to how Congress voting to increase the\n>> copyright term retroactively from time to time is really no different from\n>> having an infinite copyright term in the first place. This scares me.\n>>\n>> Here is how Gavin summarizes the future without increasing block sizes in\n>> PR 6341:\n>>\n>> > 1. Transaction confirmation times for transactions with a given fee\n>> will rise; very-low-fee transactions will fail to get confirmed at all.\n>> > 2. Average transaction fee paid will rise\n>> > 3. People or applications unwilling or unable to pay the rising fees\n>> will stop submitting transactions\n>> > 4. People and businesses will shelve plans to use Bitcoin, stunting\n>> growth and adoption\n>>\n>> Is it fair to summarize this as \"Some use cases won't fit any more,\n>> people will decide to no longer use the blockchain for these purposes, and\n>> the fees will adapt.\"?\n>>\n>> I think that is already happening, and will happen at any scale. I\n>> believe demand for payments in general is nearly infinite, and only a small\n>> portion of it will eventually fit on a block chain (independent of whether\n>> its size is limited by consensus rules or economic or technological means).\n>> Furthermore, systems that compete with Bitcoin in this space already offer\n>> orders of magnitude more capacity than we can reasonably achieve with any\n>> blockchain technology at this point.\n>>\n>> I don't know what subset of use cases Bitcoin will cater to in the long\n>> term. They have already changed - you see way less betting transactions\n>> these days than a few years ago for example - and they will keep changing,\n>> independent of what effective block sizes we end up with. I don't think we\n>> should be afraid of this change or try to stop it.\n>>\n>> If you look at graphs of block sizes over time (for example,\n>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very\n>> little \"organic\" growth, and a lot of sudden changes (which could\n>> correspond to changing defaults in miner software, introduction of popular\n>> sites/services, changes in the economy). I think these can be seen as the\n>> economy changing to full up the available space, and I believe these will\n>> keep happening at any size effectively available.\n>>\n>> None of this is a reason why the size can't increase. However, in my\n>> opinion, we should do it because we believe it increases utility and\n>> understand the risks; not because we're afraid of what might happen if we\n>> don't hurry up. And from that point of view, it seems silly to make a huge\n>> increase at once...\n>>\n>> --\n>> Pieter\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/f54b9275/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-26T18:23:18",
                "message_text_only": "Failure to plan now for a hard fork increase 6(?) months in the future\nproduces that lumpy, unpredictable market behavior.\n\nThe market has baked in the years-long behavior of low fees.  From the\nmarket PoV, inaction does lead to precisely that, a sudden change over the\nspan of a few months.\n\nAt a higher level, people look at bitcoin and see people delaying, waiting,\ndawdling until the barn is actually on fire before taking action to put out\nthe fire.\n\nThey see a system that is not responsive to higher level externalities of\npeople & businesses making plans for the future.  Based on current proposal\nof change-through-inaction, businesses will simply shelve plans to use\nbitcoin and not bother putting those new users on the network.\n\nIf you wait until the need to increase block size is acute, it is already\ntoo late.  (1) Businesses have permanently shelved plans to use bitcoin and\n(2) change at that point produces _larger_ disruption to the fee market.\n\nHard forks require planning many months in advance.  Gavin's timing is\nsound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.\n\n\n\n\n\n\n\nOn Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> I am not saying that economic change is what we want. Only that it is\n> inevitable, independent of whether larger blocks happen or not.\n>\n> I am saying that acting because of fear of economic change is a bad\n> reason. The reason for increase should be because of the higher utility. We\n> need it at some point, but there should be no rush.\n>\n> I do understand that we want to avoid a *sudden* change in economic\n> policy, but I'm generally not too worried. Either fees increase and they\n> get paid, and we're good. But more likely is that some uses just move\n> off-chain because the block chain does not offer what they need. That's\n> sad, but it is inevitable at any size: some uses fit, some don't.\n>\n> --\n> Pieter\n>  On Jun 26, 2015 7:57 PM, \"Jeff Garzik\" <jgarzik at gmail.com> wrote:\n>\n>> It is not \"fear\" of fee pressure.\n>>\n>> 1) Blocks are mostly not-full on average.\n>>\n>> 2) Absent long blocks and stress tests, there is little fee pressure\n>> above the anti-spam relay fee metric, because of #1.\n>>\n>> 3) As such, inducing fee pressure is a delta, a change from years-long\n>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin\n>> Core increases the soft limit to prevent \"full\" blocks.  Mike Hearn et. al.\n>> lobbies miners to upgrade.\n>>\n>> (note - this is not an endorsement of these actions - it is a neutral\n>> observation)\n>>\n>> 4) Inaction leads to consistent fee pressure as the months tick on and\n>> system volume grows; thus, inaction leads to economic policy change.\n>>\n>> 5) Economic policy change leads to market and software disruption.  The\n>> market and software - notably wallets - is not prepared for this.\n>>\n>> 6) If you want to change economic policy, that's fine.  But be honest and\n>> admit you are arguing for a change, a delta from current market\n>> expectations and behavior.\n>>\n>> 7) It is critical to first deal with what _is_, not what you wish the\n>> world to be.  You want a fee market to develop.  There is nothing wrong\n>> with that desire.  It remains a delta from where we are today, and that is\n>> critically relevant in a $3b+ market.\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>\n>> wrote:\n>>\n>>> Hello all,\n>>>\n>>> here I'm going to try to address a part of the block size debate which\n>>> has been troubling me since the beginning: the reason why people seem to\n>>> want it.\n>>>\n>>> People say that larger blocks are necessary. In the long term, I agree -\n>>> in the sense that systems that do not evolve tend to be replaced by other\n>>> systems. This evolution can come in terms of layers on top of Bitcoin's\n>>> blockchain, in terms of the technology underlying various aspects of the\n>>> blockchain itself, and also in the scale that this technology supports.\n>>>\n>>> I do, however, fundamentally disagree that a fear for a change in\n>>> economics should be considered to necessitate larger blocks. If it is, and\n>>> there is consensus that we should adapt to it, then there is effectively no\n>>> limit going forward. This is similar to how Congress voting to increase the\n>>> copyright term retroactively from time to time is really no different from\n>>> having an infinite copyright term in the first place. This scares me.\n>>>\n>>> Here is how Gavin summarizes the future without increasing block sizes\n>>> in PR 6341:\n>>>\n>>> > 1. Transaction confirmation times for transactions with a given fee\n>>> will rise; very-low-fee transactions will fail to get confirmed at all.\n>>> > 2. Average transaction fee paid will rise\n>>> > 3. People or applications unwilling or unable to pay the rising fees\n>>> will stop submitting transactions\n>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting\n>>> growth and adoption\n>>>\n>>> Is it fair to summarize this as \"Some use cases won't fit any more,\n>>> people will decide to no longer use the blockchain for these purposes, and\n>>> the fees will adapt.\"?\n>>>\n>>> I think that is already happening, and will happen at any scale. I\n>>> believe demand for payments in general is nearly infinite, and only a small\n>>> portion of it will eventually fit on a block chain (independent of whether\n>>> its size is limited by consensus rules or economic or technological means).\n>>> Furthermore, systems that compete with Bitcoin in this space already offer\n>>> orders of magnitude more capacity than we can reasonably achieve with any\n>>> blockchain technology at this point.\n>>>\n>>> I don't know what subset of use cases Bitcoin will cater to in the long\n>>> term. They have already changed - you see way less betting transactions\n>>> these days than a few years ago for example - and they will keep changing,\n>>> independent of what effective block sizes we end up with. I don't think we\n>>> should be afraid of this change or try to stop it.\n>>>\n>>> If you look at graphs of block sizes over time (for example,\n>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very\n>>> little \"organic\" growth, and a lot of sudden changes (which could\n>>> correspond to changing defaults in miner software, introduction of popular\n>>> sites/services, changes in the economy). I think these can be seen as the\n>>> economy changing to full up the available space, and I believe these will\n>>> keep happening at any size effectively available.\n>>>\n>>> None of this is a reason why the size can't increase. However, in my\n>>> opinion, we should do it because we believe it increases utility and\n>>> understand the risks; not because we're afraid of what might happen if we\n>>> don't hurry up. And from that point of view, it seems silly to make a huge\n>>> increase at once...\n>>>\n>>> --\n>>> Pieter\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/4980bc88/attachment-0001.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-26T18:31:43",
                "message_text_only": "Jeff, block size limits large enough to prevent fee pressure is absolutely,\nunequivocally unsustainable. We are already running against technological\nlimits in the tradeoff between decentralization and utility. Increases of\nthe block size limit in advance of fee pressure only delay the problem --\nit does not and cannot solve it!\n\nWe must be careful to use the block size limit now to get infrastructure to\nsupport a world with full blocks -- it's not that hard -- while still\nhaving a little room to grow fast if things unexpectedly break.\n\nOn Fri, Jun 26, 2015 at 11:23 AM, Jeff Garzik <jgarzik at gmail.com> wrote:\n\n> Failure to plan now for a hard fork increase 6(?) months in the future\n> produces that lumpy, unpredictable market behavior.\n>\n> The market has baked in the years-long behavior of low fees.  From the\n> market PoV, inaction does lead to precisely that, a sudden change over the\n> span of a few months.\n>\n> At a higher level, people look at bitcoin and see people delaying,\n> waiting, dawdling until the barn is actually on fire before taking action\n> to put out the fire.\n>\n> They see a system that is not responsive to higher level externalities of\n> people & businesses making plans for the future.  Based on current proposal\n> of change-through-inaction, businesses will simply shelve plans to use\n> bitcoin and not bother putting those new users on the network.\n>\n> If you wait until the need to increase block size is acute, it is already\n> too late.  (1) Businesses have permanently shelved plans to use bitcoin and\n> (2) change at that point produces _larger_ disruption to the fee market.\n>\n> Hard forks require planning many months in advance.  Gavin's timing is\n> sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.\n>\n>\n>\n>\n>\n>\n>\n> On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille <pieter.wuille at gmail.com>\n> wrote:\n>\n>> I am not saying that economic change is what we want. Only that it is\n>> inevitable, independent of whether larger blocks happen or not.\n>>\n>> I am saying that acting because of fear of economic change is a bad\n>> reason. The reason for increase should be because of the higher utility. We\n>> need it at some point, but there should be no rush.\n>>\n>> I do understand that we want to avoid a *sudden* change in economic\n>> policy, but I'm generally not too worried. Either fees increase and they\n>> get paid, and we're good. But more likely is that some uses just move\n>> off-chain because the block chain does not offer what they need. That's\n>> sad, but it is inevitable at any size: some uses fit, some don't.\n>>\n>> --\n>> Pieter\n>>  On Jun 26, 2015 7:57 PM, \"Jeff Garzik\" <jgarzik at gmail.com> wrote:\n>>\n>>> It is not \"fear\" of fee pressure.\n>>>\n>>> 1) Blocks are mostly not-full on average.\n>>>\n>>> 2) Absent long blocks and stress tests, there is little fee pressure\n>>> above the anti-spam relay fee metric, because of #1.\n>>>\n>>> 3) As such, inducing fee pressure is a delta, a change from years-long\n>>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin\n>>> Core increases the soft limit to prevent \"full\" blocks.  Mike Hearn et. al.\n>>> lobbies miners to upgrade.\n>>>\n>>> (note - this is not an endorsement of these actions - it is a neutral\n>>> observation)\n>>>\n>>> 4) Inaction leads to consistent fee pressure as the months tick on and\n>>> system volume grows; thus, inaction leads to economic policy change.\n>>>\n>>> 5) Economic policy change leads to market and software disruption.  The\n>>> market and software - notably wallets - is not prepared for this.\n>>>\n>>> 6) If you want to change economic policy, that's fine.  But be honest\n>>> and admit you are arguing for a change, a delta from current market\n>>> expectations and behavior.\n>>>\n>>> 7) It is critical to first deal with what _is_, not what you wish the\n>>> world to be.  You want a fee market to develop.  There is nothing wrong\n>>> with that desire.  It remains a delta from where we are today, and that is\n>>> critically relevant in a $3b+ market.\n>>>\n>>>\n>>>\n>>>\n>>>\n>>>\n>>>\n>>>\n>>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>\n>>> wrote:\n>>>\n>>>> Hello all,\n>>>>\n>>>> here I'm going to try to address a part of the block size debate which\n>>>> has been troubling me since the beginning: the reason why people seem to\n>>>> want it.\n>>>>\n>>>> People say that larger blocks are necessary. In the long term, I agree\n>>>> - in the sense that systems that do not evolve tend to be replaced by other\n>>>> systems. This evolution can come in terms of layers on top of Bitcoin's\n>>>> blockchain, in terms of the technology underlying various aspects of the\n>>>> blockchain itself, and also in the scale that this technology supports.\n>>>>\n>>>> I do, however, fundamentally disagree that a fear for a change in\n>>>> economics should be considered to necessitate larger blocks. If it is, and\n>>>> there is consensus that we should adapt to it, then there is effectively no\n>>>> limit going forward. This is similar to how Congress voting to increase the\n>>>> copyright term retroactively from time to time is really no different from\n>>>> having an infinite copyright term in the first place. This scares me.\n>>>>\n>>>> Here is how Gavin summarizes the future without increasing block sizes\n>>>> in PR 6341:\n>>>>\n>>>> > 1. Transaction confirmation times for transactions with a given fee\n>>>> will rise; very-low-fee transactions will fail to get confirmed at all.\n>>>> > 2. Average transaction fee paid will rise\n>>>> > 3. People or applications unwilling or unable to pay the rising fees\n>>>> will stop submitting transactions\n>>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting\n>>>> growth and adoption\n>>>>\n>>>> Is it fair to summarize this as \"Some use cases won't fit any more,\n>>>> people will decide to no longer use the blockchain for these purposes, and\n>>>> the fees will adapt.\"?\n>>>>\n>>>> I think that is already happening, and will happen at any scale. I\n>>>> believe demand for payments in general is nearly infinite, and only a small\n>>>> portion of it will eventually fit on a block chain (independent of whether\n>>>> its size is limited by consensus rules or economic or technological means).\n>>>> Furthermore, systems that compete with Bitcoin in this space already offer\n>>>> orders of magnitude more capacity than we can reasonably achieve with any\n>>>> blockchain technology at this point.\n>>>>\n>>>> I don't know what subset of use cases Bitcoin will cater to in the long\n>>>> term. They have already changed - you see way less betting transactions\n>>>> these days than a few years ago for example - and they will keep changing,\n>>>> independent of what effective block sizes we end up with. I don't think we\n>>>> should be afraid of this change or try to stop it.\n>>>>\n>>>> If you look at graphs of block sizes over time (for example,\n>>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very\n>>>> little \"organic\" growth, and a lot of sudden changes (which could\n>>>> correspond to changing defaults in miner software, introduction of popular\n>>>> sites/services, changes in the economy). I think these can be seen as the\n>>>> economy changing to full up the available space, and I believe these will\n>>>> keep happening at any size effectively available.\n>>>>\n>>>> None of this is a reason why the size can't increase. However, in my\n>>>> opinion, we should do it because we believe it increases utility and\n>>>> understand the risks; not because we're afraid of what might happen if we\n>>>> don't hurry up. And from that point of view, it seems silly to make a huge\n>>>> increase at once...\n>>>>\n>>>> --\n>>>> Pieter\n>>>>\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>>\n>>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/2b2df840/attachment-0001.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-26T19:05:52",
                "message_text_only": "> Jeff, block size limits large enough to prevent fee pressure is\nabsolutely, unequivocally unsustainable.\n\nThis is demonstrably false. It's clear that having no fee pressure is\nunsustainable, of course. But people are paying fees today, so that means\nthere must be fee pressure. How is this the case then since blocks are\ntypically below the block size limit? There must be some other mechanism\ninducing fee pressure. This mechanism is standard minimum relay rules, and\ntransaction selection rules for blocks. These are the methods that all\nbitcoin software today has been built around, and handles well.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Fri, Jun 26, 2015 at 11:31 AM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> Jeff, block size limits large enough to prevent fee pressure is\n> absolutely, unequivocally unsustainable. We are already running against\n> technological limits in the tradeoff between decentralization and utility.\n> Increases of the block size limit in advance of fee pressure only delay the\n> problem -- it does not and cannot solve it!\n>\n> We must be careful to use the block size limit now to get infrastructure\n> to support a world with full blocks -- it's not that hard -- while still\n> having a little room to grow fast if things unexpectedly break.\n>\n>\n> On Fri, Jun 26, 2015 at 11:23 AM, Jeff Garzik <jgarzik at gmail.com> wrote:\n>\n>> Failure to plan now for a hard fork increase 6(?) months in the future\n>> produces that lumpy, unpredictable market behavior.\n>>\n>> The market has baked in the years-long behavior of low fees.  From the\n>> market PoV, inaction does lead to precisely that, a sudden change over the\n>> span of a few months.\n>>\n>> At a higher level, people look at bitcoin and see people delaying,\n>> waiting, dawdling until the barn is actually on fire before taking action\n>> to put out the fire.\n>>\n>> They see a system that is not responsive to higher level externalities of\n>> people & businesses making plans for the future.  Based on current proposal\n>> of change-through-inaction, businesses will simply shelve plans to use\n>> bitcoin and not bother putting those new users on the network.\n>>\n>> If you wait until the need to increase block size is acute, it is already\n>> too late.  (1) Businesses have permanently shelved plans to use bitcoin and\n>> (2) change at that point produces _larger_ disruption to the fee market.\n>>\n>> Hard forks require planning many months in advance.  Gavin's timing is\n>> sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>> On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille <pieter.wuille at gmail.com>\n>> wrote:\n>>\n>>> I am not saying that economic change is what we want. Only that it is\n>>> inevitable, independent of whether larger blocks happen or not.\n>>>\n>>> I am saying that acting because of fear of economic change is a bad\n>>> reason. The reason for increase should be because of the higher utility. We\n>>> need it at some point, but there should be no rush.\n>>>\n>>> I do understand that we want to avoid a *sudden* change in economic\n>>> policy, but I'm generally not too worried. Either fees increase and they\n>>> get paid, and we're good. But more likely is that some uses just move\n>>> off-chain because the block chain does not offer what they need. That's\n>>> sad, but it is inevitable at any size: some uses fit, some don't.\n>>>\n>>> --\n>>> Pieter\n>>>  On Jun 26, 2015 7:57 PM, \"Jeff Garzik\" <jgarzik at gmail.com> wrote:\n>>>\n>>>> It is not \"fear\" of fee pressure.\n>>>>\n>>>> 1) Blocks are mostly not-full on average.\n>>>>\n>>>> 2) Absent long blocks and stress tests, there is little fee pressure\n>>>> above the anti-spam relay fee metric, because of #1.\n>>>>\n>>>> 3) As such, inducing fee pressure is a delta, a change from years-long\n>>>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin\n>>>> Core increases the soft limit to prevent \"full\" blocks.  Mike Hearn et. al.\n>>>> lobbies miners to upgrade.\n>>>>\n>>>> (note - this is not an endorsement of these actions - it is a neutral\n>>>> observation)\n>>>>\n>>>> 4) Inaction leads to consistent fee pressure as the months tick on and\n>>>> system volume grows; thus, inaction leads to economic policy change.\n>>>>\n>>>> 5) Economic policy change leads to market and software disruption.  The\n>>>> market and software - notably wallets - is not prepared for this.\n>>>>\n>>>> 6) If you want to change economic policy, that's fine.  But be honest\n>>>> and admit you are arguing for a change, a delta from current market\n>>>> expectations and behavior.\n>>>>\n>>>> 7) It is critical to first deal with what _is_, not what you wish the\n>>>> world to be.  You want a fee market to develop.  There is nothing wrong\n>>>> with that desire.  It remains a delta from where we are today, and that is\n>>>> critically relevant in a $3b+ market.\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>>>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com\n>>>> > wrote:\n>>>>\n>>>>> Hello all,\n>>>>>\n>>>>> here I'm going to try to address a part of the block size debate which\n>>>>> has been troubling me since the beginning: the reason why people seem to\n>>>>> want it.\n>>>>>\n>>>>> People say that larger blocks are necessary. In the long term, I agree\n>>>>> - in the sense that systems that do not evolve tend to be replaced by other\n>>>>> systems. This evolution can come in terms of layers on top of Bitcoin's\n>>>>> blockchain, in terms of the technology underlying various aspects of the\n>>>>> blockchain itself, and also in the scale that this technology supports.\n>>>>>\n>>>>> I do, however, fundamentally disagree that a fear for a change in\n>>>>> economics should be considered to necessitate larger blocks. If it is, and\n>>>>> there is consensus that we should adapt to it, then there is effectively no\n>>>>> limit going forward. This is similar to how Congress voting to increase the\n>>>>> copyright term retroactively from time to time is really no different from\n>>>>> having an infinite copyright term in the first place. This scares me.\n>>>>>\n>>>>> Here is how Gavin summarizes the future without increasing block sizes\n>>>>> in PR 6341:\n>>>>>\n>>>>> > 1. Transaction confirmation times for transactions with a given fee\n>>>>> will rise; very-low-fee transactions will fail to get confirmed at all.\n>>>>> > 2. Average transaction fee paid will rise\n>>>>> > 3. People or applications unwilling or unable to pay the rising fees\n>>>>> will stop submitting transactions\n>>>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting\n>>>>> growth and adoption\n>>>>>\n>>>>> Is it fair to summarize this as \"Some use cases won't fit any more,\n>>>>> people will decide to no longer use the blockchain for these purposes, and\n>>>>> the fees will adapt.\"?\n>>>>>\n>>>>> I think that is already happening, and will happen at any scale. I\n>>>>> believe demand for payments in general is nearly infinite, and only a small\n>>>>> portion of it will eventually fit on a block chain (independent of whether\n>>>>> its size is limited by consensus rules or economic or technological means).\n>>>>> Furthermore, systems that compete with Bitcoin in this space already offer\n>>>>> orders of magnitude more capacity than we can reasonably achieve with any\n>>>>> blockchain technology at this point.\n>>>>>\n>>>>> I don't know what subset of use cases Bitcoin will cater to in the\n>>>>> long term. They have already changed - you see way less betting\n>>>>> transactions these days than a few years ago for example - and they will\n>>>>> keep changing, independent of what effective block sizes we end up with. I\n>>>>> don't think we should be afraid of this change or try to stop it.\n>>>>>\n>>>>> If you look at graphs of block sizes over time (for example,\n>>>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very\n>>>>> little \"organic\" growth, and a lot of sudden changes (which could\n>>>>> correspond to changing defaults in miner software, introduction of popular\n>>>>> sites/services, changes in the economy). I think these can be seen as the\n>>>>> economy changing to full up the available space, and I believe these will\n>>>>> keep happening at any size effectively available.\n>>>>>\n>>>>> None of this is a reason why the size can't increase. However, in my\n>>>>> opinion, we should do it because we believe it increases utility and\n>>>>> understand the risks; not because we're afraid of what might happen if we\n>>>>> don't hurry up. And from that point of view, it seems silly to make a huge\n>>>>> increase at once...\n>>>>>\n>>>>> --\n>>>>> Pieter\n>>>>>\n>>>>>\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>\n>>>>>\n>>>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/6fd41144/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-26T18:34:31",
                "message_text_only": "> If you wait until the need to increase block size\n\nIt is this sentence I disagree with. Why would there be a need? Bitcoin\nprovides utility at any block size, and potentially more with larger blocks.\n\nBut no matter what, I believe the economy will adapt to what is available.\nAnd setting a precedent that increasing the size \"because of a need\" is\nreasonable is to me essentially the same as saying the size should forever\nscale to whatever people want.\n\nI believe the most important effect of a limit block size - people deciding\nnot to use (on chain) Bitcoin transactions, is already happening, and it\nwill keep happening at any scale.\n\nEither the resulting market is one which can live with high variability in\nconfirmation times, and blocks will end up being nearly full. Or maybe the\ncurrent fill level is what is acceptable, and we don't see much growth\nbeyond this, only a change in what it is used for.\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/d4380514/attachment.html>"
            },
            {
                "author": "Ross Nicoll",
                "date": "2015-06-26T19:18:07",
                "message_text_only": "I'd argue that at the point where there's consistently more transactions \nthan the network can handle, there are two significant risks. Firstly, \nthat people don't care enough to pay the transaction fees required to \nget their transaction prioritised over another's, and secondly that as \ntransactions start outright failing (which will happen with enough \ntransactions backlogged) the network is considered unreliable, the \ncurrency illiquid, and there's a virtual \"bank rush\" to get into a more \nusable currency.\n\nI understand the desire to use current demand to model future, however I \nfeel there's a lack of understanding of just how inadequate the main \nchain is as a global clearance network. My go-to example for this is \nCHIPS (US-only, inter-bank only clearance) which already handles \nslightly over 3 transactions per second on average across a year \n(https://www.theclearinghouse.org/~/media/tch/pay%20co/chips/reports%20and%20guides/chips%20volume%20through%20may%202015.pdf?la=en). \nIf Bitcoin is to be used across a wider portion of the world's \npopulation, and/or beyond clearance between financial institutions, it \nneeds larger blocks. This is not about handling the several orders of \nmagnitude more transactions that would be required to replace credit \ncards or cash, but simply to enabling other technologies to perform that \nscaling.\n\nAlso, and I'm aware most on this list do understand the situation better \nthan this, I find it immensely frustrating to see people suggesting that \nGreece or other large groups should adopt Bitcoin, while there's clearly \ninadequate support (on chain or off) to do so.\n\nRoss\n\nOn 26/06/2015 19:34, Pieter Wuille wrote:\n>\n> > If you wait until the need to increase block size\n>\n> It is this sentence I disagree with. Why would there be a need? \n> Bitcoin provides utility at any block size, and potentially more with \n> larger blocks.\n>\n> But no matter what, I believe the economy will adapt to what is \n> available. And setting a precedent that increasing the size \"because \n> of a need\" is reasonable is to me essentially the same as saying the \n> size should forever scale to whatever people want.\n>\n> I believe the most important effect of a limit block size - people \n> deciding not to use (on chain) Bitcoin transactions, is already \n> happening, and it will keep happening at any scale.\n>\n> Either the resulting market is one which can live with high \n> variability in confirmation times, and blocks will end up being nearly \n> full. Or maybe the current fill level is what is acceptable, and we \n> don't see much growth beyond this, only a change in what it is used for.\n>\n> -- \n> Pieter\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/a81ace1f/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-26T19:36:30",
                "message_text_only": "On Fri, Jun 26, 2015 at 08:18:07PM +0100, Ross Nicoll wrote:\n> I'd argue that at the point where there's consistently more\n> transactions than the network can handle, there are two significant\n> risks. Firstly, that people don't care enough to pay the transaction\n> fees required to get their transaction prioritised over another's,\n> and secondly that as transactions start outright failing (which will\n> happen with enough transactions backlogged) the network is\n> considered unreliable, the currency illiquid, and there's a virtual\n> \"bank rush\" to get into a more usable currency.\n\nThe supply and demand fee market means that there is a range of\nreliability levels depending on what fee you pay; regardless of how high\ndemand is if you pay a sufficiently high fee that outbids less\nimportant/lower fee transactions you'll get reliable transaction\nconfirmaiton.\n\nThe perceived lack of reliability is a function of the poor state of\nwallet software, not an inherent problem with the system. Fixing that\nsoftware is much easier and much less risky than any hard-fork ever will\nbe.\n\nFrom my article on transaction fees during the CoinWallet.eu flood:\n\nWhat needs to be done\n=====================\n\nTransaction fees aren't going away, blocksize increase or not. CoinWallet.eu is\nonly spending $5k flooding the network; even an 8MB blocksize increase can only\nraise the cost of that attack to $40k, which is still very affordable. For\ninstance an attacker looking to manipulate the Bitcoin price could probably\nafford to spend $40k doing it with the right trading strategy; let alone\ngovernments, banks, big businesses, criminal enterprises, etc. to whom $40k is\nchump-change. Wallets need to become smarter about fees, as does the rest of\nthe Bitcoin community.\n\nWhat we need to do:\n\n* Add fee/KB displays to block explorers.\n\n* Change wallets to calculate and set fees in fee/KB rather than fixed fees regardless of tx size.\n\n* Make websites with easy to understand displays of what the current mempool\n  backlog is, and what fee/KB is needed to get to the front of the queue. We've\n  done a great job for Bitcoin price charts, let's extend that to transaction\n  fees.\n\n* Add the ability to set any fee/KB to wallets, rather than be stuck with\n  predefined options that may not be high enough.\n\n* Add support for fee-bumping via (FSS)-RBF to wallets and Bitcoin Core.\n\nCapacity limits are just a fact of life in the design of the Bitcoin protocol,\nbut that doesn't mean we can't give users the tools to deal with them\nintelligently.\n\n-https://gist.github.com/petertodd/8e87c782bdf342ef18fb\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/60768123/attachment.sig>"
            },
            {
                "author": "Filipe Farinha",
                "date": "2015-06-27T06:13:17",
                "message_text_only": "On 27/06/2015 03:36, Peter Todd wrote:\n> * Make websites with easy to understand displays of what the current mempool\n>    backlog is, and what fee/KB is needed to get to the front of the queue. We've\n>    done a great job for Bitcoin price charts, let's extend that to transaction\n>    fees.\n>\n+1\n\nThis is especially important if take into account all the projects that \naim to build upon the bitcoin blockchain and that can have a significant \nimpact, both in terms of storage space as well as transaction volume spikes.\n\nJust recently I suggested the need for a BIP to standardize reporting of \n\"delay alerts\" in wallets, so that users can act accordingly (i.e. \nfee-bump, postpone, cancel) before sending their transactions during \nthese periods of increased transaction volume.\n\nhttps://community.blockstack.org/t/blockstore-footprint-on-blockchain/68/5?u=ktorn\n\nIMHO keeping the users informed of potential issues before committing \ntransactions to the network can go a long way towards preventing \nfrustration and potential backlashes against blockchain tech.\n\nFilipe Farinha"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-27T07:14:41",
                "message_text_only": "Also remember that the sender is not the one who cares about delays or even\ngetting confirmations at all, it's the receiver who's concerned with these\nthings. They have to tell the sender up-front what they're willing to\naccept in exchange for goods and services.\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Fri, Jun 26, 2015 at 11:13 PM, Filipe Farinha <filipe at ktorn.com> wrote:\n\n> On 27/06/2015 03:36, Peter Todd wrote:\n>\n>> * Make websites with easy to understand displays of what the current\n>> mempool\n>>    backlog is, and what fee/KB is needed to get to the front of the\n>> queue. We've\n>>    done a great job for Bitcoin price charts, let's extend that to\n>> transaction\n>>    fees.\n>>\n>>  +1\n>\n> This is especially important if take into account all the projects that\n> aim to build upon the bitcoin blockchain and that can have a significant\n> impact, both in terms of storage space as well as transaction volume spikes.\n>\n> Just recently I suggested the need for a BIP to standardize reporting of\n> \"delay alerts\" in wallets, so that users can act accordingly (i.e.\n> fee-bump, postpone, cancel) before sending their transactions during these\n> periods of increased transaction volume.\n>\n>\n> https://community.blockstack.org/t/blockstore-footprint-on-blockchain/68/5?u=ktorn\n>\n> IMHO keeping the users informed of potential issues before committing\n> transactions to the network can go a long way towards preventing\n> frustration and potential backlashes against blockchain tech.\n>\n> Filipe Farinha\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/f4084b54/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T15:13:54",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 27 June 2015 03:14:41 GMT-04:00, Aaron Voisine <voisine at gmail.com> wrote:\n>Also remember that the sender is not the one who cares about delays or\n>even\n>getting confirmations at all, it's the receiver who's concerned with\n>these\n>things. They have to tell the sender up-front what they're willing to\n>accept in exchange for goods and services.\n\nYou're assuming a receiver who is accepting a zeroconf transaction; most receivers don't.\n\nFor instance, when I deposit funds on my exchange they don't credit those funds until 4 confirmations, so I very much cafe about how long it takes to get the first confirmation.\n-----BEGIN PGP SIGNATURE-----\n\niQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjr2g\nAAoJEMCF8hzn9Lnc47AIAJBa5O+H+XEqok4j8AEly9rjAMmdcOrqJSoNvtCj897l\nR34cN/5SfYIRpvFoyBKXfY+xo0RR/42VM08uju+vvCAvImiwOyrUNPTS2TmDdE3M\nPTGgQrYIctQxTcek9VL8TV94bHns+kJxMiOySdsOA+7NLl0oKoNKoHhYbbWPcn/+\n13p+su2Xi/ydO6HjHHxR/3kpQE4q8tupGDH0ZaPUijyd04uvB4GK4pPA5P7EeM9b\nixXB8aZnSYhbVnknUFfcTBLHzo70BQbTh0QFTZCOkNSwIoBfyEhd53IZ+BfJGbLo\n2K2VcMHeVU91Zbg+rgKNfGuLQvr5hEfZIkqZckXDj6I=\n=B/YW\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-27T19:40:33",
                "message_text_only": "On Sat, Jun 27, 2015 at 8:13 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> On 27 June 2015 03:14:41 GMT-04:00, Aaron Voisine <voisine at gmail.com>\n> wrote:\n> >Also remember that the sender is not the one who cares about delays or\n> >even\n> >getting confirmations at all, it's the receiver who's concerned with\n> >these\n> >things. They have to tell the sender up-front what they're willing to\n> >accept in exchange for goods and services.\n>\n> You're assuming a receiver who is accepting a zeroconf transaction; most\n> receivers don't.\n>\n> For instance, when I deposit funds on my exchange they don't credit those\n> funds until 4 confirmations, so I very much cafe about how long it takes to\n> get the first confirmation.\n>\n\nYes, the receiver can tell the sender up-front that they are only willing\naccept 4-confirmations, and put that on the sender to figure out, but the\nsender then only cares because it's the receiver's requirement. The\nreceiver is the one who cares.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/37f62e6d/attachment.html>"
            },
            {
                "author": "Patrick Strateman",
                "date": "2015-06-26T18:47:37",
                "message_text_only": "Planning for a hard forks which change the consensus rules (including\nthe blocksize limit) is something we can all agree is worthy of time and\neffort.\n\nHowever there is clearly not consensus sufficient today to deploy a hard\nfork that changs the blocksize without there being serious and\npotentially experiment ending consequences.\n\nFor a proposed hard fork to reach a level of consensus necessary to be\nsafe requires that there be a clear and self evident course of action.\n\nThat simply does not exist on the blocksize limit question.\n\nOn 06/26/2015 11:23 AM, Jeff Garzik wrote:\n> Failure to plan now for a hard fork increase 6(?) months in the future\n> produces that lumpy, unpredictable market behavior.\n>\n> The market has baked in the years-long behavior of low fees.  From the\n> market PoV, inaction does lead to precisely that, a sudden change over\n> the span of a few months.\n>\n> At a higher level, people look at bitcoin and see people delaying,\n> waiting, dawdling until the barn is actually on fire before taking\n> action to put out the fire.\n>\n> They see a system that is not responsive to higher level externalities\n> of people & businesses making plans for the future.  Based on current\n> proposal of change-through-inaction, businesses will simply shelve\n> plans to use bitcoin and not bother putting those new users on the\n> network.\n>\n> If you wait until the need to increase block size is acute, it is\n> already too late.  (1) Businesses have permanently shelved plans to\n> use bitcoin and (2) change at that point produces _larger_ disruption\n> to the fee market.\n>\n> Hard forks require planning many months in advance.  Gavin's timing is\n> sound, even though the Gavin/Hearn Bitcoin-XT antics were sub-optimal.\n>\n>\n>\n>\n>\n>\n>\n> On Fri, Jun 26, 2015 at 11:12 AM, Pieter Wuille\n> <pieter.wuille at gmail.com <mailto:pieter.wuille at gmail.com>> wrote:\n>\n>     I am not saying that economic change is what we want. Only that it\n>     is inevitable, independent of whether larger blocks happen or not.\n>\n>     I am saying that acting because of fear of economic change is a\n>     bad reason. The reason for increase should be because of the\n>     higher utility. We need it at some point, but there should be no rush.\n>\n>     I do understand that we want to avoid a *sudden* change in\n>     economic policy, but I'm generally not too worried. Either fees\n>     increase and they get paid, and we're good. But more likely is\n>     that some uses just move off-chain because the block chain does\n>     not offer what they need. That's sad, but it is inevitable at any\n>     size: some uses fit, some don't.\n>\n>     -- \n>     Pieter\n>\n>     On Jun 26, 2015 7:57 PM, \"Jeff Garzik\" <jgarzik at gmail.com\n>     <mailto:jgarzik at gmail.com>> wrote:\n>\n>         It is not \"fear\" of fee pressure.\n>\n>         1) Blocks are mostly not-full on average.\n>\n>         2) Absent long blocks and stress tests, there is little fee\n>         pressure above the anti-spam relay fee metric, because of #1.\n>\n>         3) As such, inducing fee pressure is a delta, a change from\n>         years-long bitcoin economic policy.  Each time we approach the\n>         soft limit, Bitcoin Core increases the soft limit to prevent\n>         \"full\" blocks.  Mike Hearn et. al. lobbies miners to upgrade.\n>\n>         (note - this is not an endorsement of these actions - it is a\n>         neutral observation)\n>\n>         4) Inaction leads to consistent fee pressure as the months\n>         tick on and system volume grows; thus, inaction leads to\n>         economic policy change.\n>\n>         5) Economic policy change leads to market and software\n>         disruption.  The market and software - notably wallets - is\n>         not prepared for this.\n>\n>         6) If you want to change economic policy, that's fine.  But be\n>         honest and admit you are arguing for a change, a delta from\n>         current market expectations and behavior.\n>\n>         7) It is critical to first deal with what _is_, not what you\n>         wish the world to be.  You want a fee market to develop. \n>         There is nothing wrong with that desire.  It remains a delta\n>         from where we are today, and that is critically relevant in a\n>         $3b+ market.\n>\n>\n>\n>\n>\n>\n>\n>\n>         On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille\n>         <pieter.wuille at gmail.com <mailto:pieter.wuille at gmail.com>> wrote:\n>\n>             Hello all,\n>\n>             here I'm going to try to address a part of the block size\n>             debate which has been troubling me since the beginning:\n>             the reason why people seem to want it.\n>\n>             People say that larger blocks are necessary. In the long\n>             term, I agree - in the sense that systems that do not\n>             evolve tend to be replaced by other systems. This\n>             evolution can come in terms of layers on top of Bitcoin's\n>             blockchain, in terms of the technology underlying various\n>             aspects of the blockchain itself, and also in the scale\n>             that this technology supports.\n>\n>             I do, however, fundamentally disagree that a fear for a\n>             change in economics should be considered to necessitate\n>             larger blocks. If it is, and there is consensus that we\n>             should adapt to it, then there is effectively no limit\n>             going forward. This is similar to how Congress voting to\n>             increase the copyright term retroactively from time to\n>             time is really no different from having an infinite\n>             copyright term in the first place. This scares me.\n>\n>             Here is how Gavin summarizes the future without increasing\n>             block sizes in PR 6341:\n>\n>             > 1. Transaction confirmation times for transactions with\n>             a given fee will rise; very-low-fee transactions will fail\n>             to get confirmed at all.\n>             > 2. Average transaction fee paid will rise\n>             > 3. People or applications unwilling or unable to pay the\n>             rising fees will stop submitting transactions\n>             > 4. People and businesses will shelve plans to use\n>             Bitcoin, stunting growth and adoption\n>\n>             Is it fair to summarize this as \"Some use cases won't fit\n>             any more, people will decide to no longer use the\n>             blockchain for these purposes, and the fees will adapt.\"?\n>\n>             I think that is already happening, and will happen at any\n>             scale. I believe demand for payments in general is nearly\n>             infinite, and only a small portion of it will eventually\n>             fit on a block chain (independent of whether its size is\n>             limited by consensus rules or economic or technological\n>             means). Furthermore, systems that compete with Bitcoin in\n>             this space already offer orders of magnitude more capacity\n>             than we can reasonably achieve with any blockchain\n>             technology at this point.\n>\n>             I don't know what subset of use cases Bitcoin will cater\n>             to in the long term. They have already changed - you see\n>             way less betting transactions these days than a few years\n>             ago for example - and they will keep changing, independent\n>             of what effective block sizes we end up with. I don't\n>             think we should be afraid of this change or try to stop it.\n>\n>             If you look at graphs of block sizes over time (for\n>             example, http://rusty.ozlabs.org/?p=498), it seems to me\n>             that there is very little \"organic\" growth, and a lot of\n>             sudden changes (which could correspond to changing\n>             defaults in miner software, introduction of popular\n>             sites/services, changes in the economy). I think these can\n>             be seen as the economy changing to full up the available\n>             space, and I believe these will keep happening at any size\n>             effectively available.\n>\n>             None of this is a reason why the size can't increase.\n>             However, in my opinion, we should do it because we believe\n>             it increases utility and understand the risks; not because\n>             we're afraid of what might happen if we don't hurry up.\n>             And from that point of view, it seems silly to make a huge\n>             increase at once...\n>\n>             -- \n>             Pieter\n>\n>\n>             _______________________________________________\n>             bitcoin-dev mailing list\n>             bitcoin-dev at lists.linuxfoundation.org\n>             <mailto:bitcoin-dev at lists.linuxfoundation.org>\n>             https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/6adbfdb4/attachment-0001.html>"
            },
            {
                "author": "Tier Nolan",
                "date": "2015-06-26T19:03:05",
                "message_text_only": "On Fri, Jun 26, 2015 at 7:47 PM, Patrick Strateman <\npatrick.strateman at gmail.com> wrote:\n\n>  For a proposed hard fork to reach a level of consensus necessary to be\n> safe requires that there be a clear and self evident course of action.\n>\n\nSafety increases with more lead-in time.  If the reference client was\nupdated so that the hard fork happened in two years, it would be pretty\nsafe.  Miners would have time to update.\n\nIf miners (or the community) objected, it is sort of like a game of chicken.\n\nThis is one of the problems with not making decisions in advance, the\nresulting hard fork is inherently safer.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/dd5e7ab9/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-26T19:12:00",
                "message_text_only": "This is a hard fork. It is not about miners, at all. 2013 showed that when\nthere is true consensus mining can be coordinated on the order of hours or\ndays. This is about pushing through a coercive change to the\ndecentralization tradeoffs of bitcoin without unanimous consent.\nOn Jun 26, 2015 12:03 PM, \"Tier Nolan\" <tier.nolan at gmail.com> wrote:\n\n> On Fri, Jun 26, 2015 at 7:47 PM, Patrick Strateman <\n> patrick.strateman at gmail.com> wrote:\n>\n>>  For a proposed hard fork to reach a level of consensus necessary to be\n>> safe requires that there be a clear and self evident course of action.\n>>\n>\n> Safety increases with more lead-in time.  If the reference client was\n> updated so that the hard fork happened in two years, it would be pretty\n> safe.  Miners would have time to update.\n>\n> If miners (or the community) objected, it is sort of like a game of\n> chicken.\n>\n> This is one of the problems with not making decisions in advance, the\n> resulting hard fork is inherently safer.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/f4b14ff9/attachment.html>"
            },
            {
                "author": "Owen Gunden",
                "date": "2015-06-26T20:44:07",
                "message_text_only": "On 06/26/2015 02:23 PM, Jeff Garzik wrote:\n> Failure to plan now for a hard fork increase 6(?) months in the future\n> produces that lumpy, unpredictable market behavior.\n>\n> The market has baked in the years-long behavior of low fees.  From the\n> market PoV, inaction does lead to precisely that, a sudden change over\n> the span of a few months.\n\nWhich market participants are you referring to?\n\nI entered the bitcoin market with open eyes, aware that it faces hard \nscalability challenges by design. I was also aware that because of these \nchallenges, eventually transaction fees would have to rise.\n\nNevertheless, I made the decision to invest because of the utility I \ngain from the anti-censorship, privacy, control, store of value, and \nsecurity aspects of bitcoin -- many of which stem from \ndecentralization, which others have demonstrated to be linked to the \nblock size.\n\nOn the other hand, there are undoubtedly other market participants who \nheard hype about \"zero fee transactions to anywhere in the world\", \nbelieved it would scale, and made (mal)investments as a result.\n\nAs for how many market participants of each flavor, and how deep their \nrespective pockets, who knows? My experience in markets has lead me to \nrealize that it's never wise to assume I know what \"the market\" does and \ndoesn't know. If Jeff Garzik is right about what the market has priced \nin, then yes, filled blocks will be rocking the boat. But who's to say \nthat the smartest, biggest investors and traders don't already see this \nscaling problem, and have already priced it in? In this case, a sudden \nlarge increase in the block size is actually rocking the boat. The point \nis, you can't know either way, so trying to pre-empt the market in this \nway is erroneous.\n\nRegarding entrepreneurial investment specifically, why should we favor \nthe entrepreneurs who require a more centralized bitcoin over those who \nwere more considerate of the possibility of rising transaction fees when \nmaking their business models?\n\nIn my mind, we should favor neither, which is why I'm basically in \nagreement with Pieter that this sense of \"emergency\" shouldn't really be \na part of the debate.\n\nNot that I'm taking a stand on the specific block size issue either way. \nI just think this particular line of reasoning (presupposing what \ninformation the market has and has not already baked in) is unsound."
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-27T02:18:20",
                "message_text_only": "I\u2019ve been pondering this whole scale issue considerably\u2026and am left with the conclusion that blockchains are ultimately dispute resolution mechanisms. The vast majority of crypto negotiation will be taking place at levels lesser than global consensus in the future - global consensus is just far too expensive to require for every single cappuccino. There really is little need to take most cases globally\u2026unless the participants disagree. I\u2019ve commented in other places that blockchains are essentially a \u201cfix\u201d to the prisoner\u2019s dilemma - they make cooperation the equilibrium strategy.\n\nRegardless of whatever linear factor we scale the blockchain by, it is simple math to see that any exponential growth (even if for a short time) in usage will overwhelm the current network. If we ever intend to take bitcoin mainstream, we will most likely experience at least a short time of exponential growth\u2026at least until we either reach an inherent limitation or until we saturate. As Pieter said earlier, FAPP right now the demand for payments might as well be infinite. We\u2019re nowhere near the ability to service it all.\n\nThe block size issue is really a usability issue at this point. There are two fundamental things we need to solve:\n\n1) There\u2019s no model for how we\u2019ll introduce a fee market, even though the design of Bitcoin fundamentally depends on fees for its survival (at least in the current form of the design.)\n\n2) There\u2019s no mechanism for how to perform fee bidding and estimation. Most wallets simply have no way to do this without serious usability problems.\n\n\n\nIf we\u2019re going to talk about block fees, let\u2019s keep it in the context of these relevant issues and not confound it with the scalability issue\u2026these are two very different issues.\n\n\n- Eric Lombrozo\n\n\n> On Jun 26, 2015, at 1:44 PM, Owen Gunden <ogunden at phauna.org> wrote:\n> \n> On 06/26/2015 02:23 PM, Jeff Garzik wrote:\n>> Failure to plan now for a hard fork increase 6(?) months in the future\n>> produces that lumpy, unpredictable market behavior.\n>> \n>> The market has baked in the years-long behavior of low fees.  From the\n>> market PoV, inaction does lead to precisely that, a sudden change over\n>> the span of a few months.\n> \n> Which market participants are you referring to?\n> \n> I entered the bitcoin market with open eyes, aware that it faces hard scalability challenges by design. I was also aware that because of these challenges, eventually transaction fees would have to rise.\n> \n> Nevertheless, I made the decision to invest because of the utility I gain from the anti-censorship, privacy, control, store of value, and security aspects of bitcoin -- many of which stem from decentralization, which others have demonstrated to be linked to the block size.\n> \n> On the other hand, there are undoubtedly other market participants who heard hype about \"zero fee transactions to anywhere in the world\", believed it would scale, and made (mal)investments as a result.\n> \n> As for how many market participants of each flavor, and how deep their respective pockets, who knows? My experience in markets has lead me to realize that it's never wise to assume I know what \"the market\" does and doesn't know. If Jeff Garzik is right about what the market has priced in, then yes, filled blocks will be rocking the boat. But who's to say that the smartest, biggest investors and traders don't already see this scaling problem, and have already priced it in? In this case, a sudden large increase in the block size is actually rocking the boat. The point is, you can't know either way, so trying to pre-empt the market in this way is erroneous.\n> \n> Regarding entrepreneurial investment specifically, why should we favor the entrepreneurs who require a more centralized bitcoin over those who were more considerate of the possibility of rising transaction fees when making their business models?\n> \n> In my mind, we should favor neither, which is why I'm basically in agreement with Pieter that this sense of \"emergency\" shouldn't really be a part of the debate.\n> \n> Not that I'm taking a stand on the specific block size issue either way. I just think this particular line of reasoning (presupposing what information the market has and has not already baked in) is unsound.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/0d541784/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-27T02:54:37",
                "message_text_only": "I should add that a strategy of \u201clet\u2019s avoid fee pressure as much as possible. let\u2019s avoid even thinking about how we\u2019ll transition as much as possible.\u201d strikes me as at least a tad bit myopic.\n\n- Eric Lombrozo\n\n> On Jun 26, 2015, at 7:18 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n> I\u2019ve been pondering this whole scale issue considerably\u2026and am left with the conclusion that blockchains are ultimately dispute resolution mechanisms. The vast majority of crypto negotiation will be taking place at levels lesser than global consensus in the future - global consensus is just far too expensive to require for every single cappuccino. There really is little need to take most cases globally\u2026unless the participants disagree. I\u2019ve commented in other places that blockchains are essentially a \u201cfix\u201d to the prisoner\u2019s dilemma - they make cooperation the equilibrium strategy.\n> \n> Regardless of whatever linear factor we scale the blockchain by, it is simple math to see that any exponential growth (even if for a short time) in usage will overwhelm the current network. If we ever intend to take bitcoin mainstream, we will most likely experience at least a short time of exponential growth\u2026at least until we either reach an inherent limitation or until we saturate. As Pieter said earlier, FAPP right now the demand for payments might as well be infinite. We\u2019re nowhere near the ability to service it all.\n> \n> The block size issue is really a usability issue at this point. There are two fundamental things we need to solve:\n> \n> 1) There\u2019s no model for how we\u2019ll introduce a fee market, even though the design of Bitcoin fundamentally depends on fees for its survival (at least in the current form of the design.)\n> \n> 2) There\u2019s no mechanism for how to perform fee bidding and estimation. Most wallets simply have no way to do this without serious usability problems.\n> \n> \n> \n> If we\u2019re going to talk about block fees, let\u2019s keep it in the context of these relevant issues and not confound it with the scalability issue\u2026these are two very different issues.\n> \n> \n> - Eric Lombrozo\n> \n> \n>> On Jun 26, 2015, at 1:44 PM, Owen Gunden <ogunden at phauna.org> wrote:\n>> \n>> On 06/26/2015 02:23 PM, Jeff Garzik wrote:\n>>> Failure to plan now for a hard fork increase 6(?) months in the future\n>>> produces that lumpy, unpredictable market behavior.\n>>> \n>>> The market has baked in the years-long behavior of low fees.  From the\n>>> market PoV, inaction does lead to precisely that, a sudden change over\n>>> the span of a few months.\n>> \n>> Which market participants are you referring to?\n>> \n>> I entered the bitcoin market with open eyes, aware that it faces hard scalability challenges by design. I was also aware that because of these challenges, eventually transaction fees would have to rise.\n>> \n>> Nevertheless, I made the decision to invest because of the utility I gain from the anti-censorship, privacy, control, store of value, and security aspects of bitcoin -- many of which stem from decentralization, which others have demonstrated to be linked to the block size.\n>> \n>> On the other hand, there are undoubtedly other market participants who heard hype about \"zero fee transactions to anywhere in the world\", believed it would scale, and made (mal)investments as a result.\n>> \n>> As for how many market participants of each flavor, and how deep their respective pockets, who knows? My experience in markets has lead me to realize that it's never wise to assume I know what \"the market\" does and doesn't know. If Jeff Garzik is right about what the market has priced in, then yes, filled blocks will be rocking the boat. But who's to say that the smartest, biggest investors and traders don't already see this scaling problem, and have already priced it in? In this case, a sudden large increase in the block size is actually rocking the boat. The point is, you can't know either way, so trying to pre-empt the market in this way is erroneous.\n>> \n>> Regarding entrepreneurial investment specifically, why should we favor the entrepreneurs who require a more centralized bitcoin over those who were more considerate of the possibility of rising transaction fees when making their business models?\n>> \n>> In my mind, we should favor neither, which is why I'm basically in agreement with Pieter that this sense of \"emergency\" shouldn't really be a part of the debate.\n>> \n>> Not that I'm taking a stand on the specific block size issue either way. I just think this particular line of reasoning (presupposing what information the market has and has not already baked in) is unsound.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/3e1b7436/attachment.sig>"
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-27T08:16:27",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nYes, Eric, blockchains are a means of mathematically determining\nconsensus among those who use them. The application goes beyond value\ntoken into the realm of vote and deterministic politics. Eventually,\nblockchains will allows citizens to choose state projects and to\ncontribute taxes according to their ability, and to benefit according\nto their need.\n\nEconomic Participants\nThe dichotomy of the mining operator as an economic class on one hand\nand the user as a dependent on the other is based on the current\nKeynesian model of economics that views the centralized as inevitable\nand the citizen as a consumer to be enlisted into spending at every\nopportunity.\n\nSchools of Thought\nAlthough not a definitive answer, the Austrian School of Economics\nillustrates that the Keynesian model (which we all harbor to some\ndegree, thanks to its global hegemony) is fundamentally flawed:\nhttps://www.youtube.com/watch?v=SLfnpwHu4Hw (Of all the resources\navailable, this speaker is most succinct, although I cannot vouch for\nhis degree of Frankfurt School compliance or potential Zionist\nleanings - the account conforms to academic agreement of what the\nAustrian School of Economics stands for).\n\nDevelopers are, by necessity, making economic decisions\nIf the developers will seize this moment of having to make economic\ndecisions about how Bitcoin will be influenced and grow according to\nmarket dynamics, they should make an informed decision (only the\ndevelopers can make the decision at this time), they should strive to\nmake a well-informed decision - not some fumbled\n\"hurry-the-blocksize-is-running-out\" decision. Pieter Wuille argues\nthe point convincingly in his initial post.\n\nFulcrum\nThe fundamental question to be answered here is: Do developers want to\ncompete with existing payment networks, or do developers want to\ndefine Bitcoin's network in its own right?\n\nIf Bitcoin must compete and win, then centralize it and it will soon\nbeat the competition on every metric.\n\nIf Bitcoin is its own beast, then users and finance capital must adapt\nto its constraints, for the benefit of all involved.\n\nDevelopers have a crucial role to play in implementing economic\npolicy. It's not self-evident: a multinational or government sponsored\nentity mining this blockchain with the purpose of dominating it does\nnot mean you have done your job of surrendering Bitcoin to the \"free\nmarket\".\n\n\nThe decision rests on your informed understanding of economics (and\nmyths about economics) and choosing the way that liberates Bitcoin and\nits users, and does not co-opt them into a system that seeks to devour\ncompetition. Talk about making Bitcoin more compliant to finance\ncapital business is counter-Bitcoin and speakers harboring this\nopinion have come to dominate discussion here. If increased business\nand user adoption truly increased value, you would see it in the price\nchart. What has ignorant, fashion-prone mainstreet adoption done for\nBitcoin? Will it really do something else, as some posters claim, or\nwill it do more of the same?\n\nVenzen Khaosan\n\n\n\nOn 06/27/2015 09:18 AM, Eric Lombrozo wrote:\n> I\u2019ve been pondering this whole scale issue considerably\u2026and am left\n> with the conclusion that blockchains are ultimately dispute\n> resolution mechanisms. The vast majority of crypto negotiation will\n> be taking place at levels lesser than global consensus in the\n> future - global consensus is just far too expensive to require for\n> every single cappuccino. There really is little need to take most\n> cases globally\u2026unless the participants disagree. I\u2019ve commented in\n> other places that blockchains are essentially a \u201cfix\u201d to the\n> prisoner\u2019s dilemma - they make cooperation the equilibrium\n> strategy.\n> \n> Regardless of whatever linear factor we scale the blockchain by, it\n> is simple math to see that any exponential growth (even if for a\n> short time) in usage will overwhelm the current network. If we ever\n> intend to take bitcoin mainstream, we will most likely experience\n> at least a short time of exponential growth\u2026at least until we\n> either reach an inherent limitation or until we saturate. As Pieter\n> said earlier, FAPP right now the demand for payments might as well\n> be infinite. We\u2019re nowhere near the ability to service it all.\n> \n> The block size issue is really a usability issue at this point.\n> There are two fundamental things we need to solve:\n> \n> 1) There\u2019s no model for how we\u2019ll introduce a fee market, even\n> though the design of Bitcoin fundamentally depends on fees for its\n> survival (at least in the current form of the design.)\n> \n> 2) There\u2019s no mechanism for how to perform fee bidding and\n> estimation. Most wallets simply have no way to do this without\n> serious usability problems.\n> \n> \n> \n> If we\u2019re going to talk about block fees, let\u2019s keep it in the\n> context of these relevant issues and not confound it with the\n> scalability issue\u2026these are two very different issues.\n> \n> \n> - Eric Lombrozo\n> \n> \n>> On Jun 26, 2015, at 1:44 PM, Owen Gunden <ogunden at phauna.org>\n>> wrote:\n>> \n>> On 06/26/2015 02:23 PM, Jeff Garzik wrote:\n>>> Failure to plan now for a hard fork increase 6(?) months in the\n>>> future produces that lumpy, unpredictable market behavior.\n>>> \n>>> The market has baked in the years-long behavior of low fees.\n>>> From the market PoV, inaction does lead to precisely that, a\n>>> sudden change over the span of a few months.\n>> \n>> Which market participants are you referring to?\n>> \n>> I entered the bitcoin market with open eyes, aware that it faces\n>> hard scalability challenges by design. I was also aware that\n>> because of these challenges, eventually transaction fees would\n>> have to rise.\n>> \n>> Nevertheless, I made the decision to invest because of the\n>> utility I gain from the anti-censorship, privacy, control, store\n>> of value, and security aspects of bitcoin -- many of which stem\n>> from decentralization, which others have demonstrated to be\n>> linked to the block size.\n>> \n>> On the other hand, there are undoubtedly other market\n>> participants who heard hype about \"zero fee transactions to\n>> anywhere in the world\", believed it would scale, and made\n>> (mal)investments as a result.\n>> \n>> As for how many market participants of each flavor, and how deep\n>> their respective pockets, who knows? My experience in markets has\n>> lead me to realize that it's never wise to assume I know what\n>> \"the market\" does and doesn't know. If Jeff Garzik is right about\n>> what the market has priced in, then yes, filled blocks will be\n>> rocking the boat. But who's to say that the smartest, biggest\n>> investors and traders don't already see this scaling problem, and\n>> have already priced it in? In this case, a sudden large increase\n>> in the block size is actually rocking the boat. The point is, you\n>> can't know either way, so trying to pre-empt the market in this\n>> way is erroneous.\n>> \n>> Regarding entrepreneurial investment specifically, why should we\n>> favor the entrepreneurs who require a more centralized bitcoin\n>> over those who were more considerate of the possibility of rising\n>> transaction fees when making their business models?\n>> \n>> In my mind, we should favor neither, which is why I'm basically\n>> in agreement with Pieter that this sense of \"emergency\" shouldn't\n>> really be a part of the debate.\n>> \n>> Not that I'm taking a stand on the specific block size issue\n>> either way. I just think this particular line of reasoning\n>> (presupposing what information the market has and has not already\n>> baked in) is unsound. \n>> _______________________________________________ bitcoin-dev\n>> mailing list bitcoin-dev at lists.linuxfoundation.org \n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVjlvYAAoJEGwAhlQc8H1malgH/jKkN27KpNecMQPcSZ+RX/s8\nUDIvrqIsNesWUtwnWk1/2WcaoDA8V9ho42VPXmDgGh0GTmYKzKnBUuKPeIBfe1z+\nXCtG7OeWRAlo+1Zk+dT8Crv/PEHocpy7q2OFW2iOapWfTEYO/1FTA58RYMYSmKXQ\n0snm3QhVIdJA3/3BE12616y0+Oo2aV3H9El6buqQVge/26Z8X8TLIsY5h8dQbTBF\n+J9Kq1YdJc8ogANZBpZfZBnURmNRsolyvQ+Sb5SxnpPQz73X3QPGaTyjnNsE0oVX\nOccxx6BREN/byoelIS5HMRsEYExmALIisXTiM1kysKzbcYp+ysB6Uzvyp1GzbFg=\n=PE+q\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Alex Morcos",
                "date": "2015-06-26T18:29:51",
                "message_text_only": "I think thats the crux of the issue: \"some uses fit, some don't\".\nI don't think anyone can claim to know which fall in which category for\nsure.  But its clear that with the existing technology, achieving\ndecentralization and lack of trusted third parties is expensive, therefore\nI think it does the world a disservice to pretend everyone can put their\nmicrotransactions on the block chain.\nMore importantly, I don't think I'm worried about economic policy or change\nat all.  I'm worried about decentralization.  That's the piece we should be\nconcentrating on.  Sure a bitcoin with giant blocks could probably serve a\nbunch more use cases, but what value would it provide if there are 10\ncentralized miners and processing nodes running the network.  We'll beat\nout Apple Pay or Paypal or Google at their game?  Who cares.\n\n\n\n\nOn Fri, Jun 26, 2015 at 2:12 PM, Pieter Wuille <pieter.wuille at gmail.com>\nwrote:\n\n> I am not saying that economic change is what we want. Only that it is\n> inevitable, independent of whether larger blocks happen or not.\n>\n> I am saying that acting because of fear of economic change is a bad\n> reason. The reason for increase should be because of the higher utility. We\n> need it at some point, but there should be no rush.\n>\n> I do understand that we want to avoid a *sudden* change in economic\n> policy, but I'm generally not too worried. Either fees increase and they\n> get paid, and we're good. But more likely is that some uses just move\n> off-chain because the block chain does not offer what they need. That's\n> sad, but it is inevitable at any size: some uses fit, some don't.\n>\n> --\n> Pieter\n>  On Jun 26, 2015 7:57 PM, \"Jeff Garzik\" <jgarzik at gmail.com> wrote:\n>\n>> It is not \"fear\" of fee pressure.\n>>\n>> 1) Blocks are mostly not-full on average.\n>>\n>> 2) Absent long blocks and stress tests, there is little fee pressure\n>> above the anti-spam relay fee metric, because of #1.\n>>\n>> 3) As such, inducing fee pressure is a delta, a change from years-long\n>> bitcoin economic policy.  Each time we approach the soft limit, Bitcoin\n>> Core increases the soft limit to prevent \"full\" blocks.  Mike Hearn et. al.\n>> lobbies miners to upgrade.\n>>\n>> (note - this is not an endorsement of these actions - it is a neutral\n>> observation)\n>>\n>> 4) Inaction leads to consistent fee pressure as the months tick on and\n>> system volume grows; thus, inaction leads to economic policy change.\n>>\n>> 5) Economic policy change leads to market and software disruption.  The\n>> market and software - notably wallets - is not prepared for this.\n>>\n>> 6) If you want to change economic policy, that's fine.  But be honest and\n>> admit you are arguing for a change, a delta from current market\n>> expectations and behavior.\n>>\n>> 7) It is critical to first deal with what _is_, not what you wish the\n>> world to be.  You want a fee market to develop.  There is nothing wrong\n>> with that desire.  It remains a delta from where we are today, and that is\n>> critically relevant in a $3b+ market.\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>> On Fri, Jun 26, 2015 at 7:09 AM, Pieter Wuille <pieter.wuille at gmail.com>\n>> wrote:\n>>\n>>> Hello all,\n>>>\n>>> here I'm going to try to address a part of the block size debate which\n>>> has been troubling me since the beginning: the reason why people seem to\n>>> want it.\n>>>\n>>> People say that larger blocks are necessary. In the long term, I agree -\n>>> in the sense that systems that do not evolve tend to be replaced by other\n>>> systems. This evolution can come in terms of layers on top of Bitcoin's\n>>> blockchain, in terms of the technology underlying various aspects of the\n>>> blockchain itself, and also in the scale that this technology supports.\n>>>\n>>> I do, however, fundamentally disagree that a fear for a change in\n>>> economics should be considered to necessitate larger blocks. If it is, and\n>>> there is consensus that we should adapt to it, then there is effectively no\n>>> limit going forward. This is similar to how Congress voting to increase the\n>>> copyright term retroactively from time to time is really no different from\n>>> having an infinite copyright term in the first place. This scares me.\n>>>\n>>> Here is how Gavin summarizes the future without increasing block sizes\n>>> in PR 6341:\n>>>\n>>> > 1. Transaction confirmation times for transactions with a given fee\n>>> will rise; very-low-fee transactions will fail to get confirmed at all.\n>>> > 2. Average transaction fee paid will rise\n>>> > 3. People or applications unwilling or unable to pay the rising fees\n>>> will stop submitting transactions\n>>> > 4. People and businesses will shelve plans to use Bitcoin, stunting\n>>> growth and adoption\n>>>\n>>> Is it fair to summarize this as \"Some use cases won't fit any more,\n>>> people will decide to no longer use the blockchain for these purposes, and\n>>> the fees will adapt.\"?\n>>>\n>>> I think that is already happening, and will happen at any scale. I\n>>> believe demand for payments in general is nearly infinite, and only a small\n>>> portion of it will eventually fit on a block chain (independent of whether\n>>> its size is limited by consensus rules or economic or technological means).\n>>> Furthermore, systems that compete with Bitcoin in this space already offer\n>>> orders of magnitude more capacity than we can reasonably achieve with any\n>>> blockchain technology at this point.\n>>>\n>>> I don't know what subset of use cases Bitcoin will cater to in the long\n>>> term. They have already changed - you see way less betting transactions\n>>> these days than a few years ago for example - and they will keep changing,\n>>> independent of what effective block sizes we end up with. I don't think we\n>>> should be afraid of this change or try to stop it.\n>>>\n>>> If you look at graphs of block sizes over time (for example,\n>>> http://rusty.ozlabs.org/?p=498), it seems to me that there is very\n>>> little \"organic\" growth, and a lot of sudden changes (which could\n>>> correspond to changing defaults in miner software, introduction of popular\n>>> sites/services, changes in the economy). I think these can be seen as the\n>>> economy changing to full up the available space, and I believe these will\n>>> keep happening at any size effectively available.\n>>>\n>>> None of this is a reason why the size can't increase. However, in my\n>>> opinion, we should do it because we believe it increases utility and\n>>> understand the risks; not because we're afraid of what might happen if we\n>>> don't hurry up. And from that point of view, it seems silly to make a huge\n>>> increase at once...\n>>>\n>>> --\n>>> Pieter\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150626/70106007/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-27T07:43:00",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn Fri, Jun 26, 2015 at 04:09:18PM +0200, Pieter Wuille wrote:\n\n> People say that larger blocks are necessary. In the long term, I agree - in\n> the sense that systems that do not evolve tend to be replaced by other\n> systems. This evolution can come in terms of layers on top of Bitcoin's\n> blockchain, in terms of the technology underlying various aspects of the\n> blockchain itself, and also in the scale that this technology supports.\n> \n> I do, however, fundamentally disagree that a fear for a change in economics\n> should be considered to necessitate larger blocks. If it is, and there is\n> consensus that we should adapt to it, then there is effectively no limit\n> going forward. This is similar to how Congress voting to increase the\n> copyright term retroactively from time to time is really no different from\n> having an infinite copyright term in the first place. This scares me.\n\nFully agree Pieter. Couldn't have stated it better.\n\nIt has been disappointing and scary to see political pressure tactics being used to change a distributed consensus system. \n\nBy using the system everyone agreed on one set of consensus rules, that was the \"social contract\" of Bitcoin. To me, the consensus rules are more like rules of physics than laws. They cannot be changed willy-nilly according to needs of some groups, much less than lower gravity can be legislated to help the airline industry.\n\nIt is shocking to hear wide misunderstanding that it is supposedly 'the developers' that decide on such changes. As if this is merely a private top-down project. No, the point was that this can continue without any kind of central guidance, with expected stability. As a developer I work on improving the technical aspects and fixing bugs, not on 'governing' it.\nBy expecting a few developers to make controversial decisions you are breaking the expectations, as well as making life dangerous for those developers. I'll jump ship before being forced to merge an even remotely controversial hardfork.\n\nThe stressful conditions of last weeks have thus made me hostile toward the idea of hardforks. At least to hardforks that make politically loaded changes. In this case further centralization to well-connected geographic locales by increasing network bandwidth requirements.\n\nResiliency and decentralization are the key aspects. I would not want to risk breaking the system, or at least wildly changing its properties and applicability out of perceived necessity, and fear.\n\nWladimir\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBCgAGBQJVjlOMAAoJEHSBCwEjRsmmveAH+wWN6j+0LsLibl2XWs3hxs64\nnOT63JMNEIYzSsxZkEkzU4AWsdPG8TWXeaYhaR5rd7pXspFHHFYpPNxyOAWB4nY9\nyS9eI4JRkOLtZY+rulFppkvnpggL82MFcT5rMNom+S1+EKE6C1NFqXl+OzZqatWL\npysza7ZHg/d3hKWkm/JtlfTYTOgrxFIX6INghfQiOl2hEyXE5iZF8+CRnZQA4dG7\njr/Jn2H4EzkUF8SDYVkIYsX+hPL5ib9mMm12ZXH8M8lFkdwweJCwbA7tVtNoalG3\ndzHb/8rotlqiDTNuLIlB7TE4maivcr2cXVKTfry6HBRJvNf0cD3oP67vCQj6iis=\n=pipo\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "NxtChg",
                "date": "2015-06-27T09:55:01",
                "message_text_only": "On 6/27/2015 at 10:43 AM, \"Wladimir J. van der Laan\" <laanwj at gmail.com> wrote:\n\n> It has been disappointing and scary to see political pressure tactics being used to change a distributed consensus system. \n\nThat's why some people are advocating formalizing the process. Political pressure will happen anyway, whether somebody likes it or not. It's better to deal with it in the open.\n\n\n> They cannot be changed willy-nilly according to needs of some groups, much less than lower gravity can be legislated to help the airline industry.\n\nExcept the block size is not gravity. It's more like an arbitrary decision to limit planes' wingspan to the most typical hangar door of 1940.\n\nAnd now we have a \"controversy\" that we can't have modern planes out of the fear they won't fit into some of the old hangars. \n\nAnd to continue with this nice example, some people are even arguing that \"the demand for flight is, essentially, limitless, so why bother making larger jets at all?\""
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-27T10:04:01",
                "message_text_only": "On Sat, Jun 27, 2015 at 12:55:01PM +0300, NxtChg wrote:\n> \n> > They cannot be changed willy-nilly according to needs of some groups, much less than lower gravity can be legislated to help the airline industry.\n> \n> Except the block size is not gravity. It's more like an arbitrary decision to limit planes' wingspan to the most typical hangar door of 1940.\n> \n> And now we have a \"controversy\" that we can't have modern planes out of the fear they won't fit into some of the old hangars. \n> \n> And to continue with this nice example, some people are even arguing that \"the demand for flight is, essentially, limitless, so why bother making larger jets at all?\"\n\nAt least there's always an 'exit' option. At this point it would be more realistic to create a sidechain, or altcoin with larger blocks, and not experiment with the current one in-flight. Then you won't risk the other 'passengers' who don't consent to it.\n\nIt's important to face reality instead of being wishful here. I'd also have preferred to have one happy family, but it is clear that is not the case, and pretending is only going to cause damage by creating false expectations, or eventually even double-spending possibility because of conflicting forks.\n\nWladimir"
            },
            {
                "author": "NxtChg",
                "date": "2015-06-27T10:29:11",
                "message_text_only": "On 6/27/2015 at 1:04 PM, \"Wladimir J. van der Laan\" <laanwj at gmail.com> wrote:\n\n> Then you won't risk the other 'passengers' who don't consent to it.\n\nBut you can look at it the other way: what about risking the 'passengers' when the plane suddenly doesn't fly anymore? \n\nIncreasing block limit increases the risk of centralization, but it also keeps the current status quo of blocks not being filled, rather then risking an unknown option of hitting the limit hard.\n \n\n>... and pretending is only going to cause damage by creating false expectations, or eventually even double-spending possibility because of conflicting forks.\n\nSo you personally see the risks of a hard-fork outweigh the risks of not increasing the block size.\n\nIt's a valid opinion, but you probably don't want to decide the fate of Bitcoin single-handedly by denying any change, which is not a technical emergency.\n\nThat's why there should be a mechanism where the whole community can vote. Lacking that, that's what Gavin and Mike are doing: creating their own mechanism for consensus changes."
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-27T11:04:24",
                "message_text_only": "On Sat, Jun 27, 2015 at 12:29 PM, NxtChg <nxtchg at hush.com> wrote:\n>\n> On 6/27/2015 at 1:04 PM, \"Wladimir J. van der Laan\" <laanwj at gmail.com> wrote:\n>\n>> Then you won't risk the other 'passengers' who don't consent to it.\n>\n> But you can look at it the other way: what about risking the 'passengers' when the plane suddenly doesn't fly anymore?\n>\n> Increasing block limit increases the risk of centralization, but it also keeps the current status quo of blocks not being filled, rather then risking an unknown option of hitting the limit hard.\n\nBut that option is not unknown, that's the point of this thread.\n\"Doing nothing\" would require to fix the mempool to scale with the\nnumber of unconfirmed transaction. This is something that we will\neventually have to fix unless the plan is to eventually remove the\nblocksize limit.\nWhat will happen with full blocks is that fees will likely rise and\nthe transactions with bigger fees will get confirmed first. This is\nsomething that will eventually happen unless the blocksize limit is\nremoved before ever being hit.\nWhat this thread is saying is that this option (the so-called \"doing\nnothing\" option, which actually requires more work than any of the\ncurrent proposals for increasing the blocksize) is perfectly valid,\nwhich is in contradiction to a perceived \"need to increase the\nblocksize limit soon\". Increasing the block size is only an option,\nnot a \"need\". And changing the consensus rules and forcing everybody\nto adapt their software to the changes is certainly not \"maintaining\nthe status quo\", I'm getting tired of hearing that absurd notion."
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-27T11:18:33",
                "message_text_only": "The economic policy\u2019s status quo has been to avoid fee pressure. But the consensus status quo obviously is not to have a hard fork.\n\nThere\u2019s clearly a contradiction between these two policies, which is a big part of the reason this issue has come to this point. These two policies are fundamentally at odds.\n\n- Eric Lombrozo\n\n> On Jun 27, 2015, at 4:04 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n> \n> On Sat, Jun 27, 2015 at 12:29 PM, NxtChg <nxtchg at hush.com> wrote:\n>> \n>> On 6/27/2015 at 1:04 PM, \"Wladimir J. van der Laan\" <laanwj at gmail.com> wrote:\n>> \n>>> Then you won't risk the other 'passengers' who don't consent to it.\n>> \n>> But you can look at it the other way: what about risking the 'passengers' when the plane suddenly doesn't fly anymore?\n>> \n>> Increasing block limit increases the risk of centralization, but it also keeps the current status quo of blocks not being filled, rather then risking an unknown option of hitting the limit hard.\n> \n> But that option is not unknown, that's the point of this thread.\n> \"Doing nothing\" would require to fix the mempool to scale with the\n> number of unconfirmed transaction. This is something that we will\n> eventually have to fix unless the plan is to eventually remove the\n> blocksize limit.\n> What will happen with full blocks is that fees will likely rise and\n> the transactions with bigger fees will get confirmed first. This is\n> something that will eventually happen unless the blocksize limit is\n> removed before ever being hit.\n> What this thread is saying is that this option (the so-called \"doing\n> nothing\" option, which actually requires more work than any of the\n> current proposals for increasing the blocksize) is perfectly valid,\n> which is in contradiction to a perceived \"need to increase the\n> blocksize limit soon\". Increasing the block size is only an option,\n> not a \"need\". And changing the consensus rules and forcing everybody\n> to adapt their software to the changes is certainly not \"maintaining\n> the status quo\", I'm getting tired of hearing that absurd notion.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/8faed6e6/attachment-0001.sig>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-27T11:43:55",
                "message_text_only": "On Sat, Jun 27, 2015 at 1:18 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> The economic policy\u2019s status quo has been to avoid fee pressure. But the consensus status quo obviously is not to have a hard fork.\n>\n> There\u2019s clearly a contradiction between these two policies, which is a big part of the reason this issue has come to this point. These two policies are fundamentally at odds.\n\nOk, so then the decision is to either change a policy or change a\nconsensus rule and then maintaining the status quo is simply not\npossible.\nSince per-node and per-wallet policies weren't universal anyway\n(nobody can be forced to run the standard policy), making some changes\nto the policy code of the different implementations that weren't\nprepared for the current consensus rules (that includes bitcoin core)\nseems orders of magnitude closer to \"maintaining the status quo\" than\na hardfork.\nIt's interesting to note that increasing the blocksize without fixing\nthe underlying problems that make it a perceived \"need\" will leave the\nimplementations unprepared for the new rules too (it is just\nunprepared for ANY block size limit, not specifically unprepared for\n1MB blocks).\nSo increasing the block size is actually the \"lazy option\" regardless\nof how the \"doing nothing option\" is perceived by many uninformed\nparticipants in the discussions.\nThen I guess by \"maintaining the status quo\" some people just mean\n\"not fixing the known problems we have yet, leave it for later\". Not\nonly some people propose to delay solving this problems: they don't\neven want to be forced to fix them in 20 years!\nThat...or they just want to remove the block size limit entirely\nforever, don't fear centralization, and are not being clear about it."
            },
            {
                "author": "NxtChg",
                "date": "2015-06-27T12:10:15",
                "message_text_only": "On 6/27/2015 at 2:04 PM, \"Jorge Tim\u00f3n\" <jtimon at jtimon.cc> wrote:\n\n>But that option is not unknown...\n\nIt is, until it actually happens. Before that, anything is a speculation. That's why risk is attached to both \"doing nothing\" and \"raising the limit\".\n\nFor example, there's another risk that a lot of people will be disappointed in a system that can't scale (or adapt to any significant changes, for that matter).\n\nYes, there is the \"exit\" option, but that path would probably be a lot messier and unwarranted.\n\nVarious people perceive these risks differently and there is no clear mechanism currently to somehow gauge what the majority wants. So it's tempting to just give up and say: let's do nothing.\n\nIn this situation, doing a \"software fork\" seems like the only way to actually see how many people/interests are in favor of bigger blocks.\n\n(Whether the majority has a moral right to dictate the minority is a tough philosophical question, which should probably be left out of this discussion :)"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T12:13:52",
                "message_text_only": "On Sat, Jun 27, 2015 at 2:10 PM, NxtChg <nxtchg at hush.com> wrote:\n>\n> On 6/27/2015 at 2:04 PM, \"Jorge Tim\u00f3n\" <jtimon at jtimon.cc> wrote:\n>\n>>But that option is not unknown...\n>\n> It is, until it actually happens. Before that, anything is a speculation. That's why risk is attached to both \"doing nothing\" and \"raising the limit\".\n\nFortunately we have a lower limit in the standard mining policy to see\nif the skies turn purple when we hit that limit like some people\npredict.\n\n> Various people perceive these risks differently and there is no clear mechanism currently to somehow gauge what the majority wants. So it's tempting to just give up and say: let's do nothing.\n>\n> In this situation, doing a \"software fork\" seems like the only way to actually see how many people/interests are in favor of bigger blocks.\n\nBut this is NOT a way to see the majority of anything. I can run 1000\nnodes, have you heard of sybil attacks?\nThere's simply no decentralized way of voting that works. Otherwise we\ncould vote on each block instead of using proof of work.\nMiners voting on size is also ridiculous since big miners have an\nincentive to completely remove the limit and make smaller miners\nunprofitable.\n\n> (Whether the majority has a moral right to dictate the minority is a tough philosophical question, which should probably be left out of this discussion :)\n\nNo, this is very important. The majority has no right to dictate on\nthe minority.\nIf the majority of bitcoiners wanted demurrage (and we actually had a\nworking method for \"measuring majorities\"), the minority would still\nsay \"these are not the rules we signed up for, go make freicoin as a\nseparate chain\".\nAnd that is very reasonable. If some people want a more centralized\nversion of Bitcoin they can create an altcoin too. Doesn't dogecoin\nalready have big blocks?"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-28T13:51:48",
                "message_text_only": "On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n\n>\n> No, this is very important. The majority has no right to dictate on\n> the minority.\n>\n\nWhile an interesting philosophical question, I don't think that this is\naccurate. First off, bitcoin doesn't imbue  any 'rights' on individuals -\nit provides the choice of participating or not, nothing more.\n\nSecondly, from a technical perspective, how is it that the majority (or\nsuper-majority) are prevented from imposing their will? The best answer is\nthat they are incentivized to not override a minority group since that\nreduces the inherent value in the system. However, presuming that the\nmajority calculate that the reward for imposing a change is greater than\nthe value lost in such disruption, I don't see how there would be any\nstopping this change. The longest chain with the greatest number of users\nvaluing the token on that chain \"wins\".\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/0d76c58a/attachment.html>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-28T14:13:13",
                "message_text_only": "Either one branch wins overwhelmingly in a relatively short period of time\u2026or both branches lose, I think.\n\n- Eric\n\n> On Jun 28, 2015, at 6:51 AM, Ivan Brightly <ibrightly at gmail.com> wrote:\n> \n> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc <mailto:jtimon at jtimon.cc>> wrote:\n> \n> No, this is very important. The majority has no right to dictate on\n> the minority.\n> \n> While an interesting philosophical question, I don't think that this is accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals - it provides the choice of participating or not, nothing more.\n> \n> Secondly, from a technical perspective, how is it that the majority (or super-majority) are prevented from imposing their will? The best answer is that they are incentivized to not override a minority group since that reduces the inherent value in the system. However, presuming that the majority calculate that the reward for imposing a change is greater than the value lost in such disruption, I don't see how there would be any stopping this change. The longest chain with the greatest number of users valuing the token on that chain \"wins\".\n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/6def6860/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/6def6860/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-28T14:16:01",
                "message_text_only": "Furthermore, the actual way in which the conflict is resolved sets a precedent for how such disagreements are to be \u201cresolved\u201d in the future.\n\nSo the means are also important to consider.\n\n- Eric\n\n> On Jun 28, 2015, at 6:51 AM, Ivan Brightly <ibrightly at gmail.com> wrote:\n> \n> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc <mailto:jtimon at jtimon.cc>> wrote:\n> \n> No, this is very important. The majority has no right to dictate on\n> the minority.\n> \n> While an interesting philosophical question, I don't think that this is accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals - it provides the choice of participating or not, nothing more.\n> \n> Secondly, from a technical perspective, how is it that the majority (or super-majority) are prevented from imposing their will? The best answer is that they are incentivized to not override a minority group since that reduces the inherent value in the system. However, presuming that the majority calculate that the reward for imposing a change is greater than the value lost in such disruption, I don't see how there would be any stopping this change. The longest chain with the greatest number of users valuing the token on that chain \"wins\".\n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/739cefdc/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/739cefdc/attachment.sig>"
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-28T14:22:26",
                "message_text_only": "Agreed on both accounts. The main point is that there are no inherent\nrights built into bitcoin - just aligned economic interests enforced by\nagreed upon technical rules. The technical rules allow for a majority to\ndictate, while the economic interests may or may not support such a change.\n\nOn Sun, Jun 28, 2015 at 10:16 AM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Furthermore, the actual way in which the conflict is resolved sets a\n> precedent for how such disagreements are to be \u201cresolved\u201d in the future.\n>\n> So the means are also important to consider.\n>\n> - Eric\n>\n> On Jun 28, 2015, at 6:51 AM, Ivan Brightly <ibrightly at gmail.com> wrote:\n>\n> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n>\n>>\n>> No, this is very important. The majority has no right to dictate on\n>> the minority.\n>>\n>\n> While an interesting philosophical question, I don't think that this is\n> accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals -\n> it provides the choice of participating or not, nothing more.\n>\n> Secondly, from a technical perspective, how is it that the majority (or\n> super-majority) are prevented from imposing their will? The best answer is\n> that they are incentivized to not override a minority group since that\n> reduces the inherent value in the system. However, presuming that the\n> majority calculate that the reward for imposing a change is greater than\n> the value lost in such disruption, I don't see how there would be any\n> stopping this change. The longest chain with the greatest number of users\n> valuing the token on that chain \"wins\".\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/c4445eb6/attachment-0001.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T15:05:49",
                "message_text_only": "On Sun, Jun 28, 2015 at 3:51 PM, Ivan Brightly <ibrightly at gmail.com> wrote:\n> On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n>>\n>>\n>> No, this is very important. The majority has no right to dictate on\n>> the minority.\n>\n>\n> While an interesting philosophical question, I don't think that this is\n> accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals - it\n> provides the choice of participating or not, nothing more.\n\nI think you're not contradicting me: ff there's not rights built into\nthe system, the majority has no \"right to dictate\" anything."
            },
            {
                "author": "Ivan Brightly",
                "date": "2015-06-28T16:01:31",
                "message_text_only": "I don't think that rights are a pillar of how bitcoin works - rather I\nwould say it's a matter of aligned incentives. The fact is that the\nmajority technically *can* dictate through PoW and acceptance. The only\nreason that the majority would not chose this path is because there is\ngreater economic value in consensus, whether perceived or realized.\n\nIf bitcoin were about \"doing the right thing\" there wouldn't be a need for\nPoW since no individual would be incentivized to double spend.\n\nOn Sun, Jun 28, 2015 at 11:05 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n\n> On Sun, Jun 28, 2015 at 3:51 PM, Ivan Brightly <ibrightly at gmail.com>\n> wrote:\n> > On Sun, Jun 28, 2015 at 8:13 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n> >>\n> >>\n> >> No, this is very important. The majority has no right to dictate on\n> >> the minority.\n> >\n> >\n> > While an interesting philosophical question, I don't think that this is\n> > accurate. First off, bitcoin doesn't imbue  any 'rights' on individuals\n> - it\n> > provides the choice of participating or not, nothing more.\n>\n> I think you're not contradicting me: ff there's not rights built into\n> the system, the majority has no \"right to dictate\" anything.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a57d5395/attachment.html>"
            },
            {
                "author": "s7r",
                "date": "2015-06-28T15:28:41",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n+1 for this  Jorge.\nAgreed the majority should not be able to enforce rules over the\nminority. But if the majority will just leave and create an altcoin or\nwhatever, this will leave the remaining minority with a less value (or\neven 0 value) product or service. By enforcing some rules agreed by\nthe majority or supermajority, the minority will be dragged along and\neven so with rules they haven't signed up for, they will still have a\nproduct or service which is worth something.\n\nThat is why we have to be very careful into deciding this.\n\nThis debate is good, there are lots of valid points from smart people\nand I am happy to see there is so much interest in this project, and\nregardless if the blocksize hard cap will be changed or not I do hope,\nif a hardfork will happen, it will also include a smart change that\nwill allow future changes (requiring hardforks) simpler, with less\nheadache and risks involved.\n\nOn 6/28/2015 3:13 PM, Jorge Tim\u00f3n wrote:\n> On Sat, Jun 27, 2015 at 2:10 PM, NxtChg <nxtchg at hush.com> wrote:\n>> \n>> On 6/27/2015 at 2:04 PM, \"Jorge Tim\u00f3n\" <jtimon at jtimon.cc> wrote:\n>> \n>>> But that option is not unknown...\n>> \n>> It is, until it actually happens. Before that, anything is a\n>> speculation. That's why risk is attached to both \"doing nothing\"\n>> and \"raising the limit\".\n> \n> Fortunately we have a lower limit in the standard mining policy to\n> see if the skies turn purple when we hit that limit like some\n> people predict.\n> \n>> Various people perceive these risks differently and there is no\n>> clear mechanism currently to somehow gauge what the majority\n>> wants. So it's tempting to just give up and say: let's do\n>> nothing.\n>> \n>> In this situation, doing a \"software fork\" seems like the only\n>> way to actually see how many people/interests are in favor of\n>> bigger blocks.\n> \n> But this is NOT a way to see the majority of anything. I can run\n> 1000 nodes, have you heard of sybil attacks? There's simply no\n> decentralized way of voting that works. Otherwise we could vote on\n> each block instead of using proof of work. Miners voting on size is\n> also ridiculous since big miners have an incentive to completely\n> remove the limit and make smaller miners unprofitable.\n> \n>> (Whether the majority has a moral right to dictate the minority\n>> is a tough philosophical question, which should probably be left\n>> out of this discussion :)\n> \n> No, this is very important. The majority has no right to dictate\n> on the minority. If the majority of bitcoiners wanted demurrage\n> (and we actually had a working method for \"measuring majorities\"),\n> the minority would still say \"these are not the rules we signed up\n> for, go make freicoin as a separate chain\". And that is very\n> reasonable. If some people want a more centralized version of\n> Bitcoin they can create an altcoin too. Doesn't dogecoin already\n> have big blocks? _______________________________________________ \n> bitcoin-dev mailing list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.22 (MingW32)\n\niQEcBAEBCAAGBQJVkBKpAAoJEIN/pSyBJlsR4FMIAITS10rtx4Uw20WjFPkWZRB3\nucRRPncXkKehQlFd9cY6sgPAUk50rM0FSpm69Ra1KnawNLLxkgpzTGZk1iTHbGe8\nJlWoTduLOyvInVXCdM8l71TVWoyt8rDZpg1KAsaMmMi9UvstHZPGZp85XScxhYyC\nuBHv1Hm7oeszPBkjGsB9B9mF/gH8naCjcNva+XbcgsKNM681xbOeJQ9qW0GOwq+Z\nj4ocY77G8AENZkhCy2KKiJrz0ZBVDbnJAos06uKrdxhUPBwliVpyJW96aFsRp/sL\nSNqTkpSmvxgSUBHCrRoWiBf/xo06W9QeoEfoROfgFkSTcUlPWqCJHxqwOLk2VrY=\n=eUgF\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T15:45:24",
                "message_text_only": "On Sun, Jun 28, 2015 at 5:28 PM, s7r <s7r at sky-ip.org> wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA256\n>\n> +1 for this  Jorge.\n> Agreed the majority should not be able to enforce rules over the\n> minority. But if the majority will just leave and create an altcoin or\n> whatever, this will leave the remaining minority with a less value (or\n> even 0 value) product or service. By enforcing some rules agreed by\n> the majority or supermajority, the minority will be dragged along and\n> even so with rules they haven't signed up for, they will still have a\n> product or service which is worth something.\n\nIf the Schism fork goes wrong (ie 2 chains coexist in parallel for\nlong) the result may as well be that NOBODY will be left any value.\nBoth the majority and the minority can lose simultaneusly.\nSee https://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#schism1-hardforks\nThat kind of hardfork is basically like forcing the users to go to war\nagainst each other.\nReally, I don't think civil war is an exaggerated analogy.\n\n> That is why we have to be very careful into deciding this.\n>\n> This debate is good, there are lots of valid points from smart people\n> and I am happy to see there is so much interest in this project, and\n> regardless if the blocksize hard cap will be changed or not I do hope,\n> if a hardfork will happen, it will also include a smart change that\n> will allow future changes (requiring hardforks) simpler, with less\n> headache and risks involved.\n\nThat sounds great. Do you have any proposal in mind?\nI really want hardforks to be made, I just don't want to kill the\nsystem attempting it."
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-27T10:19:55",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n\nAdvocations of \"formalizing the process\" may have a good outcome, but\nthat is not the issue in the current dilemma. The present process is\ngood enough. And that's as much as we can hope for.\n\nThe issue is: does Bitcoin need to scale to business or does business\nneed to scale to Bitcoin.\n\nBusiness is not the Holy Spirit that fills Bitcoin with utility.\nBitcoin already has utility and finance capital would like to ride\nthat utility for its own profit motive. Some posters, here in this\nlist, would like to accelerate that process and they justify their\nargument with the assumption that greater adoption equals greater\nutility and value (and price).\n\nThat is a false assumption. Given the increased adoption of Bitcoin by\nusers and businesses during the past year, does the price chart\nreflect greater value or price? Of course not, the price chart is at\nterminal lows. Fact not fiction.\n\nIt is a fiction of common \"market wisdom\" that greater adoption\nincreases a commodity's value. Speculation plays with commodity value\neven when underlying fundamental value remains unchanged. China has\nverifiably been purchasing record amounts of Gold, but there is no\neffect in the price chart (or on Gold's objective value).\n\nBitcoin's price chart will go up and down many times in the coming\nyears as speculators play their game. It's independent of the\nunderlying censorship resistance, mathematical consensus and\ntransaction security of Bitcoin. Once the decentralization is\nsacrificed to big business then you can expect the final price chart low.\n\nUntil then, let's hold our horses and maintain an even keel: Bitcoin\nis not trying to fit into the manic global economy's race toward the\nedge of a precipice - Bitcoin is the solution once its all gone wrong\n- - for ordinary users, not opportunistic bank-based business models\nsuch as JPMorgan, Pantera Capital or BTC-China.\n\nIf you cannot see the inherent centralization problem with most\nso-called Bitcoin businesses you just haven't done your homework.\n\n\n\n\nOn 06/27/2015 04:55 PM, NxtChg wrote:\n> \n> On 6/27/2015 at 10:43 AM, \"Wladimir J. van der Laan\"\n> <laanwj at gmail.com> wrote:\n> \n>> It has been disappointing and scary to see political pressure\n>> tactics being used to change a distributed consensus system.\n> \n> That's why some people are advocating formalizing the process.\n> Political pressure will happen anyway, whether somebody likes it or\n> not. It's better to deal with it in the open.\n> \n> \n>> They cannot be changed willy-nilly according to needs of some\n>> groups, much less than lower gravity can be legislated to help\n>> the airline industry.\n> \n> Except the block size is not gravity. It's more like an arbitrary\n> decision to limit planes' wingspan to the most typical hangar door\n> of 1940.\n> \n> And now we have a \"controversy\" that we can't have modern planes\n> out of the fear they won't fit into some of the old hangars.\n> \n> And to continue with this nice example, some people are even\n> arguing that \"the demand for flight is, essentially, limitless, so\n> why bother making larger jets at all?\"\n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVjnjHAAoJEGwAhlQc8H1m7CMH/273H3C7tnL56jJZ6U9RMbSN\ndp2dPLusMJAvjWKiM/P5VjbcXnvARFuA3foIkzlxGdt2mvGlddW+b2x9YVZcDAZz\nk9V/IccOmVVEvIpfaP0Awe6H9H8+Gr1PpFWuaFExcem9T9bF6kVGV4o0g6EGzwVe\nrGJb0radm2qdWTKvUNvjXAF3kGRtoewFmTZBwyE6R6AxE7tvs/4Zvsf99+EQsD+o\n3NZFlXX0gvPmaR7TWK0iOGlgns9MmKMm94xk8lHkESvW0NCMwTw6I0Pz74usPDte\nU0lWkZBoKFWkEuf6ChVOOoSdSbYFrOwa0uaiJtPWJB+9TiwZdZbDJumW3uqYG5M=\n=4vVg\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-27T19:55:27",
                "message_text_only": "On Sat, Jun 27, 2015 at 3:19 AM, Venzen Khaosan <venzen at mail.bihthai.net>\nwrote:\n\n>\n> That is a false assumption. Given the increased adoption of Bitcoin by\n> users and businesses during the past year, does the price chart\n> reflect greater value or price? Of course not, the price chart is at\n> terminal lows. Fact not fiction.\n>\n\nYou're not taking speculative cycles into account. For most of 2013 the\nprice was in the $100 range. Adoption as a store-of-value is what\ndetermines the price over the long term, as with any monetary commodity.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/5088206e/attachment-0001.html>"
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-28T16:37:18",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 06/28/2015 02:55 AM, Aaron Voisine wrote:\n> On Sat, Jun 27, 2015 at 3:19 AM, Venzen Khaosan\n> <venzen at mail.bihthai.net <mailto:venzen at mail.bihthai.net>> wrote:\n> \n> \n> That is a false assumption. Given the increased adoption of Bitcoin\n> by users and businesses during the past year, does the price chart \n> reflect greater value or price? Of course not, the price chart is\n> at terminal lows. Fact not fiction.\n> \n> \n> You're not taking speculative cycles into account. For most of 2013\n> the price was in the $100 range. Adoption as a store-of-value is\n> what determines the price over the long term, as with any monetary\n> commodity.\n\nAaron, I am most definitely taking speculative cycles into account - I\nwrite Bitcoin market analysis reports on a daily basis.\n\nSince discussion is exploring notions of \"value\" and assumptions about\n\"what increases value\" I will post the following.\n\nYou're correct to point to the speculative influence, since Bitcoin\nhaving the fundamentals it does, and being a commodity that floats\nfreely in the market, without centralized control - plus being\nunregulated - it is a speculator's wildest dream come true. In this\ncase its exchange value (to fiat) is based on social mood and\nperception and not on underlying (fundamental) value. I think that is\nwhat you imply, too.\n\nWhat is specifically relevant to the wider discussion, is your mention\nof *Commodity Money*, because the term accurately describes a major\nfacet of Bitcoin's function and role.\n\nBitcoin's exchange rate, as a commodity money floating freely in the\nmarket, will go up and down according to speculative cycles and we\nshould conceptually separate its valuation in fiat terms, from its\nfundamental value which is: mathematical consensus, cryptographic\ntransaction security and censorship resistance, etc. These values are\ncritically reliant on Bitcoin's *degree of decentralization* for them\nto remain true and for Bitcoin to retain its meaning, and, therefore,\nits value. That is what I point out when I say \"greater adoption has\nnot reflected in the price chart\". And that may remain the case for\nevermore because the value is in the protocol, the blockchain and its\nutility and degree of decentralization, not in the chart or the size\nof the user base (however, I'm by no means proposing that the user\nbase be limited - only that it be grown with primary reference to the\nrequirements imposed by decentralization).\n\nI argue that we already know what the value of Bitcoin is. In its\ncurrent form Bitcoin most likely fulfills 80% or 90% of its eventual\nfully evolved value. Increased adoption will not strengthen the\nfundamentals, so let's proceed with scaling that will safeguard\nBitcoin's fundamental value and implement protections that ensure\nquality of decentralization.\n\nGiven the start of a new speculative cycle for Bitcoin and the\npossibility of a global liquidity crisis in the coming months or\nyears, block utilization may increase more rapidly than suggested by\ncurrent trends. Utilization may ramp up in a spike, so I agree with\nsuggestions made here for starting tests of a larger blocksize\n(2-8MB), or for speeding up blocktime (whichever is technically\npreferred).\n\nGavin Andresen has committed (if i recall correctly) to tests of 8MB\nblocks, so a different size test can be agreed by Core developers.\nOnce test data and fork outcomes can be reviewed then decision making\nhas actual parameters to proceed from.\n\nVenzen Khaosan\n\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVkCK8AAoJEGwAhlQc8H1m7c0IAKBjj3QHhBh5cqDKrVDpPsfv\nGEdmjC4CVC+OCZR5TjJ71fsbx9s/9Yh1sglKPfKmInBbgUFeLuermpTnAC+GAEq9\nrTPJgGKIIqax2vU9E8fLYrUC/uNk8wdB7PG50tQG+kOWATZOXWimy3Qi1hxOFLNI\nbWhRlwIW4tO9HTz6M1WLNyv6T1G7eaUGskW3xODgmr69/ISbG4f/uv7Yy1leEu+r\n64hwrswBkvIWeLvPJ3lkuA862HZxbLRkoehEpH3ULTUQ3bDJ1kUkSzi9Z4rwOfHG\np02hs69FVrfHckTtV7wQ4owHekiUT8hjob4V/3YrN0/qMGs4JmrxfyerfZ9GQ9o=\n=hc1s\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-28T20:56:20",
                "message_text_only": "Moving the list to BCC, since this isn't really a technical discussion.\n\nOn Sun, Jun 28, 2015 at 9:37 AM, Venzen Khaosan <venzen at mail.bihthai.net>\nwrote:\n\n>\n> Bitcoin's exchange rate, as a commodity money floating freely in the\n> market, will go up and down according to speculative cycles and we\n> should conceptually separate its valuation in fiat terms, from its\n> fundamental value which is: mathematical consensus, cryptographic\n> transaction security and censorship resistance, etc.\n\n\nI get the feeling we might be reasoning from different underlying\nassumptions, but I don't think you can separate value that way. Those\nfundamental properties were chosen to serve the goal of creating a digital\ncommodity money. They are useful only in as much as they serve ends that\npeople value. Consensus, security, censorship resistance are valuable\nbecause they are desirable properties for money to have.\n\nIf you want to argue that the properties of bitcoin are valuable for other\nthings besides money, that's fine, but those other uses presumably can be\naccomplished with tiny amounts of bitcoin, so don't appreciably increase\ndemand.\n\n\n> These values are\n> critically reliant on Bitcoin's *degree of decentralization* for them\n> to remain true and for Bitcoin to retain its meaning, and, therefore,\n> its value. That is what I point out when I say \"greater adoption has\n> not reflected in the price chart\". And that may remain the case for\n> evermore because the value is in the protocol, the blockchain and its\n> utility and degree of decentralization, not in the chart or the size\n> of the user base\n>\n\nI think it depends on what you mean by \"adoption\". Adoption as a\nstore-of-value must necessarily increase the market price given the\nrestricted and eventually fixed supply. If we're talking about merchant\nadoption as a payment system, or increased transaction volume, the yes,\nthese things have no direct impact on the price. They only impact the price\nindirectly in as much as they encourage further adoption as a\nstore-of-value.\n\n\n> I argue that we already know what the value of Bitcoin is. In its\n> current form Bitcoin most likely fulfills 80% or 90% of its eventual\n> fully evolved value. Increased adoption will not strengthen the\n> fundamentals, so let's proceed with scaling that will safeguard\n> Bitcoin's fundamental value and implement protections that ensure\n> quality of decentralization.\n>\n\nIncreased adoption does strengthen the fundamentals. The most important\nfundamental for money is how many other people standardize on the same\nmoney, and want to hold it. This drives it's price in terms of other\ncommodities. You want to hold what everyone else wants to hold.\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/1f837fbc/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-27T10:13:49",
                "message_text_only": "On Sat, Jun 27, 2015 at 9:43 AM, Wladimir J. van der Laan\n<laanwj at gmail.com> wrote:\n> By expecting a few developers to make controversial decisions you are breaking the expectations, as well as making life dangerous for those developers. I'll jump ship before being forced to merge an even remotely controversial hardfork.\n\nObviously those who claim that you or \"committers\" or \"developers\" are\nin control of the consensus rules are far from understanding this\nlife-threatening part. If you, Gavin or anyone becomes \"the president\nof bitcoin\" he will likely get killed, or kidnapped, or get his family\nkidnapped, or tortured...\n\n> The stressful conditions of last weeks have thus made me hostile toward the idea of hardforks. At least to hardforks that make politically loaded changes.\n\nI fully agree with what you've said but there's an argument I\nsympathize with: \"hardforks must be possible\". Otherwise it seems that\nthe system is \"eventually obsolete by design\".\nProvided they're also uncontroversial, they don't need to be that\ndifferent (in terms of deployment) from softforks. Since they risks\nare bigger you just need to give more time for users and alternative\nsoftware to upgrade.\nI would really like deploying an uncontroversial hardfork to prove\nnobody wants them to be impossible, as explained in:\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008936.html\n\nI hear people claiming that \"hardforks must be possible\" here and\nthere, see this example:\nhttp://www.reddit.com/r/Bitcoin/comments/3awomg/how_the_bitcoin_experiment_might_fail/csgonlm\n\n> Wladimir\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n>\n> iQEcBAEBCgAGBQJVjlOMAAoJEHSBCwEjRsmmveAH+wWN6j+0LsLibl2XWs3hxs64\n> nOT63JMNEIYzSsxZkEkzU4AWsdPG8TWXeaYhaR5rd7pXspFHHFYpPNxyOAWB4nY9\n> yS9eI4JRkOLtZY+rulFppkvnpggL82MFcT5rMNom+S1+EKE6C1NFqXl+OzZqatWL\n> pysza7ZHg/d3hKWkm/JtlfTYTOgrxFIX6INghfQiOl2hEyXE5iZF8+CRnZQA4dG7\n> jr/Jn2H4EzkUF8SDYVkIYsX+hPL5ib9mMm12ZXH8M8lFkdwweJCwbA7tVtNoalG3\n> dzHb/8rotlqiDTNuLIlB7TE4maivcr2cXVKTfry6HBRJvNf0cD3oP67vCQj6iis=\n> =pipo\n> -----END PGP SIGNATURE-----\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-27T12:09:39",
                "message_text_only": "Jorge,\n\n> Provided they're also uncontroversial, they don't need to be that\n> different (in terms of deployment) from softforks. Since they risks\n> are bigger you just need to give more time for users and alternative\n> software to upgrade.\n\nSure, most extreme: if secp256k1 or SHA256 starts to show chinks in its armor, or practical quantum computing is getting powerful enough to factor discrete logarithms of those sizes, I don't doubt everyone would go along with a proposal to add new crypto algos.\n\nI do expect there are other possible hardforks that are uncontroversial. Either\n\n- minor issues (maybe solving the time-warp issue with mining) issues planned on the long term\n- features that are not politically loaded, on the long term\n- major emergencies (anything that is clearly an 'exploit' with regard to coin holders or miners)\n\nNot sure though. The only way to find out is to propose them and see. Maybe wait a bit until things have cooled down...\n\nNote that anything non-critical and non-controversial can be planned and time-locked, say, 5 years ahead, obliviating the need for anyone to quickly upgrade their client.\n\nWladimir"
            },
            {
                "author": "NxtChg",
                "date": "2015-06-27T12:15:05",
                "message_text_only": "On 6/27/2015 at 3:09 PM, \"Wladimir J. van der Laan\" <laanwj at gmail.com> wrote:\n\n>Not sure though. The only way to find out is to propose them and see. Maybe wait a bit until things have cooled down...\n\nAnd then we are again at the mercy of a single \"decider\" to judge whether something is controversial or not?\n\nIt was pointed several times before that with enough loud minority you can make any change seem controversial."
            },
            {
                "author": "Greg Sanders",
                "date": "2015-06-27T12:17:39",
                "message_text_only": "https://en.wikipedia.org/wiki/I_know_it_when_I_see_it\n\nCan we agree n-1 dev Nacks would be a controversial hard fork?\n\nGreg\n\nOn Sat, Jun 27, 2015 at 8:15 AM, NxtChg <nxtchg at hush.com> wrote:\n\n>\n> On 6/27/2015 at 3:09 PM, \"Wladimir J. van der Laan\" <laanwj at gmail.com>\n> wrote:\n>\n> >Not sure though. The only way to find out is to propose them and see.\n> Maybe wait a bit until things have cooled down...\n>\n> And then we are again at the mercy of a single \"decider\" to judge whether\n> something is controversial or not?\n>\n> It was pointed several times before that with enough loud minority you can\n> make any change seem controversial.\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/2575fbf2/attachment.html>"
            },
            {
                "author": "NxtChg",
                "date": "2015-06-27T12:25:58",
                "message_text_only": "On 6/27/2015 at 3:18 PM, \"Greg Sanders\" <gsanders87 at gmail.com> wrote:\n\n>Can we agree n-1 dev Nacks would be a controversial hard fork?\n\nThat requires an assumption that all developers are perfectly representing the whole community.\n\nAnd no shady lobbying behind the scenes too."
            },
            {
                "author": "Greg Sanders",
                "date": "2015-06-27T12:35:54",
                "message_text_only": ">That requires an assumption that all developers are perfectly representing\nthe whole community.\n\nI'll take that as a \"no\". But it's a strange bar to set: perfect\nrepresentation of entire community. By that token, nobody can say anything\nis controversial if a different group is disagreeing.\n\nGreg\n\nOn Sat, Jun 27, 2015 at 8:25 AM, NxtChg <nxtchg at hush.com> wrote:\n\n>\n> On 6/27/2015 at 3:18 PM, \"Greg Sanders\" <gsanders87 at gmail.com> wrote:\n>\n> >Can we agree n-1 dev Nacks would be a controversial hard fork?\n>\n> That requires an assumption that all developers are perfectly representing\n> the whole community.\n>\n> And no shady lobbying behind the scenes too.\n>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/a57d0719/attachment.html>"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-27T12:25:43",
                "message_text_only": "> It was pointed several times before that with enough loud minority you can make any change seem controversial.\n\nYes, absolutely. Pushing something through despite a loud miniority (certainly a well-informed one with valid reasons) is controversial.\n\nThis is not about miniorities and majorities. The *entire network* needs to agree to switch to your new software. If there are months-long heated discussions on every possible forum that is a clear sign that your change is controversial. As Greg Sanders already says, we know one when we see one...\n\nWladimir"
            },
            {
                "author": "NxtChg",
                "date": "2015-06-27T12:50:09",
                "message_text_only": "Greg,\n\n> But it's a strange bar to set: perfect representation of entire community. By that token, nobody can say anything is controversial if a different group is disagreeing.\n\nSorry, for not being clear. I am not talking definitions here, of course you can call it \"controversial\" when you get N-1 NACK's!\n\nI object that it's enough evidence to deny any change (see below). For example, in case the interests of developers became misaligned with the interests of the community (you can't say it can't happen).\n\n\nWladimir,\n\n>The *entire network* needs to agree to switch to your new software.\n\nWhy the \"entire network\"? So if, say, 75% of everybody involved want some change and 25% don't, the majority can't have it?\n\nWell, I guess we're down to that philosophical question of whether majority can dictate minority or whether minority can be a roadblock to majority :)\n\nProbably no reason to discuss it further :) A \"software fork\" seems like an inevitable resolution for this."
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-27T13:01:39",
                "message_text_only": "On Sat, Jun 27, 2015 at 03:50:09PM +0300, NxtChg wrote:\n> >The *entire network* needs to agree to switch to your new software.\n> \n> Why the \"entire network\"? So if, say, 75% of everybody involved want some change and 25% don't, the majority can't have it?\n\nYou can change your client, individually, to anything you want. You can also decide to switch along with a hypothetical percentage of others. Say, 75% of the users wants to confiscate the other 25% their coins. It is not without historical precedent.\n\nNo matter what the split is, or what it is about, the overall result will be confusion and have much less value than when there was one consensus. It's not quite Mutually Assured Destruction, but it is a very bad position to be in for everyone. So I'd dare say it shouldn't happen.\n\nBut I'm done arguing about this too.\n\nWladimir"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T12:03:43",
                "message_text_only": "On Sat, Jun 27, 2015 at 2:09 PM, Wladimir J. van der Laan\n<laanwj at gmail.com> wrote:\n> - minor issues (maybe solving the time-warp issue with mining) issues planned on the long term\n\nThis.\n\n> Note that anything non-critical and non-controversial can be planned and time-locked, say, 5 years ahead, obliviating the need for anyone to quickly upgrade their client.\n\nYes, I specificalyl say that here\nhttps://github.com/jtimon/bips/blob/bip-forks/bip-forks.org#code (just\nwith 4 years instead of 5)."
            }
        ],
        "thread_summary": {
            "title": "The need for larger blocks",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Milly Bitcoin",
                "Tier Nolan",
                "Wladimir J. van der Laan",
                "Tom Harding",
                "Peter Todd",
                "Owen Gunden",
                "Jorge Tim\u00f3n",
                "Ross Nicoll",
                "Venzen Khaosan",
                "Mark Friedenbach",
                "Aaron Voisine",
                "Greg Sanders",
                "Jeff Garzik",
                "Patrick Strateman",
                "s7r",
                "Filipe Farinha",
                "NxtChg",
                "Gavin Andresen",
                "Ivan Brightly",
                "Eric Lombrozo",
                "Alex Morcos",
                "Pieter Wuille"
            ],
            "messages_count": 61,
            "total_messages_chars_count": 156466
        }
    },
    {
        "title": "[bitcoin-dev] Upcoming DOS vulnerability announcements for Bitcoin Core",
        "thread_messages": [
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-27T06:21:03",
                "message_text_only": "On July 7th I will be making public details of several serious denial of\nservice vulnerabilities which have fixed in recent versions of Bitcoin Core,\nincluding CVE-2015-3641.\n\nI strongly recommend anyone running production nodes exposed to inbound\nconnections from the internet upgrade to 0.10.2 as soon as possible.\n\nUpgrading older systems, especially miners, is also important due to the\nBIP66 soft-fork which is about to reach enforcing status, see also:\nhttp://sourceforge.net/p/bitcoin/mailman/message/34199290/"
            },
            {
                "author": "Wladimir J. van der Laan",
                "date": "2015-06-27T07:49:47",
                "message_text_only": "On Sat, Jun 27, 2015 at 06:21:03AM +0000, Gregory Maxwell wrote:\n\n> http://sourceforge.net/p/bitcoin/mailman/message/34199290/\n\nNew archive link:\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008578.html\n\nWladimir"
            },
            {
                "author": "Thomas Pryds",
                "date": "2015-06-27T17:55:20",
                "message_text_only": "Den 27/06/2015 08.21 skrev \"Gregory Maxwell\" <gmaxwell at gmail.com>:\n\n> I strongly recommend anyone running production nodes exposed to inbound\n> connections from the internet upgrade to 0.10.2 as soon as possible.\n\nDoes anybody know when/if 0.10.2 will be available on the Ubuntu PPA?\n\nI could of course just install manually, but I like the convenience of a\nPPA.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/714248b1/attachment-0001.html>"
            },
            {
                "author": "Jameson Lopp",
                "date": "2015-06-27T18:22:01",
                "message_text_only": "According to the release notes, the 0.10.2 release only had notable changes\nfor Windows. https://bitcoin.org/en/release/v0.10.2\n\nIt's not clear that there were any vulnerability patches in 0.10.2 itself\nthat apply to Ubuntu.\n\n- Jameson\n\nOn Sat, Jun 27, 2015 at 1:55 PM, Thomas Pryds <thomas at pryds.eu> wrote:\n\n>\n> Den 27/06/2015 08.21 skrev \"Gregory Maxwell\" <gmaxwell at gmail.com>:\n>\n> > I strongly recommend anyone running production nodes exposed to inbound\n> > connections from the internet upgrade to 0.10.2 as soon as possible.\n>\n> Does anybody know when/if 0.10.2 will be available on the Ubuntu PPA?\n>\n> I could of course just install manually, but I like the convenience of a\n> PPA.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/a155746a/attachment.html>"
            },
            {
                "author": "Thomas Pryds",
                "date": "2015-06-27T20:53:51",
                "message_text_only": "Den 27/06/2015 20.22 skrev \"Jameson Lopp\" <jameson.lopp at gmail.com>:\n>\n> According to the release notes, the 0.10.2 release only had notable\nchanges for Windows. https://bitcoin.org/en/release/v0.10.2\n\nAh, makes sense, then, that the PPA doesn't carry 0.10.2. Thank you.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/9fcb4798/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Upcoming DOS vulnerability announcements for Bitcoin Core",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Jameson Lopp",
                "Thomas Pryds",
                "Gregory Maxwell",
                "Wladimir J. van der Laan"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 2826
        }
    },
    {
        "title": "[bitcoin-dev] A Proposed Compromise to the Block Size Limit",
        "thread_messages": [
            {
                "author": "Michael Naber",
                "date": "2015-06-27T14:39:51",
                "message_text_only": "Demand to participate in a low-fee global consensus network will likely\ncontinue to rise. Technology already exists to meet that rising demand\nusing a blockchain with sufficient block size. Whether that blockchain is\nBitcoin Core with an increased block size, or whether it is a fork, market\nforces make it almost certain that demand will be met by a blockchain with\nadequate capacity. These forces ensure that not only today\u2019s block size\nwill be increased, but also that future increases will occur should the\ndemand arise.\n\nIn order to survive, Bitcoin Core must remain the lowest-fee,\nhighest-capacity, most secure, distributed, fastest, overall best solution\npossible to the global consensus problem. Attempting to artificially\nconstrain the block size below the limits of technology for any reason is a\nconflict with this objective and a threat to the survival of Bitcoin Core.\nAt the same time, scheduling large future increases or permitting unlimited\ndynamic scaling of the block size limit raises concerns over availability\nof future computing resources. Instead, we should manually increase the\nblock size limit as demand occurs, except in the special case that\nincreasing the limit would cause an undue burden upon users wishing to\nvalidate the integrity of the blockchain.\n\nCompromise: Can we agree that raising the block size to a static 8MB now\nwith a plan to increase it further should demand necessitate except in the\nspecial case above is a reasonable path forward?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/5e051f1b/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T15:21:25",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 27 June 2015 10:39:51 GMT-04:00, Michael Naber <mickeybob at gmail.com> wrote:\n>Compromise: Can we agree that raising the block size to a static 8MB\n>now\n>with a plan to increase it further should demand necessitate except in\n>the\n>special case above is a reasonable path forward?\n\nIt's not a reasonable path forward right now given the lack of testing done with 8MB+ blocks, among many other problems. A way to help make that appear more reasonable would be to setup a 8MB testnet as I suggested, with two years or so of 8MB blocks in history as well as a large UTXO set to test performance characteristics.\n\nOf course, that'll be a 840GB download - if that's unreasonable you might want to ask why 8MB blocks are reasonable...\n-----BEGIN PGP SIGNATURE-----\n\niQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjr9n\nAAoJEMCF8hzn9Lnc47AIAIIwu4maaJs4pAKpK00jQnhPNIQ8LPvijD/8vvyugA1z\nOLxlRrn8zs7JPFbxWOAzK2qzT1RksSd0gbXqWm/Saqk9CAG5LBp7Oq0HAVE23XYt\n6BvyhjyhYaZjDrv+SZvlSjdl5xfpDNPMIXMi7XblKD9hm1GIUSVIYAOinOSVIy0B\nHlKyn/xc4MaO8DuzQcs0vsNMudVQFLMOLjMWz/7iv41NnB/Ujjzv/6845Z1g7Opf\nd5AfxhPHZixshqav/lF7ly7xQwSZZpoJCyFdtzCNG47EQmFYY9e22uy1KVzS7Zeo\nqYPi3KRx5+vFtHHJMDYG5EIMTwI4l/4+lY/Sd0CFWss=\n=0IOS\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Randi Joseph",
                "date": "2015-06-27T15:29:07",
                "message_text_only": "I wish you were just as prudent when you were recommending full RBF to \nmining pools.\n\nOn 6/27/15 11:21 AM, Peter Todd wrote:\n> It's not a reasonable path forward right now given the lack of testing done with 8MB+ blocks, among many other problems. A way to help make that appear more reasonable would be to setup a 8MB testnet as I suggested, with two years or so of 8MB blocks in history as well as a large UTXO set to test performance characteristics.\n\n\n-- \nRandi Joseph\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/264e693e/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T15:32:07",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 27 June 2015 11:29:07 GMT-04:00, Randi Joseph <randi at codehalo.com> wrote:\n>I wish you were just as prudent when you were recommending full RBF to\n>mining pools.\n\nYou know, if doing that is imprudent, then people are using Bitcoin in a recklessly dangerous way.\n\n-----BEGIN PGP SIGNATURE-----\n\niQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjsHq\nAAoJEMCF8hzn9Lnc47AH/1Yzl2xJhikeRG7qUmfwIkeuoXWRo9+T30Qj59ii49WU\nNsnpuo6X98p0qz1j8fUKOiY4PQZ6wZYbBg8mTB/EGM8O99Zr8JCPJW0f8l07aXfk\nJ4NGcgJGzn0CI/E11e4IJICqiLmZgfDa9I1+dNPskQlMu1QsCtju7GQboMpsMv/x\nq+Z0dFh9KJnESn8G7ULcrA9ERqu9bGPWLWYOFPcQW0GZQxTLF19Rv0j4njkWbKu6\nh2I2LQJcI2uEINRhP6FWFMqCdnaHcox1vtkpeUdVUT3IrjNqhFsXt+M43yUOZ4LU\nUsKEj04dfPTjfGpmz/DwTp694VxWCKFGfS4mxGDaxO0=\n=DFeN\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Michael Naber",
                "date": "2015-06-27T16:19:04",
                "message_text_only": "That test seems like a reasonable suggestion; 840GB is not prohibitive\ngiven today's computing costs. What other than the successful result of\nthat test would you want to see before agreeing to increase the block size\nto 8MB?\n\n\nOn Sat, Jun 27, 2015 at 11:21 AM, Peter Todd <pete at petertodd.org> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA256\n>\n>\n>\n> On 27 June 2015 10:39:51 GMT-04:00, Michael Naber <mickeybob at gmail.com>\n> wrote:\n> >Compromise: Can we agree that raising the block size to a static 8MB\n> >now\n> >with a plan to increase it further should demand necessitate except in\n> >the\n> >special case above is a reasonable path forward?\n>\n> It's not a reasonable path forward right now given the lack of testing\n> done with 8MB+ blocks, among many other problems. A way to help make that\n> appear more reasonable would be to setup a 8MB testnet as I suggested, with\n> two years or so of 8MB blocks in history as well as a large UTXO set to\n> test performance characteristics.\n>\n> Of course, that'll be a 840GB download - if that's unreasonable you might\n> want to ask why 8MB blocks are reasonable...\n> -----BEGIN PGP SIGNATURE-----\n>\n> iQE9BAEBCAAnIBxQZXRlciBUb2RkIDxwZXRlQHBldGVydG9kZC5vcmc+BQJVjr9n\n> AAoJEMCF8hzn9Lnc47AIAIIwu4maaJs4pAKpK00jQnhPNIQ8LPvijD/8vvyugA1z\n> OLxlRrn8zs7JPFbxWOAzK2qzT1RksSd0gbXqWm/Saqk9CAG5LBp7Oq0HAVE23XYt\n> 6BvyhjyhYaZjDrv+SZvlSjdl5xfpDNPMIXMi7XblKD9hm1GIUSVIYAOinOSVIy0B\n> HlKyn/xc4MaO8DuzQcs0vsNMudVQFLMOLjMWz/7iv41NnB/Ujjzv/6845Z1g7Opf\n> d5AfxhPHZixshqav/lF7ly7xQwSZZpoJCyFdtzCNG47EQmFYY9e22uy1KVzS7Zeo\n> qYPi3KRx5+vFtHHJMDYG5EIMTwI4l/4+lY/Sd0CFWss=\n> =0IOS\n> -----END PGP SIGNATURE-----\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/405bf6a8/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T17:20:11",
                "message_text_only": "On Sat, Jun 27, 2015 at 12:19:04PM -0400, Michael Naber wrote:\n> That test seems like a reasonable suggestion; 840GB is not prohibitive\n> given today's computing costs. What other than the successful result of\n> that test would you want to see before agreeing to increase the block size\n> to 8MB?\n\nThe two main things you need to show is:\n\n1) Small, anonymous, miners remain approximately as profitable as large\nminers, regardless of whether they are in the world, and even when\nminers are under attack. Remember I'm talking about mining here, not\njust hashing - the process of selling your hashpower to someone else who\nis actually doing the mining.\n\nAs for \"approximately as profitable\", based on a 10% profit margin, a 5%\nprofitability difference between a negligable ~0% hashing power miner\nand a 50% hashing power miner is a good standard here.\n\nThe hard part here is basically keeping orphan rates low, as the %5\nprofitability different on %10 profit margin implies an orphan rate of\nabout 0.5% - roughly what we have right now if not actually a bit lower.\nThat also implies blocks propagate across the network in just a few\nseconds in the worst case, where blocks are being generated with\ntransactions in them that are not already in mempools - circumventing\npropagation optimization techniques. As we're talking about small\nminers, we can't assume the miners are directly conneted to each other.\n(which itself is dangerous from an attack point of view - if they're\ndirectly connected they can be DoS attacked)\n\n2) Medium to long term plan to pay for hashing power. Without scarcity\nof blockchain space there is no reason to think that transaction fees\nwon't fall to the marginal cost of including a transaction, which\ndoesn't leave anything to pay for proof-of-work security. A proposal\nmeeting this criteria will have to be clever if you don't keep the\nblocksize sufficiently limited that transaction fees are non-negligable.\nOne possible approach - if probably politically non-viable - would be to\nchange the inflation schedule so that the currency is inflated\nindefinitely.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d8a83d28/attachment-0001.sig>"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-27T17:26:00",
                "message_text_only": "\"Thus we have a fixed capacity system where access is mediated by supply\nand demand transaction fees.\"\n\nThere is no supply and demand. That would mean users would be able to adapt\nfees and get different quality of service depending on current capacity.\nFor example if peak load is 10x average load, then at those times fees\nwould be higher and users would delay transactions to smooth out demand.\n\nOn Sat, Jun 27, 2015 at 7:20 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Sat, Jun 27, 2015 at 12:19:04PM -0400, Michael Naber wrote:\n> > That test seems like a reasonable suggestion; 840GB is not prohibitive\n> > given today's computing costs. What other than the successful result of\n> > that test would you want to see before agreeing to increase the block\n> size\n> > to 8MB?\n>\n> The two main things you need to show is:\n>\n> 1) Small, anonymous, miners remain approximately as profitable as large\n> miners, regardless of whether they are in the world, and even when\n> miners are under attack. Remember I'm talking about mining here, not\n> just hashing - the process of selling your hashpower to someone else who\n> is actually doing the mining.\n>\n> As for \"approximately as profitable\", based on a 10% profit margin, a 5%\n> profitability difference between a negligable ~0% hashing power miner\n> and a 50% hashing power miner is a good standard here.\n>\n> The hard part here is basically keeping orphan rates low, as the %5\n> profitability different on %10 profit margin implies an orphan rate of\n> about 0.5% - roughly what we have right now if not actually a bit lower.\n> That also implies blocks propagate across the network in just a few\n> seconds in the worst case, where blocks are being generated with\n> transactions in them that are not already in mempools - circumventing\n> propagation optimization techniques. As we're talking about small\n> miners, we can't assume the miners are directly conneted to each other.\n> (which itself is dangerous from an attack point of view - if they're\n> directly connected they can be DoS attacked)\n>\n> 2) Medium to long term plan to pay for hashing power. Without scarcity\n> of blockchain space there is no reason to think that transaction fees\n> won't fall to the marginal cost of including a transaction, which\n> doesn't leave anything to pay for proof-of-work security. A proposal\n> meeting this criteria will have to be clever if you don't keep the\n> blocksize sufficiently limited that transaction fees are non-negligable.\n> One possible approach - if probably politically non-viable - would be to\n> change the inflation schedule so that the currency is inflated\n> indefinitely.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/df971066/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T17:37:24",
                "message_text_only": "On Sat, Jun 27, 2015 at 07:26:00PM +0200, Benjamin wrote:\n> \"Thus we have a fixed capacity system where access is mediated by supply\n> and demand transaction fees.\"\n> \n> There is no supply and demand. That would mean users would be able to adapt\n> fees and get different quality of service depending on current capacity.\n> For example if peak load is 10x average load, then at those times fees\n> would be higher and users would delay transactions to smooth out demand.\n\nThat's exactly how Bitcoin works already. See my article on how\ntransaction fees work for more details:\n\nhttps://gist.github.com/petertodd/8e87c782bdf342ef18fb\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d3b5043c/attachment-0001.sig>"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-27T17:46:55",
                "message_text_only": "There is no ensured Quality of service, is there? If you \"bid\" higher, then\nyou don't know what you are going to get. Also because you have no way of\nknowing what *others* are bidding. Only if you have auctions (increasing\nincrements) you can establish a feedback loop to settle demand and supply.\nAnd the supply side doesn't adapt. Adapting supply would help resolve parts\nof the capacity problem.\n\nOn Sat, Jun 27, 2015 at 7:37 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Sat, Jun 27, 2015 at 07:26:00PM +0200, Benjamin wrote:\n> > \"Thus we have a fixed capacity system where access is mediated by supply\n> > and demand transaction fees.\"\n> >\n> > There is no supply and demand. That would mean users would be able to\n> adapt\n> > fees and get different quality of service depending on current capacity.\n> > For example if peak load is 10x average load, then at those times fees\n> > would be higher and users would delay transactions to smooth out demand.\n>\n> That's exactly how Bitcoin works already. See my article on how\n> transaction fees work for more details:\n>\n> https://gist.github.com/petertodd/8e87c782bdf342ef18fb\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/4f0abdd8/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T17:54:28",
                "message_text_only": "On Sat, Jun 27, 2015 at 07:46:55PM +0200, Benjamin wrote:\n> There is no ensured Quality of service, is there? If you \"bid\" higher, then\n> you don't know what you are going to get. Also because you have no way of\n> knowing what *others* are bidding. Only if you have auctions (increasing\n> increments) you can establish a feedback loop to settle demand and supply.\n> And the supply side doesn't adapt. Adapting supply would help resolve parts\n> of the capacity problem.\n\nThere's lots of markets where there is no assured quality of service,\nand where the bids others are making aren't known. Most financial\nmarkets work that way - there's only ever probabalistic guarantees that\nfor a given amount of money you'll be able to buy a certain amount of\ngold at any given time for instance. Similarly for nearly all\ncommodities the infrastructure required to mine those commodities has\nvery little room for short, medium, or even long-term production\nincreases, so whatever the production supply is at a given time is\npretty much fixed.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d4bccafb/attachment.sig>"
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-27T17:58:59",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nVery interesting point and comparison. So the fee market is unknown,\nsimilar to a market maker's orderbook - except in the case of Bitcoin\nit is not being deliberately hidden from users, its just not knowable\nhow miners are positioning at any given moment.\n\n\nOn 06/28/2015 12:54 AM, Peter Todd wrote:\n> On Sat, Jun 27, 2015 at 07:46:55PM +0200, Benjamin wrote:\n>> There is no ensured Quality of service, is there? If you \"bid\"\n>> higher, then you don't know what you are going to get. Also\n>> because you have no way of knowing what *others* are bidding.\n>> Only if you have auctions (increasing increments) you can\n>> establish a feedback loop to settle demand and supply. And the\n>> supply side doesn't adapt. Adapting supply would help resolve\n>> parts of the capacity problem.\n> \n> There's lots of markets where there is no assured quality of\n> service, and where the bids others are making aren't known. Most\n> financial markets work that way - there's only ever probabalistic\n> guarantees that for a given amount of money you'll be able to buy a\n> certain amount of gold at any given time for instance. Similarly\n> for nearly all commodities the infrastructure required to mine\n> those commodities has very little room for short, medium, or even\n> long-term production increases, so whatever the production supply\n> is at a given time is pretty much fixed.\n> \n> \n> \n> _______________________________________________ bitcoin-dev mailing\n> list bitcoin-dev at lists.linuxfoundation.org \n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVjuRiAAoJEGwAhlQc8H1mjnwIAIiUSPf6agfMXsFgupoihsTV\nPr1mJWHdLjrF5QadmdyooivYGPkY+zmfJ+N3fkr8l++PDGh03u0RgALf/gwJSSAQ\nqSeMmjSZb8ZEkyLlZAGVHT8Ph+lRda65CVxYspKu/54TolqEezOHVaon9uWYVjtB\ncSd8fWoqJMq05Pz25QPagxFUpXmtFX1KvxUWqeGkRsuqMgeWbCurQKpOhRXu48nH\nSi73iOIyDUT9i1WsPvlpOi0pSxDlGnkMQKaEyIN5JJfKo1imRAtKVRLZh43rXpSW\njeZf8LMRwd49K4vnvHXZ0UbKWhpelh6XJari22citZ7yb5w5iENAcoP/cSGhLaY=\n=nfF5\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-27T19:34:16",
                "message_text_only": "On Sat, Jun 27, 2015 at 7:54 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Sat, Jun 27, 2015 at 07:46:55PM +0200, Benjamin wrote:\n> > There is no ensured Quality of service, is there? If you \"bid\" higher,\n> then\n> > you don't know what you are going to get. Also because you have no way of\n> > knowing what *others* are bidding. Only if you have auctions (increasing\n> > increments) you can establish a feedback loop to settle demand and\n> supply.\n> > And the supply side doesn't adapt. Adapting supply would help resolve\n> parts\n> > of the capacity problem.\n>\n> There's lots of markets where there is no assured quality of service,\n> and where the bids others are making aren't known. Most financial\n> markets work that way - there's only ever probabalistic guarantees that\n> for a given amount of money you'll be able to buy a certain amount of\n> gold at any given time for instance. Similarly for nearly all\n> commodities the infrastructure required to mine those commodities has\n> very little room for short, medium, or even long-term production\n> increases, so whatever the production supply is at a given time is\n> pretty much fixed.\n>\n\n\nhmm? if the current ask for 1 ounce of gold is 100$, then you need to bid\n100$ to get 1 ounce of gold. If tomorrow everyone agree 1ounce of gold\nshould be worth 200$, then the bid moves accordingly. of course production\nchanges based on prices. otherwise the economy would not function. if price\nof some stuff goes up, more people produce that stuff. in terms of a price\nfor a transaction and the use of a blockchain, unfortunately there is not a\nway to just add computational supply. that's an inherent weakness of how\nblockchains are structured. ideally it would be as simple as demanding more\nresources as in scaling a webservices with AWS.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/ef46ab91/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-27T15:33:11",
                "message_text_only": "Michael Naber wrote:\n> Bitcoin Core must remain the lowest-fee, highest-capacity, most secure, distributed, fastest, overall best solution possible to the global consensus problem.\n\nEveryone here is excited about the potential of Bitcoin and would\naspirationally like it to reach its full potential as fast as\npossible.  But the block-size is not a free variable, half those\nparameters you listed are in conflict with each other.  We're trying\nto improve both decentralisation and throughput short-term while\npeople work on algorithmic improvements mid-term.  If you are\ninterested you can take a look through the proposals:\n\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008603.html\n\nNote that probably 99% of Bitcoin transactions already happen\noff-chain in exchanges, tipping services, hosted wallets etc.  Maybe\nyou're already using them, assuming you are a bitcoin user.\nThey constitute an early stage layer 2, some of them even have on\nchain netting and scale faster than the block-chain.\n\nYou can also read about layer 2, the lightning network paper and the\nduplex micropayment channel paper:\n\nhttp://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\nhttp://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n\nand read the development list and look at the code:\n\nhttp://lists.linuxfoundation.org/pipermail/lightning-dev/\nhttps://github.com/ElementsProject/lightning\n\nAdam\n\n\nOn 27 June 2015 at 16:39, Michael Naber <mickeybob at gmail.com> wrote:\n> Demand to participate in a low-fee global consensus network will likely\n> continue to rise. Technology already exists to meet that rising demand using\n> a blockchain with sufficient block size. Whether that blockchain is Bitcoin\n> Core with an increased block size, or whether it is a fork, market forces\n> make it almost certain that demand will be met by a blockchain with adequate\n> capacity. These forces ensure that not only today\u2019s block size will be\n> increased, but also that future increases will occur should the demand\n> arise.\n>\n> In order to survive, Bitcoin Core must remain the lowest-fee,\n> highest-capacity, most secure, distributed, fastest, overall best solution\n> possible to the global consensus problem. Attempting to artificially\n> constrain the block size below the limits of technology for any reason is a\n> conflict with this objective and a threat to the survival of Bitcoin Core.\n> At the same time, scheduling large future increases or permitting unlimited\n> dynamic scaling of the block size limit raises concerns over availability of\n> future computing resources. Instead, we should manually increase the block\n> size limit as demand occurs, except in the special case that increasing the\n> limit would cause an undue burden upon users wishing to validate the\n> integrity of the blockchain.\n>\n> Compromise: Can we agree that raising the block size to a static 8MB now\n> with a plan to increase it further should demand necessitate except in the\n> special case above is a reasonable path forward?\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Michael Naber",
                "date": "2015-06-27T16:09:16",
                "message_text_only": "The goal of Bitcoin Core is to meet the demand for global consensus as\neffectively as possible. Please let's keep the conversation on how to best\nmeet that goal.\n\nThe off-chain solutions you enumerate are are useful solutions in their\nrespective domains, but none of them solves the global consensus problem\nwith any greater efficiency than Bitcoin does.\n\n\nOn Sat, Jun 27, 2015 at 11:33 AM, Adam Back <adam at cypherspace.org> wrote:\n\n> Michael Naber wrote:\n> > Bitcoin Core must remain the lowest-fee, highest-capacity, most secure,\n> distributed, fastest, overall best solution possible to the global\n> consensus problem.\n>\n> Everyone here is excited about the potential of Bitcoin and would\n> aspirationally like it to reach its full potential as fast as\n> possible.  But the block-size is not a free variable, half those\n> parameters you listed are in conflict with each other.  We're trying\n> to improve both decentralisation and throughput short-term while\n> people work on algorithmic improvements mid-term.  If you are\n> interested you can take a look through the proposals:\n>\n>\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008603.html\n>\n> Note that probably 99% of Bitcoin transactions already happen\n> off-chain in exchanges, tipping services, hosted wallets etc.  Maybe\n> you're already using them, assuming you are a bitcoin user.\n> They constitute an early stage layer 2, some of them even have on\n> chain netting and scale faster than the block-chain.\n>\n> You can also read about layer 2, the lightning network paper and the\n> duplex micropayment channel paper:\n>\n> http://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\n>\n> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n>\n> and read the development list and look at the code:\n>\n> http://lists.linuxfoundation.org/pipermail/lightning-dev/\n> https://github.com/ElementsProject/lightning\n>\n> Adam\n>\n>\n> On 27 June 2015 at 16:39, Michael Naber <mickeybob at gmail.com> wrote:\n> > Demand to participate in a low-fee global consensus network will likely\n> > continue to rise. Technology already exists to meet that rising demand\n> using\n> > a blockchain with sufficient block size. Whether that blockchain is\n> Bitcoin\n> > Core with an increased block size, or whether it is a fork, market forces\n> > make it almost certain that demand will be met by a blockchain with\n> adequate\n> > capacity. These forces ensure that not only today\u2019s block size will be\n> > increased, but also that future increases will occur should the demand\n> > arise.\n> >\n> > In order to survive, Bitcoin Core must remain the lowest-fee,\n> > highest-capacity, most secure, distributed, fastest, overall best\n> solution\n> > possible to the global consensus problem. Attempting to artificially\n> > constrain the block size below the limits of technology for any reason\n> is a\n> > conflict with this objective and a threat to the survival of Bitcoin\n> Core.\n> > At the same time, scheduling large future increases or permitting\n> unlimited\n> > dynamic scaling of the block size limit raises concerns over\n> availability of\n> > future computing resources. Instead, we should manually increase the\n> block\n> > size limit as demand occurs, except in the special case that increasing\n> the\n> > limit would cause an undue burden upon users wishing to validate the\n> > integrity of the blockchain.\n> >\n> > Compromise: Can we agree that raising the block size to a static 8MB now\n> > with a plan to increase it further should demand necessitate except in\n> the\n> > special case above is a reasonable path forward?\n> >\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/ec2e5cfc/attachment-0001.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-27T16:28:26",
                "message_text_only": "I really suggest you look into the layer2 systems Adam pointed to, as you\nappear to be misinformed about their properties. There are many proposals\nwhich really do achieve global consensus using the block chain, just in a\ndelayed (and cached) fashion that is still 100% safe.\n\nIt is possible to go off-chain without losing the trustlessness and\nsecurity of the block chain.\n\nOn Sat, Jun 27, 2015 at 9:09 AM, Michael Naber <mickeybob at gmail.com> wrote:\n\n> The goal of Bitcoin Core is to meet the demand for global consensus as\n> effectively as possible. Please let's keep the conversation on how to best\n> meet that goal.\n>\n> The off-chain solutions you enumerate are are useful solutions in their\n> respective domains, but none of them solves the global consensus problem\n> with any greater efficiency than Bitcoin does.\n>\n>\n> On Sat, Jun 27, 2015 at 11:33 AM, Adam Back <adam at cypherspace.org> wrote:\n>\n>> Michael Naber wrote:\n>> > Bitcoin Core must remain the lowest-fee, highest-capacity, most secure,\n>> distributed, fastest, overall best solution possible to the global\n>> consensus problem.\n>>\n>> Everyone here is excited about the potential of Bitcoin and would\n>> aspirationally like it to reach its full potential as fast as\n>> possible.  But the block-size is not a free variable, half those\n>> parameters you listed are in conflict with each other.  We're trying\n>> to improve both decentralisation and throughput short-term while\n>> people work on algorithmic improvements mid-term.  If you are\n>> interested you can take a look through the proposals:\n>>\n>>\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008603.html\n>>\n>> Note that probably 99% of Bitcoin transactions already happen\n>> off-chain in exchanges, tipping services, hosted wallets etc.  Maybe\n>> you're already using them, assuming you are a bitcoin user.\n>> They constitute an early stage layer 2, some of them even have on\n>> chain netting and scale faster than the block-chain.\n>>\n>> You can also read about layer 2, the lightning network paper and the\n>> duplex micropayment channel paper:\n>>\n>> http://lightning.network/lightning-network-paper-DRAFT-0.5.pdf\n>>\n>> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n>>\n>> and read the development list and look at the code:\n>>\n>> http://lists.linuxfoundation.org/pipermail/lightning-dev/\n>> https://github.com/ElementsProject/lightning\n>>\n>> Adam\n>>\n>>\n>> On 27 June 2015 at 16:39, Michael Naber <mickeybob at gmail.com> wrote:\n>> > Demand to participate in a low-fee global consensus network will likely\n>> > continue to rise. Technology already exists to meet that rising demand\n>> using\n>> > a blockchain with sufficient block size. Whether that blockchain is\n>> Bitcoin\n>> > Core with an increased block size, or whether it is a fork, market\n>> forces\n>> > make it almost certain that demand will be met by a blockchain with\n>> adequate\n>> > capacity. These forces ensure that not only today\u2019s block size will be\n>> > increased, but also that future increases will occur should the demand\n>> > arise.\n>> >\n>> > In order to survive, Bitcoin Core must remain the lowest-fee,\n>> > highest-capacity, most secure, distributed, fastest, overall best\n>> solution\n>> > possible to the global consensus problem. Attempting to artificially\n>> > constrain the block size below the limits of technology for any reason\n>> is a\n>> > conflict with this objective and a threat to the survival of Bitcoin\n>> Core.\n>> > At the same time, scheduling large future increases or permitting\n>> unlimited\n>> > dynamic scaling of the block size limit raises concerns over\n>> availability of\n>> > future computing resources. Instead, we should manually increase the\n>> block\n>> > size limit as demand occurs, except in the special case that increasing\n>> the\n>> > limit would cause an undue burden upon users wishing to validate the\n>> > integrity of the blockchain.\n>> >\n>> > Compromise: Can we agree that raising the block size to a static 8MB now\n>> > with a plan to increase it further should demand necessitate except in\n>> the\n>> > special case above is a reasonable path forward?\n>> >\n>> > _______________________________________________\n>> > bitcoin-dev mailing list\n>> > bitcoin-dev at lists.linuxfoundation.org\n>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >\n>>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/d47f275d/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T16:37:31",
                "message_text_only": "On Sat, Jun 27, 2015 at 12:09:16PM -0400, Michael Naber wrote:\n> The goal of Bitcoin Core is to meet the demand for global consensus as\n> effectively as possible. Please let's keep the conversation on how to best\n> meet that goal.\n\nKeep in mind that Andresen and Hearn both propose that the majority of\nBitcoin users, even businesses, abandon the global consensus technology\naspect of Bitcoin - running full nodes - and instead adopt trust\ntechnology instead - running SPV nodes.\n\nWe're very much focused on meeting the demand for global consensus\ntechnology, but unfortunately global consensus is also has inherently\nO(n^2) scaling with current approaches available. Thus we have a fixed\ncapacity system where access is mediated by supply and demand\ntransaction fees.\n\n> The off-chain solutions you enumerate are are useful solutions in their\n> respective domains, but none of them solves the global consensus problem\n> with any greater efficiency than Bitcoin does.\n\nSolutions like (hub-and-spoke) payment channels, Lightning, etc. allow\nusers of the global consensus technology in Bitcoin to use that\ntechnology in much more effcient ways, leveraging a relatively small\namount of global consensus to do large numbers of transactions\ntrustlessly.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/f62ccdee/attachment.sig>"
            },
            {
                "author": "Michael Naber",
                "date": "2015-06-27T17:25:14",
                "message_text_only": "Global network consensus means that there is global network recognition\nthat a particular transaction has occurred and is irreversible. The\noff-chain solutions you describe, while probably useful for other purposes,\ndo not exhibit this characteristic and so they are not global network\nconsensus networks.\n\nBitcoin Core scales as O(N), where N is the number of transactions. Can we\ndo better than this while still achieving global consensus?\n\n\nOn Sat, Jun 27, 2015 at 12:37 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Sat, Jun 27, 2015 at 12:09:16PM -0400, Michael Naber wrote:\n> > The goal of Bitcoin Core is to meet the demand for global consensus as\n> > effectively as possible. Please let's keep the conversation on how to\n> best\n> > meet that goal.\n>\n> Keep in mind that Andresen and Hearn both propose that the majority of\n> Bitcoin users, even businesses, abandon the global consensus technology\n> aspect of Bitcoin - running full nodes - and instead adopt trust\n> technology instead - running SPV nodes.\n>\n> We're very much focused on meeting the demand for global consensus\n> technology, but unfortunately global consensus is also has inherently\n> O(n^2) scaling with current approaches available. Thus we have a fixed\n> capacity system where access is mediated by supply and demand\n> transaction fees.\n>\n> > The off-chain solutions you enumerate are are useful solutions in their\n> > respective domains, but none of them solves the global consensus problem\n> > with any greater efficiency than Bitcoin does.\n>\n> Solutions like (hub-and-spoke) payment channels, Lightning, etc. allow\n> users of the global consensus technology in Bitcoin to use that\n> technology in much more effcient ways, leveraging a relatively small\n> amount of global consensus to do large numbers of transactions\n> trustlessly.\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/4fed3514/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T17:34:51",
                "message_text_only": "On Sat, Jun 27, 2015 at 01:25:14PM -0400, Michael Naber wrote:\n> Global network consensus means that there is global network recognition\n> that a particular transaction has occurred and is irreversible. The\n> off-chain solutions you describe, while probably useful for other purposes,\n> do not exhibit this characteristic and so they are not global network\n> consensus networks.\n\nHub-and-spoke payment channels and the Lightning network are not\noff-chain solutions, they are ways to more efficiently use on-chain\ntransactions to achive the goal of moving assets from point a to point\nb, resulting in more economic transactions being done with fewer - but\nnot zero! - blockchain transactions.\n\nOff-chain transaction systems such as Changetip allow economic\ntransactions to happen with no blockchain transactions at all.\n\n> Bitcoin Core scales as O(N), where N is the number of transactions. Can we\n> do better than this while still achieving global consensus?\n\nNo, Bitcoin the network scales with O(n^2) with your above criteria, as\neach node creates k transactions, thus each node has to verify k*n\ntransactions, resulting in O(n^2) total work.\n\nFor Bitcoin to have O(n) scaling you have to assume that the number of\nvalidation nodes doesn't scale with the number of users, thus resulting\nin a system where users trust others to do validation for them. That is\nnot a global consensus system; that's a trust-based system.\n\nThere's nothing inherently wrong with that, but why change Bitcoin\nitself into a trust-based system, when you can preserve the global\nconsensus functionality, and built a trust-based system on top of it?\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/7e726f75/attachment.sig>"
            },
            {
                "author": "Jameson Lopp",
                "date": "2015-06-27T18:02:05",
                "message_text_only": "On Sat, Jun 27, 2015 at 1:34 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Sat, Jun 27, 2015 at 01:25:14PM -0400, Michael Naber wrote:\n> > Global network consensus means that there is global network recognition\n> > that a particular transaction has occurred and is irreversible. The\n> > off-chain solutions you describe, while probably useful for other\n> purposes,\n> > do not exhibit this characteristic and so they are not global network\n> > consensus networks.\n>\n> Hub-and-spoke payment channels and the Lightning network are not\n> off-chain solutions, they are ways to more efficiently use on-chain\n> transactions to achive the goal of moving assets from point a to point\n> b, resulting in more economic transactions being done with fewer - but\n> not zero! - blockchain transactions.\n>\n> Off-chain transaction systems such as Changetip allow economic\n> transactions to happen with no blockchain transactions at all.\n>\n> > Bitcoin Core scales as O(N), where N is the number of transactions. Can\n> we\n> > do better than this while still achieving global consensus?\n>\n> No, Bitcoin the network scales with O(n^2) with your above criteria, as\n> each node creates k transactions, thus each node has to verify k*n\n> transactions, resulting in O(n^2) total work.\n>\n> For Bitcoin to have O(n) scaling you have to assume that the number of\n> validation nodes doesn't scale with the number of users, thus resulting\n> in a system where users trust others to do validation for them. That is\n> not a global consensus system; that's a trust-based system.\n>\n>\nWhy does it matter what the \"total work\" of the network is? Anyone who is\nparticipating as a node on the network only cares about the resources\nrequired to run their own node, not the resources everyone else needs to\nrun their nodes.\n\nAlso, no assumption needed, it is quite clear that the number of nodes is\nnot scaling along with the number of users. If anything it appears to be\ninversely proportional.\n\n\n> There's nothing inherently wrong with that, but why change Bitcoin\n> itself into a trust-based system, when you can preserve the global\n> consensus functionality, and built a trust-based system on top of it?\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/62915947/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-27T18:47:51",
                "message_text_only": "On Sat, Jun 27, 2015 at 02:02:05PM -0400, Jameson Lopp wrote:\n> > For Bitcoin to have O(n) scaling you have to assume that the number of\n> > validation nodes doesn't scale with the number of users, thus resulting\n> > in a system where users trust others to do validation for them. That is\n> > not a global consensus system; that's a trust-based system.\n> >\n> >\n> Why does it matter what the \"total work\" of the network is? Anyone who is\n> participating as a node on the network only cares about the resources\n> required to run their own node, not the resources everyone else needs to\n> run their nodes.\n> \n> Also, no assumption needed, it is quite clear that the number of nodes is\n> not scaling along with the number of users. If anything it appears to be\n> inversely proportional.\n\nWhich is a huge problem.\n\nConcretely, what O(n^2) scaling means is that the more Bitcoin is\nadopted, the harder it is to use in a decentralized way that doesn't\ntrust others; the blocksize limit puts a cap on how centralized Bitcoin\ncan get in a given technological landscape.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000007fc13ce02072d9cb2a6d51fae41fefcde7b3b283803d24\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/958e8351/attachment.sig>"
            },
            {
                "author": "Raystonn",
                "date": "2015-06-28T05:34:23",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/3f441f1e/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-28T10:07:40",
                "message_text_only": "On 28 June 2015 at 07:34, Raystonn <raystonn at hotmail.com> wrote:\n> nodes are limited to 133 connections.  This is 8 outgoing connections and\n> 125 incoming connections.  [...] Once your full node reaches 133 connections,\n> it will see no further increase in load [...] Only transaction rate will affect the\n> load on your node.\n\nThe total system cost is more relevant, or total cost per user.  I think you\nare stuck on the O( t * m ) t = tx, m = nodes thinking.  Total cost per user\nis increasing.  That better scaling algorithms need to be found.  That's why\npeople are working on lightning-like systems.\n\n> fear larger blocks based on an assumption of exponential growth of work, which just\n> isn't the case.\n\nPeople have been explaining quadratic system level increase, which is\nnot exponential,\nwrong assumption.\n\n> Decentralisation is planned to scale down once the 133 connection limit is\n> hit. Like it or not, this is the current state of the code.\n\nNo people are not assuming decentralisation would decrease.  They are assuming\nthe number of economically dependent full nodes would increase, that's where the\nO( n^2 ) comes from!  If we assume say c= 0.1% of users will run full nodes,\nand users make some small-world assumed number of transactions that doesnt\nincrease greatly as more users are added to the network, then O( t * m\n) => O( n^2 ).\n\nSeeing decentralisation failing isn't a useful direction as Bitcoin depends on\ndecentralisation for most of it's useful security properties.  People running\naround saying great lets centralise Bitcoin and scale it, are not working on\nBitcoin.  They may more usefully go work on competing systems without\nproof of work as that's where this line of reasoning ends up.  There\nare companies working on such things.  Some of them support Bitcoin IOUs.\nSome of them have job openings.\n\nWe can improve decentralisation, and use bandwidth and relay improvements\nto get some increase in throughput.  But starting a direction of simplistic\nthinking about an ever increasing block-size mode of thinking is destructive\nand not Bitcoin.  If you want to do that, you need to do it in an offchain\nsystem.  You cant build on sand so your offchain system wont be useful\nif Bitcoin doesnt have reasonable decentralisation to retain useful meaning.\nHence lightning.  There are existing layer 2 things that have on-chain netting.\nGo work on one of those.  But people need to understand the constraints\nand stop arguing to break Bitcoin to \"scale\".  It's too simplistic.\n\nEven Gavin's proposal is not trying to do that, hence reference to\nNielsen's law.\nHis parameters are too high for too long for basic safety or prudence, but the\ngeneral idea to reclaim some throughput from network advances, is reasonable.\nAlso decentralisation is key, and that is something we can improve with pooling\nprotocols to phase out the artificial centralisation.  We can also\neducate people\nto use fullnode they economically depend on to keep the full to SPV ratio\nreasonable which is also needed for security.\n\nAdam"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-28T10:29:29",
                "message_text_only": "I agree that naive scaling will likely lead to bad outcomes. They might\nhave the advantage though, as this would mean not changing Bitcoin.\n\nLevel2 and Lightning is not well defined. If you move money to a third\nparty, even if it is within the constrained of a locked contract, then I\ndon't think that will solve the issues. Blockchain does not know about\noffchain and moving between offchain and onchain requires liquidity and a\npricing mechanism. That is exactly the problem with side-chains. If you\nhave off-chain transactions on an exchange, they are ID'ed in their system,\nsubject to KYC/AML.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/489ec17d/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-28T12:37:57",
                "message_text_only": "On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:\n> I agree that naive scaling will likely lead to bad outcomes. They might have\n> the advantage though, as this would mean not changing Bitcoin.\n\nSure we can work incrementally and carefully, and this is exactly what\nBitcoin has been doing, and *must* do for safety and security for the\nlast 5 years!\nThat doesnt mean that useful serious improvements have not been made.\n\n> Level2 and Lightning is not well defined. If you move money to a third\n> party, even if it is within the constrained of a locked contract, then I\n> don't think that will solve the issues.\n\nI think you misunderstand how lightning works.  Every lightning\ntransaction *is* a valid bitcoin transaction that could be posted to\nthe Bitcoin network to reclaim funds if a hub went permanently\noffline.  It is just that while the hubs involved remain in service,\nthere is no need to do so.  This is why it has been described as a\n(write coalescing) write cache layer for Bitcoin.>\n\nI believe people expect lightning to be peer 2 peer like bitcoin.\n\nAdam"
            },
            {
                "author": "Raystonn .",
                "date": "2015-06-28T16:32:05",
                "message_text_only": "Write coalescing works fine when you have multiple writes headed to the same \n(contiguous) location.  Will lightning be useful when we have more unique \ntransactions being sent to different addresses, and not just multiple \ntransactions between the same sender and address?  I have doubts.\n\n\n-----Original Message----- \nFrom: Adam Back\nSent: Sunday, June 28, 2015 5:37 AM\nTo: Benjamin\nCc: bitcoin-dev at lists.linuxfoundation.org\nSubject: Re: [bitcoin-dev] A Proposed Compromise to the Block Size Limit\n\nOn 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:\n> I agree that naive scaling will likely lead to bad outcomes. They might \n> have\n> the advantage though, as this would mean not changing Bitcoin.\n\nSure we can work incrementally and carefully, and this is exactly what\nBitcoin has been doing, and *must* do for safety and security for the\nlast 5 years!\nThat doesnt mean that useful serious improvements have not been made.\n\n> Level2 and Lightning is not well defined. If you move money to a third\n> party, even if it is within the constrained of a locked contract, then I\n> don't think that will solve the issues.\n\nI think you misunderstand how lightning works.  Every lightning\ntransaction *is* a valid bitcoin transaction that could be posted to\nthe Bitcoin network to reclaim funds if a hub went permanently\noffline.  It is just that while the hubs involved remain in service,\nthere is no need to do so.  This is why it has been described as a\n(write coalescing) write cache layer for Bitcoin.>\n\nI believe people expect lightning to be peer 2 peer like bitcoin.\n\nAdam\n_______________________________________________\nbitcoin-dev mailing list\nbitcoin-dev at lists.linuxfoundation.org\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-28T17:12:35",
                "message_text_only": "Think in terms of participants, not addresses. A participant in the\nlightning network has a couple of connections to various hubs, from which\nthe participant is able to send or receive coin. The user is able to send\ncoins to anyone connected to the lightning network by means of an atomic\ntransaction through any path of the network. But the only payment from them\nthat ever hits the chain is their settlement with the hub.\n\nImagine there was a TCP/IP data chain and corresponding lightning network.\nEveryone connected to the network has an \"IP\" channel with their ISP.\nThrough this channel they can send data to anywhere on the network, and a\ntraceroute shows what hops the data would take. But when settlement\nactually occurs all the network sees is the net amount of data that has\ngone through each segment -- without any context. There's no record\npreserved on-chain of who sent data to whom, just that X bytes went through\nthe pipe on the way to somewhere unspecified.\n\nSo it is with lightning payment networks. You open a channel with a hub and\nthrough that channel send coins to anyone accessible to the network.\nChannels only close when a participant needs the funds for non-lightning\nreasons, or when hubs need to rebalance. And when they do, observers on the\nchain learn nothing more than how much net coin moved across that single\nlink. They learn nothing about where that coin eventually ended up.\n\nSo back to your original question, each channel can be considered to have a\npseudonymous identity, and each new channel given a new identity. Channel\nclosures can even be coinjoin'd when the other party is cooperating. But\nultimately, lightning usefully solves a problem where participants have\nsemi-long lived payment endpoints.\n\nOn Sun, Jun 28, 2015 at 9:32 AM, Raystonn . <raystonn at hotmail.com> wrote:\n\n> Write coalescing works fine when you have multiple writes headed to the\n> same (contiguous) location.  Will lightning be useful when we have more\n> unique transactions being sent to different addresses, and not just\n> multiple transactions between the same sender and address?  I have doubts.\n>\n>\n> -----Original Message----- From: Adam Back\n> Sent: Sunday, June 28, 2015 5:37 AM\n> To: Benjamin\n> Cc: bitcoin-dev at lists.linuxfoundation.org\n> Subject: Re: [bitcoin-dev] A Proposed Compromise to the Block Size Limit\n>\n>\n> On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:\n>\n>> I agree that naive scaling will likely lead to bad outcomes. They might\n>> have\n>> the advantage though, as this would mean not changing Bitcoin.\n>>\n>\n> Sure we can work incrementally and carefully, and this is exactly what\n> Bitcoin has been doing, and *must* do for safety and security for the\n> last 5 years!\n> That doesnt mean that useful serious improvements have not been made.\n>\n>  Level2 and Lightning is not well defined. If you move money to a third\n>> party, even if it is within the constrained of a locked contract, then I\n>> don't think that will solve the issues.\n>>\n>\n> I think you misunderstand how lightning works.  Every lightning\n> transaction *is* a valid bitcoin transaction that could be posted to\n> the Bitcoin network to reclaim funds if a hub went permanently\n> offline.  It is just that while the hubs involved remain in service,\n> there is no need to do so.  This is why it has been described as a\n> (write coalescing) write cache layer for Bitcoin.>\n>\n> I believe people expect lightning to be peer 2 peer like bitcoin.\n>\n> Adam\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/166bb4cb/attachment-0001.html>"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-28T17:18:03",
                "message_text_only": "\"You open a channel with a hub and through that channel send coins to\nanyone accessible to the network.\"\n\nDefine hub *precisely* and you will find there are\nsome significant problems here.\na) does everyone know each other in the network? In Bitcoin transacting\nparties exchange keys out of band. How do I know that Alice is owner of a\npubkey? I don't, and if don't know Alice I'm out of luck and can't transact\nwith here (or trust another PKI).\nb) hubs need incentives. There are not going to put up collateral just for\nnothing.\nc) how is complexity reduced? I would speculate that most transactions are\none-time transactions in the time frame of days.\n\nLT is a very interesting idea, but far from actual implementation.\n\nOn Sun, Jun 28, 2015 at 7:12 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> Think in terms of participants, not addresses. A participant in the\n> lightning network has a couple of connections to various hubs, from which\n> the participant is able to send or receive coin. The user is able to send\n> coins to anyone connected to the lightning network by means of an atomic\n> transaction through any path of the network. But the only payment from them\n> that ever hits the chain is their settlement with the hub.\n>\n> Imagine there was a TCP/IP data chain and corresponding lightning network.\n> Everyone connected to the network has an \"IP\" channel with their ISP.\n> Through this channel they can send data to anywhere on the network, and a\n> traceroute shows what hops the data would take. But when settlement\n> actually occurs all the network sees is the net amount of data that has\n> gone through each segment -- without any context. There's no record\n> preserved on-chain of who sent data to whom, just that X bytes went through\n> the pipe on the way to somewhere unspecified.\n>\n> So it is with lightning payment networks. You open a channel with a hub\n> and through that channel send coins to anyone accessible to the network.\n> Channels only close when a participant needs the funds for non-lightning\n> reasons, or when hubs need to rebalance. And when they do, observers on the\n> chain learn nothing more than how much net coin moved across that single\n> link. They learn nothing about where that coin eventually ended up.\n>\n> So back to your original question, each channel can be considered to have\n> a pseudonymous identity, and each new channel given a new identity. Channel\n> closures can even be coinjoin'd when the other party is cooperating. But\n> ultimately, lightning usefully solves a problem where participants have\n> semi-long lived payment endpoints.\n>\n> On Sun, Jun 28, 2015 at 9:32 AM, Raystonn . <raystonn at hotmail.com> wrote:\n>\n>> Write coalescing works fine when you have multiple writes headed to the\n>> same (contiguous) location.  Will lightning be useful when we have more\n>> unique transactions being sent to different addresses, and not just\n>> multiple transactions between the same sender and address?  I have doubts.\n>>\n>>\n>> -----Original Message----- From: Adam Back\n>> Sent: Sunday, June 28, 2015 5:37 AM\n>> To: Benjamin\n>> Cc: bitcoin-dev at lists.linuxfoundation.org\n>> Subject: Re: [bitcoin-dev] A Proposed Compromise to the Block Size Limit\n>>\n>>\n>> On 28 June 2015 at 12:29, Benjamin <benjamin.l.cordes at gmail.com> wrote:\n>>\n>>> I agree that naive scaling will likely lead to bad outcomes. They might\n>>> have\n>>> the advantage though, as this would mean not changing Bitcoin.\n>>>\n>>\n>> Sure we can work incrementally and carefully, and this is exactly what\n>> Bitcoin has been doing, and *must* do for safety and security for the\n>> last 5 years!\n>> That doesnt mean that useful serious improvements have not been made.\n>>\n>>  Level2 and Lightning is not well defined. If you move money to a third\n>>> party, even if it is within the constrained of a locked contract, then I\n>>> don't think that will solve the issues.\n>>>\n>>\n>> I think you misunderstand how lightning works.  Every lightning\n>> transaction *is* a valid bitcoin transaction that could be posted to\n>> the Bitcoin network to reclaim funds if a hub went permanently\n>> offline.  It is just that while the hubs involved remain in service,\n>> there is no need to do so.  This is why it has been described as a\n>> (write coalescing) write cache layer for Bitcoin.>\n>>\n>> I believe people expect lightning to be peer 2 peer like bitcoin.\n>>\n>> Adam\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/9b9af297/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-28T17:29:10",
                "message_text_only": "On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> But ultimately, lightning usefully solves a problem where participants\n> have semi-long lived payment endpoints.\n\n\nVery few of my own personal Bitcoin transactions fit that use-case.\n\nIn fact, very few of my own personal dollar transactions fit that use-case\n(I suppose if I was addicted to Starbucks I'd have one of their payment\ncards that I topped up every once in a while, which would map nicely onto a\npayment channel). I suppose I could setup a payment channel with the\ngrocery store I shop at once a week, but that would be inconvenient (I'd\nhave to pre-fund it) and bad for my privacy.\n\nI can see how payment channels would work between big financial\ninstitutions as a settlement layer, but isn't that exactly the\ncentralization concern that is making a lot of people worried about\nincreasing the max block size?\n\nAnd if there are only a dozen or two popular hubs, that's much worse\ncentralization-wise compared to a few thousand fully-validating Bitcoin\nnodes.\n\nDon't get me wrong, I think the Lightning Network is a fantastic idea and a\ngreat experiment and will likely be used for all sorts of great payment\ninnovations (micropayments for bandwidth maybe, or maybe paying workers by\nthe hour instead of at the end of the month). But I don't think it is a\nscaling solution for the types of payments the Bitcoin network is handling\ntoday.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/8b400964/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-28T17:45:58",
                "message_text_only": "Gavin, do you use a debit card or credit card? Then you do fit that use\ncase. When you buy a coffee at Starbucks, it is your bank that pays\nStarbuck's bank. So it is with micropayment hubs.\nOn Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org>\nwrote:\n\n> But ultimately, lightning usefully solves a problem where participants\n> have semi-long lived payment endpoints.\n\n\nVery few of my own personal Bitcoin transactions fit that use-case.\n\nIn fact, very few of my own personal dollar transactions fit that use-case\n(I suppose if I was addicted to Starbucks I'd have one of their payment\ncards that I topped up every once in a while, which would map nicely onto a\npayment channel). I suppose I could setup a payment channel with the\ngrocery store I shop at once a week, but that would be inconvenient (I'd\nhave to pre-fund it) and bad for my privacy.\n\nI can see how payment channels would work between big financial\ninstitutions as a settlement layer, but isn't that exactly the\ncentralization concern that is making a lot of people worried about\nincreasing the max block size?\n\nAnd if there are only a dozen or two popular hubs, that's much worse\ncentralization-wise compared to a few thousand fully-validating Bitcoin\nnodes.\n\nDon't get me wrong, I think the Lightning Network is a fantastic idea and a\ngreat experiment and will likely be used for all sorts of great payment\ninnovations (micropayments for bandwidth maybe, or maybe paying workers by\nthe hour instead of at the end of the month). But I don't think it is a\nscaling solution for the types of payments the Bitcoin network is handling\ntoday.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/d6602a6c/attachment-0001.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-28T17:51:00",
                "message_text_only": "On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org> wrote:\n> But ultimately, lightning usefully solves a problem where participants have semi-long lived payment endpoints.\n\nRecipients do benefit from keeping connections to hubs because if a\nhub goes away or a user abandons a hub that tends to generate new\non-chain traffic for balance reclaim, and new channel establishment,\nas we understand the limits so far.\n\nOn 28 June 2015 at 19:29, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> Very few of my own personal Bitcoin transactions fit that use-case.\n\nI believe Mark is talking about the one hop (direct) connections\nbenefits from being long-lived; the payment destination is not\nrestricted in the same way.  It's more like having a static IP address\nwith your ISP, that doesnt stop you reaching anywhere on the internet.\n\nSay the Lightning Network has an average fan out of 10, now subject to\ncapital and rebalancing flows in the network you can pay anyone of a\nbillion people in 9 hops.  Maybe the fanout is lumpy, with some bigger\nhubs - that just serves to reduce the number of hops.  Maybe there are\nsome capitalisation limits, that is dealt with by negative fees and\nrecirculation (more on that below) or failing that recapitalisation\non-chain. Some people assume that the hub will run out of\ncapitalisation on a given channel, however if people and hubs retain\nredundant channels they can be paid to rebalance channels, and even\nusers can be paid by other users if there is a net flow from some\nusers, to a given business eg starbucks, where the users just buy new\nBTC for USD and spend and dont earn BTC.  Rebalancing would work\nbecause the exchange where they buy new BTC would be incentivised to\npay starbucks (or whoever has excess coins on a channel) to send the\ncoins back to the users topping up by paying them negative fees,\nbecause the fees to do that should be less than using on-chain\ntransactions.\n\n> But I don't think it is a scaling solution for the types of payments the Bitcoin\n> network is handling today.\n\nActually I think it may well be able to do that very well.  We dont\nknow for sure how it will work until we see the balance and\neffectiveness of the network algorithms against usage (eg simulating\nfrom Bitcoin's historic usage say), but there's good reason to see\nthat BTC can recirculate and rebalance due to the reversible\nnon-expiring channels and capitalisation requirements can be lower\nthan simple expectation due higher velocity and redistribution of fees\nto anyone with excess liquidity and connectivity heading in the right\ndirection.\n\nAdam"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-28T18:58:55",
                "message_text_only": "This is probably going to sound impolite, but I think it's pertinent.\n\nGavin, on dwelling on the the fact that you appear to not understand\nthe basics of the lightning network, I am a little alarmed about this,\ngiven your recent proposals to unilaterally push the network into\nquite dangerous areas of game theory, to lobby companies etc.\n\nPeople are super polite and respectful around here, but this is not\nlooking good, if you don't mind me saying so.  You can't make balanced\nor informed trade-offs on block-size schedules stretching into the\nfuture, if you don't understand work that is underway, and has been\nfor months.  Lightning is a major candidate approach the rest of the\ntechnical community sees for Bitcoin to scale.\n\nLightning allows Bitcoin to scale even without a block-size increase,\nand therefore considerably impacts any calculation of how much\nblock-size is required.  In this light you appear to have been\nattempting to push through a change without even understanding the\nalternatives or greater ecosystem.\n\nAdam\n\nOn 28 June 2015 at 19:51, Adam Back <adam at cypherspace.org> wrote:\n> On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org> wrote:\n>> But ultimately, lightning usefully solves a problem where participants have semi-long lived payment endpoints.\n>\n> Recipients do benefit from keeping connections to hubs because if a\n> hub goes away or a user abandons a hub that tends to generate new\n> on-chain traffic for balance reclaim, and new channel establishment,\n> as we understand the limits so far.\n>\n> On 28 June 2015 at 19:29, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>> Very few of my own personal Bitcoin transactions fit that use-case.\n>\n> I believe Mark is talking about the one hop (direct) connections\n> benefits from being long-lived; the payment destination is not\n> restricted in the same way.  It's more like having a static IP address\n> with your ISP, that doesnt stop you reaching anywhere on the internet.\n>\n> Say the Lightning Network has an average fan out of 10, now subject to\n> capital and rebalancing flows in the network you can pay anyone of a\n> billion people in 9 hops.  Maybe the fanout is lumpy, with some bigger\n> hubs - that just serves to reduce the number of hops.  Maybe there are\n> some capitalisation limits, that is dealt with by negative fees and\n> recirculation (more on that below) or failing that recapitalisation\n> on-chain. Some people assume that the hub will run out of\n> capitalisation on a given channel, however if people and hubs retain\n> redundant channels they can be paid to rebalance channels, and even\n> users can be paid by other users if there is a net flow from some\n> users, to a given business eg starbucks, where the users just buy new\n> BTC for USD and spend and dont earn BTC.  Rebalancing would work\n> because the exchange where they buy new BTC would be incentivised to\n> pay starbucks (or whoever has excess coins on a channel) to send the\n> coins back to the users topping up by paying them negative fees,\n> because the fees to do that should be less than using on-chain\n> transactions.\n>\n>> But I don't think it is a scaling solution for the types of payments the Bitcoin\n>> network is handling today.\n>\n> Actually I think it may well be able to do that very well.  We dont\n> know for sure how it will work until we see the balance and\n> effectiveness of the network algorithms against usage (eg simulating\n> from Bitcoin's historic usage say), but there's good reason to see\n> that BTC can recirculate and rebalance due to the reversible\n> non-expiring channels and capitalisation requirements can be lower\n> than simple expectation due higher velocity and redistribution of fees\n> to anyone with excess liquidity and connectivity heading in the right\n> direction.\n>\n> Adam"
            },
            {
                "author": "Gavin Andresen",
                "date": "2015-06-28T21:05:10",
                "message_text_only": "On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:\n\n> This is probably going to sound impolite, but I think it's pertinent.\n>\n> Gavin, on dwelling on the the fact that you appear to not understand\n> the basics of the lightning network, I am a little alarmed about this\n\n\nIf I don't see how switching from using the thousands of fully-validating\nbitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in\nterms of decentralization (or security, in terms of Sybil/DoS attacks),\nthen I doubt other people do, either. You need to do a better job of\nexplaining it.\n\nBut even if you could convince me that it WAS better from a\nsecurity/decentralization point of view:\n\na) Lightning Network is nothing but a whitepaper right now. We are a long\nway from a practical implementation supported by even one wallet.\n\nb) The Lightning Network paper itself says bigger blocks will be needed\neven if (especially if!) Lightning is wildly successful.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/b1dc1232/attachment-0001.html>"
            },
            {
                "author": "Michael Naber",
                "date": "2015-06-28T21:23:51",
                "message_text_only": "Bitcoin Core exists to solve the global consensus problem. Global network\nconsensus means that there is global network recognition that a particular\ntransaction has occurred and is irreversible. Systems like hub-and-spoke,\npayment channels, Lightning, etc. are useful, but they are not solutions to\nthe global consensus problem, because they do not meet this definition of\nglobal consensus.\n\nLet us focus our efforts on the goal of making Bitcoin Core the best\nsolution to the global consensus problem. Let us address Peter Todd\u2019s\nrequirements to raise the block size limit to 8MB:\n\n1) Run a successful test-net with 8MB blocks and show that the network\nworks and small miners are not unduly disadvantaged\n\n2) Address Peter Todd's concern: \u201cwithout scarcity of blockchain space\nthere is no reason to think that transaction fees won\u2019t fall to the\nmarginal cost of including a transaction, which doesn\u2019t leave anything to\npay for proof-of-work security\u201d\n\nRegarding 1: This is not done yet, though it seems reasonable enough to do.\n\nRegarding 2: It is a fallacy to believe that artificially constraining\ncapacity of Bitcoin Core below the limits of technology will lead to\nincreased fees and therefore lead to sufficient security in the far-future.\nConstraining capacity below the limits of technology will ultimately only\ndrive users seeking global consensus to solutions other than Bitcoin Core,\nperhaps through a fork.\n\nDemand for user access to high-capacity global consensus is real, and the\ntechnology exists to deliver it; if we don't meet that demand in Bitcoin\nCore, it's inevitably going to get met through some other product. Let's\nnot let that happen. Let's keep Bitcoin Core the best solution to the\nglobal consensus problem.\n\nThoughts? Is there anything else not mentioned above which anyone would\nlike done in order to raise the block size to a static 8 MB?\n\nOn Sun, Jun 28, 2015 at 5:05 PM, Gavin Andresen <gavinandresen at gmail.com>\nwrote:\n\n> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:\n>\n>> This is probably going to sound impolite, but I think it's pertinent.\n>>\n>> Gavin, on dwelling on the the fact that you appear to not understand\n>> the basics of the lightning network, I am a little alarmed about this\n>\n>\n> If I don't see how switching from using the thousands of fully-validating\n> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in\n> terms of decentralization (or security, in terms of Sybil/DoS attacks),\n> then I doubt other people do, either. You need to do a better job of\n> explaining it.\n>\n> But even if you could convince me that it WAS better from a\n> security/decentralization point of view:\n>\n> a) Lightning Network is nothing but a whitepaper right now. We are a long\n> way from a practical implementation supported by even one wallet.\n>\n> b) The Lightning Network paper itself says bigger blocks will be needed\n> even if (especially if!) Lightning is wildly successful.\n>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/1bff0d26/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-28T22:07:11",
                "message_text_only": "On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:\n>>\n>> This is probably going to sound impolite, but I think it's pertinent.\n>>\n>> Gavin, on dwelling on the the fact that you appear to not understand\n>> the basics of the lightning network, I am a little alarmed about this\n>\n> If I don't see how switching from using the thousands of fully-validating\n> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in\n> terms of decentralization (or security, in terms of Sybil/DoS attacks),\n\nIts a source routed network, not a broadcast network.  Fees are\ncharged on channels so\nDoS is just a way to pay people a multiple of bandwidth cost.\n\nin terms of trustlessness Andrew Lapp explained it pretty well:\n> I don't mind a set of central authorities being part of an option IF the central authority\n> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have\n> to trust them to not collude with anyone to reverse your payments or destroy the trust\n> in the system in some attack. On the Lightning network, a large hub can't steal my\n> money.\n>\n> I think most people share the sentiment that trustlessness is what matters and\n> decentralization is just a synonym for trustlessness when talking about the blockchain\n> and mining, however decentralization isn't necessarily synonymous with trustlessness\n> nor is centralization synonymous with trust-requiring when you're talking about\n> something else.\n\nGavin wrote:\n> then I doubt other people do, either. You need to do a better job of explaining it.\n\nI gave it a go a couple of posts up.  I didnt realise people here\nproposing mega-blocks were not paying attention to the whole lightning\nconcept and detail.\n\nPeople said lots of things about how it's better to work on lightning,\nto scale algorithmically, rather than increasing block-size to\ndangerously centralising proportions.\nDid you think we were Gish Galloping you?  We were completely serious.\n\nThe paper is on http://lightning.network\n\nthough it is not so clearly explained there, however Joseph is working\non improving the paper as I understand it.\n\nRusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450\n\nthough I don't recall that he got into recirculation, negative fees\netc.  A good question\nfor the lightning-dev mailing list maybe.\n\nhttp://lists.linuxfoundation.org/pipermail/lightning-dev/\n\nThere are a couple of recorded presentation videos / podcasts from Joseph Poon.\n\nsf bitcoin dev presentation:\n\nhttps://www.youtube.com/watch?v=2QH5EV_Io0E\n\nepicenter bitcoin:\n\nhttps://www.youtube.com/watch?v=fBS_ieDwQ9k\n\nThere's a related paper from Christian Decker \"Duplex Micropayment Channels\"\n\nhttp://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n\n> But even if you could convince me that it WAS better from a\n> security/decentralization point of view:\n\nWe don't need to convince people, we just have to code it and\ndemonstrate it, which people are working on.\n\nBut Lightning does need a decentralised and secure Bitcoin network for\nanchor and reclaim transactions, so take it easy with the mega-blocks\nin the mean-time.\n\n> a) Lightning Network is nothing but a whitepaper right now. We are a long\n> way from a practical implementation supported by even one wallet.\n\nmaybe you want to check in on\n\nhttps://github.com/ElementsProject/lightning\n\nand help code it.\n\nI expect we can get something running inside a year.  Which kind of\nobviates the burning \"need\" for a schedule into the far future rising\nto 8GB with unrealistic bandwidth growth assumptions that will surely\ncause centralisation problems.\n\nFor block-size I think it would be better to have a 2-4 year or one\noff size bump with policy limits and then re-evaluate after we've seen\nwhat lightning can do.\n\nI have been saying the same thing ad-nauseam for weeks.\n\n> b) The Lightning Network paper itself says bigger blocks will be needed even\n> if (especially if!) Lightning is wildly successful.\n\nNot nearly as big as if you tried to put the transactions it would\nenable on the chain, that's for sure!  We dont know what that limit is\nbut people have been imagining 1,000 or 10,000 transactions per anchor\ntransaction.  If micro-payments get popular many more.\n\nBasically users would park Bitcoins a on a hub channel instead of the\nblockchain.  The channel can stay up indefinitely, and the user has\nassurances analogous to greenaddress time-lock mechanism\n\nFlexcap maybe a better solution because that allows bursting\nblock-size when economically rational.\n\nNote that the time-locks with lightning are assumed to be relative\nCTLV eg using the mechanism as Mark Friedenbach described in a post\nhere, and as implemented in the elements sidechain, so there is not a\nhuge rush to reclaim funds.  They can be spread out in time.\n\nIf you want to scale Bitcoin - like really scale it - work on\nlightning.  Lightning + a decentralised and secure Bitcoin, scales\nfurther and is more trustless than Bitcoin forced into centralisation\nvia premature mega-blocks.\n\nTo my mind a shorter, more conservative block-size increase to give a\nfew years room is enough for now.  We'll be in a better position to\nknow what the right next step is after lightning is running.\n\nSomething to mention is you can elide transactions before reclaiming.\nSo long as the balancing transaction is correct, someone online can\nswap it for you with an equal balance one with less hops of\nintermediate payment flows.\n\n\nIt's pretty interesting what you can do already.  I'm fairly confident\nwe're not finished algorithmically optimising it either.  It's\nsurprising how much new territory there is just sitting there\nunexplored.\n\nAdam"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-29T00:59:40",
                "message_text_only": "There\u2019s no question that a flooding mesh network requiring global consensus for every transactions is not the way. It\u2019s also clear that a routable protocol capable of compensating hubs is basically the holy grail.\n\nSo what\u2019s there to discuss?\n\n- Eric\n\n> On Jun 28, 2015, at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:\n> \n> On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:\n>>> \n>>> This is probably going to sound impolite, but I think it's pertinent.\n>>> \n>>> Gavin, on dwelling on the the fact that you appear to not understand\n>>> the basics of the lightning network, I am a little alarmed about this\n>> \n>> If I don't see how switching from using the thousands of fully-validating\n>> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in\n>> terms of decentralization (or security, in terms of Sybil/DoS attacks),\n> \n> Its a source routed network, not a broadcast network.  Fees are\n> charged on channels so\n> DoS is just a way to pay people a multiple of bandwidth cost.\n> \n> in terms of trustlessness Andrew Lapp explained it pretty well:\n>> I don't mind a set of central authorities being part of an option IF the central authority\n>> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have\n>> to trust them to not collude with anyone to reverse your payments or destroy the trust\n>> in the system in some attack. On the Lightning network, a large hub can't steal my\n>> money.\n>> \n>> I think most people share the sentiment that trustlessness is what matters and\n>> decentralization is just a synonym for trustlessness when talking about the blockchain\n>> and mining, however decentralization isn't necessarily synonymous with trustlessness\n>> nor is centralization synonymous with trust-requiring when you're talking about\n>> something else.\n> \n> Gavin wrote:\n>> then I doubt other people do, either. You need to do a better job of explaining it.\n> \n> I gave it a go a couple of posts up.  I didnt realise people here\n> proposing mega-blocks were not paying attention to the whole lightning\n> concept and detail.\n> \n> People said lots of things about how it's better to work on lightning,\n> to scale algorithmically, rather than increasing block-size to\n> dangerously centralising proportions.\n> Did you think we were Gish Galloping you?  We were completely serious.\n> \n> The paper is on http://lightning.network\n> \n> though it is not so clearly explained there, however Joseph is working\n> on improving the paper as I understand it.\n> \n> Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450\n> \n> though I don't recall that he got into recirculation, negative fees\n> etc.  A good question\n> for the lightning-dev mailing list maybe.\n> \n> http://lists.linuxfoundation.org/pipermail/lightning-dev/\n> \n> There are a couple of recorded presentation videos / podcasts from Joseph Poon.\n> \n> sf bitcoin dev presentation:\n> \n> https://www.youtube.com/watch?v=2QH5EV_Io0E\n> \n> epicenter bitcoin:\n> \n> https://www.youtube.com/watch?v=fBS_ieDwQ9k\n> \n> There's a related paper from Christian Decker \"Duplex Micropayment Channels\"\n> \n> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n> \n>> But even if you could convince me that it WAS better from a\n>> security/decentralization point of view:\n> \n> We don't need to convince people, we just have to code it and\n> demonstrate it, which people are working on.\n> \n> But Lightning does need a decentralised and secure Bitcoin network for\n> anchor and reclaim transactions, so take it easy with the mega-blocks\n> in the mean-time.\n> \n>> a) Lightning Network is nothing but a whitepaper right now. We are a long\n>> way from a practical implementation supported by even one wallet.\n> \n> maybe you want to check in on\n> \n> https://github.com/ElementsProject/lightning\n> \n> and help code it.\n> \n> I expect we can get something running inside a year.  Which kind of\n> obviates the burning \"need\" for a schedule into the far future rising\n> to 8GB with unrealistic bandwidth growth assumptions that will surely\n> cause centralisation problems.\n> \n> For block-size I think it would be better to have a 2-4 year or one\n> off size bump with policy limits and then re-evaluate after we've seen\n> what lightning can do.\n> \n> I have been saying the same thing ad-nauseam for weeks.\n> \n>> b) The Lightning Network paper itself says bigger blocks will be needed even\n>> if (especially if!) Lightning is wildly successful.\n> \n> Not nearly as big as if you tried to put the transactions it would\n> enable on the chain, that's for sure!  We dont know what that limit is\n> but people have been imagining 1,000 or 10,000 transactions per anchor\n> transaction.  If micro-payments get popular many more.\n> \n> Basically users would park Bitcoins a on a hub channel instead of the\n> blockchain.  The channel can stay up indefinitely, and the user has\n> assurances analogous to greenaddress time-lock mechanism\n> \n> Flexcap maybe a better solution because that allows bursting\n> block-size when economically rational.\n> \n> Note that the time-locks with lightning are assumed to be relative\n> CTLV eg using the mechanism as Mark Friedenbach described in a post\n> here, and as implemented in the elements sidechain, so there is not a\n> huge rush to reclaim funds.  They can be spread out in time.\n> \n> If you want to scale Bitcoin - like really scale it - work on\n> lightning.  Lightning + a decentralised and secure Bitcoin, scales\n> further and is more trustless than Bitcoin forced into centralisation\n> via premature mega-blocks.\n> \n> To my mind a shorter, more conservative block-size increase to give a\n> few years room is enough for now.  We'll be in a better position to\n> know what the right next step is after lightning is running.\n> \n> Something to mention is you can elide transactions before reclaiming.\n> So long as the balancing transaction is correct, someone online can\n> swap it for you with an equal balance one with less hops of\n> intermediate payment flows.\n> \n> \n> It's pretty interesting what you can do already.  I'm fairly confident\n> we're not finished algorithmically optimising it either.  It's\n> surprising how much new territory there is just sitting there\n> unexplored.\n> \n> Adam\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/acaaaf6f/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-29T01:13:29",
                "message_text_only": "The Lightning network is essentially a contract negotiation scheme that rewards cooperation. Defection amounts to either broadcasting early or not responding to signature requests. If done right, either of these situations incurs a bigger cost to the uncooperative party than cooperation. This is why I say blockchains are like a fix to the prisoner\u2019s dilemma.\n\nThe blockchain becomes essentially a dispute resolution mechanism and a way to anchor stuff. There\u2019s no use case covered by the current method of \u201cflood the entire network and confirm on blockchain\u201d that can\u2019t be covered by a method of \u201cparticipate in a contract which guarantees me payment on the blockchain if anyone is uncooperative but which rarely requires touching the blockchain\u201d methinks.\n\n\n- Eric Lombrozo\n\n\n> On Jun 28, 2015, at 3:07 PM, Adam Back <adam at cypherspace.org> wrote:\n> \n> On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:\n>>> \n>>> This is probably going to sound impolite, but I think it's pertinent.\n>>> \n>>> Gavin, on dwelling on the the fact that you appear to not understand\n>>> the basics of the lightning network, I am a little alarmed about this\n>> \n>> If I don't see how switching from using the thousands of fully-validating\n>> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in\n>> terms of decentralization (or security, in terms of Sybil/DoS attacks),\n> \n> Its a source routed network, not a broadcast network.  Fees are\n> charged on channels so\n> DoS is just a way to pay people a multiple of bandwidth cost.\n> \n> in terms of trustlessness Andrew Lapp explained it pretty well:\n>> I don't mind a set of central authorities being part of an option IF the central authority\n>> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have\n>> to trust them to not collude with anyone to reverse your payments or destroy the trust\n>> in the system in some attack. On the Lightning network, a large hub can't steal my\n>> money.\n>> \n>> I think most people share the sentiment that trustlessness is what matters and\n>> decentralization is just a synonym for trustlessness when talking about the blockchain\n>> and mining, however decentralization isn't necessarily synonymous with trustlessness\n>> nor is centralization synonymous with trust-requiring when you're talking about\n>> something else.\n> \n> Gavin wrote:\n>> then I doubt other people do, either. You need to do a better job of explaining it.\n> \n> I gave it a go a couple of posts up.  I didnt realise people here\n> proposing mega-blocks were not paying attention to the whole lightning\n> concept and detail.\n> \n> People said lots of things about how it's better to work on lightning,\n> to scale algorithmically, rather than increasing block-size to\n> dangerously centralising proportions.\n> Did you think we were Gish Galloping you?  We were completely serious.\n> \n> The paper is on http://lightning.network\n> \n> though it is not so clearly explained there, however Joseph is working\n> on improving the paper as I understand it.\n> \n> Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450\n> \n> though I don't recall that he got into recirculation, negative fees\n> etc.  A good question\n> for the lightning-dev mailing list maybe.\n> \n> http://lists.linuxfoundation.org/pipermail/lightning-dev/\n> \n> There are a couple of recorded presentation videos / podcasts from Joseph Poon.\n> \n> sf bitcoin dev presentation:\n> \n> https://www.youtube.com/watch?v=2QH5EV_Io0E\n> \n> epicenter bitcoin:\n> \n> https://www.youtube.com/watch?v=fBS_ieDwQ9k\n> \n> There's a related paper from Christian Decker \"Duplex Micropayment Channels\"\n> \n> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n> \n>> But even if you could convince me that it WAS better from a\n>> security/decentralization point of view:\n> \n> We don't need to convince people, we just have to code it and\n> demonstrate it, which people are working on.\n> \n> But Lightning does need a decentralised and secure Bitcoin network for\n> anchor and reclaim transactions, so take it easy with the mega-blocks\n> in the mean-time.\n> \n>> a) Lightning Network is nothing but a whitepaper right now. We are a long\n>> way from a practical implementation supported by even one wallet.\n> \n> maybe you want to check in on\n> \n> https://github.com/ElementsProject/lightning\n> \n> and help code it.\n> \n> I expect we can get something running inside a year.  Which kind of\n> obviates the burning \"need\" for a schedule into the far future rising\n> to 8GB with unrealistic bandwidth growth assumptions that will surely\n> cause centralisation problems.\n> \n> For block-size I think it would be better to have a 2-4 year or one\n> off size bump with policy limits and then re-evaluate after we've seen\n> what lightning can do.\n> \n> I have been saying the same thing ad-nauseam for weeks.\n> \n>> b) The Lightning Network paper itself says bigger blocks will be needed even\n>> if (especially if!) Lightning is wildly successful.\n> \n> Not nearly as big as if you tried to put the transactions it would\n> enable on the chain, that's for sure!  We dont know what that limit is\n> but people have been imagining 1,000 or 10,000 transactions per anchor\n> transaction.  If micro-payments get popular many more.\n> \n> Basically users would park Bitcoins a on a hub channel instead of the\n> blockchain.  The channel can stay up indefinitely, and the user has\n> assurances analogous to greenaddress time-lock mechanism\n> \n> Flexcap maybe a better solution because that allows bursting\n> block-size when economically rational.\n> \n> Note that the time-locks with lightning are assumed to be relative\n> CTLV eg using the mechanism as Mark Friedenbach described in a post\n> here, and as implemented in the elements sidechain, so there is not a\n> huge rush to reclaim funds.  They can be spread out in time.\n> \n> If you want to scale Bitcoin - like really scale it - work on\n> lightning.  Lightning + a decentralised and secure Bitcoin, scales\n> further and is more trustless than Bitcoin forced into centralisation\n> via premature mega-blocks.\n> \n> To my mind a shorter, more conservative block-size increase to give a\n> few years room is enough for now.  We'll be in a better position to\n> know what the right next step is after lightning is running.\n> \n> Something to mention is you can elide transactions before reclaiming.\n> So long as the balancing transaction is correct, someone online can\n> swap it for you with an equal balance one with less hops of\n> intermediate payment flows.\n> \n> \n> It's pretty interesting what you can do already.  I'm fairly confident\n> we're not finished algorithmically optimising it either.  It's\n> surprising how much new territory there is just sitting there\n> unexplored.\n> \n> Adam\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a8c34cc4/attachment-0001.sig>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-29T01:45:09",
                "message_text_only": "Regarding privacy and the lightening network. Has this been well \naddressed? I haven't seen much that leads me to believe there is. Only \noptions I see are to have many open payment channels, but that is still \nlimiting and inefficient, or require an extensive number of hops in your \npayment route, but this is also limiting.\n\n\n\nAndy Schroder\n\nOn 06/28/2015 06:07 PM, Adam Back wrote:\n> On 28 June 2015 at 23:05, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>> On Sun, Jun 28, 2015 at 2:58 PM, Adam Back <adam at cypherspace.org> wrote:\n>>> This is probably going to sound impolite, but I think it's pertinent.\n>>>\n>>> Gavin, on dwelling on the the fact that you appear to not understand\n>>> the basics of the lightning network, I am a little alarmed about this\n>> If I don't see how switching from using the thousands of fully-validating\n>> bitcoin nodes with (tens? hundreds?) of Lightning Network hubs is better in\n>> terms of decentralization (or security, in terms of Sybil/DoS attacks),\n> Its a source routed network, not a broadcast network.  Fees are\n> charged on channels so\n> DoS is just a way to pay people a multiple of bandwidth cost.\n>\n> in terms of trustlessness Andrew Lapp explained it pretty well:\n>> I don't mind a set of central authorities being part of an option IF the central authority\n>> doesn't need to be trusted. On the blockchain, the larger miner is, the more you have\n>> to trust them to not collude with anyone to reverse your payments or destroy the trust\n>> in the system in some attack. On the Lightning network, a large hub can't steal my\n>> money.\n>>\n>> I think most people share the sentiment that trustlessness is what matters and\n>> decentralization is just a synonym for trustlessness when talking about the blockchain\n>> and mining, however decentralization isn't necessarily synonymous with trustlessness\n>> nor is centralization synonymous with trust-requiring when you're talking about\n>> something else.\n> Gavin wrote:\n>> then I doubt other people do, either. You need to do a better job of explaining it.\n> I gave it a go a couple of posts up.  I didnt realise people here\n> proposing mega-blocks were not paying attention to the whole lightning\n> concept and detail.\n>\n> People said lots of things about how it's better to work on lightning,\n> to scale algorithmically, rather than increasing block-size to\n> dangerously centralising proportions.\n> Did you think we were Gish Galloping you?  We were completely serious.\n>\n> The paper is on http://lightning.network\n>\n> though it is not so clearly explained there, however Joseph is working\n> on improving the paper as I understand it.\n>\n> Rusty wrote a high-level blog explainer: http://rusty.ozlabs.org/?p=450\n>\n> though I don't recall that he got into recirculation, negative fees\n> etc.  A good question\n> for the lightning-dev mailing list maybe.\n>\n> http://lists.linuxfoundation.org/pipermail/lightning-dev/\n>\n> There are a couple of recorded presentation videos / podcasts from Joseph Poon.\n>\n> sf bitcoin dev presentation:\n>\n> https://www.youtube.com/watch?v=2QH5EV_Io0E\n>\n> epicenter bitcoin:\n>\n> https://www.youtube.com/watch?v=fBS_ieDwQ9k\n>\n> There's a related paper from Christian Decker \"Duplex Micropayment Channels\"\n>\n> http://www.tik.ee.ethz.ch/file/716b955c130e6c703fac336ea17b1670/duplex-micropayment-channels.pdf\n>\n>> But even if you could convince me that it WAS better from a\n>> security/decentralization point of view:\n> We don't need to convince people, we just have to code it and\n> demonstrate it, which people are working on.\n>\n> But Lightning does need a decentralised and secure Bitcoin network for\n> anchor and reclaim transactions, so take it easy with the mega-blocks\n> in the mean-time.\n>\n>> a) Lightning Network is nothing but a whitepaper right now. We are a long\n>> way from a practical implementation supported by even one wallet.\n> maybe you want to check in on\n>\n> https://github.com/ElementsProject/lightning\n>\n> and help code it.\n>\n> I expect we can get something running inside a year.  Which kind of\n> obviates the burning \"need\" for a schedule into the far future rising\n> to 8GB with unrealistic bandwidth growth assumptions that will surely\n> cause centralisation problems.\n>\n> For block-size I think it would be better to have a 2-4 year or one\n> off size bump with policy limits and then re-evaluate after we've seen\n> what lightning can do.\n>\n> I have been saying the same thing ad-nauseam for weeks.\n>\n>> b) The Lightning Network paper itself says bigger blocks will be needed even\n>> if (especially if!) Lightning is wildly successful.\n> Not nearly as big as if you tried to put the transactions it would\n> enable on the chain, that's for sure!  We dont know what that limit is\n> but people have been imagining 1,000 or 10,000 transactions per anchor\n> transaction.  If micro-payments get popular many more.\n>\n> Basically users would park Bitcoins a on a hub channel instead of the\n> blockchain.  The channel can stay up indefinitely, and the user has\n> assurances analogous to greenaddress time-lock mechanism\n>\n> Flexcap maybe a better solution because that allows bursting\n> block-size when economically rational.\n>\n> Note that the time-locks with lightning are assumed to be relative\n> CTLV eg using the mechanism as Mark Friedenbach described in a post\n> here, and as implemented in the elements sidechain, so there is not a\n> huge rush to reclaim funds.  They can be spread out in time.\n>\n> If you want to scale Bitcoin - like really scale it - work on\n> lightning.  Lightning + a decentralised and secure Bitcoin, scales\n> further and is more trustless than Bitcoin forced into centralisation\n> via premature mega-blocks.\n>\n> To my mind a shorter, more conservative block-size increase to give a\n> few years room is enough for now.  We'll be in a better position to\n> know what the right next step is after lightning is running.\n>\n> Something to mention is you can elide transactions before reclaiming.\n> So long as the balancing transaction is correct, someone online can\n> swap it for you with an equal balance one with less hops of\n> intermediate payment flows.\n>\n>\n> It's pretty interesting what you can do already.  I'm fairly confident\n> we're not finished algorithmically optimising it either.  It's\n> surprising how much new territory there is just sitting there\n> unexplored.\n>\n> Adam\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/5a17cd68/attachment.sig>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-30T00:42:36",
                "message_text_only": "On 6/28/2015 3:07 PM, Adam Back wrote:\n> We dont know what that limit is but people have been imagining 1,000\n> or 10,000 transactions per anchor transaction. Basically users would\n> park Bitcoins a on a hub channel instead of the blockchain.\n\nThis re-introduces a solved problem (solved by bitcoin better than\nanything else)  - worrying whether your \"payment hub\" actually connects\nto whom you wish to pay.\n\nThere will be enormous network effects and centralization pressure in\nthe payment-hub space.  A few entities, maybe single entity, should be\nexpected to quickly corner the market and own the whole thing.\n\nThis concept is far too untested to justify amateur economic meddling in\nthe bitcoin fee market by setting a restrictive hard cap below technical\nfeasibility.\n\nI can guess exactly who would want to keep bitcoin from improving: \n*those who hope to be the future payment hub oligarchs*."
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T17:53:40",
                "message_text_only": "On Sun, Jun 28, 2015 at 7:29 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> On Sun, Jun 28, 2015 at 1:12 PM, Mark Friedenbach <mark at friedenbach.org>\n> wrote:\n>>\n>> But ultimately, lightning usefully solves a problem where participants\n>> have semi-long lived payment endpoints.\n>\n>\n> Very few of my own personal Bitcoin transactions fit that use-case.\n>\n> In fact, very few of my own personal dollar transactions fit that use-case\n> (I suppose if I was addicted to Starbucks I'd have one of their payment\n> cards that I topped up every once in a while, which would map nicely onto a\n> payment channel). I suppose I could setup a payment channel with the grocery\n> store I shop at once a week, but that would be inconvenient (I'd have to\n> pre-fund it) and bad for my privacy.\n\nUnlike other payment channels designs, the lightning payment channel\nnetwork allows you to pay to people that you haven't sent a pre-fund\nto.\nThere's must be a path in the network from you to the payee.\nThat's simpler with only a few hubs although too few hubs is bad for privacy.\n\n> I can see how payment channels would work between big financial institutions\n> as a settlement layer, but isn't that exactly the centralization concern\n> that is making a lot of people worried about increasing the max block size?\n\nWorried about financial institutions using Bitcoin? No. Who said that?\n\n> And if there are only a dozen or two popular hubs, that's much worse\n> centralization-wise compared to a few thousand fully-validating Bitcoin\n> nodes.\n\nRemember the hubs cannot steal any coins.\n\n> Don't get me wrong, I think the Lightning Network is a fantastic idea and a\n> great experiment and will likely be used for all sorts of great payment\n> innovations (micropayments for bandwidth maybe, or maybe paying workers by\n> the hour instead of at the end of the month). But I don't think it is a\n> scaling solution for the types of payments the Bitcoin network is handling\n> today.\n\nI don't see how people could pay coffees with bitcoin in the long term\notherwise.\nBitcoin IOUs from a third party (or federation) maybe, but not with\nreal p2p btc."
            },
            {
                "author": "Andrew Lapp",
                "date": "2015-06-28T19:22:53",
                "message_text_only": "I don't mind a set of central authorities being part of an option IF the \ncentral authority doesn't need to be trusted. On the blockchain, the \nlarger miner is, the more you have to trust them to not collude with \nanyone to reverse your payments or destroy the trust in the system in \nsome attack. On the Lightning network, a large hub can't steal my money.\n\nI think most people share the sentiment that trustlessness is what \nmatters and decentralization is just a synonym for trustlessness when \ntalking about the blockchain and mining, however decentralization isn't \nnecessarily synonymous with trustlessness nor is centralization \nsynonymous with trust-requiring when you're talking about something else.\n\n-Andrew Lapp\n\nOn 06/28/2015 01:29 PM, Gavin Andresen wrote:\n> I can see how payment channels would work between big financial \n> institutions as a settlement layer, but isn't that exactly the \n> centralization concern that is making a lot of people worried about \n> increasing the max block size?"
            },
            {
                "author": "Benjamin",
                "date": "2015-06-28T19:40:20",
                "message_text_only": "\"On the Lightning network, a large hub can't steal my money.\" Malicious\nhubs could flood the network. The way it is discussed now it's not\nresistant to Sybil attack either. It's an interesting idea in a very early\nstage. Not at all a drop-in replacement for Bitcoin anytime soon, as some\nimply. Blockstream shouldn't make these issues into pitches of their own\ntech of their for-profit enterprise.\n\nOn Sun, Jun 28, 2015 at 9:22 PM, Andrew Lapp <lapp0 at purdue.edu> wrote:\n\n> I don't mind a set of central authorities being part of an option IF the\n> central authority doesn't need to be trusted. On the blockchain, the larger\n> miner is, the more you have to trust them to not collude with anyone to\n> reverse your payments or destroy the trust in the system in some attack. On\n> the Lightning network, a large hub can't steal my money.\n>\n> I think most people share the sentiment that trustlessness is what matters\n> and decentralization is just a synonym for trustlessness when talking about\n> the blockchain and mining, however decentralization isn't necessarily\n> synonymous with trustlessness nor is centralization synonymous with\n> trust-requiring when you're talking about something else.\n>\n> -Andrew Lapp\n>\n> On 06/28/2015 01:29 PM, Gavin Andresen wrote:\n>\n>> I can see how payment channels would work between big financial\n>> institutions as a settlement layer, but isn't that exactly the\n>> centralization concern that is making a lot of people worried about\n>> increasing the max block size?\n>>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/6ca0b59b/attachment.html>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-28T12:32:52",
                "message_text_only": ">Also decentralisation is key, and that is something we can improve \nwith pooling protocols to phase out the artificial centralisation.\n\nSo how is the level of decentralization measured?   I see many claims on \nthis list that such-and-such action will increase or decrease \ncentralization and sometimes people talk in absolutes such as something \nbeing decentralized or centralized.   Some of the arguments seem to make \nclaims without providing any kind of analysis or explanation.\n\nNothing is truly decentralized and decentralization is just an \napproximation of having a collection of centralized systems interact in \nsome way.  I would suggest coming up with some sort of metric so these \ndiscussions can start from a baseline when discussing changes.\n\nRuss"
            }
        ],
        "thread_summary": {
            "title": "A Proposed Compromise to the Block Size Limit",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Eric Lombrozo",
                "Randi Joseph",
                "Raystonn",
                "Adam Back",
                "Benjamin",
                "Milly Bitcoin",
                "Peter Todd",
                "Jorge Tim\u00f3n",
                "Andrew Lapp",
                "Venzen Khaosan",
                "Mark Friedenbach",
                "Jameson Lopp",
                "Raystonn .",
                "Gavin Andresen",
                "Michael Naber",
                "Andy Schroder",
                "Tom Harding"
            ],
            "messages_count": 42,
            "total_messages_chars_count": 105224
        }
    },
    {
        "title": "[bitcoin-dev] Block Size Debate Analogy / Workaround: Bitcoin is Like Windows 3.11",
        "thread_messages": [
            {
                "author": "will binns",
                "date": "2015-06-27T15:09:43",
                "message_text_only": "Hello all, I wanted to add another analogy here to this block size\ndebate, in case helpful. I understand some may not see it this way, so\napologies in advance if it ruffles anyone's feathers. In some ways,\nhowever, to me at least - Bitcoin is like Windows 3.11. Before Bitcoin\neverything was DOS - something completely disruptive and good for\nsociety has come into the computing space that exponentially improves\nupon almost everything in the space that existed before it. Now there is\na huge debate about if there should ever be a Windows 95, XP, Pro, etc.,\nthat scales better and makes advances over time, but doesn\u2019t support\nfacets of older versions as it gets updated.\u200a What will happen to 3.11\nusers/developers/etc. who don't upgrade that have money and/or important\ntech tied into the 3.11 platform? Should it just be Windows 3.11 forever\nexcept with better programs that continue to be built to run on it? Or,\nshould we agree to only change it if 100% of Windows users or Windows\ndevelopers agree on upgrading?\n\nRegardless of what side we all stand on, I just want to point out that\nthis mailing list is full of incredibly brilliant minds leading the\ncharge into perhaps one of the greatest technical achievements in recent\ndecades. Maybe it would be a good idea for each side of the issue here\nto democratically appoint a developer representative, and then allow the\nrepresentatives to achieve a framework and hammer out the details of the\nsolution together?\n\nHope you all have nice weekends,\nWill\n\n-- \n// will binns\n// gpg fingerprint: 4519 7EB7 66A7 CC5E 4E66 F200 AF5C 2D1C E58E B37C\n// threema id: 5YM2J894\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/012c62d9/attachment-0001.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/012c62d9/attachment-0001.sig>"
            },
            {
                "author": "Bernd Jendrissek",
                "date": "2015-06-27T17:36:50",
                "message_text_only": "> In some ways, however, to me at\n> least - Bitcoin is like Windows 3.11.\n[...]\n> Now there is a huge debate about if there\n> should ever be a Windows 95, XP, Pro, etc., that scales better and makes\n> advances over time, but doesn\u2019t support facets of older versions as it gets\n> updated.\n\nI like your analogy for how it frames blockchain compatibility in\nterms of the backward compatibility that hopefully most\ncomputer-literate people already understand, but there's a key\ningredient missing.\n\nIt's as if, if everyone in the world did somehow upgrade to Windows\n95, it would become forever impossible to take a program written *on*\nWindows 95 but *for* Windows 3.11, and successfully run it on a\nWindows 3.11 computer. It would be as if cross-compilers from Windows\n95 to Windows 3.11 didn't, and couldn't, exist. Any coins that have\npost-hardfork coinbase outputs anywhere in their tree of inputs (a\nWindows 3.11 program, that's written on a computer that has ever run a\nWindows 95 program) can never be spent on the no-change side of the\nfork."
            }
        ],
        "thread_summary": {
            "title": "Block Size Debate Analogy / Workaround: Bitcoin is Like Windows 3.11",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Bernd Jendrissek",
                "will binns"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 3143
        }
    },
    {
        "title": "[bitcoin-dev] Mailing List Administrivia - GPG, Archives, Breakage, TODO, mirrors, etc",
        "thread_messages": [
            {
                "author": "grarpamp",
                "date": "2015-06-27T22:21:34",
                "message_text_only": "On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:\n> If you're going to go through the trouble of signing your public emails ...\n\n... then you should also demand that the official archives of your\nfavorite lists preserve them and their verifiability in the supposedly\ncanonical reference \"mbox\" format that they distribute.\n\nOn Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan\n<laanwj at gmail.com> wrote:\n> Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary releases\n\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n\nAs you can clearly see, both the HTML archives and the \"mbox\"\narchives have corrupted this message, it will not verify. Do not\ntry to say this case is trivial, the problem itself is not trivial,\nit's gratuitous, and it applies to all matching messages... text,\ncode, binary inline... that's dangerous.\n\nDo not try to say this corruption prevents spam, it does not.\nSpammers simply subscribe to the list and harvest everything\nefficiently in realtime... no webcrawling overhead, no stale\naddresses. Obfuscation is futile.\n\nThis misfeature needs to be disabled.\n\n\n\nOn Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:\n> archives will be exported\n> and imported into the new list server\n\nOn Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:\n> I'm not sure if anyone has submitted a request for gmane\n\nOn Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:\n> Do we have all the archives imported? I run several full nodes and\n> mirrors for open source projects, if you think it's useful, I can\n> provide a mirror for the mail list archives.\n\nYes... these other mirrors, archives, analysis, journalism, and\ninterfaces are useful. However, as it is now, there are no useful\nauthoritative sources for them to seed from... they're all corrupt.\nAnd any subscribed realtime sources, though nice, are subject to\ndowntime, administrative and other unrecoverable gaps. Your mirror\nproject is a fine idea, you should demand that the pristine historical\nsources be made publicly available. Not just for you, but for everyone.\n\n\n\nOn Wed, Jun 17, 2015, grarpamp wrote:\n> ...\n\nAs before, the current \"mbox\" archives are broken and not useful...\n\na) They corrupt message data, messages are unverifiable, another example...\n   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html\n   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\nb) They are missing the minimum set of original headers necessary\n   for fully replyable, threadable, sortable, searchable, context\n   preserving and direct use by users MUA's in their local environment:\n   (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)\nc) They do not include attachments (patches, signatures, images, crypto,\n   data) that are absolutely necessary to the context and archives\n   of all lists. Instead they stupidly throw them away to \"web links\"\n   which results not only in uselessness of the so called \"mbox\"\n   version, but in many thousands of needless fetches by archive\n   users and indexers. And hours of wasted work attempting to\n   postprocess them into usable form.\n   Valuable content lost from the \"mbox\" files this June alone:\n    418 attachment.html\n    106 attachment.sig\n      6 attachment.jpe\n      4 attachment.png\n      2 attachment.bin\nd) There appear to be at least 15 instances of unescaped '^From '\n   in the \"mbox\". Regeneration with current mailman may fix. One such\n   case is here:\n   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html\n   http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz\n\n\n\nPlease fix all the above mentioned issues by providing the full raw\narchives in regularly updated [gzip/7z] mbox format. The internet\nthanks you :)\n\nExample, compare the \"Downloadable version\"s here:\nhttp://lists.linuxfoundation.org/pipermail/bitcoin-dev/\nhttps://cpunks.org/pipermail/cypherpunks/\nhttps://cpunks.org/pipermail/cypherpunks/2015-February/006820.html\n\n\n\nOn Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:\n> Regarding message footers and the subject prefix\n\nYes, they're also corruptive and space wasting clutter, for and by\nthe clueless :( Both of them should be turned off."
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-27T23:54:00",
                "message_text_only": "Generally agreed w/ all this.\n\nTo preserve digital signatures now and in the future, and make mbox\narchives actually useful, a minimum modification policy is needed.\n\n\n\nOn Sat, Jun 27, 2015 at 3:21 PM, grarpamp <grarpamp at gmail.com> wrote:\n\n> On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:\n> > If you're going to go through the trouble of signing your public emails\n> ...\n>\n> ... then you should also demand that the official archives of your\n> favorite lists preserve them and their verifiability in the supposedly\n> canonical reference \"mbox\" format that they distribute.\n>\n> On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan\n> <laanwj at gmail.com> wrote:\n> > Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary\n> releases\n>\n>\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n>\n> As you can clearly see, both the HTML archives and the \"mbox\"\n> archives have corrupted this message, it will not verify. Do not\n> try to say this case is trivial, the problem itself is not trivial,\n> it's gratuitous, and it applies to all matching messages... text,\n> code, binary inline... that's dangerous.\n>\n> Do not try to say this corruption prevents spam, it does not.\n> Spammers simply subscribe to the list and harvest everything\n> efficiently in realtime... no webcrawling overhead, no stale\n> addresses. Obfuscation is futile.\n>\n> This misfeature needs to be disabled.\n>\n>\n>\n> On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com>\n> wrote:\n> > archives will be exported\n> > and imported into the new list server\n>\n> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>\n> wrote:\n> > I'm not sure if anyone has submitted a request for gmane\n>\n> On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:\n> > Do we have all the archives imported? I run several full nodes and\n> > mirrors for open source projects, if you think it's useful, I can\n> > provide a mirror for the mail list archives.\n>\n> Yes... these other mirrors, archives, analysis, journalism, and\n> interfaces are useful. However, as it is now, there are no useful\n> authoritative sources for them to seed from... they're all corrupt.\n> And any subscribed realtime sources, though nice, are subject to\n> downtime, administrative and other unrecoverable gaps. Your mirror\n> project is a fine idea, you should demand that the pristine historical\n> sources be made publicly available. Not just for you, but for everyone.\n>\n>\n>\n> On Wed, Jun 17, 2015, grarpamp wrote:\n> > ...\n>\n> As before, the current \"mbox\" archives are broken and not useful...\n>\n> a) They corrupt message data, messages are unverifiable, another example...\n>\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html\n>    http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n> b) They are missing the minimum set of original headers necessary\n>    for fully replyable, threadable, sortable, searchable, context\n>    preserving and direct use by users MUA's in their local environment:\n>    (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)\n> c) They do not include attachments (patches, signatures, images, crypto,\n>    data) that are absolutely necessary to the context and archives\n>    of all lists. Instead they stupidly throw them away to \"web links\"\n>    which results not only in uselessness of the so called \"mbox\"\n>    version, but in many thousands of needless fetches by archive\n>    users and indexers. And hours of wasted work attempting to\n>    postprocess them into usable form.\n>    Valuable content lost from the \"mbox\" files this June alone:\n>     418 attachment.html\n>     106 attachment.sig\n>       6 attachment.jpe\n>       4 attachment.png\n>       2 attachment.bin\n> d) There appear to be at least 15 instances of unescaped '^From '\n>    in the \"mbox\". Regeneration with current mailman may fix. One such\n>    case is here:\n>\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html\n>\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz\n>\n>\n>\n> Please fix all the above mentioned issues by providing the full raw\n> archives in regularly updated [gzip/7z] mbox format. The internet\n> thanks you :)\n>\n> Example, compare the \"Downloadable version\"s here:\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/\n> https://cpunks.org/pipermail/cypherpunks/\n> https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html\n>\n>\n>\n> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>\n> wrote:\n> > Regarding message footers and the subject prefix\n>\n> Yes, they're also corruptive and space wasting clutter, for and by\n> the clueless :( Both of them should be turned off.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/bfb6410d/attachment-0001.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2015-06-29T02:27:06",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nJune 28th, 2015\nMailman's obscure_addresses option is now disabled.  It has been pretty\nuseless\nas a spam mitigation measure anyway.\n\nThis is a test message to see if mailman continues to break --clearsign GPG\nsignatures for messages that contain an e-mail address like test at example.com\n.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQQcBAEBCAAGBQJVkKy7AAoJELEXnrc0fcENmiIf/1Qgb/XFDmGl5RsZnMWh+kCX\nEBjT/ouufgURTrOt6XPhwnxJAYMKPtobg4MvjosqKFNKzyz3Io9TxkWXFXFLajLt\nuZ/RPck0b6qYPXW02m6on1Zj8VIKrREtm4CEH/2q7iHkjsWIHULo+K6emrJQtIOs\nDzhUEniPPVDJVIq2pZJGKHq87ydmnFMYhXjzCu2e0N7CBFw/uxtUEsvkd0uuognm\nYVjnrCjS8CLzNgEkx8z6R1WWz7psDQeLr+d8BP/6TVrgEOaeX4pAy9mhqdPjGutV\nC6X3SyMlSA/PDJFqzT5Upe4UKwKWGq7AOBz7OpzpYIqJ69NKsIjCgh+t6qCisDZO\nO3XFUIidmKZsWE422InFLhUtqzwZHq56J/eKKiYz53BSYtTOPIs4+RPlm1Gzs7gP\ncEqoDYobdlT2H1vCvNficcbH5nWmooErUxT06tXjGqfPHlm+OVuOyVTwuin+gD5H\nwinqtNlkSCbG1MjhUoLEJVxLHP7t6i5e6EKPQrvP0XycKuO2PMlVkYYFBGMKEFF/\nsL68wyV/0PzGRA7ggcBmcOGHC7ys2sOroLZCWNDnOrQnRFHvQgDCQpj3uMFMO7yf\n8E+0CIKO0vB/Ljxse51+s/NZTX8uTZu525+hSG8cuLY1FTl5Zk3oRH1HGUJ9wbWh\nHjx6827uh543+AHWgBwEpQ/8LkSlc0UN6txNmYn4DJgEksqP80iaPkvXAEesSUJ8\nOtAPrWOMZXcSsp7HZkDXuJyMUerGvZcdIVvVNsLOWLWa2c0kyDdxubGflhGN/Hkq\n67pJ5J/aeraw7BdfRi78CUWYXpVBlMaQ60jT2LV9XQxsqSnZb3+VgN9vyvQi/gih\nenr+l8r4esM7TOsGYHMWbQkHgnm/wOMiMc56xlqeIi/+cRuJF3Mg5LnbqIUU1Ox0\nS+luGASWg1R2yU4n0EWQ5sx1dmslgvJe6lDKlQXEX4e4d5F0vhnyFiDVhChMCpGv\nALK8MiUZGD2y9fIPB+Yypq7mH9NiQwQIJtpbVgVd2pBEl0XWkbs6F5GNq90ChE7x\nhWiyu2N/iug2r7zKt5KtZob9hIljQ6N/HAk+O1lLPUktX5HBt8X+KHyX22GMLIAu\ng4tWk2P7R0Sh2rYSd43S3CMF01eaGI2oWU0rj2KtG1HqQMVOIVjdxYR3tpmC69Tb\nMyCq7xe+zOcAiWkAeb1cJjgahrnDBR663zSsqZVnAyG9GQVvPY6fZKxYoY2B+xgP\ntEi8FTL3ag0PbdUJF8SQugx+R3HNBS+r1AGgOUEBtrrH9IqBAaOf3N+rMFLUl/HW\nypTs5fj6A49CkncmQQGcyj3BwlEjhr4wF59Bpxn/KTwT5H2Sdu1QEuB2G+gwqYs=\n=bOwk\n-----END PGP SIGNATURE-----\n\n\nOn Sat, Jun 27, 2015 at 4:54 PM, Jeff Garzik <jgarzik at gmail.com> wrote:\n\n> Generally agreed w/ all this.\n>\n> To preserve digital signatures now and in the future, and make mbox\n> archives actually useful, a minimum modification policy is needed.\n>\n>\n>\n> On Sat, Jun 27, 2015 at 3:21 PM, grarpamp <grarpamp at gmail.com> wrote:\n>\n>> On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:\n>> > If you're going to go through the trouble of signing your public emails\n>> ...\n>>\n>> ... then you should also demand that the official archives of your\n>> favorite lists preserve them and their verifiability in the supposedly\n>> canonical reference \"mbox\" format that they distribute.\n>>\n>> On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan\n>> <laanwj at gmail.com> wrote:\n>> > Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary\n>> releases\n>>\n>>\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n>>\n>> As you can clearly see, both the HTML archives and the \"mbox\"\n>> archives have corrupted this message, it will not verify. Do not\n>> try to say this case is trivial, the problem itself is not trivial,\n>> it's gratuitous, and it applies to all matching messages... text,\n>> code, binary inline... that's dangerous.\n>>\n>> Do not try to say this corruption prevents spam, it does not.\n>> Spammers simply subscribe to the list and harvest everything\n>> efficiently in realtime... no webcrawling overhead, no stale\n>> addresses. Obfuscation is futile.\n>>\n>> This misfeature needs to be disabled.\n>>\n>>\n>>\n>> On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com>\n>> wrote:\n>> > archives will be exported\n>> > and imported into the new list server\n>>\n>> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>\n>> wrote:\n>> > I'm not sure if anyone has submitted a request for gmane\n>>\n>> On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:\n>> > Do we have all the archives imported? I run several full nodes and\n>> > mirrors for open source projects, if you think it's useful, I can\n>> > provide a mirror for the mail list archives.\n>>\n>> Yes... these other mirrors, archives, analysis, journalism, and\n>> interfaces are useful. However, as it is now, there are no useful\n>> authoritative sources for them to seed from... they're all corrupt.\n>> And any subscribed realtime sources, though nice, are subject to\n>> downtime, administrative and other unrecoverable gaps. Your mirror\n>> project is a fine idea, you should demand that the pristine historical\n>> sources be made publicly available. Not just for you, but for everyone.\n>>\n>>\n>>\n>> On Wed, Jun 17, 2015, grarpamp wrote:\n>> > ...\n>>\n>> As before, the current \"mbox\" archives are broken and not useful...\n>>\n>> a) They corrupt message data, messages are unverifiable, another\n>> example...\n>>\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html\n>>\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n>> b) They are missing the minimum set of original headers necessary\n>>    for fully replyable, threadable, sortable, searchable, context\n>>    preserving and direct use by users MUA's in their local environment:\n>>    (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)\n>> c) They do not include attachments (patches, signatures, images, crypto,\n>>    data) that are absolutely necessary to the context and archives\n>>    of all lists. Instead they stupidly throw them away to \"web links\"\n>>    which results not only in uselessness of the so called \"mbox\"\n>>    version, but in many thousands of needless fetches by archive\n>>    users and indexers. And hours of wasted work attempting to\n>>    postprocess them into usable form.\n>>    Valuable content lost from the \"mbox\" files this June alone:\n>>     418 attachment.html\n>>     106 attachment.sig\n>>       6 attachment.jpe\n>>       4 attachment.png\n>>       2 attachment.bin\n>> d) There appear to be at least 15 instances of unescaped '^From '\n>>    in the \"mbox\". Regeneration with current mailman may fix. One such\n>>    case is here:\n>>\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html\n>>\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz\n>>\n>>\n>>\n>> Please fix all the above mentioned issues by providing the full raw\n>> archives in regularly updated [gzip/7z] mbox format. The internet\n>> thanks you :)\n>>\n>> Example, compare the \"Downloadable version\"s here:\n>> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/\n>> https://cpunks.org/pipermail/cypherpunks/\n>> https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html\n>>\n>>\n>>\n>> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com>\n>> wrote:\n>> > Regarding message footers and the subject prefix\n>>\n>> Yes, they're also corruptive and space wasting clutter, for and by\n>> the clueless :( Both of them should be turned off.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/4cc5cd58/attachment-0001.html>"
            },
            {
                "author": "Andy Schroder",
                "date": "2015-06-29T01:49:38",
                "message_text_only": "Although I'd say your writing style is a bit unfriendly and hard to \nidentify/unclear at the specifics of some of your complaints, I do agree \nwith many of your points.\n\nI really have no idea what format the .txt.gz files are in that are on \nthe current archive. If you unzip them, they are not text tiles.\n\ngmane was able to change the subscription of the previous list to the \ncurrent list. So, anyone who had a newsreader setup, it should be \nworking again. There is some gap in their archive at the beginning of \nthe archive, as well as last week while the list was transitioned. They \nrequested a link to a single mbox file archive that they can use to \nrestore the list archive in it's entirety. Anyone know how we can get \nthis? The reference to another mailing list below \n(https://cpunks.org/pipermail/cypherpunks/) has such a link on its \narchive page. It looks like the same interface so maybe that feature can \njust be turned on? I'm not sure if it gzips the mbox file on the fly \nwhenever an http request is made or if it has some schedule and may be \nmissing a few of the most recent messages?\n\n\nAlso, regarding the footer, if it can't be changed on a per user basis, \nI'd vote to get rid of it. Anyone with a reasonably powered brain can go \nto lists.linuxfoundation.org and find a way to get to the bitcoin-dev \nmailing list page. The information provided in the footer is also \nincluded in the email message headers as well. It's also included in the \nwelcome e-mail when someone subscribes to the list.\n\n\n\n\nAndy Schroder\n\nOn 06/27/2015 06:21 PM, grarpamp wrote:\n> On Sun, Jun 21, 2015 at 9:14 PM, Frank Flores <frankf44 at gmail.com> wrote:\n>> If you're going to go through the trouble of signing your public emails ...\n> ... then you should also demand that the official archives of your\n> favorite lists preserve them and their verifiability in the supposedly\n> canonical reference \"mbox\" format that they distribute.\n>\n> On Wed, Jun 24, 2015 at 7:47 AM, Wladimir J. van der Laan\n> <laanwj at gmail.com> wrote:\n>> Subject: [bitcoin-dev] New GPG signing key for Bitcoin Core binary releases\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009045.html\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n>\n> As you can clearly see, both the HTML archives and the \"mbox\"\n> archives have corrupted this message, it will not verify. Do not\n> try to say this case is trivial, the problem itself is not trivial,\n> it's gratuitous, and it applies to all matching messages... text,\n> code, binary inline... that's dangerous.\n>\n> Do not try to say this corruption prevents spam, it does not.\n> Spammers simply subscribe to the list and harvest everything\n> efficiently in realtime... no webcrawling overhead, no stale\n> addresses. Obfuscation is futile.\n>\n> This misfeature needs to be disabled.\n>\n>\n>\n> On Fri, Jun 19, 2015 at 12:57 AM, Warren Togami Jr. <wtogami at gmail.com> wrote:\n>> archives will be exported\n>> and imported into the new list server\n> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:\n>> I'm not sure if anyone has submitted a request for gmane\n> On Sun, Jun 21, 2015 at 5:35 PM, s7r <s7r at sky-ip.org> wrote:\n>> Do we have all the archives imported? I run several full nodes and\n>> mirrors for open source projects, if you think it's useful, I can\n>> provide a mirror for the mail list archives.\n> Yes... these other mirrors, archives, analysis, journalism, and\n> interfaces are useful. However, as it is now, there are no useful\n> authoritative sources for them to seed from... they're all corrupt.\n> And any subscribed realtime sources, though nice, are subject to\n> downtime, administrative and other unrecoverable gaps. Your mirror\n> project is a fine idea, you should demand that the pristine historical\n> sources be made publicly available. Not just for you, but for everyone.\n>\n>\n>\n> On Wed, Jun 17, 2015, grarpamp wrote:\n>> ...\n> As before, the current \"mbox\" archives are broken and not useful...\n>\n> a) They corrupt message data, messages are unverifiable, another example...\n>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/009132.html\n>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June.txt.gz\n> b) They are missing the minimum set of original headers necessary\n>     for fully replyable, threadable, sortable, searchable, context\n>     preserving and direct use by users MUA's in their local environment:\n>     (Date, From, To, Cc, Subject, Message-ID, In-Reply-To, References)\n> c) They do not include attachments (patches, signatures, images, crypto,\n>     data) that are absolutely necessary to the context and archives\n>     of all lists. Instead they stupidly throw them away to \"web links\"\n>     which results not only in uselessness of the so called \"mbox\"\n>     version, but in many thousands of needless fetches by archive\n>     users and indexers. And hours of wasted work attempting to\n>     postprocess them into usable form.\n>     Valuable content lost from the \"mbox\" files this June alone:\n>      418 attachment.html\n>      106 attachment.sig\n>        6 attachment.jpe\n>        4 attachment.png\n>        2 attachment.bin\n> d) There appear to be at least 15 instances of unescaped '^From '\n>     in the \"mbox\". Regeneration with current mailman may fix. One such\n>     case is here:\n>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004245.html\n>     http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January.txt.gz\n>\n>\n>\n> Please fix all the above mentioned issues by providing the full raw\n> archives in regularly updated [gzip/7z] mbox format. The internet\n> thanks you :)\n>\n> Example, compare the \"Downloadable version\"s here:\n> http://lists.linuxfoundation.org/pipermail/bitcoin-dev/\n> https://cpunks.org/pipermail/cypherpunks/\n> https://cpunks.org/pipermail/cypherpunks/2015-February/006820.html\n>\n>\n>\n> On Tue, Jun 23, 2015 at 2:45 PM, Andy Schroder <info at andyschroder.com> wrote:\n>> Regarding message footers and the subject prefix\n> Yes, they're also corruptive and space wasting clutter, for and by\n> the clueless :( Both of them should be turned off.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n>\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/2d7ea717/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Mailing List Administrivia - GPG, Archives, Breakage, TODO, mirrors, etc",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Jeff Garzik",
                "Warren Togami Jr.",
                "Andy Schroder",
                "grarpamp"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 23773
        }
    },
    {
        "title": "[bitcoin-dev] Outroduction of old non-updated full nodes through graceful degradation to SPV mode",
        "thread_messages": [
            {
                "author": "Natanael",
                "date": "2015-06-27T22:53:07",
                "message_text_only": "Old versions of software that can't be sandboxed from the world by design\nmust eventually die. The reason is simple - otherwise it will be abused,\nexploited and end up actively countering its own intended purpose. Either\nthrough security holes or other means of abusing the outdated code's\nbehavior.\n\nFull nodes in Bitcoin validate all new transactions against their own\nembedded policies and rules. Eventually the global concensus will agree on\na change of rules, as the current ruleset isn't perfect - this will toss\nincompatible old full nodes off the greatest-PoW blockchain. This is\ninevitable - not all instances of the software will get updated. Scanning\nthe Internet for Internet accessible hardware will reveal tons of outdated\nsoftware versions.\n\nThere is however currently no simple way to tell a node that it is\noutdated. Even if you just incremented block versions, it will only lead to\nsome kind of alert (IIRC) for some versions. I'm suggesting behaviors that\nwould simplify transition to new versions over time with minimal\ndisruption.\n\n* Expiration dates. Nodes so old that they are behind by numerous soft\nforks and likely are to be deprecated by a hard fork should switch to SPV\nmode automatically while also alerting the node owner. This behavior\nextends the lifetime while not by itself breaking anything with minimal\ndisruption. It also allows node owners which look at the status of their\nnodes but don't think of updating (maybe it is automatically deployed old\nsoftware images) to realize an update is sin necessary. SPV mode also needs\nto have an expiration date before complete node shutdown. Expiration dates\nalso minimize risk for political disagreement regarding how and when to\ntake any manual action to trigger necessary alerts. 3 years to SPV is a\nreasonable default IMHO, with node shutdown after 5 years. Any other\nsuggestions?\n\n* Explicit declaration of block policy / rules in blocks, including miner\nvotes for changes, and explicit declaration of incompatibility with old\nversions. Having votes visible in the blocks for implementing changes\nincompatible with the policy and rules your node runs allows it to alert\nthe node owner of impending necessity to update. Switching to SPV mode\nagain provides for minimal disruption. Please take note that even old SPV\nnodes may eventually be deprecated through data structure changes, this too\nshould be declared and then cause alerts and halt / shutdown of those\nnodes.\n\nThis also protects against another issue - an old abandoned node will not\nautomatically trust a fresh longer chain (likely malicious) using its own\npolicy if it remembers an earlier fork voting for change, instead it\nprompts for the node owner to either update (or stick to SPV on the\nnew-policy chain) or to accept this fresh fork. Nodes on a chain with its\nown policy seeing a fork with a vote for change should look at the PoW\nfirst. If it is close, alert the user (he might have brought the node\nonline just after the vote finished, to first see the fork that is on his\nold policy), so he can investigate. If the PoW is far behind it may be\nignored, or simply logged.\n\nSeeing a block also explicitly declare being incompatible with the policy a\nnode follows including for SPV nodes, rather than just using version\nnumbers, simplifies things too. It ensures the nodes know they can't\nvalidate the blocks with their old code, which simultaneously ensures that\nbehavior changes that doesn't violate the old validation code but yet\ncauses incompatibility then will not silently fork the network, instead it\nwill let the node owners know their nodes are incompatible with the main\nchain. This allows them to investigate and update of necessary.\n\n---\n\nThe primary reason for me suggesting switching to SPV mode is simple - it\nbuys time for everybody. Hard forks no longer become a critical deadline\nfor getting the ENTIRE network upgraded - you just need to worry about the\nminers and major players in the short term. Long term you do need\ninformation campaigns to get SPV fallback nodes updated, but it won't need\nto be rushed. The information campaigns no longer need to be FULLY\ncompleted BEFORE deployment.\n\nFeedback?\n\n- Sent from my tablet\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/e38a4379/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2015-06-27T23:57:00",
                "message_text_only": "Older nodes have been phased out in the past.  For example, protocol\nversions older than 209 were phased out.\n\nFollow the yellow brick git trail starting at\n18c0fa97d0408a3ee8e4cb39c08156f7667f99ac\n\n\nOn Sat, Jun 27, 2015 at 3:53 PM, Natanael <natanael.l at gmail.com> wrote:\n\n> Old versions of software that can't be sandboxed from the world by design\n> must eventually die. The reason is simple - otherwise it will be abused,\n> exploited and end up actively countering its own intended purpose. Either\n> through security holes or other means of abusing the outdated code's\n> behavior.\n>\n> Full nodes in Bitcoin validate all new transactions against their own\n> embedded policies and rules. Eventually the global concensus will agree on\n> a change of rules, as the current ruleset isn't perfect - this will toss\n> incompatible old full nodes off the greatest-PoW blockchain. This is\n> inevitable - not all instances of the software will get updated. Scanning\n> the Internet for Internet accessible hardware will reveal tons of outdated\n> software versions.\n>\n> There is however currently no simple way to tell a node that it is\n> outdated. Even if you just incremented block versions, it will only lead to\n> some kind of alert (IIRC) for some versions. I'm suggesting behaviors that\n> would simplify transition to new versions over time with minimal\n> disruption.\n>\n> * Expiration dates. Nodes so old that they are behind by numerous soft\n> forks and likely are to be deprecated by a hard fork should switch to SPV\n> mode automatically while also alerting the node owner. This behavior\n> extends the lifetime while not by itself breaking anything with minimal\n> disruption. It also allows node owners which look at the status of their\n> nodes but don't think of updating (maybe it is automatically deployed old\n> software images) to realize an update is sin necessary. SPV mode also needs\n> to have an expiration date before complete node shutdown. Expiration dates\n> also minimize risk for political disagreement regarding how and when to\n> take any manual action to trigger necessary alerts. 3 years to SPV is a\n> reasonable default IMHO, with node shutdown after 5 years. Any other\n> suggestions?\n>\n> * Explicit declaration of block policy / rules in blocks, including miner\n> votes for changes, and explicit declaration of incompatibility with old\n> versions. Having votes visible in the blocks for implementing changes\n> incompatible with the policy and rules your node runs allows it to alert\n> the node owner of impending necessity to update. Switching to SPV mode\n> again provides for minimal disruption. Please take note that even old SPV\n> nodes may eventually be deprecated through data structure changes, this too\n> should be declared and then cause alerts and halt / shutdown of those\n> nodes.\n>\n> This also protects against another issue - an old abandoned node will not\n> automatically trust a fresh longer chain (likely malicious) using its own\n> policy if it remembers an earlier fork voting for change, instead it\n> prompts for the node owner to either update (or stick to SPV on the\n> new-policy chain) or to accept this fresh fork. Nodes on a chain with its\n> own policy seeing a fork with a vote for change should look at the PoW\n> first. If it is close, alert the user (he might have brought the node\n> online just after the vote finished, to first see the fork that is on his\n> old policy), so he can investigate. If the PoW is far behind it may be\n> ignored, or simply logged.\n>\n> Seeing a block also explicitly declare being incompatible with the policy\n> a node follows including for SPV nodes, rather than just using version\n> numbers, simplifies things too. It ensures the nodes know they can't\n> validate the blocks with their old code, which simultaneously ensures that\n> behavior changes that doesn't violate the old validation code but yet\n> causes incompatibility then will not silently fork the network, instead it\n> will let the node owners know their nodes are incompatible with the main\n> chain. This allows them to investigate and update of necessary.\n>\n> ---\n>\n> The primary reason for me suggesting switching to SPV mode is simple - it\n> buys time for everybody. Hard forks no longer become a critical deadline\n> for getting the ENTIRE network upgraded - you just need to worry about the\n> miners and major players in the short term. Long term you do need\n> information campaigns to get SPV fallback nodes updated, but it won't need\n> to be rushed. The information campaigns no longer need to be FULLY\n> completed BEFORE deployment.\n>\n> Feedback?\n>\n> - Sent from my tablet\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/7af5b0ef/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Outroduction of old non-updated full nodes through graceful degradation to SPV mode",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Jeff Garzik",
                "Natanael"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 9363
        }
    },
    {
        "title": "[bitcoin-dev] Original Vision",
        "thread_messages": [
            {
                "author": "Santino Napolitano",
                "date": "2015-06-28T00:14:08",
                "message_text_only": "There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n\nThe current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n\nIt seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n\nFurther, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network resilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n\nIf my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together."
            },
            {
                "author": "Aaron Voisine",
                "date": "2015-06-28T01:52:55",
                "message_text_only": "This is a reasonable vision, but I think we can do better. We can easily\nachieve the goal of letting hobbyists with very limited resources and\nconnectivity run full nodes. The way to do this is to limit growth of the\nblockchain, and the right way to do that is to have fees that reflect the\ncosts of having large numbers of people validating, storing, and serving\ntransactions.\n\nI think we're all agreed that decentralization is priority #1. It's what\nmakes bitcoin unique from everything else. So what then is the best way to\nhave fees reflect the costs? Having a fixed blocksize (fixed production\nquotas) is one very disruptive option that would be a significant departure\nfrom what we have today. The way the network today discourages spam and\nother low value uses of the blockchain is with minimum relay fees and\ntransaction selection rules for blocks. This technique is proven, safe, and\ncan easily be tuned and experimented with. It's also what all bitcoin\nsoftware today is designed to work with.\n\n\n\nAaron Voisine\nco-founder and CEO\nbreadwallet.com\n\nOn Sat, Jun 27, 2015 at 5:14 PM, Santino Napolitano <\nsantino.napolitano at yandex.com> wrote:\n\n>\n> There is much heated debate going on right now and I know it can be very\n> stressful but I'd like to point out that it is really amazing how\n> passionately so many feel about this once very small project. Let's not\n> forget there is something really special going on here and we're all part\n> of it.\n>\n> The current debate has little to do with block size or hard-forks, IMO.\n> It's about the nature of Bitcoin and what it means to people and how it\n> will grow. I would like to take a moment to share my interpretation of the\n> original author's intent based on everything I could find and read from\n> this person. This is not to say their original vision is paramount-- or\n> even that I got it completely correct but I think it might do us some good\n> to think about.\n>\n> It seems as though the incentive conceived of for running a full network\n> node was that it would enable mining. The proceeds from mining (new coins\n> and transaction fees) would be the reward and provide a reason to continue\n> operating these nodes. If fees are ever to be a sufficient reward and still\n> allow for a practical and useful system the size of the blocks must grow\n> significantly as must the user base. I'm not sure that this is really\n> contested but I haven't exhaustively reviewed everyone's opinion so please\n> excuse me if I have marginalized you. If you do contest that I would be\n> interested in hearing it.\n>\n> Further, it appears clear that the original author intended organizations\n> operating full network nodes would provide connectivity to light clients\n> and these light clients would make up the majority of the user base. This\n> is completely consistent with current trends in Internet consumption, e.g.\n> tablets and phones are becoming more preferred to even owning a traditional\n> computer. Having the system be entirely decentralized and trustless for\n> every client does not appear to me to be the original design goal. Yes, the\n> whitepaper speaks of the design goal as not having a need for a trusted\n> third party but it does not say that some amount of trust won't be\n> preferred by a majority of users. In fact, in the SPV section it implies\n> some amount of localized trust is perhaps a necessary trade-off and maybe\n> businesses should still run their own full network node if they want the\n> stronger completely trustless guarantee. The global decentralized consensus\n> appears meant to make the network r\n>  esilient to a single government or other adversary's ability to shut the\n> network down. If you really want to trust no one it is your option at a\n> cost and should be possible by design. The author further gives evidence\n> that they believe Moore's observation would keep the idea of running a full\n> network node a practical one at global scale for perpetuity. It does not\n> appear as if they intended for every individual to run one at home nor in\n> their pocket.\n>\n> If my interpretation seems incorrect please do point it out. I hope this\n> hasn't been too off-topic and distracting. The original author's\n> engineering ingenuity is what gave me any interest in this project so\n> re-visiting their design and scaling intentions might be helpful for us to\n> move forward-- together.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/a5fe2a0f/attachment-0001.html>"
            },
            {
                "author": "Patrick Strateman",
                "date": "2015-06-28T02:13:16",
                "message_text_only": "> Further, it appears clear that the original author intended\norganizations operating full network nodes would provide connectivity to\nlight clients and these light clients would make up the majority of the\nuser base.\n\nSatoshi also believed that fraud proofs would be widely available and\npractical.\n\nIf fraud proofs were practical SPV client security would be much closer\nto full node security than it is today.\n\nUnfortunately no design for fraud proofs which is both efficient and\nsecure has been proposed; much less implemented and deployed.\n\nIn building a system as new and innovative as bitcoin certain things\nwill be wrong.\n\nThe perception that SPV clients could be made nearly as secure as full\nnodes is one example of something that was wrong.\n\nOn 06/27/2015 05:14 PM, Santino Napolitano wrote:\n> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n>\n> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n>\n> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n>\n> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network r\n>  esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n>\n> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-28T04:54:04",
                "message_text_only": "Fraud proofs actually don\u2019t need to be made super efficient\u2026but they do need to be secure, of course.\n\nThe trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it\u2019s a classical Nimzowischian case of the threat being much stronger than the execution.\n\n- Eric Lombrozo\n\n> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:\n> \n>> Further, it appears clear that the original author intended\n> organizations operating full network nodes would provide connectivity to\n> light clients and these light clients would make up the majority of the\n> user base.\n> \n> Satoshi also believed that fraud proofs would be widely available and\n> practical.\n> \n> If fraud proofs were practical SPV client security would be much closer\n> to full node security than it is today.\n> \n> Unfortunately no design for fraud proofs which is both efficient and\n> secure has been proposed; much less implemented and deployed.\n> \n> In building a system as new and innovative as bitcoin certain things\n> will be wrong.\n> \n> The perception that SPV clients could be made nearly as secure as full\n> nodes is one example of something that was wrong.\n> \n> On 06/27/2015 05:14 PM, Santino Napolitano wrote:\n>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n>> \n>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n>> \n>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n>> \n>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network\n>  r\n>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n>> \n>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.\n>> \n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/f009304a/attachment.sig>"
            },
            {
                "author": "Patrick Strateman",
                "date": "2015-06-28T05:29:24",
                "message_text_only": "Fraud proofs need to be at least more efficient than full node validation.\n\nCurrently they are not.\n\nOn 06/27/2015 09:54 PM, Eric Lombrozo wrote:\n> Fraud proofs actually don\u2019t need to be made super efficient\u2026but they do need to be secure, of course.\n>\n> The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it\u2019s a classical Nimzowischian case of the threat being much stronger than the execution.\n>\n> - Eric Lombrozo\n>\n>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:\n>>\n>>> Further, it appears clear that the original author intended\n>> organizations operating full network nodes would provide connectivity to\n>> light clients and these light clients would make up the majority of the\n>> user base.\n>>\n>> Satoshi also believed that fraud proofs would be widely available and\n>> practical.\n>>\n>> If fraud proofs were practical SPV client security would be much closer\n>> to full node security than it is today.\n>>\n>> Unfortunately no design for fraud proofs which is both efficient and\n>> secure has been proposed; much less implemented and deployed.\n>>\n>> In building a system as new and innovative as bitcoin certain things\n>> will be wrong.\n>>\n>> The perception that SPV clients could be made nearly as secure as full\n>> nodes is one example of something that was wrong.\n>>\n>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:\n>>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n>>>\n>>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n>>>\n>>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n>>>\n>>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network\n>>  r\n>>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n>>>\n>>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-28T05:32:57",
                "message_text_only": "Just to clarify, SPV is fundamentally busted as it currently exists. I\u2019m talking about potential optimizations for future protocols.\n\n- Eric Lombrozo\n\n> On Jun 27, 2015, at 10:29 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:\n> \n> Fraud proofs need to be at least more efficient than full node validation.\n> \n> Currently they are not.\n> \n> On 06/27/2015 09:54 PM, Eric Lombrozo wrote:\n>> Fraud proofs actually don\u2019t need to be made super efficient\u2026but they do need to be secure, of course.\n>> \n>> The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it\u2019s a classical Nimzowischian case of the threat being much stronger than the execution.\n>> \n>> - Eric Lombrozo\n>> \n>>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:\n>>> \n>>>> Further, it appears clear that the original author intended\n>>> organizations operating full network nodes would provide connectivity to\n>>> light clients and these light clients would make up the majority of the\n>>> user base.\n>>> \n>>> Satoshi also believed that fraud proofs would be widely available and\n>>> practical.\n>>> \n>>> If fraud proofs were practical SPV client security would be much closer\n>>> to full node security than it is today.\n>>> \n>>> Unfortunately no design for fraud proofs which is both efficient and\n>>> secure has been proposed; much less implemented and deployed.\n>>> \n>>> In building a system as new and innovative as bitcoin certain things\n>>> will be wrong.\n>>> \n>>> The perception that SPV clients could be made nearly as secure as full\n>>> nodes is one example of something that was wrong.\n>>> \n>>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:\n>>>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n>>>> \n>>>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n>>>> \n>>>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n>>>> \n>>>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network\n>>> r\n>>>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n>>>> \n>>>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.\n>>>> \n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> \n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n> \n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/b1fe9aee/attachment-0001.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2015-06-28T05:48:04",
                "message_text_only": "\"Unfortunately no design for fraud proofs which is both efficient and\nsecure has been proposed\u201d\n\nAlso to clarify, there\u2019s no disagreement here, Patrick.\n\n\n> On Jun 27, 2015, at 10:32 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n> \n> Just to clarify, SPV is fundamentally busted as it currently exists. I\u2019m talking about potential optimizations for future protocols.\n> \n> - Eric Lombrozo\n> \n>> On Jun 27, 2015, at 10:29 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:\n>> \n>> Fraud proofs need to be at least more efficient than full node validation.\n>> \n>> Currently they are not.\n>> \n>> On 06/27/2015 09:54 PM, Eric Lombrozo wrote:\n>>> Fraud proofs actually don\u2019t need to be made super efficient\u2026but they do need to be secure, of course.\n>>> \n>>> The trick is aligning incentives. In order for fraud proofs to be widely available there needs to be a market for them - there must be a way to buy one (because producing one is not free). What makes such a scheme actually practical is that very few of these fraud proofs ever need to actually be executed - it\u2019s a classical Nimzowischian case of the threat being much stronger than the execution.\n>>> \n>>> - Eric Lombrozo\n>>> \n>>>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <patrick.strateman at gmail.com> wrote:\n>>>> \n>>>>> Further, it appears clear that the original author intended\n>>>> organizations operating full network nodes would provide connectivity to\n>>>> light clients and these light clients would make up the majority of the\n>>>> user base.\n>>>> \n>>>> Satoshi also believed that fraud proofs would be widely available and\n>>>> practical.\n>>>> \n>>>> If fraud proofs were practical SPV client security would be much closer\n>>>> to full node security than it is today.\n>>>> \n>>>> Unfortunately no design for fraud proofs which is both efficient and\n>>>> secure has been proposed; much less implemented and deployed.\n>>>> \n>>>> In building a system as new and innovative as bitcoin certain things\n>>>> will be wrong.\n>>>> \n>>>> The perception that SPV clients could be made nearly as secure as full\n>>>> nodes is one example of something that was wrong.\n>>>> \n>>>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:\n>>>>> There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n>>>>> \n>>>>> The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n>>>>> \n>>>>> It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n>>>>> \n>>>>> Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the network\n>>>> r\n>>>>> esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n>>>>> \n>>>>> If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.\n>>>>> \n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> \n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> \n>> \n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150627/34cc451d/attachment.sig>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-28T15:23:49",
                "message_text_only": "There's a couple of things that Patrick could have been referring to when\nhe said \"Fraud proofs need to be at least more efficient than full node\nvalidation. Currently they are not.\"\n\nOne of the issues is that you cannot efficiently encode or validate a proof\nof a negative. If a transaction input is a double-spend, you can build a\nsemi-reasonable sized proof of the prior spend (or very reasonably sized\nwith block header commitments). However if a transaction spends an output\nwhich never existed in the first place, there is no reasonable way to\nassert this other than witnessing the entire block history, as a full node\ndoes.\n\nUTXO commitments are the nominal solution here. You commit the validator\nstate in each block, and then you can prove things like a negative by\nreferencing that state commitment. The trouble is this requires maintaining\na hash tree commitment over validator state, which turns out to be insanely\nexpensive. With the UTXO commitment scheme (the others are not better) that\nends up requiring 15 - 22x more I/O during block validation. And I/O is\npresently a limiter to block validation speed. So if you thought 8MB was\nwhat bitcoin today could handle, and you also want this commitment scheme\nfor fraud proofs, then you should be arguing for a block size limit\ndecrease (to 500kB), not increase.\n\nOn Sat, Jun 27, 2015 at 10:32 PM, Eric Lombrozo <elombrozo at gmail.com> wrote:\n\n> Just to clarify, SPV is fundamentally busted as it currently exists. I\u2019m\n> talking about potential optimizations for future protocols.\n>\n> - Eric Lombrozo\n>\n> > On Jun 27, 2015, at 10:29 PM, Patrick Strateman <\n> patrick.strateman at gmail.com> wrote:\n> >\n> > Fraud proofs need to be at least more efficient than full node\n> validation.\n> >\n> > Currently they are not.\n> >\n> > On 06/27/2015 09:54 PM, Eric Lombrozo wrote:\n> >> Fraud proofs actually don\u2019t need to be made super efficient\u2026but they do\n> need to be secure, of course.\n> >>\n> >> The trick is aligning incentives. In order for fraud proofs to be\n> widely available there needs to be a market for them - there must be a way\n> to buy one (because producing one is not free). What makes such a scheme\n> actually practical is that very few of these fraud proofs ever need to\n> actually be executed - it\u2019s a classical Nimzowischian case of the threat\n> being much stronger than the execution.\n> >>\n> >> - Eric Lombrozo\n> >>\n> >>> On Jun 27, 2015, at 7:13 PM, Patrick Strateman <\n> patrick.strateman at gmail.com> wrote:\n> >>>\n> >>>> Further, it appears clear that the original author intended\n> >>> organizations operating full network nodes would provide connectivity\n> to\n> >>> light clients and these light clients would make up the majority of the\n> >>> user base.\n> >>>\n> >>> Satoshi also believed that fraud proofs would be widely available and\n> >>> practical.\n> >>>\n> >>> If fraud proofs were practical SPV client security would be much closer\n> >>> to full node security than it is today.\n> >>>\n> >>> Unfortunately no design for fraud proofs which is both efficient and\n> >>> secure has been proposed; much less implemented and deployed.\n> >>>\n> >>> In building a system as new and innovative as bitcoin certain things\n> >>> will be wrong.\n> >>>\n> >>> The perception that SPV clients could be made nearly as secure as full\n> >>> nodes is one example of something that was wrong.\n> >>>\n> >>> On 06/27/2015 05:14 PM, Santino Napolitano wrote:\n> >>>> There is much heated debate going on right now and I know it can be\n> very stressful but I'd like to point out that it is really amazing how\n> passionately so many feel about this once very small project. Let's not\n> forget there is something really special going on here and we're all part\n> of it.\n> >>>>\n> >>>> The current debate has little to do with block size or hard-forks,\n> IMO. It's about the nature of Bitcoin and what it means to people and how\n> it will grow. I would like to take a moment to share my interpretation of\n> the original author's intent based on everything I could find and read from\n> this person. This is not to say their original vision is paramount-- or\n> even that I got it completely correct but I think it might do us some good\n> to think about.\n> >>>>\n> >>>> It seems as though the incentive conceived of for running a full\n> network node was that it would enable mining. The proceeds from mining (new\n> coins and transaction fees) would be the reward and provide a reason to\n> continue operating these nodes. If fees are ever to be a sufficient reward\n> and still allow for a practical and useful system the size of the blocks\n> must grow significantly as must the user base. I'm not sure that this is\n> really contested but I haven't exhaustively reviewed everyone's opinion so\n> please excuse me if I have marginalized you. If you do contest that I would\n> be interested in hearing it.\n> >>>>\n> >>>> Further, it appears clear that the original author intended\n> organizations operating full network nodes would provide connectivity to\n> light clients and these light clients would make up the majority of the\n> user base. This is completely consistent with current trends in Internet\n> consumption, e.g. tablets and phones are becoming more preferred to even\n> owning a traditional computer. Having the system be entirely decentralized\n> and trustless for every client does not appear to me to be the original\n> design goal. Yes, the whitepaper speaks of the design goal as not having a\n> need for a trusted third party but it does not say that some amount of\n> trust won't be preferred by a majority of users. In fact, in the SPV\n> section it implies some amount of localized trust is perhaps a necessary\n> trade-off and maybe businesses should still run their own full network node\n> if they want the stronger completely trustless guarantee. The global\n> decentralized consensus appears meant to make the network\n> >>> r\n> >>>> esilient to a single government or other adversary's ability to shut\n> the network down. If you really want to trust no one it is your option at a\n> cost and should be possible by design. The author further gives evidence\n> that they believe Moore's observation would keep the idea of running a full\n> network node a practical one at global scale for perpetuity. It does not\n> appear as if they intended for every individual to run one at home nor in\n> their pocket.\n> >>>>\n> >>>> If my interpretation seems incorrect please do point it out. I hope\n> this hasn't been too off-topic and distracting. The original author's\n> engineering ingenuity is what gave me any interest in this project so\n> re-visiting their design and scaling intentions might be helpful for us to\n> move forward-- together.\n> >>>>\n> >>>> _______________________________________________\n> >>>> bitcoin-dev mailing list\n> >>>> bitcoin-dev at lists.linuxfoundation.org\n> >>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>>\n> >>> _______________________________________________\n> >>> bitcoin-dev mailing list\n> >>> bitcoin-dev at lists.linuxfoundation.org\n> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> >\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/4f6678e9/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T15:51:54",
                "message_text_only": "On Sun, Jun 28, 2015 at 5:23 PM, Mark Friedenbach <mark at friedenbach.org> wrote:\n> UTXO commitments are the nominal solution here. You commit the validator state in each block, and then you can prove things like a negative by referencing that state commitment. The trouble is this requires maintaining a hash tree commitment over validator state, which turns out to be insanely expensive. With the UTXO commitment scheme (the others are not better) that ends up requiring 15 - 22x more I/O during block validation. And I/O is presently a limiter to block validation speed. So if you thought 8MB was what bitcoin today could handle, and you also want this commitment scheme for fraud proofs, then you should be arguing for a block size limit decrease (to 500kB), not increase.\n\nWhat about a TXO and a STXO O(1)-append commitment? That shouldn't\ncause that much overhead and you can build UTXO from TXO - STXO.\nI know it's not so efficient in some respects but it scales better I think."
            },
            {
                "author": "Mark Friedenbach",
                "date": "2015-06-28T16:15:28",
                "message_text_only": "Assuming randomly-picked outputs, it's actually worse. The slowdown factor\nhas to do with the depth of the tree, and TXO and STXO trees are always\ngrowing. It's still complexity O(log N), but with TXO/STXO N is the size of\nthe entire block chain history, whereas with UTXO it's just the set of\nunspent transaction outputs.\n\nOf course that's not a fair assumption since in an insertion-ordered tree\nusing the Merkle mountain range data structure would have significantly\nshorter paths for recent outputs. But the average case might be about the\nsame, and it comes with a slew of other tradeoffs that make it hard to\ncompare head-to-head in the abstract. Ultimately both need to be written\nand benchmarked.\n\nBut it is not the case that TXO/STXO gives you constant time updates. The\nappend-only TXO tree might be close to that, but you'd still need the spent\nor unspent tree which is not insertion ordered. There are alternatives like\nupdating the TXO tree and requiring blocks and transactions to carry proofs\nwith them (so validators can be stateless), but that pushes the same\n(worse, actually) problem to whoever generated or assembled the proof. It\nmay be a tradeoff worth making, but it's not an easy answer...\n\nOn Sun, Jun 28, 2015 at 8:51 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n\n> On Sun, Jun 28, 2015 at 5:23 PM, Mark Friedenbach <mark at friedenbach.org>\n> wrote:\n> > UTXO commitments are the nominal solution here. You commit the validator\n> state in each block, and then you can prove things like a negative by\n> referencing that state commitment. The trouble is this requires maintaining\n> a hash tree commitment over validator state, which turns out to be insanely\n> expensive. With the UTXO commitment scheme (the others are not better) that\n> ends up requiring 15 - 22x more I/O during block validation. And I/O is\n> presently a limiter to block validation speed. So if you thought 8MB was\n> what bitcoin today could handle, and you also want this commitment scheme\n> for fraud proofs, then you should be arguing for a block size limit\n> decrease (to 500kB), not increase.\n>\n> What about a TXO and a STXO O(1)-append commitment? That shouldn't\n> cause that much overhead and you can build UTXO from TXO - STXO.\n> I know it's not so efficient in some respects but it scales better I think.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/0d600d01/attachment-0001.html>"
            },
            {
                "author": "Santino Napolitano",
                "date": "2015-06-28T21:53:23",
                "message_text_only": "Is the security concern that a newly announced block may not actually reflect a valid block (but valid enough to trick the client; i.e. it appears to link to the best-work chain) in an attempt to defraud the light client?\n\nLike I pointed out, I'm not sure the goal was _perfect_ decentralization. The author seemed primarily keen to avoid having a single organization with direct control over the ledger. I think your specific fear could be mitigated by the light client peering with a node the light client somewhat trusts -- or at least one which has no incentive to cooperate in some attack against it which requires non-trivial mining expenditure. The IP would be logged and the fraud could be taken to a court if the light client chooses a node in the proper jurisdiction. I think for many use cases that might be sufficient. If it's a more serious transaction other nodes could be consulted.\n\nIf my reasoning is in error please correct. I'm sure many of you are much better at game theory than I.\n\n28.06.2015, 05:13, \"Patrick Strateman\" <patrick.strateman at gmail.com>:\n>> \u00a0Further, it appears clear that the original author intended\n>\n> organizations operating full network nodes would provide connectivity to\n> light clients and these light clients would make up the majority of the\n> user base.\n>\n> Satoshi also believed that fraud proofs would be widely available and\n> practical.\n>\n> If fraud proofs were practical SPV client security would be much closer\n> to full node security than it is today.\n>\n> Unfortunately no design for fraud proofs which is both efficient and\n> secure has been proposed; much less implemented and deployed.\n>\n> In building a system as new and innovative as bitcoin certain things\n> will be wrong.\n>\n> The perception that SPV clients could be made nearly as secure as full\n> nodes is one example of something that was wrong.\n>\n> On 06/27/2015 05:14 PM, Santino Napolitano wrote:\n>> \u00a0There is much heated debate going on right now and I know it can be very stressful but I'd like to point out that it is really amazing how passionately so many feel about this once very small project. Let's not forget there is something really special going on here and we're all part of it.\n>>\n>> \u00a0The current debate has little to do with block size or hard-forks, IMO. It's about the nature of Bitcoin and what it means to people and how it will grow. I would like to take a moment to share my interpretation of the original author's intent based on everything I could find and read from this person. This is not to say their original vision is paramount-- or even that I got it completely correct but I think it might do us some good to think about.\n>>\n>> \u00a0It seems as though the incentive conceived of for running a full network node was that it would enable mining. The proceeds from mining (new coins and transaction fees) would be the reward and provide a reason to continue operating these nodes. If fees are ever to be a sufficient reward and still allow for a practical and useful system the size of the blocks must grow significantly as must the user base. I'm not sure that this is really contested but I haven't exhaustively reviewed everyone's opinion so please excuse me if I have marginalized you. If you do contest that I would be interested in hearing it.\n>>\n>> \u00a0Further, it appears clear that the original author intended organizations operating full network nodes would provide connectivity to light clients and these light clients would make up the majority of the user base. This is completely consistent with current trends in Internet consumption, e.g. tablets and phones are becoming more preferred to even owning a traditional computer. Having the system be entirely decentralized and trustless for every client does not appear to me to be the original design goal. Yes, the whitepaper speaks of the design goal as not having a need for a trusted third party but it does not say that some amount of trust won't be preferred by a majority of users. In fact, in the SPV section it implies some amount of localized trust is perhaps a necessary trade-off and maybe businesses should still run their own full network node if they want the stronger completely trustless guarantee. The global decentralized consensus appears meant to make the netwo\n rk\n>\n> \u00a0\u00a0r\n>> \u00a0\u00a0esilient to a single government or other adversary's ability to shut the network down. If you really want to trust no one it is your option at a cost and should be possible by design. The author further gives evidence that they believe Moore's observation would keep the idea of running a full network node a practical one at global scale for perpetuity. It does not appear as if they intended for every individual to run one at home nor in their pocket.\n>>\n>> \u00a0If my interpretation seems incorrect please do point it out. I hope this hasn't been too off-topic and distracting. The original author's engineering ingenuity is what gave me any interest in this project so re-visiting their design and scaling intentions might be helpful for us to move forward-- together.\n>>\n>> \u00a0_______________________________________________\n>> \u00a0bitcoin-dev mailing list\n>> \u00a0bitcoin-dev at lists.linuxfoundation.org\n>> \u00a0https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            }
        ],
        "thread_summary": {
            "title": "Original Vision",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Eric Lombrozo",
                "Patrick Strateman",
                "Santino Napolitano",
                "Jorge Tim\u00f3n",
                "Mark Friedenbach",
                "Aaron Voisine"
            ],
            "messages_count": 11,
            "total_messages_chars_count": 51358
        }
    },
    {
        "title": "[bitcoin-dev] TXO + STXO vs UTXO Re:  Original Vision",
        "thread_messages": [
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2015-06-28T17:47:22",
                "message_text_only": "On Sun, Jun 28, 2015 at 6:15 PM, Mark Friedenbach <mark at friedenbach.org> wrote:\n> Assuming randomly-picked outputs, it's actually worse. The slowdown factor\n> has to do with the depth of the tree, and TXO and STXO trees are always\n> growing. It's still complexity O(log N), but with TXO/STXO N is the size of\n> the entire block chain history, whereas with UTXO it's just the set of\n> unspent transaction outputs.\n\nBut you can prune them.\n\n> But it is not the case that TXO/STXO gives you constant time updates. The\n> append-only TXO tree might be close to that, but you'd still need the spent\n> or unspent tree which is not insertion ordered. There are alternatives like\n> updating the TXO tree and requiring blocks and transactions to carry proofs\n> with them (so validators can be stateless), but that pushes the same (worse,\n> actually) problem to whoever generated or assembled the proof. It may be a\n> tradeoff worth making, but it's not an easy answer...\n\nNo, no.\nYou don't need a non-constant update of any spent flag (because\nthere's none), that's the whole point of having 2 separated trees for\neverything on one side, and only spent outputs on the other side.\nThis proposal is not useful for SPV wallets but it lets you build the\nUTXO at any height from the committed txo + stxo trees and update it\nyourself from there. You could have a fast synchronization mode in\nwhich you're not really a full node from the beginning but you end up\nvalidating the older blocks later, when you have time after\nsynchronizing to the tip of the chain.\n\nFor the SPV use case you would need a committed UTXO (or the TXO with\na fIsSpent bit) but that seems to be more complicated and can be done\nseparately later.\n\n> On Sun, Jun 28, 2015 at 8:51 AM, Jorge Tim\u00f3n <jtimon at jtimon.cc> wrote:\n>>\n>> On Sun, Jun 28, 2015 at 5:23 PM, Mark Friedenbach <mark at friedenbach.org>\n>> wrote:\n>> > UTXO commitments are the nominal solution here. You commit the validator\n>> > state in each block, and then you can prove things like a negative by\n>> > referencing that state commitment. The trouble is this requires maintaining\n>> > a hash tree commitment over validator state, which turns out to be insanely\n>> > expensive. With the UTXO commitment scheme (the others are not better) that\n>> > ends up requiring 15 - 22x more I/O during block validation. And I/O is\n>> > presently a limiter to block validation speed. So if you thought 8MB was\n>> > what bitcoin today could handle, and you also want this commitment scheme\n>> > for fraud proofs, then you should be arguing for a block size limit decrease\n>> > (to 500kB), not increase.\n>>\n>> What about a TXO and a STXO O(1)-append commitment? That shouldn't\n>> cause that much overhead and you can build UTXO from TXO - STXO.\n>> I know it's not so efficient in some respects but it scales better I\n>> think.\n>\n>"
            }
        ],
        "thread_summary": {
            "title": "TXO + STXO vs UTXO Re:  Original Vision",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Jorge Tim\u00f3n"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2845
        }
    },
    {
        "title": "[bitcoin-dev] Tree Chains",
        "thread_messages": [
            {
                "author": "Andy Schroder",
                "date": "2015-06-29T01:45:57",
                "message_text_only": "Hello,\n\nI haven't heard anything about Peter Todd's tree chain idea \n(https://letstalkbitcoin.com/ltb104-tree-chains-with-peter-todd/) in a \nwhile. Is there some reason it has dropped from discussion? Was there \nsome major flaw discovered? It seemed like it would be an additional \ntechnology actively discussed as an alternative to raising the block size.\n\n\n\n\n-- \nAndy Schroder\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 555 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150628/a0d1f97f/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Tree Chains",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Andy Schroder"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 665
        }
    },
    {
        "title": "[bitcoin-dev] BIP: Full Replace-by-Fee deployment schedule",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2015-06-29T05:07:26",
                "message_text_only": "Gregory: Please assign a BIP #\n\nhttps://github.com/petertodd/bips/blob/bip-full-rbf-deadline/bip-full-rbf-deadline.mediawiki\n\n<pre>\n  BIP: ??\n  Title: Full Replace-by-Fee Deployment Schedule\n  Author: Peter Todd <pete at petertodd.org>\n  Status: Draft\n  Type: Standards Track\n  Created: 2015-06-29\n</pre>\n\n==Summary==\n\nThis BIP proposes a deployment schedule for full replace-by-fee (full-RBF)\nfunctionality, with an automatic activation of Tuesday April 5th, 2016, at 3pm\nUTC upon which supporting relay nodes and miners will enable full-RBF mempool\nbehavior on mainnet. Prior to the activation deadline supporting nodes and\nminers will support first-seen-safe(1) replace-by-fee (FSS-RBF) mempool behavior.\n\n\n==Motivation==\n\nFull-RBF has significant efficiency advantages(2) over alternatives such as\nFSS-RBF and Child-Pays-For-Parent for a wide variety of common transaction\npatterns such as fee-bumping and multiple sequential payments, as well as smart\ncontract protocols such as payment channels and auctions. Miner support would\nlet the wider Bitcoin community use the blockchain more efficiently, supporting\nmore transactions per second in less blockchain space.\n\nWhile full-RBF does allow users to \"undo\" transactions after they have been\nsent, the ability of decentralized wallets to protect users from double-spends\nhas proven to be near-zero.(3) Centralized services have had some success in\ndoing so, albeit at the cost of having to sybil attack the network, a strategy\nthat cannot scale to more than a small handful of payment processing\ncompanies.(3)\n\nEven then success is not assured. Worryingly large payment providers have shown\nwillingness(4) to consider extreme measures such as entering into legal\ncontracts directly with large miners to ensure their transactions get mined.\nThis is a significant centralization risk and it is not practical or even\npossible for small miners to enter into these contracts, leading to a situation\nwhere moving your hashing power to a larger pool will result in higher profits\nfrom hashing power contracts; if these payment providers secure a majority of\nhashing power with these contracts inevitably there will be a temptation to\nkick non-compliant miners off the network entirely with a 51% attack.\n\nIt does not make sense for the whole Bitcoin community to incur higher\ntransaction costs, sybil attacks, and centralization risk for the sake of a\nsmall handful of companies. However an orderly, planned, upgrade is still\ndesirable.\n\n\n==Implementation==\n\nAs full-RBF usage patterns, unlike first-seen-dependent zeroconf, does not\ndepend on mempool syncronization this BIP won't specify detailed relay node\nbehavior. However the following implementation is reasonable and well-tested\nwith considerations such as DoS attacks taken into account:\n\n    https://github.com/bitcoin/bitcoin/pull/6352\n\nTo maximize engineer availability the deadline date was chosen to be towards,\nbut not at, the start of the week, and away from any public holidays. 3pm UTC\nwas chosen as a compromise between Pacific West Coast and European timezones;\nminers in the Asian timezones may choose to manually set their exact switchover\ndate a few hours ahead with little risk to themselves. Nine months into the\nfuture was chosen on the basis of allowing time for affected companies to plan\nfor the upgrade, without pushing the upgrade unnecessarily far into the future.\n\n\n==Credits==\n\nThanks goes to Jeff Garzik for suggesting the idea of a full-RBF deployment\ndeadline.\n\n\n==References==\n\n1) \"First-Seen-Safe Replace-by-Fee\",\nPeter Todd, Bitcoin-development mailing list, May 25th 2015,\nhttp://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n\n2) \"Cost savings by using replace-by-fee, 30-90%\",\nPeter Todd, Bitcoin-development mailing list, May 25th 2015,\nhttp://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07813.html\n\n3) \"F2Pool has enabled full replace-by-fee\",\nPeter Todd, Bitcoin-development mailing list, June 19th 2015,\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08422.html\n\n4) \"F2Pool has enabled full replace-by-fee\",\nAdrian Macneil, Director of Engineering, Coinbase,\nBitcoin-development mailing list, June 19th 2015,\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08443.html\n\n==Copyright==\n\nThis document is placed in the public domain.\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000002b9facd4d17c9e3f1f494f9336f7dc5dae35d8918852890\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/ebb07fc1/attachment.sig>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-29T05:40:25",
                "message_text_only": "On Monday, June 29, 2015 5:07:26 AM Peter Todd wrote:\n> Gregory: Please assign a BIP #\n> \n> https://github.com/petertodd/bips/blob/bip-full-rbf-deadline/bip-full-rbf-d\n> eadline.mediawiki\n\nPolicy is node/miner fiat and not the domain of BIPs.\n\nLuke"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2015-06-29T05:43:13",
                "message_text_only": "On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:\n> Policy is node/miner fiat and not the domain of BIPs.\n\nEven accepting the premise that policy is pure local fiat, the\nconclusion doesn't follow for me. BIPs about best practices or\nespecially anything where interop or coordination are, I think,\nreasonable uses of the process.\n\nE.g. you might want to know what other kinds of policy are in use if\nyou're to have any hope of authoring transactions that work at all!"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-29T05:51:55",
                "message_text_only": "On Monday, June 29, 2015 5:43:13 AM Gregory Maxwell wrote:\n> On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:\n> > Policy is node/miner fiat and not the domain of BIPs.\n> \n> Even accepting the premise that policy is pure local fiat, the\n> conclusion doesn't follow for me. BIPs about best practices or\n> especially anything where interop or coordination are, I think,\n> reasonable uses of the process.\n> \n> E.g. you might want to know what other kinds of policy are in use if\n> you're to have any hope of authoring transactions that work at all!\n\nThen we are to start issuing a new BIP for every node's policy? This has no \nend - though it might make sense for an independent and updated database. \nMixing protocol standards with policy suggestions makes a very risky situation \nwhere one can potentially hold a miner liable for not enforcing the BIP; ie, \ngovernment regulation of Bitcoin itself. I don't think most people want to go \nthere...\n\nLuke"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-29T05:56:59",
                "message_text_only": "On Mon, Jun 29, 2015 at 05:51:55AM +0000, Luke Dashjr wrote:\n> On Monday, June 29, 2015 5:43:13 AM Gregory Maxwell wrote:\n> > On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:\n> > > Policy is node/miner fiat and not the domain of BIPs.\n> > \n> > Even accepting the premise that policy is pure local fiat, the\n> > conclusion doesn't follow for me. BIPs about best practices or\n> > especially anything where interop or coordination are, I think,\n> > reasonable uses of the process.\n> > \n> > E.g. you might want to know what other kinds of policy are in use if\n> > you're to have any hope of authoring transactions that work at all!\n> \n> Then we are to start issuing a new BIP for every node's policy? This has no \n> end - though it might make sense for an independent and updated database. \n> Mixing protocol standards with policy suggestions makes a very risky situation \n> where one can potentially hold a miner liable for not enforcing the BIP; ie, \n> government regulation of Bitcoin itself. I don't think most people want to go \n> there...\n\nRemember that one of the goals of full-RBF is to explicitly reject the\nidea that miners should have any obligation with regard to what they're\nmining. I perhaps should say that explicitly in my BIP proposal; I say\nit implicitly by pointing out how the BIP *doesn't* define an exact\nstandard, but rather only an suggests an implementation as a starting\npoint.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000ffad4a87861689c067f5dd3b98b84d8096572c163aa913a\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/e2feb2ae/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-29T05:53:15",
                "message_text_only": "On Mon, Jun 29, 2015 at 05:43:13AM +0000, Gregory Maxwell wrote:\n> On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:\n> > Policy is node/miner fiat and not the domain of BIPs.\n> \n> Even accepting the premise that policy is pure local fiat, the\n> conclusion doesn't follow for me. BIPs about best practices or\n> especially anything where interop or coordination are, I think,\n> reasonable uses of the process.\n> \n> E.g. you might want to know what other kinds of policy are in use if\n> you're to have any hope of authoring transactions that work at all!\n\nFor example, consider Luke-Jr's own BIP19, M-of-N Standard Transactions,\na non-consensus-critical suggested policy change!\n\n    https://github.com/bitcoin/bips/blob/master/bip-0019.mediawiki\n\nAnyway, full-RBF has significant impacts for wallet authors and many\nother stakeholders. At minimum it changes how you will want to author\nand (re)author transactions, much like BIP19 does.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000ffad4a87861689c067f5dd3b98b84d8096572c163aa913a\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/c0f09f91/attachment.sig>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-29T06:00:49",
                "message_text_only": "On Monday, June 29, 2015 5:53:15 AM Peter Todd wrote:\n> On Mon, Jun 29, 2015 at 05:43:13AM +0000, Gregory Maxwell wrote:\n> > On Mon, Jun 29, 2015 at 5:40 AM, Luke Dashjr <luke at dashjr.org> wrote:\n> > > Policy is node/miner fiat and not the domain of BIPs.\n> > \n> > Even accepting the premise that policy is pure local fiat, the\n> > conclusion doesn't follow for me. BIPs about best practices or\n> > especially anything where interop or coordination are, I think,\n> > reasonable uses of the process.\n> > \n> > E.g. you might want to know what other kinds of policy are in use if\n> > you're to have any hope of authoring transactions that work at all!\n> \n> For example, consider Luke-Jr's own BIP19, M-of-N Standard Transactions,\n> a non-consensus-critical suggested policy change!\n> \n>     https://github.com/bitcoin/bips/blob/master/bip-0019.mediawiki\n\nBIP 19 does not explicitly purport to directly change policy. It defines a \nstandard way of assembling multisig transactions.\n\n> Anyway, full-RBF has significant impacts for wallet authors and many\n> other stakeholders. At minimum it changes how you will want to author\n> and (re)author transactions, much like BIP19 does.\n\nThis is omitted from the BIP (in fact, it doesn't even have a Specification \nsection!). No objections to a BIP specifying standards to use for \nauthoring/modifying transactions for RBF, but it should leave out policy (or \nat least constrain it to a strictly non-normative section.\n\nLuke"
            },
            {
                "author": "sickpig at gmail.com",
                "date": "2015-06-29T06:16:41",
                "message_text_only": "Hi Peter,\n\n> ==References==\n>\n> 1) \"First-Seen-Safe Replace-by-Fee\",\n> Peter Todd, Bitcoin-development mailing list, May 25th 2015,\n>\nhttp://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07829.html\n>\n> 2) \"Cost savings by using replace-by-fee, 30-90%\",\n> Peter Todd, Bitcoin-development mailing list, May 25th 2015,\n>\nhttp://www.mail-archive.com/bitcoin-development%40lists.sourceforge.net/msg07813.html\n>\n> 3) \"F2Pool has enabled full replace-by-fee\",\n> Peter Todd, Bitcoin-development mailing list, June 19th 2015,\n>\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08422.html\n>\n> 4) \"F2Pool has enabled full replace-by-fee\",\n> Adrian Macneil, Director of Engineering, Coinbase,\n> Bitcoin-development mailing list, June 19th 2015,\n>\nhttp://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg08443.html\n\njust a minor nit pick, you should update \"References\" links using the new\nmailing list archive.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/538a6134/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-30T00:21:35",
                "message_text_only": "On 6/28/2015 10:07 PM, Peter Todd wrote:\n> Worryingly large payment providers have shown\n> willingness(4) to consider extreme measures such as entering into legal\n> contracts directly with large miners to ensure their transactions get mined.\n> This is a significant centralization risk and it is not practical or even\n> possible for small miners to enter into these contracts, leading to a situation\n> where moving your hashing power to a larger pool will result in higher profits\n> from hashing power contracts; if these payment providers secure a majority of\n> hashing power with these contracts inevitably there will be a temptation to\n> kick non-compliant miners off the network entirely with a 51% attack.\n>\n\nYour incomprehensible meddling with successful usage patterns threatens \nto have unintended consequences directly in opposition to your own \nstated goal of decentralization.  And yet you persist.\n\nAs we deliberately break things and turn the P2P network into a \ncompletely unpredictable hodge-podge of relay policies, we should expect \nmany more participants to bypass the P2P network entirely.\n\nMany of the pieces are already in place.\n\nIf we wanted the P2P network to have more predicable behavior, it would \nbe possible for nodes to provide incentives to their neighbors.  For \nexample, if you had a pair of nodes, you could test your peers to see \nthat they actually do relay \"standard\" transactions.  This would have \nemergent usability benefits for the P2P network as a whole."
            },
            {
                "author": "Natanael",
                "date": "2015-06-30T00:51:58",
                "message_text_only": "Den 30 jun 2015 02:21 skrev \"Tom Harding\" <tomh at thinlink.com>:\n>\n> On 6/28/2015 10:07 PM, Peter Todd wrote:\n>>\n>> Worryingly large payment providers have shown\n>> willingness(4) to consider extreme measures such as entering into legal\n>> contracts directly with large miners to ensure their transactions get\nmined.\n>> This is a significant centralization risk and it is not practical or even\n>> possible for small miners to enter into these contracts, leading to a\nsituation\n>> where moving your hashing power to a larger pool will result in higher\nprofits\n>> from hashing power contracts; if these payment providers secure a\nmajority of\n>> hashing power with these contracts inevitably there will be a temptation\nto\n>> kick non-compliant miners off the network entirely with a 51% attack.\n>>\n>\n> Your incomprehensible meddling with successful usage patterns threatens\nto have unintended consequences directly in opposition to your own stated\ngoal of decentralization.  And yet you persist.\n>\n> As we deliberately break things and turn the P2P network into a\ncompletely unpredictable hodge-podge of relay policies, we should expect\nmany more participants to bypass the P2P network entirely.\n\nWhat you are asking for is TSA style reactive security and unverifiable and\nfundamentally untrustable security mechanisms, rejecting proactive security\non the grounds that it is inconvenient.\n\nWhat you ask to see implemented will trivially fall to a sybil attack. It\nisn't securable. It is running on the honor system exclusively. It will be\nattacked, it will fail, losses will be had, the attackers will walk away\nwith embarrassingly large sums.\n\nYou want verifiable behavior? Incentives to tell the truth? Incentives to\nbe consistent? Multisignature notaries (Greenaddress.it), payment channel\nbased hub-and-spokes (LN,  Stroem), etc... Trusting the P2P network is\nfutile. You need one accountable party that is actually capable of\nenforcing the behavior you ask for, one that can build a reputation over\ntime - the P2P nodes you wish to hold accountable are on the other hand\npowerless to stop an actual attack, their reputations are therefore\nmeaningless and irrelevant. Multisignature notaries aren't, as they can\nstop an attack, and they can be sued for breach of contract if they don't -\nneither of those applies to P2P nodes.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/725125ab/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-30T01:00:11",
                "message_text_only": "On 6/29/2015 5:51 PM, Natanael wrote:\n> What you ask to see implemented will trivially fall to a sybil attack. \n> It isn't securable. It is running on the honor system exclusively. It \n> will be attacked, it will fail, losses will be had, the attackers will \n> walk away with embarrassingly large sums. \n\nOh please.  Checking that a node does relay something is not much \ndifferent than banning it for relaying garbage.\n\nIt just happens to require that you have two nodes and coordinate them \nsomehow.  I didn't offer a complete design, don't claim magical \nproperties, and certainly didn't mean to imply that nodes passing a test \ncould be trusted (as you suggest with your \"accountable parties\")."
            },
            {
                "author": "Natanael",
                "date": "2015-06-30T01:10:23",
                "message_text_only": "Den 30 jun 2015 03:00 skrev \"Tom Harding\" <tomh at thinlink.com>:\n>\n> On 6/29/2015 5:51 PM, Natanael wrote:\n>>\n>> What you ask to see implemented will trivially fall to a sybil attack.\nIt isn't securable. It is running on the honor system exclusively. It will\nbe attacked, it will fail, losses will be had, the attackers will walk away\nwith embarrassingly large sums.\n>\n>\n> Oh please.  Checking that a node does relay something is not much\ndifferent than banning it for relaying garbage.\n>\n> It just happens to require that you have two nodes and coordinate them\nsomehow.  I didn't offer a complete design, don't claim magical properties,\nand certainly didn't mean to imply that nodes passing a test could be\ntrusted (as you suggest with your \"accountable parties\").\n\nBut the check means nothing at all to you since no information which you\ncan learn from doing so can be trusted for use in decision making of any\nkind, so why do it? Unless you pay for hosting of that particular node\nwhich you test, you have no reason to care for any reason other than simple\nstatistics.\n\nThe claims I made is based on simple economic analysis - if *to be able to\nattack* first requires effort and risk that exceed the payoff, you're\nunlikely to try. Being legally accountable and identified in advance and\nhaving to build reputation before being trusted with attack-worthy sums is\nstrongly discouraging.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/4f0ff3aa/attachment.html>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-30T01:18:01",
                "message_text_only": "On 6/29/2015 6:10 PM, Natanael wrote:\n> you have no reason to care\n\nOf course I do.  I'll boot them and replace them with somebody who will \nrelay the items I send them.  I'm not here to send things into a black \nhole taking up one of my connection slots."
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-30T01:37:36",
                "message_text_only": "On Mon, Jun 29, 2015 at 05:21:35PM -0700, Tom Harding wrote:\n> On 6/28/2015 10:07 PM, Peter Todd wrote:\n> >Worryingly large payment providers have shown\n> >willingness(4) to consider extreme measures such as entering into legal\n> >contracts directly with large miners to ensure their transactions get mined.\n> >This is a significant centralization risk and it is not practical or even\n> >possible for small miners to enter into these contracts, leading to a situation\n> >where moving your hashing power to a larger pool will result in higher profits\n> >from hashing power contracts; if these payment providers secure a majority of\n> >hashing power with these contracts inevitably there will be a temptation to\n> >kick non-compliant miners off the network entirely with a 51% attack.\n> >\n> \n> Your incomprehensible meddling with successful usage patterns\n> threatens to have unintended consequences directly in opposition to\n> your own stated goal of decentralization.  And yet you persist.\n> \n> As we deliberately break things and turn the P2P network into a\n> completely unpredictable hodge-podge of relay policies, we should\n> expect many more participants to bypass the P2P network entirely.\n> \n> Many of the pieces are already in place.\n> \n> If we wanted the P2P network to have more predicable behavior, it\n> would be possible for nodes to provide incentives to their\n> neighbors.  For example, if you had a pair of nodes, you could test\n> your peers to see that they actually do relay \"standard\"\n> transactions.  This would have emergent usability benefits for the\n> P2P network as a whole.\n\nTo be clear, full-RBF is a change that broadens what the P2P network\nrelays - transactions previously not relayed are now relayed. Under no\ncircumstance will full-RBF result in transactions *not* being relayed\nthat previously were relayed. This makes the P2P network more useful\nrather than less, as it gives a predictable and uniform method to get\ntransactions to a wider variety of miners with a wider variety of\npolicies.\n\nNote how even if no miners ever supported full-RBF, supporting full-RBF\non relay nodes would still be useful to users as it provides an easy and\ncost-effective mechanism to rebroadcast transactions. In fact,\nsupporting full-RBF by default and disabling it if getblocktemplate is\ncalled would be reasonable, if more than a bit of a hack!\n\nIn any case, my pull-req lets you set -fullrbfactivationtime=0 as a\nsimple and easy way to disable full-RBF functionality. Miners and relay\nnodes who choose not to support it can easily do so, similar to how\nOP_RETURN transactions can be disabled with -datacarrier=0\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000bfe93181a10e2f12a45da877b5026ae26988e936a1322ae\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/3702a32a/attachment.sig>"
            },
            {
                "author": "Adam Back",
                "date": "2015-06-30T13:12:52",
                "message_text_only": "It is correct to view first-seen miner and relay policy as\nhonour-based, though it is the current default.\n\nI think it would be better to deploy full-RBF in an opt-in way and\nleave the current default miner & relay policies as is.  So for\nexample a new signature flag or transaction type that is marked as\nopting-in waiving the first-seen policy.\n\nIn this way we can get a smoother transition for people away from the\nfirst-seen assumption, towards greenaddress (trust based) and\nlightning / payment channel solutions.  Mid-term the channel and hub\nmodel can provide fast secure 0-confirm transactions, which are\ngenerically not known to be directly and robustly securable via miner\nconsensus.\n\nAs we've seen abruptly stopping the first-seen miner & relay policy is\nrisky and unpopular and causes people to seek contracts with miners to\nretain first-seen.  This is itself a bad trend for fungibility for\nobvious reasons.\n\nWe shouldn't prejudge people's and segment's of business weak-reliance\non first-seen.  Some types of payments are generally high trust (known\nrelationships) or physical stores or very low marginal cost (coffee\nmarginal cost <10c, sale price > $2 or lower ebook, audio stream etc\nas embodied by fremium model).  It is not ours to prejudge and kill\ntheir business.  It our job to help improve network security however,\nso that they do not have to eat a fraud cost.  And that is do able\nwith trust via greenaddress, or without trust (other than\ntime-preference) via the hub & channel model.\n\nSecurity maybe incrementally improvable via non-spendable relaying of\nproof of double-spent status, and services that try to measure % of\nminers by hashrate with assumption of first-seen that have have seen a\ngiven transaction first, though I am not sure such approaches are\nrobust enough to invest time in vs greenaddress or hub & channel.\n\nAny thoughts on the simplest way to support an opt-in version of full-RBF?\n\nAdam\n\n\nOn 30 June 2015 at 03:37, Peter Todd <pete at petertodd.org> wrote:\n> On Mon, Jun 29, 2015 at 05:21:35PM -0700, Tom Harding wrote:\n>> On 6/28/2015 10:07 PM, Peter Todd wrote:\n>> >Worryingly large payment providers have shown\n>> >willingness(4) to consider extreme measures such as entering into legal\n>> >contracts directly with large miners to ensure their transactions get mined.\n>> >This is a significant centralization risk and it is not practical or even\n>> >possible for small miners to enter into these contracts, leading to a situation\n>> >where moving your hashing power to a larger pool will result in higher profits\n>> >from hashing power contracts; if these payment providers secure a majority of\n>> >hashing power with these contracts inevitably there will be a temptation to\n>> >kick non-compliant miners off the network entirely with a 51% attack.\n>> >\n>>\n>> Your incomprehensible meddling with successful usage patterns\n>> threatens to have unintended consequences directly in opposition to\n>> your own stated goal of decentralization.  And yet you persist.\n>>\n>> As we deliberately break things and turn the P2P network into a\n>> completely unpredictable hodge-podge of relay policies, we should\n>> expect many more participants to bypass the P2P network entirely.\n>>\n>> Many of the pieces are already in place.\n>>\n>> If we wanted the P2P network to have more predicable behavior, it\n>> would be possible for nodes to provide incentives to their\n>> neighbors.  For example, if you had a pair of nodes, you could test\n>> your peers to see that they actually do relay \"standard\"\n>> transactions.  This would have emergent usability benefits for the\n>> P2P network as a whole.\n>\n> To be clear, full-RBF is a change that broadens what the P2P network\n> relays - transactions previously not relayed are now relayed. Under no\n> circumstance will full-RBF result in transactions *not* being relayed\n> that previously were relayed. This makes the P2P network more useful\n> rather than less, as it gives a predictable and uniform method to get\n> transactions to a wider variety of miners with a wider variety of\n> policies.\n>\n> Note how even if no miners ever supported full-RBF, supporting full-RBF\n> on relay nodes would still be useful to users as it provides an easy and\n> cost-effective mechanism to rebroadcast transactions. In fact,\n> supporting full-RBF by default and disabling it if getblocktemplate is\n> called would be reasonable, if more than a bit of a hack!\n>\n> In any case, my pull-req lets you set -fullrbfactivationtime=0 as a\n> simple and easy way to disable full-RBF functionality. Miners and relay\n> nodes who choose not to support it can easily do so, similar to how\n> OP_RETURN transactions can be disabled with -datacarrier=0\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 00000000000000000bfe93181a10e2f12a45da877b5026ae26988e936a1322ae\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "Chris Pacia",
                "date": "2015-06-30T13:49:51",
                "message_text_only": "On 06/30/2015 09:12 AM, Adam Back wrote:\n> It is correct to view first-seen miner and relay policy as\n> honour-based, though it is the current default.\n>\n>\nWhat would be the effect of IBLT on the first seen policy? It seems that\nif a miner has to broadcast extra data with his blocks because he's\nusing full RBF and everyone else is using first-seen then his blocks are\nat a disadvantage in terms of propagation. That wouldn't make first-seen\na hard consensus rule, but rather one rational miners are likely to\nfollow. Or is this effect likely to be minimal?"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-30T14:53:09",
                "message_text_only": "On Tue, Jun 30, 2015 at 09:49:51AM -0400, Chris Pacia wrote:\n> \n> \n> On 06/30/2015 09:12 AM, Adam Back wrote:\n> > It is correct to view first-seen miner and relay policy as\n> > honour-based, though it is the current default.\n> >\n> >\n> What would be the effect of IBLT on the first seen policy? It seems that\n> if a miner has to broadcast extra data with his blocks because he's\n> using full RBF and everyone else is using first-seen then his blocks are\n> at a disadvantage in terms of propagation. That wouldn't make first-seen\n> a hard consensus rule, but rather one rational miners are likely to\n> follow. Or is this effect likely to be minimal?\n\nThe disadvantage can be calculated compensated for by higher fees; if\nthe disadvantage is so large that the higher fees are unaffordable we're\nin big trouble as the guarantees that mempools are in sync are pretty\npoor. (why doublespending zeroconf txs is easy!) For instance, that'd\nimply that sending two simultaneous transactions will cause profit\nlosses to all but the largest miners - who are unaffected - and that\nupgrades that change IsStandard() will cause profit losses, among many\nother problems.\n\nBitcoin just doesn't work if blocks aren't relayed quickly in the worst\ncase.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000000c51793e1f2f6b9bd82dd1579b3e4207e70a0aa8fb953c80\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/41ecd7c1/attachment.sig>"
            },
            {
                "author": "David A. Harding",
                "date": "2015-06-30T14:02:13",
                "message_text_only": "On Tue, Jun 30, 2015 at 03:12:52PM +0200, Adam Back wrote:\n> Any thoughts on the simplest way to support an opt-in version of full-RBF?\n\nBundle it in with BIP62 version-2 (or whatever) transactions.\n\n- As you desire for RBF, the BIP62 transactions are already specified to\n  be opt-in. Nobody has to use them.\n\n- Although BIP62 transactions only prevent third-party mutation, some\n  people might wrongly assume that they prevent all mutation---including\n  double spending.\n\n  We need to make it clear that even with BIP62 transactions, signers\n  can still mutate their own transactions---and what better way to do\n  that than make BIP62 transactions easier to double spend?\n\nThe downside I see is possible further delay of full BIP62. Although, I\nguess it could go the other way too by having developers who want RBF\nhelp push BIP62 into production.\n\n-Dave\n-- \nDavid A. Harding\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 473 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/c739a130/attachment.sig>"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-30T16:05:24",
                "message_text_only": "On Tue, Jun 30, 2015 at 03:12:52PM +0200, Adam Back wrote:\n> It is correct to view first-seen miner and relay policy as\n> honour-based, though it is the current default.\n> \n> I think it would be better to deploy full-RBF in an opt-in way and\n> leave the current default miner & relay policies as is.  So for\n> example a new signature flag or transaction type that is marked as\n> opting-in waiving the first-seen policy.\n> \n> In this way we can get a smoother transition for people away from the\n> first-seen assumption, towards greenaddress (trust based) and\n> lightning / payment channel solutions.  Mid-term the channel and hub\n> model can provide fast secure 0-confirm transactions, which are\n> generically not known to be directly and robustly securable via miner\n> consensus.\n> \n> As we've seen abruptly stopping the first-seen miner & relay policy is\n> risky and unpopular and causes people to seek contracts with miners to\n> retain first-seen.  This is itself a bad trend for fungibility for\n> obvious reasons.\n\nWell, as you know I have good reason to believe those contracts are\nbeing actively worked on right now. I've been talking about this issue\nfor something like two years now, and rather than seeing a shift away\nfrom use of zeroconf, we're seeing new services adopting it, always\nlarge, centralized, startups in the payment space. Meanwhile the story\nfor decentralized wallets is if anything even worse, and most such\nwallets don't even have code to detect double-spends at all.\n\nFrom the point of view of large companies like Coinbase, getting hashing\npower contracts and sybil attacking the network is relatively easy. Why\nwould they invest in genuine improvements when they can take the easy\nway out? Especially when the easy way is something their smaller\ncompetitors simply have no access too? Working on those contracts now\nonly makes sense, especially as the reliability of the P2P network in\nproviding zeroconf guarantees continues to decline as transaction volume\nincreases, and uniformity of nodes decreases.\n\nBy acting sooner rather than later in adopting full-RBF I think we have\na shot at changing the direction of the industry; if we wait I think we\nstand a real chance of that dangerous infrastructure being put into\nplace. Equally, when you ask who is benefiting from the status quo, it\nisn't decentralized wallets, but a small number of centralized startups\nwho have an advantage that the former can't match.\n\n> We shouldn't prejudge people's and segment's of business weak-reliance\n> on first-seen.  Some types of payments are generally high trust (known\n> relationships) or physical stores or very low marginal cost (coffee\n> marginal cost <10c, sale price > $2 or lower ebook, audio stream etc\n> as embodied by fremium model).  It is not ours to prejudge and kill\n> their business.  It our job to help improve network security however,\n> so that they do not have to eat a fraud cost.  And that is do able\n> with trust via greenaddress, or without trust (other than\n> time-preference) via the hub & channel model.\n\nYou know, if the status quo didn't have the downsides I mention above,\nI'd probably agree with you on that point. But the risks outweigh it\nIMO.\n\n> Security maybe incrementally improvable via non-spendable relaying of\n> proof of double-spent status, and services that try to measure % of\n> miners by hashrate with assumption of first-seen that have have seen a\n> given transaction first, though I am not sure such approaches are\n> robust enough to invest time in vs greenaddress or hub & channel.\n\nNote how relaying proof of double-spent status is only useful if you can\ndo something about it; the only method available without a scripting\nlanguage soft-fork is the scorched earth concept, which ironically\nrelies on full-RBF.\n\n> Any thoughts on the simplest way to support an opt-in version of full-RBF?\n\nI'd suggest using nSequence for that purpose by defining non-maxint\nnSequence as allowing RBF. (as well as non-maxint - 1 for nLockTime\nusage to discourage fee sniping) Mark Friedenbach's sequence number BIP\nis going to make use of transaction replacement anyway after all, so\ndoing that would be forward-compatible with it.\n\n-- \n'peter'[:-1]@petertodd.org\n0000000000000000129dec64f63611dc737b87331bb165740fb5552a92833a12\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/7f4d77b6/attachment.sig>"
            },
            {
                "author": "Chris Pacia",
                "date": "2015-06-30T18:23:15",
                "message_text_only": "On 06/30/2015 12:05 PM, Peter Todd wrote:\n> Well, as you know I have good reason to believe those contracts are\n> being actively worked on right now.\nIsn't the whole reason they are working on those contracts because a few\nminers don't use first-seen in all circumstances as it is? Or as a\ncorollary, wouldn't full RBF just create that much more incentive for\nthose type of contracts?"
            }
        ],
        "thread_summary": {
            "title": "BIP: Full Replace-by-Fee deployment schedule",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Natanael",
                "David A. Harding",
                "Adam Back",
                "sickpig at gmail.com",
                "Peter Todd",
                "Gregory Maxwell",
                "Luke Dashjr",
                "Chris Pacia",
                "Tom Harding"
            ],
            "messages_count": 20,
            "total_messages_chars_count": 34978
        }
    },
    {
        "title": "[bitcoin-dev] Bitcoin Core: The globally aware global consensus network",
        "thread_messages": [
            {
                "author": "Michael Naber",
                "date": "2015-06-29T08:33:21",
                "message_text_only": "Bitcoin is globally aware global consensus.\n\nIt means every node both knows about and agrees on every transaction.\n\nDo we need global awareness of every transaction to run a worldwide payment network? Of course not! In fact the limits of today's technology probably would not even allow it.\n\nGlobal awareness is a finite resource. That's okay; hub and spoke, or other clever designs are going to ensure we can run worldwide transactions without requiring global awareness. That's great!\n\nBut even if we have hub and spoke, we still need a \"hub\" at the center. Bitcoin Core needs to focus on being that hub. It needs to be the best globally aware global consensus network that we can build. Let's put aside our differences and focus on this goal. \n\nPart of building the best network means ensuring that network can operate at the highest capacity technology can allow. \n\nIf we run the test-net to show that hardware exists today to safely increase block size to a static 8 MB, then we will have broad developer support to make this happen.\n\nLet's get that done. We can continue to adjust the block size upward in the future as technology permits.\n\nThoughts?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/fbeea316/attachment.html>"
            },
            {
                "author": "Pindar Wong",
                "date": "2015-06-29T09:17:00",
                "message_text_only": "On Mon, Jun 29, 2015 at 4:33 PM, Michael Naber <mickeybob at gmail.com> wrote:\n\n> Bitcoin is globally aware global consensus.\n>\n> It means every node both knows about and agrees on every transaction.\n>\n> Do we need global awareness of every transaction to run a worldwide\n> payment network? Of course not! In fact the limits of today's technology\n> probably would not even allow it.\n>\n> Global awareness is a finite resource. That's okay; hub and spoke, or\n> other clever designs are going to ensure we can run worldwide transactions\n> without requiring global awareness. That's great!\n>\n> But even if we have hub and spoke, we still need a \"hub\" at the center.\n> Bitcoin Core needs to focus on being that hub. It needs to be the best\n> globally aware global consensus network that we can build. Let's put\n> aside our differences and focus on this goal.\n>\n> Part of building the best network means ensuring that network can operate\n> at the highest capacity technology can allow.\n>\n> If we run the test-net to show that hardware exists today to safely\n> increase block size to a static 8 MB, then we will have broad developer\n> support to make this happen.\n>\n\n\nDear Michael,\n\nI'm very supportive of the idea that there should be thorough and adequate\ntesting of any proposed change in the maximum block size (e.g. to 8MB). See\nPeter Todd's earlier posts on the subject.\n\n\n>\n> Let's get that done. We can continue to adjust the block size upward in\n> the future as technology permits.\n>\n\nLet's work together to establish a testing process to establish the\nnecessary data transparency and real-world telemetry to help remove\nuncertainty as best we can.\n\n\n>\n> Thoughts?\n>\n\nEvan has suggested that Huobi would require in the order of 3 months of\ntestings, first on a test-net.\n\nhttp://cointelegraph.com/news/114657/chinese-mining-pools-call-for-consensus-refuse-switch-to-bitcoin-xt\n\nWorking back from BIP101's  11 Jan 2016 date, it would appear that such\ntesting should begin in early-mid October. Hence my offer to host a\nface-to-face meeting in Hong Kong October 14-15.\n\n[NOTE: There is a separate, but possibly related blockchainworkshops.org\nmeeting being planned in HK by Primavera De Filippi and Constance Choi  for\nOctober 12-13. The main meeting room, for 300 people, has been reserved for\nthis community's use on October 14,15. Cyberport is able to setup IRC,\nlivestream video etc. and connect with other satellite conference centers\n(e.g. one in Shanghai) should that be desired.]\n\nThe purpose of such a face-to-face meeting could be discuss the results of\nthe testing process e.g. the first set of test(s), and engineer any\nremaining ones that will be necessary to raise the level of confidence to\nhelp 'mine consensus' for any hard fork.\n\nIf anyone is willing to contribute resources to participate in the design,\nexecution and analysis of such testing, then please post to this thread and\nwe can take it from there.\n\nRespectfully,\n\np.\n\n\n\n\n\n\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150629/3023ca7a/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Core: The globally aware global consensus network",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Michael Naber",
                "Pindar Wong"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 4661
        }
    },
    {
        "title": "[bitcoin-dev] Block size increase oppositionists: please clearly define what you need done to increase block size to a static 8MB, and help do it",
        "thread_messages": [
            {
                "author": "Michael Naber",
                "date": "2015-06-30T15:34:33",
                "message_text_only": "As you know I'm trying to lobby for a block size increase to a static 8MB.\n\nI'm happy to try to get the testing done that people want done for this,\nbut I think the real crux of this issue is that we need to get consensus\nthat we intend to continually push the block size upward as bounded only by\ntechnology.\n\nImagine an engineer (Gavin) at Boeing (Bitcoin Core) said he was going to\nbuild an airplane (block) that was going to move 8x as many people\n(transactions) as today\u2019s planes (blocks), all while costing about the same\namount to operate. Imagine he then went on to tell you that he expects to\ndouble the plane\u2019s (block's) capacity every two years!\n\nWithout full planes (blocks), will the airlines (miners) go out of\nbusiness, since planes (blocks) will never be full and the cost to add\npeople (transactions) to a plane (block) will approach zero? Probably not.\nAirlines (miners) still have to pay for pilots, security screening staff,\nfuel, etc (engineers, hash rate, electricity, etc) so even if their\nairplanes (blocks) can hold limitless people (transactions), they would\nstill have to charge sufficient fees to stay in business.\n\nWhat tests do you need done to move to 8MB? Pitch in and help get those\ntests done; agree that we'll run more tests next year or the year after\nwhen technology might allow for 16 MB blocks. Do you really want to be the\nguy holding back bigger planes? Do you really want to artificially\nconstrain block size below what technology allows?\n\nIn the face of such strong market demand for increased capacity in globally\naware global consensus, do you really think you can prevent supply from\nmeeting demand when the technology exists to deliver it? Do you really want\nto force a fork because you and others won't agree to a simple raise to a\nstatic 8MB?\n\nDo what's best for Bitcoin and define what needs to get done to agree to a\nsimple block size increase to a static 8MB.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/aebb2579/attachment.html>"
            },
            {
                "author": "Richard Moore",
                "date": "2015-06-30T16:03:02",
                "message_text_only": "I\u2019m not planning to take a firm stance against or for, but one problem with your analogy is that airplanes [currently] are not elastic (until we get TARDIS technology, or semi-TARDIS-like technology); they take up space and resources proportional to their capacity.\n\nIt is not the block size that is increasing, it is the *maximum* block size\u2026 So, it\u2019s more like saying the *maximum* airplane size is increasing, which I think may be somewhat true (although, I agree, probably not exponentially). It would be more like an airplane whose capacity was doubling every two years, but would shrink when that extra capacity was not needed and only consume the maintenance, fuel, et cetera needed for its current size.\n\nMy semi-firm-ish stance is that kicking the can down the road with a static increase is less better. We can always soft-fork the limit down if the *actual* block size is growing too fast. When (and/or if) we need to. I also think 8MB is a rather large jump, for either static or dynamic.\n\n*shrug*\n\nRicMoo\n\n\n> On Jun 30, 2015, at 11:34 AM, Michael Naber <mickeybob at gmail.com> wrote:\n> \n> As you know I'm trying to lobby for a block size increase to a static 8MB. \n> \n> I'm happy to try to get the testing done that people want done for this, but I think the real crux of this issue is that we need to get consensus that we intend to continually push the block size upward as bounded only by technology.\n> \n> Imagine an engineer (Gavin) at Boeing (Bitcoin Core) said he was going to build an airplane (block) that was going to move 8x as many people (transactions) as today\u2019s planes (blocks), all while costing about the same amount to operate. Imagine he then went on to tell you that he expects to double the plane\u2019s (block's) capacity every two years! \n> \n> Without full planes (blocks), will the airlines (miners) go out of business, since planes (blocks) will never be full and the cost to add people (transactions) to a plane (block) will approach zero? Probably not. Airlines (miners) still have to pay for pilots, security screening staff, fuel, etc (engineers, hash rate, electricity, etc) so even if their airplanes (blocks) can hold limitless people (transactions), they would still have to charge sufficient fees to stay in business.\n> \n> What tests do you need done to move to 8MB? Pitch in and help get those tests done; agree that we'll run more tests next year or the year after when technology might allow for 16 MB blocks. Do you really want to be the guy holding back bigger planes? Do you really want to artificially constrain block size below what technology allows? \n> \n> In the face of such strong market demand for increased capacity in globally aware global consensus, do you really think you can prevent supply from meeting demand when the technology exists to deliver it? Do you really want to force a fork because you and others won't agree to a simple raise to a static 8MB? \n> \n> Do what's best for Bitcoin and define what needs to get done to agree to a simple block size increase to a static 8MB.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n\n.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8\u00b8.\u00b7\u00b4\u00af`\u00b7.\u00b8><(((\u00ba>\n\nRichard Moore ~ Founder\nGenetic Mistakes Software inc.\nphone: (778) 882-6125\nemail: ricmoo at geneticmistakes.com <mailto:ricmoo at geneticmistakes.com>\nwww: http://GeneticMistakes.com <http://geneticmistakes.com/>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/7556f050/attachment-0001.html>"
            },
            {
                "author": "Venzen Khaosan",
                "date": "2015-06-30T16:15:31",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nMichael, I snipped some of your comparison example to comment. I agree\nwith your sentiment to lobby for testing the change and your offer to\nprovide resources, yet it presents some (surmountable) challenges:\n\nOn 06/30/2015 10:34 PM, Michael Naber wrote:\n> As you know I'm trying to lobby for a block size increase to a\n> static 8MB.\n> \n> I'm happy to try to get the testing done that people want done for\n> this, but I think the real crux of this issue is that we need to\n> get consensus that we intend to continually push the block size\n> upward as bounded only by technology.\n\nPeter Todd, on 23/06/15, proposed a combined back-test and ongoing\nforward test as follows:\n\n\"... the creation (via reorg) of a realistic full-load blockchain on\ntestnet to fully test the real-world behavior of the entire\ninfrastructure ecosystem, including questions like the scalability of\nblock explorers, SPV wallets, feasibility of initial syncronization,\nscalability of the UTXO set, etc. While this is of course inconvenient\n- - 2 years of 8MB blocks is 840GB worth of data...\"\n\nSo, with a working dataset of that size, jumping to 8MB is excluding a\nlot of participants and contributors to the testing - someone like\nmyself for example.\n\n> Do what's best for Bitcoin and define what needs to get done to\n> agree to a simple block size increase to a static 8MB.\n\nAnd this then leads back to the core issue: if an 8MB blocksize\nexcludes many on this list from testnet, then the proposed 8MB blocks\nwill exclude a lot of mainnet participants (miners) and degrade the\nquality of diversity and decentralization.\n\nHow about testing at double the capacity: 2MB?\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJVksCfAAoJEGwAhlQc8H1m3E8H/jbfdoYPN3dvJuWWpaEEU+P4\nSbdPHLd08ya7dmZEqmJcGBH29aHCD1roqs5PDA6pwNFb7CTD/6aoRGeQnkU16wMj\nFQ5UQkmT96niQhtHE17vdpeMHI+LK8ox1n0R3de+3QRn1HbXEN+Q68jPl16KLd8+\nSArZfVUauVGUtoJDVLxXv1q2mx2huTUTX/QNeYcTZ5IjB5huMypjwN7VpL9bM8gT\nxoN8pd3tjBGAt1zoRFUWk5ZgCR5iDbRdujq032gIyc5CxtP3w+N/cfDKcEwmUd1j\nMTX680NODq3K1ACIz+odEd1O6VFTQjHPZdF2SEtI5eHZRNH3RcccwZUJ7S04Fic=\n=CHiQ\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Todd",
                "date": "2015-06-30T16:25:26",
                "message_text_only": "On Tue, Jun 30, 2015 at 11:15:31PM +0700, Venzen Khaosan wrote:\n> > Do what's best for Bitcoin and define what needs to get done to\n> > agree to a simple block size increase to a static 8MB.\n> \n> And this then leads back to the core issue: if an 8MB blocksize\n> excludes many on this list from testnet, then the proposed 8MB blocks\n> will exclude a lot of mainnet participants (miners) and degrade the\n> quality of diversity and decentralization.\n> \n> How about testing at double the capacity: 2MB?\n\nWhich of course raises another issue: if that was the plan, then all you\ncan do is double capacity, with no clear way to scaling beyond that.\nWhy bother?\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000001599522de3e8ed28f0189ddccfa1d6db5eb380cacffc79d7\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 650 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/f1a2b130/attachment.sig>"
            },
            {
                "author": "Michael Naber",
                "date": "2015-06-30T16:35:12",
                "message_text_only": "Re: Why bother doubling capacity? So that we could have 2x more network\nparticipants of course.\n\nRe: No clear way to scaling beyond that: Computers are getting more capable\naren't they? We'll increase capacity along with hardware.\n\nIt's a good thing to scale the network if technology permits it. How can\nyou argue with that?\n\n\nOn Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:\n\n> On Tue, Jun 30, 2015 at 11:15:31PM +0700, Venzen Khaosan wrote:\n> > > Do what's best for Bitcoin and define what needs to get done to\n> > > agree to a simple block size increase to a static 8MB.\n> >\n> > And this then leads back to the core issue: if an 8MB blocksize\n> > excludes many on this list from testnet, then the proposed 8MB blocks\n> > will exclude a lot of mainnet participants (miners) and degrade the\n> > quality of diversity and decentralization.\n> >\n> > How about testing at double the capacity: 2MB?\n>\n> Which of course raises another issue: if that was the plan, then all you\n> can do is double capacity, with no clear way to scaling beyond that.\n> Why bother?\n>\n> --\n> 'peter'[:-1]@petertodd.org\n> 00000000000000001599522de3e8ed28f0189ddccfa1d6db5eb380cacffc79d7\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/f0f4be16/attachment.html>"
            },
            {
                "author": "Bryan Cheng",
                "date": "2015-06-30T19:59:23",
                "message_text_only": "One thing that seems to have been forgotten is that the 1MB block size does\nnot represent any particular rigorous design choice; it is purely arbitrary.\n\nIt does not represent any type of technical sweet-spot; it neither falls\nunder any reasonable MTU to prevent TCP fragmentation, nor does it\nguarantee in any unique way ease of transmission or lower latency. Chinese\nmining pool operators, noted as one of the more constrained stakeholders in\nthis decision, have indicated that 8MB is a reasonable compromise in their\nsituation. Unless individuals with specific, concrete use cases come\nforward with exactly how they will be marginalized by blocks in the 1-8MB\nrange, we should consider 8MB the minimum applicable size for technical\nobjections to raising the block size from a network propagation point of\nview.\n\nIt also does not represent any kind of economic sweet spot. If we accept\nthe arguments on the mailing list that economic incentives for the creation\nof the fee market depend entirely on a single variable, the scarcity of\nspace for transactions in a block, we should be talking about _decreasing_\nthe block size. In reality, this is clearly laughable. The real economic\nanalysis would consist of a balance between the space for transactions in a\nblock, the number of transactions being attempted at any given time, and\nthe block subsidy, among many other factors. Viewing it in this light, the\nchance that 1MB by some divine miracle is the perfect balance of those\neconomic considerations becomes exceedingly small.\n\n(Personally, I believe that increasing the block size has a greater chance\nof creating a fee market after coinbase subsidies decline, as having\ncompetition for space in a block depends not only on the number of\ntransactions that fit in the block, but also the number of people\nattempting to spend; if success rates fall dramatically, significantly\nfewer people will attempt to transact bitcoin. However, this is a\ndiscussion for another post).\n\nIf we stop considering 1MB to be some magic number, perhaps we can enter\ninto a real discussion about finding what the right sweet spot is. We very\nwell may decide that 1MB is _too big_; what should not be acceptable is\nconflating pressures to decrease the block size with reasons for inaction\naltogether. The end game of this debate should be to decide the new block\nsize that balances, within reason, the various pressures in every direction.\n\nOn Tue, Jun 30, 2015 at 9:35 AM, Michael Naber <mickeybob at gmail.com> wrote:\n\n> Re: Why bother doubling capacity? So that we could have 2x more network\n> participants of course.\n>\n> Re: No clear way to scaling beyond that: Computers are getting more\n> capable aren't they? We'll increase capacity along with hardware.\n>\n> It's a good thing to scale the network if technology permits it. How can\n> you argue with that?\n>\n>\n> On Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:\n>\n>> On Tue, Jun 30, 2015 at 11:15:31PM +0700, Venzen Khaosan wrote:\n>> > > Do what's best for Bitcoin and define what needs to get done to\n>> > > agree to a simple block size increase to a static 8MB.\n>> >\n>> > And this then leads back to the core issue: if an 8MB blocksize\n>> > excludes many on this list from testnet, then the proposed 8MB blocks\n>> > will exclude a lot of mainnet participants (miners) and degrade the\n>> > quality of diversity and decentralization.\n>> >\n>> > How about testing at double the capacity: 2MB?\n>>\n>> Which of course raises another issue: if that was the plan, then all you\n>> can do is double capacity, with no clear way to scaling beyond that.\n>> Why bother?\n>>\n>> --\n>> 'peter'[:-1]@petertodd.org\n>> 00000000000000001599522de3e8ed28f0189ddccfa1d6db5eb380cacffc79d7\n>>\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/c47ee8e2/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Block size increase oppositionists: please clearly define what you need done to increase block size to a static 8MB, and help do it",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Bryan Cheng",
                "Peter Todd",
                "Richard Moore",
                "Venzen Khaosan",
                "Michael Naber"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 14440
        }
    },
    {
        "title": "[bitcoin-dev] RFC: HD Bitmessage address derivation based on BIP-43",
        "thread_messages": [
            {
                "author": "Justus Ranvier",
                "date": "2015-06-30T17:53:05",
                "message_text_only": "Monetas has developed a Bitmessage address derivation method from an\nHD seed based on BIP-43.\n\n\nhttps://github.com/monetas/bips/blob/bitmessage/bip-bm01.mediawiki\n\n\nWe're proposing this as a BIP per the BIP-43 recommendation in order\nto reserve a purpose code."
            }
        ],
        "thread_summary": {
            "title": "RFC: HD Bitmessage address derivation based on BIP-43",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Justus Ranvier"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 260
        }
    },
    {
        "title": "[bitcoin-dev] block-size tradeoffs & hypothetical alternatives (Re: Block size increase oppositionists: please clearly define what you need done to increase block size to a static 8MB, and help do it)",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2015-06-30T19:54:47",
                "message_text_only": "Not that I'm arguing against scaling within tech limits - I agree we\ncan and should - but note block-size is not a free variable.  The\nsystem is a balance of factors, interests and incentives.\n\nAs Greg said here\nhttps://www.reddit.com/r/Bitcoin/comments/3b0593/to_fork_or_not_to_fork/cshphic?context=3\nthere are multiple things we should usefully do with increased\nbandwidth:\n\na) improve decentralisation and hence security/policy\nneutrality/fungibility (which is quite weak right now by a number of\nmeasures)\nb) improve privacy (privacy features tend to consume bandwidth, eg see\nthe Confidential Transactions feature) or more incremental features.\nc) increase throughput\n\nI think some of the within tech limits bandwidth should be\npre-allocated to decentralisation improvements given a) above.\n\nAnd I think that we should also see work to improve decentralisation\nwith better pooling protocols that people are working on, to remove\nsome of the artificial centralisation in the system.\n\nSecondly on the interests and incentives - miners also play an\nimportant part of the ecosystem and have gone through some lean times,\nthey may not be overjoyed to hear a plan to just whack the block-size\nup to 8MB.  While it's true (within some limits) that miners could\ncollectively keep blocks smaller, there is the ongoing reality that\nsomeone else can take break ranks and take any fee however de minimis\nfee if there is a huge excess of space relative to current demand and\ndrive fees to zero for a few years.  A major thing even preserving\nfees is wallet defaults, which could be overridden(plus protocol\nvelocity/fee limits).\n\nI think solutions that see growth scale more smoothly - like Jeff\nGarzik's and Greg Maxwell's and Gavin Andresen's (though Gavin's\nstarts with a step) are far less likely to create perverse unforeseen\nside-effects.  Well we can foresee this particular effect, but the\nmarket and game theory can surprise you so I think you generally want\nthe game-theory & market effects to operate within some more smoothly\nchanging caps, with some user or miner mutual control of the cap.\n\nSo to be concrete here's some hypotheticals (unvalidated numbers):\n\na) X MB cap with miner policy limits (simple, lasts a while)\nb) starting at 1MB and growing to 2*X MB cap with 10%/year growth\nlimiter + policy limits\nc) starting at 1MB and growing to 3*X MB cap with 15%/year growth\nlimiter + Jeff Garzik's miner vote.\nd) starting at 1MB and growing to 4*X MB cap with 20%/year growth\nlimiter + Greg Maxwell's flexcap\n\nI think it would be good to see some tests of achievable network\nbandwidth on a range of networks, but as an illustration say X is 2MB.\n\nRationale being the weaker the signalling mechanism between users and\nuser demanded size (in most models communicated via miners), the more\nrisk something will go in an unforeseen direction and hence the lower\nthe cap and more conservative the growth curve.\n\n15% growth limiter is not Nielsen's law by intent.  Akamai have data\non what they serve, and it's more like 15% per annum, but very\nvariable by country\nhttp://www.akamai.com/stateoftheinternet/soti-visualizations.html#stoi-graph\nCISCO expect home DSL to double in 5 years\n(http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-networking-index-vni/VNI_Hyperconnectivity_WP.html\n), which is about the same number.\n\n(Thanks to Rusty for data sources for 15% number).\n\nThis also supports the claim I have made a few times here, that it is\nnot realistic to support massive growth without algorithmic\nimprovement from Lightning like or extension-block like opt-in\nsystems.  People who are proposing that we ramp blocksizes to create\nbig headroom are I think from what has been said over time, often\nwithout advertising it clearly, actually assuming and being ok with\nthe idea that full nodes move into data-centers period and small\nbusiness/power user validation becomes a thing of the distant past.\nFurther the aggressive auto-growth risks seeing that trend continuing\ninto higher tier data-centers with negative implications for\ndecentralisation.  The odd proponent seems OK with even that too.\n\nDecentralisation is key to Bitcoin's security model, and it's\ndifferentiating properties.  I think those aggressive growth numbers\nstray into the zone of losing efficiency.  By which I mean in\nscalability or privacy systems if you make a trade-off too far, it\nbecomes time to re-asses what you're doing.  For example at that level\nof centralisation, alternative designs are more network efficient,\nwhile achieving the same effective (weak) decentralisation.  In\nBitcoin I see this as a strong argument not to push things to that\nextreme, the core functionality must remain for Lightning and other\nscaling approaches to remain secure by using the Bitcoin as a secure\nanchor.  If we heavily centralise and weaken the security of the main\nBitcoin chain, there remains nothing secure to build on.\n\nTherefore I think it's more appropriate for high scale to rely on\nlightning, or a semi-centralised trade-offs being in the side-chain\nmodel or similar, where the higher risk of centralisation is opt-in\nand not exposed back (due to the security firewall) to the Bitcoin\nnetwork itself.\n\nPeople who would like to try the higher tier data-center and\nthroughput by high bandwidth use route should in my opinion run that\nexperiment as a layer 2 side-chain or analogous.  There are a few ways\nto do that.  And it would be appropriate to my mind that we discuss\nthem here also.\n\nAn experiment like that could run in parallel with lightning, maybe it\ncould be done faster, or offer different trade-offs, so could be an\ninteresting and useful thing to see work on.\n\n> On Tue, Jun 30, 2015 at 12:25 PM, Peter Todd <pete at petertodd.org> wrote:\n>> Which of course raises another issue: if that was the plan, then all you\n>> can do is double capacity, with no clear way to scaling beyond that.\n>> Why bother?\n\nA secondary function can be a market signalling - market evidence\nthroughput can increase, and there is a technical process that is\neffectively working on it.  While people may not all understand the\ntrade-offs and decentralisation work that should happen in parallel,\nnor the Lightning protocol's expected properties - they can appreciate\nperceived progress and an evidently functioning process.  Kind of a\nweak rationale, from a purely technical perspective, but it may some\nvalue, and is certainly less risky than a unilateral fork.\n\nAs I recall Gavin has said things about this area before also\n(demonstrate throughput progress to the market).\n\nAnother factor that people have said, which I think I agree with\nfairly much is that if we can chose something conservative, that there\nis wide-spread support for, it can be safer to do it with moderate\nlead time.  Then if there is an implied 3-6mo lead time we are maybe\nprojecting ahead a bit further on block-size utilisation.  Of course\nthe risk is we overshoot demand but there probably should be some\nbalance between that risk and the risk of doing a more rushed change\nthat requires system wide upgrade of all non-SPV software, where\nstragglers risk losing money.\n\nAs well as scaling block-size within tech limits, we should include a\ncommitment to improve decentralisation, and I think any proposal\nshould be reasonably well analysed in terms of bandwidth assumptions\nand game-theory.  eg In IETF documents they have a security\nconsiderations section, and sometimes a privacy section.  In BIPs\nmaybe we need a security, privacy and decentralisation/fungibility\nsection.\n\nAdam\n\nNB some new list participants may not be aware that miners are\nimposing local policy limits eg at 750kB and that a 250kB policy\nexisted in the past and those limits saw utilisation and were\nunilaterally increased unevenly.  I'm not sure if anyone has a clear\npicture of what limits are imposed by hash-rate even today.  That's\nwhy Pieter posed the question - are we already at the policy limit -\nmaybe the blocks we're seeing are closely tracking policy limits, if\nsomeone mapped that and asked miners by hash-rate etc.\n\nOn 30 June 2015 at 18:35, Michael Naber <mickeybob at gmail.com> wrote:\n> Re: Why bother doubling capacity? So that we could have 2x more network\n> participants of course.\n>\n> Re: No clear way to scaling beyond that: Computers are getting more capable\n> aren't they? We'll increase capacity along with hardware.\n>\n> It's a good thing to scale the network if technology permits it. How can you\n> argue with that?"
            },
            {
                "author": "Justus Ranvier",
                "date": "2015-06-30T20:08:46",
                "message_text_only": "On 06/30/2015 02:54 PM, Adam Back wrote:\n> Decentralisation is key to Bitcoin's security model, and it's\n> differentiating properties.\n\nContinually repeating this statement without defining terms or providing\nevidence does not make it true or informative.\n\n\"Decentralization\" is a popular buzzword these days, but how about\nstating the problem description in a way that is more precise and accurate?\n\nOne of Bitcoin's differentiating properties is that it prevents double\nspending without using a trusted third party.\n\nNow instead of arguing about some nebulous \"decentralization\" that\nnobody can define or measure, we can talk about more helpful questions like:\n\nUnder what circumstances will miners and/or nodes behave as a trusted\nthird party (collusion)?\n\nWhat incentives exist which increase, and which reduce, any tendencies\nthat may exist for nodes to collude?\n\nIn what ways specifically does MAX_BLOCK_SIZE relate to either of the\nfollowing questions?\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: 0xEAD9E623.asc\nType: application/pgp-keys\nSize: 18381 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/6fb56178/attachment-0001.bin>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 801 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/6fb56178/attachment-0001.sig>"
            },
            {
                "author": "Milly Bitcoin",
                "date": "2015-06-30T20:29:36",
                "message_text_only": ">\"Decentralization\" is a popular buzzword these days, but how about \nstating the problem description in a way that is more precise and \naccurate? One of Bitcoin's differentiating properties is that it \nprevents double spending without using a trusted third party.\n\nI have been researching how it can be defined and measured (at least up \nto a certain point).  Here is a paper on measuring decentralization of \ngovernment functions: \nhttp://www.sscnet.ucla.edu/polisci/faculty/treisman/Papers/defin.pdf. \nNot exactly the same thing as being discussed here but the paper gives a \nframework of how decentralization metrics could be defined in a somewhat \nstandard way.\n\nRuss"
            },
            {
                "author": "Simon Liu",
                "date": "2015-06-30T22:55:06",
                "message_text_only": "My understanding is that BIP 101 has working code to raise the block\nsize and is ready for evaluation today.\n\nWhen will Lightning and Sidechains be ready so that a fair and\ncontrolled test can be made?\n\nOn 06/30/2015 12:54 PM, Adam Back wrote:\n\n> People who would like to try the higher tier data-center and\n> throughput by high bandwidth use route should in my opinion run that\n> experiment as a layer 2 side-chain or analogous.  There are a few ways\n> to do that.  And it would be appropriate to my mind that we discuss\n> them here also.\n> \n> An experiment like that could run in parallel with lightning, maybe it\n> could be done faster, or offer different trade-offs, so could be an\n> interesting and useful thing to see work on.\n>"
            },
            {
                "author": "Tom Harding",
                "date": "2015-06-30T22:56:04",
                "message_text_only": "On 6/30/2015 12:54 PM, Adam Back wrote:\n> Secondly on the interests and incentives - miners also play an\n> important part of the ecosystem and have gone through some lean times,\n> they may not be overjoyed to hear a plan to just whack the block-size\n> up to 8MB.  While it's true (within some limits) that miners could\n> collectively keep blocks smaller, there is the ongoing reality that\n> someone else can take break ranks and take any fee however de minimis\n> fee if there is a huge excess of space relative to current demand and\n> drive fees to zero for a few years.  A major thing even preserving\n> fees is wallet defaults, which could be overridden(plus protocol\n> velocity/fee limits).\n\nLet's pretend it is late 2012.\n\nNobody has ever violated the soft limit of 500KB/block.\nBlock reward is about to be cut in half.\nFees are right where they are today.\n1 BTC = about $15.\n\nIt's a good thing nothing was done in 2012 to try to boost fees out of\nconcern for miner profits.\n\nNor should we today.  The 16X rise in the economic value\u00b9 of the block\nreward since that time covers the entire .5X effect of the halving\nitself, plus three additional halvings.  There is far less reason today\nto worry on miners' behalf about fees than there was in late 2012.\n\nRunning out of ways to grow does threaten miner profit, and therefore\nsecurity, growth.  So let's hope all the scaling ideas work.\n\n\n> I'm not sure if anyone has a clear picture of what limits are imposed\n> by hash-rate even today.\n\nFrom the all-blocksizes plot, it's clear visually that the 750K soft\nlimit, and another less common soft limit at 900K, are being imposed,\nbut broken more and more frequently as demand outpaces them.\n\nThese soft limits serve no purpose, other than to delay transactions.  A\n750KB block is followed by another 750KB or larger block just as\nfrequently as you would expect from the actual block time distribution,\nwhich recently (prior to spam now underway) had a rate of a full 1MB\nblock being needed every 104 minutes (in an earlier post I gave a\nrelation which is very stable, given the stable average transaction size).\n\n___________________\n\n\n\u00b9Someday, if bitcoin is wildly successful, exchange rates vs. obsolete\ncurrencies won't be meaningful.  If that happens, increases in the\neconomic value of bitcoin will likely be measured by decreases in the\ngeneral price level of all goods and services."
            }
        ],
        "thread_summary": {
            "title": "block-size tradeoffs & hypothetical alternatives (Re: Block size increase oppositionists: please clearly define what you need done to increase block size to a static 8MB, and help do it)",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Adam Back",
                "Milly Bitcoin",
                "Simon Liu",
                "Justus Ranvier",
                "Tom Harding"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 13805
        }
    },
    {
        "title": "[bitcoin-dev] A possible solution for the block size limit: Detection and rejection of bloated blocks by full nodes.",
        "thread_messages": [
            {
                "author": "Peter Grigor",
                "date": "2015-06-30T23:41:29",
                "message_text_only": "The block size debate centers around one concern it seems. To wit: if block\nsize is increased malicious miners may publish unreasonably large \"bloated\"\nblocks. The way a miner would do this is to generate a plethora of private,\nnon-propagated transactions and include these in the block they solve.\n\nIt seems to me that these bloated blocks could easily be detected by other\nminers and full nodes: they will contain a very high percentage of\ntransactions that aren't found in the nodes' own memory pools. This\nsignature can be exploited to allow nodes to reject these bloated blocks.\nThe key here is that any malicious miner that publishes a block that is\nbloated with his own transactions would contain a ridiculous number of\ntransactions that *absolutely no other full node has in its mempool*.\n\nSimply put, a threshold would be set by nodes on the allowable number of\nnon-mempool transactions allowed in a solved block (say, maybe, 50% -- I\nreally don't know what it should be). If a block is published which\ncontains more that this threshold of non-mempool transactions then it is\nrejected.\n\nIf this idea works the block size limitation could be completely removed.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150630/0b39603a/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2015-06-30T23:43:17",
                "message_text_only": "On Tuesday, June 30, 2015 11:41:29 PM Peter Grigor wrote:\n> The block size debate centers around one concern it seems. To wit: if block\n> size is increased malicious miners may publish unreasonably large \"bloated\"\n> blocks. The way a miner would do this is to generate a plethora of private,\n> non-propagated transactions and include these in the block they solve.\n> \n> It seems to me that these bloated blocks could easily be detected by other\n> miners and full nodes: they will contain a very high percentage of\n> transactions that aren't found in the nodes' own memory pools. This\n> signature can be exploited to allow nodes to reject these bloated blocks.\n> The key here is that any malicious miner that publishes a block that is\n> bloated with his own transactions would contain a ridiculous number of\n> transactions that *absolutely no other full node has in its mempool*.\n> \n> Simply put, a threshold would be set by nodes on the allowable number of\n> non-mempool transactions allowed in a solved block (say, maybe, 50% -- I\n> really don't know what it should be). If a block is published which\n> contains more that this threshold of non-mempool transactions then it is\n> rejected.\n> \n> If this idea works the block size limitation could be completely removed.\n\nThis is easily defeated simply by broadcasting the bloat beforehand...\n\nLuke"
            },
            {
                "author": "Pieter Wuille",
                "date": "2015-06-30T23:45:09",
                "message_text_only": "The problem with this approach is that you need 100% exact behaviour for\nevery node on the network in their decision to reject a particular block.\nSo we need a 100% mempool synchronization across all nodes - otherwise just\nan attempted double spend could result in a fork in the network because\nsome nodes saw it and some didn't. And actually, if we had 100% mempool\nsynchronization, we wouldn't need a blockchain in the first place, because\nwe could just use \"first to enter mempool\" as validity criterion.\n\nOn Wed, Jul 1, 2015 at 1:41 AM, Peter Grigor <peter at grigor.ws> wrote:\n\n> The block size debate centers around one concern it seems. To wit: if\n> block size is increased malicious miners may publish unreasonably large\n> \"bloated\" blocks. The way a miner would do this is to generate a plethora\n> of private, non-propagated transactions and include these in the block they\n> solve.\n>\n> It seems to me that these bloated blocks could easily be detected by other\n> miners and full nodes: they will contain a very high percentage of\n> transactions that aren't found in the nodes' own memory pools. This\n> signature can be exploited to allow nodes to reject these bloated blocks.\n> The key here is that any malicious miner that publishes a block that is\n> bloated with his own transactions would contain a ridiculous number of\n> transactions that *absolutely no other full node has in its mempool*.\n>\n> Simply put, a threshold would be set by nodes on the allowable number of\n> non-mempool transactions allowed in a solved block (say, maybe, 50% -- I\n> really don't know what it should be). If a block is published which\n> contains more that this threshold of non-mempool transactions then it is\n> rejected.\n>\n> If this idea works the block size limitation could be completely removed.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150701/96fa1ccd/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "A possible solution for the block size limit: Detection and rejection of bloated blocks by full nodes.",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Pieter Wuille",
                "Luke Dashjr",
                "Peter Grigor"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 4862
        }
    }
]