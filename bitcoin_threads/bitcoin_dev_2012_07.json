[
    {
        "title": "[Bitcoin-development] BIP 34: Block v2, Height in Coinbase",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-07-06T15:10:48",
                "message_text_only": "Please review and comment...\n\nBlock v2, Height in Coinbase\nhttps://en.bitcoin.it/wiki/BIP_0034\n\n  BIP: 34\n  Title: Block v2, Height in Coinbase\n  Author: Gavin Andresen <gavinandresen at gmail.com>\n  Status: Draft\n  Type: Standards Track\n  Created: 2012-07-06\n\nAbstract\n\nBitcoin blocks and transactions are versioned binary structures. Both\ncurrently use version 1. This BIP introduces an upgrade path for\nversioned transactions and blocks. A unique nonce is added to newly\nproduced coinbase transactions, and blocks are updated to version 2.\n\n\nMotivation\n\n1.    Clarify and exercise the mechanism whereby the bitcoin network\ncollectively consents to upgrade transaction or block binary\nstructures, rules and behaviors.\n\n2.    Enforce block and transaction uniqueness, and assist unconnected\nblock validation.\n\n\nSpecification\n\n1.    Treat transactions with a version greater than 1 as non-standard\n(official Satoshi client will not mine or relay them).\n\n2.    Add height as the first item in the coinbase transaction's\nscriptSig, and increase block version to 2. The format of the height\nis \"serialized CScript\" -- first byte is number of bytes in the number\n(will be 0x03 on main net for the next 300 or so years), following\nbytes are little-endian representation of the number.\n\n3.    75% rule: If 750 of the last 1,000 blocks are version 2 or\ngreater, reject invalid version 2 blocks. (testnet3: 51 of last 100)\n\n4.    95% rule (\"Point of no return\"): If 950 of the last 1,000 blocks\nare version 2 or greater, reject all version 1 blocks. (testnet3: 75\nof last 100)\n\n\nBackward compatibility\n\nAll older clients are compatible with this change. Users and merchants\nshould not be impacted. Miners are strongly recommended to upgrade to\nversion 2 blocks. Once 95% of the miners have upgraded to version 2,\nthe remainder will be orphaned if they fail to upgrade.\n\n\nImplementation\n\nhttps://github.com/bitcoin/bitcoin/pull/1525 and\nhttps://github.com/bitcoin/bitcoin/pull/1526\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-07-06T16:45:01",
                "message_text_only": "So,\n\nThe proposal is simple, and it's a small change for miners, I imagine.\n\nMy question is: why?\n\nI worry about stuffing too many requirements on the coinbase. I suppose the\ncoinbase is easily extendible if we run out of bytes, but I think I'd like\nto see some more discussion / good / bad type cases for making this change.\nWhat do we get over just the prev_hash by doing this?\n\nIf this is just a voting mechanism for moving to v2 blocks, that's cool,\nbut it would be nice to codify voting in the coinbase a bit? Maybe? We've\nnow once voted with /p2sh/ and this is a different mechanism now, if I\nunderstand it properly.\n\nAnyway, some background would be great; if I missed it, I'm happy to go\nread up, but I didn't see any links on the wiki.\n\nPeter\n\nOn Fri, Jul 6, 2012 at 8:10 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> Please review and comment...\n>\n> Block v2, Height in Coinbase\n> https://en.bitcoin.it/wiki/BIP_0034\n>\n>   BIP: 34\n>   Title: Block v2, Height in Coinbase\n>   Author: Gavin Andresen <gavinandresen at gmail.com>\n>   Status: Draft\n>   Type: Standards Track\n>   Created: 2012-07-06\n>\n> Abstract\n>\n> Bitcoin blocks and transactions are versioned binary structures. Both\n> currently use version 1. This BIP introduces an upgrade path for\n> versioned transactions and blocks. A unique nonce is added to newly\n> produced coinbase transactions, and blocks are updated to version 2.\n>\n>\n> Motivation\n>\n> 1.    Clarify and exercise the mechanism whereby the bitcoin network\n> collectively consents to upgrade transaction or block binary\n> structures, rules and behaviors.\n>\n> 2.    Enforce block and transaction uniqueness, and assist unconnected\n> block validation.\n>\n>\n> Specification\n>\n> 1.    Treat transactions with a version greater than 1 as non-standard\n> (official Satoshi client will not mine or relay them).\n>\n> 2.    Add height as the first item in the coinbase transaction's\n> scriptSig, and increase block version to 2. The format of the height\n> is \"serialized CScript\" -- first byte is number of bytes in the number\n> (will be 0x03 on main net for the next 300 or so years), following\n> bytes are little-endian representation of the number.\n>\n> 3.    75% rule: If 750 of the last 1,000 blocks are version 2 or\n> greater, reject invalid version 2 blocks. (testnet3: 51 of last 100)\n>\n> 4.    95% rule (\"Point of no return\"): If 950 of the last 1,000 blocks\n> are version 2 or greater, reject all version 1 blocks. (testnet3: 75\n> of last 100)\n>\n>\n> Backward compatibility\n>\n> All older clients are compatible with this change. Users and merchants\n> should not be impacted. Miners are strongly recommended to upgrade to\n> version 2 blocks. Once 95% of the miners have upgraded to version 2,\n> the remainder will be orphaned if they fail to upgrade.\n>\n>\n> Implementation\n>\n> https://github.com/bitcoin/bitcoin/pull/1525 and\n> https://github.com/bitcoin/bitcoin/pull/1526\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120706/cc73c259/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-07-06T16:49:12",
                "message_text_only": "On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:\n> The proposal is simple, and it's a small change for miners, I imagine.\n>\n> My question is: why?\n>\n> I worry about stuffing too many requirements on the coinbase. I suppose\n> the coinbase is easily extendible if we run out of bytes, but I think I'd\n> like to see some more discussion / good / bad type cases for making this\n> change. What do we get over just the prev_hash by doing this?\n\nWith the existing setup (sans height in coinbase), you might not have\nunique transactions, with all that entails.\n\n> Anyway, some background would be great; if I missed it, I'm happy to go\n> read up, but I didn't see any links on the wiki.\n\nGavin wrote some notes on upgrades and BIP16 lessons-learned at\nhttps://gist.github.com/2355445\n\n--\nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2012-07-06T16:56:16",
                "message_text_only": "On Fri, Jul 6, 2012 at 9:49 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:\n> > The proposal is simple, and it's a small change for miners, I imagine.\n> >\n> > My question is: why?\n> >\n> > I worry about stuffing too many requirements on the coinbase. I suppose\n> > the coinbase is easily extendible if we run out of bytes, but I think I'd\n> > like to see some more discussion / good / bad type cases for making this\n> > change. What do we get over just the prev_hash by doing this?\n>\n> With the existing setup (sans height in coinbase), you might not have\n> unique transactions, with all that entails.\n>\n\nBut those issues are solvable through other, non-backwards incompatible\nmeans. For example, mandate that a <transaction hash, output index> refers\nto the first such pair that is not already spent. No?\n\nMark\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120706/1f865394/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-07-06T20:02:16",
                "message_text_only": "> But those issues are solvable through other, non-backwards incompatible\n> means. For example, mandate that a <transaction hash, output index> refers\n> to the first such pair that is not already spent. No?\n\nYes, that is essentially what BIP 30 did.\n\nWe want to do this also, partly for \"belt and suspenders\" security but\nmostly for two reasons:\n\n1. To test using block/transaction version numbers to smoothly roll\nout changes. The next change we need to make might be prompted by some\ncrisis; better to learn any lessons now, when we have the luxury of\ntime to fix problems that might crop up.\n\n2. We think we'll all appreciate the change in a year or three, when\nthe whole network has upgraded and we can start writing code that\nassumes all new blocks past a certain checkpoint contain their height;\nthat should make it easier to do things like figure out whether or not\nan orphan chain can possibly be part of the main chain.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-06T20:10:42",
                "message_text_only": "On Fri, Jul 6, 2012 at 4:02 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n>> But those issues are solvable through other, non-backwards incompatible\n>> means. For example, mandate that a <transaction hash, output index> refers\n>> to the first such pair that is not already spent. No?\n>\n> Yes, that is essentially what BIP 30 did.\n\nIt's important to note that bip 30 doesn't prevent duplication, it\njust prevents the identified really evil outcome of the duplication.\n\nThere was discussion on doing the height _before_ that, but the\nrealization that the rewrites were a real vulnerability made it urgent\nand rolling out the height will require time while the bip30 change\ncould be deployed more quickly."
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-06T20:02:40",
                "message_text_only": "It would be nice if Bitcoin was engineered this way from the start. The amount of workarounds, special cases and code bloat to deal with the fact that txs are non-unique was a massive headache for me.\n\n\n\n\n________________________________\nFrom: Mark Friedenbach <mark at monetize.io>\nTo: Jeff Garzik <jgarzik at exmulti.com> \nCc: Bitcoin Development <bitcoin-development at lists.sourceforge.net> \nSent: Friday, July 6, 2012 6:56 PM\nSubject: Re: [Bitcoin-development] BIP 34: Block v2, Height in Coinbase\n\n\nOn Fri, Jul 6, 2012 at 9:49 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\nOn Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:\n>> The proposal is simple, and it's a small change for miners, I imagine.\n>>\n>> My question is: why?\n>>\n>> I worry about stuffing too many requirements on the coinbase. I suppose\n>> the coinbase is easily extendible if we run out of bytes, but I think I'd\n>> like to see some more discussion / good / bad type cases for making this\n>> change. What do we get over just the prev_hash by doing this?\n>\n>With the existing setup (sans height in coinbase), you might not have\n>unique transactions, with all that entails.\n>\n\nBut those issues are solvable through other, non-backwards incompatible means. For example, mandate that a <transaction hash, output index> refers to the first such pair that is not already spent. No?\n\nMark\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-07-06T17:02:47",
                "message_text_only": "On Fri, Jul 6, 2012 at 9:49 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Fri, Jul 6, 2012 at 12:45 PM, Peter Vessenes <peter at coinlab.com> wrote:\n> > The proposal is simple, and it's a small change for miners, I imagine.\n> >\n> > My question is: why?\n> >\n> > I worry about stuffing too many requirements on the coinbase. I suppose\n> > the coinbase is easily extendible if we run out of bytes, but I think I'd\n> > like to see some more discussion / good / bad type cases for making this\n> > change. What do we get over just the prev_hash by doing this?\n>\n> With the existing setup (sans height in coinbase), you might not have\n> unique transactions, with all that entails.\n>\n> Yes, I've experienced that myself, actually.\n\n\n> > Anyway, some background would be great; if I missed it, I'm happy to go\n> > read up, but I didn't see any links on the wiki.\n>\n> Gavin wrote some notes on upgrades and BIP16 lessons-learned at\n> https://gist.github.com/2355445\n>\n> This is a super coherent and excellent writeup. I may come back with more\nthoughts, I want to let it percolate. Thanks!\n\n>  --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120706/a1b1e1dc/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP 34: Block v2, Height in Coinbase",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Amir Taaki",
                "Peter Vessenes",
                "Gregory Maxwell",
                "Gavin Andresen",
                "Mark Friedenbach"
            ],
            "messages_count": 8,
            "total_messages_chars_count": 13068
        }
    },
    {
        "title": "[Bitcoin-development] Pruning in the reference client: ultraprune mode",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2012-07-06T16:52:04",
                "message_text_only": "Hello all,\n\nI've implemented a new block/transaction validation system for the \nreference client, called \"ultraprune\".\n\nTraditionally, pruning for bitcoin is considered to be the ability to \ndelete full transactions from storage once all their outputs are spent, \nand they are buried deeply enough in the chain. That is not what this \nis about.\n\nGiven that almost all operations performed on the blockchain do not \nrequire full previous transactions, but only their unspent outputs, it \nseemed wasteful to use the fully indexed blockchain for everything. \nInstead, we keep a database with only the unspent transaction outputs. \nAfter some effort to write custom compact serializations for these, I \ncould reduce the storage required for such a dataset to less than 70 \nMB. This is kept in a BDB database file (coins.dat), and with indexing \nand overhead, and takes around 130 MB.\n\nNow, this is not enough. You cannot have a full node wit just these \noutputs. In particular, it cannot undo block connections, cannot rescan \nfor wallet transactions, and cannot serve the chain to other nodes. \nThese are, however, quite infrequent operations. To compensate, we keep \nnon-indexed but entire blocks (just each block in a separate file, for \nnow), plus \"undo\" information for connected blocks around in addition \nto coins.dat. We also need a block index with metadata about all stored \nblocks, which takes around 40 MB for now (though that could easily be \nreduced too). Note that this means we lose the ability to find an \nactual transaction in the chain from a txid, but this is not necessary \nfor normal operation. Such an index could be re-added later, if \nnecessary.\n\nOnce you have this, the step to pruning is easily made: just delete \nblock files and undo information for old blocks. This isn't implemented \nfor now, but there shouldn't be a problem. It simply means you cannot \nrescan/reorg/server those old blocks, but once those are deep enough \n(say a few thousand blocks), we can tolerate that.\n\nSo, in summary, it allows one to run a full node (now) with:\n* 130 MB coins.dat\n* 40 MB chain.dat\n* the size of the retained blocks\n  * + +-12% of that for undo information.\n\nOh, it's also faster. I benchmarked a full import of the blockchain \n(187800 blocks) on my laptop (2.2GHz i7, 8 GiB RAM, 640 GB spinning \nharddisk) in 22 minutes. That was from a local disk, and not from \nnetwork (which has extra overhead, and is limited by bandwidth \nconstraints).\n\nIf people want to experiment with it, see my \"ultraprune\" branch on \ngithub: https://github.com/sipa/bitcoin/tree/ultraprune\n\nNote that this is experimental, and has some disadvantages:\n\n* you cannot find a (full) transaction from just its txid. \n* if you have transactions that depend on unconfirmed transactions, \n  those will not get rebroadcasted\n* only block download and reorganization are somewhat tested; use at \n  your own risk\n* less consistency checks are possible on the database, and even fewer \n  are implemented\n\nAlso note that this is not directly related to the recent pruning \nproposals that use an alt chain with an index of unspent coins (and \naddresses), merged mined with the main chain. This could be a step \ntowards such a system, however.\n\n-- \nPieter"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-06T17:19:59",
                "message_text_only": "Pieter's performance numbers are a bit conservative if anything\u2014\nprofiles on ultraprune[1] show that the reference client's wasting of\na lot of time in redundant serialization and hashing operations is\nthe major time sink. Once thats cleared up it should be quite a\nbit faster\n\n[1] https://people.xiph.org/~greg/ultraprune_profile.png\n\nOn Fri, Jul 6, 2012 at 12:52 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n> Also note that this is not directly related to the recent pruning\n> proposals that use an alt chain with an index of unspent coins (and\n> addresses), merged mined with the main chain. This could be a step\n> towards such a system, however.\n\nIn particular,  if the BDB indexing in ultraprune is replaced with\na hash committed tree structure who's root is committed in the\nblockchain you then have a txout commitment scheme.\nUltraprune is most of the messy structural work for that. The\nrest is mostly storage differences."
            }
        ],
        "thread_summary": {
            "title": "Pruning in the reference client: ultraprune mode",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Pieter Wuille",
                "Gregory Maxwell"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 4177
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin Wallet for Android",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-09T09:21:21",
                "message_text_only": "Hey,\n\nI just saw this added to the clients page. One of the conditions we set for that page was that all the clients must have the entire sourcecode available for review, and users should be able to run it from the sourcecode. Is the sourcecode for this client available for review? I couldn't find it.\n\nOtherwise, we should make a separate section for non-opensource clients."
            },
            {
                "author": "Harald Schilly",
                "date": "2012-07-09T09:36:47",
                "message_text_only": "On Mon, Jul 9, 2012 at 11:21 AM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Is the sourcecode for this client available for review? I couldn't find it.\n\nyes:\n\nhttp://code.google.com/p/bitcoin-wallet/\nand it is built upon\nhttp://code.google.com/p/bitcoinj/\n\nharald"
            },
            {
                "author": "mats at henricson.se",
                "date": "2012-07-09T10:19:49",
                "message_text_only": "Sources are available here:\n\nhttp://code.google.com/p/bitcoin-wallet/\n\nMats\n\nQuoting Amir Taaki <zgenjix at yahoo.com>:\n\n> Hey,\n>\n> I just saw this added to the clients page. One of the conditions we   \n> set for that page was that all the clients must have the entire   \n> sourcecode available for review, and users should be able to run it   \n> from the sourcecode. Is the sourcecode for this client available for  \n>  review? I couldn't find it.\n>\n> Otherwise, we should make a separate section for non-opensource clients.\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-09T10:44:30",
                "message_text_only": "OK thanks. I just went and made those sections then saw your posts.\n\nAnyway we have a section for proprietary clients now. Please tell me if anything looks disagreeable, http://bitcoin.org/clients.html\n\nOne thing I'm going to do is randomise the positioning order within sections upon refresh.\n\n\n\n----- Original Message -----\nFrom: \"mats at henricson.se\" <mats at henricson.se>\nTo: bitcoin-development at lists.sourceforge.net\nCc: \nSent: Monday, July 9, 2012 11:19 AM\nSubject: Re: [Bitcoin-development] Bitcoin Wallet for Android\n\nSources are available here:\n\nhttp://code.google.com/p/bitcoin-wallet/\n\nMats\n\nQuoting Amir Taaki <zgenjix at yahoo.com>:\n\n> Hey,\n>\n> I just saw this added to the clients page. One of the conditions we\u00a0 \n> set for that page was that all the clients must have the entire\u00a0 \n> sourcecode available for review, and users should be able to run it\u00a0 \n> from the sourcecode. Is the sourcecode for this client available for\u00a0 \n>\u00a0 review? I couldn't find it.\n>\n> Otherwise, we should make a separate section for non-opensource clients.\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2012-07-09T10:55:51",
                "message_text_only": "I'd suggest adding two links for each client.\n\nOne for getting the binary, and one for getting the source. (Obviously,\nsource being optional if you allow non-opensource clients.)\n\n\nOn 07/09/2012 12:44 PM, Amir Taaki wrote:\n> OK thanks. I just went and made those sections then saw your posts.\n> \n> Anyway we have a section for proprietary clients now. Please tell me if anything looks disagreeable, http://bitcoin.org/clients.html\n> \n> One thing I'm going to do is randomise the positioning order within sections upon refresh.\n> \n> \n> \n> ----- Original Message -----\n> From: \"mats at henricson.se\" <mats at henricson.se>\n> To: bitcoin-development at lists.sourceforge.net\n> Cc: \n> Sent: Monday, July 9, 2012 11:19 AM\n> Subject: Re: [Bitcoin-development] Bitcoin Wallet for Android\n> \n> Sources are available here:\n> \n> http://code.google.com/p/bitcoin-wallet/\n> \n> Mats\n> \n> Quoting Amir Taaki <zgenjix at yahoo.com>:\n> \n>> Hey,\n>>\n>> I just saw this added to the clients page. One of the conditions we  \n>> set for that page was that all the clients must have the entire  \n>> sourcecode available for review, and users should be able to run it  \n>> from the sourcecode. Is the sourcecode for this client available for  \n>>   review? I couldn't find it.\n>>\n>> Otherwise, we should make a separate section for non-opensource clients.\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n> \n> \n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2012-07-09T11:34:10",
                "message_text_only": "Didn't even know that they were proprietary software bitcoin clients.\nShould people trust them? Should the web promote them?\nAfter all, you can't know what they do. What if one of them contains a\nback door or something?\nI would say it's better not risk to apologize later.\n\n\n\nOn 7/9/12, Andreas Schildbach <andreas at schildbach.de> wrote:\n> I'd suggest adding two links for each client.\n>\n> One for getting the binary, and one for getting the source. (Obviously,\n> source being optional if you allow non-opensource clients.)\n>\n>\n> On 07/09/2012 12:44 PM, Amir Taaki wrote:\n>> OK thanks. I just went and made those sections then saw your posts.\n>>\n>> Anyway we have a section for proprietary clients now. Please tell me if\n>> anything looks disagreeable, http://bitcoin.org/clients.html\n>>\n>> One thing I'm going to do is randomise the positioning order within\n>> sections upon refresh.\n>>\n>>\n>>\n>> ----- Original Message -----\n>> From: \"mats at henricson.se\" <mats at henricson.se>\n>> To: bitcoin-development at lists.sourceforge.net\n>> Cc:\n>> Sent: Monday, July 9, 2012 11:19 AM\n>> Subject: Re: [Bitcoin-development] Bitcoin Wallet for Android\n>>\n>> Sources are available here:\n>>\n>> http://code.google.com/p/bitcoin-wallet/\n>>\n>> Mats\n>>\n>> Quoting Amir Taaki <zgenjix at yahoo.com>:\n>>\n>>> Hey,\n>>>\n>>> I just saw this added to the clients page. One of the conditions we\n>>> set for that page was that all the clients must have the entire\n>>> sourcecode available for review, and users should be able to run it\n>>> from the sourcecode. Is the sourcecode for this client available for\n>>>   review? I couldn't find it.\n>>>\n>>> Otherwise, we should make a separate section for non-opensource clients.\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> Live Security Virtual Conference\n>>> Exclusive live event will cover all the ways today's security and\n>>> threat landscape has changed and how IT managers can respond.\n>>> Discussions\n>>> will include endpoint security, mobile security and the latest in\n>>> malware\n>>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>>\n>> will include endpoint security, mobile security and the latest in malware\n>>\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>>\n>> will include endpoint security, mobile security and the latest in malware\n>>\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>>\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n-- \nJorge Tim\u00f3n"
            },
            {
                "author": "slush",
                "date": "2012-07-09T13:11:43",
                "message_text_only": "I agree. Just imagine those two-inches newspaper titles - \"Bitcoin\nhacked! Backdoor in official bitcoin client!\". We have already some\nexperience with shortcuts which journalists do...\n\nslush\n\nOn Mon, Jul 9, 2012 at 1:34 PM, Jorge Tim\u00f3n <timon.elviejo at gmail.com> wrote:\n> Should the web promote them?\n> After all, you can't know what they do. What if one of them contains a\n> back door or something?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T13:46:02",
                "message_text_only": "On Mon, Jul 9, 2012 at 7:34 AM, Jorge Tim\u00f3n <timon.elviejo at gmail.com> wrote:\n> Didn't even know that they were proprietary software bitcoin clients.\n> Should people trust them? Should the web promote them?\n> After all, you can't know what they do. What if one of them contains a\n> back door or something?\n> I would say it's better not risk to apologize later.\n\nI agree too.  Not that being open is _any_ guarantee, ideally we'd\nwant standards\nof review and testing, but thats a bit much to ask for right now."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T14:00:07",
                "message_text_only": "On Mon, Jul 9, 2012 at 5:21 AM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Hey,\n>\n> I just saw this added to the clients page. One of the conditions we set for that page was that all the clients must have the entire sourcecode available for review, and users should be able to run it from the sourcecode. Is the sourcecode for this client available for review? I couldn't find it.\n\nI've reverted these additions to the page, nothing personal but\u2014\n\nAt the moment I'm strongly opposed to including any non-reviewable\nclient options (including centrally operated web services) on the\npage, and I think this need to be discussed along with establishing\nrequirements."
            },
            {
                "author": "Ben Reeves",
                "date": "2012-07-09T14:12:03",
                "message_text_only": "Any chance the blockchain.info iphone app could be included on the clients page? The source is available under an lGPL license: https://github.com/blockchain/My-Wallet-iPhone. More info:https://blockchain.info/wallet/iphone-app\n\nAlso the javascript web front end can be reviewed using a combination of https://github.com/blockchain/My-Wallet and https://github.com/blockchain/My-Wallet-Integrity-Checker but I could see why that might be more of an issue for the the official site.\n\nThank You,\nBen Reeves\n\nOn 9 Jul 2012, at 15:00, Gregory Maxwell wrote:\n\n> On Mon, Jul 9, 2012 at 5:21 AM, Amir Taaki <zgenjix at yahoo.com> wrote:\n>> Hey,\n>> \n>> I just saw this added to the clients page. One of the conditions we set for that page was that all the clients must have the entire sourcecode available for review, and users should be able to run it from the sourcecode. Is the sourcecode for this client available for review? I couldn't find it.\n> \n> I've reverted these additions to the page, nothing personal but\u2014\n> \n> At the moment I'm strongly opposed to including any non-reviewable\n> client options (including centrally operated web services) on the\n> page, and I think this need to be discussed along with establishing\n> requirements.\n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/5c0f170e/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T14:12:11",
                "message_text_only": "On Mon, Jul 9, 2012 at 10:00 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> I've reverted these additions to the page, nothing personal but\u2014\n\nEr, to be clear, I left the android software in because the source is\navailable (And I'm told its had some review).\n\nI removed the proprietary software section the plug for the\nblockchain.info webservices, and the demotion of the armory client.\n\nAs far as criteria goes, I don't think we should list anything with a\nsecurity model weaker than SPV unless users can practically operate\ntheir own servers. \u2026and even that I'm a little uneasy with, because\nmost people will use the defaults. Ideally even thin clients would\nhave a near SPV security model, just without the bandwidth. But since\nthe alternative for thin clients is centralized web services the lower\nstandard will probably have better net results for now.\n\nNor do I think we should list anything which can't currently be\nsubjected to independent review of the whole stack (e.g. including the\nserver components in thinclients, unless the server is untrusted). In\nthe future this should be raised to there existing actual evidence of\nthird party review."
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Wallet for Android",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "slush",
                "Andreas Schildbach",
                "mats at henricson.se",
                "Amir Taaki",
                "Harald Schilly",
                "Jorge Tim\u00f3n",
                "Gregory Maxwell",
                "Ben Reeves"
            ],
            "messages_count": 11,
            "total_messages_chars_count": 15812
        }
    },
    {
        "title": "[Bitcoin-development] Random order for clients page",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-09T15:54:55",
                "message_text_only": "Took me a while, but finally got it working.\n\nEntries on the clients page are randomly ordered when the page is generated.\n\nhttps://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03\n\nWe should regenerate the page every 2 days. This gives fair exposure to all the clients listed."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T16:04:10",
                "message_text_only": "On Mon, Jul 9, 2012 at 11:54 AM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Took me a while, but finally got it working.\n> Entries on the clients page are randomly ordered when the page is generated.\n> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03\n> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.\n\nIf you had authored this as a pull request rather than making the\nchange unilaterally I would have recommended leaving it so the\nreference client was always first. I also would have suggested that it\nuse JS randomization instead of jekyll in order to get more even\ncoverage, though I think thats a more minor point.\n\nSome people were concerned when this page was created that it would\njust be a source of useless disputes.  I think its becoming clear that\nthis is the case. I think the cost of dealing with this page is\nstarting to exceed the benefit it provides and we should probably\nconsider removing it."
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-09T16:09:17",
                "message_text_only": "JS randomisation is bad. People shouldn't need JS to view a webpage.\n\nOnly you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.\n\nYou are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).\n\nIf you want to suggest removing the clients page, then fine, lets also remove all reference to Bitcoin-Qt from the front-page and turn it into a http://bittorrent.org/ style website.\n\nFact is that the other clients are rapidly becoming stable and mature, and the ecosystem is diversifying. The argument that the other clients were not up to scratch held maybe a few months ago, but not now.\n\n\n\n----- Original Message -----\nFrom: Gregory Maxwell <gmaxwell at gmail.com>\nTo: Amir Taaki <zgenjix at yahoo.com>\nCc: \"bitcoin-development at lists.sourceforge.net\" <bitcoin-development at lists.sourceforge.net>\nSent: Monday, July 9, 2012 5:04 PM\nSubject: Re: [Bitcoin-development] Random order for clients page\n\nOn Mon, Jul 9, 2012 at 11:54 AM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Took me a while, but finally got it working.\n> Entries on the clients page are randomly ordered when the page is generated.\n> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03\n> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.\n\nIf you had authored this as a pull request rather than making the\nchange unilaterally I would have recommended leaving it so the\nreference client was always first. I also would have suggested that it\nuse JS randomization instead of jekyll in order to get more even\ncoverage, though I think thats a more minor point.\n\nSome people were concerned when this page was created that it would\njust be a source of useless disputes.\u00a0 I think its becoming clear that\nthis is the case. I think the cost of dealing with this page is\nstarting to exceed the benefit it provides and we should probably\nconsider removing it."
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-07-09T16:39:24",
                "message_text_only": "> You are not a developer of any alternative clients\n\nI am and I'm going to have to agree with Greg. Information about clients\nis bound to be transient and controversial.\n\nMy relatively naive suggestion would be to move it to the Wiki. If it\ncan handle the controversies involved with the Trade page, it should\neasily be able to handle the controversies involved with a Clients page\nlike this one. A link to that page could be added under Bitcoin Wiki on\nBitcoin.org.\n\nOn the subject of randomization, I think that's a bad idea. Randomness\ndoes not equal fairness and more importantly it does not serve the\nusers, which should be the overriding concern. As a user I don't want to\nbe recommended a random client but the most sensible choice. As\nalternative client implementors we should not be overly concerned about\nBitcoin.org recommending the wrong client, truly good clients will\nbenefit from word-of-mouth and eventually rise to the top. If you want a\n\"fair\" ordering, then I'd order by number of downloads for downloadable\nclients and Alexa rank for any hosted / online services if it were\ndecided that such should be listed at all.\n\nOn 7/9/2012 6:09 PM, Amir Taaki wrote:\n> JS randomisation is bad. People shouldn't need JS to view a webpage.\n>\n> Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.\n>\n> You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).\n>\n> If you want to suggest removing the clients page, then fine, lets also remove all reference to Bitcoin-Qt from the front-page and turn it into a http://bittorrent.org/ style website.\n>\n> Fact is that the other clients are rapidly becoming stable and mature, and the ecosystem is diversifying. The argument that the other clients were not up to scratch held maybe a few months ago, but not now.\n>\n>\n>\n> ----- Original Message -----\n> From: Gregory Maxwell <gmaxwell at gmail.com>\n> To: Amir Taaki <zgenjix at yahoo.com>\n> Cc: \"bitcoin-development at lists.sourceforge.net\" <bitcoin-development at lists.sourceforge.net>\n> Sent: Monday, July 9, 2012 5:04 PM\n> Subject: Re: [Bitcoin-development] Random order for clients page\n>\n> On Mon, Jul 9, 2012 at 11:54 AM, Amir Taaki <zgenjix at yahoo.com> wrote:\n>> Took me a while, but finally got it working.\n>> Entries on the clients page are randomly ordered when the page is generated.\n>> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03\n>> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.\n> If you had authored this as a pull request rather than making the\n> change unilaterally I would have recommended leaving it so the\n> reference client was always first. I also would have suggested that it\n> use JS randomization instead of jekyll in order to get more even\n> coverage, though I think thats a more minor point.\n>\n> Some people were concerned when this page was created that it would\n> just be a source of useless disputes.  I think its becoming clear that\n> this is the case. I think the cost of dealing with this page is\n> starting to exceed the benefit it provides and we should probably\n> consider removing it.\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Harald Schilly",
                "date": "2012-07-09T16:55:44",
                "message_text_only": "On Mon, Jul 9, 2012 at 6:39 PM, Stefan Thomas <moon at justmoon.de> wrote:\n> As a user I don't want to\n> be recommended a random client but the most sensible choice.\n> ... wiki page ...\n\nI think this is indeed a controversal topic. I just want to add the\nremark, that it would make sense to have the wiki page *and* this more\n\"official\" page. I would envision this official page as some kind of\n\"stamp of approval\" which includes some sensible criteria, e.g. it\nworks for many users, the development hasn't stopped some time ago\n(bitrot), code review, the author(s) is/are known to the community,\nprivate keys aren't accessible by the webservice, etc.\n\nThe ordering should be by alphabet, in a vertical list with a short\nunbiased description.\n\nHarald"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-07-09T17:21:17",
                "message_text_only": "FWIW, all this argumenting is why my original suggestion for a Clients list \nfocussed on objective information in alphabetical order."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T17:46:01",
                "message_text_only": "On Mon, Jul 9, 2012 at 12:09 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> JS randomisation is bad. People shouldn't need JS to view a webpage.\n\nJS randomization doesn't imply needing JS to view the page. It implies\nneeding JS to see it in random order.  You could also combine it with\nthe server-side randomization if you care about non-js being non\nrandom, though I don't think it matters.\n\nAs others have pointed out I don't generally think the randomization\nis good in principle, but if its done it should at least achieve its\ngoals.\n\n> Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.\n\nI'll let other people speak for themselves, but I did consult others\nbefore reverting your last batch of changes.\n\nMore generally, we have pull requests in order to get some peer review\nof changes.  Everyone should use them except for changes which are\nurgent or trivially safe.  (Presumably everyone with access knows how\nto tell if their changes are likely to be risky or controversial)\n\n> You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).\n\nI'm strongly supportive diversity in the Bitcoin network, and some alt\nclient developers can speak to the positive prodding I've given them\ntowards becoming more complete software. If I've said anything that\nsuggests otherwise I'd love to be pointed to it in order to clarify my\nposition.\n\nUnfortunately none of the primary alternatives are yet complete, the\nnetwork would be non-function if it consisted entirely of multibit or\nelectrum nodes (and as you've noted armory uses a local reference\nclient as its 'server').  The distinction between multiple kinds of\nclients in terms of security and network health are subtle and can be\ndifficult to explain even to technical users and so until something\nchanges there the reference client needs to be the option we lead\nwith. People should us it unless their use-case doesn't match. When it\ndoes they'll know it and they'll be looking. We don't need to make one\nof those recommendations a primary option.\n\nI like the proposals of moving this stuff to the Wiki as the wiki\nalready contains tons of questionable (and sometimes contradictory)\nadvice and so there is less expectation that placement there implies\nany vetting."
            },
            {
                "author": "Alan Reiner",
                "date": "2012-07-09T18:03:55",
                "message_text_only": "I generally agree with Greg.   I don't see anything he's said or done as\nanti-alt-client.\n\nAs an alt-client developer, I'm happy to see my client on the main page,\nbut I'm also happy if that \"clients\" page is simply an acknowledgement that\nthere's more to the Bitcoin world than just the Bitcoin-Qt client, and a\nlink of where to find more information (i.e. the wiki).  I would still *\nprefer* to have the page the way it is, because I think alt clients should\nbe more accessible and word will spread better where it is now -- but I\nalso recognize the inherent difficulty of gaining any kind of consensus of\nhow it should be organized, what goes on the list, etc, and no matter how\nyou do it, someone will complain about it being unfair or not right.\n\nWe either have to have a \"czar\" who is trusted to make responsible\ndecisions, and complaints of being unfair or recommendations for\nimprovements can go through that person, but ultimately it is that person\nwho makes the call.  Or we just move it to another page that is less\nstrictly controlled and where these things matter less.  Trying to gain\nconsensus among an amalgamation of developers all with competing priorities\nand \"products\" is a terrible way to try to agree on stuff.\n\n-Alan\n\n\n\n\nOn Mon, Jul 9, 2012 at 1:46 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n> On Mon, Jul 9, 2012 at 12:09 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> > JS randomisation is bad. People shouldn't need JS to view a webpage.\n>\n> JS randomization doesn't imply needing JS to view the page. It implies\n> needing JS to see it in random order.  You could also combine it with\n> the server-side randomization if you care about non-js being non\n> random, though I don't think it matters.\n>\n> As others have pointed out I don't generally think the randomization\n> is good in principle, but if its done it should at least achieve its\n> goals.\n>\n> > Only you have a problem with this page. I don't see why Bitcoin-Qt needs\n> to be first either when it dominates the front page. It is perfectly fine\n> as it is.\n>\n> I'll let other people speak for themselves, but I did consult others\n> before reverting your last batch of changes.\n>\n> More generally, we have pull requests in order to get some peer review\n> of changes.  Everyone should use them except for changes which are\n> urgent or trivially safe.  (Presumably everyone with access knows how\n> to tell if their changes are likely to be risky or controversial)\n>\n> > You are not a developer of any alternative clients, and this is a\n> webpage for Bitcoin clients. I have made a change to remove a source of\n> disputes, and make the process more fair and equal. Your suggestion to\n> remove the clients page is your bias towards thinking that there should be\n> only one Bitcoin client that everyone uses (the one which you contribute\n> towards).\n>\n> I'm strongly supportive diversity in the Bitcoin network, and some alt\n> client developers can speak to the positive prodding I've given them\n> towards becoming more complete software. If I've said anything that\n> suggests otherwise I'd love to be pointed to it in order to clarify my\n> position.\n>\n> Unfortunately none of the primary alternatives are yet complete, the\n> network would be non-function if it consisted entirely of multibit or\n> electrum nodes (and as you've noted armory uses a local reference\n> client as its 'server').  The distinction between multiple kinds of\n> clients in terms of security and network health are subtle and can be\n> difficult to explain even to technical users and so until something\n> changes there the reference client needs to be the option we lead\n> with. People should us it unless their use-case doesn't match. When it\n> does they'll know it and they'll be looking. We don't need to make one\n> of those recommendations a primary option.\n>\n> I like the proposals of moving this stuff to the Wiki as the wiki\n> already contains tons of questionable (and sometimes contradictory)\n> advice and so there is less expectation that placement there implies\n> any vetting.\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/664e705e/attachment.html>"
            },
            {
                "author": "thomasV1 at gmx.de",
                "date": "2012-07-09T18:29:43",
                "message_text_only": "I agree with Alan.\n\nI too am happy to see my client listed on bitcoin.org, and I don't mind Bitcoin-Qt being listed first. I have no problem with a \"czar\" approach if it can solve conflicts.\n\nI believe that it is useful to keep the 'clients' page on bitcoin.org, because it contributes to clarifying the difference between the Bitcoin client and Bitcoin as a protocol/network/ecosystem. It shows that Bitcoin is much more than its original implementation. It is a sign of health.\n\nThomas\n\n\n\n-------- Original-Nachricht --------\n> Datum: Mon, 9 Jul 2012 14:03:55 -0400\n> Von: Alan Reiner <etotheipi at gmail.com>\n> An: Gregory Maxwell <gmaxwell at gmail.com>\n> CC: \"bitcoin-development at lists.sourceforge.net\" <bitcoin-development at lists.sourceforge.net>\n> Betreff: Re: [Bitcoin-development] Random order for clients page\n\n> I generally agree with Greg.   I don't see anything he's said or done as\n> anti-alt-client.\n> \n> As an alt-client developer, I'm happy to see my client on the main page,\n> but I'm also happy if that \"clients\" page is simply an acknowledgement\n> that\n> there's more to the Bitcoin world than just the Bitcoin-Qt client, and a\n> link of where to find more information (i.e. the wiki).  I would still *\n> prefer* to have the page the way it is, because I think alt clients should\n> be more accessible and word will spread better where it is now -- but I\n> also recognize the inherent difficulty of gaining any kind of consensus of\n> how it should be organized, what goes on the list, etc, and no matter how\n> you do it, someone will complain about it being unfair or not right.\n> \n> We either have to have a \"czar\" who is trusted to make responsible\n> decisions, and complaints of being unfair or recommendations for\n> improvements can go through that person, but ultimately it is that person\n> who makes the call.  Or we just move it to another page that is less\n> strictly controlled and where these things matter less.  Trying to gain\n> consensus among an amalgamation of developers all with competing\n> priorities\n> and \"products\" is a terrible way to try to agree on stuff.\n> \n> -Alan\n> \n> \n> \n>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-09T18:18:02",
                "message_text_only": "This page really does matter to alternative clients. If you measure the click through statistics, then they are a significant portion of the \ntraffic. By removing this page, you are directly stunting Bitcoin's \ngrowth.\n\nThe only thing that's changed between now and this morning is: \n\n- Addition of Bitcoin Wallet for Android\n- Randomisation of entries\n\nI actually got permission from everyone involved before making the page.If you want to remove the page, then we should see a vote by:\n\n- laanwj\n- gavin\n- sipa\n- jgarzik\n- BlueMatt\n- Diapolo\n- luke-jr\n- you\n- jim from multibit\n- gary rowe\n- ThomasV\n- me\n- etotheipi\n- Andreas Schildbach\n- justmoon\n- Mike Hearn\nYou're proposing to remove the page. You know, and I know and I know that you know that nobody visits the Wiki. Your proposal is not \"move to Wiki\" really but remove from bitcoin.org. Keep bitcoin.org for Bitcoin-Qt only which is against the stated goals of the rest of your team members (gavin, sipa, jgarzik).\n\n\nHave you tried the new clients? I've tried all 4, and they are all well written.\n\nTry the new version of Electrum, https://gitorious.org/electrum/electrum - it's more featureful and secure than Bitcoin-Qt what with deterministic wallets, brain-wallets, prioritising addresses, frozen addresses, offline transactions - none of which Bitcoin-Qt has.\n\nMultiBit is also very good with QR integration and the ability for merchants to quickly set themselves up. It's full of guiding help text, and has this paradigm to allow people to work with keys.\n\n\nBitcoin Wallet for Android has one of the best bitcoin UIs I've seen and is extremely well thought out in how the user navigates through the software.\n\nThe Bitcoin network could function perfectly fine with Electrum nodes and \nminers. You would still have miners and we wouldn't have the problem now with huge blocks because miners would be economically incentivised to \nkeep blocks small. But that's another discussion.\n\nTechnically speaking, the randomisation is fine now. It achieves its intended effect, as the page is regenerated daily.\n\nThis does not need to be a source of arguing. I see no problem with having this page be a neutral overview of the main clients (as we all agreed together in the beginning):\n- Source must be public, and users must be able to run from source.\n- Description should be non-spammy and neutral sounding. Cover the negative aspects.\nRandomisation of the order simply makes that fairer. Alphabetical is not a good option (as others have suggested) because it can be gamed.\n\nThere is absolutely no reason to remove this page unless you think bitcoin.org is only for Bitcoin-Qt which is against the wishes of gavin, sipa, jgarzik, and the long-term stated goal of bitcoin.org as a neutral resource for the community.\n\n\n\n----- Original Message -----\nFrom: Gregory Maxwell <gmaxwell at gmail.com>\nTo: Amir Taaki <zgenjix at yahoo.com>\nCc: \"bitcoin-development at lists.sourceforge.net\" <bitcoin-development at lists.sourceforge.net>\nSent: Monday, July 9, 2012 6:46 PM\nSubject: Re: [Bitcoin-development] Random order for clients page\n\nOn Mon, Jul 9, 2012 at 12:09 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> JS randomisation is bad. People shouldn't need JS to view a webpage.\n\nJS randomization doesn't imply needing JS to view the page. It implies\nneeding JS to see it in random order.\u00a0 You could also combine it with\nthe server-side randomization if you care about non-js being non\nrandom, though I don't think it matters.\n\nAs others have pointed out I don't generally think the randomization\nis good in principle, but if its done it should at least achieve its\ngoals.\n\n> Only you have a problem with this page. I don't see why Bitcoin-Qt needs to be first either when it dominates the front page. It is perfectly fine as it is.\n\nI'll let other people speak for themselves, but I did consult others\nbefore reverting your last batch of changes.\n\nMore generally, we have pull requests in order to get some peer review\nof changes.\u00a0 Everyone should use them except for changes which are\nurgent or trivially safe.\u00a0 (Presumably everyone with access knows how\nto tell if their changes are likely to be risky or controversial)\n\n> You are not a developer of any alternative clients, and this is a webpage for Bitcoin clients. I have made a change to remove a source of disputes, and make the process more fair and equal. Your suggestion to remove the clients page is your bias towards thinking that there should be only one Bitcoin client that everyone uses (the one which you contribute towards).\n\nI'm strongly supportive diversity in the Bitcoin network, and some alt\nclient developers can speak to the positive prodding I've given them\ntowards becoming more complete software. If I've said anything that\nsuggests otherwise I'd love to be pointed to it in order to clarify my\nposition.\n\nUnfortunately none of the primary alternatives are yet complete, the\nnetwork would be non-function if it consisted entirely of multibit or\nelectrum nodes (and as you've noted armory uses a local reference\nclient as its 'server').\u00a0 The distinction between multiple kinds of\nclients in terms of security and network health are subtle and can be\ndifficult to explain even to technical users and so until something\nchanges there the reference client needs to be the option we lead\nwith. People should us it unless their use-case doesn't match. When it\ndoes they'll know it and they'll be looking. We don't need to make one\nof those recommendations a primary option.\n\nI like the proposals of moving this stuff to the Wiki as the wiki\nalready contains tons of questionable (and sometimes contradictory)\nadvice and so there is less expectation that placement there implies\nany vetting."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-09T18:30:14",
                "message_text_only": "It's easy to say, this page is controversial, so let's get rid of it.\n\nHowever that starts the project down the road of being dominated by\nour internal politics rather than what actually makes sense from the\nend users perspective. That route spells doom for any product. You can\nalways tell when a UI or product is the result of internal politics,\nwhether it be the difficulty of plug-n-play hardware on Linux (no\ndriver api) to how Microsoft is incapable of producing anything that\nisn't built on Windows. Gmail labs is another example of this.\n\nIt makes sense that if I go to bitcoin.org, I am educated about the\nsystem and what is available for it. It doesn't make any sense to have\nsome stuff on the main site and other stuff on a wiki (which may get\nrandomly vandalized and looks less professional), based on how\n\"controversial\" some developers find it.\n\nFWIW I am dead set against anyone randomly changing the website\nwithout a pull request and such changes should be reverted and\nresubmitted through the proper channels. I don't perceive much value\nin randomization or trying to make this page \"fair\". If anything, we\nneed to pick somebody (one person) who has a strong focus on regular\npeople and their needs, then just make them the sole committer to the\nwebsite. That way disputes can be resolved by them making a decision,\ninstead of ridiculous edit wars."
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-07-09T22:26:06",
                "message_text_only": "> However that starts the project down the road of being dominated by\n> our internal politics rather than what actually makes sense from the\n> end users perspective.\n\nI strongly agree, but this is *why* I suggested moving it to the wiki. I\nrecently had to choose an XMPP client and I looked on xmpp.org - after a\nfrustrating experience with their listing [1], I went to Wikipedia who\nhave an decent feature-based matrix [2].\n\n(There may be better examples, but I'm using this one, because this\nactually did happen.)\n\nThis is just anecdotal, but there are some reasons why wikis tend to do\na better for this kind of thing is because they are:\n\n- more up-to-date (anyone can update them)\n- more in touch with users:\n  -> Users can edit the page and add a column to a feature matrix for\nexample).\n  -> The editing discussions include users. I guarantee there are more\nBitcoin end users with a wiki account than a Github account.\n-  immediately recognizable as a wiki (thanks to Mediawiki/Wikipedia.)\nAs such many users will correctly treat and interpret the information\npresented as community-generated and fallible.\n\nSo they are more user-oriented in the sense that they will be influenced\nby a diverse set of backgrounds and views vs. a Github based page which\nwill be dominated by developers. If you want to see \"the result of\ninternal politics\", the current client page is a good example. We\ncouldn't agree on the columns for a feature matrix, so now we just have\nwalls of text. Some of the options that are de-facto the most popular\nwith users like BlockChain.info or just using your MtGox account are not\nmentioned at all. When analyzing client security, Greg discussed\ncounterparty risks but ignored other risk factors like default backup\nbehavior and the usability of security features.\n\nBut even if I grant you that those clients' overall risk profile is\nworse than Bitcoin-Qt's, maybe I'm happy to take that risk in exchange\nfor less setup/maintenance effort. Based on our support requests at\nWeUseCoins I know that there are tons of users with < 1 BTC in their\nwallets. If my hourly wage is 20$ and I have 20$ in my Bitcoin wallet\nthen spending one hour per month downloading/updating/figuring-out the\nclient is equivalent to a total loss.\n\nThe list is obviously designed by open-source developers and that's\nfine, it's bitcoin.org, arguably we *should* try to push users in a\nspecific direction, arguably we *should* err on the side of caution in\norder to not be caught recommending a hosted wallet that gets hacked.\nBut if user orientation is supposed to be the focus, then the wiki will\nboth allow us (because it's less \"official\") and force us (because users\nwill have a say) to include even clients we personally wouldn't use. :)\n\n\n[1] http://xmpp.org/xmpp-software/clients/\n[2]\nhttp://en.wikipedia.org/wiki/Comparison_of_instant_messaging_clients#XMPP-related_features\n\n\n\n\n\nOn 7/9/2012 8:30 PM, Mike Hearn wrote:\n> It's easy to say, this page is controversial, so let's get rid of it.\n>\n> However that starts the project down the road of being dominated by\n> our internal politics rather than what actually makes sense from the\n> end users perspective. That route spells doom for any product. You can\n> always tell when a UI or product is the result of internal politics,\n> whether it be the difficulty of plug-n-play hardware on Linux (no\n> driver api) to how Microsoft is incapable of producing anything that\n> isn't built on Windows. Gmail labs is another example of this.\n>\n> It makes sense that if I go to bitcoin.org, I am educated about the\n> system and what is available for it. It doesn't make any sense to have\n> some stuff on the main site and other stuff on a wiki (which may get\n> randomly vandalized and looks less professional), based on how\n> \"controversial\" some developers find it.\n>\n> FWIW I am dead set against anyone randomly changing the website\n> without a pull request and such changes should be reverted and\n> resubmitted through the proper channels. I don't perceive much value\n> in randomization or trying to make this page \"fair\". If anything, we\n> need to pick somebody (one person) who has a strong focus on regular\n> people and their needs, then just make them the sole committer to the\n> website. That way disputes can be resolved by them making a decision,\n> instead of ridiculous edit wars.\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-09T22:37:07",
                "message_text_only": "> I strongly agree, but this is *why* I suggested moving it to the wiki. I\n> recently had to choose an XMPP client and I looked on xmpp.org - after a\n> frustrating experience with their listing [1]\n\nProbably because their listing is even more useless than any of the\nproposals that were presented here. Thank goodness it didn't end up\nlike that. Their table doesn't even attempt to list features or\ndifferentiating aspects of each client.\n\nI think the XMPP guys have pretty much given up on directly marketing\nthe system to end users.\n\n> - more up-to-date (anyone can update them)\n\nFortunately reasonable clients don't appear/disappear/change that often.\n\n> - more in touch with users:\n\nI think by \"users\" you mean, geeks who understand wiki syntax. Because\nthat's what it'll end up trending towards. I don't believe a wiki\nwould reflect the needs of your average person. It's still better to\nhave these arguments here and try to find a user-focussed consensus\nthan hope one will converge from a wiki.\n\n> If you want to see \"the result of\n> internal politics\", the current client page is a good example. We\n> couldn't agree on the columns for a feature matrix, so now we just have\n> walls of text.\n\nInability to agree on columns isn't why the page looks like that. I\nknow because I'm the one who argued for the current design.\n\nIt looks like that because feature matrices aren't especially helpful\nfor newbies to make a decision, especially when the \"features\" in\nquestion were often things like how they handled the block chain or\nwhich protocol standards they support, ie, things only of interest to\ndevelopers.\n\nIt's much easier to communicate the differences to people with a short\npiece of text, and maybe if there is no obvious way to explain why\nyou'd want to use a given client, that's a good sign it's not worth\nlisting there. Otherwise you end up like xmpp.org.\n\n> Some of the options that are de-facto the most popular\n> with users like BlockChain.info or just using your MtGox account are not\n> mentioned at all.\n\nIt's true that bitcoin.org needs to be conservative. That said, I'd\nlike there to be sections for them too, actually. I agree that risk\nisn't purely about how it's implemented and that whilst we might like\nto push particular ideologies around protocols or code licensing, that\nisn't especially relevant to end users who have different priorities.\nTrack record counts for a lot as well."
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-07-10T02:36:39",
                "message_text_only": "> I think by \"users\" you mean, geeks who understand wiki syntax.\n\nThe point is to expand the circle of contributors. I'm pretty sure there\nare more people who can edit a wiki than people who know HTML and how to\ncreate a git pull request. :)\n\n\n> Inability to agree on columns isn't why the page looks like that.\n\nMy apologies, I vaguely remembered Luke's original proposal and that it\ngot rejected, but you're correct, the reason wasn't a debate on the\ncolumns but that people didn't like the feature matrix at all.\n\n\nI didn't really mean to argue on the details of what the page should\nlook like, but just to briefly respond to Mike's point:\n\n> It looks like that because feature matrices aren't especially helpful\n> for newbies to make a decision, especially when the \"features\" in\n> question were often things like how they handled the block chain or\n> which protocol standards they support, ie, things only of interest to\n> developers.\n\nA well-designed feature matrix can quite useful and user-friendly.\n\nhttp://www.apple.com/ipod/compare-ipod-models/\n\nProse is better to get a sense of the philosophy and basic idea of a\nclient. If it was between having only a feature matrix or only prose,\nI'd probably go for the prose as well.\n\nWhat a feature matrix is good at though is it allows you to very quickly\nfind the specific feature or general criteria you're looking for without\nreading through all of the text. So it might be a useful addition maybe\nnot on Bitcoin.org, but certainly on the wiki.\n\n\nOn 7/10/2012 12:37 AM, Mike Hearn wrote:\n>> I strongly agree, but this is *why* I suggested moving it to the wiki. I\n>> recently had to choose an XMPP client and I looked on xmpp.org - after a\n>> frustrating experience with their listing [1]\n> Probably because their listing is even more useless than any of the\n> proposals that were presented here. Thank goodness it didn't end up\n> like that. Their table doesn't even attempt to list features or\n> differentiating aspects of each client.\n>\n> I think the XMPP guys have pretty much given up on directly marketing\n> the system to end users.\n>\n>> - more up-to-date (anyone can update them)\n> Fortunately reasonable clients don't appear/disappear/change that often.\n>\n>> - more in touch with users:\n> I think by \"users\" you mean, geeks who understand wiki syntax. Because\n> that's what it'll end up trending towards. I don't believe a wiki\n> would reflect the needs of your average person. It's still better to\n> have these arguments here and try to find a user-focussed consensus\n> than hope one will converge from a wiki.\n>\n>> If you want to see \"the result of\n>> internal politics\", the current client page is a good example. We\n>> couldn't agree on the columns for a feature matrix, so now we just have\n>> walls of text.\n> Inability to agree on columns isn't why the page looks like that. I\n> know because I'm the one who argued for the current design.\n>\n> It looks like that because feature matrices aren't especially helpful\n> for newbies to make a decision, especially when the \"features\" in\n> question were often things like how they handled the block chain or\n> which protocol standards they support, ie, things only of interest to\n> developers.\n>\n> It's much easier to communicate the differences to people with a short\n> piece of text, and maybe if there is no obvious way to explain why\n> you'd want to use a given client, that's a good sign it's not worth\n> listing there. Otherwise you end up like xmpp.org.\n>\n>> Some of the options that are de-facto the most popular\n>> with users like BlockChain.info or just using your MtGox account are not\n>> mentioned at all.\n> It's true that bitcoin.org needs to be conservative. That said, I'd\n> like there to be sections for them too, actually. I agree that risk\n> isn't purely about how it's implemented and that whilst we might like\n> to push particular ideologies around protocols or code licensing, that\n> isn't especially relevant to end users who have different priorities.\n> Track record counts for a lot as well.\n>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-07-10T02:44:23",
                "message_text_only": "On 07/09/2012 10:36 PM, Stefan Thomas wrote:\n>> It looks like that because feature matrices aren't especially helpful\n>> for newbies to make a decision, especially when the \"features\" in\n>> question were often things like how they handled the block chain or\n>> which protocol standards they support, ie, things only of interest to\n>> developers.\n> A well-designed feature matrix can quite useful and user-friendly.\n>\n> http://www.apple.com/ipod/compare-ipod-models/\n>\n> Prose is better to get a sense of the philosophy and basic idea of a\n> client. If it was between having only a feature matrix or only prose,\n> I'd probably go for the prose as well.\n>\n> What a feature matrix is good at though is it allows you to very quickly\n> find the specific feature or general criteria you're looking for without\n> reading through all of the text. So it might be a useful addition maybe\n> not on Bitcoin.org, but certainly on the wiki.\n>\nIf we're keeping the clients page, I would really like to see the \nfeature matrix linked from that page.  It shouldn't be on that main \nclients page (for the reasons already stated), but Stefan makes a point \nthat /it is really useful for many users./  Add \"Compare features of the \nvarious different clients here: <link>\" and users who will benefit will \nmost definitely click on it.  I think that's win-win.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/5376969f/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-10T03:05:44",
                "message_text_only": "On Mon, Jul 9, 2012 at 10:44 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n> What a feature matrix is good at though is it allows you to very quickly\n> find the specific feature or general criteria you're looking for without\n> reading through all of the text. So it might be a useful addition maybe\n> not on Bitcoin.org, but certainly on the wiki.\n\nI'm generally not a fan of feature matrixes, they encourage \"checkbox\ndecision making\"\u2014 which is seldom very good for the decider, though\nit's much loved by the marketing department that puts together the\nmatrix.  But just becase something is loved by marketing departments\nfor its ability to set the agenda in variously biased ways doesn't\nmean its a great thing to emulate.\n\nTake the matrix Luke linked to for example[1].  Now imagine that we\ntunnel MyBitcoin from a year ago and drop it into that table.  It\nwould have every light green, except 'encryption' (which wouldn't have\nbeen green for bitcoin-qt then either). It would basically be the\ndominant option by the matrix comparison, and this is without any\nlobbying to get MyBitcoin specific features (like their shopping chart\ninterface) added, not to mention the \"_vanishes with everyone's\nmoney_\" feature.\n\nI don't think I'm being unreasonable to say that if you could drop in\nsomething that retrospectively cost people a lot into your decision\nmatrix and it comes out on top you're doing something wrong.\n\nIn tables like this significant differences like \"a remote hacker can\nrob you\" get reduced to equal comparison with \"chrome spoiler\",  and\nit further biases development motivations towards features that make\nnice bullets (even if they're seldom used) vs important infrastructure\nwhich may invisibly improve usage every day or keeps the network\nsecure and worth having.  \"Of course I want the fastest startup! Why\nwould I choose anything else?\" \"What do you mean all my bitcoin is\ngone because the four remaining full nodes were taken over and reorged\nit all?\"\n\nI wouldn't expect any really important features which don't have\ncomplicated compromises attached to them to be omitted from all\nclients for all that long.\n\nBasically matrixes make bad decision making fast, and by making it\nfast it's more attractive than careful decision making that always\ntakes time.  The text is nice because it contextualizes the complete\nfeature set and helps you understand why different clients exist, what\nproblems they attempt to solve, and what compromises they make. ...\nwithout making the unrealistic demand of the user they they know how\nto fairly weigh the value of technical and sometimes subtle issues.\n\n\n[1] https://en.bitcoin.it/wiki/Clients"
            },
            {
                "author": "Wladimir",
                "date": "2012-07-10T07:12:15",
                "message_text_only": "Just my two cents -- I'm against removing the overview page or moving it to\nthe wiki. I think other open source clients deserve a mention on the\nbitcoin.org page.\n\nMany new people are looking for a good Android client, for example. Rather\nthan randomly searching on Google or the app store, it's much safer to\nfollow the link from bitcoin.org. Others are looking for a light clients\nbecause they think the Satoshi one is too heavy.\n\nAgain, rather than following random links on a search engine or wiki (not\nall users have the common sense required for this) it may be better if they\nfollow links \"audited\" (or at least discussed) by this community. I agree\nwith Jim here.\n\nThe reference client is already first in that it can be downloaded directly\nfrom the main page of bitcoin.org. That should stay that way for the\nconsiderable future, as it's the most proven.  The position in the alt\nclients list is less important. That said, I'm not a big fan of randomized\norder because it's confusing. Come back to the page and it's different.\nSome other neutral ordering is probably possible.\n\nWladimir\n\nOn Tue, Jul 10, 2012 at 5:05 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n> On Mon, Jul 9, 2012 at 10:44 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n> > What a feature matrix is good at though is it allows you to very quickly\n> > find the specific feature or general criteria you're looking for without\n> > reading through all of the text. So it might be a useful addition maybe\n> > not on Bitcoin.org, but certainly on the wiki.\n>\n> I'm generally not a fan of feature matrixes, they encourage \"checkbox\n> decision making\"\u2014 which is seldom very good for the decider, though\n> it's much loved by the marketing department that puts together the\n> matrix.  But just becase something is loved by marketing departments\n> for its ability to set the agenda in variously biased ways doesn't\n> mean its a great thing to emulate.\n>\n> Take the matrix Luke linked to for example[1].  Now imagine that we\n> tunnel MyBitcoin from a year ago and drop it into that table.  It\n> would have every light green, except 'encryption' (which wouldn't have\n> been green for bitcoin-qt then either). It would basically be the\n> dominant option by the matrix comparison, and this is without any\n> lobbying to get MyBitcoin specific features (like their shopping chart\n> interface) added, not to mention the \"_vanishes with everyone's\n> money_\" feature.\n>\n> I don't think I'm being unreasonable to say that if you could drop in\n> something that retrospectively cost people a lot into your decision\n> matrix and it comes out on top you're doing something wrong.\n>\n> In tables like this significant differences like \"a remote hacker can\n> rob you\" get reduced to equal comparison with \"chrome spoiler\",  and\n> it further biases development motivations towards features that make\n> nice bullets (even if they're seldom used) vs important infrastructure\n> which may invisibly improve usage every day or keeps the network\n> secure and worth having.  \"Of course I want the fastest startup! Why\n> would I choose anything else?\" \"What do you mean all my bitcoin is\n> gone because the four remaining full nodes were taken over and reorged\n> it all?\"\n>\n> I wouldn't expect any really important features which don't have\n> complicated compromises attached to them to be omitted from all\n> clients for all that long.\n>\n> Basically matrixes make bad decision making fast, and by making it\n> fast it's more attractive than careful decision making that always\n> takes time.  The text is nice because it contextualizes the complete\n> feature set and helps you understand why different clients exist, what\n> problems they attempt to solve, and what compromises they make. ...\n> without making the unrealistic demand of the user they they know how\n> to fairly weigh the value of technical and sometimes subtle issues.\n>\n>\n> [1] https://en.bitcoin.it/wiki/Clients\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120710/7aee681d/attachment.html>"
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-07-10T09:11:59",
                "message_text_only": "> I wouldn't expect any really important features which don't have\n> complicated compromises attached to them to be omitted from all\n> clients for all that long.\n\nTrue, it's those compromises that people should base their decision on.\nTo make that easier was the motivation for me to suggest feature\nmatrices in the first place.\n\nRight now if I read Electrum's description, it doesn't say anything\nabout the tradeoffs with a lightweight client like the slightly weaker\nprivacy guarantees. At best I could deduce that from the fact that\nunlike Bitcoin-Qt it doesn't explicitly list privacy as an advantage.\n\nSo applying the same \"MyBitcoin test\" to the current Bitcoin Clients\npage and if you want to be fair, we'd have to assume that if it was\nindeed included it would also just be a short pitch listing only pros\nand no cons. So it would say something like: \"MyBitcoin starts instantly\nand is really easy to use and great for beginners.\" etc.\n\nObviously if you compare a bad matrix to good short descriptions and\nvice versa you'll get the conclusion you're trying to get.\n\nI think Alan had the best idea - let's have the Clients page as it is\nand have it link to the wiki for those who want a more detailed\ncomparison. On the wiki page we can then have explanations of the basic\nclient types, separate matrices for features and for security/privacy\nand whatever else might be useful to know when choosing a client. Then\nusers who don't really care aren't bothered by \"too much information\"\nand users who do can easily click through and find out about the\ndifferent tradeoffs.\n\nOn 7/10/2012 5:05 AM, Gregory Maxwell wrote:\n> On Mon, Jul 9, 2012 at 10:44 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n>> What a feature matrix is good at though is it allows you to very quickly\n>> find the specific feature or general criteria you're looking for without\n>> reading through all of the text. So it might be a useful addition maybe\n>> not on Bitcoin.org, but certainly on the wiki.\n> I'm generally not a fan of feature matrixes, they encourage \"checkbox\n> decision making\"\u2014 which is seldom very good for the decider, though\n> it's much loved by the marketing department that puts together the\n> matrix.  But just becase something is loved by marketing departments\n> for its ability to set the agenda in variously biased ways doesn't\n> mean its a great thing to emulate.\n>\n> Take the matrix Luke linked to for example[1].  Now imagine that we\n> tunnel MyBitcoin from a year ago and drop it into that table.  It\n> would have every light green, except 'encryption' (which wouldn't have\n> been green for bitcoin-qt then either). It would basically be the\n> dominant option by the matrix comparison, and this is without any\n> lobbying to get MyBitcoin specific features (like their shopping chart\n> interface) added, not to mention the \"_vanishes with everyone's\n> money_\" feature.\n>\n> I don't think I'm being unreasonable to say that if you could drop in\n> something that retrospectively cost people a lot into your decision\n> matrix and it comes out on top you're doing something wrong.\n>\n> In tables like this significant differences like \"a remote hacker can\n> rob you\" get reduced to equal comparison with \"chrome spoiler\",  and\n> it further biases development motivations towards features that make\n> nice bullets (even if they're seldom used) vs important infrastructure\n> which may invisibly improve usage every day or keeps the network\n> secure and worth having.  \"Of course I want the fastest startup! Why\n> would I choose anything else?\" \"What do you mean all my bitcoin is\n> gone because the four remaining full nodes were taken over and reorged\n> it all?\"\n>\n> I wouldn't expect any really important features which don't have\n> complicated compromises attached to them to be omitted from all\n> clients for all that long.\n>\n> Basically matrixes make bad decision making fast, and by making it\n> fast it's more attractive than careful decision making that always\n> takes time.  The text is nice because it contextualizes the complete\n> feature set and helps you understand why different clients exist, what\n> problems they attempt to solve, and what compromises they make. ...\n> without making the unrealistic demand of the user they they know how\n> to fairly weigh the value of technical and sometimes subtle issues.\n>\n>\n> [1] https://en.bitcoin.it/wiki/Clients\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Daniel F",
                "date": "2012-07-13T15:20:58",
                "message_text_only": "This discussion is quite bikesheddy, but (or thus? :) ) I will put in my\n2c.\n\nThe main thing to think about, I think, is \"what would be best for the\nusers\". To that end, I suggest the following:\n\n* I do think a page on bitcoin.org listing relatively major, and\nrelatively vetted, clients is a good idea. Removing it completely and\nrelegating it to a wiki page, which is likely to contain all sorts of\nmarginal crufty clients, would likely be a disservice to the users.\n\n* Randomized order is likely also a disservice to the users. We should\nlist clients in order of \"goodness\", as determined by whoever(s) we\ndecide to put in charge of the page. This \"goodness\" should likely to be\nsome kind of weighted average of features, security, goodness for\nbitcoin network, etc. [1]\n\n** If randomized order is after all chosen, it should be done in\njavascript client-side, rather than doing daily page reorgs. If people\nwithout JS don't see random, it's not material at all.\n\n* Prose vs. feature matrix: both have their good and bad points, as\ndiscussed upthread. I think the users will be best served by a\ncombination of both:\n\n** Prose descriptions of clients should deliberately include negative\npoints, not just let the user infer them by lack of corresponding\npositive mention. (e.g. \"This client has fast startup time. That means\nyou're completely trusting the server operator with your money.\") This\ntask is left up to the person(s) in charge.\n\n** A feature matrix, with carefully chosen and /well defined/\ncategories, /in addition to prose/ would likely also be of service to\nthe users. That could be left to the wiki though. The current wiki\nclients page seems to be having a good go at it.[2]\n\n** If we are targeting people who \"don't know what they're doing\", it\nmay be a good idea to have a 'decision assistant' type setup, where\nusers are asked several questions and are recommended clients based on\nthese answers. (This could be done in a static way by having a matrix of\nquestions.)\n\n\nFinally - I'd say we're spending disproportionate developer resources on\nthis question, and if it were completely up to me, I'd resolve this\nsituation in the following quick-and-painless way: leave page as is, add\nnegative points to prose, link to wiki clients list. Estimated time to\ncompletion: 1 hour (to think through which negative points to add).\n\n\n[1] Meehl, 1954, clinical versus statistical prediction... (see also\nGrove and Meehl, 1996; Sawyer, 1966) (and yes, despite the age of some\nof this research, the conclusions have been surprisingly robust and\ntimeproof.)\n[2] https://en.bitcoin.it/w/index.php?title=Clients&oldid=28615\n\n-nanotube\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 227 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120713/7bf3ec40/attachment.sig>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T18:48:18",
                "message_text_only": "On Mon, Jul 9, 2012 at 2:18 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> The only thing that's changed between now and this morning is:\n>\n> - Addition of Bitcoin Wallet for Android\n> - Randomisation of entries\n\nYes, because I reverted eight commits to it by you because they were\nclearly controversial, including the proprietary clients section and\nblockchain.info.\n\nYou went on to add the randomization, again without a pull request\nand, as seen here, its somewhat controversial.\n\n> I actually got permission from everyone involved before making the page.If you want to remove the page, then we should see a vote by:\n\nLuke originally authored the multiple clients page. It sounded like it\ncould be useful and I made some recommendations for it too.  I'm\nconcerned that it's not working out that well. Thus \"we should\nprobably consider\".  Perhaps that came off as too strong.  If I really\npushing for that I'd submit it as a pull request. (and everyone,\nincluding the people you listed, could comment)\n\nI think the fact that we can just remove it if we can't agree on it is\na useful point to the discussion.  For the site to be a neutral\nresource it should be conservatively operated and if sometimes being\nneutral, safe, and conservative gets in the way of being complete then\nwe should choose those other things over completeness. There are a\ngreat many other resources available, bitcoin.org will never contain\nall the relevant knowledge.\n\n> You're proposing to remove the page.You know, and I know and I know that you know that nobody visits the Wiki.\n\nCrazy. I have considerable evidence to the contrary, in fact. The wiki\nis widely used and promoted as the primary community memory.\n\nI certainly didn't agree with that suggestion because I thought it\nwouldn't get seen. I found it agreeable because it would reflect the\nlower degree of consensus we apparently have about listing the page.\n\n> Have you tried the new clients? I've tried all 4, and they are all well written.\n\nI've used multibit, armory, and electrum (though not for some time). I\nshed painted the electrum determinstic wallet stuff pretty extensively\nwhen it was first created, and I think the wordlist seed stuff was my\nsuggestion.\n\n> Try the new version of Electrum, https://gitorious.org/electrum/electrum - it's more featureful and secure than Bitcoin-Qt what with deterministic wallets, brain-wallets, prioritising addresses, frozen addresses, offline transactions - none of which Bitcoin-Qt has.\n\nI'd like to invite you to point your electrum client against a server\nI operate.  I will then happily agree with you that it is more secure:\nbecause the bitcoin I rob from you will soothe my pain at the loss of\nthis \"debate\".  Sound like a deal?\n\nI think you're exaggerating the features there, and simultaneously\nunderplaying the fact that clients doesn't actually participate in the\nbitcoin protocol, don't provide the security promises of bitcoin, and\nbasically leave us with a centralized system (if thats all we had).\nIt's a worthwhile part of the ecosystem, I agree.\n\n> MultiBit is also very good with QR integration and the ability for merchants to quickly set themselves up. It's full of guiding help text, and has this paradigm to allow people to work with keys.\n\nThere has been QR integration in bitcoin-qt for some time. ::shrugs::\nI don't really understand why you're arguing features here: Yes the\nother clients are great things. I never said they weren't.  They are\nnot, however, complete alternatives to the reference client yet.\n\n> There is absolutely no reason to remove this page unless you think bitcoin.org is only for Bitcoin-Qt which is against the wishes of gavin, sipa, jgarzik, and the long-term stated goal of bitcoin.org as a neutral resource for the community.\n\nPlease stop putting words in my mouth. I certainly don't think that."
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-07-09T20:44:50",
                "message_text_only": "On Mon, Jul 9, 2012 at 12:04 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> If you had authored this as a pull request rather than making the\n> change unilaterally I would have recommended leaving it so the\n> reference client was always first. I also would have suggested that it\n> use JS randomization instead of jekyll in order to get more even\n> coverage, though I think thats a more minor point.\n\nAgreed, and this would be why I support revert -- pull requests are\nfor anything non-trivial.  This practice of pull requests clearly\nshould be followed in the case of controversial changes.\n\n> Some people were concerned when this page was created that it would\n> just be a source of useless disputes.  I think its becoming clear that\n> this is the case. I think the cost of dealing with this page is\n> starting to exceed the benefit it provides and we should probably\n> consider removing it.\n\nAgreed.\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Nils Schneider",
                "date": "2012-07-09T17:33:46",
                "message_text_only": "I don't think that's a good idea as it can easily confuse or annoy users\nwhen things move around. The ordering should be preserved as much as\npossible so users can remember where they found a client they liked\n(e.g. 2nd row, 1st column and screenshot with light and blue colors).\nMaking them search the entire page is inefficient and will just get\nworse once there are many clients on the page (and I think that's the goal).\n\nOn 09.07.2012 17:54, Amir Taaki wrote:\n> Took me a while, but finally got it working.\n> \n> Entries on the clients page are randomly ordered when the page is generated.\n> \n> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03\n> \n> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.\n> \n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-09T18:24:06",
                "message_text_only": "By that time in the future, when there are many clients, there should just be a flat list or no list at all.\n\n\n\n----- Original Message -----\nFrom: Nils Schneider <nils at nilsschneider.net>\nTo: bitcoin-development at lists.sourceforge.net\nCc: \nSent: Monday, July 9, 2012 6:33 PM\nSubject: Re: [Bitcoin-development] Random order for clients page\n\nI don't think that's a good idea as it can easily confuse or annoy users\nwhen things move around. The ordering should be preserved as much as\npossible so users can remember where they found a client they liked\n(e.g. 2nd row, 1st column and screenshot with light and blue colors).\nMaking them search the entire page is inefficient and will just get\nworse once there are many clients on the page (and I think that's the goal).\n\nOn 09.07.2012 17:54, Amir Taaki wrote:\n> Took me a while, but finally got it working.\n> \n> Entries on the clients page are randomly ordered when the page is generated.\n> \n> https://github.com/bitcoin/bitcoin.org/commit/6850fc8c83494d6ec415ea9d36fb98366373cc03\n> \n> We should regenerate the page every 2 days. This gives fair exposure to all the clients listed.\n> \n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jim",
                "date": "2012-07-09T18:54:42",
                "message_text_only": "I think we are all so familiar with Bitcoin that we forget how daunting\nand confusing it all is to new users. The clients page does a good job\nin explaining that there are various pieces of software that they (the\nnew user) can use with their bitcoins.\n\nIt also helps with the question \"Who can I trust ?\"\nBy having the clients on a link from the \"mothership\" of bitcoin.org it\ngives credence to all of the alt clients.\n\nThis last point is a good reason to only include open source clients\nIMHO. \n\nRE: The position randomisation - I have to admit I was secretly pleased\nwith the original layout, as MultiBit just happened to have the \"eye\ncandy\" position of \"top and centre\".  It is only fair to have them\nswitch around.\n-- \nhttp://multibit.org    Money, reinvented"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-09T18:57:32",
                "message_text_only": "On Mon, Jul 9, 2012 at 2:54 PM, Jim <jim618 at fastmail.co.uk> wrote:\n> RE: The position randomisation - I have to admit I was secretly pleased\n> with the original layout, as MultiBit just happened to have the \"eye\n> candy\" position of \"top and centre\".  It is only fair to have them\n> switch around.\n\nThis ordering wasn't accidental."
            },
            {
                "author": "Alan Reiner",
                "date": "2012-07-09T19:14:51",
                "message_text_only": "I was originaly for the idea of randomization.  Because it is the most\n\"fair\", but \"fair\" is a relative term.  It's fair for client developers who\nargue over whose client should be first, and whose is better for various\npurposes.   But it's not fair for users, to have an inconsistent page, that\nsometimes recommends less-developed solutions, or doesn't show what's best *for\nthe users in the community*.\n\nI think the premise of having a page that is \"fair for developers\" is its\ndownfall.  Once we agree things have to be fair, we must agree on what fair\nmeans, and then we must accept 30 new recently-started projects that barely\nsqueak by the requirements for being on the page, despite having\nsubstantial issues/bugs.  The premise of being fair is the downfall here.\n\nThis *has* to be a subjective list.   Someone who is trusted to understand\nwhat is good for users, and who also has familiarity with the programs,\nshould be the one to decide.  People can try to provide input, and make\nthem aware of stuff they didn't know.  But it should be *that\nperson's*decision, and if it's not \"fair\" in your world, too bad.  At\nleast we won't\nspend the next 3 years arguing on the mailing list about how to compare\nprograms that are all great in many different dimensions, and failing in\nthe others.\n\nIf it's going to go on the main page, give someone the responsibility to\ncome up with \"what's best for the users of Bitcoin.org\", however they\ndecide to interpret it, and save our breath arguing over more important\nthings.\n\n-Alan\n\n\n\nOn Mon, Jul 9, 2012 at 2:57 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n> On Mon, Jul 9, 2012 at 2:54 PM, Jim <jim618 at fastmail.co.uk> wrote:\n> > RE: The position randomisation - I have to admit I was secretly pleased\n> > with the original layout, as MultiBit just happened to have the \"eye\n> > candy\" position of \"top and centre\".  It is only fair to have them\n> > switch around.\n>\n> This ordering wasn't accidental.\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/8719af66/attachment.html>"
            },
            {
                "author": "Gary Rowe",
                "date": "2012-07-09T20:13:04",
                "message_text_only": "Although I can only speak for my involvement with MultiBit, the idea of a\nrandomised client page seems wrong to me, for the reasons given by Alan\nearlier.\n\nEqually, in order to further the idea that Bitcoin is more than the\nreference client, it is appropriate that other clients are acknowledged and\npromoted. Bitcoin.org has by far the most traffic and by directing people\nto other clients that may be more suitable to their needs the user\nexperience is improved considerably. After all, not everyone wants a 2.5Gb+\ndownload before starting out on their Bitcoin adventure.\n\nIf the reference client was the best of all possible worlds then there\nwould be no need for the alternative clients.\n\nOn 9 July 2012 20:14, Alan Reiner <etotheipi at gmail.com> wrote:\n\n> I was originaly for the idea of randomization.  Because it is the most\n> \"fair\", but \"fair\" is a relative term.  It's fair for client developers who\n> argue over whose client should be first, and whose is better for various\n> purposes.   But it's not fair for users, to have an inconsistent page, that\n> sometimes recommends less-developed solutions, or doesn't show what's best\n> *for the users in the community*.\n>\n> I think the premise of having a page that is \"fair for developers\" is its\n> downfall.  Once we agree things have to be fair, we must agree on what fair\n> means, and then we must accept 30 new recently-started projects that barely\n> squeak by the requirements for being on the page, despite having\n> substantial issues/bugs.  The premise of being fair is the downfall here.\n>\n> This *has* to be a subjective list.   Someone who is trusted to\n> understand what is good for users, and who also has familiarity with the\n> programs, should be the one to decide.  People can try to provide input,\n> and make them aware of stuff they didn't know.  But it should be *that\n> person's* decision, and if it's not \"fair\" in your world, too bad.  At\n> least we won't spend the next 3 years arguing on the mailing list about how\n> to compare programs that are all great in many different dimensions, and\n> failing in the others.\n>\n> If it's going to go on the main page, give someone the responsibility to\n> come up with \"what's best for the users of Bitcoin.org\", however they\n> decide to interpret it, and save our breath arguing over more important\n> things.\n>\n> -Alan\n>\n>\n>\n> On Mon, Jul 9, 2012 at 2:57 PM, Gregory Maxwell <gmaxwell at gmail.com>wrote:\n>\n>> On Mon, Jul 9, 2012 at 2:54 PM, Jim <jim618 at fastmail.co.uk> wrote:\n>> > RE: The position randomisation - I have to admit I was secretly pleased\n>> > with the original layout, as MultiBit just happened to have the \"eye\n>> > candy\" position of \"top and centre\".  It is only fair to have them\n>> > switch around.\n>>\n>> This ordering wasn't accidental.\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120709/56da5102/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Random order for clients page",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr",
                "Jim",
                "Gary Rowe",
                "Wladimir",
                "thomasV1 at gmx.de",
                "Mike Hearn",
                "Amir Taaki",
                "Harald Schilly",
                "Nils Schneider",
                "Alan Reiner",
                "Gregory Maxwell",
                "Daniel F",
                "Stefan Thomas"
            ],
            "messages_count": 27,
            "total_messages_chars_count": 70068
        }
    },
    {
        "title": "[Bitcoin-development] Wiki client list (was: Random order for clients page)",
        "thread_messages": [
            {
                "author": "Luke-Jr",
                "date": "2012-07-09T23:07:17",
                "message_text_only": "https://en.bitcoin.it/wiki/Clients"
            }
        ],
        "thread_summary": {
            "title": "Wiki client list (was: Random order for clients page)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 34
        }
    },
    {
        "title": "[Bitcoin-development] Gitian builds on all platforms using Vagrant/VirtualBox (GH #1597)",
        "thread_messages": [
            {
                "author": "Mark Friedenbach",
                "date": "2012-07-13T20:41:40",
                "message_text_only": "I had some difficulty setting up and maintaining my own gitian build\nsystem. So in the time-honored tradition of scratching my own itch, I\nrecorded the necessary steps into a makefile so that doing a gitian build\nis a simple as \"cd contrib/vagrant && make\", on any platform provided that\nyou have the necessary dependencies installed.\n\nI hope that others find this useful. I have submitted these scripts as\npull-request #1597 on github.\n\nCheers,\nMark Friedenbach\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120713/4a269bde/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2012-07-14T07:40:13",
                "message_text_only": "Mark,\n\nThat's a great development. Virtualbox has less requirements with regard to\nspecific CPU flags, KVM is really slow without hw virtualization whereas\nVirtualbox is usable on older CPUs.\n\nIt also means I can do gitian builds together with other running virtualbox\ninstances. KVM and Virtualbox don't play along well.\n\nWladimir\n\nOn Fri, Jul 13, 2012 at 10:41 PM, Mark Friedenbach <mark at monetize.io> wrote:\n\n> I had some difficulty setting up and maintaining my own gitian build\n> system. So in the time-honored tradition of scratching my own itch, I\n> recorded the necessary steps into a makefile so that doing a gitian build\n> is a simple as \"cd contrib/vagrant && make\", on any platform provided that\n> you have the necessary dependencies installed.\n>\n> I hope that others find this useful. I have submitted these scripts as\n> pull-request #1597 on github.\n>\n> Cheers,\n> Mark Friedenbach\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120714/224252de/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Gitian builds on all platforms using Vagrant/VirtualBox (GH #1597)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Wladimir",
                "Mark Friedenbach"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 2336
        }
    },
    {
        "title": "[Bitcoin-development] Accepting broken QRcodes",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-07-15T12:39:50",
                "message_text_only": "Hi bitcoin-development,\n\nblockchain.info generates non-BIP-compliant URIs in its QRcodes, as\ndoes its iPhone app. They are of the form bitcoin://address not\nbitcoin:address.\n\nI asked Ben to fix this (social networks don't parse QRcodes after\nall), but after explaining that social networks don't parse URLs\nwithout :// in them, he stopped responding to my emails. So I've gone\nahead and added support for reading these types of URLs to bitcoinj,\nin the interests of \"just works\" interoperability.\n\nThis mail is just a heads up in case anyone else wants to do the same\nthing. Hopefully at some point, Ben will stop generating such QRcodes\nand we can remove these hacks and get back to BIP compliance."
            },
            {
                "author": "Andreas Schildbach",
                "date": "2012-07-16T08:16:58",
                "message_text_only": "> I asked Ben to fix this (social networks don't parse QRcodes after\n> all), but after explaining that social networks don't parse URLs\n> without :// in them, he stopped responding to my emails. So I've gone\n> ahead and added support for reading these types of URLs to bitcoinj,\n> in the interests of \"just works\" interoperability.\n> \n> This mail is just a heads up in case anyone else wants to do the same\n> thing. Hopefully at some point, Ben will stop generating such QRcodes\n> and we can remove these hacks and get back to BIP compliance.\n\nThe problem with this \"accept everything even if broken\" approach is\nthat people will probably never fix the broken stuff. So we likely end\nup with a fragmented de-facto standard.\n\nThat does not mean I am totally against accepting broken URLs, but there\nshould be at least a promise that they will be fixed at the source."
            },
            {
                "author": "Gary Rowe",
                "date": "2012-07-16T08:52:34",
                "message_text_only": "Is it worth having a few more people email Ben to ask him politely to fall\ninto line with the BIP? No point encouraging broken windows by not speaking\nout.\n\nOn 16 July 2012 09:16, Andreas Schildbach <andreas at schildbach.de> wrote:\n\n> > I asked Ben to fix this (social networks don't parse QRcodes after\n> > all), but after explaining that social networks don't parse URLs\n> > without :// in them, he stopped responding to my emails. So I've gone\n> > ahead and added support for reading these types of URLs to bitcoinj,\n> > in the interests of \"just works\" interoperability.\n> >\n> > This mail is just a heads up in case anyone else wants to do the same\n> > thing. Hopefully at some point, Ben will stop generating such QRcodes\n> > and we can remove these hacks and get back to BIP compliance.\n>\n> The problem with this \"accept everything even if broken\" approach is\n> that people will probably never fix the broken stuff. So we likely end\n> up with a fragmented de-facto standard.\n>\n> That does not mean I am totally against accepting broken URLs, but there\n> should be at least a promise that they will be fixed at the source.\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/8f48a16b/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2012-07-16T09:02:46",
                "message_text_only": "But is he the only one using the broken URLs? It was my impression that\nthey were widespread already.\n\nWladimir\n\nOn Mon, Jul 16, 2012 at 10:52 AM, Gary Rowe <g.rowe at froot.co.uk> wrote:\n\n> Is it worth having a few more people email Ben to ask him politely to fall\n> into line with the BIP? No point encouraging broken windows by not speaking\n> out.\n>\n>\n> On 16 July 2012 09:16, Andreas Schildbach <andreas at schildbach.de> wrote:\n>\n>> > I asked Ben to fix this (social networks don't parse QRcodes after\n>> > all), but after explaining that social networks don't parse URLs\n>> > without :// in them, he stopped responding to my emails. So I've gone\n>> > ahead and added support for reading these types of URLs to bitcoinj,\n>> > in the interests of \"just works\" interoperability.\n>> >\n>> > This mail is just a heads up in case anyone else wants to do the same\n>> > thing. Hopefully at some point, Ben will stop generating such QRcodes\n>> > and we can remove these hacks and get back to BIP compliance.\n>>\n>> The problem with this \"accept everything even if broken\" approach is\n>> that people will probably never fix the broken stuff. So we likely end\n>> up with a fragmented de-facto standard.\n>>\n>> That does not mean I am totally against accepting broken URLs, but there\n>> should be at least a promise that they will be fixed at the source.\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/f35e14f8/attachment.html>"
            },
            {
                "author": "Gary Rowe",
                "date": "2012-07-16T09:32:32",
                "message_text_only": "I'm sure that there are many but my Google Search-Fu is not strong enough\nto build a query to identify how widespread they are.\n\nMaybe once we have sufficient evidence to support the suspicion we should\npost to the main developer forum asking for a cleanup. After all, a Bitcoin\nURI starting bitcoin://<address> doesn't actually make much sense because\nthere is no hierarchy in Bitcoin - it's flat with only an address being a\nmandatory element.\n\nI don't want to be all anal about this, but looking at RFC 3986 #10 (\nhttp://tools.ietf.org/html/rfc3986#page-10) it's pretty clear that\nintroducing a false hierarchy is breaking the specification since it\npresumes the existence of a relative URI.\n\nOn 16 July 2012 10:02, Wladimir <laanwj at gmail.com> wrote:\n\n> But is he the only one using the broken URLs? It was my impression that\n> they were widespread already.\n>\n> Wladimir\n>\n>\n> On Mon, Jul 16, 2012 at 10:52 AM, Gary Rowe <g.rowe at froot.co.uk> wrote:\n>\n>> Is it worth having a few more people email Ben to ask him politely to\n>> fall into line with the BIP? No point encouraging broken windows by not\n>> speaking out.\n>>\n>>\n>> On 16 July 2012 09:16, Andreas Schildbach <andreas at schildbach.de> wrote:\n>>\n>>> > I asked Ben to fix this (social networks don't parse QRcodes after\n>>> > all), but after explaining that social networks don't parse URLs\n>>> > without :// in them, he stopped responding to my emails. So I've gone\n>>> > ahead and added support for reading these types of URLs to bitcoinj,\n>>> > in the interests of \"just works\" interoperability.\n>>> >\n>>> > This mail is just a heads up in case anyone else wants to do the same\n>>> > thing. Hopefully at some point, Ben will stop generating such QRcodes\n>>> > and we can remove these hacks and get back to BIP compliance.\n>>>\n>>> The problem with this \"accept everything even if broken\" approach is\n>>> that people will probably never fix the broken stuff. So we likely end\n>>> up with a fragmented de-facto standard.\n>>>\n>>> That does not mean I am totally against accepting broken URLs, but there\n>>> should be at least a promise that they will be fixed at the source.\n>>>\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> Live Security Virtual Conference\n>>> Exclusive live event will cover all the ways today's security and\n>>> threat landscape has changed and how IT managers can respond. Discussions\n>>> will include endpoint security, mobile security and the latest in malware\n>>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/2096e804/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Accepting broken QRcodes",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gary Rowe",
                "Mike Hearn",
                "Wladimir",
                "Andreas Schildbach"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 9848
        }
    },
    {
        "title": "[Bitcoin-development] bitcoin.org - remove hackathon",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-15T17:52:56",
                "message_text_only": "Hi,\n\nCan I remove the hackathon from bitcoin.org and put up the conference instead?"
            },
            {
                "author": "Vladimir Marchenko",
                "date": "2012-07-15T19:15:42",
                "message_text_only": "Hi,\n\n Why bitcoin.org promotes some private enterprises and not others?\nMay, I for example, have 20% of over the fold space on bitcoin.org\nhomepage for Bitcoin Magazine prmotions? Pretty please? </sarcasm>\n\nKind Regard,\nVladimir Marchenko.\n\n\nOn 15 July 2012 18:52, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Hi,\n>\n> Can I remove the hackathon from bitcoin.org and put up the conference instead?\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-07-16T23:47:02",
                "message_text_only": "On Sun, Jul 15, 2012 at 1:52 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Can I remove the hackathon from bitcoin.org and put up the conference instead?\n\nACK on removing outdated material\n\nVladimir does raise a fair point, though.  Hackathon seems appropriate\nfor bitcoin.org as it is focused on dev-related activities.  (full\ndisclosure: speaking at bitcoin2012.com)  The conference might or\nmight not be.  The conference does seem community focused, so I don't\nobject to it being on bitcoin.org...  But if consensus prefers\notherwise, that's OK too.\n\nPS.  This seems like material for pull requests, which is preferred\nover mailing list email + git push.  When working on the satoshi\nclient, we all ACK each other's pull req for anything beyond the\ntrivial.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-07-17T00:09:48",
                "message_text_only": "On Monday, July 16, 2012 11:47:02 PM Jeff Garzik wrote:\n> Vladimir does raise a fair point, though.  Hackathon seems appropriate\n> for bitcoin.org as it is focused on dev-related activities.  (full\n> disclosure: speaking at bitcoin2012.com)  The conference might or\n> might not be.  The conference does seem community focused, so I don't\n> object to it being on bitcoin.org...  But if consensus prefers\n> otherwise, that's OK too.\n\nIMO, bitcoin.org is more community-focussed anyway.\nHow often do devs use the site, compared to GitHub etc?\n\nSomeone else made a pullreq for Bitcoin Magazine; I suggest(ed) that\nfor-profit organizations should be asked to pitch in some way or another.\nWho should organize that, I don't know. If Bitcoin Consultancy/Amir is behind \nthe conference, I suggest their/his development contributions should be \nsufficient in that respect.\n\n> PS.  This seems like material for pull requests, which is preferred\n> over mailing list email + git push.  When working on the satoshi\n> client, we all ACK each other's pull req for anything beyond the\n> trivial.\n\nI concur, this should be discussed in a pullreq."
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-17T09:17:57",
                "message_text_only": "OK, pull request seems good.\n\nFYI we lost money on last year's conference, and are hoping to break even this year. The only people to make profit will be nefario and anyone else we give a share in it (people who help realise it). Otherwise money made goes towards next year's conference and paying for things to make a better conference (like Gavin wanted to attend but couldn't afford a ticket). It is not a commercial event, and I've been pushing to keep the sponsorship and community parts highly separated. Like I really do not wish to sell a speaker slot, but if I have to (to pay the bills) then it will be obvious due to scheduling and disclaimers that speakers are sponsors.\n\n\n\n----- Original Message -----\nFrom: Luke-Jr <luke at dashjr.org>\nTo: bitcoin-development at lists.sourceforge.net\nCc: Jeff Garzik <jgarzik at exmulti.com>; Amir Taaki <zgenjix at yahoo.com>\nSent: Tuesday, July 17, 2012 2:09 AM\nSubject: Re: [Bitcoin-development] bitcoin.org - remove hackathon\n\nOn Monday, July 16, 2012 11:47:02 PM Jeff Garzik wrote:\n> Vladimir does raise a fair point, though.\u00a0 Hackathon seems appropriate\n> for bitcoin.org as it is focused on dev-related activities.\u00a0 (full\n> disclosure: speaking at bitcoin2012.com)\u00a0 The conference might or\n> might not be.\u00a0 The conference does seem community focused, so I don't\n> object to it being on bitcoin.org...\u00a0 But if consensus prefers\n> otherwise, that's OK too.\n\nIMO, bitcoin.org is more community-focussed anyway.\nHow often do devs use the site, compared to GitHub etc?\n\nSomeone else made a pullreq for Bitcoin Magazine; I suggest(ed) that\nfor-profit organizations should be asked to pitch in some way or another.\nWho should organize that, I don't know. If Bitcoin Consultancy/Amir is behind \nthe conference, I suggest their/his development contributions should be \nsufficient in that respect.\n\n> PS.\u00a0 This seems like material for pull requests, which is preferred\n> over mailing list email + git push.\u00a0 When working on the satoshi\n> client, we all ACK each other's pull req for anything beyond the\n> trivial.\n\nI concur, this should be discussed in a pullreq."
            },
            {
                "author": "Andreas Petersson",
                "date": "2012-07-17T09:25:17",
                "message_text_only": "Am 17.07.2012 11:17, schrieb Amir Taaki:\n> Like I really do not wish to sell a speaker slot, but if I have to (to pay the bills) then it will be obvious due to scheduling and disclaimers that speakers are sponsors.\n>\n>\nPersonally, i really don't mind sponsored speakers. If they have \nsomewhat relevant topics they keep the event from becoming a \"circlejerk\".\nfor example i would really like to hear about payments innovation \noutside bitcoin."
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-17T09:54:15",
                "message_text_only": "Yes, but then they should not be sponsors.\n\nThere's a very good reason why Wikipedia does not have advertisements. That is, the fear of advertisers influence on the neutral content. It is inevitably a corrupting influence. I want a good fun conference like the hackathon we just held.\n\n\n\n----- Original Message -----\nFrom: Andreas Petersson <andreas at petersson.at>\nTo: bitcoin-development at lists.sourceforge.net\nCc: \nSent: Tuesday, July 17, 2012 11:25 AM\nSubject: Re: [Bitcoin-development] bitcoin.org - remove hackathon\n\nAm 17.07.2012 11:17, schrieb Amir Taaki:\n> Like I really do not wish to sell a speaker slot, but if I have to (to pay the bills) then it will be obvious due to scheduling and disclaimers that speakers are sponsors.\n>\n>\nPersonally, i really don't mind sponsored speakers. If they have \nsomewhat relevant topics they keep the event from becoming a \"circlejerk\".\nfor example i would really like to hear about payments innovation \noutside bitcoin.\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            }
        ],
        "thread_summary": {
            "title": "bitcoin.org - remove hackathon",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Vladimir Marchenko",
                "Luke-Jr",
                "Andreas Petersson",
                "Amir Taaki"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 7137
        }
    },
    {
        "title": "[Bitcoin-development] Announcement: libcoin",
        "thread_messages": [
            {
                "author": "Martinx - \u30b8\u30a7\u30fc\u30e0\u30ba",
                "date": "2012-07-16T20:14:02",
                "message_text_only": "Hi Michael!\n\n I would like to ask you one thing:\n\n 1- Release a new version of Libcoin closest as possible with mainline\nBitcoin.\n\n I mean, do not add any extra code to it and also, do not change any stdout\n/ stderr messages.\n\n How much do you think that this will cost?\n\n For the extra code: I'll need to run the \"blockchain side\" as Linux user\ncalled \"blockchain\" and, each of my regular Linux user will have its own\nwallet.dat file (without the blockchain).\n\nThanks!\nThiago\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120716/772d6188/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Announcement: libcoin",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Martinx - \u30b8\u30a7\u30fc\u30e0\u30ba"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 659
        }
    },
    {
        "title": "[Bitcoin-development] Berlin Hackathon",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-17T09:19:38",
                "message_text_only": "Video from the event: http://www.youtube.com/watch?v=EQ2rb4pHH1g\n\n\nThe Hackathon is over, thanks for all the participants and sponsors! I \nhad loads of fun, and there were lots of great ideas flying around!\n\nThanks especially to:\n\n- IN-Berlin, for providing the space to hold the hackathon!\n- Sponsors: bitstamp.net, bitcoin2012.com and localbitcoins.com\n- Room77 (the restaurant at the end of capitalism), for hosting the afterparty and the burgers & pampero \n- Jury: yossarian + other people who attended the presentations \n\nThe results - winner first\n\n1. Offline transactions for BitcoinJ/Android bitcoin wallet: Andreas Schildbach and grazcoin\n- Ability for Android Wallet to do offline transactions\n2. Bitcoin Pong: genjix\n- Multiplayer pong, where you can win (or lose) bitcoins \n3. acceptbit.com: Jeremias Kangas and Stefan Thomas\n- an ultra-safe merchant tool, where you can accept payments without sharing your private keys \n4. BitcoinJ Multisig: yellowhat and PK\n- way to do multisig transactions for BitcoinJ/Android\n5. Double-spend monitor: genjix\n- tool to monitor double spends\n6. Bitcoin-autosave: Mike Hearn\n- BitcoinJ improvements (Mike did also loads of other stuff, and helped with winner project too)\n7. Live-calculator: genjix\n- Tool for btc accepting restaurants\n8. Bitcoin mages: genjix\n- Strategy game, where you play for bitcoins\n9. Embed block message: genjix\n- simple tool for embedding messages in block chain\n\nSource code\n\ngenjix: https://gitorious.org/bitcoin-hackathon\nacceptbit.com: https://github.com/kangasbros/electrumpos\nBitcoin Wallet: https://github.com/livne/Bitcoin-Wallet-for-Android (branch hackathon)\n\nOther\n\nParticipants, send jeremias your bitcoin addresses please \n\nThe next hackathon will be organized before bitcoin london conference, Wed 12th and Thur 13th september, london."
            }
        ],
        "thread_summary": {
            "title": "Berlin Hackathon",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1824
        }
    },
    {
        "title": "[Bitcoin-development] Electrum mailing list",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-17T10:42:07",
                "message_text_only": "https://lists.sourceforge.net/lists/listinfo/electrum-discuss"
            }
        ],
        "thread_summary": {
            "title": "Electrum mailing list",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 61
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin Conference: Call For Papers open",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-18T16:04:45",
                "message_text_only": "Hi,\n\nI'm opening the call for papers. It's about time to move forwards with this already. Sorry for the delays.\n\nEmail proposals to genjix at bitcoin2012.com\n\nSpeaker list: https://sites.google.com/a/bitcoin2012.com/homepage/speakers"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Conference: Call For Papers open",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 233
        }
    },
    {
        "title": "[Bitcoin-development] New P2P commands for diagnostics, SPV clients",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-07-21T11:45:28",
                "message_text_only": "One thing that occurred to me recently is that it'd be useful if\nfilters could contain exact matches as well as Bloom filters.\n\nSpecifically I'm thinking of things like my bond network proposal\nwhere some outputs may be marked as special using script fragments\nlike \"BOND\" <data or hash of data> 2DROP.\n\nThis would allow systems that are only interested in data and\ntransactions relevant to bonds to exact-filter the chain on that\nmarker, and then when a transaction is discovered, add the hash of\nthat transaction to a parallel Bloom filter, ensuring you can see any\ntransactions that connect to it.\n\nThe spec as provided by Jeff doesn't specify how filters are matched\nagainst transactions. I propose the following algorithm:\n\nFor each TX:\n- Check if the hash of the tx itself matches the filter\n- For each input:\n  - For each script data element check if it is found in the filter\n  - Check if the COutPoint.hash value is in the filter (let's you\nselect txns that connect to arbitrary txns of interest)\n- For each output\n  - For each script data element check if it is found in the filter"
            },
            {
                "author": "Andreas Petersson",
                "date": "2012-07-23T07:54:48",
                "message_text_only": "Some concerns regarding Bloom Filters. I talked with Stefan Thomas on \nthe Hackathon Berlin about this.\nI tried to follow the discussion closely but i have not taken a look at \nthe code yet (is there already an implementation?) so please correct me \nif i got something wrong.\n\nThe way the Bloom filters are planned now this requires a complicated \nsetup. basically the client will ask the server to replay the whole \nblockchain, but filtered.\nThis is not optimal for the following reasons:\nThis will require the server to do a full scan of his data and only \nfilter out non-matching entries.\n\nReally lightweight clients (like Bitcoincard), clients with shared \nprivate keys (electrum-style), or brainwallets - will ask the following \nquestion quite often to \"supernodes\": Given my public keys/addresses, \nwhat is the list of unspent outputs. i think it would make sense to \ninclude such a command, instead or in addition to the filterload/filterinit.\n\nAnd perhaps more severe: as far as i understand classic bloom filters, \nthe server has no method of indexing his data for the expected requests. \nThere is simply no data structure (or maybe it has to be invented) which \nallows the use of an index for queries by bloom filters of *varying \nlength* and a generic hashing method.\n\nim not sure what a really efficient data structure for these kinds of \nquery is. but i think it should be possible to find a good compromise \nbetween query flexibility, server load, client privacy.\n\none possible scheme, looks like this:\n\nthe client takes his list of addesses he is interested in. he hashes all \nof them to a fixed-length bit array (bloom filter) of length 64KiB (for \nexample), and combines them with | to add more 1's with each address.\nthe server maintains a binary tree data structure of unspent outputs \narranged by the Bloom filter bits.\nto build the tree, the server would need to calculate the 64KiB bits for \neach address and arrange them in a binary tree. that way he can easily \ntraverse the tree for a given bloom query.\nif a client whishes to query more broadly he can calculate the bloom \nfilter to 64KiB and after that fill up the last 50% of the Bits with 1. \nor 95%. the trailing 1 bits even don't need to be transmitted to the \nserver when a client is querying. of course, if the client is more \nprivacy-concerned he could also fill up random bits with 1, which would \nnot change much actually.\n\nthe value of 64KiB is just out of thin air.\naccording to my experimentation using BloomFilter from Guava - \ncurrently, also 8KiB would be sufficient to hava a 3% false positive \nrate for the 40000 active addresses we have right now.\n\nsomeone more familiar with hashing should please give his opinion if \ncutting a bloom filter in half has any bad consequences.\n\nAndreas"
            },
            {
                "author": "Matt Corallo",
                "date": "2012-07-23T16:40:36",
                "message_text_only": "On Mon, 2012-07-23 at 09:54 +0200, Andreas Petersson wrote:\n> Some concerns regarding Bloom Filters. I talked with Stefan Thomas on \n> the Hackathon Berlin about this.\n> I tried to follow the discussion closely but i have not taken a look at \n> the code yet (is there already an implementation?) so please correct me \n> if i got something wrong.\nAFAIK there was no implementation.  I pushed one for bitcoinj+bitcoind\ntoday that compiles, but I haven't tested it much further (though its\nreally quite a simple implementation):\nhttps://github.com/TheBlueMatt/bitcoin/commits/bloom\nhttp://code.google.com/r/bluemattme-bitcoinj/source/list?name=bloomfilter\n\n> The way the Bloom filters are planned now this requires a complicated \n> setup. basically the client will ask the server to replay the whole \n> blockchain, but filtered.\n> This is not optimal for the following reasons:\n> This will require the server to do a full scan of his data and only \n> filter out non-matching entries.\nMy implementation has yet to implement block filtering, for now its only\ntx inv filtering.  However, its really not that complicated and doing a\nscan of any individual transaction is very fast.  So during the download\nphase, it really isn't much of any extra load on block chain providers\n(aside from having to load inputs in the current implementation, but\nthat could be optimized some).\n\n> Really lightweight clients (like Bitcoincard), clients with shared \n> private keys (electrum-style), or brainwallets - will ask the following \n> question quite often to \"supernodes\": Given my public keys/addresses, \n> what is the list of unspent outputs. i think it would make sense to \n> include such a command, instead or in addition to the filterload/filterinit.\n\n> And perhaps more severe: as far as i understand classic bloom filters, \n> the server has no method of indexing his data for the expected requests. \n> There is simply no data structure (or maybe it has to be invented) which \n> allows the use of an index for queries by bloom filters of *varying \n> length* and a generic hashing method.\n\n> im not sure what a really efficient data structure for these kinds of \n> query is. but i think it should be possible to find a good compromise \n> between query flexibility, server load, client privacy.\n\n> one possible scheme, looks like this:\n\n> the client takes his list of addesses he is interested in. he hashes all \n> of them to a fixed-length bit array (bloom filter) of length 64KiB (for \n> example), and combines them with | to add more 1's with each address.\n> the server maintains a binary tree data structure of unspent outputs \n> arranged by the Bloom filter bits.\n> to build the tree, the server would need to calculate the 64KiB bits for \n> each address and arrange them in a binary tree. that way he can easily \n> traverse the tree for a given bloom query.\n> if a client whishes to query more broadly he can calculate the bloom \n> filter to 64KiB and after that fill up the last 50% of the Bits with 1. \n> or 95%. the trailing 1 bits even don't need to be transmitted to the \n> server when a client is querying. of course, if the client is more \n> privacy-concerned he could also fill up random bits with 1, which would \n> not change much actually.\n> \n> the value of 64KiB is just out of thin air.\n> according to my experimentation using BloomFilter from Guava - \n> currently, also 8KiB would be sufficient to hava a 3% false positive \n> rate for the 40000 active addresses we have right now.\n> \n> someone more familiar with hashing should please give his opinion if \n> cutting a bloom filter in half has any bad consequences.\n> \n> Andreas\nThough I like the idea of having a \"give me all unspent outputs for my\npubkeys\" command, I see quite a future for clients somewhere between \"I\nstore nothing but pubkeys and don't know about the chain\" and \"I store a\nfull chain\" and the bloom filters as described are pretty useful for\nmany clients in that in between.  Also, for clients that are \"Really\nlightweight clients\" (given that they don't know about the chain) should\nprobably just stick with an electrum-style server-client system with\nspecialized servers (IMHO) instead of relying on P2P nodes to provide\nthem with a list of unspent outputs/etc.\n\nIn response to Mike's what-the-filter-should-match:\nThe way it is now, it just checks each input+output to see if the\nhash160 of the dest addr, hash160 of the pubkey or hash160 of the p2sh\nsh matches the filter as-is.\n>From the list provided, I think adding a check to allow adding a\nspecific outpoint to a filter would be nice.\nHowever, in terms of data elements in txes, Im not so sure.\nIts by no means a bad idea, and it wouldnt be too much overhead, but\nmaking filters match a very broad set of criteria seems like a bit much\nto me, but maybe others disagree?\n\nMatt"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-24T08:16:12",
                "message_text_only": "> Really lightweight clients (like Bitcoincard), clients with shared\n> private keys (electrum-style), or brainwallets - will ask the following\n> question quite often to \"supernodes\": Given my public keys/addresses,\n> what is the list of unspent outputs. i think it would make sense to\n> include such a command, instead or in addition to the filterload/filterinit.\n\nUltra-lightweight clients like Electrum or smart cards have a\nfundamentally different security model to SPV clients, which mean they\ncannot connect directly to the P2P network no matter what commands or\ndb indexes are added.\n\nThis seems to be a common point of confusion. Andreas brought up\nsomething similar in a chat yesterday.\n\nTo connect to the P2P network, you MUST understand how to walk the\nblock chain and handle re-orgs. This is not optional. The reason is\nthat you are connected to random arbitrary nodes who can and maybe\nwill lie to you. The block chain is a self-proving data structure, a\nnode cannot lie about it or make you believe garbage unless they can\noutrun the rest of the miners combined.\n\nIf all you're doing is asking a remote node to tell you about what\ncoins are available, that node can simply say \"guess what, you're a\nmillionaire!\" and you have no way to discover it's wrong. This can be\ndangerous in the case where you think you've received a payment but\nactually did not, eg, because your internet connection got tampered\nwith in some way. SPV clients have the same issue for zero-confirmed\ntransactions, but once you see confirmations at high speeds you can be\npretty sure the network accepted the transaction. For clients that\ndon't understand the block chain confirmations don't have any meaning.\n\nThat's why Electrum requires a trusted server and connects to it via SSL.\n\n> And perhaps more severe: as far as i understand classic bloom filters,\n> the server has no method of indexing his data for the expected requests.\n\nIt doesn't matter. CPU wise Bloom filtering of blocks is very cheap\nand can be trivially parallelised in the unlikely event it's\nnecessary. The expensive part of serving a Bloom filtered chain to an\nSPV client is simply moving the disk head into the right position and\nwaiting for the platter to rotate. Blocks are stored sequentially and\nmodern hard disks transfer data once positioned at gigabit speeds so\nrequesting 1 or 2000 blocks is not significantly different."
            }
        ],
        "thread_summary": {
            "title": "New P2P commands for diagnostics, SPV clients",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matt Corallo",
                "Mike Hearn",
                "Andreas Petersson"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 11069
        }
    },
    {
        "title": "[Bitcoin-development] Merge branch on github",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-21T12:44:07",
                "message_text_only": "Hey,\n\nhttps://github.com/bitcoin/bitcoin.org/pull/46\n\nI tried to keep it professional, and non spammy."
            }
        ],
        "thread_summary": {
            "title": "Merge branch on github",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 102
        }
    },
    {
        "title": "[Bitcoin-development] LevelDB benchmarking",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-07-21T18:49:54",
                "message_text_only": "Stefan went and finished off this work by bringing it up on Windows,\nso now there's a pull req for it:\n\n  https://github.com/bitcoin/bitcoin/pull/1619"
            }
        ],
        "thread_summary": {
            "title": "LevelDB benchmarking",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 150
        }
    },
    {
        "title": "[Bitcoin-development] [ANN] pynode: Simple bitcoin P2P node",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-07-22T19:16:59",
                "message_text_only": "Github URL: https://github.com/jgarzik/pynode\n\npynode is a simple bitcoin P2P client, based on ArtForz' half-a-node,\nwhich maintains a blockchain database and TX memory pool.\n\nIt is intended to be a useful base for another projects, such as\nnetwork monitoring nodes.\n\nAt present, it is mainly for developers and not end users.  Here is\nwhat pynode does NOT do:\n\n*    RPC\n*    key management (wallet)\n*    script verification\n*    chain re-org\n\nHere are the limited things that pynode can do at present:\n\n*    Outgoing TCP connection to a single remote P2P node\n*    Initial blockchain download\n*    Maintain a transaction memory pool, with TX's removed as they are\nconfirmed in blocks\n*    Maintain an indexed blockchain database\n\n\nOver time it will become more capable, but this is an alpha quality\nrelease for developers at present.\n\nContributions welcome!  It is intended to become a full, wallet-less\nnode over time (though if somebody wanted to contribute a wallet\nmodule, that is OK too)\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "pynode: Simple bitcoin P2P node",
            "categories": [
                "Bitcoin-development",
                "ANN"
            ],
            "authors": [
                "Jeff Garzik"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1047
        }
    },
    {
        "title": "[Bitcoin-development] Reconsidering block version number use",
        "thread_messages": [
            {
                "author": "Luke-Jr",
                "date": "2012-07-22T20:52:25",
                "message_text_only": "It just occurred to me that the block version number could easily be used as a \ncheap \"extra nonce\" right now. Considering that we will probably see lots of \nASIC miners running at 1 TH/s per rig before the end of 2012, it might be \ndesirable to save the block version for this purpose.\n\nThe current block height in coinbase addition currently proposes to use block \nversion 2. However, the protocol change is in fact to the coinbase \ntransaction, not the block itself (which really doesn't have any extensibility \nwithout a hardfork anyway). Perhaps we should consider bumping the coinbase \ntransaction version number to 2 for this instead?\n\nAlso, Jeff noticed that block 190192 has version==2 without a valid block \nheight in the coinbase. I suspect this may be the result of combining the \ncurrent blockheight-in-coinbase pullreq with P2Pool. This means that if we go \nforward with the version==2 marker, we will forever need to make an exception \nfor that block. Moving the version==2 to the coinbase transaction version also \nmeans whoever makes that transaction (thus deciding whether to put the height \nin it or not) also sets the version number - instead of the block version \ncoming from bitcoind and the coinbase transaction coming from P2Pool or other \nsoftware.\n\nThoughts?\n\nLuke"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-07-23T00:41:15",
                "message_text_only": "> The current block height in coinbase addition currently proposes to use block\n> version 2. However, the protocol change is in fact to the coinbase\n> transaction, not the block itself (which really doesn't have any extensibility\n> without a hardfork anyway). Perhaps we should consider bumping the coinbase\n> transaction version number to 2 for this instead?\n\nI'd thought about bumping the coinbase transaction version, but the\nproblem is if we want a smooth rollout then, during the rollout, every\ntime a new block comes in the percentage of the last 1,000 blocks that\nsupport the new version has to be computed.\n\nIf that means looking in the coinbase transaction, then either the\nlast 1,000 coinbases have to be stored in memory or they have to be\nfetched from disk. Which isn't a huge deal, unless we start\naggressively pruning spent transactions, and that coinbase 900 blocks\nback got spent and pruned.\n\nOn Sun, Jul 22, 2012 at 4:52 PM, Luke-Jr <luke at dashjr.org> wrote:\n> It just occurred to me that the block version number could easily be used as a\n> cheap \"extra nonce\" right now. Considering that we will probably see lots of\n> ASIC miners running at 1 TH/s per rig before the end of 2012, it might be\n> desirable to save the block version for this purpose.\n\nHmm...  I think it'd be ok to give 3 of the 4 block version bytes as a\nsimple extranonce, so version=0x00000001 is what we have now, version\n2 blocks are any with 0x02 in the low byte, 0x03 is version 3, etc.  I\ndon't think we'll go through 253 block versions before we're all dead.\n\nThat'd be 7 bytes of nonce in the block header, which is\n  72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes\n\nSo: the changes for version 2 blocks would be \"has height in the\ncoinbase, and has a 1-byte version number with a 3-byte extranonce.\"\n\n> Also, Jeff noticed that block 190192 has version==2 without a valid block\n> height in the coinbase. I suspect this may be the result of combining the\n> current blockheight-in-coinbase pullreq with P2Pool. This means that if we go\n> forward with the version==2 marker, we will forever need to make an exception\n> for that block.\n\nNo, the rules are \"enforce the rules when the chain has a\nsuper-majority.\"  Since block 190192 is in a part of the chain with\nzero other version==2 blocks, the height-in-the-coinbase rule will not\nbe enforced.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-07-23T00:57:48",
                "message_text_only": "On Monday, July 23, 2012 12:41:15 AM Gavin Andresen wrote:\n> > The current block height in coinbase addition currently proposes to use\n> > block version 2. However, the protocol change is in fact to the coinbase\n> > transaction, not the block itself (which really doesn't have any\n> > extensibility without a hardfork anyway). Perhaps we should consider\n> > bumping the coinbase transaction version number to 2 for this instead?\n> \n> I'd thought about bumping the coinbase transaction version, but the\n> problem is if we want a smooth rollout then, during the rollout, every\n> time a new block comes in the percentage of the last 1,000 blocks that\n> support the new version has to be computed.\n> \n> If that means looking in the coinbase transaction, then either the\n> last 1,000 coinbases have to be stored in memory or they have to be\n> fetched from disk. Which isn't a huge deal, unless we start\n> aggressively pruning spent transactions, and that coinbase 900 blocks\n> back got spent and pruned.\n\nAny reason CBlockIndex couldn't cache the coinbase version?\n\n> On Sun, Jul 22, 2012 at 4:52 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > It just occurred to me that the block version number could easily be used\n> > as a cheap \"extra nonce\" right now. Considering that we will probably\n> > see lots of ASIC miners running at 1 TH/s per rig before the end of\n> > 2012, it might be desirable to save the block version for this purpose.\n> \n> Hmm...  I think it'd be ok to give 3 of the 4 block version bytes as a\n> simple extranonce, so version=0x00000001 is what we have now, version\n> 2 blocks are any with 0x02 in the low byte, 0x03 is version 3, etc.  I\n> don't think we'll go through 253 block versions before we're all dead.\n> \n> That'd be 7 bytes of nonce in the block header, which is\n>   72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes\n> \n> So: the changes for version 2 blocks would be \"has height in the\n> coinbase, and has a 1-byte version number with a 3-byte extranonce.\"\n\nThat sounds workable.\n\n> > Also, Jeff noticed that block 190192 has version==2 without a valid block\n> > height in the coinbase. I suspect this may be the result of combining the\n> > current blockheight-in-coinbase pullreq with P2Pool. This means that if\n> > we go forward with the version==2 marker, we will forever need to make\n> > an exception for that block.\n> \n> No, the rules are \"enforce the rules when the chain has a\n> super-majority.\"  Since block 190192 is in a part of the chain with\n> zero other version==2 blocks, the height-in-the-coinbase rule will not\n> be enforced.\n\nI was thinking more of the end-game of changing the rule to simply \"if \nversion==2, require the height in coinbase\" after the point of no return is \nmet without any infringement."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-24T07:58:24",
                "message_text_only": "> That'd be 7 bytes of nonce in the block header, which is\n>   72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes\n>\n> So: the changes for version 2 blocks would be \"has height in the\n> coinbase, and has a 1-byte version number with a 3-byte extranonce.\"\n\nI don't understand why more nonce bits are necessary. Is it really\nimpossible for a multi-core CPU to keep up with the merkle root\nre-calculation and keep an ASIC miner fed, or is this working around a\nperformance bottleneck somewhere else?"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-07-24T08:01:11",
                "message_text_only": "I think it would be great to have more nonce space with less merkle\ncalculation; keeping track of all possible versions of a block already\ntakes real RAM, real computation. Being able to change one bit in the\nheader and send out a new block for checking would ease our pool server\nwork by a real amount, somewhat on the work generation side, but also on\nthe checking old work side; we'll have a lot fewer unique transaction /\ncoinbase sets to hold on to for checking when we get back a solution.\n\nPeter\n\n\nOn Tue, Jul 24, 2012 at 4:58 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> > That'd be 7 bytes of nonce in the block header, which is\n> >   72,057,594,037,927,936  ~ 72 petahashes = 72,000 terahashes\n> >\n> > So: the changes for version 2 blocks would be \"has height in the\n> > coinbase, and has a 1-byte version number with a 3-byte extranonce.\"\n>\n> I don't understand why more nonce bits are necessary. Is it really\n> impossible for a multi-core CPU to keep up with the merkle root\n> re-calculation and keep an ASIC miner fed, or is this working around a\n> performance bottleneck somewhere else?\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120724/e4232c5c/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-24T08:22:25",
                "message_text_only": "My point is that stuffing nonces into whatever spaces we can find to\neke out a bit more scalability in pools seems like a very short term\nfix with potentially very long term consequences.\n\nAlthough it may sound harsh, if your pool is struggling to keep up\nwith calculating merkle roots (which is cheap!) then it's time to\neither upgrade your pool or for some of those users to migrate to\np2pool and handle creation of work themselves. Trying to squash more\nnonce bits out of fields that were never meant for that seems like a\nbad precedent with no real motivation beyond making running\ncentralized pools a bit cheaper.\n\nWhat I'm interested in is, can a powerful server-class machine really\nnot keep up with work generation for things like the BitForce SC\ndevices? How many devices would you need to exhaust the ability to\ngenerate work for them? You'll need powerful machines just to run a\nnode at all sooner or later."
            }
        ],
        "thread_summary": {
            "title": "Reconsidering block version number use",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Mike Hearn",
                "Peter Vessenes",
                "Gavin Andresen"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 9928
        }
    },
    {
        "title": "[Bitcoin-development] Scalability issues",
        "thread_messages": [
            {
                "author": "grarpamp",
                "date": "2012-07-22T22:37:09",
                "message_text_only": "Given a testbed: Pentium 4 1.8GHz single core, 2GB ram, FreeBSD 8,\ndisk is geli aes-128 + zfs sha-256, bitcoin 0.6.3, Tor proxy,\nAn estimate is made that by the end of the year bitcoin will\ncompletely overrun the capabilities of this reasonable class of\nmachines.\nIt already takes a month to build a new blockchain, let alone keep up\nwith new incoming blocks.\nYes, it also has workstation duties, yet even if those were removed,\nit would probably choke by mid 2013.\n\nIt would appear bitcoin has some *serious* scalability hurdles coming\ndown the road.\nMost certainly if the user expects to independantly build, manage, and\ntrust their own blockchain."
            },
            {
                "author": "Raphael NICOLLE",
                "date": "2012-07-23T07:23:45",
                "message_text_only": "Hello,\n\nEven though I'm not a dev, I can't agree more, and would like to know if \nthey are expected steps being taken, some fixes coming, or whatever?\n\nThank you all for your hard work.\nRaphael\n\nOn 07/23/2012 12:37 AM, grarpamp wrote:\n> Given a testbed: Pentium 4 1.8GHz single core, 2GB ram, FreeBSD 8,\n> disk is geli aes-128 + zfs sha-256, bitcoin 0.6.3, Tor proxy,\n> An estimate is made that by the end of the year bitcoin will\n> completely overrun the capabilities of this reasonable class of\n> machines.\n> It already takes a month to build a new blockchain, let alone keep up\n> with new incoming blocks.\n> Yes, it also has workstation duties, yet even if those were removed,\n> it would probably choke by mid 2013.\n>\n> It would appear bitcoin has some *serious* scalability hurdles coming\n> down the road.\n> Most certainly if the user expects to independantly build, manage, and\n> trust their own blockchain.\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-23T07:35:08",
                "message_text_only": "On Sun, Jul 22, 2012 at 6:37 PM, grarpamp <grarpamp at gmail.com> wrote:\n> It already takes a month to build a new blockchain, let alone keep up\n> with new incoming blocks.\n\nPlease fix your software stack. Something is wrong with your system\nand I doubt it has much to do with bitcoin. A full sync here takes\nsomething like an hour.\n\nThere are certainly lots of scalability things going on, but there is\nno cause for concern for regular hardware being unable to _keep up_\nwithout a hardforking change to the protocol first."
            },
            {
                "author": "Michael Gr\u00f8nager",
                "date": "2012-07-23T09:00:49",
                "message_text_only": "I would guess that you are running the blockchain download through the tor-proxy - that would give you the times you mention. Further, encrypting your disk (aes stuff) will not help you much either, and encrypting a the storage of a public blockchain seems to me a bit odd ?\n\nI get a full blockchain from scratch in 45 minutes on my laptop, but, I still agree with Gregory that scalability improvements are needed, but the problem is far from critical in the sense outlined here.\n\n/M \n\n\nOn 23/07/2012, at 09:35, Gregory Maxwell wrote:\n\n> On Sun, Jul 22, 2012 at 6:37 PM, grarpamp <grarpamp at gmail.com> wrote:\n>> It already takes a month to build a new blockchain, let alone keep up\n>> with new incoming blocks.\n> \n> Please fix your software stack. Something is wrong with your system\n> and I doubt it has much to do with bitcoin. A full sync here takes\n> something like an hour.\n> \n> There are certainly lots of scalability things going on, but there is\n> no cause for concern for regular hardware being unable to _keep up_\n> without a hardforking change to the protocol first.\n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "grarpamp",
                "date": "2012-07-23T15:11:24",
                "message_text_only": "> Please fix your software stack. Something is wrong\n> with your system\n\nNothing wrong, it's all default install. I documented the platform\nfor anyone who wants to confirm it.\n\n> A full sync here takes something like an hour.\n\nAnd what, similarly, is your platform?\nIt takes 5 seconds... on my Cray.\n\n> I would guess that you are running the blockchain download\n> through the tor-proxy\n\nUse of Tor was stated. Tor is fast enough. I can copy the entire\n3GiB of the .bitcoin dir in 7 days... off a slow hidden service.\nAnd 0.5 days via exit.\n\n> encrypting your disk (aes stuff) will not help you much either\n\nEncryption is a perfectly reasonable thing to expect users of\nbitcoin to be interested in doing. In fact, those not encrypting\ntheir disks should probably rethink that plan.\n\n> encrypting a the storage of a public blockchain seems to me a bit odd ?\n\nWell, without detachdb, it's somehow tied to the wallet, whether\nwhile processing or offline. And the wallet and debug.log are\nnot relocatable from the data. And encrypting everything is perfectly\nreasonable anyways. As is storing your valuable data on filesystems\nthat verify the integrity of their data on disk, such as ZFS/BTRFS.\n\nThese days, crypto, Tor, and ZFS are common and non-arguments.\n\n> I get a full blockchain from scratch in 45 minutes on my laptop\n\nAgain, timings with no CPU/OS/disk specs are useless infos."
            },
            {
                "author": "steve",
                "date": "2012-07-23T15:54:33",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nHi Michael,\n\nOn 23/07/2012 10:00, Michael Gr\u00f8nager wrote:\n> I get a full blockchain from scratch in 45 minutes on my laptop,\n> /M\n> \nHang on a sec, in 45 minutes you can download the entire chain from\nthe genesis block?\n\nI have been doing extensive testing in this area and would love to\nknow what is special about your setup (I have never had the entire\nchain in under 12 hours, infact it is normally closerto 24.) I have an\nextensive setup of test machines, everything from e4300 to phenom2x6\nto i5's.\n\nas an example on an amd e-450 with 4gb ram, and approx 3gb/s internet\nconnection it took 2 hours to sync the last 5 days.\n\nMaybe i am missing something important...\n\nAny additional information that you could provide to help me with\ntesting would be really appreciated.\n\ncheers,\n\nsteve\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/\n\niQEcBAEBAgAGBQJQDXO4AAoJEFvEB9dQFvtQxdcH/ieqQkyDCg8mKeOa6CqsWaS6\nfhoeny3Ke2b/CsvhYmsThCvntN9volIqR2CTn5tkHiVwG9OmlxyHZcNpN0ZTHhK5\nlsfLap/Y0QpiysXpV4Bu7Z4Hwp9jnhOP74TshT305r2pX6EGXPQ0CrlHqlIry/X/\nvNcunUclliou+KjL7EHcY50GH5wDpqJAjlNyF97Lj9YiPrAC9vahGwWdxkbCYtG+\nKUuWGBKMMdHuMAgcQh7nI9q0WT3k/gzRQtuC2kf+v0wvQhaGlTVkku4uanhpuw4p\n99blRF3/SfWimGuQgsm6wT3Y7dk+z8MFHLb6XGPxmgV9+gF+TWNczfU3GRzfcXw=\n=CQkI\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Michael Gr\u00f8nager",
                "date": "2012-07-24T08:25:09",
                "message_text_only": "Hi Steve,\n\n45-90 minutes - note that its numbers from March/April, so a bit longer today, but far, far away from the 12 hours. \n\nI am using libcoin and the bitcoind build based on this. Libcoin is based on the Satoshi client, but refactured to use an async concurrency model. I also did a minor tweeks to the db parameters. It has earlier been tested up against Satoshi bitcoin where on some OS'es it performs similarly (at least on some linuxes) and on some faster (e.g. mac). \n\nWhat is your CPU load during a block download ? (both initially/up to the point where verification sets in and after). The initial download is typically disk I/O bound, the verification stage CPU bound, though I lean to believe that even there it is disk I/O bound (at least on my system ~50% CPU load). What should be better in libcoin is the concurrency model. The Satoshi client uses a pure reentrant mutexes model, that is not generally believed to motivate the best coding practice nor performance, you might end up without the concurrency you initially strived for *). As mentioned earlier libcoin uses a pure async concurrency model (and so does libbitcoin btw). \n\nI would like to stress again that these numbers will depend largely on the system running the test - I would call my laptop a bit over the average today (MB Pro, 2.66Ghz i7 dual core, 8GBRAM, 512GB SSD). But again 12 hours - I only reach such numbers on some of my VPS'es (linode 1024) that are known for notoriously slow disk I/O. (here I have a few % CPU load during the verification indicating indeed that the disk i/o is the culprit).\n\nCheers,\n\nMichael\n\n\n*) I like this Dave Butenhof quote: \"The biggest of all the big problems with recursive mutexes is that they encourage you to completely lose track of your locking scheme and scope. This is deadly. Evil. It's the \"thread eater\". You hold locks for the absolutely shortest possible time. Period. Always. If you're calling something with a lock held simply because you don't know it's held, or because you don't know whether the callee needs the mutex, then you're holding it too long. You're aiming a shotgun at your application and pulling the trigger. You presumably started using threads to get concurrency; but you've just PREVENTED concurrency.\"\n\n\n\n\nOn 23/07/2012, at 17:54, steve wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n> \n> Hi Michael,\n> \n> On 23/07/2012 10:00, Michael Gr\u00f8nager wrote:\n>> I get a full blockchain from scratch in 45 minutes on my laptop,\n>> /M\n>> \n> Hang on a sec, in 45 minutes you can download the entire chain from\n> the genesis block?\n> \n> I have been doing extensive testing in this area and would love to\n> know what is special about your setup (I have never had the entire\n> chain in under 12 hours, infact it is normally closerto 24.) I have an\n> extensive setup of test machines, everything from e4300 to phenom2x6\n> to i5's.\n> \n> as an example on an amd e-450 with 4gb ram, and approx 3gb/s internet\n> connection it took 2 hours to sync the last 5 days.\n> \n> Maybe i am missing something important...\n> \n> Any additional information that you could provide to help me with\n> testing would be really appreciated.\n> \n> cheers,\n> \n> steve\n> \n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v2.0.17 (MingW32)\n> Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/\n> \n> iQEcBAEBAgAGBQJQDXO4AAoJEFvEB9dQFvtQxdcH/ieqQkyDCg8mKeOa6CqsWaS6\n> fhoeny3Ke2b/CsvhYmsThCvntN9volIqR2CTn5tkHiVwG9OmlxyHZcNpN0ZTHhK5\n> lsfLap/Y0QpiysXpV4Bu7Z4Hwp9jnhOP74TshT305r2pX6EGXPQ0CrlHqlIry/X/\n> vNcunUclliou+KjL7EHcY50GH5wDpqJAjlNyF97Lj9YiPrAC9vahGwWdxkbCYtG+\n> KUuWGBKMMdHuMAgcQh7nI9q0WT3k/gzRQtuC2kf+v0wvQhaGlTVkku4uanhpuw4p\n> 99blRF3/SfWimGuQgsm6wT3Y7dk+z8MFHLb6XGPxmgV9+gF+TWNczfU3GRzfcXw=\n> =CQkI\n> -----END PGP SIGNATURE-----\n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-24T09:18:12",
                "message_text_only": "> The Satoshi client uses a pure reentrant mutexes model\n\nAs you presumably already know, the reference client doesn't attempt\nto parallelise most operations at all. Chain download is entirely\nsingle threaded."
            },
            {
                "author": "steve",
                "date": "2012-07-24T19:56:48",
                "message_text_only": "Hi Michael,\n\nfrom what I have noticed, bitcoin blockchain download/verfication all\nhappens in 1 thread.  (so multicores doesnt really help)\n\nThat said, I have never tried on an ssd.\n\nWhat I do have is 6 SATA 6gbs configed as RAID0 Drives.\n32gb of ram. ubuntu 64 (yeah I know), this runs upto 16 VM's\n(I have 4 of these)\n\nHowever I have not tried to download the blockchain on the master os,\njust in virtulisation.  However, the dedicated machines that I have been\nusing for benchmarking the VM's against is a q6600 8gb ram sata2 hdd -\nWin 7 (seems faster than slackware...) to me it has always felt like\nnetwork bandwidth was the issue.  I might instrument the bitcoin-qt exe\nto only pick low ping nodes (has someone already done this?)\n\nI guess it is time to start some benchmarking (like the gpu comparison page)\n\nhte verification for the 5 past 5 days was negliglable. I am off on a\nflight to australia tomorrrow, so I will set some breakpoints and do\nsome timings in a debugger.\n\nThis will all happen on an e-450 (wonderful machine!)\n\nThanks very much for your response. it would seem that I am 'doing it\nwrong' :/\n\ncheers mate,\n\nsteve\n\n(this message isnt signed because I have forgotten my password.)\n\nOn 24/07/2012 09:25, Michael Gr\u00f8nager wrote:\n> Hi Steve,\n> \n> 45-90 minutes - note that its numbers from March/April, so a bit\n> longer today, but far, far away from the 12 hours.\n> \n> I am using libcoin and the bitcoind build based on this. Libcoin is\n> based on the Satoshi client, but refactured to use an async\n> concurrency model. I also did a minor tweeks to the db parameters. It\n> has earlier been tested up against Satoshi bitcoin where on some\n> OS'es it performs similarly (at least on some linuxes) and on some\n> faster (e.g. mac).\n> \n> What is your CPU load during a block download ? (both initially/up to\n> the point where verification sets in and after). The initial download\n> is typically disk I/O bound, the verification stage CPU bound, though\n> I lean to believe that even there it is disk I/O bound (at least on\n> my system ~50% CPU load). What should be better in libcoin is the\n> concurrency model. The Satoshi client uses a pure reentrant mutexes\n> model, that is not generally believed to motivate the best coding\n> practice nor performance, you might end up without the concurrency\n> you initially strived for *). As mentioned earlier libcoin uses a\n> pure async concurrency model (and so does libbitcoin btw).\n> \n> I would like to stress again that these numbers will depend largely\n> on the system running the test - I would call my laptop a bit over\n> the average today (MB Pro, 2.66Ghz i7 dual core, 8GBRAM, 512GB SSD).\n> But again 12 hours - I only reach such numbers on some of my VPS'es\n> (linode 1024) that are known for notoriously slow disk I/O. (here I\n> have a few % CPU load during the verification indicating indeed that\n> the disk i/o is the culprit).\n> \n> Cheers,\n> \n> Michael\n> \n> \n> *) I like this Dave Butenhof quote: \"The biggest of all the big\n> problems with recursive mutexes is that they encourage you to\n> completely lose track of your locking scheme and scope. This is\n> deadly. Evil. It's the \"thread eater\". You hold locks for the\n> absolutely shortest possible time. Period. Always. If you're calling\n> something with a lock held simply because you don't know it's held,\n> or because you don't know whether the callee needs the mutex, then\n> you're holding it too long. You're aiming a shotgun at your\n> application and pulling the trigger. You presumably started using\n> threads to get concurrency; but you've just PREVENTED concurrency.\"\n> \n> \n> \n> \n> On 23/07/2012, at 17:54, steve wrote:\n> \n> Hi Michael,\n> \n> On 23/07/2012 10:00, Michael Gr\u00f8nager wrote:\n>>>> I get a full blockchain from scratch in 45 minutes on my\n>>>> laptop, /M\n>>>> \n> Hang on a sec, in 45 minutes you can download the entire chain from \n> the genesis block?\n> \n> I have been doing extensive testing in this area and would love to \n> know what is special about your setup (I have never had the entire \n> chain in under 12 hours, infact it is normally closerto 24.) I have\n> an extensive setup of test machines, everything from e4300 to\n> phenom2x6 to i5's.\n> \n> as an example on an amd e-450 with 4gb ram, and approx 3gb/s\n> internet connection it took 2 hours to sync the last 5 days.\n> \n> Maybe i am missing something important...\n> \n> Any additional information that you could provide to help me with \n> testing would be really appreciated.\n> \n> cheers,\n> \n> steve\n> \n>> \n>> ------------------------------------------------------------------------------\n>>\n>> \nLive Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and \n>> threat landscape has changed and how IT managers can respond.\n>> Discussions will include endpoint security, mobile security and the\n>> latest in malware threats.\n>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ \n>> _______________________________________________ Bitcoin-development\n>> mailing list Bitcoin-development at lists.sourceforge.net \n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> \n>"
            },
            {
                "author": "Michael Gr\u00f8nager",
                "date": "2012-07-25T09:45:33",
                "message_text_only": "Hi Steve,\n\nI see dramatic differences in performance on virtual machines vs running directly on the iron. I am not an expert in virtual machines, but it seems to me that they are weak when it comes to disk i/o. And berkeley DB, as used by bitcoin is a sucker for disk i/o. In top I easily hit >1/#processors in top wa, meaning that the cpu doing the blockchain download is just waiting for the disk all the time.\n\nI would like to do a test keeping database log files in memory. It should not matter for durability of the wallet, as it flushes at each write anyway. As for the blockindex, it will remain consistent, but might be lagging some blocks behind at startup, which shouldn't really matter (except that the same block could end up appearing twice in the block00X files, inelegant, but not really a problem).\n\nOtherwise the system you describe (raid0 over 6 disks) should perform like crazy wrt disk i/o, at least on par with SSD. It is your virtualization I am worried about.\n\nHave a safe trip to down under!\n\n/M\n\nOn 24/07/2012, at 21:56, steve wrote:\n\n> Hi Michael,\n> \n> from what I have noticed, bitcoin blockchain download/verfication all\n> happens in 1 thread.  (so multicores doesnt really help)\n> \n> That said, I have never tried on an ssd.\n> \n> What I do have is 6 SATA 6gbs configed as RAID0 Drives.\n> 32gb of ram. ubuntu 64 (yeah I know), this runs upto 16 VM's\n> (I have 4 of these)\n> \n> However I have not tried to download the blockchain on the master os,\n> just in virtulisation.  However, the dedicated machines that I have been\n> using for benchmarking the VM's against is a q6600 8gb ram sata2 hdd -\n> Win 7 (seems faster than slackware...) to me it has always felt like\n> network bandwidth was the issue.  I might instrument the bitcoin-qt exe\n> to only pick low ping nodes (has someone already done this?)\n> \n> I guess it is time to start some benchmarking (like the gpu comparison page)\n> \n> hte verification for the 5 past 5 days was negliglable. I am off on a\n> flight to australia tomorrrow, so I will set some breakpoints and do\n> some timings in a debugger.\n> \n> This will all happen on an e-450 (wonderful machine!)\n> \n> Thanks very much for your response. it would seem that I am 'doing it\n> wrong' :/\n> \n> cheers mate,\n> \n> steve\n> \n> (this message isnt signed because I have forgotten my password.)\n> \n> On 24/07/2012 09:25, Michael Gr\u00f8nager wrote:\n>> Hi Steve,\n>> \n>> 45-90 minutes - note that its numbers from March/April, so a bit\n>> longer today, but far, far away from the 12 hours.\n>> \n>> I am using libcoin and the bitcoind build based on this. Libcoin is\n>> based on the Satoshi client, but refactured to use an async\n>> concurrency model. I also did a minor tweeks to the db parameters. It\n>> has earlier been tested up against Satoshi bitcoin where on some\n>> OS'es it performs similarly (at least on some linuxes) and on some\n>> faster (e.g. mac).\n>> \n>> What is your CPU load during a block download ? (both initially/up to\n>> the point where verification sets in and after). The initial download\n>> is typically disk I/O bound, the verification stage CPU bound, though\n>> I lean to believe that even there it is disk I/O bound (at least on\n>> my system ~50% CPU load). What should be better in libcoin is the\n>> concurrency model. The Satoshi client uses a pure reentrant mutexes\n>> model, that is not generally believed to motivate the best coding\n>> practice nor performance, you might end up without the concurrency\n>> you initially strived for *). As mentioned earlier libcoin uses a\n>> pure async concurrency model (and so does libbitcoin btw).\n>> \n>> I would like to stress again that these numbers will depend largely\n>> on the system running the test - I would call my laptop a bit over\n>> the average today (MB Pro, 2.66Ghz i7 dual core, 8GBRAM, 512GB SSD).\n>> But again 12 hours - I only reach such numbers on some of my VPS'es\n>> (linode 1024) that are known for notoriously slow disk I/O. (here I\n>> have a few % CPU load during the verification indicating indeed that\n>> the disk i/o is the culprit).\n>> \n>> Cheers,\n>> \n>> Michael\n>> \n>> \n>> *) I like this Dave Butenhof quote: \"The biggest of all the big\n>> problems with recursive mutexes is that they encourage you to\n>> completely lose track of your locking scheme and scope. This is\n>> deadly. Evil. It's the \"thread eater\". You hold locks for the\n>> absolutely shortest possible time. Period. Always. If you're calling\n>> something with a lock held simply because you don't know it's held,\n>> or because you don't know whether the callee needs the mutex, then\n>> you're holding it too long. You're aiming a shotgun at your\n>> application and pulling the trigger. You presumably started using\n>> threads to get concurrency; but you've just PREVENTED concurrency.\"\n>> \n>> \n>> \n>> \n>> On 23/07/2012, at 17:54, steve wrote:\n>> \n>> Hi Michael,\n>> \n>> On 23/07/2012 10:00, Michael Gr\u00f8nager wrote:\n>>>>> I get a full blockchain from scratch in 45 minutes on my\n>>>>> laptop, /M\n>>>>> \n>> Hang on a sec, in 45 minutes you can download the entire chain from \n>> the genesis block?\n>> \n>> I have been doing extensive testing in this area and would love to \n>> know what is special about your setup (I have never had the entire \n>> chain in under 12 hours, infact it is normally closerto 24.) I have\n>> an extensive setup of test machines, everything from e4300 to\n>> phenom2x6 to i5's.\n>> \n>> as an example on an amd e-450 with 4gb ram, and approx 3gb/s\n>> internet connection it took 2 hours to sync the last 5 days.\n>> \n>> Maybe i am missing something important...\n>> \n>> Any additional information that you could provide to help me with \n>> testing would be really appreciated.\n>> \n>> cheers,\n>> \n>> steve\n>> \n>>> \n>>> ------------------------------------------------------------------------------\n>>> \n>>> \n> Live Security Virtual Conference\n>>> Exclusive live event will cover all the ways today's security and \n>>> threat landscape has changed and how IT managers can respond.\n>>> Discussions will include endpoint security, mobile security and the\n>>> latest in malware threats.\n>>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ \n>>> _______________________________________________ Bitcoin-development\n>>> mailing list Bitcoin-development at lists.sourceforge.net \n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n>> \n>> \n>> \n>> \n> \n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "steve",
                "date": "2012-07-25T14:24:38",
                "message_text_only": "On 25/07/2012 10:45, Michael Gr\u00f8nager wrote:\n> Hi Steve,\n> \n> I see dramatic differences in performance on virtual machines vs \n> running directly on the iron. I am not an expert in virtual\n> machines,\n\nThey can be, it depends on how they are set up.  For reference, these\nVM's used to test network stacks and file format bugs.  They do this\nvia debug tracing, trace into, not over.  They then dump this data in\nfiles and it can keep up with a core2 duo laptop for file io. however\nI moved to using an in ram database (4gb chunks, that then get dumped\nover the network port to a db on a seperate machine)\n\nI am not sure I have the skills to instrament this into bitcoind\n\n> \n> I would like to do a test keeping database log files in memory. It \n> should not matter for durability of the wallet, as it flushes at\n> each write anyway. As for the blockindex, it will remain\n> consistent, but might be lagging some blocks behind at startup,\n> which shouldn't really matter (except that the same block could end\n> up appearing twice in the block00X files, inelegant, but not really\n> a problem).\n> \n> Otherwise the system you describe (raid0 over 6 disks) should\n> perform like crazy wrt disk i/o, at least on par with SSD. It is\n> your virtualization I am worried about.\n\nI will test that when I get back :)\n\n> \n> Have a safe trip to down under!\n\nwill do, thanks for the response. :)\n\n> \n> /M\n> \n> On 24/07/2012, at 21:56, steve wrote:\n> \n>> Hi Michael,\n>> \n>> from what I have noticed, bitcoin blockchain\n>> download/verfication all happens in 1 thread.  (so multicores\n>> doesnt really help)\n>> \n>> That said, I have never tried on an ssd.\n>> \n>> What I do have is 6 SATA 6gbs configed as RAID0 Drives. 32gb of \n>> ram. ubuntu 64 (yeah I know), this runs upto 16 VM's (I have 4\n>> of these)\n>> \n>> However I have not tried to download the blockchain on the\n>> master os, just in virtulisation.  However, the dedicated\n>> machines that I have been using for benchmarking the VM's against\n>> is a q6600 8gb ram sata2 hdd - Win 7 (seems faster than\n>> slackware...) to me it has always felt like network bandwidth was\n>> the issue.  I might instrument the bitcoin-qt exe to only pick\n>> low ping nodes (has someone already done this?)\n>> \n>> I guess it is time to start some benchmarking (like the gpu \n>> comparison page)\n>> \n>> hte verification for the 5 past 5 days was negliglable. I am off\n>> on a flight to australia tomorrrow, so I will set some\n>> breakpoints and do some timings in a debugger.\n>> \n>> This will all happen on an e-450 (wonderful machine!)\n>> \n>> Thanks very much for your response. it would seem that I am\n>> 'doing it wrong' :/\n>> \n>> cheers mate,\n>> \n>> steve\n>> \n>> (this message isnt signed because I have forgotten my password.)\n>> \n>> On 24/07/2012 09:25, Michael Gr\u00f8nager wrote:\n>>> Hi Steve,\n>>> \n>>> 45-90 minutes - note that its numbers from March/April, so a\n>>> bit longer today, but far, far away from the 12 hours.\n>>> \n>>> I am using libcoin and the bitcoind build based on this.\n>>> Libcoin is based on the Satoshi client, but refactured to use\n>>> an async concurrency model. I also did a minor tweeks to the\n>>> db parameters. It has earlier been tested up against Satoshi\n>>> bitcoin where on some OS'es it performs similarly (at least on\n>>> some linuxes) and on some faster (e.g. mac).\n>>> \n>>> What is your CPU load during a block download ? (both \n>>> initially/up to the point where verification sets in and\n>>> after). The initial download is typically disk I/O bound, the \n>>> verification stage CPU bound, though I lean to believe that\n>>> even there it is disk I/O bound (at least on my system ~50% CPU\n>>> load). What should be better in libcoin is the concurrency\n>>> model. The Satoshi client uses a pure reentrant mutexes model,\n>>> that is not generally believed to motivate the best coding\n>>> practice nor performance, you might end up without the\n>>> concurrency you initially strived for *). As mentioned earlier\n>>> libcoin uses a pure async concurrency model (and so does\n>>> libbitcoin btw).\n>>> \n>>> I would like to stress again that these numbers will depend \n>>> largely on the system running the test - I would call my laptop\n>>> a bit over the average today (MB Pro, 2.66Ghz i7 dual core,\n>>> 8GBRAM, 512GB SSD). But again 12 hours - I only reach such\n>>> numbers on some of my VPS'es (linode 1024) that are known for\n>>> notoriously slow disk I/O. (here I have a few % CPU load during\n>>> the verification indicating indeed that the disk i/o is the \n>>> culprit).\n>>> \n>>> Cheers,\n>>> \n>>> Michael\n>>> \n>>> \n>>> *) I like this Dave Butenhof quote: \"The biggest of all the big\n>>>  problems with recursive mutexes is that they encourage you to\n>>>  completely lose track of your locking scheme and scope. This\n>>> is deadly. Evil. It's the \"thread eater\". You hold locks for\n>>> the absolutely shortest possible time. Period. Always. If\n>>> you're calling something with a lock held simply because you\n>>> don't know it's held, or because you don't know whether the\n>>> callee needs the mutex, then you're holding it too long. You're\n>>> aiming a shotgun at your application and pulling the trigger.\n>>> You presumably started using threads to get concurrency; but\n>>> you've just PREVENTED concurrency.\"\n>>> \n>>> \n>>> \n>>> \n>>> On 23/07/2012, at 17:54, steve wrote:\n>>> \n>>> Hi Michael,\n>>> \n>>> On 23/07/2012 10:00, Michael Gr\u00f8nager wrote:\n>>>>>> I get a full blockchain from scratch in 45 minutes on my\n>>>>>>  laptop, /M\n>>>>>> \n>>> Hang on a sec, in 45 minutes you can download the entire chain \n>>> from the genesis block?\n>>> \n>>> I have been doing extensive testing in this area and would\n>>> love to know what is special about your setup (I have never had\n>>> the entire chain in under 12 hours, infact it is normally\n>>> closerto 24.) I have an extensive setup of test machines,\n>>> everything from e4300 to phenom2x6 to i5's.\n>>> \n>>> as an example on an amd e-450 with 4gb ram, and approx 3gb/s \n>>> internet connection it took 2 hours to sync the last 5 days.\n>>> \n>>> Maybe i am missing something important...\n>>> \n>>> Any additional information that you could provide to help me\n>>> with testing would be really appreciated.\n>>> \n>>> cheers,\n>>> \n>>> steve\n>>> \n>>>> \n>>>> ------------------------------------------------------------------------------\n>>>>\n>>>>\n>>\n>>>>\n>>>> \nLive Security Virtual Conference\n>>>> Exclusive live event will cover all the ways today's\n>>>> security and threat landscape has changed and how IT managers\n>>>> can respond. Discussions will include endpoint security,\n>>>> mobile security and the latest in malware threats. \n>>>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ \n>>>> _______________________________________________ \n>>>> Bitcoin-development mailing list \n>>>> Bitcoin-development at lists.sourceforge.net \n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>>\n>>>\n>>>\n>>\n>>\n>>\n>>>>\n>>>> \n------------------------------------------------------------------------------\n>> Live Security Virtual Conference Exclusive live event will cover \n>> all the ways today's security and threat landscape has changed\n>> and how IT managers can respond. Discussions will include\n>> endpoint security, mobile security and the latest in malware\n>> threats. \n>> http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/ \n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net \n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Aidan Thornton",
                "date": "2012-07-23T22:50:58",
                "message_text_only": "On Sun, Jul 22, 2012 at 11:37 PM, grarpamp <grarpamp at gmail.com> wrote:\n> Given a testbed: Pentium 4 1.8GHz single core, 2GB ram, FreeBSD 8,\n> disk is geli aes-128 + zfs sha-256, bitcoin 0.6.3, Tor proxy,\n> An estimate is made that by the end of the year bitcoin will\n> completely overrun the capabilities of this reasonable class of\n> machines.\n\nThat's actually slower-than-Atom class hardware you're running on\nthere, with full disk encryption on what's a very CPU and IO-heavy\nworkload. From the benchmarks I remember, your CPU is literally slower\nthan the first generation of single-core netbooks - the ones reviewers\nrecommended against using full disk encryption on because they just\ndidn't have enough CPU power to manage it. It's not surprising that\nBitcoin isn't usable on that setup."
            },
            {
                "author": "grarpamp",
                "date": "2012-07-23T22:33:24",
                "message_text_only": "> You're seriously suggesting that I'm using a system\n> which is 720x (one month vs one hour) faster than your\n> P4 1.8GHz?\n\nDon't know what you're using since you've not stated it.\n\n> I find this doubtful, especially since bitcoin's sync is effectively\n> single threaded.\n\nExtra cores help with disk, crypto, net, etc...\n\n> month\n\nI've spent about two weeks crunching about the last month's\nworth of new blocks.\n\n> Your results are not expected and are not believed to be\n> representative.\n\nThe config is reproducible, and not believed to be uncommon.\n\n> try to isolate it\n\nMostly disk and crypto.\nShall everyone instead run in bitrot and no-privacy mode?\nWhat do we do when we've got 10k trans a day coming in?\n50k? 100k, 1M? When the chain gets 1M, 50M, 500M, 1B long?\n\nForget my swamped box, these numbers are coming to others.\n\n> try to sync from a local node into tmpfs\n\nI'd bet some people using 'tmpfs' probably have it unknowingly\n[fall]backed to swap instead of core.\n\nBitcoin already takes up 3GiB of disk, how many have that much\nfree RAM? How many have 30GiB, 300GiB?\n\n> If you're building against BDB later than the recommended 4.8\n> be aware that there have been performance regressions with later\n> versions\n\nYes, I left out that bit of platform so here are the remaining\nbits... db4830, boost149, vm.kmem_size=650000000\n\n\nI'm not bashing anything or anybody, just detailing a stock config\nthat is underwater. Anybody wishing to verify can get the hardware\nfrom their junk pile and the software from freebsd.org. I'll certainly\nbe looking at both it and different setups too. If anyone's using\nsay Linux/BSD, BTRFS/ZFS, crypto, on i386/amd64, they could\nchime in with their times too.\n\nDisk is the cheapest, easiest thing for Joe to get. Think about\nindexing and checkpointing into said disk. I don't know what\nbitcoin's doing, but if it's verifying every transaction back to\nthe root, that would seem a bit ridiculous.\n\nJoe probably won't be happy buying TiB's for bitcoind, so after that's\nfilled (assuming there's CPU to do it), the trust model has to change.\nThese scales are coming..."
            },
            {
                "author": "grarpamp",
                "date": "2012-07-27T04:20:12",
                "message_text_only": "Update: this class of machine just became useless for bitcoin.\nWhen blk0002.dat was created to store more blocks, all forward\nprogress processing blocks turned into losing ground by 20 or so\na day. Guessing both datfiles were being accessed at once resulting\nin disk based overload. I've not seen any other mentions of crypto\nin this thread so I'm not sure how well new hardware would perform.\nGoing shopping I guess."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-27T04:59:45",
                "message_text_only": "On Fri, Jul 27, 2012 at 12:20 AM, grarpamp <grarpamp at gmail.com> wrote:\n> Update: this class of machine just became useless for bitcoin.\n> When blk0002.dat was created to store more blocks, all forward\n> progress processing blocks turned into losing ground by 20 or so\n> a day. Guessing both datfiles were being accessed at once resulting\n> in disk based overload. I've not seen any other mentions of crypto\n> in this thread so I'm not sure how well new hardware would perform.\n> Going shopping I guess.\n\nI now have an 1.8 ghz p3 celeron (128k cache) which should be\nsubstantially slower than your machine, running vintage 2.6.20 linux.\nUnfortunately I forgot to turn on timestamp logging so I don't know\nhow long it took to sync the chain, but it was less than two days as\nthat was the span between when I checked on it. It's staying current\njust fine.\n\nAgain, I encourage you to investigate your software configuration."
            },
            {
                "author": "grarpamp",
                "date": "2012-07-27T05:59:20",
                "message_text_only": "> I now have an 1.8 ghz p3 celeron (128k cache) which should be\n> substantially slower than your machine, running vintage 2.6.20 linux.\n> Unfortunately I forgot to turn on timestamp logging so I don't know\n> how long it took to sync the chain, but it was less than two days as\n> that was the span between when I checked on it. It's staying current\n\nWell, are you running bitcoin on, say, an FS with sha256 integrity\ntrees for all bits and AES-128-XTS/CBC disk encryption?\nIf not, we're not comparing the same apples, let alone the same OS.\n\n> Again, I encourage you to investigate your software configuration.\n\nSomeone suggested I investigate turning off the above features.\nSince I'd find their loss undesirable [1], and there's not much to be\ntuned there anyways, I've given up and am investigating what more\nGHz and cores will do.\n\n[1] Keeping data both intact and private is a good thing. Does your\ncheckbook deserve any less?"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-07-27T06:03:59",
                "message_text_only": "On Friday, July 27, 2012 5:59:20 AM grarpamp wrote:\n> > I now have an 1.8 ghz p3 celeron (128k cache) which should be\n> > substantially slower than your machine, running vintage 2.6.20 linux.\n> > Unfortunately I forgot to turn on timestamp logging so I don't know\n> > how long it took to sync the chain, but it was less than two days as\n> > that was the span between when I checked on it. It's staying current\n> \n> Well, are you running bitcoin on, say, an FS with sha256 integrity\n> trees for all bits and AES-128-XTS/CBC disk encryption?\n\nTrying to run state-of-the-art encryption on EVERYTHING on an ancient computer \nis fairly ill-advised. I encourage you to continue with the plan to go \nshopping.\n\n> Someone suggested I investigate turning off the above features.\n> Since I'd find their loss undesirable [1], and there's not much to be\n> tuned there anyways, I've given up and am investigating what more\n> GHz and cores will do.\n> \n> [1] Keeping data both intact and private is a good thing. Does your\n> checkbook deserve any less?\n\nSounds reasonable...\nbut why do you also need to encrypt 2+ GB of public record?\n\nLuke"
            },
            {
                "author": "grarpamp",
                "date": "2012-07-27T06:28:40",
                "message_text_only": "> shopping.\n\nGood thing I can still spend, even with an incomplete blockchain :)\n\n> but why do you also need to encrypt 2+ GB of public record?\n\n1) I'm not seeing an option to split the wallet, debug log and other\nprivates pathwise from the blockchain.\n2) Because encrypt everything is reasonable standard practice.\nhttps://en.wikiquote.org/wiki/Cardinal_Richelieu [ref: disputed quote]\n\nBTW, logs for this box say at least 9 days were spent attempting to\ncrunch the most recent 3100 blocks before it was overrun with new\nones and retired. (There's no formal start timestamp, just some entries...)"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-27T06:56:06",
                "message_text_only": "On Fri, Jul 27, 2012 at 1:59 AM, grarpamp <grarpamp at gmail.com> wrote:\n>> I now have an 1.8 ghz p3 celeron (128k cache) which should be\n>> substantially slower than your machine, running vintage 2.6.20 linux.\n>> Unfortunately I forgot to turn on timestamp logging so I don't know\n>> how long it took to sync the chain, but it was less than two days as\n>> that was the span between when I checked on it. It's staying current\n>\n> Well, are you running bitcoin on, say, an FS with sha256 integrity\n> trees for all bits and AES-128-XTS/CBC disk encryption?\n> If not, we're not comparing the same apples, let alone the same OS.\n\nThe file system is using twofish-cbc-essiv:sha256, apparently.  (I\nwent and dug up a mothballed machine of mine because of your post).\n\nAnd I agree, encrypting everything is a good practice\u2014 I once got a\ndisk back from RMA where only the first sectors were zeroed and the\nrest had someone elses data, since then I've encrypted everything\nbecause you can't wipe a dead drive.\n\nI'd love to know precisely what Bitcoin is doing thats making your\nmachine so unhappy... but your configuration is uncommon for bitcoin\nnodes in many distinct ways so it's not clear where to start."
            },
            {
                "author": "grarpamp",
                "date": "2012-07-27T19:37:27",
                "message_text_only": "> I'd love to know precisely what Bitcoin is doing thats making your\n> machine so unhappy... but your configuration is uncommon for bitcoin\n> nodes in many distinct ways so it's not clear where to start.\n\nThat's why I posted the details of the machine so interested people\ncould duplicate it if they are working in these areas. Once I'm on new\nhardware and playing around I, also, may find some discoveries.\n\nI have no doubt that 'common' is windows seven on core2duo\nwithout ecc and no crypto or hashing for the disk :)"
            },
            {
                "author": "Andreas Petersson",
                "date": "2012-07-27T08:53:06",
                "message_text_only": "I propose a pragmatic solution: Try running the Multibit client. i am \nnot sure if the linux/java based installer would work,so maybe you have \nto build it from source.\nI tried it out is really fast compared to bitcoin-qt. after install it \ntook me 15 seconds to get updated and running. Importing a private \nkey/rescanning the blockchain was done in under 30 minutes.\nIt requires Java 6, i think there is a distro even for freebsd.\nof course, you cannot do things as solomining with it since it uses SPV."
            },
            {
                "author": "Pieter Wuille",
                "date": "2012-07-27T09:59:42",
                "message_text_only": "And now to the list...\n\nOn Jul 27, 2012 6:21 AM, \"grarpamp\" <grarpamp at gmail.com> wrote:\n>\n> Update: this class of machine just became useless for bitcoin.\n> When blk0002.dat was created to store more blocks, all forward\n> progress processing blocks turned into losing ground by 20 or so\n> a day. Guessing both datfiles were being accessed at once resulting\n> in disk based overload. I've not seen any other mentions of crypto\n> in this thread so I'm not sure how well new hardware would perform.\n> Going shopping I guess.\n\nI doubt the encryption is the problem. I have a much more recent machine\n(i7 with 8 GiB RAM), and my blockchain is on a (userspace!) encrypted\nfilesystem. However, I do not notice any measurable slowdown from doing so.\n\nYou are however using a filesystem (ZFS) that is uses its own filesystem\ncaching implementation to reach some performance, and is known to be very\nmemory-hungry at that. Furthermore, I believe it is known to have\nperformance issues on 32-bit architectures. The bdb backend Bitcoin uses\ndoes many I/O operations, and writes them synchronously to disk, killing\nwhatever caching your filesystem provides. For those who run a large\ndatabase on ZFS, I believe it is advised to put ZFS's intent log on a\nseparate SSD-backed device, to get fast synchronous writes.\n\nThat said, some improvememts may be coming. Mike has been working on\nchanging the backend from bdb to leveldb, which may (or may not) result in\na very different performance profile on your machine. Also, I've been\nworking on switching the bitcoin block verifier to use a different style\ndatabase layout (\"ultraprune\"), which is smaller, faster, and will support\npruning. A recent test on my own machine synced the blockchain up to the\nlatest checkpoint in 7 minutes (6 minutes when stored in RAM instead of\ndisk).\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120727/f3a2e557/attachment.html>"
            },
            {
                "author": "grarpamp",
                "date": "2012-07-27T19:26:35",
                "message_text_only": "> You are however using a filesystem (ZFS)\n\nI'm aware of the memory and i386 issues, and going shopping.\n\n> The bdb backend Bitcoin uses\n> does many I/O operations, and writes them synchronously to disk, killing\n> whatever caching your filesystem provides.\n\nSync... yes, depending on the rate/sec and size of them, that would be an\nissue. \"Enterprise\" systems with UPS, good disk, etc assume writes are\ncommitted upon return, eliminating need for software apps to do sync. So\nI need to figure out how to turn that off?\n\nIs sync on for everything, or just the wallet (where it could be argued as ok)?\n\n> For those who run a large\n> database on ZFS, I believe it is advised to put ZFS's intent log on a\n> separate SSD-backed device, to get fast synchronous writes.\n\nGuessing bitcoin's writes are small? So a RAM dev intent would be cheaper\nand faster than SSD for that.\n\n> on switching the bitcoin block verifier to use a different style database\n> layout (\"ultraprune\"), which is smaller, faster, and will support pruning.\n\nI'll try to search that. If it's anything like \"delete old blocks/tx/coins that\nhave both been validated in the past and fully spent in the future since we\nno longer need to validate further back beyond them [1]\", that would be\ninteresting.\n\n[1] Unless you're a historian or some usage other than casual transactions."
            }
        ],
        "thread_summary": {
            "title": "Scalability issues",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Andreas Petersson",
                "Aidan Thornton",
                "Mike Hearn",
                "Raphael NICOLLE",
                "steve",
                "Michael Gr\u00f8nager",
                "Gregory Maxwell",
                "Pieter Wuille",
                "grarpamp"
            ],
            "messages_count": 23,
            "total_messages_chars_count": 43921
        }
    },
    {
        "title": "[Bitcoin-development] Coinbase script parse failures",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-07-23T06:07:39",
                "message_text_only": "While writing the script engine for pynode, I ran a test to validate\nmy script tokenizer -- a python script which does nothing more than\nsplit up scriptPubKey and scriptSig into component opcodes and data\nelements.  No execution, just tokenization of the script's data\nstream.\n\nScanning the entire blockchain, my script found over 8,000\ntokenization failures, and 100% of those were in coinbase\ntransactions' scriptSig.  The scripts used to generate this can be\nfound at https://github.com/jgarzik/pynode\n\nThe following data dump are just the first few, and most recent few,\nof the invalid scripts I found in the blockchain:\n\nScanning block #142312 000000000000046acff93b0e76cd10490551bf871ce9ac9fad62e67a0\n7ff1d1e (1 tx)\n   TX 50cfd3361f7162b3c0c00dacd3d0e4ddf61e8ec0c51bfa54c4ca0e61876810a9\n      txin 0 parse failed\nScanning block #142357 0000000000000743c432f84ad688b7b60d1474ccd7baa3d762df0b3f5\n1205712 (1 tx)\n   TX 587da4d4870515e57efc27623aa92fae0b7aef5908162de57fef0bbe6382be73\n      txin 0 parse failed\nScanning block #143014 00000000000007fe6ecd20a8c454cd43c78d912b499c46a1179e30f7c\nff002b3 (1 tx)\n   TX 4c8f43c5115c5f29f3761176fa59cde2de2ad976efcbc5faae8ee79fa5dd6264\n      txin 0 parse failed\n...\nScanning block #190315 00000000000006a0bc3be527033c02d3bcfa72af2f4213c4b0feec923\n9573342 (336 tx)\n   TX f0ba80ce080eb49148b69c47d744bbb85e4e07e4e4d0273b402c0989d79c359c\n      txin 0 parse failed\nScanning block #190321 00000000000001c3bacc869917cacdafb6e00c552ac294835107b574a\n44a0362 (38 tx)\n   TX 4c91f5ad0616df92165819902d0b117d9e68345f5fe964de6146f89838b9295e\n      txin 0 parse failed\nScanning block #190331 00000000000000e3d3eaf93600684b085df7d58f84ef952c91e84eb4a\n251d5d8 (128 tx)\n   TX 5ee371d65e323934570566b1d92dceb8456e887814da8ef2a53971683bd11da4\n      txin 0 parse failed\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "theymos",
                "date": "2012-07-23T06:53:24",
                "message_text_only": "Coinbase scriptSigs aren't required to be well-formed. They're\nnever executed."
            },
            {
                "author": "Matt Corallo",
                "date": "2012-07-23T16:11:43",
                "message_text_only": "I mentioned this on IRC a week or so ago, noticing that though they are\nnot executed and required to be well-formed, we still count any sigops\nthat appear in them (which I guessed may be an interesting attack if you\ncould get a miner to put a byte in there that is the equivalent of\nOP_CHECKSIG because we dont count the sigops in the coinbase scriptSig\nduring mining, however luke pointed out that we always push the content\nof coinbase scriptSigs properly by default, and those modifying the code\nshould spend time researching this stuff anyway, so if they break it,\nits their fault (and now they can find this email)).\n\nMatt\n\nOn Mon, 2012-07-23 at 02:07 -0400, Jeff Garzik wrote:\n> While writing the script engine for pynode, I ran a test to validate\n> my script tokenizer -- a python script which does nothing more than\n> split up scriptPubKey and scriptSig into component opcodes and data\n> elements.  No execution, just tokenization of the script's data\n> stream.\n> \n> Scanning the entire blockchain, my script found over 8,000\n> tokenization failures, and 100% of those were in coinbase\n> transactions' scriptSig.  The scripts used to generate this can be\n> found at https://github.com/jgarzik/pynode\n> \n> The following data dump are just the first few, and most recent few,\n> of the invalid scripts I found in the blockchain:\n> \n> Scanning block #142312 000000000000046acff93b0e76cd10490551bf871ce9ac9fad62e67a0\n> 7ff1d1e (1 tx)\n>    TX 50cfd3361f7162b3c0c00dacd3d0e4ddf61e8ec0c51bfa54c4ca0e61876810a9\n>       txin 0 parse failed\n> Scanning block #142357 0000000000000743c432f84ad688b7b60d1474ccd7baa3d762df0b3f5\n> 1205712 (1 tx)\n>    TX 587da4d4870515e57efc27623aa92fae0b7aef5908162de57fef0bbe6382be73\n>       txin 0 parse failed\n> Scanning block #143014 00000000000007fe6ecd20a8c454cd43c78d912b499c46a1179e30f7c\n> ff002b3 (1 tx)\n>    TX 4c8f43c5115c5f29f3761176fa59cde2de2ad976efcbc5faae8ee79fa5dd6264\n>       txin 0 parse failed\n> ...\n> Scanning block #190315 00000000000006a0bc3be527033c02d3bcfa72af2f4213c4b0feec923\n> 9573342 (336 tx)\n>    TX f0ba80ce080eb49148b69c47d744bbb85e4e07e4e4d0273b402c0989d79c359c\n>       txin 0 parse failed\n> Scanning block #190321 00000000000001c3bacc869917cacdafb6e00c552ac294835107b574a\n> 44a0362 (38 tx)\n>    TX 4c91f5ad0616df92165819902d0b117d9e68345f5fe964de6146f89838b9295e\n>       txin 0 parse failed\n> Scanning block #190331 00000000000000e3d3eaf93600684b085df7d58f84ef952c91e84eb4a\n> 251d5d8 (128 tx)\n>    TX 5ee371d65e323934570566b1d92dceb8456e887814da8ef2a53971683bd11da4\n>       txin 0 parse failed\n>"
            }
        ],
        "thread_summary": {
            "title": "Coinbase script parse failures",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "theymos",
                "Matt Corallo"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 4479
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin script opcode counts",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-07-26T05:50:08",
                "message_text_only": "Just run a query over the entire blockchain, looking at script opcode\nuse. I counted the number of times each opcode was used, in total:\nhttps://gist.github.com/3180470\n\n(data in full)\nOP_0 104\nOP_1 27\nOP_2 12\nOP_2OVER 182\nOP_2SWAP 182\nOP_3 16\nOP_4 1\nOP_CHECKMULTISIG 22\nOP_CHECKSIG 12188693\nOP_CODESEPARATOR 14\nOP_DEPTH 182\nOP_DROP 19\nOP_DUP 11699991\nOP_EQUAL 88\nOP_EQUALVERIFY 11699985\nOP_HASH160 11700067\nOP_IF 182\nOP_IFDUP 182\nOP_MIN 4\nOP_NOP1 1\nOP_NOP2 15\nOP_NOP 5\nOP_PUSHDATA1 18\nOP_PUSHDATA2 4\nOP_PUSHDATA 32350369\nOP_SHA256 2\nOP_VERIFY 182\n\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-07-26T11:27:30",
                "message_text_only": "> OP_CODESEPARATOR 14\n> OP_DEPTH 182\n\nI'm interested to see what scripts were using OP_DEPTH and\nOP_CODESEPARATOR, as the latter appears to be useless to my eyes.\n\nCould you give some tx ids which use unusual opcodes?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-26T12:50:14",
                "message_text_only": "On Thu, Jul 26, 2012 at 7:27 AM, Mike Hearn <mike at plan99.net> wrote:\n>> OP_CODESEPARATOR 14\n>> OP_DEPTH 182\n>\n> I'm interested to see what scripts were using OP_DEPTH and\n> OP_CODESEPARATOR, as the latter appears to be useless to my eyes.\n>\n> Could you give some tx ids which use unusual opcodes?\n\nThe OP_DEPTH are all screwups in P2Pool blocks.\n\n( the software was making tiny payments to scriptpubkey 'script' due\nto a bug, and it went unnoticed for a long time because it was assumed\nthat it was just some p2sh user intentionally being stupid )"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-07-26T05:55:18",
                "message_text_only": "On Thu, Jul 26, 2012 at 1:50 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> Just run a query over the entire blockchain, looking at script opcode\n> use. I counted the number of times each opcode was used, in total:\n> https://gist.github.com/3180470\n\nAnd here is the testnet3 data: https://gist.github.com/3180486\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin script opcode counts",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Mike Hearn",
                "Gregory Maxwell"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 1738
        }
    },
    {
        "title": "[Bitcoin-development] OP_RESEVERVED and IsPushOnly",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-26T16:49:19",
                "message_text_only": "Meh, probably harmless, but...\n\nAs best I can tell, OP_RESERVED does absolutely nothing (a NOP).\n\nCScript::IsPushOnly(...) counts this as a push operation."
            }
        ],
        "thread_summary": {
            "title": "OP_RESEVERVED and IsPushOnly",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 155
        }
    },
    {
        "title": "[Bitcoin-development] Signing release binaries",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-07-29T10:17:51",
                "message_text_only": "MacOS X 10.8 makes application signing borderline mandatory, in that\nyou cannot run unsigned apps unless you tweak your settings via the\ncontrol panel. You must sign with a certificate issued by Apple via\ntheir \"identified developer\" program.\n\nWindows allows but does not require signing. However, anti-virus\nsystems tend to use signers with good reputation as a whitelisting\nsignal. Signing Bitcoin releases makes sense because it may lead to,\nat minimum, higher performance if AV engines ignore file reads/writes\nby Bitcoin. And it can also shield us from false positives. You only\nneed to see the mess that the mining tools world has become to\nunderstand why this is important.\n\nAs I don't take part in the release process, I can't help out with\nthis directly, but I believe it's important and would be willing to\nthrow some money in towards buying the signing certs for both\nplatforms. I guess Gavin would be the final signer."
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-07-29T12:20:44",
                "message_text_only": "This is a good idea. I think I can come up with the cash, I will\nfollow up with gavin.\n\nSent from my smartphone!\n\nOn Jul 29, 2012, at 7:18 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> MacOS X 10.8 makes application signing borderline mandatory, in that\n> you cannot run unsigned apps unless you tweak your settings via the\n> control panel. You must sign with a certificate issued by Apple via\n> their \"identified developer\" program.\n>\n> Windows allows but does not require signing. However, anti-virus\n> systems tend to use signers with good reputation as a whitelisting\n> signal. Signing Bitcoin releases makes sense because it may lead to,\n> at minimum, higher performance if AV engines ignore file reads/writes\n> by Bitcoin. And it can also shield us from false positives. You only\n> need to see the mess that the mining tools world has become to\n> understand why this is important.\n>\n> As I don't take part in the release process, I can't help out with\n> this directly, but I believe it's important and would be willing to\n> throw some money in towards buying the signing certs for both\n> platforms. I guess Gavin would be the final signer.\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-07-29T17:15:14",
                "message_text_only": "On Sunday, July 29, 2012 10:17:51 AM Mike Hearn wrote:\n> I guess Gavin would be the final signer.\n\nConsidering that Gavin is not interested in participating in any way in the \nstable versions, I would prefer to see someone else responsible for OS-vendor \nsigning."
            },
            {
                "author": "Cameron Garnham",
                "date": "2012-07-30T02:29:43",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nI'm not a vendor, however I have a code-signing key for windows; I could\nsign the windows installer and binary.\n\nOn 30/07/2012 3:15 AM, Luke-Jr wrote:\n> On Sunday, July 29, 2012 10:17:51 AM Mike Hearn wrote:\n>> I guess Gavin would be the final signer.\n> \n> Considering that Gavin is not interested in participating in any way in the \n> stable versions, I would prefer to see someone else responsible for OS-vendor \n> signing.\n> \n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.19 (MingW32)\nComment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/\n\niF4EAREIAAYFAlAV8ZYACgkQBJ8cMDO159ZNVgD+KsQUlNcTDSmTGaHvLbAw0Cxy\nOCDfnsFbaiLoX2xWP3MBAOnN/QvcYY8f2WzMfI+N1PfnydRYGxlkA2JZ2Nrtnxcv\n=qeUe\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Pauly",
                "date": "2012-07-30T13:02:00",
                "message_text_only": "I'd like to see the binaries signed with gpg, independent of any signatures\nrequired for various operating systems.\n\nI can't imagine a worse scenario than the bitcoin.org site being hacked and\nthe binaries replaced with wallet-stealing code. All of the developers seem\nto have gpg keys, how hard can it be to provide a detached gpg signature\nfor the binary?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120730/9ec91774/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Signing release binaries",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Mike Hearn",
                "Peter Vessenes",
                "Peter Pauly",
                "Cameron Garnham"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 4867
        }
    },
    {
        "title": "[Bitcoin-development] script tests - invalid script in script_valid.json?",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-29T16:31:06",
                "message_text_only": "Hi!\n\nIs this a valid script?\n\n[\"1 0 1\", \"WITHIN NOT\"]\n\nThe first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].\n\nWhat am I missing here?\n\nThanks"
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-07-29T16:33:25",
                "message_text_only": "OP_WITHIN is lower-bound-inclusive, but upper bound exclusive, so 1 0 1 WITHIN is false.\n\n\nbool fValue = (bn2 <= bn1 && bn1 < bn3);\n\nhttps://github.com/bitcoin/bitcoin/blob/master/src/script.cpp#L854\n\nOn 7/29/2012 6:31 PM, Amir Taaki wrote:\n> Hi!\n>\n> Is this a valid script?\n>\n> [\"1 0 1\", \"WITHIN NOT\"]\n>\n> The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].\n>\n> What am I missing here?\n>\n> Thanks\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-29T16:42:34",
                "message_text_only": "oh, bitcoin...\n\nThanks justmoon :D\n\n\n\n----- Original Message -----\nFrom: Stefan Thomas <moon at justmoon.de>\nTo: bitcoin-development at lists.sourceforge.net\nCc: \nSent: Sunday, July 29, 2012 1:33 PM\nSubject: Re: [Bitcoin-development] script tests - invalid script in script_valid.json?\n\nOP_WITHIN is lower-bound-inclusive, but upper bound exclusive, so 1 0 1 WITHIN is false.\n\n\nbool fValue = (bn2 <= bn1 && bn1 < bn3);\n\nhttps://github.com/bitcoin/bitcoin/blob/master/src/script.cpp#L854\n\nOn 7/29/2012 6:31 PM, Amir Taaki wrote:\n> Hi!\n>\n> Is this a valid script?\n>\n> [\"1 0 1\", \"WITHIN NOT\"]\n>\n> The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].\n>\n> What am I missing here?\n>\n> Thanks\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-07-29T17:35:12",
                "message_text_only": "I was baffled by this exact script, too. :)\n\nBig props to Gavin for adding those data-driven test cases. I can't\noverstate how useful they are.\n\nIs there interest to port more tests (P2SH, checksig, checkmultisig,\nblock verification, maybe even DoS rules) into data-driven format? It\nmight be something that I'd like to help with if pull requests in that\ndirection are welcome.\n\nOn 7/29/2012 6:42 PM, Amir Taaki wrote:\n> oh, bitcoin...\n>\n> Thanks justmoon :D\n>\n>\n>\n> ----- Original Message -----\n> From: Stefan Thomas <moon at justmoon.de>\n> To: bitcoin-development at lists.sourceforge.net\n> Cc: \n> Sent: Sunday, July 29, 2012 1:33 PM\n> Subject: Re: [Bitcoin-development] script tests - invalid script in script_valid.json?\n>\n> OP_WITHIN is lower-bound-inclusive, but upper bound exclusive, so 1 0 1 WITHIN is false.\n>\n>\n> bool fValue = (bn2 <= bn1 && bn1 < bn3);\n>\n> https://github.com/bitcoin/bitcoin/blob/master/src/script.cpp#L854\n>\n> On 7/29/2012 6:31 PM, Amir Taaki wrote:\n>> Hi!\n>>\n>> Is this a valid script?\n>>\n>> [\"1 0 1\", \"WITHIN NOT\"]\n>>\n>> The first value (1) is tested to make sure it is between the lower (0) and upper (1) value. This evaluates to true, placing on the stack a single byte of [01]. NOT then inverses this to a 0 byte false value of [].\n>>\n>> What am I missing here?\n>>\n>> Thanks\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and \n>> threat landscape has changed and how IT managers can respond. Discussions \n>> will include endpoint security, mobile security and the latest in malware \n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-07-29T18:48:47",
                "message_text_only": "On Sun, Jul 29, 2012 at 1:35 PM, Stefan Thomas <moon at justmoon.de> wrote:\n> Big props to Gavin for adding those data-driven test cases. I can't\n> overstate how useful they are.\n\n+1  they are a useful, cross-platform test tool.\n\npynode will be making use of them shortly.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-07-30T00:52:28",
                "message_text_only": "> Is there interest to port more tests (P2SH, checksig, checkmultisig,\n> block verification, maybe even DoS rules) into data-driven format? It\n> might be something that I'd like to help with if pull requests in that\n> direction are welcome.\n\nYes, more tests are definitely welcome.\n\ncheck*sig tests are tricky, because they have to refer to previous\nunspent transactions and private keys (so require a particular block\nchain to test against). Brilliant ideas on a simple data-driven format\nwelcome.\n\nblock verification tests would be great; a collection of good/bad\nblock chains, starting from a common chain (maybe the testnet3\ntesnet-in-a-box chain) would be very useful for regression testing.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-07-30T14:41:04",
                "message_text_only": "Yep, I want to chip in and also express my gratitude for these useful tests. I sent a personal email to Gavin before.\n\nI plan to make some more complex tests by combining several of the simpler ones.\n\n\n\n----- Original Message -----\nFrom: Gavin Andresen <gavinandresen at gmail.com>\nTo: Stefan Thomas <moon at justmoon.de>\nCc: bitcoin-development at lists.sourceforge.net\nSent: Sunday, July 29, 2012 9:52 PM\nSubject: Re: [Bitcoin-development] script tests - invalid script in script_valid.json?\n\n> Is there interest to port more tests (P2SH, checksig, checkmultisig,\n> block verification, maybe even DoS rules) into data-driven format? It\n> might be something that I'd like to help with if pull requests in that\n> direction are welcome.\n\nYes, more tests are definitely welcome.\n\ncheck*sig tests are tricky, because they have to refer to previous\nunspent transactions and private keys (so require a particular block\nchain to test against). Brilliant ideas on a simple data-driven format\nwelcome.\n\nblock verification tests would be great; a collection of good/bad\nblock chains, starting from a common chain (maybe the testnet3\ntesnet-in-a-box chain) would be very useful for regression testing.\n\n-- \n--\nGavin Andresen\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Pieter Wuille",
                "date": "2012-07-31T14:26:21",
                "message_text_only": "On Mon, Jul 30, 2012 at 2:52 AM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> check*sig tests are tricky, because they have to refer to previous\n> unspent transactions and private keys (so require a particular block\n> chain to test against). Brilliant ideas on a simple data-driven format\n> welcome.\n\nUltraprune changes the block validation mechanism to only use a set of\ncoins and the latest block pointer as state. This state is represented\nby an abstract class with several implementations. It would be easy to\nhave a testset run with a memory-backed coin set as state, with the\nlist of coins and blocks loaded from a file.\n\n-- \nPieter"
            },
            {
                "author": "Matt Corallo",
                "date": "2012-07-31T14:39:45",
                "message_text_only": "On Sun, 2012-07-29 at 20:52 -0400, Gavin Andresen wrote:\n> > Is there interest to port more tests (P2SH, checksig, checkmultisig,\n> > block verification, maybe even DoS rules) into data-driven format? It\n> > might be something that I'd like to help with if pull requests in that\n> > direction are welcome.\n> \n> Yes, more tests are definitely welcome.\n> \n> check*sig tests are tricky, because they have to refer to previous\n> unspent transactions and private keys (so require a particular block\n> chain to test against). Brilliant ideas on a simple data-driven format\n> welcome.\n> \n> block verification tests would be great; a collection of good/bad\n> block chains, starting from a common chain (maybe the testnet3\n> tesnet-in-a-box chain) would be very useful for regression testing.\n> \n\nI wrote a simple block chain tester (that is capable of forking,\nchecking invalid blocks, etc) as a part of the bitcoinj test suite.  Its\nmore targeted at testing bitcoinj directly and keeping the bitcoinj test\nsuite light weight, so if it were to be more generic some tweaks could\nbe done (not requiring tweaking the minimum difficulty/genesis block\nhash/etc would be first).  It doesn't have that many test cases yet, but\nit is capable of sanity-testing reorgs/etc.  Its mostly the first two\ncommits listed at\nhttp://code.google.com/r/bluemattme-bitcoinj/source/list?name=fullverif\n\nMatt"
            }
        ],
        "thread_summary": {
            "title": "script tests - invalid script in script_valid.json?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Amir Taaki",
                "Gavin Andresen",
                "Matt Corallo",
                "Stefan Thomas",
                "Pieter Wuille"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 11541
        }
    },
    {
        "title": "[Bitcoin-development] BIP 22 - getmemorypool",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-07-30T20:26:12",
                "message_text_only": "Hi,\n\nluke-jr wants me to split this BIP into 3 separate BIPs because he says that other devs felt it was too unfocused and covered too many topics. However this discussion took place on IRC, and I never saw any of it to ascertain what happened (BIP 1 says drafts should be evaluated on the mailing list).\n\nI think a discussion of BIP 22 perhaps did happen on the mailing list, but I don't remember it. Sorry if that's the case.\n\nAnyway before granting the permission to allow this proposal to be pared down, and new BIPs granted for the non-core parts of this proposal, I want to know what people think. I'm not a miner myself, so I'm prescient of my lack of knowledge in the topic.\n\n\nhttps://en.bitcoin.it/wiki/BIP_0022\n\nThanks"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-07-30T20:30:59",
                "message_text_only": "On Monday, July 30, 2012 8:26:12 PM Amir Taaki wrote:\n> https://en.bitcoin.it/wiki/BIP_0022\n\nNote that the Pooled Mining parts have already been moved to:\n\thttps://en.bitcoin.it/wiki/BIP_GMPPM\n\nIt just needs a number assigned (as the last part)."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-07-30T20:32:25",
                "message_text_only": "On Mon, Jul 30, 2012 at 4:26 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Hi,\n>\n> luke-jr wants me to split this BIP into 3 separate BIPs because he says that other devs felt it was too unfocused and covered too many topics. However this discussion took place on IRC, a\n\nIt actually took place on this list:\nhttp://sourceforge.net/mailarchive/forum.php?thread_name=20120612105038.GA29784%40vps7135.xlshosting.net&forum_name=bitcoin-development\n\nIt just took some IRC prodding to get Luke to move in the direction of\nbreaking it up to get the optional parts that Pieter objected to out\nof the spec.\n\nPerhaps other people missed it too... so discussing it more sounds\nfine if anyone objects."
            }
        ],
        "thread_summary": {
            "title": "BIP 22 - getmemorypool",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Gregory Maxwell",
                "Amir Taaki"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 1664
        }
    }
]