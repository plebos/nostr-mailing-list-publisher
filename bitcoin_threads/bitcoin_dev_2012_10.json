[
    {
        "title": "[Bitcoin-development] Bitcoin Testing Project",
        "thread_messages": [
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-01T13:52:33",
                "message_text_only": "Hi guys.\n\nSo, as I mentioned on the bitcointalk.org forums thread about the\nfoundation, I want to get involved in the QA side of bitcoin\ndevelopment. I've done functional testing in the video game industry for\nyears. I've read all the messages in this thread, but I'm left unclear how\nI can most effectively and quickly being helping out. Could I get a bit of\na directional nudge?\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> Hi Gavin,\n>\n> Sorry for the delayed response, I wanted to take a couple of days to\n> reflect on your email.\n>\n> On 26/09/2012 19:09, Gavin Andresen wrote:\n>\n>\n> And their are other methods too.\n>\n>\n>\n> The GUI::Test package for perl will allow this to be greatly\n> automated. (I have done this before on the localisation of photoshop.)\n>\n>\n>\n> this why we need detailed testscripts and plans.  so we know what has\n> and hasnt been done. The more boring the task the more work that needs\n> to go into testcase development.  This is the area I see as my\n> greatest failing last time.  I have a large number of virtual machines\n> and should have at least this work.  But we need very detailed\n> testcases.  with decent testplans just downloading the software,\n> syncing the block chain, syncing an existing wallet, rescanning the\n> blockchain and verifying the balance would cover a large number of\n> tests.  The idea behind having lots of very specific testcases is you\n> get to see what tests have not been run.\n>\n>\n>\n> I understand your concern, however I have taken a couple of days to\n> reflect on this and I still strongly feel that in order to make sure\n> that this sticks, and is still useful in 1 years time we need to lay\n> proper foundations. Those foundations are not word documents,\n> spreadsheets, etc.  they are selecting the right tools for the job.\n>\n> We can gain so much benefit from using 3rd party software.\n> (bettermeans would rock if it wasnt rotting)\n>\n> I am sure you could do your coding work just using vi, but an sdk\n> makes it much easier and allows you to work in a more productive manner.\n>\n> I have had a couple of off list emails with some testers and they also\n> feel that it is very important to make sure we have a sound foundation\n> (mantis is so much more than just a bug reporting tool, I see the bug\n> reporting functionality as secondary to the main test run\n> functionality - but it doesnt have to be mantis based, we do need\n> workflow and testcase software though - and proper software for this\n> is much better than just a massive google doc.) however I am checking\n> out some other software that has been recommended.  It will be very\n> hard to change 'the process' once we have something we are used too\n> (just look at the current resistance) I promise nothing will change\n> for the dev team.  But test does need other tools, and processes.\n>\n> If you feel that strongly that I am going about this the wrong way, I\n> am happy to step back and let someone else sort it out (I will still\n> do all the testing I possibly can). I would feel that this would be a\n> real shame and we have the chance to setup requirements to\n> functionality to tests all with traceability. why not do it right from\n> the start?\n>\n> I will open up my vps' somepoint over the next few days and you can\n> see what I mean. I will setup a fake git project, and sort out the\n> interactions.\n>\n>\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v2.0.17 (MingW32)\n> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/\n>\n> iQEcBAEBAgAGBQJQZz1pAAoJEFvEB9dQFvtQRLkIAJtPCkW1R9vmMPY9u4o+ET1t\n> w4pV/+W2PXo2p86HnljCIPLV/cua/1I/EJp7XR7s145Nj4KZUbzHGhvUUmwDOHW2\n> TGvJs+HO1bjsJfh4pWEb6PXcW3TguZxZSt5/rBAAI/5BeomSuRcZOdoV87D1xnK8\n> TSlgaseWrJcpKLO30/FQA3QnH/bjJ4OBmtHp8WaOtSnfww9Zbb5VYca37O15c2U4\n> 2d0RUunDg1w2kRbkKjztxr3YasSOX+07Uvj4d5Lw7zgA0U93krNWVT1Ypo94dNJ7\n> 6SyKi30UuqDdJ9XxZrMB/LBVNGOLlIBNWL++ocu5GFnOn9pnw57ZMBZM5g6YDpo=\n> =ekQ/\n> -----END PGP SIGNATURE-----\n>\n>\n> ------------------------------------------------------------------------------\n> How fast is your code?\n> 3 out of 4 devs don\\\\\\'t know how their code performs in production.\n> Find out how slow your code is with AppDynamics Lite.\n> http://ad.doubleclick.net/clk;262219672;13503038;z?\n> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121001/1d4c561d/attachment.html>"
            },
            {
                "author": "steve",
                "date": "2012-10-01T14:28:46",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 01/10/2012 14:52, Arklan Uth Oslin wrote:\n> Hi guys.\n> \n> So, as I mentioned on the bitcointalk.org forums thread about the \n> foundation, I want to get involved in the QA side of bitcoin \n> development. I've done functional testing in the video game\n> industry for years.\n\nNice one, I worked in games for quite a few years. (before getting\ninto finance then pentesting) there are about 6 keen testers now.\nmaybe we should get a bitcoin-test mailing list, where we can discuss\nstuff without disturbing the dev team.\n\n> I've read all the messages in this thread, but I'm left unclear\n> how I can most effectively and quickly being helping out. Could I\n> get a bit of a directional nudge?\n\nGreat question... for me I feel structure is the most important thing\nto sort out first.  However we desperately need detailed testcases for\nthe release of a new version. - Not too much on the change log stuff,\nmore on the noddy stuff (as gavin points out below), downloading and\nmaking sure it works on a non dev machine, make sure the wallet isnt\noverwritten, etc.) doing games qa I imagine this would be an ideal\nplace for you to start.  I have a MSDN and TechNet licence so if you\nneed some reference ms virtual machines I can help you out.\n\nHowever we need some testcase software.  Please check out what was\ndone on bettermeans for the stuff I was planning out...\n\nIt details everything from recompense and testcases. bettermeans kinda\ndied a death though...\n\ncheck out:\n\nBitcoin over all-\nhttps://secure.bettermeans.com/projects/4180/wiki/Page_index\ndiscussion\nhttps://secure.bettermeans.com/projects/4180/boards\n\n0.7\nhttps://secure.bettermeans.com/projects/4256/boards\nand\nhttps://secure.bettermeans.com/projects/4256/wiki\n\nI still have the testcases, but until we get some proper testcase\nsoftware I am loathed to publish them in a half arsed format. (they\nworked well on bettermeans, then just vanished one day...) what\ntestcase software are you familiar with?\n\napart from that, what do you feel you can do for the project? how long\nhave you been involved in bitcoin?  It may well be worth reading up\nall the dev stuff on the wiki so you can get you head around how the\nbitcoin protocol is different from the daemon and qt client. What do\nyou think you can and will enjoy doing? What is your skill set in\nregard to networking, crypto and operating systems. (not that you need\nany, in any we still want and need you. :)\n\nthere really is room for you to do whatever role you want, and as\nlittle or as much as you want - however funding is now a very tricky\nissue. so much so that I am not sure I want anything to do with\nit(distribution of coin based on work.). - I just paid for some logo\nspec work out of my own pocket (for example).  I have some testers i\nknow irl who are willing to work for coin.\n\nNOTE: This response has nothing to do with the bitcoin foundation.  I\nam not a member of the foundation. I do not speak for them or even\nprobably with them. I am still trying to work out how much qa the\nfoundation should be responsible for, and/how it is supposed to work.\nI think the games cert process would be ideal for this.  This however\nthis a discussion that probably wont have my involvement.  (personally\nI believe that the foundation should publish requirements with example\ncode and testcases for each aspect of the reference client. (on\nreference platforms - I do not expect many to agree with this though)\n\nAs a side note, what happens to the donations to the bitcoin testing\nproject? do they get moved over to the foundation? this question is\nbigger than this email. as far as I know they are all on an address\nGavin holds. Actually I would like to be involved in any discussions\nthat would impact QA, does this mean I need to join the foundation or\njust go lone wolf?\n\ntbh I dont really understand foundations.  I always thought they were\njust a tax dodge.\n\nSorry for the long message. :)\n\n> \n> Arklan\n> \n> ---------- As long as there is light, the darkness holds no fear.\n> And yet, even in the deepest black, there is life. - Arklan Uth\n> Oslin\n> \n> I want to leave this world the same way I came into it: backwards\n> and on fire. - Arklan Uth Oslin\n> \n> \n> \n> On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net>\n> wrote:\n> \n> Hi Gavin,\n> \n> Sorry for the delayed response, I wanted to take a couple of days\n> to reflect on your email.\n> \n> On 26/09/2012 19:09, Gavin Andresen wrote:\n> \n> \n> And their are other methods too.\n> \n> \n> \n> The GUI::Test package for perl will allow this to be greatly \n> automated. (I have done this before on the localisation of\n> photoshop.)\n> \n> \n> \n> this why we need detailed testscripts and plans.  so we know what\n> has and hasnt been done. The more boring the task the more work\n> that needs to go into testcase development.  This is the area I see\n> as my greatest failing last time.  I have a large number of virtual\n> machines and should have at least this work.  But we need very\n> detailed testcases.  with decent testplans just downloading the\n> software, syncing the block chain, syncing an existing wallet,\n> rescanning the blockchain and verifying the balance would cover a\n> large number of tests.  The idea behind having lots of very\n> specific testcases is you get to see what tests have not been run.\n> \n> \n> \n> I understand your concern, however I have taken a couple of days\n> to reflect on this and I still strongly feel that in order to make\n> sure that this sticks, and is still useful in 1 years time we need\n> to lay proper foundations. Those foundations are not word\n> documents, spreadsheets, etc.  they are selecting the right tools\n> for the job.\n> \n> We can gain so much benefit from using 3rd party software. \n> (bettermeans would rock if it wasnt rotting)\n> \n> I am sure you could do your coding work just using vi, but an sdk \n> makes it much easier and allows you to work in a more productive\n> manner.\n> \n> I have had a couple of off list emails with some testers and they\n> also feel that it is very important to make sure we have a sound\n> foundation (mantis is so much more than just a bug reporting tool,\n> I see the bug reporting functionality as secondary to the main test\n> run functionality - but it doesnt have to be mantis based, we do\n> need workflow and testcase software though - and proper software\n> for this is much better than just a massive google doc.) however I\n> am checking out some other software that has been recommended.  It\n> will be very hard to change 'the process' once we have something we\n> are used too (just look at the current resistance) I promise\n> nothing will change for the dev team.  But test does need other\n> tools, and processes.\n> \n> If you feel that strongly that I am going about this the wrong way,\n> I am happy to step back and let someone else sort it out (I will\n> still do all the testing I possibly can). I would feel that this\n> would be a real shame and we have the chance to setup requirements\n> to functionality to tests all with traceability. why not do it\n> right from the start?\n> \n> I will open up my vps' somepoint over the next few days and you\n> can see what I mean. I will setup a fake git project, and sort out\n> the interactions.\n> \n> \n>> \n>> \n>> ------------------------------------------------------------------------------\n>>\n>> \nHow fast is your code?\n>> 3 out of 4 devs don\\\\\\'t know how their code performs in\n>> production. Find out how slow your code is with AppDynamics\n>> Lite. http://ad.doubleclick.net/clk;262219672;13503038;z? \n>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html \n>> _______________________________________________ \n>> Bitcoin-development mailing list \n>> Bitcoin-development at lists.sourceforge.net \n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n> \n> \n> \n> ------------------------------------------------------------------------------\n>\n> \nGot visibility?\n> Most devs has no idea what their production app looks like. Find\n> out how fast your code is with AppDynamics Lite. \n> http://ad.doubleclick.net/clk;262219671;13503038;y? \n> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJQaaieAAoJEFvEB9dQFvtQUi0H/3Eh72DqxwBt6AeNos/hJNqQ\nZowMNFRupJQM301EJ7SPQmcnVuc3RF2Jw//ckpAqdpkqhHCgGO9HX/q+Ic2A9erQ\nCfKbUOwQgqKuLQTZ8eT5UMh969Uw8PMazo711d2I23etU0VhSK/MvjB5IiYIq5fB\nRJdCEluwvACaiftqfm4RA9HXXJGMnsZtlSWjVQCkg2FyYZKfpctEFdGCg6R8IaP7\nypyglR7TfygcjhUMHeWkQQCP2m2gBOHpx9H99uNBosF+6pLBhCiGUrwVkl8HUiiN\n4YfhsvoRQ0BWNgvO9wH1H4EyyZtJsE7S926BNkhd4uewWGV/qe8gML+uJRstPDg=\n=L66i\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-10-01T16:52:13",
                "message_text_only": "I'm a big proponent of a testing project.\n\nI think if one could self organize that Gavin and team wanted to bless we\ncould put up some BTC as bounties or funding. We won't have our heads\naround the foundation budget for a few more weeks, but self-organization is\noften slower than budgeting. :)\n\nThis is just my opinion, but I would like very, very much to move the\ncurrent specification into unit tests so that anyone could validate their\nalternate bitcoin implementation. This is a lot of work, some of which has\nbeen done, much of which hasn't.\n\nSo, my two cents, plus an offer to bring it up at our next budgeting\nmeeting.\n\nPeter\n\n\nOn Mon, Oct 1, 2012 at 7:28 AM, steve <steve at mistfpga.net> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> On 01/10/2012 14:52, Arklan Uth Oslin wrote:\n> > Hi guys.\n> >\n> > So, as I mentioned on the bitcointalk.org forums thread about the\n> > foundation, I want to get involved in the QA side of bitcoin\n> > development. I've done functional testing in the video game\n> > industry for years.\n>\n> Nice one, I worked in games for quite a few years. (before getting\n> into finance then pentesting) there are about 6 keen testers now.\n> maybe we should get a bitcoin-test mailing list, where we can discuss\n> stuff without disturbing the dev team.\n>\n> > I've read all the messages in this thread, but I'm left unclear\n> > how I can most effectively and quickly being helping out. Could I\n> > get a bit of a directional nudge?\n>\n> Great question... for me I feel structure is the most important thing\n> to sort out first.  However we desperately need detailed testcases for\n> the release of a new version. - Not too much on the change log stuff,\n> more on the noddy stuff (as gavin points out below), downloading and\n> making sure it works on a non dev machine, make sure the wallet isnt\n> overwritten, etc.) doing games qa I imagine this would be an ideal\n> place for you to start.  I have a MSDN and TechNet licence so if you\n> need some reference ms virtual machines I can help you out.\n>\n> However we need some testcase software.  Please check out what was\n> done on bettermeans for the stuff I was planning out...\n>\n> It details everything from recompense and testcases. bettermeans kinda\n> died a death though...\n>\n> check out:\n>\n> Bitcoin over all-\n> https://secure.bettermeans.com/projects/4180/wiki/Page_index\n> discussion\n> https://secure.bettermeans.com/projects/4180/boards\n>\n> 0.7\n> https://secure.bettermeans.com/projects/4256/boards\n> and\n> https://secure.bettermeans.com/projects/4256/wiki\n>\n> I still have the testcases, but until we get some proper testcase\n> software I am loathed to publish them in a half arsed format. (they\n> worked well on bettermeans, then just vanished one day...) what\n> testcase software are you familiar with?\n>\n> apart from that, what do you feel you can do for the project? how long\n> have you been involved in bitcoin?  It may well be worth reading up\n> all the dev stuff on the wiki so you can get you head around how the\n> bitcoin protocol is different from the daemon and qt client. What do\n> you think you can and will enjoy doing? What is your skill set in\n> regard to networking, crypto and operating systems. (not that you need\n> any, in any we still want and need you. :)\n>\n> there really is room for you to do whatever role you want, and as\n> little or as much as you want - however funding is now a very tricky\n> issue. so much so that I am not sure I want anything to do with\n> it(distribution of coin based on work.). - I just paid for some logo\n> spec work out of my own pocket (for example).  I have some testers i\n> know irl who are willing to work for coin.\n>\n> NOTE: This response has nothing to do with the bitcoin foundation.  I\n> am not a member of the foundation. I do not speak for them or even\n> probably with them. I am still trying to work out how much qa the\n> foundation should be responsible for, and/how it is supposed to work.\n> I think the games cert process would be ideal for this.  This however\n> this a discussion that probably wont have my involvement.  (personally\n> I believe that the foundation should publish requirements with example\n> code and testcases for each aspect of the reference client. (on\n> reference platforms - I do not expect many to agree with this though)\n>\n> As a side note, what happens to the donations to the bitcoin testing\n> project? do they get moved over to the foundation? this question is\n> bigger than this email. as far as I know they are all on an address\n> Gavin holds. Actually I would like to be involved in any discussions\n> that would impact QA, does this mean I need to join the foundation or\n> just go lone wolf?\n>\n> tbh I dont really understand foundations.  I always thought they were\n> just a tax dodge.\n>\n> Sorry for the long message. :)\n>\n> >\n> > Arklan\n> >\n> > ---------- As long as there is light, the darkness holds no fear.\n> > And yet, even in the deepest black, there is life. - Arklan Uth\n> > Oslin\n> >\n> > I want to leave this world the same way I came into it: backwards\n> > and on fire. - Arklan Uth Oslin\n> >\n> >\n> >\n> > On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net>\n> > wrote:\n> >\n> > Hi Gavin,\n> >\n> > Sorry for the delayed response, I wanted to take a couple of days\n> > to reflect on your email.\n> >\n> > On 26/09/2012 19:09, Gavin Andresen wrote:\n> >\n> >\n> > And their are other methods too.\n> >\n> >\n> >\n> > The GUI::Test package for perl will allow this to be greatly\n> > automated. (I have done this before on the localisation of\n> > photoshop.)\n> >\n> >\n> >\n> > this why we need detailed testscripts and plans.  so we know what\n> > has and hasnt been done. The more boring the task the more work\n> > that needs to go into testcase development.  This is the area I see\n> > as my greatest failing last time.  I have a large number of virtual\n> > machines and should have at least this work.  But we need very\n> > detailed testcases.  with decent testplans just downloading the\n> > software, syncing the block chain, syncing an existing wallet,\n> > rescanning the blockchain and verifying the balance would cover a\n> > large number of tests.  The idea behind having lots of very\n> > specific testcases is you get to see what tests have not been run.\n> >\n> >\n> >\n> > I understand your concern, however I have taken a couple of days\n> > to reflect on this and I still strongly feel that in order to make\n> > sure that this sticks, and is still useful in 1 years time we need\n> > to lay proper foundations. Those foundations are not word\n> > documents, spreadsheets, etc.  they are selecting the right tools\n> > for the job.\n> >\n> > We can gain so much benefit from using 3rd party software.\n> > (bettermeans would rock if it wasnt rotting)\n> >\n> > I am sure you could do your coding work just using vi, but an sdk\n> > makes it much easier and allows you to work in a more productive\n> > manner.\n> >\n> > I have had a couple of off list emails with some testers and they\n> > also feel that it is very important to make sure we have a sound\n> > foundation (mantis is so much more than just a bug reporting tool,\n> > I see the bug reporting functionality as secondary to the main test\n> > run functionality - but it doesnt have to be mantis based, we do\n> > need workflow and testcase software though - and proper software\n> > for this is much better than just a massive google doc.) however I\n> > am checking out some other software that has been recommended.  It\n> > will be very hard to change 'the process' once we have something we\n> > are used too (just look at the current resistance) I promise\n> > nothing will change for the dev team.  But test does need other\n> > tools, and processes.\n> >\n> > If you feel that strongly that I am going about this the wrong way,\n> > I am happy to step back and let someone else sort it out (I will\n> > still do all the testing I possibly can). I would feel that this\n> > would be a real shame and we have the chance to setup requirements\n> > to functionality to tests all with traceability. why not do it\n> > right from the start?\n> >\n> > I will open up my vps' somepoint over the next few days and you\n> > can see what I mean. I will setup a fake git project, and sort out\n> > the interactions.\n> >\n> >\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >>\n> >>\n> How fast is your code?\n> >> 3 out of 4 devs don\\\\\\'t know how their code performs in\n> >> production. Find out how slow your code is with AppDynamics\n> >> Lite. http://ad.doubleclick.net/clk;262219672;13503038;z?\n> >> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> >\n> >\n> Got visibility?\n> > Most devs has no idea what their production app looks like. Find\n> > out how fast your code is with AppDynamics Lite.\n> > http://ad.doubleclick.net/clk;262219671;13503038;y?\n> > http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n> >\n> >\n> >\n> > _______________________________________________ Bitcoin-development\n> > mailing list Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v2.0.17 (MingW32)\n> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/\n>\n> iQEcBAEBAgAGBQJQaaieAAoJEFvEB9dQFvtQUi0H/3Eh72DqxwBt6AeNos/hJNqQ\n> ZowMNFRupJQM301EJ7SPQmcnVuc3RF2Jw//ckpAqdpkqhHCgGO9HX/q+Ic2A9erQ\n> CfKbUOwQgqKuLQTZ8eT5UMh969Uw8PMazo711d2I23etU0VhSK/MvjB5IiYIq5fB\n> RJdCEluwvACaiftqfm4RA9HXXJGMnsZtlSWjVQCkg2FyYZKfpctEFdGCg6R8IaP7\n> ypyglR7TfygcjhUMHeWkQQCP2m2gBOHpx9H99uNBosF+6pLBhCiGUrwVkl8HUiiN\n> 4YfhsvoRQ0BWNgvO9wH1H4EyyZtJsE7S926BNkhd4uewWGV/qe8gML+uJRstPDg=\n> =L66i\n> -----END PGP SIGNATURE-----\n>\n>\n> ------------------------------------------------------------------------------\n> Got visibility?\n> Most devs has no idea what their production app looks like.\n> Find out how fast your code is with AppDynamics Lite.\n> http://ad.doubleclick.net/clk;262219671;13503038;y?\n> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121001/bf75a1eb/attachment.html>"
            },
            {
                "author": "steve",
                "date": "2012-10-03T01:15:03",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 01/10/2012 17:52, Peter Vessenes wrote:\n> I'm a big proponent of a testing project.\n\nI am very happy to hear this, however, your actual words are slightly\nevasive. I do not expect you to be up to speed on this. Gavin started\na project called 'the bitcoin testing project' This project solicited\ndonations, about 80 coins last time I checked.  However these 80 odd\ncoins were donated to 'the bitcoin testing project' This would seem to\nbe an official bitcoin (both protocol and client) testing project.  I\nsigned up to work on this, and organise as much as i could of this.\nfor various reasons I did not manage to do the testing I wanted to on\n0.7 i over committed myself.\n\nAre the donations solicited for the 'bitcoin testing project) funds\ngoing to be given to 'the foundation'?\n\nDoes the foundation support 'the bitcoin testing project'? does the\nfoundation have any involvement with 'the bitcoin testing project'?\n\n> \n> I think if one could self organize that Gavin and team wanted to\n> bless we could put up some BTC as bounties or funding. We won't\n> have our heads around the foundation budget for a few more weeks,\n> but self-organization is often slower than budgeting. :)\n\nIm ready to go, more or less.  Please check out the links in my\nprevious emails. I have over 400 testcases (8 platforms * 50 release\ntests) - Also I am not sure what you mean by bless, I take it that is\na euphemism for pay?\n\nI have tried my hardest to get bettermeans to work, but it doesnt.  It\ndoes show quite a lot of work that I have done though. If you were to\nsay to me, 'steve, by monday we need end to end, requirements based\ntesting' It would be done. (I have already spent over 4 months on\nthis)  Leaderless leadership is something I am having a hard time\nwith, bettermeans is excellent at this.  But I have found very little\nin regards to voting and polling that integrates with the project in\nan effortless way like bettermeans.\n\nI understand that the budget from the foundation is something that\nneeds to be worked on and organised.  I offer my services in this area\n(qa only).  I would be happy to submit my cv and refs for this, if\nrequired.\n\nI am now feeling frustrated and useless.  has my last 4 months of work\nbeen for nothing? it feels like it.  I know I bang on about processes\nbut they are sorted, you can only attract talent like Arklan if he has\na process to follow. i feel like a broken record.\n\ntl;dr version\n1 - Will donations to the 'bitcoin testing project' as started by\ngavin going to be given to the foundation?\n2 - Is the work bill hees and myself going to be binned?\n3 - I feel like I have the knowledge and drive to push this, but I\ncant do it on my own.\n4 - Is bill or I entitled to any of the cash raised for 'the bitcoin\ntesting project'\n5 - Do I have to join the foundation to have a say in how the project\n(testing) is done?\n6 - sorry for being so mercenary, but am I going to receive any coin\nfor work I have done?\n7 - It really probably is the time for a bitcoin-test list to appear.\n Is there anything I can do to make this happen?\n\n> \n> This is just my opinion, but I would like very, very much to move\n> the current specification into unit tests so that anyone could\n> validate their alternate bitcoin implementation. This is a lot of\n> work, some of which has been done, much of which hasn't.\n\nhave a look at the stuff in bettermeans.  I personally think we can go\na step further and publish guidelines (similar to RFC's and all the\ntests that we would do against a ref client)\n\nBut I dont want to waste any more time on stuff that is going to be\nignored, life is short.\n\n> \n> So, my two cents, plus an offer to bring it up at our next\n> budgeting meeting.\n\nI accept that offer. and I really appreciate it.  I have some more\nquestions I would like you to ask in regards to QA. (Gavin and I\nskyped about this a while ago and we didnt really come to a\nresolution, weworked out the problems though ;) )\n\nI have an exceptionally detailed qa process (based off the game\ncertification process) - but I have gone on about this at length in\nprevious messages.\n\nI thank you for your email and your involvement with this, but do you\nthink we are closer to getting stuff tested? call my bluff... Not one\nperson has asked for login details to my proposals - and i even have a\nbugzilla version now.\n\nI need to sleep.  sorry if i rambled.\n\nnite nite,\n\nsteve\n\n> \n> Peter\n> \n> \n> On Mon, Oct 1, 2012 at 7:28 AM, steve <steve at mistfpga.net> wrote:\n> \n> On 01/10/2012 14:52, Arklan Uth Oslin wrote:\n>>>> Hi guys.\n>>>> \n>>>> So, as I mentioned on the bitcointalk.org forums thread about\n>>>> the foundation, I want to get involved in the QA side of\n>>>> bitcoin development. I've done functional testing in the\n>>>> video game industry for years.\n> \n> Nice one, I worked in games for quite a few years. (before getting \n> into finance then pentesting) there are about 6 keen testers now. \n> maybe we should get a bitcoin-test mailing list, where we can\n> discuss stuff without disturbing the dev team.\n> \n>>>> I've read all the messages in this thread, but I'm left\n>>>> unclear how I can most effectively and quickly being helping\n>>>> out. Could I get a bit of a directional nudge?\n> \n> Great question... for me I feel structure is the most important\n> thing to sort out first.  However we desperately need detailed\n> testcases for the release of a new version. - Not too much on the\n> change log stuff, more on the noddy stuff (as gavin points out\n> below), downloading and making sure it works on a non dev machine,\n> make sure the wallet isnt overwritten, etc.) doing games qa I\n> imagine this would be an ideal place for you to start.  I have a\n> MSDN and TechNet licence so if you need some reference ms virtual\n> machines I can help you out.\n> \n> However we need some testcase software.  Please check out what was \n> done on bettermeans for the stuff I was planning out...\n> \n> It details everything from recompense and testcases. bettermeans\n> kinda died a death though...\n> \n> check out:\n> \n> Bitcoin over all- \n> https://secure.bettermeans.com/projects/4180/wiki/Page_index \n> discussion https://secure.bettermeans.com/projects/4180/boards\n> \n> 0.7 https://secure.bettermeans.com/projects/4256/boards and \n> https://secure.bettermeans.com/projects/4256/wiki\n> \n> I still have the testcases, but until we get some proper testcase \n> software I am loathed to publish them in a half arsed format.\n> (they worked well on bettermeans, then just vanished one day...)\n> what testcase software are you familiar with?\n> \n> apart from that, what do you feel you can do for the project? how\n> long have you been involved in bitcoin?  It may well be worth\n> reading up all the dev stuff on the wiki so you can get you head\n> around how the bitcoin protocol is different from the daemon and qt\n> client. What do you think you can and will enjoy doing? What is\n> your skill set in regard to networking, crypto and operating\n> systems. (not that you need any, in any we still want and need you.\n> :)\n> \n> there really is room for you to do whatever role you want, and as \n> little or as much as you want - however funding is now a very\n> tricky issue. so much so that I am not sure I want anything to do\n> with it(distribution of coin based on work.). - I just paid for\n> some logo spec work out of my own pocket (for example).  I have\n> some testers i know irl who are willing to work for coin.\n> \n> NOTE: This response has nothing to do with the bitcoin foundation.\n> I am not a member of the foundation. I do not speak for them or\n> even probably with them. I am still trying to work out how much qa\n> the foundation should be responsible for, and/how it is supposed to\n> work. I think the games cert process would be ideal for this.  This\n> however this a discussion that probably wont have my involvement.\n> (personally I believe that the foundation should publish\n> requirements with example code and testcases for each aspect of the\n> reference client. (on reference platforms - I do not expect many to\n> agree with this though)\n> \n> As a side note, what happens to the donations to the bitcoin\n> testing project? do they get moved over to the foundation? this\n> question is bigger than this email. as far as I know they are all\n> on an address Gavin holds. Actually I would like to be involved in\n> any discussions that would impact QA, does this mean I need to join\n> the foundation or just go lone wolf?\n> \n> tbh I dont really understand foundations.  I always thought they\n> were just a tax dodge.\n> \n> Sorry for the long message. :)\n> \n>>>> \n>>>> Arklan\n>>>> \n>>>> ---------- As long as there is light, the darkness holds no\n>>>> fear. And yet, even in the deepest black, there is life. -\n>>>> Arklan Uth Oslin\n>>>> \n>>>> I want to leave this world the same way I came into it:\n>>>> backwards and on fire. - Arklan Uth Oslin\n>>>> \n>>>> \n>>>> \n>>>> On Sat, Sep 29, 2012 at 12:26 PM, steve <steve at mistfpga.net> \n>>>> wrote:\n>>>> \n>>>> Hi Gavin,\n>>>> \n>>>> Sorry for the delayed response, I wanted to take a couple of\n>>>> days to reflect on your email.\n>>>> \n>>>> On 26/09/2012 19:09, Gavin Andresen wrote:\n>>>> \n>>>> \n>>>> And their are other methods too.\n>>>> \n>>>> \n>>>> \n>>>> The GUI::Test package for perl will allow this to be greatly \n>>>> automated. (I have done this before on the localisation of \n>>>> photoshop.)\n>>>> \n>>>> \n>>>> \n>>>> this why we need detailed testscripts and plans.  so we know\n>>>> what has and hasnt been done. The more boring the task the\n>>>> more work that needs to go into testcase development.  This\n>>>> is the area I see as my greatest failing last time.  I have a\n>>>> large number of virtual machines and should have at least\n>>>> this work.  But we need very detailed testcases.  with decent\n>>>> testplans just downloading the software, syncing the block\n>>>> chain, syncing an existing wallet, rescanning the blockchain\n>>>> and verifying the balance would cover a large number of\n>>>> tests.  The idea behind having lots of very specific\n>>>> testcases is you get to see what tests have not been run.\n>>>> \n>>>> \n>>>> \n>>>> I understand your concern, however I have taken a couple of\n>>>> days to reflect on this and I still strongly feel that in\n>>>> order to make sure that this sticks, and is still useful in 1\n>>>> years time we need to lay proper foundations. Those\n>>>> foundations are not word documents, spreadsheets, etc.  they\n>>>> are selecting the right tools for the job.\n>>>> \n>>>> We can gain so much benefit from using 3rd party software. \n>>>> (bettermeans would rock if it wasnt rotting)\n>>>> \n>>>> I am sure you could do your coding work just using vi, but an\n>>>> sdk makes it much easier and allows you to work in a more\n>>>> productive manner.\n>>>> \n>>>> I have had a couple of off list emails with some testers and\n>>>> they also feel that it is very important to make sure we have\n>>>> a sound foundation (mantis is so much more than just a bug\n>>>> reporting tool, I see the bug reporting functionality as\n>>>> secondary to the main test run functionality - but it doesnt\n>>>> have to be mantis based, we do need workflow and testcase\n>>>> software though - and proper software for this is much better\n>>>> than just a massive google doc.) however I am checking out\n>>>> some other software that has been recommended.  It will be\n>>>> very hard to change 'the process' once we have something we \n>>>> are used too (just look at the current resistance) I promise \n>>>> nothing will change for the dev team.  But test does need\n>>>> other tools, and processes.\n>>>> \n>>>> If you feel that strongly that I am going about this the\n>>>> wrong way, I am happy to step back and let someone else sort\n>>>> it out (I will still do all the testing I possibly can). I\n>>>> would feel that this would be a real shame and we have the\n>>>> chance to setup requirements to functionality to tests all\n>>>> with traceability. why not do it right from the start?\n>>>> \n>>>> I will open up my vps' somepoint over the next few days and\n>>>> you can see what I mean. I will setup a fake git project, and\n>>>> sort out the interactions.\n>>>> \n>>>> \n>>>>> \n>>>>> \n>>>>> \n> ------------------------------------------------------------------------------\n>>>>>\n>>>>>\n>\n> \nHow fast is your code?\n>>>>> 3 out of 4 devs don\\\\\\'t know how their code performs in \n>>>>> production. Find out how slow your code is with\n>>>>> AppDynamics Lite.\n>>>>> http://ad.doubleclick.net/clk;262219672;13503038;z? \n>>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n>>>>>\n>>>>> \n_______________________________________________\n>>>>> Bitcoin-development mailing list \n>>>>> Bitcoin-development at lists.sourceforge.net \n>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>\n>>>>\n>>>>\n>>>>\n>>>>\n>\n>>>>> \n-\n------------------------------------------------------------------------------\n>>>> \n>>>> \n> Got visibility?\n>>>> Most devs has no idea what their production app looks like.\n>>>> Find out how fast your code is with AppDynamics Lite. \n>>>> http://ad.doubleclick.net/clk;262219671;13503038;y? \n>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n>>>> \n>>>> \n>>>> \n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net \n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>\n>>>> \n>> \n>> \n>> ------------------------------------------------------------------------------\n>>\n>> \nGot visibility?\n>> Most devs has no idea what their production app looks like. Find\n>> out how fast your code is with AppDynamics Lite. \n>> http://ad.doubleclick.net/clk;262219671;13503038;y? \n>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html \n>> _______________________________________________ \n>> Bitcoin-development mailing list \n>> Bitcoin-development at lists.sourceforge.net \n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n> \n> \n> \n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJQa5GXAAoJEFvEB9dQFvtQUR4H/3o0aOyvF6u4Wi5UUxMtGWXD\nBduuag9jNY/GACFshYs365wWqJcK96GXc/svOx0l/TTv10tw9BboaMpKY2x9gWri\n7DJ+mym1AorgHBlZUgZJy3kQrb5yUCR7MiYU0O28QAqK5aVoklBa6cGQJqQVRa2j\nvm9UrKCOeMbHiNMjagLP3s1tcQxYJUwm8hEuALWjyqsDQ+Rk7j2ndBnfonJLTCDc\nrIy6HhmfAGSCaXFzhH35Ydfl2hV6ASaUHtBSKke3bB/oJ/bA5XspmPPhCkjum4Lo\n4b28i4/O8BTisAsr8N3FYQ17dmD2fu8/gmQt1Rl9MBfWBHPJ9YVIIittk+WhcI0=\n=nER6\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-03T02:02:05",
                "message_text_only": "On Tue, Oct 2, 2012 at 9:15 PM, steve <steve at mistfpga.net> wrote:\n> Im ready to go, more or less.  Please check out the links in my\n> previous emails. I have over 400 testcases (8 platforms * 50 release\n> tests) - Also I am not sure what you mean by bless, I take it that is\n> a euphemism for pay?\n\nPerhaps a bit bluntly here\u2014 but since you seem to be rather boldly\ninsisting on getting paid:\n\nWith all of this testing where can I find the issues you've uncovered?\n Searching on your name/email in the issue tracker reports nothing,\nlikewise I can't find anything in my email (beyond abstract discussion\nof testing)."
            },
            {
                "author": "steve",
                "date": "2012-10-03T03:00:16",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 03/10/2012 03:02, Gregory Maxwell wrote:\n> On Tue, Oct 2, 2012 at 9:15 PM, steve <steve at mistfpga.net> wrote:\n>> Im ready to go, more or less.  Please check out the links in my \n>> previous emails. I have over 400 testcases (8 platforms * 50\n>> release tests) - Also I am not sure what you mean by bless, I\n>> take it that is a euphemism for pay?\n> \n> Perhaps a bit bluntly here\u2014 but since you seem to be rather boldly \n> insisting on getting paid:\n\nthat is not what i was getting at, nor what i meant at all.I am sorry\nit came across this way. Im a bit drunk. (yeah that old excuse) I was\nonly trying to make an example of the quandary that exists, in what\nhappens to the current donations. There are far more deserving people\nwho have a claim on that coin rather than I.\n\nI have stated on more than on occasion (written in public and verbal\nwith gavin) that I would be willing to work for free. But I would love\nto be able to ditch the day job. (however i see that more as services\nthan mining/testing)\n\nrereading what i wrote yeah, fair play i can see how you read my mail\nlike that. it wasnt meant to :/ i feel a bit of a turnip. the tone is\nnot what i meant. it does read pretty mercenary.\n\n> \n> With all of this testing where can I find the issues you've\n> uncovered? Searching on your name/email in the issue tracker\n> reports nothing, likewise I can't find anything in my email (beyond\n> abstract discussion of testing).\n> \n\nThis is a different issue. But I see why you have raised it and I\nwould like to address it. I personally believe you should earn\nbitcoins for writing testcases, executing testcases, passing or\nfailing test cases. in that order (failing a testcase normally\ngenerates a new one therefore encouraging indepth and recorded\ntesting.). QA should not be judged based solely on bug reports - this\nis unfair and will result in race to report bugs.  I have worked on a\nfew projects that have tried it.\n\nThis is one reason we need workflow and testcase software, so we can\nmeasure and compensate people for their work.\n\nAs I have stated in previous emails I should have, but for various\nexcuses did not manage to run a single testcase for 0.7. but I did\nsetup a frame work, and I know some people did do some good work on\n0.7 I believe these people should be compensated from the (limited)\nfunds the project received... something needs to happen with those coins.\n\nI am sorry you find my emails abstract (and therefore meaningless?)\n\nthis is a really confusing time. i dont know if i am doing right from\nwrong. I am trying to lead, without leading... i have always preferred\nbenevolent dictator. I know a number of bitcoin businesses that are\nreally keen to work with the project, but I have no authority, noone\nseems to. Someone should be able to say, nice one, thanks for the\nvm's. maybe use $200 worth of coin to get a technet licence, that\ngives 10 installs of each ms OS. slipstreaming in the service packs\nmeans you can have whatever era pc you want (and the vps providers\nwill allow various configuration of vm's...) then even if you do it by\nhand you can still do 6 or 7 at once...\n\nas for bug reports, give me 1 week from now (168hrs), lets see what i\ncan do. (priority, protocol, daemon, qt ref?) but still process is\nmore important...\n\nI still think that writing and doing testcases should get more coin\nthan bug reports. but from what I have read, the big bounties will be\npaid by the foundation. im not sure if that is true or where i read\nit. (protocol level bugs)\n\nit feels like I am wasting peoples time,and I should get back in my\nbox. so I will.\n\ncontact me off list if you want to have a look at the various workflow\nstuff i have done.\n\ncheers,\n\nsteve\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJQa6pAAAoJEFvEB9dQFvtQ0H8H/jUjvzmsp61w1bmDnHR+KmF4\nLNu7WwVLrTvrT8AHSNh3mClWvMM3muJJA7NMb2WthAgVe3jtrGimfreAlstDsObL\nXNEcGvU6WN1YosH0MkN7hyDl8jnrDFoiH1P5qsMecuZIxwq7Z0vCOHEJ9DPmZilW\nR+G8OmoGcpaeWs9VqXR6zR7Uyz69KaDAQpMRE1GTu3zQP9HSSolciy3ESeJRR9Sd\nyO7EcCGdQot80rOG/VIZ0wkOmzGGm1thzYzayD6Zn2eW4Hw+ME1en9ksIbXJFpSv\nIdgThEm7p5UuBo0jFkbX4Awrf9hfusZSEGWfhZqdASqqkSBnYqLmWF1sLprDRF8=\n=Iv87\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-10-03T05:04:32",
                "message_text_only": "And, finally, when I say \"Ditto to above\" I mean \"I have no idea\", not\n\"nope\". Double oops.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/72c1d5e1/attachment.html>"
            },
            {
                "author": "steve",
                "date": "2012-10-03T16:06:48",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nHi Peter,\n\nThank you for your in depth, forthright and professional response. You\nhave answered my questions.  And you have cleared up a lot of\nconfusion I had in my mind. (and I read ditto as i dont know) I\nappreciate the extra information. :)\n\nThis is a top post and there is nothing inline so i snipped it.\n\ncheers,\n\nsteve\n\nOn 03/10/2012 06:03, Peter Vessenes wrote:\n> Oops, I accidentally didn't reply-all to Steve. I am ccing my\n> detailed response to steve to the list since I think people are\n> wondering about how the Foundation fits in; trash the e-mail if you\n> don't really care. :)\n> \n> On Tue, Oct 2, 2012 at 10:01 PM, Peter Vessenes <peter at coinlab.com>\n> wrote:\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJQbGKXAAoJEFvEB9dQFvtQ5QcIAJR0RlkjUb5Xm09eo7wjV2QV\nIYXbyOBx6bZWox0wxmbygpPL23grEKxlehavf18Q1S6VjdtFs75K5GV83FZb9KPk\nYeB0hz5ht48Ig7uQ3zu7MBCaNerTst+6fQ/k5Uu6l2WKCVwk18WykGrnXMnSTbpM\nqONQCc4HQhOm7sgEsJD9KNp73eGZt/BG0hQAa8zLh2rHA0to8TER9nRUUx+mH0uf\nCj58EXKVz5WI5+G31M/4v4UgRRv3Z7efaVbczrvhvv6DZfVkCpuD6t0kt2ZlcFCn\noO1sKD05/VtC7DZxQvPEvvkikOp8onmue0xCJBvDpG269Xr55qNqGM039Yjy80c=\n=1NTS\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-03T16:11:39",
                "message_text_only": "is it just me, or did peter not send his message to anyone but steve -\ntwice? all i see is his \"and finally...\" then this from steve.\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Wed, Oct 3, 2012 at 10:06 AM, steve <steve at mistfpga.net> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> Hi Peter,\n>\n> Thank you for your in depth, forthright and professional response. You\n> have answered my questions.  And you have cleared up a lot of\n> confusion I had in my mind. (and I read ditto as i dont know) I\n> appreciate the extra information. :)\n>\n> This is a top post and there is nothing inline so i snipped it.\n>\n> cheers,\n>\n> steve\n>\n> On 03/10/2012 06:03, Peter Vessenes wrote:\n> > Oops, I accidentally didn't reply-all to Steve. I am ccing my\n> > detailed response to steve to the list since I think people are\n> > wondering about how the Foundation fits in; trash the e-mail if you\n> > don't really care. :)\n> >\n> > On Tue, Oct 2, 2012 at 10:01 PM, Peter Vessenes <peter at coinlab.com>\n> > wrote:\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v2.0.17 (MingW32)\n> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/\n>\n> iQEcBAEBAgAGBQJQbGKXAAoJEFvEB9dQFvtQ5QcIAJR0RlkjUb5Xm09eo7wjV2QV\n> IYXbyOBx6bZWox0wxmbygpPL23grEKxlehavf18Q1S6VjdtFs75K5GV83FZb9KPk\n> YeB0hz5ht48Ig7uQ3zu7MBCaNerTst+6fQ/k5Uu6l2WKCVwk18WykGrnXMnSTbpM\n> qONQCc4HQhOm7sgEsJD9KNp73eGZt/BG0hQAa8zLh2rHA0to8TER9nRUUx+mH0uf\n> Cj58EXKVz5WI5+G31M/4v4UgRRv3Z7efaVbczrvhvv6DZfVkCpuD6t0kt2ZlcFCn\n> oO1sKD05/VtC7DZxQvPEvvkikOp8onmue0xCJBvDpG269Xr55qNqGM039Yjy80c=\n> =1NTS\n> -----END PGP SIGNATURE-----\n>\n>\n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/13c46b8b/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Testing Project",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "steve",
                "Peter Vessenes",
                "Arklan Uth Oslin",
                "Gregory Maxwell"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 48435
        }
    },
    {
        "title": "[Bitcoin-development] Payment protocol thoughts",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-10-02T16:38:12",
                "message_text_only": "I've been thinking about the requirements for a payment protocol\nlately. It seems we have consensus that we need one of these. Pieter\nhas a gist on the topic here: https://gist.github.com/1237788\n\nIMHO we'll want to move away from \"send X BTC to address Y\" and more\ntowards \"upload to me transactions that send X BTC to outputs\nA,B....F,G\". In this context by output I mean the obvious\ninterpretation of script+value.\n\nThe reasons are privacy and security. Privacy: you don't want people\nto find out if you have an unexpectedly large balance (from the block\nchain). Example worst case scenarios\n\n- in a hypothetical Bitcoin-using country, as most people receive\nincome exactly once a month from their employer, you could potentially\nfind out other peoples salaries. Drama ensues.\n\n- business partners could find out their counterparty has an\nunexpectedly good financial position, messing up negotiations\n\nSecurity:\n\n- some of the outputs could be in a hot wallet, others in cold\nwallets, helping you maintain correct balances between them in real\ntime\n\n- the outputs can be multi-sig scripts\n\nWallets would then craft a series of transactions to try and somewhat\nbalance the size of inputs vs outputs. Because they are separate\ntransactions and all the keys are fresh, there's no way to link them\ntogether into a single payment, especially not if they're broadcast in\nrandom order with some jitter.\n\nThe upside of this is better privacy. The downside is obviously more\ntransactions and therefore more overhead. In theory the sum of tx\noutputs would end up converging to a reasonable \"coin size\" for the\nrecipients, eg, businesses might be happy to receive a lot of money in\na single output, individuals less, children or very poor people maybe\nmuch less.\n\nLet's call payment requests invoices. Here is a brainstorm on other\nfeatures that may be desirable. I'm not suggesting they're all in v1,\njust that we think about them a bit to ensure we don't paint ourselves\ninto a corner.\n\n- Optional list of {signature, certificate} pairs. SSL certs can be\nembedded into the payment request file itself so they can be checked\ninstantly for wallets that want to show a verified identity, but you\ncan also provide other certificates issued outside the regular SSL CA\nsystem. For example maybe MtGox issues you a \"trusted vendor\"\ncertificate. Maybe the better business bureau issues you a cert, etc.\n\n- Optional expiry time (from sipas gist) so outputs that were never\nsent to can be recycled\n\n- Upload target (URI), where to send the created transactions\n\n- Optional message and branding image/icon that a wallet can display\nto make the transaction history a bit prettier\n\n- Opaque token that the wallet is supposed to copy into the payment.\nThe merchant can use to link invoice with payment. It's technically\nredundant, the output set would identify the invoice too, as could a\ntoken in the upload target URL, but it may be simpler for some\nmerchant implementations\n\n- Ability to specify payment amount[s] in terms of other currencies.\nIf the amount is specified statically it can just be recorded in the\nwallet for informational purposes. If there's a URL provided also, it\nis an endpoint where quotes can be obtained. This allows merchants to\nmake long-lived invoices which are protected against FX volatility.\nDownside: complicates wallets. Upsides: invoices can be kept around\nfor longer.\n\n- Web/human-usable URL for the order so users can, eg, send messages\nto the merchant specific to an order, post a review of the merchant,\netc\n\n- Support for setting up 2-of-3 dispute mediation. Invoices should be\nable to name a list of acceptable mediators and the wallet software\ncan intersect this with a list of mediators acceptable to the user, to\nfind one that works best. The whole mechanism by which merchants and\nusers agree on mediators isn't designed yet but we can at least think\nabout it now. It may be there's a simple design everyone agrees on\nalready.\n\n- Support for requesting recurring payments. Eg, I should be able to\nprovide N sets of M outputs, one set for each payment with a payment\nschedule. Wallets can then ensure they run at the appropriate times to\nkeep up the subscription.\n\n- Suggested tip/service charge. Wallet would give a simple UI to\nadjust this up/down by X percentage points\n\n- Request to sign inputs with SIGHASH_ANYONECANPAY, allowing the\npayment to be a pledge for an assurance contract\n\n- Ability to specify minimum confirmation level of coins that will be\nspent. Some merchants may be OK with you immediately re-spending\nunconfirmed coins. Other merchants will care more and might want you\nto take on the burden of getting your transactions into the chain.\n\n\nOn the payment upload side:\n\n- An optional signature under a stable user key that lets users\noptionally link their payments across merchants. In this way a user\ncan build cross-market reputation which may help them in future, by\nrelaxing confirmation requirements or reducing the chance of being\nasked to enter dispute mediation. Needs more thought.\n\n- Optionally, an invoice for a refund if the merchant chooses to\nrefund the money in the absence of dispute mediation.\n\n- A list of Bitcoin transactions that make payments to the outputs\nrequested in the invoice\n\n- The opaque token provided in the invoice\n\n\n\nRe: format. I would (surprise) strongly suggest protocol buffers over\nJSON. I cannot think of any justification for using JSON (for\nanything) but especially not for data structures that mostly contain\nbinary data like hashes or keys. Protobufs are easier to work with in\ncode, have a more efficient encoding, can be printed/parsed from ASCII\nif you need to (eg for debugging purposes) and have fewer sharp edges\nthan JSON does."
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-10-02T17:43:51",
                "message_text_only": "I agree we need a payment protocol, but instead of thinking of all of the\nthings we might possibly want I would like to solve a few boring problems\nthat we have right now.\n\nAbsolutely critical:\n\n+ Bitcoin addresses by themselves are insecure against man-in-the-middle\nattacks. We need a payment protocol so if you get a donation link for\n\"Bitcoin Foundation\" in an email message and click on it you can be\nreasonably certain that your coins will actually go to the Foundation and\nnot some hacker at your ISP that modified the email message.\n\n+ After sending payment I should have a receipt that proves I followed the\npayee's instructions, so if the payee says they never received the funds I\ncan prove that it wasn't my fault.\n\n+ Protocol for gathering signatures from multiple devices\n(extension/variation of the basic payment protocol, I think).\n\nNot absolutely necessary, but I think v1 should have it anyway:\n\n+ Where-to-send-refund information included with payments, so\noverpayments/refunds can be handled efficiently and displayed intelligently\nin the customer's wallet.\n\n\nEverything else I think can wait.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/1d143bbc/attachment.html>"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-10-02T17:52:04",
                "message_text_only": "There are tons of scenarios, some discussed here on this list previously,\nwhich would benefit from out of band messages and notes.\n\nThis is small, but an interesting tidbit from BTC Foundation payments;\nroughly 3-5% of our initial members double-spent. WOW, that's terrible.\n\nI presume that's because they use web wallets without double-click\nprevention. But, seriously! A tiny UI issue that's a big deal in an\nirrevocable payment system.\n\n\nOn Tue, Oct 2, 2012 at 10:43 AM, Gavin Andresen <gavinandresen at gmail.com>wrote:\n\n> I agree we need a payment protocol, but instead of thinking of all of the\n> things we might possibly want I would like to solve a few boring problems\n> that we have right now.\n>\n> Absolutely critical:\n>\n> + Bitcoin addresses by themselves are insecure against man-in-the-middle\n> attacks. We need a payment protocol so if you get a donation link for\n> \"Bitcoin Foundation\" in an email message and click on it you can be\n> reasonably certain that your coins will actually go to the Foundation and\n> not some hacker at your ISP that modified the email message.\n>\n>\nI'm trying but can't think of a lightweight solution to this off the top of\nmy head. Not that that proves much.\n\n\n> + After sending payment I should have a receipt that proves I followed the\n> payee's instructions, so if the payee says they never received the funds I\n> can prove that it wasn't my fault.\n>\n>\n+ Protocol for gathering signatures from multiple devices\n> (extension/variation of the basic payment protocol, I think).\n>\n> With the foundation trying to operate without bank accounts, I think it\ncomes into clarity for me just how innovative and incredibly awesome this\nwould be for financial controls for companies. Imagine the bookkeeper\ninputting payments, and the owner (or 2 of 3 owners) approving them. I can\neven imagine large member groups having 2/3 or majority spend rules.\n\nWhen we talk about stuff like this, I come back around to thinking there\nshould be many different GUIs -- this use case is more business-y, it's\nstuff like this that I always think about the bitcoin testing project\nhelping provide -- a standard backend that a bookkeeping GUI could go on\ntop of..\n\n\n> Not absolutely necessary, but I think v1 should have it anyway:\n>\n> + Where-to-send-refund information included with payments, so\n> overpayments/refunds can be handled efficiently and displayed intelligently\n> in the customer's wallet.\n>\n>\n> Everything else I think can wait.\n>\n> --\n> --\n> Gavin Andresen\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/46787c97/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-10-02T18:07:05",
                "message_text_only": "On Tue, Oct 2, 2012 at 1:52 PM, Peter Vessenes <peter at coinlab.com> wrote:\n> This is small, but an interesting tidbit from BTC Foundation payments;\n> roughly 3-5% of our initial members double-spent. WOW, that's terrible.\n\nTo be specific, do you mean\n\na) paid twice\n     or\nb) sent BF coins, then sent the same coins elsewhere\n?\n\nDouble-spend is a specific technical term....\n\n--\nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-10-02T22:35:05",
                "message_text_only": "I meant sent twice, a.\n\nNo double-spends that I'm aware of. Sorry for the loose verbiage!\n\nPeter\n\nOn Tue, Oct 2, 2012 at 11:07 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Tue, Oct 2, 2012 at 1:52 PM, Peter Vessenes <peter at coinlab.com> wrote:\n> > This is small, but an interesting tidbit from BTC Foundation payments;\n> > roughly 3-5% of our initial members double-spent. WOW, that's terrible.\n>\n> To be specific, do you mean\n>\n> a) paid twice\n>      or\n> b) sent BF coins, then sent the same coins elsewhere\n> ?\n>\n> Double-spend is a specific technical term....\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n\n\n\n-- \n------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121002/e448bd63/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-02T22:44:53",
                "message_text_only": "I think it's worth pondering the different things we may want in\nfuture, even if that future is quite far out, just to ensure we have a\nrobust design that won't box us in later. Brainstorming feature ideas\nnow doesn't commit anyone to implementing them, but it may help\nimprove the final v1 design.\n\n> + Bitcoin addresses by themselves are insecure against man-in-the-middle\n> attacks.\n\nA simple way to solve this problem is just use the SSL identity of the\nserver that is taking part in the protocol, but it's not much harder\nto embed a signature + cert chain into the invoice itself. And once\nyou're doing that, allowing several different sigs/cert chains is\npretty easy. It means you keep the design open to cases where SSL may\nnot be appropriate. Eg, you could create invoices signed by your\nweb-of-trust identity, or some non-SSL Bitcoin specific verification\nsystem.\n\nNone of those things have to actually be implemented, but by\nconsidering them now we can make the protocol more future prooof.\n\n> + After sending payment I should have a receipt that proves I followed the\n> payee's instructions, so if the payee says they never received the funds I\n> can prove that it wasn't my fault.\n\nA signed invoice + the blockchain transactions does this, BUT with a\nmajor caveat: if you have not set up dispute mediation, there is\nnobody to prove faultlessness to.\n\nSo I'm not sure this would be very useful. Supporting real dispute\nmediation seems more practical, but also more work.\n\n> + Protocol for gathering signatures from multiple devices\n> (extension/variation of the basic payment protocol, I think).\n\nThis would be nice, I think invoices could be wrapped by another\nprotocol that handles it. I'm not sure it needs to be a part of the\ncore payment protocol. There are lots of different ways to implement\nthis and I'm not sure there's agreement on what it should look like -\nsomebody needs to build a \"proprietary\" implementation first."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-02T22:52:23",
                "message_text_only": "On Tue, Oct 2, 2012 at 6:44 PM, Mike Hearn <mike at plan99.net> wrote:\n> A simple way to solve this problem is just use the SSL identity of the\n> server that is taking part in the protocol, but it's not much harder\n\nSSL itself (as opposed to using the certs as you suggest) is not\nnon-reputablable, so it's not enough for the below concerns\n\n> A signed invoice + the blockchain transactions does this, BUT with a\n> major caveat: if you have not set up dispute mediation, there is\n> nobody to prove faultlessness to.\n\nTo their prospective customer base.  \"I can prove to the public that\nyou ripped me off\" is protective, even if there isn't formal direct\nremedy available."
            }
        ],
        "thread_summary": {
            "title": "Payment protocol thoughts",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Mike Hearn",
                "Peter Vessenes",
                "Gregory Maxwell",
                "Gavin Andresen"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 14571
        }
    },
    {
        "title": "[Bitcoin-development] Fwd: Re:  Bitcoin Testing Project",
        "thread_messages": [
            {
                "author": "steve",
                "date": "2012-10-03T16:15:04",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n\nI think he had a typo in the CC.  here is a forward of the email.\nYou will have to work out the indentations yourselves :)\n\n- -------- Original Message --------\nSubject: Re: [Bitcoin-development] Bitcoin Testing Project\nDate: Tue, 2 Oct 2012 22:01:19 -0700\nFrom: Peter Vessenes <peter at coinlab.com>\nTo: steve <steve at mistfpga.net>\n\nOn Tue, Oct 2, 2012 at 6:15 PM, steve <steve at mistfpga.net> wrote:\n\n> On 01/10/2012 17:52, Peter Vessenes wrote:\n>> I'm a big proponent of a testing project.\n> \n> I am very happy to hear this, however, your actual words are\n> slightly evasive. I do not expect you to be up to speed on this.\n> Gavin started a project called 'the bitcoin testing project' This\n> project solicited donations, about 80 coins last time I checked.\n> However these 80 odd coins were donated to 'the bitcoin testing\n> project' This would seem to be an official bitcoin (both protocol\n> and client) testing project.  I signed up to work on this, and\n> organise as much as i could of this. for various reasons I did not\n> manage to do the testing I wanted to on 0.7 i over committed\n> myself.\n> \n> Are the donations solicited for the 'bitcoin testing project)\n> funds going to be given to 'the foundation'?\n> \n> \n> Not as far as I know; sounds like they should go toward testing.\n> \n> \n> Does the foundation support 'the bitcoin testing project'? does\n> the foundation have any involvement with 'the bitcoin testing\n> project'?\n> \n> I personally support the idea of a testing project. I would like\n> the Foundation to fund it if it can't crowdsource funding from the\n> forums; sounds like so far the support hasn't been enough to get\n> all the work done. The Foundation has no formal role with the\n> bitcoin testing project that I'm aware of.\n> \n> \n> \n> \n>> I think if one could self organize that Gavin and team wanted to \n>> bless we could put up some BTC as bounties or funding. We won't \n>> have our heads around the foundation budget for a few more\n>> weeks, but self-organization is often slower than budgeting. :)\n> \n> Im ready to go, more or less.  Please check out the links in my \n> previous emails. I have over 400 testcases (8 platforms * 50\n> release tests) - Also I am not sure what you mean by bless, I take\n> it that is a euphemism for pay?\n> \n> Wow, that's awesome! I use bless to mean \"Gavin saying that it\n> sounds good.\"\n> \n> \n> I have tried my hardest to get bettermeans to work, but it doesnt.\n> It does show quite a lot of work that I have done though. If you\n> were to say to me, 'steve, by monday we need end to end,\n> requirements based testing' It would be done. (I have already spent\n> over 4 months on this)  Leaderless leadership is something I am\n> having a hard time with, bettermeans is excellent at this.  But I\n> have found very little in regards to voting and polling that\n> integrates with the project in an effortless way like bettermeans.\n> \n> I understand that the budget from the foundation is something that \n> needs to be worked on and organised.  I offer my services in this\n> area (qa only).  I would be happy to submit my cv and refs for\n> this, if required.\n> \n> I am now feeling frustrated and useless.  has my last 4 months of\n> work been for nothing? it feels like it.  I know I bang on about\n> processes but they are sorted, you can only attract talent like\n> Arklan if he has a process to follow. i feel like a broken record.\n> \n> I'm a little late to this conversation, so I don't know what to say\n> in response. I will answer your questions below, though.\n> \n> \n> tl;dr version 1 - Will donations to the 'bitcoin testing project'\n> as started by gavin going to be given to the foundation?\n> \n> \n> I don't expect so, although we'd take them if whoever is in charge\n> of the testing project wants to do so. I'd expect that if the\n> testing project is good and community approved and supported by the\n> dev team the funding flow would go the other way, but we'll need to\n> wait for budgets to get finished.\n> \n> \n> 2 - Is the work bill hees and myself going to be binned?\n> \n> \n> I have no idea whatsoever, I would guess that's up to you and bill\n> hees and the dev team.\n> \n> \n> 3 - I feel like I have the knowledge and drive to push this, but I \n> cant do it on my own.\n> \n> \n> Totally understand the feeling!\n> \n> \n> 4 - Is bill or I entitled to any of the cash raised for 'the\n> bitcoin testing project'\n> \n> \n> I have no idea what the bitcoin testing project finance situation\n> is.\n> \n> \n> 5 - Do I have to join the foundation to have a say in how the\n> project (testing) is done?\n> \n> \n> Nope\n> \n> \n> 6 - sorry for being so mercenary, but am I going to receive any\n> coin for work I have done?\n> \n> \n> Ditto to above\n> \n> \n> 7 - It really probably is the time for a bitcoin-test list to\n> appear. Is there anything I can do to make this happen?\n> \n> I don't have much to do with this.\n> \n> \n>> This is just my opinion, but I would like very, very much to\n>> move the current specification into unit tests so that anyone\n>> could validate their alternate bitcoin implementation. This is a\n>> lot of work, some of which has been done, much of which hasn't.\n> \n> have a look at the stuff in bettermeans.  I personally think we can\n> go a step further and publish guidelines (similar to RFC's and all\n> the tests that we would do against a ref client)\n> \n> \n> Cool, I will check it out. I agree with the RFC oriented approach,\n> or perhaps a canonical test suite for validation and verification.\n> \n> \n> But I dont want to waste any more time on stuff that is going to\n> be ignored, life is short.\n> \n> \n>> So, my two cents, plus an offer to bring it up at our next \n>> budgeting meeting.\n> \n> I accept that offer. and I really appreciate it.  I have some more \n> questions I would like you to ask in regards to QA. (Gavin and I \n> skyped about this a while ago and we didnt really come to a \n> resolution, weworked out the problems though ;) )\n> \n> I have an exceptionally detailed qa process (based off the game \n> certification process) - but I have gone on about this at length\n> in previous messages.\n> \n> I thank you for your email and your involvement with this, but do\n> you think we are closer to getting stuff tested? call my bluff...\n> Not one person has asked for login details to my proposals - and i\n> even have a bugzilla version now.\n> \n> I need to sleep.  sorry if i rambled.\n> \n> nite nite,\n> \n> steve\n> \n> \n> Thanks for all the details. I'm trying to go into extra detail in\n> my response to you because people are still figuring out the\n> Foundation's situation with all things Bitcoin. I can't offer you\n> any promises for your future, but I'm personally really psyched to\n> hear about these tests. I'll let other more knowledgeable folks\n> jump in on the technology side of things.\n> \n> \n> \n>> Peter\n> \n> \n>> On Mon, Oct 1, 2012 at 7:28 AM, steve <steve at mistfpga.net>\n>> wrote:\n> \n>> On 01/10/2012 14:52, Arklan Uth Oslin wrote:\n>>>>> Hi guys.\n>>>>> \n>>>>> So, as I mentioned on the bitcointalk.org forums thread\n>>>>> about the foundation, I want to get involved in the QA side\n>>>>> of bitcoin development. I've done functional testing in\n>>>>> the video game industry for years.\n> \n>> Nice one, I worked in games for quite a few years. (before\n>> getting into finance then pentesting) there are about 6 keen\n>> testers now. maybe we should get a bitcoin-test mailing list,\n>> where we can discuss stuff without disturbing the dev team.\n> \n>>>>> I've read all the messages in this thread, but I'm left \n>>>>> unclear how I can most effectively and quickly being\n>>>>> helping out. Could I get a bit of a directional nudge?\n> \n>> Great question... for me I feel structure is the most important \n>> thing to sort out first.  However we desperately need detailed \n>> testcases for the release of a new version. - Not too much on\n>> the change log stuff, more on the noddy stuff (as gavin points\n>> out below), downloading and making sure it works on a non dev\n>> machine, make sure the wallet isnt overwritten, etc.) doing games\n>> qa I imagine this would be an ideal place for you to start.  I\n>> have a MSDN and TechNet licence so if you need some reference ms\n>> virtual machines I can help you out.\n> \n>> However we need some testcase software.  Please check out what\n>> was done on bettermeans for the stuff I was planning out...\n> \n>> It details everything from recompense and testcases. bettermeans \n>> kinda died a death though...\n> \n>> check out:\n> \n>> Bitcoin over all- \n>> https://secure.bettermeans.com/projects/4180/wiki/Page_index \n>> discussion https://secure.bettermeans.com/projects/4180/boards\n> \n>> 0.7 https://secure.bettermeans.com/projects/4256/boards and \n>> https://secure.bettermeans.com/projects/4256/wiki\n> \n>> I still have the testcases, but until we get some proper\n>> testcase software I am loathed to publish them in a half arsed\n>> format. (they worked well on bettermeans, then just vanished one\n>> day...) what testcase software are you familiar with?\n> \n>> apart from that, what do you feel you can do for the project?\n>> how long have you been involved in bitcoin?  It may well be\n>> worth reading up all the dev stuff on the wiki so you can get you\n>> head around how the bitcoin protocol is different from the daemon\n>> and qt client. What do you think you can and will enjoy doing?\n>> What is your skill set in regard to networking, crypto and\n>> operating systems. (not that you need any, in any we still want\n>> and need you. :)\n> \n>> there really is room for you to do whatever role you want, and\n>> as little or as much as you want - however funding is now a very \n>> tricky issue. so much so that I am not sure I want anything to\n>> do with it(distribution of coin based on work.). - I just paid\n>> for some logo spec work out of my own pocket (for example).  I\n>> have some testers i know irl who are willing to work for coin.\n> \n>> NOTE: This response has nothing to do with the bitcoin\n>> foundation. I am not a member of the foundation. I do not speak\n>> for them or even probably with them. I am still trying to work\n>> out how much qa the foundation should be responsible for, and/how\n>> it is supposed to work. I think the games cert process would be\n>> ideal for this.  This however this a discussion that probably\n>> wont have my involvement. (personally I believe that the\n>> foundation should publish requirements with example code and\n>> testcases for each aspect of the reference client. (on reference\n>> platforms - I do not expect many to agree with this though)\n> \n>> As a side note, what happens to the donations to the bitcoin \n>> testing project? do they get moved over to the foundation? this \n>> question is bigger than this email. as far as I know they are\n>> all on an address Gavin holds. Actually I would like to be\n>> involved in any discussions that would impact QA, does this mean\n>> I need to join the foundation or just go lone wolf?\n> \n>> tbh I dont really understand foundations.  I always thought they \n>> were just a tax dodge.\n> \n>> Sorry for the long message. :)\n> \n>>>>> \n>>>>> Arklan\n>>>>> \n>>>>> ---------- As long as there is light, the darkness holds\n>>>>> no fear. And yet, even in the deepest black, there is life.\n>>>>> - Arklan Uth Oslin\n>>>>> \n>>>>> I want to leave this world the same way I came into it: \n>>>>> backwards and on fire. - Arklan Uth Oslin\n>>>>> \n>>>>> \n>>>>> \n>>>>> On Sat, Sep 29, 2012 at 12:26 PM, steve\n>>>>> <steve at mistfpga.net> wrote:\n>>>>> \n>>>>> Hi Gavin,\n>>>>> \n>>>>> Sorry for the delayed response, I wanted to take a couple\n>>>>> of days to reflect on your email.\n>>>>> \n>>>>> On 26/09/2012 19:09, Gavin Andresen wrote:\n>>>>> \n>>>>> \n>>>>> And their are other methods too.\n>>>>> \n>>>>> \n>>>>> \n>>>>> The GUI::Test package for perl will allow this to be\n>>>>> greatly automated. (I have done this before on the\n>>>>> localisation of photoshop.)\n>>>>> \n>>>>> \n>>>>> \n>>>>> this why we need detailed testscripts and plans.  so we\n>>>>> know what has and hasnt been done. The more boring the task\n>>>>> the more work that needs to go into testcase development.\n>>>>> This is the area I see as my greatest failing last time.  I\n>>>>> have a large number of virtual machines and should have at\n>>>>> least this work.  But we need very detailed testcases.\n>>>>> with decent testplans just downloading the software,\n>>>>> syncing the block chain, syncing an existing wallet,\n>>>>> rescanning the blockchain and verifying the balance would\n>>>>> cover a large number of tests.  The idea behind having lots\n>>>>> of very specific testcases is you get to see what tests\n>>>>> have not been run.\n>>>>> \n>>>>> \n>>>>> \n>>>>> I understand your concern, however I have taken a couple\n>>>>> of days to reflect on this and I still strongly feel that\n>>>>> in order to make sure that this sticks, and is still useful\n>>>>> in 1 years time we need to lay proper foundations. Those \n>>>>> foundations are not word documents, spreadsheets, etc.\n>>>>> they are selecting the right tools for the job.\n>>>>> \n>>>>> We can gain so much benefit from using 3rd party software. \n>>>>> (bettermeans would rock if it wasnt rotting)\n>>>>> \n>>>>> I am sure you could do your coding work just using vi, but\n>>>>> an sdk makes it much easier and allows you to work in a\n>>>>> more productive manner.\n>>>>> \n>>>>> I have had a couple of off list emails with some testers\n>>>>> and they also feel that it is very important to make sure\n>>>>> we have a sound foundation (mantis is so much more than\n>>>>> just a bug reporting tool, I see the bug reporting\n>>>>> functionality as secondary to the main test run\n>>>>> functionality - but it doesnt have to be mantis based, we\n>>>>> do need workflow and testcase software though - and proper\n>>>>> software for this is much better than just a massive google\n>>>>> doc.) however I am checking out some other software that\n>>>>> has been recommended.  It will be very hard to change 'the\n>>>>> process' once we have something we are used too (just look\n>>>>> at the current resistance) I promise nothing will change\n>>>>> for the dev team.  But test does need other tools, and\n>>>>> processes.\n>>>>> \n>>>>> If you feel that strongly that I am going about this the \n>>>>> wrong way, I am happy to step back and let someone else\n>>>>> sort it out (I will still do all the testing I possibly\n>>>>> can). I would feel that this would be a real shame and we\n>>>>> have the chance to setup requirements to functionality to\n>>>>> tests all with traceability. why not do it right from the\n>>>>> start?\n>>>>> \n>>>>> I will open up my vps' somepoint over the next few days\n>>>>> and you can see what I mean. I will setup a fake git\n>>>>> project, and sort out the interactions.\n>>>>> \n>>>>> \n>>>>>> \n>>>>>> \n>>>>>> \n> \n> ------------------------------------------------------------------------------\n>>>>>>\n>>>>>>\n>\n> \n> \n> How fast is your code?\n>>>>>> 3 out of 4 devs don\\\\\\'t know how their code performs in \n>>>>>> production. Find out how slow your code is with \n>>>>>> AppDynamics Lite. \n>>>>>> http://ad.doubleclick.net/clk;262219672;13503038;z? \n>>>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n>>>>>>\n>>>>>>\n>\n>>>>>> \n_______________________________________________\n>>>>>> Bitcoin-development mailing list \n>>>>>> Bitcoin-development at lists.sourceforge.net \n>>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>>\n>>>>>\n>>>>>\n>>>>>\n>>>>>\n>\n>>>>>> \n>>>>>> \n> -\n> \n> ------------------------------------------------------------------------------\n>>>>>\n>>>>>\n>>\n> \nGot visibility?\n>>>>> Most devs has no idea what their production app looks\n>>>>> like. Find out how fast your code is with AppDynamics\n>>>>> Lite. http://ad.doubleclick.net/clk;262219671;13503038;y? \n>>>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html\n>>>>>\n>>>>>\n>>>>>\n>>>>>\n>>>>> \n_______________________________________________\n>>>>> Bitcoin-development mailing list \n>>>>> Bitcoin-development at lists.sourceforge.net \n>>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>>\n>\n>>>>> \n>>>>> \n>>> \n>>> \n>>> \n> ------------------------------------------------------------------------------\n>>>\n>>>\n>\n> \nGot visibility?\n>>> Most devs has no idea what their production app looks like.\n>>> Find out how fast your code is with AppDynamics Lite. \n>>> http://ad.doubleclick.net/clk;262219671;13503038;y? \n>>> http://info.appdynamics.com/FreeJavaPerformanceDownload.html \n>>> _______________________________________________ \n>>> Bitcoin-development mailing list \n>>> Bitcoin-development at lists.sourceforge.net \n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>\n>>> \n> \n> \n> \n> \n\n- -- \n- ------------------------------\n\n[image: CoinLab Logo]PETER VESSENES\nCEO\n\n*peter at coinlab.com * /  206.486.6856  / SKYPE: vessenes\n811 FIRST AVENUE  /  SUITE 480  /  SEATTLE, WA 98104\n\n\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJQbGSIAAoJEFvEB9dQFvtQw1YH+wW3QDMHHV7kf7ZQXvAswv5T\nS2htfdgp1DBYBatoJB9fUU3hgHTEz1UhENH509SjS1/dxHuIxguJkbgmuSdoeB/4\nrDuuYzQVcmym/G1YXvmAkCDk5/fUY4RKlCDGLg9MVMpVFhLIr6Jiwxd0NiIqWm9K\naE2bXijiTIRp1sNFxJh5SZTh9/rz1zF8TU3LBWyCegISwyBH2XeIIbVgORoMDBlm\nn8yKGwPSg5PaH/eWhXR17OUMPbX6xGlMqTmBo7BZDCwPpZU470rkDsPywsn55mAf\nW6EQhFjxpSCnmZwRhrkdM/Le/0ySSUvM4spPu7MlQ6ekGP2gBzzUPbKnTGHzNgQ=\n=r57G\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Fwd: Re:  Bitcoin Testing Project",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "steve"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 17450
        }
    },
    {
        "title": "[Bitcoin-development] Fwd: Re: Bitcoin Testing Project",
        "thread_messages": [
            {
                "author": "Peter Vessenes",
                "date": "2012-10-03T17:09:52",
                "message_text_only": "My reply-all forward was blocked (over 40k), sigh. I figured I'd spammed\nthe list enough for one night.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/42270bf4/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-10-03T17:30:44",
                "message_text_only": "I had hope the Testing Project would be self-organizing, with somebody\ntaking on the QA lead role and figuring out the hard questions like:\n\n+ How to do fundraising?\n+ If/when bitcoins are available, how to decide who gets rewarded for what?\n+ If somebody wants to help, how do they start?\n\nSteve jumped in and started creating a gazillion tests cases, which is\ngreat, but creating test cases isn't the hard part. Creating a\n\"community\" of testing that gets things done is the hard part that I,\nfrankly, don't have time to do.\n\nI hoped that the BetterMeans platform would help, but it sounds like\nit was more of a hindrance than a help.  Ok:  live and learn.  Failed\nexperiment, lets move on...\n\nSo, RE: moving on:  I'd like to tag a 0.7.1rc1 release in the next few\ndays (I'll start another thread about that). How about a very\nshort-term goal of getting these QA deliverables:\n\n1. A process for QA testers to sanity-test release builds, and\nsign-off as \"Tested/problems found\" or \"Tested/OK\"\n2. Some place online I can look to see if all of our supported\nplatforms have been tested before promoting a release candidate to\n\"final release\"\n\n\n\nPS: Thanks to Peter for responding to the \"what's the relationship\nbetween the Foundation and the Testing Project\" (executive summary: no\nrelationship right now).\n\n-- \n--\nGavin Andresen"
            }
        ],
        "thread_summary": {
            "title": "Fwd: Re: Bitcoin Testing Project",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Vessenes",
                "Gavin Andresen"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1614
        }
    },
    {
        "title": "[Bitcoin-development] performance testing for bitcoin",
        "thread_messages": [
            {
                "author": "Ian Miers",
                "date": "2012-10-03T17:38:13",
                "message_text_only": "Whats the best way to get performance numbers for modifications to bitcoin\n? Profiling it while running on testnet might work, but that would take a\nrather long time to get data.\nIs there anyway to speed this up  if we only needed to\nprovide  relative performance between tests. (in a sense a fast performance\nregression test).\n\nAt least in theory, one possibility would be to replay real\nbitcoin transactions  to a test-net-in-a-box network (of maybe a few nodes)\nthat has the real blockchain history loaded into it but then operates at a\nfar reduced hash difficulty in order facilitate running quickly.\n\nAre there existing techniques/scripts for  some kind of perf testing with\ntraffic that at least approximates real world traffic ?\nThe test infrastructure  that ships with bitcoin does not appear to provide\nthis.\n\nThanks,\nIan\n\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/2ff02125/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-10-03T17:43:36",
                "message_text_only": "On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu> wrote:\n> Whats the best way to get performance numbers for modifications to bitcoin ?\n> Profiling it while running on testnet might work, but that would take a\n> rather long time to get data.\n> Is there anyway to speed this up  if we only needed to provide  relative\n> performance between tests. (in a sense a fast performance regression test).\n\nYou have to be specific about what you're measuring, because\n\"performance\" is vague.\n\nYou can measure many aspects of blockchain performance by importing\nblocks via -loadblock=FILE.\n\nOther performance measurements like \"how fast does a block relay\nthrough the network\" cannot be as easily measured.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Ian Miers",
                "date": "2012-10-03T17:57:04",
                "message_text_only": "Script evaluation performance was what I was primarily concerned with.  I'm\nfooling around with adding some new instruction types.\nThe tricky part is that to test how that effects performance, you need to\nbe able to intersperse transactions with the new instructions with existing\nones.  For accuracy, you'd like your simulated traffic to at least\napproximate the real world traffic.\n\n\nAlso, is there any bench-marking / instrumentation in bitcoind ?\n\nIan\nOn Wed, Oct 3, 2012 at 1:43 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu> wrote:\n> > Whats the best way to get performance numbers for modifications to\n> bitcoin ?\n> > Profiling it while running on testnet might work, but that would take a\n> > rather long time to get data.\n> > Is there anyway to speed this up  if we only needed to provide  relative\n> > performance between tests. (in a sense a fast performance regression\n> test).\n>\n> You have to be specific about what you're measuring, because\n> \"performance\" is vague.\n>\n> You can measure many aspects of blockchain performance by importing\n> blocks via -loadblock=FILE.\n>\n> Other performance measurements like \"how fast does a block relay\n> through the network\" cannot be as easily measured.\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121003/1aa6043b/attachment.html>"
            },
            {
                "author": "Joel Joonatan Kaartinen",
                "date": "2012-10-04T09:55:54",
                "message_text_only": "For script evaluation benchmarking, I don't think just a good\napproximation of real-world traffic is enough. You really need to\nbenchmark the worst case scenarios, otherwise you could be creating a\nDoS vulnerability.\n\n- Joel\n\nke, 2012-10-03 kello 13:57 -0400, Ian Miers kirjoitti:\n> Script evaluation performance was what I was primarily concerned\n> with.  I'm fooling around with adding some new instruction types.\n> The tricky part is that to test how that effects performance, you need\n> to be able to intersperse transactions with the new instructions with\n> existing ones.  For accuracy, you'd like your simulated traffic to at\n> least approximate the real world traffic.\n> \n> \n> \n> \n> Also, is there any bench-marking / instrumentation in bitcoind ? \n> \n> \n> Ian\n> On Wed, Oct 3, 2012 at 1:43 PM, Jeff Garzik <jgarzik at exmulti.com>\n> wrote:\n>         On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu>\n>         wrote:\n>         > Whats the best way to get performance numbers for\n>         modifications to bitcoin ?\n>         > Profiling it while running on testnet might work, but that\n>         would take a\n>         > rather long time to get data.\n>         > Is there anyway to speed this up  if we only needed to\n>         provide  relative\n>         > performance between tests. (in a sense a fast performance\n>         regression test).\n>         \n>         \n>         You have to be specific about what you're measuring, because\n>         \"performance\" is vague.\n>         \n>         You can measure many aspects of blockchain performance by\n>         importing\n>         blocks via -loadblock=FILE.\n>         \n>         Other performance measurements like \"how fast does a block\n>         relay\n>         through the network\" cannot be as easily measured.\n>         \n>         --\n>         Jeff Garzik\n>         exMULTI, Inc.\n>         jgarzik at exmulti.com\n> \n> \n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________ Bitcoin-development mailing list Bitcoin-development at lists.sourceforge.net https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Ian Miers",
                "date": "2012-10-04T16:31:11",
                "message_text_only": "Agreed, you need to consider DoS attacks.  I have that in my mind under\nsecurity and not performance. I'd imagine the test methodology would be\ncompletely different since you no longer are attempting to simulate real\nworld traffic.\n\n\nIan\n\nOn Thu, Oct 4, 2012 at 5:55 AM, Joel Joonatan Kaartinen <\njoel.kaartinen at gmail.com> wrote:\n\n> For script evaluation benchmarking, I don't think just a good\n> approximation of real-world traffic is enough. You really need to\n> benchmark the worst case scenarios, otherwise you could be creating a\n> DoS vulnerability.\n>\n> - Joel\n>\n> ke, 2012-10-03 kello 13:57 -0400, Ian Miers kirjoitti:\n> > Script evaluation performance was what I was primarily concerned\n> > with.  I'm fooling around with adding some new instruction types.\n> > The tricky part is that to test how that effects performance, you need\n> > to be able to intersperse transactions with the new instructions with\n> > existing ones.  For accuracy, you'd like your simulated traffic to at\n> > least approximate the real world traffic.\n> >\n> >\n> >\n> >\n> > Also, is there any bench-marking / instrumentation in bitcoind ?\n> >\n> >\n> > Ian\n> > On Wed, Oct 3, 2012 at 1:43 PM, Jeff Garzik <jgarzik at exmulti.com>\n> > wrote:\n> >         On Wed, Oct 3, 2012 at 1:38 PM, Ian Miers <imiers1 at jhu.edu>\n> >         wrote:\n> >         > Whats the best way to get performance numbers for\n> >         modifications to bitcoin ?\n> >         > Profiling it while running on testnet might work, but that\n> >         would take a\n> >         > rather long time to get data.\n> >         > Is there anyway to speed this up  if we only needed to\n> >         provide  relative\n> >         > performance between tests. (in a sense a fast performance\n> >         regression test).\n> >\n> >\n> >         You have to be specific about what you're measuring, because\n> >         \"performance\" is vague.\n> >\n> >         You can measure many aspects of blockchain performance by\n> >         importing\n> >         blocks via -loadblock=FILE.\n> >\n> >         Other performance measurements like \"how fast does a block\n> >         relay\n> >         through the network\" cannot be as easily measured.\n> >\n> >         --\n> >         Jeff Garzik\n> >         exMULTI, Inc.\n> >         jgarzik at exmulti.com\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > Don't let slow site performance ruin your business. Deploy New Relic APM\n> > Deploy New Relic app performance management and know exactly\n> > what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> > Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> > http://p.sf.net/sfu/newrelic-dev2dev\n> > _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121004/ede896ed/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "performance testing for bitcoin",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Ian Miers",
                "Joel Joonatan Kaartinen"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 8870
        }
    },
    {
        "title": "[Bitcoin-development] 0.7.1 release",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2012-10-03T17:49:22",
                "message_text_only": "There is consensus that we need to do a 0.7.1 release to fix the\n\"click on a bitcoin: URI and nothing happens\" bug on Windows.\n\nI would really like to fix the \"I upgraded from a binary running an\nincompatible version of BDB and now I get a DB_RUNRECOVERY error on\nstartup\" problem, too, and I've got a pull request that fixes half of\nthat problem (plus a bunch of other \"my wallet is broken\" cases):\n\n\"Handle corrupt wallets gracefully\" :\nhttps://github.com/bitcoin/bitcoin/pull/1895\n\nThis pull request:\n\n\"Add -reindex, to perform in-place reindexing of blockchain data\nfiles\" : https://github.com/bitcoin/bitcoin/pull/1870\n\n... could be the basis for fixing the other half of the problem (if\nblkindex.dat is bad, delete it and re-create it from the blk000?.dat\nfiles).\n\nAre there any other very-high-priority pull requests that should go\ninto a 0.7.1 release?\n\nI'd like to pull:\n\n\"P2P: Do not request blocks from peers with fewer blocks than us\" :\nhttps://github.com/bitcoin/bitcoin/pull/1834\n\"In listaddressgroupings push down the IsMine check to run on each\ninput.\" : https://github.com/bitcoin/bitcoin/pull/1872\n\n... and these which could be considered fixes to the new raw transactions API:\n\n\"Add redeemScript to raw transactions API\"  :\nhttps://github.com/bitcoin/bitcoin/pull/1818\n\"Add new RPC \"lockunspent\", to prevent spending of selected outputs\" :\nhttps://github.com/bitcoin/bitcoin/pull/1861\n\n--\n--\nGavin Andresen"
            },
            {
                "author": "Wladimir",
                "date": "2012-10-03T18:49:59",
                "message_text_only": "On Wed, Oct 3, 2012 at 7:49 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> There is consensus that we need to do a 0.7.1 release to fix the\n> \"click on a bitcoin: URI and nothing happens\" bug on Windows.\n>\n> \"Handle corrupt wallets gracefully\" :\n> https://github.com/bitcoin/bitcoin/pull/1895\n\nWe definitely need that one in.\n\n>\n> This pull request:\n>\n> \"Add -reindex, to perform in-place reindexing of blockchain data\n> files\" : https://github.com/bitcoin/bitcoin/pull/1870\n\nAgreed\n\n>\n> Are there any other very-high-priority pull requests that should go\n> into a 0.7.1 release?\n\nI think we should also pull #1859 \"add LOCK() for proxy related\ndata-structures\" Missing synchronization primitives are a sure way to\nget reports about random crashes.\n\nThe rest can wait.\n\nWladimir"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-10-03T19:53:41",
                "message_text_only": "On Wed, Oct 3, 2012 at 1:49 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> \"Add -reindex, to perform in-place reindexing of blockchain data\n> files\" : https://github.com/bitcoin/bitcoin/pull/1870\n\nAgree, though needs testing\n\n> \"P2P: Do not request blocks from peers with fewer blocks than us\" :\n> https://github.com/bitcoin/bitcoin/pull/1834\n\nAgree\n\n> \"Add new RPC \"lockunspent\", to prevent spending of selected outputs\" :\n> https://github.com/bitcoin/bitcoin/pull/1861\n\nAgree, though sipa raised a valid issue.  lockunspent, like the\nexisting listunspent, is wallet based.\n\nAs raw transactions might spend outputs _not_ in the wallet,\nlockunspent would miss those.\n\nI think this is OK, because listunspent is already wallet-based, but\nit should be noted.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "0.7.1 release",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Wladimir",
                "Gavin Andresen"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 3033
        }
    },
    {
        "title": "[Bitcoin-development] Electrum security model concerns",
        "thread_messages": [
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-06T16:37:20",
                "message_text_only": "I'm concerned about how the particular security model of electrum is\nbeing described; or rather\u2014 not being described.  The electrum website\nappears to have no security discussion beyond platitudes like \"Secure:\nYour private keys are not shared with the server. You do not have to\ntrust the server with your money.\", \"No scripts: Electrum does not\ndownload any script at runtime. A compromised server cannot compromise\nyour client.\"\n\nClaims like \"You do not have to trust the server with your money\" are\nfactually incorrect.\n\nWhat I would expect is a proper discussion, like \"Understanding the\nbitcoinj security model\":\nhttp://code.google.com/p/bitcoinj/wiki/SecurityModel  (which I don't\nagree with completely\u2014 as it makes some claims which are known to be\nfalse\u2014 wrt detecting double spends, but it does give a reasonable\noverview),  and avoidance of broad claims which will result in\nmisunderstandings that result in users engaging in riskier behaviors\nwhich they could avoid if they better understood the security of the\nsoftware they're running."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-08T11:52:26",
                "message_text_only": "> What I would expect is a proper discussion, like \"Understanding the\n> bitcoinj security model\":\n> http://code.google.com/p/bitcoinj/wiki/SecurityModel\n\nThat page was old, it stated that pending transactions aren't provided\nto the app which hasn't been true for a long time.\n\nI've rewritten and extended it. You may still not like what it says ;)\nbut it should at least be more thorough now. It also links to the ETH\npaper.\n\nRe: Electrum. In fairness the electrum page is designed for end users\nand the bitcoinj page is designed for app developers. As far as I\nknow, there are no bitcoinj based clients that try to explain\ntransaction confidence to end users.\n\nI don't think it's worth worrying about this too much right now. In\nfuture the software end users and merchants use will diverge\nsignificantly. At that time it'll be easier to tailor the\ndocumentation to each user demographic. And I think Electrum type\nservices will go away once we do more optimizations like bloom\nfiltering and better peer selection logic, as the speed of SPV clients\nwill be comparable to Electrum/BCCAPI type clients but without the\nneed for a specific server operator."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-09T03:22:01",
                "message_text_only": "On Mon, Oct 8, 2012 at 7:52 AM, Mike Hearn <mike at plan99.net> wrote:\n> I don't think it's worth worrying about this too much right now. In\n> future the software end users and merchants use will diverge\n> significantly.\n\nElectrum also has a daemon for merchants. Considering the dislike of\nJava that exist reflexively in much of the non-java community and the\ngreater ease of deployment and the integration of type-2 split key\nmanagement,  I wouldn't be surprised if it became quite popular\nquickly especially if the status quo of failing to disclose and\ndiscuss the security limitations of the client continues.\n\nWhat I've found is that even fairly sophisticated bitcoin participants\nare actually unaware of the security implications\u2014 not just of thin\nclients architecturally but of electrum specifically.  I think even\nyou may find my findings of the latter a bit surprising.\n\nGenerally for thin clients\u2014 a lying server can make clients think\nthey've received confirmed payments they haven't, and unless the\nclient is constructed to be a bit less thin a lying server can lie\nabout input values and cause think clients to spend large values to\nfees. Servers can also monitor clients and deanonymize them and\nselectively deny service to particular clients or transactions. Thin\nclients must trust their servers to be available, and to not perform\nthese attacks. Users can use tools like tor to reduce the privacy\nattacks, but doing so inhibits having a trust relationship to protect\nagainst the other attacks. And none of these attacks leave\ncryptographic proof of their existence, so a victim can't convince the\npublic of a server's treachery. Us experts know about these risks, but\nI don't think the general users do.\n\nBut thats not the limit of it\u2014  It seems some people believe Electrum\ndoes majority quorum between servers, complicating attacks arising\nfrom the fact that today users virtually never have a reason to trust\ntheir server operators.  This isn't true\u2014 it connect to one at a time.\n(And sibyl attacks would make that pretty weak protection even if it\ndid that, as someone could use a a botnet to run tens of thousands of\n'servers' (really proxies)).\n\nBeyond that the protocol between the clients and servers is\nunauthenticated cleartext JSON in TCP.  So any network advisory with\naccess to the network near the server has the same power to attack as\nthe server operator... and one near the client has the same power to\nattack as the sum of all the server operators.  A passive attacker\nnear the client has full deanonymization power.\n\nBut I don't even know if any of these limitations matter much\u2014  The\nelectrum client instantly displays unconfirmed transactions and allows\nusers to spend them.  The default user interface gives _no_ indication\nthat the payment is unconfirmed. There is a \"pro\" mode, that shows\n'processing' for unconfirmed transactions... but it looks as final as\nit ever will be once it gets a single confirm. Only the most cautious\nand well informed users would open the pro interface and right click\nand select details to see the count\u2014 and even then there is no\nguidance on what numbers are good (beyond '1').  So I suspect people\ncan probably rob typical electrum users (including electrum running\nmerchants) without actually using any of the above.\n\nWhen a thin client is willing to provide arbitrary features like\nshowing unconfirmed payments and simplified UI without regard to\nsecurity it removes the functional advantage of running more secure\nsoftware like SPV and various degrees of full node... the only\nmotivation is security, and it's not much of a motivation when the\nrisks aren't even disclosed.\n\n...and I haven't even gotten into delving into what kind of attacks\nare possible due to deeper implementation specifics.\n\nBut I do share your view that people will migrate to stronger client\nmodels in the future\u2014 but I don't agree that it will be due to those\nclients improving (though they will improve), it will be because\npeople will know that they provide better security and will choose\nthem for that reason.\n\nMy only question is will they know this because we as a community and\nthe authors of the thin clients provided clear explanations and\nappropriate caution, or will it be because they're getting robbed\nblind, producing a bunch of bad press for thin clients in particular\nand Bitcoin generally?"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-10T11:19:00",
                "message_text_only": "+gary\n\n> Electrum also has a daemon for merchants.\n\nWell, I suggest taking it up with Thomas directly. A thread here won't do much.\n\n> Considering the dislike of\n> Java that exist reflexively in much of the non-java community and the\n> greater ease of deployment and the integration of type-2 split key\n> management\n\nI'm hoping that MultiBit Merchant will provide something similar based\non bcj, ie, you don't have to actually be a Java developer to use it,\nit can just talk to your app via POSTs and GETs.\n\nWRT deterministic wallets, yes, right now that's indeed a competitive\nadvantage of Electrum. So much code to write, so little time.\n\n> Generally for thin clients\u2014 a lying server can make clients think\n> they've received confirmed payments they haven't, and unless the\n> client is constructed to be a bit less thin a lying server can lie\n> about input values and cause thin clients to spend large values to\n> fees.\n\nYes indeed. This also gives [hacked] server operators a way to steal\nmoney from users without private keys, they can get clients to create\nsome very high fee transactions and then provide them directly to a\nminer who promises to cut them in (or they can mine themselves, of\ncourse).\n\n> Beyond that the protocol between the clients and servers is\n> unauthenticated cleartext JSON in TCP.\n\nI thought it used SSL. Maybe I'm thinking of BCCAPI which is a similar approach.\n\n> that the payment is unconfirmed. There is a \"pro\" mode, that shows\n> 'processing' for unconfirmed transactions\n\nI think communicating transaction confidence to users is something of\nan open UI design problem right now. I agree that hiding it entirely\nseems suboptimal, but in reality explaining what the risks are for a\ngiven number confirmations is difficult. Given the lack of actually\nreported double-spends against unconfirmed transactions, I can\nunderstand this choice, even if I wouldn't recommend it.\n\n> My only question is will they know this because we as a community and\n> the authors of the thin clients provided clear explanations and\n> appropriate caution\n\nWell, I pushed for English-text explanations of clients on bitcoin.org\nrather than a feature matrix, for this kind of reason :) Unfortunately\nthe current texts are too small to really give a detailed explanation\nof the security models involved. It may be worth adding one-liners\nthat link to a page explaining different security models (full, SPV,\nsuperlight).\n\nOne thing I'm really hoping we can find and get agreement on is\nsomebody clueful and trustworthy to work on the bitcoin.org website.\nBitcoin, the project, needs a stronger voice than it currently has,\npartly to speak about such issues. For instance, an FAQ that isn't on\nthe wiki would be good. And a simple \"Welcome to Bitcoin\" flow on the\nbitcoin.org website that guides people to appropriate clients, teaches\nthem the security basics, etc, would be excellent."
            },
            {
                "author": "Gary Rowe",
                "date": "2012-10-10T14:06:29",
                "message_text_only": "Just to chime in on the MultiBit Merchant aspect. The architecture is that\nMBM is a Java backend, but executes as a simple command line:\n\njava -jar mbm.jar server config.yml\n\nAs Mike expects, MBM offers a RESTful API using HAL+JSON. It provides a\ncomprehensive set of order and invoice processing, accounting,\ninventory/delivery management and customer account handling facilities for\nuse with a wide variety of online business models.\n\nThere will be a variety of front ends, one of which is an online shop. They\nalso have the same startup command structure.\n\nSince most folks are shy of using any technology, it is likely that MBM+<x\nclient> will be offered as part of a SaaS type solution. This allows anyone\nwho doesn't have the knowledge to configure it for themselves to make use\nof it.\n\nMBM will use BitcoinJ and will depend on a bucket of public keys for\ntransactions until the HD support is in place to allow generation of public\nkeys without private keys being present. This removes the need for private\nkeys to be present on the servers, and allows consumers of the SaaS model\nto provide their own transaction keys.\n\nThe code is released under MIT license so anyone, anywhere can use it to\nbuild the Bitcoin economy.\n\nMore info:\nhttps://github.com/gary-rowe/MultiBitMerchant/wiki/Introduction\nhttp://gary-rowe.com/agilestack/2012/06/06/multibit-merchant-genesis/\n\nOn 10 October 2012 12:19, Mike Hearn <mike at plan99.net> wrote:\n\n> +gary\n>\n> > Electrum also has a daemon for merchants.\n>\n> Well, I suggest taking it up with Thomas directly. A thread here won't do\n> much.\n>\n> > Considering the dislike of\n> > Java that exist reflexively in much of the non-java community and the\n> > greater ease of deployment and the integration of type-2 split key\n> > management\n>\n> I'm hoping that MultiBit Merchant will provide something similar based\n> on bcj, ie, you don't have to actually be a Java developer to use it,\n> it can just talk to your app via POSTs and GETs.\n>\n> WRT deterministic wallets, yes, right now that's indeed a competitive\n> advantage of Electrum. So much code to write, so little time.\n>\n> > Generally for thin clients\u2014 a lying server can make clients think\n> > they've received confirmed payments they haven't, and unless the\n> > client is constructed to be a bit less thin a lying server can lie\n> > about input values and cause thin clients to spend large values to\n> > fees.\n>\n> Yes indeed. This also gives [hacked] server operators a way to steal\n> money from users without private keys, they can get clients to create\n> some very high fee transactions and then provide them directly to a\n> miner who promises to cut them in (or they can mine themselves, of\n> course).\n>\n> > Beyond that the protocol between the clients and servers is\n> > unauthenticated cleartext JSON in TCP.\n>\n> I thought it used SSL. Maybe I'm thinking of BCCAPI which is a similar\n> approach.\n>\n> > that the payment is unconfirmed. There is a \"pro\" mode, that shows\n> > 'processing' for unconfirmed transactions\n>\n> I think communicating transaction confidence to users is something of\n> an open UI design problem right now. I agree that hiding it entirely\n> seems suboptimal, but in reality explaining what the risks are for a\n> given number confirmations is difficult. Given the lack of actually\n> reported double-spends against unconfirmed transactions, I can\n> understand this choice, even if I wouldn't recommend it.\n>\n> > My only question is will they know this because we as a community and\n> > the authors of the thin clients provided clear explanations and\n> > appropriate caution\n>\n> Well, I pushed for English-text explanations of clients on bitcoin.org\n> rather than a feature matrix, for this kind of reason :) Unfortunately\n> the current texts are too small to really give a detailed explanation\n> of the security models involved. It may be worth adding one-liners\n> that link to a page explaining different security models (full, SPV,\n> superlight).\n>\n> One thing I'm really hoping we can find and get agreement on is\n> somebody clueful and trustworthy to work on the bitcoin.org website.\n> Bitcoin, the project, needs a stronger voice than it currently has,\n> partly to speak about such issues. For instance, an FAQ that isn't on\n> the wiki would be good. And a simple \"Welcome to Bitcoin\" flow on the\n> bitcoin.org website that guides people to appropriate clients, teaches\n> them the security basics, etc, would be excellent.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121010/57eb786a/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-10T15:23:25",
                "message_text_only": "On Wed, Oct 10, 2012 at 7:19 AM, Mike Hearn <mike at plan99.net> wrote:\n> +gary\n>\n>> Electrum also has a daemon for merchants.\n>\n> Well, I suggest taking it up with Thomas directly. A thread here won't do much.\n\nI tried in IRC and got no response. These messages are copying the\nonly contact email address I could find.\n\n\n> I thought it used SSL. Maybe I'm thinking of BCCAPI which is a similar approach.\n\nYes, so do a lot of people. It doesn't.\n\n> I think communicating transaction confidence to users is something of\n> an open UI design problem right now. I agree that hiding it entirely\n> seems suboptimal, but in reality explaining what the risks are for a\n\nThere is a middle ground: You can not hide it without explaining it.\nAFAICT we don't see ~any questions about the reference client waiting\nfor six confirmations before saying confirmed.\n\n> given number confirmations is difficult. Given the lack of actually\n> reported double-spends against unconfirmed transactions, I can\n> understand this choice, even if I wouldn't recommend it.\n\nThere have been a great many circulated on the network. People don't\nreport all losses\u2014 e.g. we've never seen a report from those who've\nburned hundreds of bitcoins in fees on transactions.\n\n> of the security models involved. It may be worth adding one-liners\n> that link to a page explaining different security models (full, SPV,\n> superlight).\n\nPerhaps.\n\n> One thing I'm really hoping we can find and get agreement on is\n> somebody clueful and trustworthy to work on the bitcoin.org website.\n\nI think this is very hard because this matter is rapidly politicized.\nThere are some in the community who will instantly allege misconduct\nwhen there is a mis-agreement.\n\nBasically: No one sane should want the job, and anyone who wants\nshould on no account be allowed to have it.\n\nAt this point I think we also will get better results communicating\namong technical people in order to get the development focus adjusted\nin a way that mitigates those risks that can be mitigated and those\ncautions that can be offered offered.\n\nAfter all, if the Electrum project is _unwilling_ to disclose the\nlimitations of their implementation and security model on their own\nsite, even after having them pointed out then someone updating\nBitcoin.org to include them will be politically contentious.  I want\nto make sure that we've followed all reasonable avenues before going\nthat route\u2014 first I attempted informally on IRC, now I've brought the\ndiscussion here... instead of, e.g. starting the process to remove it\nfrom the bitcoin.org clients page.\n\n> Bitcoin, the project, needs a stronger voice than it currently has,\n> partly to speak about such issues. For instance, an FAQ that isn't on\n\nI agree, thats why I started this thread."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-10T15:55:44",
                "message_text_only": "> I tried in IRC and got no response. These messages are copying the\n> only contact email address I could find.\n\nForum private message may work better.\n\n> I think this is very hard because this matter is rapidly politicized.\n> There are some in the community who will instantly allege misconduct\n> when there is a mis-agreement.\n\nYeah, but that's only an issue if it ends up being an intractable\ndisagreement between the people who are reviewing changes to the core\nsite. The clients page itself was contentious but we still arrived at\nsomething reasonably professional looking and moved on.\n\n> discussion here... instead of, e.g. starting the process to remove it\n> from the bitcoin.org clients page.\n\nI don't think it should be removed. At most the description should be\nupdated to point to a discussion of the tradeoffs of that class of\napps (same for BitcoinSpinner)."
            }
        ],
        "thread_summary": {
            "title": "Electrum security model concerns",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gary Rowe",
                "Mike Hearn",
                "Gregory Maxwell"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 17707
        }
    },
    {
        "title": "[Bitcoin-development] On bitcoin testing",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-10-09T23:12:04",
                "message_text_only": "Copying from a response posted to \"Bitcoin software testing effort\"\nhttps://bitcointalk.org/index.php?topic=117487.0 as it is relevant to\na recent thread here...\n\nAny level of testing is useful and appreciated.  Various types of\ntesting that are helpful:\n\n* \"it works\" testing:  Simply run the latest Release Candidate (or\nlatest version, if released).  Make sure all the basics work (for\nwhatever definition of \"basics\" you desire).  This is the level most\naccessible to casual users.\n* Major features testing:  Develop a short checklist of must-work\nfeatures, and organize volunteers to work together and go through that\nchecklist, item by item.  Test each major feature on each major\nplatform.\n* Stress and fuzz testing:  Attempt to \"stress\" the system somehow, or\nrandomly corrupt bits of data.  See what breaks.\n* Regression testing:  Record bugs fixed, and develop automated test\ncases that successfully reproduce the bugs on older versions, and\nverify newer versions remain fixed.\n* Unit function testing:  Rigorously exercise each C++ class to ensure\nit behaves as expected at a micro level.\n* Full peer automated testing:  Automated testing of RPC and P2P\nfunctions is non-existent, because of the difficulty in doing so.\nFind a solution to this problem.\n* Data-driven tests: If possible, write software-neutral, data-driven\ntests.  This enables clients other than the reference one (Satoshi\nclient) to be tested.  Embed tests in testnet3 chain, if possible.\n\n\nThe community at large can be a big help simply by doing the first\nitem:  download and run the Release Candidates and the latest version,\nand report any problems.  Even reporting success is fine by me, for\nexample: \"Version 0.7.1 works for me on Windows 7/32-bit\" posted on a\nforum thread.\n\nIt is always very difficult to organize any sort of testing regime\nwith open source volunteers that come and go.  Each volunteer chooses\ntheir level of involvement.  Any amount of testing and test-case\nwriting, large or small, is helpful to bitcoin.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-09T23:42:31",
                "message_text_only": "thanks for the great reply jeff. i'm going to get a virtual machine set up\non my system later tonight so at the very least, i myself can start testing.\n\nsteve - haven't heard from you in almost a week. I'd still really like to\nget a look at the test cases and such you set up.\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Tue, Oct 9, 2012 at 5:12 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> Copying from a response posted to \"Bitcoin software testing effort\"\n> https://bitcointalk.org/index.php?topic=117487.0 as it is relevant to\n> a recent thread here...\n>\n> Any level of testing is useful and appreciated.  Various types of\n> testing that are helpful:\n>\n> * \"it works\" testing:  Simply run the latest Release Candidate (or\n> latest version, if released).  Make sure all the basics work (for\n> whatever definition of \"basics\" you desire).  This is the level most\n> accessible to casual users.\n> * Major features testing:  Develop a short checklist of must-work\n> features, and organize volunteers to work together and go through that\n> checklist, item by item.  Test each major feature on each major\n> platform.\n> * Stress and fuzz testing:  Attempt to \"stress\" the system somehow, or\n> randomly corrupt bits of data.  See what breaks.\n> * Regression testing:  Record bugs fixed, and develop automated test\n> cases that successfully reproduce the bugs on older versions, and\n> verify newer versions remain fixed.\n> * Unit function testing:  Rigorously exercise each C++ class to ensure\n> it behaves as expected at a micro level.\n> * Full peer automated testing:  Automated testing of RPC and P2P\n> functions is non-existent, because of the difficulty in doing so.\n> Find a solution to this problem.\n> * Data-driven tests: If possible, write software-neutral, data-driven\n> tests.  This enables clients other than the reference one (Satoshi\n> client) to be tested.  Embed tests in testnet3 chain, if possible.\n>\n>\n> The community at large can be a big help simply by doing the first\n> item:  download and run the Release Candidates and the latest version,\n> and report any problems.  Even reporting success is fine by me, for\n> example: \"Version 0.7.1 works for me on Windows 7/32-bit\" posted on a\n> forum thread.\n>\n> It is always very difficult to organize any sort of testing regime\n> with open source volunteers that come and go.  Each volunteer chooses\n> their level of involvement.  Any amount of testing and test-case\n> writing, large or small, is helpful to bitcoin.\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121009/db4ce4b5/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-10T00:03:52",
                "message_text_only": "On Tue, Oct 9, 2012 at 7:12 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> * Data-driven tests: If possible, write software-neutral, data-driven\n> tests.  This enables clients other than the reference one (Satoshi\n> client) to be tested.  Embed tests in testnet3 chain, if possible.\n\nThe mention of testnet3 here reminds me to make a point:  Confirmation\nbias is a common problem for software testing\u2014 people often over test\nthe success cases and under-test the failure cases.  This is certainly\nthe case in Bitcoin: For example, testnet3+the packaged tests test all\nthe branches inside the interior script evaluation engine _except_ the\nrejection cases.\n\nFor us failure cases can be harder to package up (e.g. can't be placed\nin testnet) but Matt's node-simulation based tester provides a good\nexample of how to create a data driven test set that tests both\nfailure cases and dynamic behavior (e.g. reorgs).\n\nTesting of failure cases is absolutely critical for testing of\nimplementation compatibility: The existence of a difference in what\ngets rejected in a widely deployed alternative node could result in an\nutterly devastating network split.\n\nGenerally every test of something which must succeeded should be\nmatched by a test of something that must fail. Personally, I like to\ntest the boundary cases\u2014 e.g. if something has an allowed range of\n[0-8], I'll test -1,0,8,9 at a minimum. Though reasoning trumps rules\nof thumb.\n\nConfirmation bias is another reason why it's important to have a more\ndiverse collection of testers than the core developers.  People who\nwork closely with the software have strong expectations of how the\nsoftware should work and are less likely to test crazy corner cases\nbecause they \"know\" the outcome, sometimes erroneously.\n\n\nTo reinforce Jeff's list of different approaches: I've long found that\neach mechanism of software testing has diminishing returns the more of\nit you apply. So you're best off using as many different approaches a\nlittle rather than spending all your resources going as deep as\npossible with any one approach.\n\nThere are also some kind of testing which are synergistic: Almost all\ntesting is enhanced enormously by combining it with valgrind because\nit substantially lowers the threshold of issue detection substantially\n(e.g. detecting bogus memory accesses which are _currently_ causing a\ncrash for you but could). If I could only test one of \"with valgrind\"\nor \"without\" I'd test with every time.  Sadly valgrind doesn't exist\non windows and it's rather slow. Dr. Memory\n(http://code.google.com/p/drmemory/) may be an alternative on Windows,\nand there is work to port ASAN to GCC so it may be possible to mingw\nASAN builds in not too long.\n\nI've also found that any highly automatable testing (coded data\ndriven, unit, and fuzz testing) combines well with diverse\ncompilation, e.g. building on as many system types and architectures\u2014\nincluding production irrelevant ones\u2014 as possible in the hopes that\nsome system specific quark make a bug easier to detect."
            }
        ],
        "thread_summary": {
            "title": "On bitcoin testing",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Arklan Uth Oslin",
                "Gregory Maxwell"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 8622
        }
    },
    {
        "title": "[Bitcoin-development] Long stalling periods",
        "thread_messages": [
            {
                "author": "Samuel Tardieu",
                "date": "2012-10-10T08:17:29",
                "message_text_only": "Hi.\n\nI've removed by blockchain information and started redownloading it, on a\nfast connection, using the latest git version (tagged v0.7.1rc1), on a SSD\ndisk.\n\nEverything goes very fast, except that a lot of duplicate blocks are\nprocessed. New blocks arrive quickly, then a lot of duplicates seem to be\nprocessed at a much quieter pace, while the chain height does not increase\nanymore.\n\nIs that expected? Isn't there a way to limit unneeded blocks downloads?\n\nSetBestChain: new best=000000000000a664b1f5  height=114310\nwork=2478070628744107557  date=03/20/11 22:08:47\nProcessBlock: ACCEPTED\nreceived block 00000000000064fbb040\nSetBestChain: new best=00000000000064fbb040  height=114311\nwork=2478397878545837400  date=03/20/11 22:12:52\nProcessBlock: ACCEPTED\nreceived block 0000000000006c7d5cf8\nSetBestChain: new best=0000000000006c7d5cf8  height=114312\nwork=2478725128347567243  date=03/20/11 22:14:27\nProcessBlock: ACCEPTED\nreceived block 0000000000009d72b51c\nSetBestChain: new best=0000000000009d72b51c  height=114313\nwork=2479052378149297086  date=03/20/11 22:50:22\nProcessBlock: ACCEPTED\nreceived block 00000000000014d91e7f\nSetBestChain: new best=00000000000014d91e7f  height=114314\nwork=2479379627951026929  date=03/20/11 23:15:37\nProcessBlock: ACCEPTED\nreceived block 000000000000034002cb\nSetBestChain: new best=000000000000034002cb  height=114315\nwork=2479706877752756772  date=03/20/11 23:24:47\nProcessBlock: ACCEPTED\nreceived block 00000000000032c97ae9\nSetBestChain: new best=00000000000032c97ae9  height=114316\nwork=2480034127554486615  date=03/20/11 23:28:03\nProcessBlock: ACCEPTED\nreceived block 00000000000055503e82\nSetBestChain: new best=00000000000055503e82  height=114317\nwork=2480361377356216458  date=03/20/11 23:36:16\nSetBestChain: new best=000000000000b7ce72e8  height=114318\nwork=2480688627157946301  date=03/20/11 23:37:44\nSetBestChain: new best=00000000000076788899  height=114319\nwork=2481015876959676144  date=03/20/11 23:46:41\nSetBestChain: new best=000000000000d04ffc5a  height=114320\nwork=2481343126761405987  date=03/20/11 23:55:28\nSetBestChain: new best=000000000000514f0116  height=114321\nwork=2481670376563135830  date=03/21/11 00:02:01\nSetBestChain: new best=00000000000022f1d1a0  height=114322\nwork=2481997626364865673  date=03/21/11 00:08:11\nSetBestChain: new best=000000000000370e907e  height=114323\nwork=2482324876166595516  date=03/21/11 00:18:39\nSetBestChain: new best=000000000000dab36141  height=114324\nwork=2482652125968325359  date=03/21/11 00:27:57\nSetBestChain: new best=0000000000009f9401c1  height=114325\nwork=2482979375770055202  date=03/21/11 00:31:44\nSetBestChain: new best=0000000000000e774dae  height=114326\nwork=2483306625571785045  date=03/21/11 00:48:00\nSetBestChain: new best=000000000000b751fde0  height=114327\nwork=2483633875373514888  date=03/21/11 00:55:10\nSetBestChain: new best=000000000000b377b247  height=114328\nwork=2483961125175244731  date=03/21/11 01:03:44\nSetBestChain: new best=0000000000008a324822  height=114329\nwork=2484288374976974574  date=03/21/11 01:13:59\nSetBestChain: new best=0000000000004270b478  height=114330\nwork=2484615624778704417  date=03/21/11 02:19:15\nSetBestChain: new best=0000000000006b3f7c56  height=114331\nwork=2484942874580434260  date=03/21/11 02:47:57\nSetBestChain: new best=0000000000009bc3a829  height=114332\nwork=2485270124382164103  date=03/21/11 02:55:29\nSetBestChain: new best=000000000000308b5ad5  height=114333\nwork=2485597374183893946  date=03/21/11 02:55:44\nSetBestChain: new best=0000000000007637ea6e  height=114334\nwork=2485924623985623789  date=03/21/11 03:10:04\nSetBestChain: new best=0000000000000006acb7  height=114335\nwork=2486251873787353632  date=03/21/11 03:20:49\nSetBestChain: new best=000000000000ab316f00  height=114336\nwork=2486579123589083475  date=03/21/11 03:43:16\nSetBestChain: new best=0000000000005e87ca89  height=114337\nwork=2486906373390813318  date=03/21/11 03:44:37\nSetBestChain: new best=000000000000adbb9bf5  height=114338\nwork=2487233623192543161  date=03/21/11 03:50:07\nSetBestChain: new best=00000000000097ccfcf2  height=114339\nwork=2487560872994273004  date=03/21/11 04:02:14\nSetBestChain: new best=0000000000000ab6f760  height=114340\nwork=2487888122796002847  date=03/21/11 04:04:52\nSetBestChain: new best=00000000000099fc0aab  height=114341\nwork=2488215372597732690  date=03/21/11 04:11:18\nSetBestChain: new best=00000000000038f85ffc  height=114342\nwork=2488542622399462533  date=03/21/11 04:21:02\nSetBestChain: new best=0000000000008cf7ad33  height=114343\nwork=2488869872201192376  date=03/21/11 04:32:41\nSetBestChain: new best=00000000000026f435ba  height=114344\nwork=2489197122002922219  date=03/21/11 04:40:07\nSetBestChain: new best=000000000000a234fe35  height=114345\nwork=2489524371804652062  date=03/21/11 05:04:04\nSetBestChain: new best=0000000000008f808957  height=114346\nwork=2489851621606381905  date=03/21/11 05:06:09\nSetBestChain: new best=000000000000bb884dcb  height=114347\nwork=2490178871408111748  date=03/21/11 05:11:53\nSetBestChain: new best=00000000000038cade45  height=114348\nwork=2490506121209841591  date=03/21/11 05:19:06\nSetBestChain: new best=0000000000001e3155cd  height=114349\nwork=2490833371011571434  date=03/21/11 05:25:27\nSetBestChain: new best=00000000000064fb7182  height=114350\nwork=2491160620813301277  date=03/21/11 05:27:41\nSetBestChain: new best=000000000000a4cb0d57  height=114351\nwork=2491487870615031120  date=03/21/11 05:30:26\nProcessBlock: ACCEPTED\nreceived block 0000000000007e7aa361\nERROR: ProcessBlock() : already have block 113868 0000000000007e7aa361\nreceived block 000000000000af24d6fe\nERROR: ProcessBlock() : already have block 113869 000000000000af24d6fe\nAdded 1 addresses from 211.30.28.213: 26 tried, 8283 new\nreceived block 00000000000094e6dc06\nERROR: ProcessBlock() : already have block 113870 00000000000094e6dc06\nreceived block 000000000000d9efaa82\nERROR: ProcessBlock() : already have block 113871 000000000000d9efaa82\nERROR: FetchInputs() : 902e449ac3 mempool Tx prev not found abfd88f0e4\nstored orphan tx 902e449ac3 (mapsz 877)\nAdded 1 addresses from 24.124.62.104: 26 tried, 8284 new\nreceived block 000000000000a5695904\nERROR: ProcessBlock() : already have block 113872 000000000000a5695904\nAdded 1 addresses from 211.30.28.213: 26 tried, 8284 new\nreceived block 0000000000002d0aa359\nERROR: ProcessBlock() : already have block 113873 0000000000002d0aa359\nreceived block 000000000000d91ea603\nERROR: ProcessBlock() : already have block 113874 000000000000d91ea603\nreceived block 000000000000d3c72ce3\n\n  Sam\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121010/dcb2839a/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Long stalling periods",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Samuel Tardieu"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 6690
        }
    },
    {
        "title": "[Bitcoin-development] Post-0.7.1 tree freeze for ultraprune",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-10-10T18:40:55",
                "message_text_only": "Proposal:  following 0.7.1 release, freeze the tree.  Do not pull\nanything, until ultraprune is pulled (or rejected, but I think the\nlatter is unlikely).\n\nCommon sense exceptions still apply (critical bug fixes, etc.)\n\nUltraprune does not need to be \"perfect\" to be pulled... this pull\nwould occur at the beginning of 0.8, leaving lots of room for\nhammering out final details in-tree.  The main hurdle is really\ngetting everyone to ACK the overall design and direction of the\nultraprune branch, especially Gavin.\n\nCollecting those high-level design ACKs is more important to bitcoin\noverall than even fine-grained code review; code mistakes can be fixed\nin-tree during 0.8 development, once we all agree this is the correct\n_design_.  The real code mistakes and \"sharp edges\" will only be found\nnow with wide field testing.\n\nFor the record:  yes, Design-ACK from me.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Wladimir",
                "date": "2012-10-11T10:51:55",
                "message_text_only": "On Wed, Oct 10, 2012 at 8:40 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> Proposal:  following 0.7.1 release, freeze the tree.  Do not pull\n> anything, until ultraprune is pulled (or rejected, but I think the\n> latter is unlikely).\n\nYes, I think this is a good idea. Getting ultraprune in should be a priority.\n\nI've just pulled all the small stuff that was already ACKed for\npost-0.7.1, so IMO the freeze can start.\n\nWladimir"
            },
            {
                "author": "Wladimir",
                "date": "2012-10-11T11:12:15",
                "message_text_only": "On Thu, Oct 11, 2012 at 12:51 PM, Wladimir <laanwj at gmail.com> wrote:\n> On Wed, Oct 10, 2012 at 8:40 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n>> Proposal:  following 0.7.1 release, freeze the tree.  Do not pull\n>> anything, until ultraprune is pulled (or rejected, but I think the\n>> latter is unlikely).\n>\n> Yes, I think this is a good idea. Getting ultraprune in should be a priority.\n>\n> I've just pulled all the small stuff that was already ACKed for\n> post-0.7.1, so IMO the freeze can start.\n\nOops, in my enthusiasm I completely forgot that 0.7.1 is still in rc, not final.\n\nWhat I merged is:\n- #1901 from laanwj/2012_10_remove_strlcpy\n- #1900 from Diapolo/optionsmodel_getters\n- #1913 from sipa/noi2p\n- #1879 from sipa/fdatasync\n\nI don't think any of them is problematic to have in rc2. If it is, we\nneed to make a branch for 0.7.x at eb49457 and consider master the\n0.8.x branch.\n\nWladimir"
            }
        ],
        "thread_summary": {
            "title": "Post-0.7.1 tree freeze for ultraprune",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Wladimir"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 2257
        }
    },
    {
        "title": "[Bitcoin-development] 0.7.1 release candidate 1 ready for testing",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2012-10-11T15:46:10",
                "message_text_only": "Any progress on a release candidate QA sanity testing plan?\n\n\nBitcoin version 0.7.1 release candidate 1 is now available from:\n  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/test/\n\nThis is a bug-fix minor release.\n\nNew features\n------------\n\n* Added a boolean argument to the RPC 'stop' command, if true sets\n  -detachdb to create standalone database .dat files before shutting down.\n\n* -salvagewallet command-line option, which moves any existing wallet.dat\n  to wallet.{timestamp}.dat and then attempts to salvage public/private\n  keys and master encryption keys (if the wallet is encrypted) into\n  a new wallet.dat. This should only be used if your wallet becomes\n  corrupted, and is not intended to replace regular wallet backups.\n\n* Import $DataDir/bootstrap.dat automatically, if it exists.\n\nDependency changes\n------------------\n\n* Qt 4.8.2 for Windows builds\n\n* openssl 1.0.1c\n\nBug fixes\n---------\n\n* When running -testnet, use RPC port 18332 by default.\n\n* Better detection and handling of corrupt wallet.dat and blkindex.dat files.\n  Previous versions would crash with a DB_RUNRECOVERY exception, this\n  version detects most problems and tells you how to recover if it\n  cannot recover itself.\n\n* Fixed an uninitialized variable bug that could cause transactions to\n  be reported out of order.\n\n* Fixed a bug that could cause occasional crashes on exit.\n\n* Warn the user that they need to create fresh wallet backups after they\n  encrypt their wallet.\n\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-10-11T15:59:52",
                "message_text_only": "On Thu, Oct 11, 2012 at 11:46 AM, Gavin Andresen\n<gavinandresen at gmail.com> wrote:\n> Any progress on a release candidate QA sanity testing plan?\n\nPosted a call for testing in this forum thread,\nhttps://bitcointalk.org/index.php?topic=117487.0\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-11T16:17:55",
                "message_text_only": "I'd emailed steve last week to try and get a look at the test cases and\nsuch he worked up, but I've not heard from him. Other then that, I'll grab\nthe RC tonight and go through it.\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Thu, Oct 11, 2012 at 9:59 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Thu, Oct 11, 2012 at 11:46 AM, Gavin Andresen\n> <gavinandresen at gmail.com> wrote:\n> > Any progress on a release candidate QA sanity testing plan?\n>\n> Posted a call for testing in this forum thread,\n> https://bitcointalk.org/index.php?topic=117487.0\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121011/e6e16caf/attachment.html>"
            },
            {
                "author": "steve",
                "date": "2012-10-11T17:45:21",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n\nHi,\n\nOn 11/10/2012 16:46, Gavin Andresen wrote:\n> Any progress on a release candidate QA sanity testing plan?\n\nessentially yes - in all seriousness, I have come around to your way\nof thinking, it is not worth arguing about. we end up in the same place.\n\n:) nothing is final though. I will be opening it up to Arklan in a bit\n(I have a pool match tonight so after that depending on how drunk i\nget.) and to another couple of people who have emailed me off list who\nwould like to be involved in testing.\n\nI have not created any new tests for the new stuff.  this is still the\nnoddy stuff.\n\nIt covers everything that needs to be covered for a newbe or someone\nupgrading clients.\n\nand it is in many formats the moment (from wiki to test runner) none\nparticularly useful (about to import into mantis, just fiddling with\nthe fields so it does testcases)\n\nI have been trying to separate the tests into what can be automated,\nrecorded and checked by watching the video and have sanity checks\nalong the way (published sha and sha256 of the binaries match) -\n(obviously the test is flagged to be run manually if there is any doubt)\n\nI did take myself outside and had a little sit down and talk to\nmyself.  Lets not run before we can walk. I will still keep the grand\nideas, but they are on the back burner. (I got called a blue skies\nthinker today, wtf is one of them? I said smiled and said thanks)\n\nthe main things we make sure we get tested right are all the GAT tests\nin bettermeans.They are more protocol based and should be run against\nall releases.  Lets nail that process, peer review it, retest it, then\nuse that as a basis for The Process. I will temper my zealousness. I\nrealise that I can come across as bullish or even aggressive in my\nemails.  I never mean too.(unless I say I am. That is not an excuse\nfor my poor english language skills.)\n\nBut I still think that the people running the tests should have the\ngreatest say in what software is used. So once you have access to the\nserver and the cases feel free to install your favourite software and\nsee what other people think.\n\nbut we have a vague structure and workflow so it will be interesting\nto see how it works out.\n\nthe git integration will be trivial.\n\nplease email me if you would like access.  I am off out in 15 mins but\nI promise to have all access sorted by tomorrow.  I am only using 3\nvps to show example testing and test platforms.  I would like it if we\ncould get a technet license with the donations so far, I use mine (and\nmy msdn) for work.\n\nalso check out bettermeans for the formats that I will be using.\n\nbollocks. bollocks. bollocks\n\nhttps://secure.bettermeans.com/projects/4180\n\nbye bye bettermeans. how we never knew ye.\n\nGavin, can we get a bitcoin-test mailing list please.  it would be\nused for discussion of testing, tools, ideas, chatter, etc.  it would\nnot be a place reporting bugs... This list seems very focused and I\nalways feel like I am disrupting things with my emails about test.  I\ndont mind admining the list. I would rather be vocal and inclusive, I\ndont think the dev list is the place for that.\n\n> \n> \n> Bitcoin version 0.7.1 release candidate 1 is now available from: \n> http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/test/\n>\n>  This is a bug-fix minor release.\n> \n> New features ------------\n> \n> * Added a boolean argument to the RPC 'stop' command, if true sets \n> -detachdb to create standalone database .dat files before shutting\n> down.\n> \n> * -salvagewallet command-line option, which moves any existing\n> wallet.dat to wallet.{timestamp}.dat and then attempts to salvage\n> public/private keys and master encryption keys (if the wallet is\n> encrypted) into a new wallet.dat. This should only be used if your\n> wallet becomes corrupted, and is not intended to replace regular\n> wallet backups.\n> \n> * Import $DataDir/bootstrap.dat automatically, if it exists.\n> \n> Dependency changes ------------------\n> \n> * Qt 4.8.2 for Windows builds\n> \n> * openssl 1.0.1c\n> \n> Bug fixes ---------\n> \n> * When running -testnet, use RPC port 18332 by default.\n> \n> * Better detection and handling of corrupt wallet.dat and\n> blkindex.dat files. Previous versions would crash with a\n> DB_RUNRECOVERY exception, this version detects most problems and\n> tells you how to recover if it cannot recover itself.\n> \n> * Fixed an uninitialized variable bug that could cause transactions\n> to be reported out of order.\n> \n> * Fixed a bug that could cause occasional crashes on exit.\n> \n> * Warn the user that they need to create fresh wallet backups after\n> they encrypt their wallet.\n> \n> \n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.17 (MingW32)\nComment: Using GnuPG with Mozilla - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJQdwWxAAoJEFvEB9dQFvtQiuMIAJpdu23biq56apMO/KfqmSB0\nkQPflDD2XMxTknfqzRs35/EFgL0mJ/cYfY3qTW9JOWL/cit4ieq2EA4P3uQeFFDC\nNCxIuDxOzOIaZ+SzRZENXdpVWKRNP1RgUCANm3YfrJBlavr9a/om36nP1IK0W4MB\nQcPXrrZvipt1xhx1G/V6NvYbZA3lTAJBFzuz2oRJNwlYoExJFw8EHBypa67BUNOj\nNDg1Wu5Ppyq7dZbgfhw4HxIIvgwn/vaSm/tX6HJxyKN7HUJIbIyQrSbPGUvWCsBW\nKI6e88DPdG0x0ltqVXja+51n3F9G4H/zTIbB0GyiRDn0GcGwi/GolF5PAgz0tR8=\n=zniH\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-11T17:51:56",
                "message_text_only": "i'll second the bitcoin test list.\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Thu, Oct 11, 2012 at 11:45 AM, steve <steve at mistfpga.net> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n>\n> Hi,\n>\n> On 11/10/2012 16:46, Gavin Andresen wrote:\n> > Any progress on a release candidate QA sanity testing plan?\n>\n> essentially yes - in all seriousness, I have come around to your way\n> of thinking, it is not worth arguing about. we end up in the same place.\n>\n> :) nothing is final though. I will be opening it up to Arklan in a bit\n> (I have a pool match tonight so after that depending on how drunk i\n> get.) and to another couple of people who have emailed me off list who\n> would like to be involved in testing.\n>\n> I have not created any new tests for the new stuff.  this is still the\n> noddy stuff.\n>\n> It covers everything that needs to be covered for a newbe or someone\n> upgrading clients.\n>\n> and it is in many formats the moment (from wiki to test runner) none\n> particularly useful (about to import into mantis, just fiddling with\n> the fields so it does testcases)\n>\n> I have been trying to separate the tests into what can be automated,\n> recorded and checked by watching the video and have sanity checks\n> along the way (published sha and sha256 of the binaries match) -\n> (obviously the test is flagged to be run manually if there is any doubt)\n>\n> I did take myself outside and had a little sit down and talk to\n> myself.  Lets not run before we can walk. I will still keep the grand\n> ideas, but they are on the back burner. (I got called a blue skies\n> thinker today, wtf is one of them? I said smiled and said thanks)\n>\n> the main things we make sure we get tested right are all the GAT tests\n> in bettermeans.They are more protocol based and should be run against\n> all releases.  Lets nail that process, peer review it, retest it, then\n> use that as a basis for The Process. I will temper my zealousness. I\n> realise that I can come across as bullish or even aggressive in my\n> emails.  I never mean too.(unless I say I am. That is not an excuse\n> for my poor english language skills.)\n>\n> But I still think that the people running the tests should have the\n> greatest say in what software is used. So once you have access to the\n> server and the cases feel free to install your favourite software and\n> see what other people think.\n>\n> but we have a vague structure and workflow so it will be interesting\n> to see how it works out.\n>\n> the git integration will be trivial.\n>\n> please email me if you would like access.  I am off out in 15 mins but\n> I promise to have all access sorted by tomorrow.  I am only using 3\n> vps to show example testing and test platforms.  I would like it if we\n> could get a technet license with the donations so far, I use mine (and\n> my msdn) for work.\n>\n> also check out bettermeans for the formats that I will be using.\n>\n> bollocks. bollocks. bollocks\n>\n> https://secure.bettermeans.com/projects/4180\n>\n> bye bye bettermeans. how we never knew ye.\n>\n> Gavin, can we get a bitcoin-test mailing list please.  it would be\n> used for discussion of testing, tools, ideas, chatter, etc.  it would\n> not be a place reporting bugs... This list seems very focused and I\n> always feel like I am disrupting things with my emails about test.  I\n> dont mind admining the list. I would rather be vocal and inclusive, I\n> dont think the dev list is the place for that.\n>\n> >\n> >\n> > Bitcoin version 0.7.1 release candidate 1 is now available from:\n> >\n> http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/test/\n> >\n> >  This is a bug-fix minor release.\n> >\n> > New features ------------\n> >\n> > * Added a boolean argument to the RPC 'stop' command, if true sets\n> > -detachdb to create standalone database .dat files before shutting\n> > down.\n> >\n> > * -salvagewallet command-line option, which moves any existing\n> > wallet.dat to wallet.{timestamp}.dat and then attempts to salvage\n> > public/private keys and master encryption keys (if the wallet is\n> > encrypted) into a new wallet.dat. This should only be used if your\n> > wallet becomes corrupted, and is not intended to replace regular\n> > wallet backups.\n> >\n> > * Import $DataDir/bootstrap.dat automatically, if it exists.\n> >\n> > Dependency changes ------------------\n> >\n> > * Qt 4.8.2 for Windows builds\n> >\n> > * openssl 1.0.1c\n> >\n> > Bug fixes ---------\n> >\n> > * When running -testnet, use RPC port 18332 by default.\n> >\n> > * Better detection and handling of corrupt wallet.dat and\n> > blkindex.dat files. Previous versions would crash with a\n> > DB_RUNRECOVERY exception, this version detects most problems and\n> > tells you how to recover if it cannot recover itself.\n> >\n> > * Fixed an uninitialized variable bug that could cause transactions\n> > to be reported out of order.\n> >\n> > * Fixed a bug that could cause occasional crashes on exit.\n> >\n> > * Warn the user that they need to create fresh wallet backups after\n> > they encrypt their wallet.\n> >\n> >\n>\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v2.0.17 (MingW32)\n> Comment: Using GnuPG with Mozilla - http://www.enigmail.net/\n>\n> iQEcBAEBAgAGBQJQdwWxAAoJEFvEB9dQFvtQiuMIAJpdu23biq56apMO/KfqmSB0\n> kQPflDD2XMxTknfqzRs35/EFgL0mJ/cYfY3qTW9JOWL/cit4ieq2EA4P3uQeFFDC\n> NCxIuDxOzOIaZ+SzRZENXdpVWKRNP1RgUCANm3YfrJBlavr9a/om36nP1IK0W4MB\n> QcPXrrZvipt1xhx1G/V6NvYbZA3lTAJBFzuz2oRJNwlYoExJFw8EHBypa67BUNOj\n> NDg1Wu5Ppyq7dZbgfhw4HxIIvgwn/vaSm/tX6HJxyKN7HUJIbIyQrSbPGUvWCsBW\n> KI6e88DPdG0x0ltqVXja+51n3F9G4H/zTIbB0GyiRDn0GcGwi/GolF5PAgz0tR8=\n> =zniH\n> -----END PGP SIGNATURE-----\n>\n>\n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121011/7561cb29/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-10-11T19:20:16",
                "message_text_only": "On Thu, Oct 11, 2012 at 1:51 PM, Arklan Uth Oslin\n<arklan.uthoslin at gmail.com> wrote:\n> i'll second the bitcoin test list.\n\nAs you like, but... bitcoin-devel is quite low traffic, so there is\nnot exactly an issue of crowding.  And a separate list means people\ncannot chime in as easily.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-11T20:08:13",
                "message_text_only": "while perfectly true for now, hopefully that won't remain the case as we\nget people on board with testing. ...ok, sure, it might be a while... but\nhaving the separate list with help with archival type stuff and other\nthings eventually. we'll see how useful it actually is in time.\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Thu, Oct 11, 2012 at 1:20 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Thu, Oct 11, 2012 at 1:51 PM, Arklan Uth Oslin\n> <arklan.uthoslin at gmail.com> wrote:\n> > i'll second the bitcoin test list.\n>\n> As you like, but... bitcoin-devel is quite low traffic, so there is\n> not exactly an issue of crowding.  And a separate list means people\n> cannot chime in as easily.\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121011/af75f81b/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "0.7.1 release candidate 1 ready for testing",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Arklan Uth Oslin",
                "steve",
                "Gavin Andresen"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 16671
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin cookbook",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-10-12T19:30:32",
                "message_text_only": "Created a forum thread \"Bitcoin cookbook\", to collect real world, step\nby step examples of some of the more advanced uses of bitcoin:\nhttps://bitcointalk.org/index.php?topic=118126.0\n\nIf you have a recipe to contribute, create a new thread, then mention\nyour thread in the cookbook.\n\nMaybe some of this will migrate to the wiki, but the wiki itself tends\nto be a poor place for discussion and questions.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin cookbook",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 457
        }
    },
    {
        "title": "[Bitcoin-development] Hosting of compiled bitcoin client",
        "thread_messages": [
            {
                "author": "Kyle Henderson",
                "date": "2012-10-14T20:52:33",
                "message_text_only": "Hi team,\n\nGiven that sourceforge has shown to restrict access to a number of\ncountries at the request of the USA, would hosting of the compiled client\non https://github.com/bitcoin/bitcoin/downloads be an alternative that\nwould be considered?\n\nIt seems like a logical alternative to me that requires little effort as it\nis already in use as the code repository.\n\nKind regards,\n\nKyle\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121015/cd601377/attachment.html>"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-10-14T22:02:45",
                "message_text_only": "On Sunday, October 14, 2012 8:52:33 PM Kyle Henderson wrote:\n> Given that sourceforge has shown to restrict access to a number of\n> countries at the request of the USA\n\nThis needs some clarification. If the USA has \"requested\" it, then presumably \nthere's some legality involved, and our US developers shouldn't be made liable \nfor it. The specific reason SourceForge has restricted access should be made \nknown so non-US developers (or gitian builders) can evaluate their own laws \nand hopefully at least one will be in a jurisdiction that allows it.\nBut GitHub is also US-located, so hosting it there may be a problem too.\n\nLuke"
            },
            {
                "author": "Christian Decker",
                "date": "2012-10-14T22:09:48",
                "message_text_only": "Being an international team I'm pretty sure we can find someone who is in a\nmore permissive country.\nWould someone knowledgeable point us to the specific laws, so that we can\nlook it up in our respective jurisdiction?\n\nRegards,\nChris\n\nOn Mon, Oct 15, 2012 at 12:02 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Sunday, October 14, 2012 8:52:33 PM Kyle Henderson wrote:\n> > Given that sourceforge has shown to restrict access to a number of\n> > countries at the request of the USA\n>\n> This needs some clarification. If the USA has \"requested\" it, then\n> presumably\n> there's some legality involved, and our US developers shouldn't be made\n> liable\n> for it. The specific reason SourceForge has restricted access should be\n> made\n> known so non-US developers (or gitian builders) can evaluate their own laws\n> and hopefully at least one will be in a jurisdiction that allows it.\n> But GitHub is also US-located, so hosting it there may be a problem too.\n>\n> Luke\n>\n>\n> ------------------------------------------------------------------------------\n> Don't let slow site performance ruin your business. Deploy New Relic APM\n> Deploy New Relic app performance management and know exactly\n> what is happening inside your Ruby, Python, PHP, Java, and .NET app\n> Try New Relic at no cost today and get our sweet Data Nerd shirt too!\n> http://p.sf.net/sfu/newrelic-dev2dev\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121015/7ce2d5bb/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-14T22:33:19",
                "message_text_only": "On Sun, Oct 14, 2012 at 6:09 PM, Christian Decker\n<decker.christian at gmail.com> wrote:\n> Being an international team I'm pretty sure we can find someone who is in a\n> more permissive country.\n> Would someone knowledgeable point us to the specific laws, so that we can\n> look it up in our respective jurisdiction?\n\nThe only restrictions I'm aware of are the EAR restrictions on the\nexport of cryptography.\n\nThese are generally not applicable to us for two reasons. One is that\nwe only use cryptography for authentication, which is explicitly\nexempted:\nhttp://www.bis.doc.gov/encryption/question2.htm\n\nThe other is that since Bernstein vs US\n(http://en.wikipedia.org/wiki/Bernstein_v._United_States) there has\nbeen absolutely no enforcement attempts against open source projects\nas the precedent creating holding there makes it clear that these\nregulations cannot inhibit the publication of source code.\n\nPerhaps someone could make a little noise about binaries, but it would\nbe pure pretext: Especially since with the deterministic build process\nwe use anyone can produce bit-identical binaries (thus allowing builds\nby untrusted third partities to be just as trustworthy as the official\nones).\n\n> \"more permissive country\"\n\nThis made me laugh. It's hard to find places with better effective law\nfor most online and internet things.  Many places copy the US's\nstatutes (either cargo culting, or as part of treaty compliance) but\ndo so without also copying our legislative history which is\n/generally/ highly protective.  For example, Australia has copied the\nUS munitions regulations exactly, but has no analog of Bernstein v. US\nto limit the government's power.\n\nUnfortunately sourceforce was rather vague about what regulations they\nbelieve they're enforcing:\nhttp://sourceforge.net/blog/clarifying-sourceforgenets-denial-of-site-access-for-certain-persons-in-accordance-with-us-law/\n\nSo unless someone has already done it, I'll get in touch with the EFF\nand find out if they're aware of any particular precautions we should\ntake here."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-14T22:49:47",
                "message_text_only": "The laws in question are OFAC sanctions:\n\nhttp://en.wikipedia.org/wiki/Office_of_Foreign_Assets_Control\n\nThe specific acts that enable this are varied. In theory they apply to\nany US citizen or resident. The issue is not cryptography, it's \"trade\nwith sanctioned countries\", period, where making files available to\ndownload is considered trade.\n\nFor Bitcoin to be available in these places, the sites and download\nmirrors would need to be hosted outside the USA by non-citizens. EU\nsanctions are primarily financial at this time, as far as I know there\nare no attempts to prevent people from serving data to Iran.\n\nExample of places where there are no sanctions in effect: Switzerland.\nUnfortunately datacenter space in Zurich is quite expensive (as is\neverything here).\n\nI would not ever describe OFAC as \"effective law\". The SDN list has\nrepeatedly been found unconstitutional, representing as it does a\ncomplete evasion of the judicial system. If you end up on the\nsanctions list no evidence is required, no process is followed and no\nappeals are possible. The list itself assumes names are globally\nunique."
            },
            {
                "author": "Mark Lister",
                "date": "2012-10-20T07:43:26",
                "message_text_only": ">The issue is not cryptography, it's \"trade with sanctioned countries\",\nperiod, where making\n>files available to download is considered trade.\n\nSpot on, in 2005 when I lived in (among other places) Sudan, Sourceforge\nwould block certain downloads (but not the project site).  That said it\nwas trivial to bypass the restrictions then."
            },
            {
                "author": "Wladimir",
                "date": "2012-10-20T08:33:35",
                "message_text_only": "On Sat, Oct 20, 2012 at 9:43 AM, Mark Lister <mark.lister at yahoo.com> wrote:\n>>The issue is not cryptography, it's \"trade with sanctioned countries\",\n> period, where making\n>>files available to download is considered trade.\n>\n> Spot on, in 2005 when I lived in (among other places) Sudan, Sourceforge\n> would block certain downloads (but not the project site).  That said it\n> was trivial to bypass the restrictions then.\n\nI don't think it's related to these sanctions but to the Great\nFirewall of China, but sourceforge downloads are also blocked in\nChina. Also quite easy to bypass though.\n\nWladimir"
            },
            {
                "author": "Caleb James DeLisle",
                "date": "2012-10-20T14:19:47",
                "message_text_only": "Another concern is sourceforge being attacked and a backdoored client uploaded.\nMost people don't check signatures and I seem to recall sourceforge having some\nvulnerabilities stemming from their \"your own website on sourceforge\" feature.\nIt looks like Github takes security a little bit more seriously.\nProbably the best is to ask for free hosting from a reputable security conscious\nbitcoin enthusiast but that basically means Tux and he's already an SPOF in the\ncoineverse.\n\nThanks,\nCaleb\n\nOn 10/20/2012 04:33 AM, Wladimir wrote:\n> On Sat, Oct 20, 2012 at 9:43 AM, Mark Lister <mark.lister at yahoo.com> wrote:\n>>> The issue is not cryptography, it's \"trade with sanctioned countries\",\n>> period, where making\n>>> files available to download is considered trade.\n>>\n>> Spot on, in 2005 when I lived in (among other places) Sudan, Sourceforge\n>> would block certain downloads (but not the project site).  That said it\n>> was trivial to bypass the restrictions then.\n> \n> I don't think it's related to these sanctions but to the Great\n> Firewall of China, but sourceforge downloads are also blocked in\n> China. Also quite easy to bypass though.\n> \n> Wladimir\n> \n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_sfd2d_oct\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            }
        ],
        "thread_summary": {
            "title": "Hosting of compiled bitcoin client",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr",
                "Wladimir",
                "Kyle Henderson",
                "Caleb James DeLisle",
                "Mike Hearn",
                "Mark Lister",
                "Gregory Maxwell",
                "Christian Decker"
            ],
            "messages_count": 8,
            "total_messages_chars_count": 8641
        }
    },
    {
        "title": "[Bitcoin-development] Public key and signature malleability",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2012-10-20T17:55:43",
                "message_text_only": "Hello all,\n\nas some may be aware, OpenSSL accepts several encodings for the same\npublic key or the same signature. It even accepts encodings that fail\nto conform to the SEC and DER specification by which they are defined.\nAs it perfectly capable of parsing every standard-compliant encoding,\nthis is not a problem on itself. However, as near every full Bitcoin\nnode in existence uses OpenSSL, they will accept such non-standard\nencodings in transactions, and even let them into blocks.\n\nIn order to make the Bitcoin network rules more well-defined, I'd like\nto propose strict rules about what is acceptable, and which do not\ndepend on OpenSSL's implementation. This would make it easier for\nalternative full node implementations, and prevent \"malleability\nattacks\".\n\nFor that, I've submitted a pull request some time ago (see\nhttps://github.com/bitcoin/bitcoin/pull/1742). The specific rules are\nthese:\n * For public keys (SEC compressed or uncompressed EC points)\n   * First byte is either 0x02, 0x03 or 0x04\n   * If the first byte is 0x02 or 0x03, exactly 32 bytes follow\n   * If the first byte is 0x04, exactly 64 bytes follow\n * For signatures (DER encoded integer pairs)\n   * Format is 0x30 <total len> 0x02 <len R> <R> 0x02 <len S> <S> <hashtype>\n   * R and S are MSB encoded integers, which encode a non-negative\ninteger without excessive zero bytes in front. This implies they do\nnot start with a 0x00 unless the next byte has its highest bit set\n(>=0x80) or are 0, in which case exactly one 0x00 is required. Their\nlength is thus between 1 and 33 bytes.\n   * <hashtype> is a single byte that is either 0x01, 0x02, 0x03,\n0x81, 0x82 or 0x83.\n\nAll these are rules that are followed by almost all clients already\n(including Armory and Bitcoin-js, which until recently didn't).\n\nSergio Lerner recently discovered that one can take the\nsecp256k1-field-size complement of the S value in the signature\nwithout invalidating it. The easiest solution to prevent this, would\nbe to require that the lowest bit of the S value is always even (as\ntaking the complement changes this). This would require some\ncoordination, as no client currently enforces this, but it is easy to\nimplement.\n\nThe reason malleability can be a problem, is that a malicious relayer\ncan modify transactions in-transit without invalidating them. This\nwill not cause any loss of coins, but a lot of wallet software\nwouldn't deal gracefully with a modified version of their transactions\nthat gets accepted in a block.\n\nWhat do you think about these rules? If people want these rules,\nnothing would happen for now - just start try to find software that\ndoesn't produce complying data. In a second step, these could be\nenabled as check similar to IsStandard() - making it hard for them to\nget into blocks, but still be accepted when they aren't standard.\nFinally, when no significant amount of non-standard transactions are\nseen anymore, we can write a BIP and start enforcing this as a network\nrule.\n\n-- \nPieter"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-20T18:34:11",
                "message_text_only": "On Sat, Oct 20, 2012 at 1:55 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n> What do you think about these rules? If people want these rules,\n> nothing would happen for now - just start try to find software that\n> doesn't produce complying data. In a second step, these could be\n> enabled as check similar to IsStandard() - making it hard for them to\n> get into blocks, but still be accepted when they aren't standard.\n> Finally, when no significant amount of non-standard transactions are\n> seen anymore, we can write a BIP and start enforcing this as a network\n> rule.\n\nI strongly support heading down this path. Malleability has produced a\nsteady trickle of surprising outcomes. In addition to the problems we\nalready know about and expect there may be additional security or DOS\nproblems that arise from allowing these."
            },
            {
                "author": "Wladimir",
                "date": "2012-10-21T06:47:24",
                "message_text_only": "On Sat, Oct 20, 2012 at 7:55 PM, Pieter Wuille <pieter.wuille at gmail.com> wrote:\n> In order to make the Bitcoin network rules more well-defined, I'd like\n> to propose strict rules about what is acceptable, and which do not\n> depend on OpenSSL's implementation.\n\nI strongly support this too. It is good to make the protocol as\nwell-defined as possible in a self-contained way, ie define all the\nparsing and processing without referring to specific current\nimplementations of other libraries such as OpenSSL.\n\nWhat always bothered me is that OpenSSL can change their API to accept\nnew obscure key encodings at some point, or change their\ninterpretation, and bitcoin will automatically change with it. As\nbitcoin happily links against any OpenSSL version you provide it, in\nworst case, this can result in forks and unexpected behavior\ncompletely out of our control.\n\nWladimir"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-10-21T17:05:11",
                "message_text_only": "Any objections from other transaction-validating implementations?\n\nI strongly support more precisely defining the transaction validity\nrules by changing the reference implementation.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-21T18:47:19",
                "message_text_only": "No objections.\n\nOn Sun, Oct 21, 2012 at 7:05 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> Any objections from other transaction-validating implementations?\n>\n> I strongly support more precisely defining the transaction validity\n> rules by changing the reference implementation.\n>\n> --\n> --\n> Gavin Andresen\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_sfd2d_oct\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-10-21T18:48:15",
                "message_text_only": "> Any objections from other transaction-validating implementations?\n\nSounds good to me. I think it's important to give people a chance to fix\ntheir software, but Pieter's proposal does that.\n\nOn 10/21/2012 7:05 PM, Gavin Andresen wrote:\n> Any objections from other transaction-validating implementations?\n>\n> I strongly support more precisely defining the transaction validity\n> rules by changing the reference implementation.\n>"
            }
        ],
        "thread_summary": {
            "title": "Public key and signature malleability",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Wladimir",
                "Mike Hearn",
                "Gregory Maxwell",
                "Gavin Andresen",
                "Stefan Thomas",
                "Pieter Wuille"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 6085
        }
    },
    {
        "title": "[Bitcoin-development] Fwd: Re: Hosting of compiled bitcoin client",
        "thread_messages": [
            {
                "author": "Mark Lister",
                "date": "2012-10-20T21:08:35",
                "message_text_only": ">I don't think it's related to these sanctions but to the Great Firewall\nof China, but sourceforge downloads are also blocked in China. Also\nquite easy to bypass though.\n\nI think it's easy to overestimate the problem. Users in these countries\n(even non technical ones) quickly learn how to bypass hurdles in the\nnetwork. Although it would be great to host downloads on neutral\nterritory it might also be sufficient to provide the SHA256 of a malware\nfree binary..."
            }
        ],
        "thread_summary": {
            "title": "Fwd: Re: Hosting of compiled bitcoin client",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mark Lister"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 464
        }
    },
    {
        "title": "[Bitcoin-development] Ultraprune merged in mainline",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2012-10-20T22:33:12",
                "message_text_only": "Hello everyone,\n\nI've just merged my \"ultraprune\" branch into mainline (including\nMike's LevelDB work). This is a very significant change, and all\ntesting is certainly welcome. As a result of this, many pull requests\nprobably don't apply cleanly anymore. If you need help rebasing them\non the new structure, ask me.\n\nThe idea behind ultraprune is to use an ultra-pruned copy (only\nunspent transaction outputs in a custom compact format) of the block\nchain for validation (as opposed to a transaction index into the block\nchain). It still keeps all blocks around for serving them to other\nnodes, for rescanning, and for reorganisations. As such, it is still a\nfull node. So, despite the name, it does not implement any actual\npruning yet, though pruning would be trivial to implement now. This\nwould have profound effects on the network though, so may still need\nsome discussion first.\n\nA small summary of the changes:\n * Instead of blk000?.dat, we have blocks/blk000??.dat files of max\n128 MiB, pre-allocated per 16 MiB\n * Instead of a Berklely DB blkindex.dat, we have a LevelDB directory\nblktree/. This only contains a block index, no transaction index.\n * A new LevelDB directory coins/, which contains data about the\ncurrent unspent transaction output set.\n * New files blocks/rev000??.dat contain undo data for blocks\n(necessary for reorganisation).\n * More information is kept about blocks and block files, so\nfacilitate pruning in the future, and to prepare for a headers-first\nmode.\n * Two new RPC calls are added: gettxout and gettxoutsetinfo.\n\nThe most noticeable change should be performance: LevelDB deals much\nbetter with slow I/O than BDB does, and the working set size for\nvalidation is an order of magnitude smaller. In the longer run, I\nthink it is an evolution towards separation between validation nodes\nand archive nodes, which is needed in my opinion.\n\n-- \nPieter"
            },
            {
                "author": "Arklan Uth Oslin",
                "date": "2012-10-21T01:38:23",
                "message_text_only": "i can happily start testing this this weekend. however i'm not 100% sure\nhow to get a copy. i looked around github, but wasn't sure which was the\nproper project. could i get a link and a simple \"do this, this and this\"?\nthanks.\n\ni feel like a newb. ugh.\n\nArklan\n\n----------\nAs long as there is light, the darkness holds no fear. And yet, even in the\ndeepest black, there is life. - Arklan Uth Oslin\n\nI want to leave this world the same way I came into it: backwards and on\nfire. - Arklan Uth Oslin\n\n\n\nOn Sat, Oct 20, 2012 at 4:33 PM, Pieter Wuille <pieter.wuille at gmail.com>wrote:\n\n> Hello everyone,\n>\n> I've just merged my \"ultraprune\" branch into mainline (including\n> Mike's LevelDB work). This is a very significant change, and all\n> testing is certainly welcome. As a result of this, many pull requests\n> probably don't apply cleanly anymore. If you need help rebasing them\n> on the new structure, ask me.\n>\n> The idea behind ultraprune is to use an ultra-pruned copy (only\n> unspent transaction outputs in a custom compact format) of the block\n> chain for validation (as opposed to a transaction index into the block\n> chain). It still keeps all blocks around for serving them to other\n> nodes, for rescanning, and for reorganisations. As such, it is still a\n> full node. So, despite the name, it does not implement any actual\n> pruning yet, though pruning would be trivial to implement now. This\n> would have profound effects on the network though, so may still need\n> some discussion first.\n>\n> A small summary of the changes:\n>  * Instead of blk000?.dat, we have blocks/blk000??.dat files of max\n> 128 MiB, pre-allocated per 16 MiB\n>  * Instead of a Berklely DB blkindex.dat, we have a LevelDB directory\n> blktree/. This only contains a block index, no transaction index.\n>  * A new LevelDB directory coins/, which contains data about the\n> current unspent transaction output set.\n>  * New files blocks/rev000??.dat contain undo data for blocks\n> (necessary for reorganisation).\n>  * More information is kept about blocks and block files, so\n> facilitate pruning in the future, and to prepare for a headers-first\n> mode.\n>  * Two new RPC calls are added: gettxout and gettxoutsetinfo.\n>\n> The most noticeable change should be performance: LevelDB deals much\n> better with slow I/O than BDB does, and the working set size for\n> validation is an order of magnitude smaller. In the longer run, I\n> think it is an evolution towards separation between validation nodes\n> and archive nodes, which is needed in my opinion.\n>\n> --\n> Pieter\n>\n>\n> ------------------------------------------------------------------------------\n> Everyone hates slow websites. So do we.\n> Make your web apps faster with AppDynamics\n> Download AppDynamics Lite for free today:\n> http://p.sf.net/sfu/appdyn_sfd2d_oct\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121020/40eec55f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Ultraprune merged in mainline",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Pieter Wuille",
                "Arklan Uth Oslin"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 5065
        }
    },
    {
        "title": "[Bitcoin-development] Draft BIP for Bloom filtering",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-10-24T15:56:07",
                "message_text_only": "I've written a draft BIP describing the bloom filtering protocol\nextension developed by myself and Matt.\n\nhttps://en.bitcoin.it/wiki/BIP_0037\n\n(yes I know there's some kind of process around getting allocated a\nnumber - it seems overkill for this).\n\nPlease read it and let me know if there are any missing details or\nthings which sound wrong.\n\nDesign-wise, it occurred to me as I wrote the BIP that the method of\ndelaying reception of invs is a bit ad-hoc. It may be better to have a\nbloom filter be sent in the version message itself. On the other hand,\nhaving a flag to delay invs means that the filter can be calculated in\nparallel to bringing up the network connections. Whilst actually\nmaking a Bloom filter is fast, with deterministic wallets you may need\nto do a lot of calculations to find the keys to scan for."
            },
            {
                "author": "Pieter Wuille",
                "date": "2012-10-24T16:22:56",
                "message_text_only": "On Wed, Oct 24, 2012 at 05:56:07PM +0200, Mike Hearn wrote:\n> I've written a draft BIP describing the bloom filtering protocol\n> extension developed by myself and Matt.\n> \n> https://en.bitcoin.it/wiki/BIP_0037\n> \n> Please read it and let me know if there are any missing details or\n> things which sound wrong.\n\nSome questions:\n* why limit the number of matching transactions to 255?\n* what does \"each hash and key in the output script\" mean exactly? what about the output script in its entirety?\n* is sharing parts of the merkle branches not worth it?\n\n> Design-wise, it occurred to me as I wrote the BIP that the method of\n> delaying reception of invs is a bit ad-hoc. It may be better to have a\n> bloom filter be sent in the version message itself. On the other hand,\n> having a flag to delay invs means that the filter can be calculated in\n> parallel to bringing up the network connections. Whilst actually\n> making a Bloom filter is fast, with deterministic wallets you may need\n> to do a lot of calculations to find the keys to scan for.\n\nI'm not in favor of stuffing too much into the version message, it already seems overloaded.\nA byte with some bit-flags is fine by me - higher bits can later be added for other boolean\nflags.\n\n-- \nPieter"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-25T16:56:39",
                "message_text_only": "On Wed, Oct 24, 2012 at 11:56 AM, Mike Hearn <mike at plan99.net> wrote:\n> I've written a draft BIP describing the bloom filtering protocol\n> extension developed by myself and Matt.\n>\n> https://en.bitcoin.it/wiki/BIP_0037\n\nThanks for taking the time to write this up.\n\nI still don't understand what purpose the apparently gratuitous\ninefficiency of constantly resending common tree fragments. There are\nmany points of complexity in this protocol\u2014 handling premature\ndisconnections without missing blocks, the actual implementation of\nthe hash functions for the filter, validation of the hash tree, etc.\nPresumably these components will just get implemented a few times in\nsome carefully constructed library code, so I don't see an\nimplementation complexity argument here\u2014 except the fact that it isn't\nwhat Matt has implemented so far.\n\nThe current design can cause massive overhead compared to pulling an\nunfiltered block should a filter be somewhat overboard and also makes\nthis filtering useless for applications which would select a small but\nnot tiny subset of the transactions (e.g. 10%).\n\nAlso, it's not mentioned in the page\u2014 but the hash function used is\nnot cryptographically strong,  so what prevents a complexity (well,\nbandwidth in this case) attack?  someone could start using txids and\ntxouts that collide with the maximum number of other existing txouts\nin order to waste bandwidth for people.  Is this avenue of attack not\na concern?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-25T17:01:28",
                "message_text_only": "On Thu, Oct 25, 2012 at 12:56 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> I still don't understand what purpose the apparently gratuitous\n> inefficiency of constantly resending common tree fragments.\n\nSorry for the rapid additional comment, but I should also have\nmentioned that the in efficiency is at odds with the privacy argument\nfor the particular mechanism... if the filter is not set at least\nsomewhat too broadly then it will uniquely identify the user. The\ninefficiency, however, argues for setting the filter as narrowly as\npossible because there is much more bandwidth used for a wider filter\nthan would be otherwise."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-26T14:01:58",
                "message_text_only": "> Presumably these components will just get implemented a few times in\n> some carefully constructed library code, so I don't see an\n> implementation complexity argument here\u2014 except the fact that it isn't\n> what Matt has implemented so far.\n\nWell, yes, that is basically the implementation complexity argument :)\nEngineering time isn't free.\n\nI don't feel I understand the effort required to do some kind of\npartial tree encoding. Having a kind of custom compression whereby\nbranches are represented as varint indexes into a dictionary, I can\nfeel how much work that involves and maybe I can make time over the\nnext few weeks to implement it. Has anyone got example code for\nrepresenting partial Merkle trees?\n\n> Also, it's not mentioned in the page\u2014 but the hash function used is\n> not cryptographically strong,  so what prevents a complexity (well,\n> bandwidth in this case) attack?  someone could start using txids and\n> txouts that collide with the maximum number of other existing txouts\n> in order to waste bandwidth for people.  Is this avenue of attack not\n> a concern?\n\nIf you just want to waste bandwidth of nodes you can connect to nodes\nand repeatedly download blocks, or fill the network with fake nodes\nthat spam random generated transactions to whoever connects. I don't\nsee how to avoid that  so it seems odd to worry about a much more\ncomplicated attack."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-26T14:17:04",
                "message_text_only": "On Fri, Oct 26, 2012 at 10:01 AM, Mike Hearn <mike at plan99.net> wrote:\n> If you just want to waste bandwidth of nodes you can connect to nodes\n> and repeatedly download blocks, or fill the network with fake nodes\n> that spam random generated transactions to whoever connects. I don't\n> see how to avoid that  so it seems odd to worry about a much more\n> complicated attack.\n\nBecause I can potentially waste bandwidth of all nodes forever (well as long\nas users are still scanning blocks with my transactions in them) with O(1) work.\n\nThough I'm not sure how much of a threat is vs just paying 1e-8 btc to lots of\naddresses which would only be less bad by some constant factor as worse.\nI guess I should try to attack it and see how bad the pollution I can construct\nshould be. (offline, of course)"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-26T14:21:32",
                "message_text_only": "> Because I can potentially waste bandwidth of all nodes forever (well as long\n> as users are still scanning blocks with my transactions in them) with O(1) work.\n\nAnd this gets you what?\n\nUsers who have active wallets will have their bandwidth wasted for as\nlong as you keep up the attack. Once you stop active wallets won't be\nrescanning that part of the chain and new users won't be scanning it\neither, as they skip blocks before their earliest key time using\ngetheaders. So basically you can waste the bandwidth of active users\nfor a while, by spamming transactions. This is not a new attack.\n\nAnyway, it's trivial to DoS the entire Bitcoin network today. It\nhasn't ever happened. Maybe one day it will, but the only rationale\npeople can come up with for such an attack beyond random griefing is\ngovernments, and complexity attacks are really not their style. Much\neasier to just pass a law.\n\nI'm not saying DoS should be ignored, but I do feel there are limits\nto how far down that rabbithole it's worth going."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-10-26T14:34:06",
                "message_text_only": "On Fri, Oct 26, 2012 at 10:21 AM, Mike Hearn <mike at plan99.net> wrote:\n> Anyway, it's trivial to DoS the entire Bitcoin network today. It\n> hasn't ever happened. Maybe one day it will, but the only rationale\n> people can come up with for such an attack beyond random griefing is\n\nWhich happens and is a concern. Altcoins have been attacked on things\nwe fixed. For example, litecoin nodes were being run out of disk space\nthrough addr.dat flooding.\n\nI think we've been generally fortunate that the level of griefing is\nlow (though not non-existent).  But part of the reason its been low is\nthat it's probably harder to DOS attack bitcoin than you believe. In\nthe reference client a lot of work has gone in to removing attacks\nwith sublinear cost for the attackers.\n\nThat people aren't attacking much now is not an argument to accept a\nnew vulnerability much less a _normative_ vulnerability in the\nprotocol.\n\nThat it's no big deal even attacked would be a fine argument to me, so\nI'll go try to convince myself of that.\n\n> governments,\n\nPlease don't put that kind of black helicopter junk in my mouth. I\nagree with you the point that these aren't a source of concern for me."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-24T16:35:08",
                "message_text_only": "> Some questions:\n> * why limit the number of matching transactions to 255?\n\nCopy/paste error in the does :(\n\n> * what does \"each hash and key in the output script\" mean exactly? what\nabout the output script in its entirety?\n\nIt's an informal way to say data elements. If you insert a key then it\nmatches both single and multi sig outputs regardless of location.\n\n> * is sharing parts of the merkle branches not worth it?\n\nWe think probably not.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121024/b51f81d6/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2012-10-24T17:11:05",
                "message_text_only": "On Wed, Oct 24, 2012 at 06:35:08PM +0200, Mike Hearn wrote:\n> > * what does \"each hash and key in the output script\" mean exactly? what\n> about the output script in its entirety?\n> \n> It's an informal way to say data elements. If you insert a key then it\n> matches both single and multi sig outputs regardless of location.\n\nSo all data push operations? Including or excluding 1-byte constants?\n\nWhat about the entire output script? (if I want to match just one particular multisig output script)\n\n> \n> > * is sharing parts of the merkle branches not worth it?\n> \n> We think probably not.\n\nI'm not sure. As soon as you have 129 transactions in a block (including coinbase), you need 8 path\nentries for each included transaction, which requires more bytes than the transaction itself.\n\nWhen you're including M out of N transactions of a block, you never need more than N-M path entries\nin total to reconstruct the merkle root. With the proposed format, it requires M*ceil(log2(N)).\n\nFor a 1000-transaction block, when matching ~everything, you need >300 KiB of overhead, while almost\nnothing is required.\n\n-- \nPieter"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-10-24T18:54:15",
                "message_text_only": "RE: sharing parts of the merkle branches when returning a 'merkleblock' :\n\nI think I agree that complicating the BIP for what should be a very\nrare case (more than a handful of transactions in a block match the\ntransactions in your wallet) is the right decision.\n\nI want to make sure I'm understanding this bit correctly:\n\n\"In addition, because a merkleblock message contains only a list of\ntransaction hashes, any transactions that the requesting node hasn't\neither received or announced with an inv will be automatically sent as\nwell. This avoids a slow roundtrip that would otherwise be required\n(receive hashes, didn't see some of these transactions yet, ask for\nthem).\"\n\nRequiring serving/relaying nodes to keep track of which transactions\nthey have or have not sent to their peers makes me nervous. I think\nrequiring an extra 'inv' round-trip would be simpler to implement and\nless likely to lead to some kind of DoS attack.\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Matt Corallo",
                "date": "2012-10-24T19:00:33",
                "message_text_only": "On Wed, 2012-10-24 at 14:54 -0400, Gavin Andresen wrote:\n> RE: sharing parts of the merkle branches when returning a 'merkleblock' :\n> \n> I think I agree that complicating the BIP for what should be a very\n> rare case (more than a handful of transactions in a block match the\n> transactions in your wallet) is the right decision.\nI believe you meant NOT complicating?\n> \n> I want to make sure I'm understanding this bit correctly:\n> \n> \"In addition, because a merkleblock message contains only a list of\n> transaction hashes, any transactions that the requesting node hasn't\n> either received or announced with an inv will be automatically sent as\n> well. This avoids a slow roundtrip that would otherwise be required\n> (receive hashes, didn't see some of these transactions yet, ask for\n> them).\"\n> \n> Requiring serving/relaying nodes to keep track of which transactions\n> they have or have not sent to their peers makes me nervous. I think\n> requiring an extra 'inv' round-trip would be simpler to implement and\n> less likely to lead to some kind of DoS attack.\n> \nSadly that requires (potentially) more DoS potential because you require\nnodes to store each transaction that could be requested instead of just\ngoing ahead and forwarding them.  I agree the BIP should not specify\nthat the sending node is required to keep track of which transactions\nhave been announced/sent to clients, however since the reference client\ndoes so currently, that implementation is significantly simpler (note\nthat it is a bounded set in the reference client, so even the reference\nclient doesn't really fully comply with the BIP as stated here).  \n\nMatt"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-24T19:10:49",
                "message_text_only": "Bitcoin already keeps track of which nodes have seen what to avoid\nredundant inv announcements.\n\nI think if you are approaching most transactions in a block matching the\nfilter then you would just request full blocks and do all the filtering\nclient side\nOn Oct 24, 2012 8:54 PM, \"Gavin Andresen\" <gavinandresen at gmail.com> wrote:\n\n> RE: sharing parts of the merkle branches when returning a 'merkleblock' :\n>\n> I think I agree that complicating the BIP for what should be a very\n> rare case (more than a handful of transactions in a block match the\n> transactions in your wallet) is the right decision.\n>\n> I want to make sure I'm understanding this bit correctly:\n>\n> \"In addition, because a merkleblock message contains only a list of\n> transaction hashes, any transactions that the requesting node hasn't\n> either received or announced with an inv will be automatically sent as\n> well. This avoids a slow roundtrip that would otherwise be required\n> (receive hashes, didn't see some of these transactions yet, ask for\n> them).\"\n>\n> Requiring serving/relaying nodes to keep track of which transactions\n> they have or have not sent to their peers makes me nervous. I think\n> requiring an extra 'inv' round-trip would be simpler to implement and\n> less likely to lead to some kind of DoS attack.\n>\n> --\n> --\n> Gavin Andresen\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20121024/02e6eddc/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2012-10-24T20:29:07",
                "message_text_only": "On Wed, Oct 24, 2012 at 3:10 PM, Mike Hearn <mike at plan99.net> wrote:\n> Bitcoin already keeps track of which nodes have seen what to avoid redundant\n> inv announcements.\n\nOops, right. That memory usage is bounded right now by bounds on the\nmemory pool size, though, right? (I'm being lazy and not digging into\nthat code)\n\nWhat is the worst-case for an attacker interested in trying to get you\nto saturate your upstream bandwidth or use lots of memory?  Set a\nbloom filter that matches everything, and then start requesting old\nblocks in the chain? It would be nice if the worst-case was no worse\nthan the worst-case we've got now (... requesting full, old\nblocks...).\n\n-- \n--\nGavin Andresen"
            },
            {
                "author": "Mike Hearn",
                "date": "2012-10-24T20:58:30",
                "message_text_only": "> What is the worst-case for an attacker interested in trying to get you\n> to saturate your upstream bandwidth or use lots of memory?  Set a\n> bloom filter that matches everything, and then start requesting old\n> blocks in the chain?\n\nIt would be slightly worse than shipping a full block but not seriously so.\n\nIf you just want to saturate bandwidth or disk IOPS you could probably\njust request random blocks over and over again."
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-10-24T21:55:34",
                "message_text_only": "On Wed, Oct 24, 2012 at 4:29 PM, Gavin Andresen <gavinandresen at gmail.com> wrote:\n> Oops, right. That memory usage is bounded right now by bounds on the\n> memory pool size, though, right? (I'm being lazy and not digging into\n> that code)\n\nCorrect me if I'm wrong but...  I do not think there is any bound on\nmempool size.\n\nMy proposal to age-out long-unconfirmed transactions is related, but\ndoes not completely solve the unbounded-size issue.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "Draft BIP for Bloom filtering",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Mike Hearn",
                "Gregory Maxwell",
                "Matt Corallo",
                "Gavin Andresen",
                "Pieter Wuille"
            ],
            "messages_count": 16,
            "total_messages_chars_count": 15976
        }
    }
]