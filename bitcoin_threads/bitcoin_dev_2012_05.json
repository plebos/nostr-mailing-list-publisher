[
    {
        "title": "[Bitcoin-development] new bitcoin.org clients page",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-05-02T13:22:42",
                "message_text_only": "We're debating the descriptions on the thread. I provided rewritten\ndescriptions that try and keep with the \"theme per client\" goal, whilst\nbeing less technical.\n\nI think it's unclear how best to run this page. It's clear we need one\nthough. If everyone can just submit whatever they like then we'll end up\nwith 4 or 5 \"pick me! pick me!\" type descriptions, which avoids a lot of\narguing but doesn't really help our users make a decision. If we have a\nBenign Dictator model we might end up with descriptions that are wrong or\ndon't highlight the strengths / weaknesses of each client properly.\n\nSo although it's messy I think the right path is probably the middle one -\nhave some descriptions that try to be neutral, then improve them based on\nfeedback from users and developers. They need to be flexible and evolve\nover time as the clients evolve too. At some point every client will\nsupport deterministic wallets so \"easy backups\" won't be worth mentioning\nany more, but there'll be new distinguishing features. And we all need to\ntry and be honest about our own work.\n\nHere is the current content. Like I said, the descriptions are *not* set in\nstone at all.\n\n\n\nBitcoin-Qt <http://bitcoin.org/>\n\nThe original software written by Satoshi Nakamoto, the project's founder.\nIf you aren't sure which program to pick, this is a good bet. This\napplication is a peer-to-peer client that builds the backbone of the\nBitcoin network. It is suited for enthusiasts, merchants, miners,\ndevelopers and people who want to help support the project. People who run\nBitcoin-Qt are first class network citizens and have the highest levels of\nsecurity, privacy and stability. However, it can be very resource intensive\nand you should be willing to leave it running in the background so other\ncomputers can connect to yours. If your computer is low powered or you\naren't willing to tolerate a 24-hour+ initial start time, you should\nconsider other clients. Cutting edge features tend to be implemented in\nother clients first.\n\nWebsite: bitcoin.org\n\nPlatforms:\nMultiBit <http://multibit.org/>\n\nMultiBit's primary focus is being fast and easy to use, even for people\nwith no technical knowledge. It has a YouTube channel to help you learn the\nsoftware, and includes helpful features such as an exchange rate ticker.\nMultiBit supports many languages such as German, Spanish and Greek.\nMultiBit synchronizes with the network much faster than Bitcoin-Qt and\nshould be ready for you to use within a few minutes. This is a good choice\nfor non technical users who want an easy to use experience, especially if\nyou use a Mac.\n\nWebsite: multibit.org\n\nPlatforms:\nArmory <http://bitcoinarmory.com/>\n\nArmory focuses on advanced wallet management features, such as the ability\nto construct transactions whilst disconnected from the internet. It\noperates in conjunction with a Bitcoin-Qt install. It requires a large\namount of RAM to operate and if you use Windows, it requires a 64 bit\nversion. It is a good choice for tech-savvy enthusiasts or merchants who\nwant to try out cutting edge ideas in the Bitcoin world. Armory was partly\nfunded by a community donation drive which raised over $4000.\n\nWebsite: bitcoinarmory.com\n\nPlatforms:\n\nElectrum <http://ecdsa.org/electrum>\n\nElectrum's focus is speed, with low resource usage and making wallet\nbackups easy. It operates in conjunction with remote servers that handle\nthe most complicated parts of the Bitcoin system, which is why it's fast.\nHowever, by running this client you don't contribute your computer's\nresources to the core network, and the remote servers that help give it\ngood performance have the ability to see all your transactions and tie them\ntogether. Whilst you need provide no personal information to use Electrum\n(as is true for all Bitcoin clients), this means the privacy level is lower\nthan for other clients. Merchants are recommended to use other p2p clients.\nElectrum is not quite user friendly yet - currently it is more suited for\ntech-saavy individuals.\n\nWebsite: ecdsa.org/electrum\n\nPlatforms:\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/f3252549/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-05-02T13:30:12",
                "message_text_only": "> If your computer is low powered or you aren't willing to tolerate a 24-hour+ initial start time,\n\nWhat computer is the initial start time 24-hours+ now?   On normal\nsystems initial sync-up now takes a couple hours.  It could be slower,\nof course, if you have the bad luck to end up with unresponsive peers\u2014\nbut that will also make the SPV nodes slow.\n\nBetter to be conservative I agree, but calling it a dozen times longer\nthan I'd expect is perhaps a bit much.\n\nRefine refine refine."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-05-02T13:32:30",
                "message_text_only": ">\n> What computer is the initial start time 24-hours+ now?   On normal\n> systems initial sync-up now takes a couple hours.\n>\n\nOK, I haven't tried a full block chain sync for a while. If it's only a\ncouple of hours that's great. Let's change that.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/93b2e3f5/attachment.html>"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-02T13:31:00",
                "message_text_only": "On Wednesday, May 02, 2012 9:22:42 AM Mike Hearn wrote:\n> The original software written by Satoshi Nakamoto, the project's founder.\n\nThis is just wrong. While Bitcoin-Qt is by far the best client, it is \nWladimir's, not Satoshi's.\n\n> If your computer is low powered or you aren't willing to tolerate a 24-hour+\n> initial start time, you should consider other clients.\n\nIsn't this down to only a few hours now?\n\n> Armory was partly funded by a community donation drive which raised over\n> $4000.\n\nI don't see this as relevant. Every client has been partly funded by \ndonations, anyway."
            },
            {
                "author": "grarpamp",
                "date": "2012-05-02T16:21:13",
                "message_text_only": "> While Bitcoin-Qt is by far the best client\n\nThis is purely subjective. One's best is another's worst.\n\n> These are both things which are particular\n> suitable to clear objective enumeration.\n\nYes, so for the purposes of compiling a list of clients\nand libraries, please just stick to a table of features.\n\nOn the subjective part, I'm finding the library+client\nimplementations to be nice, and indeed the future.\nAfaik, there are two major pairs of these so far that\nshould be listed. Ymmv.\n\nCan someone also please set the reply-to header\nfor these lists. It's really annoying to hit reply and\nnot have the list address show up. Thanks :)"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-02T16:30:44",
                "message_text_only": "On Wednesday, May 02, 2012 12:21:13 PM grarpamp wrote:\n> Can someone also please set the reply-to header\n> for these lists. It's really annoying to hit reply and\n> not have the list address show up. Thanks :)\n\nTry \"Reply to All\""
            },
            {
                "author": "grarpamp",
                "date": "2012-05-02T16:58:06",
                "message_text_only": "> Try \"Reply to All\"\n\nThat puts the sender in 'to' and list in 'cc',\nwhich dupes to the sender and eventually\nblows out the to and cc lines as everyone\nchimes in and doesn't trim. 'reply to' solves\nmost of that. assuming the list sw can do it."
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-02T18:29:01",
                "message_text_only": "On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n>> Try \"Reply to All\"\n>\n> That puts the sender in 'to' and list in 'cc',\n> which dupes to the sender and eventually\n> blows out the to and cc lines as everyone\n> chimes in and doesn't trim. 'reply to' solves\n> most of that. assuming the list sw can do it.\n\n\"Reply-To\" Munging Considered Harmful\nhttp://www.unicom.com/pw/reply-to-harmful.html\n\n\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-05-02T19:25:30",
                "message_text_only": "This is like the most annoying thing about email. Often with group emails, we'll be having a conversation then someone will click reply instead of group reply and the convo will go on for a while. Eventually I'll realise the persons are missing and add them back in.\n\nOn Yahoo mail (which I use for spam/mailing lists), to do reply all involves clicking a tab, scrolling down and clicking Reply All. Normally I instead go through the steps of reply, delete To, re-enter bitco... select drop down, click send.\n\nAnyone know how to make reply all the default in mutt? And how can I exclude it from re-including my own email when I do a group reply so I don't get the same email again.\n\n\n\n----- Original Message -----\nFrom: Jeff Garzik <jgarzik at exmulti.com>\nTo: grarpamp <grarpamp at gmail.com>\nCc: bitcoin-development at lists.sourceforge.net\nSent: Wednesday, May 2, 2012 7:29 PM\nSubject: Re: [Bitcoin-development] new bitcoin.org clients page\n\nOn Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n>> Try \"Reply to All\"\n>\n> That puts the sender in 'to' and list in 'cc',\n> which dupes to the sender and eventually\n> blows out the to and cc lines as everyone\n> chimes in and doesn't trim. 'reply to' solves\n> most of that. assuming the list sw can do it.\n\n\"Reply-To\" Munging Considered Harmful\nhttp://www.unicom.com/pw/reply-to-harmful.html\n\n\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Gary Rowe",
                "date": "2012-05-02T19:34:35",
                "message_text_only": "How about keeping it simple?\n\nBitcoin-Qt\n* Requires the entire blockchain\n* Standalone client\n* Designed for continuous operation\n* Available for Windows, Mac, Linux with installer\n* Developed in C\n* Website: https://bitcoin.org\n\nMultiBit\n* Requires a reduced blockchain\n* Standalone client\n* Designed for occasional use\n* Available for Windows, Mac, Linux with installer\n* Developed in Java\n* Website: http://multibit.org\n\nArmory\n* Requires the entire blockchain\n* Dependent client of Bitcoin-Qt\n* Designed for occasional use\n* Available for Windows (64-bit only), Mac, Linux (self-build)\n* Developed in Python\n* Website: http://bitcoinarmory.com/\n\nElectrum\n* Requires no blockchain\n* Dependent client of Bitcoin-Qt (on server)\n* Designed for occasional use\n* Available for Windows, Linux (self-build)\n* Developed in Python\n* Website: http://ecdsa.org/electrum/\n\nBitcoin Wallet (Android client)\n* Requires a reduced blockchain\n* Standalone client\n* Designed for occasional use on mobile\n* Available for Android only\n* Developed in Java\n* Website:\nhttps://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en\n\n\nOn 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com> wrote:\n\n> This is like the most annoying thing about email. Often with group emails,\n> we'll be having a conversation then someone will click reply instead of\n> group reply and the convo will go on for a while. Eventually I'll realise\n> the persons are missing and add them back in.\n>\n> On Yahoo mail (which I use for spam/mailing lists), to do reply all\n> involves clicking a tab, scrolling down and clicking Reply All. Normally I\n> instead go through the steps of reply, delete To, re-enter bitco... select\n> drop down, click send.\n>\n> Anyone know how to make reply all the default in mutt? And how can I\n> exclude it from re-including my own email when I do a group reply so I\n> don't get the same email again.\n>\n>\n>\n> ----- Original Message -----\n> From: Jeff Garzik <jgarzik at exmulti.com>\n> To: grarpamp <grarpamp at gmail.com>\n> Cc: bitcoin-development at lists.sourceforge.net\n> Sent: Wednesday, May 2, 2012 7:29 PM\n> Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>\n> On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n> >> Try \"Reply to All\"\n> >\n> > That puts the sender in 'to' and list in 'cc',\n> > which dupes to the sender and eventually\n> > blows out the to and cc lines as everyone\n> > chimes in and doesn't trim. 'reply to' solves\n> > most of that. assuming the list sw can do it.\n>\n> \"Reply-To\" Munging Considered Harmful\n> http://www.unicom.com/pw/reply-to-harmful.html\n>\n>\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/8726da8a/attachment.html>"
            },
            {
                "author": "Raphael NICOLLE",
                "date": "2012-05-02T19:40:14",
                "message_text_only": "Too technical if you ask me. We want a webpage for the dumbest end-user \nI think.\n\nJava? C? What the heck is this? Blockchain? Qt?\n\nRegards,\nRaphael\n\nOn 05/02/2012 09:34 PM, Gary Rowe wrote:\n> How about keeping it simple?\n>\n> Bitcoin-Qt\n> * Requires the entire blockchain\n> * Standalone client\n> * Designed for continuous operation\n> * Available for Windows, Mac, Linux with installer\n> * Developed in C\n> * Website: https://bitcoin.org\n>\n> MultiBit\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use\n> * Available for Windows, Mac, Linux with installer\n> * Developed in Java\n> * Website: http://multibit.org\n>\n> Armory\n> * Requires the entire blockchain\n> * Dependent client of Bitcoin-Qt\n> * Designed for occasional use\n> * Available for Windows (64-bit only), Mac, Linux (self-build)\n> * Developed in Python\n> * Website: http://bitcoinarmory.com/\n>\n> Electrum\n> * Requires no blockchain\n> * Dependent client of Bitcoin-Qt (on server)\n> * Designed for occasional use\n> * Available for Windows, Linux (self-build)\n> * Developed in Python\n> * Website: http://ecdsa.org/electrum/\n>\n> Bitcoin Wallet (Android client)\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use on mobile\n> * Available for Android only\n> * Developed in Java\n> * Website: \n> https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en \n> <https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en>\n>\n>\n> On 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com \n> <mailto:zgenjix at yahoo.com>> wrote:\n>\n>     This is like the most annoying thing about email. Often with group\n>     emails, we'll be having a conversation then someone will click\n>     reply instead of group reply and the convo will go on for a while.\n>     Eventually I'll realise the persons are missing and add them back in.\n>\n>     On Yahoo mail (which I use for spam/mailing lists), to do reply\n>     all involves clicking a tab, scrolling down and clicking Reply\n>     All. Normally I instead go through the steps of reply, delete To,\n>     re-enter bitco... select drop down, click send.\n>\n>     Anyone know how to make reply all the default in mutt? And how can\n>     I exclude it from re-including my own email when I do a group\n>     reply so I don't get the same email again.\n>\n>\n>\n>     ----- Original Message -----\n>     From: Jeff Garzik <jgarzik at exmulti.com <mailto:jgarzik at exmulti.com>>\n>     To: grarpamp <grarpamp at gmail.com <mailto:grarpamp at gmail.com>>\n>     Cc: bitcoin-development at lists.sourceforge.net\n>     <mailto:bitcoin-development at lists.sourceforge.net>\n>     Sent: Wednesday, May 2, 2012 7:29 PM\n>     Subject: Re: [Bitcoin-development] new bitcoin.org\n>     <http://bitcoin.org> clients page\n>\n>     On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com\n>     <mailto:grarpamp at gmail.com>> wrote:\n>     >> Try \"Reply to All\"\n>     >\n>     > That puts the sender in 'to' and list in 'cc',\n>     > which dupes to the sender and eventually\n>     > blows out the to and cc lines as everyone\n>     > chimes in and doesn't trim. 'reply to' solves\n>     > most of that. assuming the list sw can do it.\n>\n>     \"Reply-To\" Munging Considered Harmful\n>     http://www.unicom.com/pw/reply-to-harmful.html\n>\n>\n>\n>     --\n>     Jeff Garzik\n>     exMULTI, Inc.\n>     jgarzik at exmulti.com <mailto:jgarzik at exmulti.com>\n>\n>     ------------------------------------------------------------------------------\n>     Live Security Virtual Conference\n>     Exclusive live event will cover all the ways today's security and\n>     threat landscape has changed and how IT managers can respond.\n>     Discussions\n>     will include endpoint security, mobile security and the latest in\n>     malware\n>     threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>     ------------------------------------------------------------------------------\n>     Live Security Virtual Conference\n>     Exclusive live event will cover all the ways today's security and\n>     threat landscape has changed and how IT managers can respond.\n>     Discussions\n>     will include endpoint security, mobile security and the latest in\n>     malware\n>     threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/cabd51c1/attachment.html>"
            },
            {
                "author": "Gary Rowe",
                "date": "2012-05-02T19:42:10",
                "message_text_only": "Or we could just point everyone here:\nhttp://lovebitcoins.org/getStarted.html\n\n:-)\n\nOn 2 May 2012 20:40, Raphael NICOLLE <raphbot at gmail.com> wrote:\n\n>  Too technical if you ask me. We want a webpage for the dumbest end-user I\n> think.\n>\n> Java? C? What the heck is this? Blockchain? Qt?\n>\n> Regards,\n> Raphael\n>\n>\n> On 05/02/2012 09:34 PM, Gary Rowe wrote:\n>\n> How about keeping it simple?\n>\n>  Bitcoin-Qt\n> * Requires the entire blockchain\n> * Standalone client\n> * Designed for continuous operation\n> * Available for Windows, Mac, Linux with installer\n> * Developed in C\n> * Website: https://bitcoin.org\n>\n>  MultiBit\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use\n> * Available for Windows, Mac, Linux with installer\n> * Developed in Java\n> * Website: http://multibit.org\n>\n>  Armory\n> * Requires the entire blockchain\n> * Dependent client of Bitcoin-Qt\n> * Designed for occasional use\n> * Available for Windows (64-bit only), Mac, Linux (self-build)\n> * Developed in Python\n> * Website: http://bitcoinarmory.com/\n>\n>  Electrum\n> * Requires no blockchain\n> * Dependent client of Bitcoin-Qt (on server)\n> * Designed for occasional use\n> * Available for Windows, Linux (self-build)\n>  * Developed in Python\n> * Website: http://ecdsa.org/electrum/\n>\n>  Bitcoin Wallet (Android client)\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use on mobile\n> * Available for Android only\n> * Developed in Java\n> * Website:\n> https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en\n>\n>\n> On 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com> wrote:\n>\n>> This is like the most annoying thing about email. Often with group\n>> emails, we'll be having a conversation then someone will click reply\n>> instead of group reply and the convo will go on for a while. Eventually\n>> I'll realise the persons are missing and add them back in.\n>>\n>> On Yahoo mail (which I use for spam/mailing lists), to do reply all\n>> involves clicking a tab, scrolling down and clicking Reply All. Normally I\n>> instead go through the steps of reply, delete To, re-enter bitco... select\n>> drop down, click send.\n>>\n>> Anyone know how to make reply all the default in mutt? And how can I\n>> exclude it from re-including my own email when I do a group reply so I\n>> don't get the same email again.\n>>\n>>\n>>\n>> ----- Original Message -----\n>> From: Jeff Garzik <jgarzik at exmulti.com>\n>> To: grarpamp <grarpamp at gmail.com>\n>> Cc: bitcoin-development at lists.sourceforge.net\n>> Sent: Wednesday, May 2, 2012 7:29 PM\n>> Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>>\n>>  On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n>> >> Try \"Reply to All\"\n>> >\n>> > That puts the sender in 'to' and list in 'cc',\n>> > which dupes to the sender and eventually\n>> > blows out the to and cc lines as everyone\n>> > chimes in and doesn't trim. 'reply to' solves\n>> > most of that. assuming the list sw can do it.\n>>\n>> \"Reply-To\" Munging Considered Harmful\n>> http://www.unicom.com/pw/reply-to-harmful.html\n>>\n>>\n>>\n>> --\n>> Jeff Garzik\n>> exMULTI, Inc.\n>> jgarzik at exmulti.com\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.nethttps://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/288406b8/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-05-02T19:43:23",
                "message_text_only": "I'm not sure what \"designed for occasional use\" means.   Many users of\nother clients use them exclusively without touching other clients.  Armory\nis designed to be your only wallet (if bitcoind[d/-qt] is running in bkgd).\n I'm sure the other clients are the same.\n\nInstead, I think that line would be replaced by a blurb about the target\naudience.  \"Designed for Advanced Users\".  \"Designed for Quick Setup and\nInstant usability\".\n\nBtw, Armory now has full installers for both Windows and Linux\n(Ubuntu/Debian), with uninstallers and automatic URI registration\n\n\n\nOn Wed, May 2, 2012 at 3:34 PM, Gary Rowe <g.rowe at froot.co.uk> wrote:\n\n> How about keeping it simple?\n>\n> Bitcoin-Qt\n> * Requires the entire blockchain\n> * Standalone client\n> * Designed for continuous operation\n> * Available for Windows, Mac, Linux with installer\n> * Developed in C\n> * Website: https://bitcoin.org\n>\n> MultiBit\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use\n> * Available for Windows, Mac, Linux with installer\n> * Developed in Java\n> * Website: http://multibit.org\n>\n> Armory\n> * Requires the entire blockchain\n> * Dependent client of Bitcoin-Qt\n> * Designed for occasional use\n> * Available for Windows (64-bit only), Mac, Linux (self-build)\n> * Developed in Python\n> * Website: http://bitcoinarmory.com/\n>\n> Electrum\n> * Requires no blockchain\n> * Dependent client of Bitcoin-Qt (on server)\n> * Designed for occasional use\n> * Available for Windows, Linux (self-build)\n> * Developed in Python\n> * Website: http://ecdsa.org/electrum/\n>\n> Bitcoin Wallet (Android client)\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use on mobile\n> * Available for Android only\n> * Developed in Java\n> * Website:\n> https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en\n>\n>\n> On 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com> wrote:\n>\n>> This is like the most annoying thing about email. Often with group\n>> emails, we'll be having a conversation then someone will click reply\n>> instead of group reply and the convo will go on for a while. Eventually\n>> I'll realise the persons are missing and add them back in.\n>>\n>> On Yahoo mail (which I use for spam/mailing lists), to do reply all\n>> involves clicking a tab, scrolling down and clicking Reply All. Normally I\n>> instead go through the steps of reply, delete To, re-enter bitco... select\n>> drop down, click send.\n>>\n>> Anyone know how to make reply all the default in mutt? And how can I\n>> exclude it from re-including my own email when I do a group reply so I\n>> don't get the same email again.\n>>\n>>\n>>\n>> ----- Original Message -----\n>> From: Jeff Garzik <jgarzik at exmulti.com>\n>> To: grarpamp <grarpamp at gmail.com>\n>> Cc: bitcoin-development at lists.sourceforge.net\n>> Sent: Wednesday, May 2, 2012 7:29 PM\n>> Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>>\n>> On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n>> >> Try \"Reply to All\"\n>> >\n>> > That puts the sender in 'to' and list in 'cc',\n>> > which dupes to the sender and eventually\n>> > blows out the to and cc lines as everyone\n>> > chimes in and doesn't trim. 'reply to' solves\n>> > most of that. assuming the list sw can do it.\n>>\n>> \"Reply-To\" Munging Considered Harmful\n>> http://www.unicom.com/pw/reply-to-harmful.html\n>>\n>>\n>>\n>> --\n>> Jeff Garzik\n>> exMULTI, Inc.\n>> jgarzik at exmulti.com\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/af738a5b/attachment.html>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-05-02T19:43:52",
                "message_text_only": "This discussion about ordering is absolutely retarded. Once the list fills up, then it won't matter. For now I'm deciding the ordering with Bitcoin-Qt first and the others ordered however. That was nobody can try to game the system (it remains unexploitable).\n\nIf there are no objections, then I am going to merge this branch. The forum thread is divulging into a mess all over the place, and this conversation can go on forever discussing the silly fine details:\n\nhttp://hackerspaces.org/wiki/The_Bikeshed_Anti-PatternProblem:\nYou suggest creating something new for your hackerspace, like a \nbikeshed.  But now all anyone will discuss is its colour. No bikeshed \nwill be built.\n\nArmory & MultiBit, are you OK with that description? I will check with ThomasV about Electrum.\n\n\n________________________________\nFrom: Gary Rowe <g.rowe at froot.co.uk>\nTo: \"bitcoin-development at lists.sourceforge.net\" <bitcoin-development at lists.sourceforge.net> \nSent: Wednesday, May 2, 2012 8:34 PM\nSubject: Re: [Bitcoin-development] new bitcoin.org clients page\n\n\nHow about keeping it simple?\n\nBitcoin-Qt\n* Requires the entire blockchain\n* Standalone client\n* Designed for continuous operation\n* Available for Windows, Mac, Linux with installer\n* Developed in C\n* Website: https://bitcoin.org\n\nMultiBit\n* Requires a reduced blockchain\u00a0\n* Standalone client\n* Designed for occasional use\n* Available for Windows, Mac, Linux with installer\n* Developed in Java \u00a0\n* Website: http://multibit.org\n\nArmory\n* Requires the entire blockchain\n* Dependent client of Bitcoin-Qt\u00a0\n* Designed for occasional use\n* Available for Windows (64-bit only), Mac, Linux (self-build)\n* Developed in Python\n* Website: http://bitcoinarmory.com/\n\nElectrum\n* Requires no blockchain\n* Dependent client of Bitcoin-Qt (on server)\n* Designed for occasional use\n* Available for Windows, Linux (self-build)\n* Developed in Python\n* Website: http://ecdsa.org/electrum/\n\nBitcoin Wallet (Android client)\n* Requires a reduced blockchain\n* Standalone client\n* Designed for occasional use on mobile\n* Available for Android only\n* Developed in Java\n* Website: https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en\n\n\nOn 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com> wrote:\n\nThis is like the most annoying thing about email. Often with group emails, we'll be having a conversation then someone will click reply instead of group reply and the convo will go on for a while. Eventually I'll realise the persons are missing and add them back in.\n>\n>On Yahoo mail (which I use for spam/mailing lists), to do reply all involves clicking a tab, scrolling down and clicking Reply All. Normally I instead go through the steps of reply, delete To, re-enter bitco... select drop down, click send.\n>\n>Anyone know how to make reply all the default in mutt? And how can I exclude it from re-including my own email when I do a group reply so I don't get the same email again.\n>\n>\n>\n>\n>----- Original Message -----\n>From: Jeff Garzik <jgarzik at exmulti.com>\n>To: grarpamp <grarpamp at gmail.com>\n>Cc: bitcoin-development at lists.sourceforge.net\n>Sent: Wednesday, May 2, 2012 7:29 PM\n>Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>\n>\n>On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n>>> Try \"Reply to All\"\n>>\n>> That puts the sender in 'to' and list in 'cc',\n>> which dupes to the sender and eventually\n>> blows out the to and cc lines as everyone\n>> chimes in and doesn't trim. 'reply to' solves\n>> most of that. assuming the list sw can do it.\n>\n>\"Reply-To\" Munging Considered Harmful\n>http://www.unicom.com/pw/reply-to-harmful.html\n>\n>\n>\n>--\n>Jeff Garzik\n>exMULTI, Inc.\n>jgarzik at exmulti.com\n>\n>------------------------------------------------------------------------------\n>Live Security Virtual Conference\n>Exclusive live event will cover all the ways today's security and\n>threat landscape has changed and how IT managers can respond. Discussions\n>will include endpoint security, mobile security and the latest in malware\n>threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>------------------------------------------------------------------------------\n>Live Security Virtual Conference\n>Exclusive live event will cover all the ways today's security and\n>threat landscape has changed and how IT managers can respond. Discussions\n>will include endpoint security, mobile security and the latest in malware\n>threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Gary Rowe",
                "date": "2012-05-02T19:46:52",
                "message_text_only": "Alan, apologies about the installer - I was just using your website info to\ninfer how it all fitted together.\n\nOn 2 May 2012 20:43, Amir Taaki <zgenjix at yahoo.com> wrote:\n\n> This discussion about ordering is absolutely retarded. Once the list fills\n> up, then it won't matter. For now I'm deciding the ordering with Bitcoin-Qt\n> first and the others ordered however. That was nobody can try to game the\n> system (it remains unexploitable).\n>\n> If there are no objections, then I am going to merge this branch. The\n> forum thread is divulging into a mess all over the place, and this\n> conversation can go on forever discussing the silly fine details:\n>\n> http://hackerspaces.org/wiki/The_Bikeshed_Anti-PatternProblem:\n> You suggest creating something new for your hackerspace, like a\n> bikeshed.  But now all anyone will discuss is its colour. No bikeshed\n> will be built.\n>\n> Armory & MultiBit, are you OK with that description? I will check with\n> ThomasV about Electrum.\n>\n>\n> ________________________________\n> From: Gary Rowe <g.rowe at froot.co.uk>\n> To: \"bitcoin-development at lists.sourceforge.net\" <\n> bitcoin-development at lists.sourceforge.net>\n> Sent: Wednesday, May 2, 2012 8:34 PM\n> Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>\n>\n> How about keeping it simple?\n>\n> Bitcoin-Qt\n> * Requires the entire blockchain\n> * Standalone client\n> * Designed for continuous operation\n> * Available for Windows, Mac, Linux with installer\n> * Developed in C\n> * Website: https://bitcoin.org\n>\n> MultiBit\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use\n> * Available for Windows, Mac, Linux with installer\n> * Developed in Java\n> * Website: http://multibit.org\n>\n> Armory\n> * Requires the entire blockchain\n> * Dependent client of Bitcoin-Qt\n> * Designed for occasional use\n> * Available for Windows (64-bit only), Mac, Linux (self-build)\n> * Developed in Python\n> * Website: http://bitcoinarmory.com/\n>\n> Electrum\n> * Requires no blockchain\n> * Dependent client of Bitcoin-Qt (on server)\n> * Designed for occasional use\n> * Available for Windows, Linux (self-build)\n> * Developed in Python\n> * Website: http://ecdsa.org/electrum/\n>\n> Bitcoin Wallet (Android client)\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use on mobile\n> * Available for Android only\n> * Developed in Java\n> * Website:\n> https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en\n>\n>\n> On 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com> wrote:\n>\n> This is like the most annoying thing about email. Often with group emails,\n> we'll be having a conversation then someone will click reply instead of\n> group reply and the convo will go on for a while. Eventually I'll realise\n> the persons are missing and add them back in.\n> >\n> >On Yahoo mail (which I use for spam/mailing lists), to do reply all\n> involves clicking a tab, scrolling down and clicking Reply All. Normally I\n> instead go through the steps of reply, delete To, re-enter bitco... select\n> drop down, click send.\n> >\n> >Anyone know how to make reply all the default in mutt? And how can I\n> exclude it from re-including my own email when I do a group reply so I\n> don't get the same email again.\n> >\n> >\n> >\n> >\n> >----- Original Message -----\n> >From: Jeff Garzik <jgarzik at exmulti.com>\n> >To: grarpamp <grarpamp at gmail.com>\n> >Cc: bitcoin-development at lists.sourceforge.net\n> >Sent: Wednesday, May 2, 2012 7:29 PM\n> >Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n> >\n> >\n> >On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n> >>> Try \"Reply to All\"\n> >>\n> >> That puts the sender in 'to' and list in 'cc',\n> >> which dupes to the sender and eventually\n> >> blows out the to and cc lines as everyone\n> >> chimes in and doesn't trim. 'reply to' solves\n> >> most of that. assuming the list sw can do it.\n> >\n> >\"Reply-To\" Munging Considered Harmful\n> >http://www.unicom.com/pw/reply-to-harmful.html\n> >\n> >\n> >\n> >--\n> >Jeff Garzik\n> >exMULTI, Inc.\n> >jgarzik at exmulti.com\n> >\n>\n> >------------------------------------------------------------------------------\n> >Live Security Virtual Conference\n> >Exclusive live event will cover all the ways today's security and\n> >threat landscape has changed and how IT managers can respond. Discussions\n> >will include endpoint security, mobile security and the latest in malware\n> >threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> >_______________________________________________\n> >Bitcoin-development mailing list\n> >Bitcoin-development at lists.sourceforge.net\n> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n>\n> >------------------------------------------------------------------------------\n> >Live Security Virtual Conference\n> >Exclusive live event will cover all the ways today's security and\n> >threat landscape has changed and how IT managers can respond. Discussions\n> >will include endpoint security, mobile security and the latest in malware\n> >threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> >_______________________________________________\n> >Bitcoin-development mailing list\n> >Bitcoin-development at lists.sourceforge.net\n> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/624997b5/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-05-02T19:56:02",
                "message_text_only": "I think it's perfectly reasonable to debate ordering.  I personally don't\nthink Armory should be up front, because it's not intended for beginners.\n How's that for honesty?  I don't think anyone is trying to game the system\nright now, I think we're trying to come up with a reasonable mechanism for\nappealing to new users and get the community more connected.   And make\nsure everyone understands the system.\n\nOn the other hand, perhaps it's better to take the acceptable 80% solution,\nand revise it over time...\n\nAmir, I don't have access to the page.  I've never been able to view it.\n Changing my hosts file doesn't seem to do anything.  Can you just forward\nme the text?  I'll send you an approval email.\n\n\n\n\nOn Wed, May 2, 2012 at 3:43 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n\n> This discussion about ordering is absolutely retarded. Once the list fills\n> up, then it won't matter. For now I'm deciding the ordering with Bitcoin-Qt\n> first and the others ordered however. That was nobody can try to game the\n> system (it remains unexploitable).\n>\n> If there are no objections, then I am going to merge this branch. The\n> forum thread is divulging into a mess all over the place, and this\n> conversation can go on forever discussing the silly fine details:\n>\n> http://hackerspaces.org/wiki/The_Bikeshed_Anti-PatternProblem:\n> You suggest creating something new for your hackerspace, like a\n> bikeshed.  But now all anyone will discuss is its colour. No bikeshed\n> will be built.\n>\n> Armory & MultiBit, are you OK with that description? I will check with\n> ThomasV about Electrum.\n>\n>\n> ________________________________\n> From: Gary Rowe <g.rowe at froot.co.uk>\n> To: \"bitcoin-development at lists.sourceforge.net\" <\n> bitcoin-development at lists.sourceforge.net>\n> Sent: Wednesday, May 2, 2012 8:34 PM\n> Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>\n>\n> How about keeping it simple?\n>\n> Bitcoin-Qt\n> * Requires the entire blockchain\n> * Standalone client\n> * Designed for continuous operation\n> * Available for Windows, Mac, Linux with installer\n> * Developed in C\n> * Website: https://bitcoin.org\n>\n> MultiBit\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use\n> * Available for Windows, Mac, Linux with installer\n> * Developed in Java\n> * Website: http://multibit.org\n>\n> Armory\n> * Requires the entire blockchain\n> * Dependent client of Bitcoin-Qt\n> * Designed for occasional use\n> * Available for Windows (64-bit only), Mac, Linux (self-build)\n> * Developed in Python\n> * Website: http://bitcoinarmory.com/\n>\n> Electrum\n> * Requires no blockchain\n> * Dependent client of Bitcoin-Qt (on server)\n> * Designed for occasional use\n> * Available for Windows, Linux (self-build)\n> * Developed in Python\n> * Website: http://ecdsa.org/electrum/\n>\n> Bitcoin Wallet (Android client)\n> * Requires a reduced blockchain\n> * Standalone client\n> * Designed for occasional use on mobile\n> * Available for Android only\n> * Developed in Java\n> * Website:\n> https://play.google.com/store/apps/details?id=de.schildbach.wallet&hl=en\n>\n>\n> On 2 May 2012 20:25, Amir Taaki <zgenjix at yahoo.com> wrote:\n>\n> This is like the most annoying thing about email. Often with group emails,\n> we'll be having a conversation then someone will click reply instead of\n> group reply and the convo will go on for a while. Eventually I'll realise\n> the persons are missing and add them back in.\n> >\n> >On Yahoo mail (which I use for spam/mailing lists), to do reply all\n> involves clicking a tab, scrolling down and clicking Reply All. Normally I\n> instead go through the steps of reply, delete To, re-enter bitco... select\n> drop down, click send.\n> >\n> >Anyone know how to make reply all the default in mutt? And how can I\n> exclude it from re-including my own email when I do a group reply so I\n> don't get the same email again.\n> >\n> >\n> >\n> >\n> >----- Original Message -----\n> >From: Jeff Garzik <jgarzik at exmulti.com>\n> >To: grarpamp <grarpamp at gmail.com>\n> >Cc: bitcoin-development at lists.sourceforge.net\n> >Sent: Wednesday, May 2, 2012 7:29 PM\n> >Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n> >\n> >\n> >On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n> >>> Try \"Reply to All\"\n> >>\n> >> That puts the sender in 'to' and list in 'cc',\n> >> which dupes to the sender and eventually\n> >> blows out the to and cc lines as everyone\n> >> chimes in and doesn't trim. 'reply to' solves\n> >> most of that. assuming the list sw can do it.\n> >\n> >\"Reply-To\" Munging Considered Harmful\n> >http://www.unicom.com/pw/reply-to-harmful.html\n> >\n> >\n> >\n> >--\n> >Jeff Garzik\n> >exMULTI, Inc.\n> >jgarzik at exmulti.com\n> >\n>\n> >------------------------------------------------------------------------------\n> >Live Security Virtual Conference\n> >Exclusive live event will cover all the ways today's security and\n> >threat landscape has changed and how IT managers can respond. Discussions\n> >will include endpoint security, mobile security and the latest in malware\n> >threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> >_______________________________________________\n> >Bitcoin-development mailing list\n> >Bitcoin-development at lists.sourceforge.net\n> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n>\n> >------------------------------------------------------------------------------\n> >Live Security Virtual Conference\n> >Exclusive live event will cover all the ways today's security and\n> >threat landscape has changed and how IT managers can respond. Discussions\n> >will include endpoint security, mobile security and the latest in malware\n> >threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> >_______________________________________________\n> >Bitcoin-development mailing list\n> >Bitcoin-development at lists.sourceforge.net\n> >https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/08c0ebe1/attachment.html>"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-02T20:25:26",
                "message_text_only": "On Wednesday, May 02, 2012 3:34:35 PM Gary Rowe wrote:\n> Bitcoin-Qt\n> * Developed in C\n\nThis is far less relevant than license...\n\n> Armory\n> * Requires the entire blockchain\n> * Dependent client of Bitcoin-Qt\n\nOr bitcoind?\n\n> Electrum\n> * Dependent client of Bitcoin-Qt (on server)\n\nDependent on centralized server, not any particular client\n\n> Bitcoin Wallet (Android client)\n\nThere are multiple Android clients. There is (or was) an OS selection to the \nleft of the client choices...\n\nOn Wednesday, May 02, 2012 3:43:23 PM Alan Reiner wrote:\n> I'm not sure what \"designed for occasional use\" means.   Many users of\n> other clients use them exclusively without touching other clients.  Armory\n> is designed to be your only wallet (if bitcoind[d/-qt] is running in bkgd).\n>  I'm sure the other clients are the same.\n\nPretty sure it means \"not running continuously\".\n\n> Btw, Armory now has full installers for both Windows and Linux\n> (Ubuntu/Debian), with uninstallers and automatic URI registration\n\nWould be awesome if it took after Spesmilo and managed bitcoind itself in the \nbackground..."
            },
            {
                "author": "Gary Rowe",
                "date": "2012-05-02T20:39:45",
                "message_text_only": "Now that I've seen and read through the forum thread on this, I think I'll\nstep back and let others get on with it. As Amir notes, we could be \"Bike\nShedding\" this for years.\n\nOn 2 May 2012 21:25, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Wednesday, May 02, 2012 3:34:35 PM Gary Rowe wrote:\n> > Bitcoin-Qt\n> > * Developed in C\n>\n> This is far less relevant than license...\n>\n> > Armory\n> > * Requires the entire blockchain\n> > * Dependent client of Bitcoin-Qt\n>\n> Or bitcoind?\n>\n> > Electrum\n> > * Dependent client of Bitcoin-Qt (on server)\n>\n> Dependent on centralized server, not any particular client\n>\n> > Bitcoin Wallet (Android client)\n>\n> There are multiple Android clients. There is (or was) an OS selection to\n> the\n> left of the client choices...\n>\n> On Wednesday, May 02, 2012 3:43:23 PM Alan Reiner wrote:\n> > I'm not sure what \"designed for occasional use\" means.   Many users of\n> > other clients use them exclusively without touching other clients.\n>  Armory\n> > is designed to be your only wallet (if bitcoind[d/-qt] is running in\n> bkgd).\n> >  I'm sure the other clients are the same.\n>\n> Pretty sure it means \"not running continuously\".\n>\n> > Btw, Armory now has full installers for both Windows and Linux\n> > (Ubuntu/Debian), with uninstallers and automatic URI registration\n>\n> Would be awesome if it took after Spesmilo and managed bitcoind itself in\n> the\n> background...\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/ec23d93e/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-05-02T19:35:41",
                "message_text_only": "Oh, like I did 3 hours ago?  Gah!  I replied directly to grarpamp by\naccident.  Sorry if this seems out of place now...\n\nI'm all for sorting the clients by \"ease of use\".  We want the smoothest\nfirst experience greeting users new to Bitcoin.  I have grand plans of\ndefaulting Armory to a standard user mode that is standalone, easy to use,\netc.  But until then, Armory will remain an a power-users thing, and I'd\nprefer not to have Bitcoin n00bs emailing me for support before they know\nwhat Bitcoin-Qt is, or, more likely, installing Armory alone and then\nwalking away when nothing works.\n\nAs someone else mentioned previously, the advanced stuff will generally be\nfound by advanced users.  I think it should still receive exposure through\nthese means, but not on the top/first row.\n\nI personally think the page should say something like \"New to Bitcoin?\nStart experiencing Bitcoin with My Phone <menu of phone options>, or My\nDesktop <menu of desktop options>\"  Put the top 3 on each and either a\nbutton for \"More Options\", or a short list of other options without\nscreenshots, and just descriptions with links.  Ideally, it would be sorted\nby popularity, because that's probably the most important metric that ties\ntogether all features into a single number, but we don't have good stats on\nthat.  For now, we settle this by putting Bitcoin-Qt up front, and sort\neverything else by how easy it is for users to get started and perceived\npopularity and disagreements can be settled by semi-regular rotation.\n\nFor now, I don't think ordering is super important.  No one here is\nthreatening lawsuits for improper placement, and the rotation will be good\nto keep the main Bitcoin page looking less stagnant, and slowly exposing\nrepeat visitors to the variety of options available.\n\n--Alan\n\n\n\n\nOn Wed, May 2, 2012 at 3:25 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n\n> This is like the most annoying thing about email. Often with group emails,\n> we'll be having a conversation then someone will click reply instead of\n> group reply and the convo will go on for a while. Eventually I'll realise\n> the persons are missing and add them back in.\n>\n> On Yahoo mail (which I use for spam/mailing lists), to do reply all\n> involves clicking a tab, scrolling down and clicking Reply All. Normally I\n> instead go through the steps of reply, delete To, re-enter bitco... select\n> drop down, click send.\n>\n> Anyone know how to make reply all the default in mutt? And how can I\n> exclude it from re-including my own email when I do a group reply so I\n> don't get the same email again.\n>\n>\n>\n> ----- Original Message -----\n> From: Jeff Garzik <jgarzik at exmulti.com>\n> To: grarpamp <grarpamp at gmail.com>\n> Cc: bitcoin-development at lists.sourceforge.net\n> Sent: Wednesday, May 2, 2012 7:29 PM\n> Subject: Re: [Bitcoin-development] new bitcoin.org clients page\n>\n> On Wed, May 2, 2012 at 12:58 PM, grarpamp <grarpamp at gmail.com> wrote:\n> >> Try \"Reply to All\"\n> >\n> > That puts the sender in 'to' and list in 'cc',\n> > which dupes to the sender and eventually\n> > blows out the to and cc lines as everyone\n> > chimes in and doesn't trim. 'reply to' solves\n> > most of that. assuming the list sw can do it.\n>\n> \"Reply-To\" Munging Considered Harmful\n> http://www.unicom.com/pw/reply-to-harmful.html\n>\n>\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/7e9cd5a0/attachment.html>"
            },
            {
                "author": "grarpamp",
                "date": "2012-05-03T09:06:19",
                "message_text_only": "> \"Reply-To\" Munging Considered Harmful\n> http://www.unicom.com/pw/reply-to-harmful.html\n\nOk, ok. but only because this reminds me of the\ntop-posting and formatting advice page that\nI can't seem to find right now.\n\nBut I'm not munging what my client decides to\nput in to/cc on a g reply either :)"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-05-02T13:38:50",
                "message_text_only": "> MultiBit supports many languages such as German, Spanish and Greek.\n\nBitcoin-qt is translated into a pretty broad set of languages (now\u2014 I\ncant tell you how many of them are _good_). Listing language just\nunder multibit makes it sound like a distinguishing characteristic.\nMight it be useful to add two info lines to each entry:  One with the\nlanguage codes it supports (ISO 639 please, not flags),  and another\nline with operating system support? (perhaps not, they're all\nwin/mac/linux, enh?)   These are both things which are particular\nsuitable to clear objective enumeration."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-05-02T13:42:27",
                "message_text_only": ">\n> Bitcoin-qt is translated into a pretty broad set of languages (now\u2014 I\n> cant tell you how many of them are _good_). Listing language just\n> under multibit makes it sound like a distinguishing characteristic.\n>\n\nFair enough then, let's take that out.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/3aacf780/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-05-02T15:01:22",
                "message_text_only": "Btw, I sent updated text to Genjix Armory.  I hope that gets included or\nreviewed.\n\nAnd I agree about the $4k donations thing.  That's complete immaterial for\nthis page.  Though the rest of the description there is reasonable, and\nmight even be better than what I sent Genjix.\n\n-Alan\n\n\nOn Wed, May 2, 2012 at 9:42 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Bitcoin-qt is translated into a pretty broad set of languages (now\u2014 I\n>> cant tell you how many of them are _good_). Listing language just\n>> under multibit makes it sound like a distinguishing characteristic.\n>>\n>\n> Fair enough then, let's take that out.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120502/93552a6a/attachment.html>"
            },
            {
                "author": "grarpamp",
                "date": "2012-05-02T16:53:07",
                "message_text_only": "> it's unclear how best to run this page. It's clear we need one though.\n> the right path is probably the middle one - have some descriptions that try to be neutral\n\nDo it in two parts...\n- overview, history, architecture model, 'whys'.\n- agnostic table of features, platforms, stats, protocols, etc\n\nLast, resolve whether or not bitcoin.org is independant.\nIt cannot be if it does not accept all lib/client under it's umbrella\nor has a lib/client project of it's own. You will hit up against this,\njust saying.\n\n\n> Bitcoin-Qt\n> This application is a peer-to-peer client that builds the backbone of the Bitcoin network.\n\nNo, they all do this and build it, subject to their feature set.\n\n> It is suited for enthusiasts, merchants, miners, developers\n\nNo, all implementations are suited for whoever, subject to their feature set.\n\n>  and people who want to help support the project.\n\nWhich project, the given client or the bitcoin meme.\n\n> People who run Bitcoin-Qt are first class network citizens and have the highest levels of security, privacy and stability.\n\nRight, anyone who doesn't is unwashed rebel scum, running default\ninstalls of xp, on systems with bad ram, who post their home address,\ntransaction logs, and pink bits on facebook.\n\n> leave it running in the background so other computers can connect to yours.\n\nAgain, a feature set / usage model thing.\n\n\n> MultiBit\n> fast and easy to use, even for people with no technical knowledge.\n\nHey, we're fast, easy and for noobs, me too.\n\n> It has a...\n\nBut at least the backing specifics to that claim are stated.\n\n\n> Armory\n> Armory was partly funded by a community donation drive which raised over $4000.\n\nYeah, every lib/client will have a donation thing on their own site,\nand the developers own real world wallet.\n\n> Electrum\n> the privacy level is lower than for other clients.\n\nNot sure of this claim. It's all in the usage. Run your own remote,\nuse anonymizers, etc. Right?"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2012-05-03T07:28:50",
                "message_text_only": "On 05/02/2012 03:22 PM, Mike Hearn wrote:\n> We're debating the descriptions on the thread. I provided rewritten\n> descriptions that try and keep with the \"theme per client\" goal, whilst\n> being less technical.\n\nCan we add Bitcoin Wallet? I'm not very good at writing descriptions, so\nI would just add this for starters:\n\n--\nBitcoin Wallet is a standalone wallet for Android devices. Its primary\nfocus is ease of use and being independant of central network components\n(servers). It supports initiating transactions via QR code,  Bitcoin\nURIs or near-field communication (NFC). It has a useful currency\nconversion calculator.\n\nPlatforms: Android\nMarket: https://play.google.com/store/apps/details?id=de.schildbach.wallet\nProject: http://code.google.com/p/bitcoin-wallet/\n--"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2012-05-03T09:24:36",
                "message_text_only": "On 5/3/12, Andreas Schildbach <andreas at schildbach.de> wrote:\n> Can we add Bitcoin Wallet?\n\nSomeone said to me that the cell phone apps they had tried were still\ntoo slow. I'm still using an old phone so I didn't know well what to\nanswer him. I recomended him bitcoin wallet and bitcoin spinner, but I\nwarned him that I haven't really used them.\n\nIt would be nice to also have a list with smartphone clients near the\nlist that is being prepared.\n\n-- \nJorge Tim\u00f3n"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2012-05-03T09:53:33",
                "message_text_only": "On 05/03/2012 11:24 AM, Jorge Tim\u00f3n wrote:\n> On 5/3/12, Andreas Schildbach <andreas at schildbach.de> wrote:\n>> Can we add Bitcoin Wallet?\n> \n> Someone said to me that the cell phone apps they had tried were still\n> too slow. I'm still using an old phone so I didn't know well what to\n> answer him.\n\nI never measured exactly, but Bitcoin Wallet takes about an hour to\nupdate its blockchain initially on good WLAN (lightweight approach,\nheaders only).\n\nAfter that, Bitcoin Wallet is just as fast as any other client.\n\nThe advantage of that approach is that you are not dependent on any\nserver (like Spinner or Electrum). Essentially you're carrying the\nblockchain in your pocket.\n\nCheers,\n\nAndreas"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2012-05-03T10:25:48",
                "message_text_only": "Maybe he didn't configured them well or didn't tried the right ones.\nHe said that on the freicoin forum:\nhttp://www.freicoin.org/mobile-app-t28.html\n\nBack to topic...\nWhat do you think about including some smartphone clients in the list?\n\n\nOn 5/3/12, Andreas Schildbach <andreas at schildbach.de> wrote:\n> On 05/03/2012 11:24 AM, Jorge Tim\u00f3n wrote:\n>> On 5/3/12, Andreas Schildbach <andreas at schildbach.de> wrote:\n>>> Can we add Bitcoin Wallet?\n>>\n>> Someone said to me that the cell phone apps they had tried were still\n>> too slow. I'm still using an old phone so I didn't know well what to\n>> answer him.\n>\n> I never measured exactly, but Bitcoin Wallet takes about an hour to\n> update its blockchain initially on good WLAN (lightweight approach,\n> headers only).\n>\n> After that, Bitcoin Wallet is just as fast as any other client.\n>\n> The advantage of that approach is that you are not dependent on any\n> server (like Spinner or Electrum). Essentially you're carrying the\n> blockchain in your pocket.\n>\n> Cheers,\n>\n> Andreas\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n-- \nJorge Tim\u00f3n"
            },
            {
                "author": "Jim",
                "date": "2012-05-02T20:41:29",
                "message_text_only": "Hi Amir,\n\nI am fine with the MultiBit description (+ subsequent suggestions like taking the language text out).\n\nLooking forward to seeing it on the bitcoin.org site.\n\nJim\n\njim618 at fastmail.co.uk"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-02T23:04:08",
                "message_text_only": "On Mon, Apr 30, 2012 at 1:50 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Check it :) https://github.com/bitcoin/bitcoin.org/pull/34\n\nPersonally, all this seems far too focused on a centralized website\n(bitcoin.org), and presents far too many choices at once to the user.\n\nOn bitcoin.org (registered by Satoshi), I would rather see the Satoshi\nreference client and perhaps an \"other clients\" link on the wiki.\n\nModern websites are working hard to _reduce_ the number of download\nlinks, not _increase_ them.  See, e.g.\nhttp://fedoraproject.org/en/get-fedora where a single download choice\nis presented, and then an \"other options\" link is below the great big\ndownload button.\n\nRather than fighting over what a particular bitcoin.org page should\nlook like, why not maintain an independently managed\nBitcoinClients.org website?  Or GetBitcoinClient.org or somesuch.\n\nSolve this problem in a distributed fashion, rather than stuffing it\nall onto bitcoin.org.  Bitcoin.org, IMO, is the home of the \"reference\nproject\" not the entire bitcoin community.  Emphasizing that months\nago was why the forum was moved to bitcointalk.org.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            }
        ],
        "thread_summary": {
            "title": "new bitcoin.org clients page",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr",
                "Jim",
                "Andreas Schildbach",
                "Mike Hearn",
                "Amir Taaki",
                "Raphael NICOLLE",
                "Alan Reiner",
                "Gregory Maxwell",
                "Jorge Tim\u00f3n",
                "Gary Rowe",
                "grarpamp"
            ],
            "messages_count": 30,
            "total_messages_chars_count": 65688
        }
    },
    {
        "title": "[Bitcoin-development] URI Handling in Bitcoin-Qt",
        "thread_messages": [
            {
                "author": "Alan Reiner",
                "date": "2012-05-03T04:28:13",
                "message_text_only": "I want to follow up on BIP 21 (URI scheme), which I have recently \nimplemented in Armory and I have become a huge fan of it.  But I've got \na couple gripes:\n\n*(1) *What is the status & plans for supporting \"bitcoin:\" URIs in the \nSatoshi client?  My understanding is that it currently creates URIs, but \ndoes *not* register itself with the OS to handle such links.  Is this \naccurate?  This seems like a very high-value feature, and I'd recommend \nthat we consider it a priority -- I can't think of any other upgrade \nthat can improve usability so dramatically on the desktop.\n\nAfter implementing it all in Armory, I wrote up a walk-thru \n<https://bitcointalk.org/index.php?topic=79010.msg879804#msg879804> \nrecounting how I did the OS-registration in Windows and gnome-based *nix \nsystems.  Perhaps it can give the Bitcoin-Qt devs a jumpstart on getting \nit implemented.  (and then I can get feedback about doing for generic \nLinux and Mac/OSX)\n\n\n*(2) *I need to understand better what the intentions were behind \n\"label=\" and \"message=\".  The way I understand it is that Bitcoin-Qt \nuses and stores only address-labels, and no other transactional info is \nstored in the wallet.  As such, the \"message=\" field would be displayed \nto the user when a \"bitcoin:\" link is clicked, but that message wouldn't \nbe saved anywhere.\n\nHowever, I think, especially if a new wallet format is in the works, \nthat both should be supported:  \"Address Labels\" *and *\"Transaction \nLabels\".  The real difference is that merchants can include things \nOrder#, purchase information, etc, in the \"message\" field, and then put \nonly their business name in the \"label\" field.  This means that when the \nuser is looking at their address book, they see just the owners of the \naddresses.  When they look at the transaction ledger/history, they see a \nfull list of everything they purchased, prices, contact info, etc.   The \ndistinction is much more important for persistent addresses, but still \nimportant.\n\nThis is exactly how I did it in Armory, but if Bitcoin-Qt won't do it \nthat way, I should be promoting all important information be jammed into \nthe \"label\" field.\n\n*(3) *How are the other clients implementing this?  Do you make any \ndistinction between \"label\" and \"message\"?\n\n-Alan\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120503/6ead9661/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2012-05-03T05:46:56",
                "message_text_only": "On Thu, May 3, 2012 at 6:28 AM, Alan Reiner <etotheipi at gmail.com> wrote:\n\n> **\n> *(1) *What is the status & plans for supporting \"bitcoin:\" URIs in the\n> Satoshi client?  My understanding is that it currently creates URIs, but\n> does *not* register itself with the OS to handle such links.  Is this\n> accurate?  This seems like a very high-value feature, and I'd recommend\n> that we consider it a priority -- I can't think of any other upgrade that\n> can improve usability so dramatically on the desktop.\n>\n\nIt is already implemented for Linux (Gnome) and Windows, but there is an\nissue with boost::ipc that crashed bitcoin at startup on windows, so it's\ntemporarily disabled on Windows.\n\n\n> *(2) *I need to understand better what the intentions were behind\n> \"label=\" and \"message=\".  The way I understand it is that Bitcoin-Qt uses\n> and stores only address-labels, and no other transactional info is stored\n> in the wallet.  As such, the \"message=\" field would be displayed to the\n> user when a \"bitcoin:\" link is clicked, but that message wouldn't be saved\n> anywhere.\n>\n\nLabel is a label for the destination address, message is a freeform message\ndescribing the transaction.\n\nI don't think the message is currently stored in the Satoshi client. That\nfeature is somewhere on our way-too-long issue and todo list.\n\nBut I understand that you want to add transaction meta-data fields such as\ncontact information, bought items, item prices?\n\nWladimir\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120503/f4909d4a/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-05-04T00:54:39",
                "message_text_only": "On 05/03/2012 01:46 AM, Wladimir wrote:\n>\n> Label is a label for the destination address, message is a freeform \n> message describing the transaction.\n>\n> I don't think the message is currently stored in the Satoshi client. \n> That feature is somewhere on our way-too-long issue and todo list.\n>\n> But I understand that you want to add transaction meta-data fields \n> such as contact information, bought items, item prices?\n>\n>\n\nI don't want to add fields to the URI-spec, I just want to add them /to \nthe client/.  To me, it is ideal to have separate strings for labeling \n/addresses/ vs labeling /transactions/ -- i.e. different strings would \nshow up in the address book (owner info) than what shows up in the \ntransaction history (purchase info).   I say it's ideal because that \nconcept seems to fit perfectly with availability of \"label=\" and \n\"message=\" fields in BIP 21, but it won't actually work if Bitcoin-Qt \nwon't/can't do it that way.\n\nFor now, it seems that I should count on all important information being \nin the /label/ field, since users creating URLs would have to assume \nanything in the /message/ field will not be saved.  Though I imagine the \nmessage data will be /displayed/ after the URI is clicked, just not saved.\n\nTo expand the concept slightly further, it might make sense in the \nfuture for users to populate the /message/ and /label /fields with lots \nof data, using newlines.  The first line would be used as a summary and \ndisplayed in the address book and ledger.  The extra lines would all be \ndisplayed when the user opens up a details window.  All of it would be \nautomatically generated by the merchant, and the purchaser would end up \nwith detailed documentation on every purchase they've made for zero effort.\n\n-Alan\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120503/32c2e58d/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2012-05-03T07:16:57",
                "message_text_only": "On 05/03/2012 06:28 AM, Alan Reiner wrote:\n\n> *(3) *How are the other clients implementing this?  Do you make any\n> distinction between \"label\" and \"message\"?\n\nBitcoin Wallet for Android currently ignores both fields. At least\ntemporarly displaying the transaction message is on my short-term todo list."
            }
        ],
        "thread_summary": {
            "title": "URI Handling in Bitcoin-Qt",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Alan Reiner",
                "Wladimir",
                "Andreas Schildbach"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 6330
        }
    },
    {
        "title": "[Bitcoin-development] Potential network split when individual tx used as coinbase?",
        "thread_messages": [
            {
                "author": "Rebroad (sourceforge)",
                "date": "2012-05-05T08:31:39",
                "message_text_only": "Hi,\n>\n>\nLooking at:\nhttps://github.com/bitcoin/bitcoin/commit/3e52aaf2121d597ab1ed012b65e37f9cb5f2754e#src/main.cpp-P52\n\nIt appears that 8 months ago the code was changed to DoS(100) nodes sending\non txs that use individual txs as the coinbase. Does this mean txs that are\n0 confirmed?\n\nIf so, then, is this a risk of a network split, as I'm sure I've read about\nservices popping up using bitcoin that are specifically allowing 0\nconfirmed transactions, and therefore there must be peers around that\naccept these.\n\nOr have I misread the code?\n\nCheers,\nEd\n\nPS. Would a BIP have been applicable for the above-mentioned change?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120505/e8db28b2/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2012-05-05T11:40:35",
                "message_text_only": "On Sat, May 05, 2012 at 09:31:39AM +0100, Rebroad (sourceforge) wrote:\n> Hi,\n> >\n> >\n> Looking at:\n> https://github.com/bitcoin/bitcoin/commit/3e52aaf2121d597ab1ed012b65e37f9cb5f2754e#src/main.cpp-P52\n> \n> It appears that 8 months ago the code was changed to DoS(100) nodes sending\n> on txs that use individual txs as the coinbase. Does this mean txs that are\n> 0 confirmed?\n> \n> Or have I misread the code?\n\nI think so, see my comment there.\n\n-- \nPieter"
            }
        ],
        "thread_summary": {
            "title": "Potential network split when individual tx used as coinbase?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Pieter Wuille",
                "Rebroad (sourceforge)"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1261
        }
    },
    {
        "title": "[Bitcoin-development] free tx rate limiter potentially causes more traffic not less?",
        "thread_messages": [
            {
                "author": "Rebroad (sourceforge)",
                "date": "2012-05-05T08:37:05",
                "message_text_only": "I recently was dabbling with AskFor() and changing the time waited from 2\nminutes to 10 seconds (I think perhaps this value may change in future\nversions when \"network tuning\" is implemented).\n\nI noticed that, when used with the -limitfreerelay option that is causes\nsignificant increase in traffic between peers. This is because the tx gets\nasked for (from all connected peers usually), but AlwaysHave never becomes\ntrue as it's never stored, always rejected, so it effectively getdatas the\ntransaction from every single connected peer.\n\nWould it perhaps be better to set up a memory pool for rejected txs and\nblocks (perhaps keeping only the hash) so that these rejected items can\ncontinue being ignored?\n\nI hope these observations are ok - I consider myself at the \"trying to\nunderstand the code/protocol/algorithm\" stage so might sometimes make false\nassumptions of what the code intends to do.\n\nEd\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120505/e43e613f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "free tx rate limiter potentially causes more traffic not less?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Rebroad (sourceforge)"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1085
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin intro and talks in Berlin (11th May at 20:00)",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-05-08T12:24:23",
                "message_text_only": "c-base is holding a day on p2p technologies on the 11th. From 20:00 will be the section on Bitcoin.\n\nIf you want to do a talk, then email me (genjix at riseup.net) and I\u2019ll add you to the schedule."
            }
        ],
        "thread_summary": {
            "title": "Bitcoin intro and talks in Berlin (11th May at 20:00)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 197
        }
    },
    {
        "title": "[Bitcoin-development] block difficulty - inherently stable or inherently unstable?",
        "thread_messages": [
            {
                "author": "Rebroad (sourceforge)",
                "date": "2012-05-08T14:02:58",
                "message_text_only": "I was just thinking about the way block difficulty is calculated, and how\npeople may (in future) decide whether to mine or not.\n\nIs it possible that when the difficulty is low, many will decide to mine,\nproducing blocks every 3 or 5 minutes, and then in 1 week, bitcoin will\nincrease the difficulty, and many will decide it is no longer cost\neffective, stop mining, and find blocks are being produced every 30 minutes\nfor the next 6 weeks, before the returning to a previous difficulty where\npeople decide to mine again, etc, etc.\n\nSeems reasonably possible in my mind, and I'm wondering if the stability so\nfar has been purely due to people mining without thinking too much about\nthe immediate cost-effectiveness (or mining by zombie-farms).\n\nThoughts, anyone?\n\nEd\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120508/3949cec7/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "block difficulty - inherently stable or inherently unstable?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Rebroad (sourceforge)"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 948
        }
    },
    {
        "title": "[Bitcoin-development] Please review: getmemorypool (BIP 22) revision",
        "thread_messages": [
            {
                "author": "Luke-Jr",
                "date": "2012-05-11T15:33:53",
                "message_text_only": "I have finally got around to revising the BIP 22 draft, and would appreciate \nfurther review: https://en.bitcoin.it/wiki/BIP_0022\n\nI believe this revision addresses Geir's last email in March, as well as some \npractical problems some pools recently came across.\n\nTo summarize the changes from the last revision in March:\n- The submitblock(<data>, <params>) method is renamed to getmemorypool\n- Requesting a job now uses getmemorypool(<params>) to provide client\n  capabilities and other information to the server\n- Longpolls use a parameter in the getmemorypool request, not necessarily a\n  separate URI\n- The client can inform the server of its own size and sigop requirements in\n  advance\n- The client can request detailed transaction data from the server, necessary\n  to sanely manipulate the transactions included in the final block without\n  discarding fees or making the block invalid due to not having enough\n- With both client and server support, blocks can be proposed before wasting\n  time mining them, to ensure they are otherwise valid\n- Servers can be arranged into single logical services, with failover and load\n  balancing (similar to the getwork X-Host-List and X-Switch-To extensions).\n\nYou can see the full diff here:\nhttps://en.bitcoin.it/w/?title=BIP_0022&action=historysubmit&diff=26408&oldid=25544\n\nLuke"
            }
        ],
        "thread_summary": {
            "title": "Please review: getmemorypool (BIP 22) revision",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Luke-Jr"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1326
        }
    },
    {
        "title": "[Bitcoin-development] IPv6 bitcoin support now live",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-05-12T01:42:32",
                "message_text_only": "sipa just pushed out IPv6 support to bitcoin/bitcoin.git, and we have\na few IPv6 nodes live on the network already.\n\nIf you have IPv6, please pull the latest bitcoin and test!\n\n(and if you do not yet have IPv6, visit https://www.sixxs.net/ and get some)\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Peter Todd",
                "date": "2012-05-27T17:02:06",
                "message_text_only": "On Sat, May 26, 2012 at 03:14:40PM +0200, Pieter Wuille wrote:\n> On Sat, May 12, 2012 at 3:42 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> > sipa just pushed out IPv6 support to bitcoin/bitcoin.git, and we have\n> > a few IPv6 nodes live on the network already.\n> >\n> > If you have IPv6, please pull the latest bitcoin and test!\n> \n> Since yesterday, my DNS seeder (running at seed.bitcoin.sipa.be) \u00a0also\n> crawls the IPv6 network, and returns corresponding AAAA records.\n> Hopefully this helps IPv6 nodes to find eachother.\n\nI can confirm this seems to work quite well now. I tried running an\nIPv6-only node a few days ago, and with the default seeds it couldn't\nstart up and sync with the network unless I manually created a dual-net\nnode and manually added it. Now things work just fine out of the box and\nlast I checked I had 5 peers.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120527/803e59fe/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "IPv6 bitcoin support now live",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Peter Todd"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1458
        }
    },
    {
        "title": "[Bitcoin-development] Stackoverflow with latest git head",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2012-05-12T07:00:43",
                "message_text_only": "#220 0x00007ffff5d021a6 in QApplicationPrivate::notify_helper(QObject*,\nQEvent*) () from /usr/lib/libQtGui.so.4\n(gdb)\n#221 0x00007ffff5d086fb in QApplication::notify(QObject*, QEvent*) ()\nfrom /usr/lib/libQtGui.so.4\n(gdb)\n#222 0x00007ffff582f06c in QCoreApplication::notifyInternal(QObject*,\nQEvent*) () from /usr/lib/libQtCore.so.4\n(gdb)\n#223 0x00007ffff5d4da05 in QWidget::setToolTip(QString const&) () from\n/usr/lib/libQtGui.so.4\n(gdb)\n#224 0x0000000000589e43 in\nGUIUtil::ToolTipToRichTextFilter::eventFilter(QObject*, QEvent*) ()\n(gdb)\n#225 0x00007ffff582e54b in\nQCoreApplicationPrivate::sendThroughApplicationEventFilters(QObject*,\nQEvent*) () from /usr/lib/libQtCore.so.4\n(gdb)\n#226 0x00007ffff5d021a6 in QApplicationPrivate::notify_helper(QObject*,\nQEvent*) () from /usr/lib/libQtGui.so.4\n(gdb)\n\nThe above is the loop that bitcoin seems to be stuck in. I ran\ngit-bisect and it looks like the first bad commit is\n3793fa09ff920fc720dfad3738f105d2c9563662\n\nMy QT version is 4.6.2\n\nGive me a shout if there are any other tests you want me to run.\n\n-- \nhttp://petertodd.org 'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120512/10fa4675/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Stackoverflow with latest git head",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Todd"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1379
        }
    },
    {
        "title": "[Bitcoin-development] BIP 33 - Stratized Nodes",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-05-16T16:34:54",
                "message_text_only": "Hi,\n\nPlease check out my proposal,\n\nhttps://en.bitcoin.it/wiki/BIP_0033\n\nI want to use the existing Bitcoin protocol to provide this functionality in order to maintain compatibility. This proposal does not affect current Bitcoin clients, but allows the parallel system to operate alongside and sometimes intersect with the main Bitcoin network in a positive way."
            },
            {
                "author": "Mike Hearn",
                "date": "2012-05-16T16:46:59",
                "message_text_only": "Thanks for getting this started.\n\nWith regards to the specific proposal, I don't believe it's the best option\nand still plan to eventually implement the original design outlined more\nthan a year ago in this thread:\n\n  https://bitcointalk.org/index.php?topic=7972.msg116285#msg116285\n\nNamely that you use a new protocol command to set a Bloom filter on a\nconnection. Only transactions matching that filter will appear in relayed\ninventory. Blocks that are requested will arrive as a header plus\ntransaction/merkle branch pairs. Clients are expected to maintain and track\nthe block chain as per usual, but instead of downloading the whole chain\nand then dropping the irrelevant transactions, that filtering is done\nserver side. By strengthening or weakening the Bloom filters you can choose\nyour preferred point on the privacy/bandwidth-usage spectrum. It is a\nfairly simple change to the Satoshi and BitcoinJ codebases but still allows\nclients to gain confidence in their balance by examining the chain, and\nthis is true even in the presence of a hijacked internet connection (you\ncan't trust pending transactions that way, but you can still trust\nconfirmed transactions).\n\nThe filters would be applied to each data block in each script rather than\nhaving a specific knowledge of addresses. In this way you can select for\nthings like multisig outputs or outputs which don't use addresses / pubkeys\nto authenticate.\n\nI could write a BIP for this alternative protocol if somebody else wants to\nimplement it. I was going to wait until I had time to do both BIP and\nimplementation, but I think some simple optimizations to BitcoinJ can keep\nits performance good enough for the short term.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120516/c4bde719/attachment.html>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-05-16T17:32:51",
                "message_text_only": "A bloom filter seems like an interesting idea. However this proposal is concerned mainly with the initialisation stage, whereas this bloom filter is for pushed blocks.\n\nThis proposal still updates new transactions and blocks in the same way, and it's not inconceivable to later use a bloom filter to make that part more efficient (although it's questionable if pushing this server side would be a good idea as it would now need to track an additional client state).\n\n________________________________\nFrom: Mike Hearn <mike at plan99.net>\nTo: Amir Taaki <zgenjix at yahoo.com> \nCc: \"bitcoin-development at lists.sourceforge.net\" <bitcoin-development at lists.sourceforge.net> \nSent: Wednesday, May 16, 2012 5:46 PM\nSubject: Re: [Bitcoin-development] BIP 33 - Stratized Nodes\n\n\nThanks for getting this started.\u00a0\n\nWith regards to the specific proposal, I don't believe it's the best option and still plan to eventually implement the original design outlined more than a year ago in this thread:\n\nhttps://bitcointalk.org/index.php?topic=7972.msg116285#msg116285\n\nNamely that you use a new protocol command to set a Bloom filter on a connection. Only transactions matching that filter will appear in relayed inventory. Blocks that are requested will arrive as a header plus transaction/merkle branch pairs. Clients are expected to maintain and track the block chain as per usual, but instead of downloading the whole chain and then dropping the irrelevant transactions, that filtering is done server side. By strengthening or weakening the Bloom filters you can choose your preferred point on the privacy/bandwidth-usage spectrum. It is a fairly simple change to the Satoshi and BitcoinJ codebases but still allows clients to gain confidence in their balance by examining the chain, and this is true even in the presence of a hijacked internet connection (you can't trust pending transactions that way, but you can still trust confirmed transactions).\n\nThe filters would be applied to each data block in each script rather than having a specific knowledge of addresses. In this way you can select for things like multisig outputs or outputs which don't use addresses / pubkeys to authenticate.\n\nI could write a BIP for this alternative protocol if somebody else wants to implement it. I was going to wait until I had time to do both BIP and implementation, but I think some simple optimizations to BitcoinJ can keep its performance good enough for the short term."
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-16T18:22:08",
                "message_text_only": "On Wed, May 16, 2012 at 12:46 PM, Mike Hearn <mike at plan99.net> wrote:\n> Thanks for getting this started.\n>\n> With regards to the specific proposal, I don't believe it's the best option\n> and still plan to eventually implement the original design outlined more\n> than a year ago in this thread:\n>\n> \u00a0\u00a0https://bitcointalk.org/index.php?topic=7972.msg116285#msg116285\n>\n> Namely that you use a new protocol command to set a Bloom filter on a\n> connection. Only transactions matching that filter will appear in relayed\n> inventory. Blocks that are requested will arrive as a header plus\n> transaction/merkle branch pairs. Clients are expected to maintain and track\n> the block chain as per usual, but instead of downloading the whole chain and\n> then dropping the irrelevant transactions, that filtering is done server\n> side. By strengthening or weakening the Bloom filters you can choose your\n> preferred point on the privacy/bandwidth-usage spectrum. It is a fairly\n> simple change to the Satoshi and BitcoinJ codebases but still allows clients\n> to gain confidence in their balance by examining the chain, and this is true\n> even in the presence of a hijacked internet connection (you can't trust\n> pending transactions that way, but you can still trust confirmed\n> transactions).\n\nMakes sense.\n\nIn an idealized model of a client as a set of private keys, they will\nwant to (a) notice new activity on these keys, (b) notice increased\nconfidence on existing transactions with those keys [confirmations],\nand (c) be able to submit to the network new transactions.  Your\nproposal covers those bases, I believe.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-16T16:49:18",
                "message_text_only": "Thanks for this, Amir.\n\nMy initial reactions:\n\n1) This is cool and useful (but see 3)\n2) This is significantly less secure than validating an entire blockchain;\nit's certainly worth working out some use cases here in more detail than\njust a sample conversation. More on this below\n3) What about discovery? Will a client now have the chance to look for\nNODE_STRATIZED clients on IRC? How do you envision a stratized server\ndecides which transactions to relay/store? Or is it just a caching layer in\nfront of a high quality blockchain service? If it is just a caching\nservice, the question of cache hits / misses is an interesting one as well.\n4) What are the economic motivations to run a stratized server? Other than\ncheating people of course.\n5) Seems like a 'send me everything for this source address' is going to\nsave a lot of roundtrip conversations for what I imagine the most common\nrequest will be.\n\nInre: majority agreement on transactions, and even balances, it would be\nnice to work out some theoretical security / cost / value calculations for\nthe following scenarios:\n\nLikely value and cost to someone of subverting / lying about\n1) An n-confirmation transaction, n > 0\n2) A 0 confirmation transaction\n3) A NODE_STRATIZED transaction chain for a client with m connections to\nNODE_STRATIZED servers\n4) An address balance request for a client with m connections to\nNODE_BALANCE_INFO (I made this name up) servers\n\nPeter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120516/c36915f7/attachment.html>"
            },
            {
                "author": "Amir Taaki",
                "date": "2012-05-16T17:37:32",
                "message_text_only": "> 1) This is cool and useful (but see 3)\n\n> 2) This is significantly less secure than validating an entire blockchain; it's certainly worth working out some use cases here in more detail than just a sample conversation. More on this below\n> 3) What about discovery? Will a client now have the chance to look for NODE_STRATIZED clients on IRC? How do you envision a stratized server decides which transactions to relay/store? Or is it just a caching layer in front of a high quality blockchain service? If it is just a caching service, the question of cache hits / misses is an interesting one as well.\u00a0\n\nStratized nodes do discovery as normal. Service nodes are explicitly chosen like IRC servers are for IRC clients.\n\n\n> 4) What are the economic motivations to run a stratized server? Other than cheating people of course.\n\nNone. Same as BitTorrent super-nodes, Tor relays or email servers. People don't need economic motivation for everything.\n\n\n> 5) Seems like a 'send me everything for this source address' is going to save a lot of roundtrip conversations for what I imagine the most common request will be.\n\nThat's a bad idea. I prefer to keep each request minimal to prevent resource starvation and simplify the protocol (while shifting the onus onto the client). Also the history can be resolved with multiple services while the data is being downloaded and sorted."
            }
        ],
        "thread_summary": {
            "title": "BIP 33 - Stratized Nodes",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Peter Vessenes",
                "Mike Hearn",
                "Amir Taaki"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 9336
        }
    },
    {
        "title": "[Bitcoin-development] P2P feature discovery (was Re: BIP 33 - Stratized Nodes)",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-05-16T18:18:27",
                "message_text_only": "On Wed, May 16, 2012 at 12:34 PM, Amir Taaki <zgenjix at yahoo.com> wrote:\n> Please check out my proposal,\n>\n> https://en.bitcoin.it/wiki/BIP_0033\n>\n> I want to use the existing Bitcoin protocol to provide this functionality in order to maintain compatibility. This proposal does not affect current Bitcoin clients, but allows the parallel system to operate alongside and sometimes intersect with the main Bitcoin network in a positive way.\n\n\nI do not object to the concept, but the discovery process should be\nimproved.  Even venerable SMTP has a better, more flexible\ncapabilities discovery process.\n\nInstead of further overloading service bits in the version message, or\naltering the version message, let us instead make feature discovery an\neasy, flexible, extensible process.\n\nWe can add new commands without impacting older nodes, so let's create\na new command \"get-features\" (or pick your name) that returns a list\nof key/value pairs.  The key is a string, the value type is determined\nby the key.\n\nStandard behavior of clients would be to send \"get-features\" after\nseeing remote version info, as part of the initial connection\nhandshake.\n\nIn any case, the basic point is to move FAR away from fighting over a\nlimited, inflexible resource (service bits in \"version\" msg) to\nsomething string-based and easily extensible.\n\nI can create this as BIP 34, if people wish.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-16T18:29:41",
                "message_text_only": "On Wednesday, May 16, 2012 6:18:27 PM Jeff Garzik wrote:\n> Instead of further overloading service bits in the version message, or\n> altering the version message, let us instead make feature discovery an\n> easy, flexible, extensible process.\n> \n> We can add new commands without impacting older nodes, so let's create\n> a new command \"get-features\" (or pick your name) that returns a list\n> of key/value pairs.  The key is a string, the value type is determined\n> by the key.\n\nThat assumes you already have a connection to the peer in question.\nAs I understand it, the service bits are propagated as part of the address, \nso you can see at a glance which nodes you want to connect to for some \nspecial service. Passing a huge list along might be unwieldy (though it \nmakes sense for protocol changes that don't add new services)."
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-16T18:38:28",
                "message_text_only": "On Wed, May 16, 2012 at 2:29 PM, Luke-Jr <luke at dashjr.org> wrote:\n> That assumes you already have a connection to the peer in question.\n> As I understand it, the service bits are propagated as part of the address,\n> so you can see at a glance which nodes you want to connect to for some\n> special service. Passing a huge list along might be unwieldy (though it\n> makes sense for protocol changes that don't add new services).\n\nIf the peer list becomes too, um, stratified maybe that's a Big Hint\nthat said clients should be using another network entirely, and not\noverloading bitcoin's P2P network for wholly unrelated tasks.  The\nbitcoin P2P network is not a general message transit network.\n\nAnother argument against the proposal, IOW, if you ask me....\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-16T18:46:49",
                "message_text_only": "On Wednesday, May 16, 2012 6:38:28 PM Jeff Garzik wrote:\n> On Wed, May 16, 2012 at 2:29 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > That assumes you already have a connection to the peer in question.\n> > As I understand it, the service bits are propagated as part of the\n> > address, so you can see at a glance which nodes you want to connect to\n> > for some special service. Passing a huge list along might be unwieldy\n> > (though it makes sense for protocol changes that don't add new\n> > services).\n> \n> If the peer list becomes too, um, stratified maybe that's a Big Hint\n> that said clients should be using another network entirely, and not\n> overloading bitcoin's P2P network for wholly unrelated tasks.  The\n> bitcoin P2P network is not a general message transit network.\n> \n> Another argument against the proposal, IOW, if you ask me....\n\nNo, I meant the inverse. If only a small minority of nodes are stratified, \nthe clients need some way to figure out which ones, without connecting to \nevery node."
            }
        ],
        "thread_summary": {
            "title": "P2P feature discovery (was Re: BIP 33 - Stratized Nodes)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 4075
        }
    },
    {
        "title": "[Bitcoin-development] Punishing empty blocks?",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2012-05-24T16:33:12",
                "message_text_only": "There appears to be some non-trivial mining power devoted to mining\nempty blocks.  Even with satoshi's key observation -- hash a fixed\n80-byte header, not the entire block -- some miners still find it\neasier to mine empty blocks, rather than watch the network for new\ntransactions.\n\nTherefore I was wondering what people thought about a client\nimplementation change:\n\n     - Do not store or relay empty blocks, if time since last block < X\n       (where X = 60 minutes, perhaps)\n\nor even stronger,\n\n     - Ensure latest block includes at least X percent of mempool\nunconfirmed TXs\n\nThe former is easier to implement, though there is the danger that\nno-TX miners simply include a statically generated transaction or two.\n\nThe latter might be considered problematic, as it might refuse to\nrelay quickly found blocks.\n\nComments?  It wouldn't be a problem if these no-TX blocks were not\nalready getting frequent (1 in 20).\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Arthur Britto",
                "date": "2012-05-24T17:05:29",
                "message_text_only": "I think you need the stronger change.  Otherwise, the mystery miner could\njust put in a few transactions to himself to mask his block.  His block\nwould appear to be of some use while not being helpful.\n\n-Arthur\n\nOn Thu, May 24, 2012 at 9:33 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> There appears to be some non-trivial mining power devoted to mining\n> empty blocks.  Even with satoshi's key observation -- hash a fixed\n> 80-byte header, not the entire block -- some miners still find it\n> easier to mine empty blocks, rather than watch the network for new\n> transactions.\n>\n> Therefore I was wondering what people thought about a client\n> implementation change:\n>\n>     - Do not store or relay empty blocks, if time since last block < X\n>       (where X = 60 minutes, perhaps)\n>\n> or even stronger,\n>\n>     - Ensure latest block includes at least X percent of mempool\n> unconfirmed TXs\n>\n> The former is easier to implement, though there is the danger that\n> no-TX miners simply include a statically generated transaction or two.\n>\n> The latter might be considered problematic, as it might refuse to\n> relay quickly found blocks.\n>\n> Comments?  It wouldn't be a problem if these no-TX blocks were not\n> already getting frequent (1 in 20).\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120524/a20243f8/attachment.html>"
            },
            {
                "author": "Joel Joonatan Kaartinen",
                "date": "2012-05-24T17:13:32",
                "message_text_only": "I think the strong verification would go well if you add it along with an\noptimization that avoids rechecking transactions that have already been\nverified as valid. Any transactions it doesn't have to verify are from the\npool, of course :)\n\nOn Thu, May 24, 2012 at 7:33 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> There appears to be some non-trivial mining power devoted to mining\n> empty blocks.  Even with satoshi's key observation -- hash a fixed\n> 80-byte header, not the entire block -- some miners still find it\n> easier to mine empty blocks, rather than watch the network for new\n> transactions.\n>\n> Therefore I was wondering what people thought about a client\n> implementation change:\n>\n>     - Do not store or relay empty blocks, if time since last block < X\n>       (where X = 60 minutes, perhaps)\n>\n> or even stronger,\n>\n>     - Ensure latest block includes at least X percent of mempool\n> unconfirmed TXs\n>\n> The former is easier to implement, though there is the danger that\n> no-TX miners simply include a statically generated transaction or two.\n>\n> The latter might be considered problematic, as it might refuse to\n> relay quickly found blocks.\n>\n> Comments?  It wouldn't be a problem if these no-TX blocks were not\n> already getting frequent (1 in 20).\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120524/736e9b6b/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-24T17:23:44",
                "message_text_only": "On Thu, May 24, 2012 at 1:13 PM, Joel Joonatan Kaartinen\n<joel.kaartinen at gmail.com> wrote:\n> optimization that avoids rechecking transactions that have already been\n> verified as valid. Any transactions it doesn't have to verify are from the\n> pool, of course :)\n\nWork in this area is already progressing, though it is outside the\nscope of this proposal regarding lazy miners and empty blocks.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Robert McKay",
                "date": "2012-05-24T17:27:42",
                "message_text_only": "On Thu, 24 May 2012 12:33:12 -0400, Jeff Garzik wrote:\n> There appears to be some non-trivial mining power devoted to mining\n> empty blocks.  Even with satoshi's key observation -- hash a fixed\n> 80-byte header, not the entire block -- some miners still find it\n> easier to mine empty blocks, rather than watch the network for new\n> transactions.\n>\n> Therefore I was wondering what people thought about a client\n> implementation change:\n>\n>      - Do not store or relay empty blocks, if time since last block < \n> X\n>        (where X = 60 minutes, perhaps)\n>\n> or even stronger,\n>\n>      - Ensure latest block includes at least X percent of mempool\n> unconfirmed TXs\n\nIf miners wanted to continue mining empty blocks without bothering to \nmonitor the Tx pool they would just switch to stuffing the empty blocks \nwith a dummy transaction of their own to get round your new rules. They \ncould also spam them to the p2p network so that they end up in the \nmempool if that were necessary. This would probably still be slightly \neasier than 'doing it properly'.\n\nOnce the block reward halves in a few months time then receiving \ntransaction fees will probably become more important to the miner's \nprofit and loss calculations and they'll spend the extra time to \nimplement proper transaction processing. I suspect if we do nothing this \nparticular issue will go away. Perhaps it could be helped along by \npublishing some example code to make it easier for them.\n\nThe ability to refuse transactions seems like an important part of the \ngame theory of transaction pricing. Miners are supposed to be able to \njack up transaction costs by declining to process no fee or too low fee \n(in their opinion) transactions.. the counter balance is that they are \nlosing money by doing that and leaving more on the table for the next \nminer to score a block.\n\nI expect that in the future there will be other instances when people \ncomplain that the miners are being 'unfair' and that the rules should be \nchanged in some way to lower transaction fees (ie: increase block size).\n\nIf block sizes are increased ever larger and miners aren't allowed to \nrefuse to process transactions it will get rid of the financial \nmotivation for mining and less mining will happen. We should be very \ncareful when making these kinds of changes.\n\nSetting percentage quotas of stuff in the mempool sounds dangerous.. \nminers that hear about a block from a rival miner soon enough could \npossibly DOS the mempool on the rest of the network to get the block \nrejected. I think it should be legitimate not to publish a transaction \nto the p2p network at all.. in the future there will probably be lots of \nnetworks other than the p2p network.. right now we have the IPv6 network \nand the IPv4 network.. in the future there could be many other protocols \nand perhaps not all transactions will make it back to the old legacy \nipv4 p2p network or into the mempool of bitcoin nodes on that network.. \nbut they should still be able to get into the block chain.\n\nRob"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-24T18:16:51",
                "message_text_only": "On Thu, May 24, 2012 at 1:27 PM, Robert McKay <robert at mckay.com> wrote:\n> If miners wanted to continue mining empty blocks without bothering to\n> monitor the Tx pool they would just switch to stuffing the empty blocks\n> with a dummy transaction of their own to get round your new rules.\n\nYes.  This was stated in the original email.\n\n\n> Once the block reward halves in a few months time then receiving\n> transaction fees will probably become more important to the miner's\n> profit and loss calculations and they'll spend the extra time to\n> implement proper transaction processing. I suspect if we do nothing this\n> particular issue will go away. Perhaps it could be helped along by\n> publishing some example code to make it easier for them.\n\nAt current rates it is potentially years before that point is reached\n-- years of degraded service for existing users.\n\n\n> The ability to refuse transactions seems like an important part of the\n> game theory of transaction pricing. Miners are supposed to be able to\n> jack up transaction costs by declining to process no fee or too low fee\n> (in their opinion) transactions.. the counter balance is that they are\n> losing money by doing that and leaving more on the table for the next\n> miner to score a block.\n>\n> I expect that in the future there will be other instances when people\n> complain that the miners are being 'unfair' and that the rules should be\n> changed in some way to lower transaction fees (ie: increase block size).\n\nIf you see a rule change, you have misunderstood the proposal.\n\nThis is an -implementation- change, which users and miners are free to\naccept or reject as part of their choice of software to use in the\nbitcoin ecosystem.\n\nAs such, miners continue to be free to build upon empty blocks, and\nlet those blocks become part of a useful chain.  You would not simply\n/ban/ empty blocks completely, but avoid relaying top-of-chain empty\nblocks.\n\nMining power and network collaborate to choose the best chain at that\npoint -- perhaps even including those empty blocks.  Clients will\ncontinue to follow the longest, strongest chain, even after this\nimplementation change.\n\nAn implementation change is a soft vote of choice by the user, not a\nhard requirement on all users.\n\n> I think it should be legitimate not to publish a transaction\n> to the p2p network at all.. in the future there will probably be lots of\n> networks other than the p2p network.. right now we have the IPv6 network\n> and the IPv4 network.. in the future there could be many other protocols\n> and perhaps not all transactions will make it back to the old legacy\n> ipv4 p2p network or into the mempool of bitcoin nodes on that network..\n> but they should still be able to get into the block chain.\n\nSee above -- such behavior is perfectly fine.\n\nIt should be noted that out of band (OOB) TXs, transited through third\nparty means outside P2P network, would not cause _empty_ blocks, as\nthe block chain will continue to have traffic for the foreseeable\nfuture.\n\nOOB TXs are a great idea, too.  In a hyperscaled bitcoin future, OOB\nTXs might even be the norm.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-24T20:31:38",
                "message_text_only": "On Thursday, May 24, 2012 4:33:12 PM Jeff Garzik wrote:\n> There appears to be some non-trivial mining power devoted to mining\n> empty blocks.  Even with satoshi's key observation -- hash a fixed\n> 80-byte header, not the entire block -- some miners still find it\n> easier to mine empty blocks, rather than watch the network for new\n> transactions.\n> \n> Therefore I was wondering what people thought about a client\n> implementation change:\n> \n>      - Do not store or relay empty blocks, if time since last block < X\n>        (where X = 60 minutes, perhaps)\n> \n> or even stronger,\n> \n>      - Ensure latest block includes at least X percent of mempool\n> unconfirmed TXs\n\nThese are problematic for legitimate miners:\n1) The freedom to reject transactions based on fees or spam filters, is \nseverely restricted. As mentioned in other replies, this is an important point \nof Bitcoin's design.\n1b) This punishes miners with superior transaction spam filtering. As with all \nspam filtering, it is often an \"arms race\" and therefore the filter rules must \nbe kept private by the miners, and therefore cannot be disclosed for the \nvalidating clients to take into consideration.\n2) For a few seconds after a new block is received, the new transaction merkle \nroot(s) are not finished calculating. During this time, most miners are \nworking on \"blank\" blocks with the new previousblockhash but no transactions. \nIf those blocks are ignored, miners are forced to shutdown mining during this \ntime.\n3) As you mentioned, illegitimate miners can easily workaround these \nrestrictions (even the second one, by flooding the network with their own \ntransactions). This puts the legitimate miners at a disadvantage in their own \nsearch for valid blocks, unless they also come up with counter-measures \nthemselves.\n\nThe argument that these are not rule changes is flawed:\n1) As of right now, 99% of the network runs a single client. Anything this \nclient rejects does de facto become a rule change.\n2) Even if there were a diverse ecosystem of clients in place, discouragement \nrules that potentially affect legitimate miners significantly mess with the \nodds of finding a block.\n3) If legitimate miners do not adopt counter-rules to bypass these new \nrestrictions, the illegitimate miners are left with an even larger percentage \nof blocks found.\n\nTo summarize, I believe such a change as proposed would be very harmful to \nBitcoin.\n\nLuke"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-24T21:00:42",
                "message_text_only": "On Thu, May 24, 2012 at 4:31 PM, Luke-Jr <luke at dashjr.org> wrote:\n> These are problematic for legitimate miners:\n> 1) The freedom to reject transactions based on fees or spam filters, is\n> severely restricted. As mentioned in other replies, this is an important point\n> of Bitcoin's design.\n> 1b) This punishes miners with superior transaction spam filtering. As with all\n> spam filtering, it is often an \"arms race\" and therefore the filter rules must\n> be kept private by the miners, and therefore cannot be disclosed for the\n> validating clients to take into consideration.\n\nThis is simply not true given current available data, i.e. the current\nblockchain and ongoing not-spam transaction rate/pool.\n\n\n> The argument that these are not rule changes is flawed:\n> 1) As of right now, 99% of the network runs a single client. Anything this\n> client rejects does de facto become a rule change.\n\nAccording to your own numbers even, this is not true.  99% of the\nnetwork runs a wide variety of rules and versions.  Even with a\n\"critical\" security announcement, the percentage of those running the\nlatest version is not large.\n\n\n> 2) Even if there were a diverse ecosystem of clients in place, discouragement\n> rules that potentially affect legitimate miners significantly mess with the\n> odds of finding a block.\n> 3) If legitimate miners do not adopt counter-rules to bypass these new\n> restrictions, the illegitimate miners are left with an even larger percentage\n> of blocks found.\n\nMiners are not the -only- ones that get a say in what is spam, and\nwhat is not.  If miners are generating garbage, network users have the\nright to veto that garbage.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-25T00:45:13",
                "message_text_only": "On Thursday, May 24, 2012 4:33:12 PM Jeff Garzik wrote:\n> Comments?  It wouldn't be a problem if these no-TX blocks were not\n> already getting frequent (1 in 20).\n\nFWIW, based on statistics for Eligius's past 100 blocks, it seems 10% (1 in \n10) of 1-txn blocks is not actually unreasonable. This also means these 1-txn \nmined blocks are not necessarily harming Bitcoin intentionally. Anyone care to \nfigure out the math for how fast miners need to finish processing transactions \nto reduce the number of 1txn blocks?"
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-25T00:51:09",
                "message_text_only": "On Thu, May 24, 2012 at 8:45 PM, Luke-Jr <luke at dashjr.org> wrote:\n> On Thursday, May 24, 2012 4:33:12 PM Jeff Garzik wrote:\n>> Comments? \u00a0It wouldn't be a problem if these no-TX blocks were not\n>> already getting frequent (1 in 20).\n>\n> FWIW, based on statistics for Eligius's past 100 blocks, it seems 10% (1 in\n> 10) of 1-txn blocks is not actually unreasonable. This also means these 1-txn\n> mined blocks are not necessarily harming Bitcoin intentionally. Anyone care to\n> figure out the math for how fast miners need to finish processing transactions\n> to reduce the number of 1txn blocks?\n\nLook at the time since last block, and correlate with the number of\nnon-spam TX's in the memory pool at the time.  It is obvious which\nones are quick blocks (<60 seconds since last block, no big deal) and\nwhich ones are the lazy miners (> 120 seconds since last block).\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-25T00:57:38",
                "message_text_only": "On Friday, May 25, 2012 12:51:09 AM Jeff Garzik wrote:\n> On Thu, May 24, 2012 at 8:45 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > On Thursday, May 24, 2012 4:33:12 PM Jeff Garzik wrote:\n> >> Comments?  It wouldn't be a problem if these no-TX blocks were not\n> >> already getting frequent (1 in 20).\n> > \n> > FWIW, based on statistics for Eligius's past 100 blocks, it seems 10% (1\n> > in 10) of 1-txn blocks is not actually unreasonable. This also means\n> > these 1-txn mined blocks are not necessarily harming Bitcoin\n> > intentionally. Anyone care to figure out the math for how fast miners\n> > need to finish processing transactions to reduce the number of 1txn\n> > blocks?\n> \n> Look at the time since last block, and correlate with the number of\n> non-spam TX's in the memory pool at the time.  It is obvious which\n> ones are quick blocks (<60 seconds since last block, no big deal) and\n> which ones are the lazy miners (> 120 seconds since last block).\n\nBlock times are not accurate enough for that."
            },
            {
                "author": "Jeff Garzik",
                "date": "2012-05-25T01:17:53",
                "message_text_only": "On Thu, May 24, 2012 at 8:57 PM, Luke-Jr <luke at dashjr.org> wrote:\n> Block times are not accurate enough for that.\n\nThe times in your log are very accurate, assuming your system clock is\nremotely accurate.\n\n-- \nJeff Garzik\nexMULTI, Inc.\njgarzik at exmulti.com"
            },
            {
                "author": "Christian Decker",
                "date": "2012-05-25T07:47:23",
                "message_text_only": "How about a simple proof of work test? This one though does not ask for CPU\nwork but asks the miner for a random old transaction. If the miner really\nstores the entire blockchain he will not have any problem answering to that\ngetdata request, whereas a botnet would have to ask someone else for it,\nwhich could be detected if the response time deviates too much from what\nhas been previously measured (compare it against getdata for the block they\nadvertise). It's not perfect but it allows an estimate of whether it is a\nchainless miner.\n\nRegards,\nChris\n--\nChristian Decker\n\n\n\nOn Fri, May 25, 2012 at 3:17 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n\n> On Thu, May 24, 2012 at 8:57 PM, Luke-Jr <luke at dashjr.org> wrote:\n> > Block times are not accurate enough for that.\n>\n> The times in your log are very accurate, assuming your system clock is\n> remotely accurate.\n>\n> --\n> Jeff Garzik\n> exMULTI, Inc.\n> jgarzik at exmulti.com\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120525/a927acc7/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2012-05-25T13:44:34",
                "message_text_only": "I like the concept except that it only works if every node connected to the\nminer enforces the rule (if it works).  Once any one of the nodes forwards\nthe block,  other nodes see it coming from a node that can pass the\nchallenge.\n\nI don't think any solution based on node queries will succeed,  especially\nif it requires spontaneous super-majority-of-nodes acceptance.  I think\nit's gotta be based on the block itself and each nodes' own info.\n\nIf you could spontaneously get all miners to agree not to build off of\nanti-social blocks (however that is defined) ,  it would have a chance of\nmaking a difference,  but individual miners would have an advantage\nbuilding off the antisocial block because they only need to produce one to\ncreate the longest chain (and collect reward) while the miners following\nthe rules need two blocks.\n\n--Sent from my overpriced smartphone\nOn May 25, 2012 3:48 AM, \"Christian Decker\" <decker.christian at gmail.com>\nwrote:\n\n> How about a simple proof of work test? This one though does not ask for\n> CPU work but asks the miner for a random old transaction. If the miner\n> really stores the entire blockchain he will not have any problem answering\n> to that getdata request, whereas a botnet would have to ask someone else\n> for it, which could be detected if the response time deviates too much from\n> what has been previously measured (compare it against getdata for the block\n> they advertise). It's not perfect but it allows an estimate of whether it\n> is a chainless miner.\n>\n> Regards,\n> Chris\n> --\n> Christian Decker\n>\n>\n>\n> On Fri, May 25, 2012 at 3:17 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n>\n>> On Thu, May 24, 2012 at 8:57 PM, Luke-Jr <luke at dashjr.org> wrote:\n>> > Block times are not accurate enough for that.\n>>\n>> The times in your log are very accurate, assuming your system clock is\n>> remotely accurate.\n>>\n>> --\n>> Jeff Garzik\n>> exMULTI, Inc.\n>> jgarzik at exmulti.com\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120525/856b88ab/attachment.html>"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-25T14:00:09",
                "message_text_only": "We just implemented our own mining tool, soup-to-nuts, and I would say that\nthe likely motivation for what I presume are botnet owners is just economic.\n\nIt's a lot more work to make sure your merkleing and keeping up-to-date are\nhappening than it is to just get an 80 byte header from a central server,\nand re-calc a single transaction merkle client-side.\n\nNot to mention the extra work to keep track of what version of\ngetmemorypool output you're receiving work for in a broadly distributed\npool.\n\nFor what it's worth, we did this extra engineering work since we care about\nBitcoin, but if I just wanted to pull value out of the ecosystem, we would\nhave skipped it.\n\nThe only solutions to this are economic solutions -- making such 'cheater'\nblocks less valuable, or increasing the value of the transactions.\n\nAlso note that botnet operators likely care, in the end, about fiat\ncurrency, so going to 25 btc per block in what I think of as transaction\nfee subsidies won't necessarily impact this -- it's a matter of what\nhappens to exchange rates vs generation rates that will matter.\n\nI think we also have to moderate this consideration against the rights (and\narguable benefits) of someone wanting to build an express-delivery mining\nservice, one that will provide provably faster certification for those\nadding a transaction fee of, say, 1 btc.\n\nMy own experience now in the MMO world is that we have to carefully\nunderstand how we deal with griefers who control massive resources (compute\nor gold-farmers). It may not be a winning battle to choose a solution which\nharms the rest of the network in exchange for harming the griefers.\n\nThis is definitely out of the box, but one solution might be to change the\ndifficulty calculations to just ignore 1tx blocks; that would minimize\nimpact on others to a great extent, and would let someone set up an express\nblock service if they chose. I guess we'd have to settle on whether or not\nsuch blocks counted towards the issuance countdown as well. Or, we could\nallow only 1/10 generation fees on such blocks.\n\nPeter\n\n\nOn Fri, May 25, 2012 at 9:44 AM, Alan Reiner <etotheipi at gmail.com> wrote:\n\n> I like the concept except that it only works if every node connected to\n> the miner enforces the rule (if it works).  Once any one of the nodes\n> forwards the block,  other nodes see it coming from a node that can pass\n> the challenge.\n>\n> I don't think any solution based on node queries will succeed,  especially\n> if it requires spontaneous super-majority-of-nodes acceptance.  I think\n> it's gotta be based on the block itself and each nodes' own info.\n>\n> If you could spontaneously get all miners to agree not to build off of\n> anti-social blocks (however that is defined) ,  it would have a chance of\n> making a difference,  but individual miners would have an advantage\n> building off the antisocial block because they only need to produce one to\n> create the longest chain (and collect reward) while the miners following\n> the rules need two blocks.\n>\n> --Sent from my overpriced smartphone\n> On May 25, 2012 3:48 AM, \"Christian Decker\" <decker.christian at gmail.com>\n> wrote:\n>\n>> How about a simple proof of work test? This one though does not ask for\n>> CPU work but asks the miner for a random old transaction. If the miner\n>> really stores the entire blockchain he will not have any problem answering\n>> to that getdata request, whereas a botnet would have to ask someone else\n>> for it, which could be detected if the response time deviates too much from\n>> what has been previously measured (compare it against getdata for the block\n>> they advertise). It's not perfect but it allows an estimate of whether it\n>> is a chainless miner.\n>>\n>> Regards,\n>> Chris\n>> --\n>> Christian Decker\n>>\n>>\n>>\n>> On Fri, May 25, 2012 at 3:17 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n>>\n>>> On Thu, May 24, 2012 at 8:57 PM, Luke-Jr <luke at dashjr.org> wrote:\n>>> > Block times are not accurate enough for that.\n>>>\n>>> The times in your log are very accurate, assuming your system clock is\n>>> remotely accurate.\n>>>\n>>> --\n>>> Jeff Garzik\n>>> exMULTI, Inc.\n>>> jgarzik at exmulti.com\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> Live Security Virtual Conference\n>>> Exclusive live event will cover all the ways today's security and\n>>> threat landscape has changed and how IT managers can respond. Discussions\n>>> will include endpoint security, mobile security and the latest in malware\n>>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Live Security Virtual Conference\n>> Exclusive live event will cover all the ways today's security and\n>> threat landscape has changed and how IT managers can respond. Discussions\n>> will include endpoint security, mobile security and the latest in malware\n>> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ <https://plus.google.com/112885659993091300749>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120525/c9f827d7/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-05-25T01:00:41",
                "message_text_only": "On Thu, May 24, 2012 at 8:51 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> which ones are the lazy miners (> 120 seconds since last block).\n\nIt's important to understand the motivations before acting\u2014 otherwise\nyou'll fail to do anything useful.\n\nE.g. if they're empty because some miners want to drive up fees or\nfight against the rapidly increasing blockchain size there isn't much\nyou can do there.\n\nIf they're empty because they're mined by botnets which don't have a\nlocal copy of the chain in order to load their victims less (and avoid\ncentral pooling) then you want something like\nhttps://bitcointalk.org/index.php?topic=68396.0\n\nIf they're produced by people who think they gain a mining speed\nadvantage by not including them then then we need education\u2014 dropping\ntheir blocks won't help much: we've seen miners go a month with 100%\nof their blocks being orphaned."
            },
            {
                "author": "Zooko Wilcox-O'Hearn",
                "date": "2012-05-26T05:03:15",
                "message_text_only": "For what it is worth, I question whether this is a problem. Or, I\nguess I question whether the best solution to it isn't for people to\nstart including more transaction fees. In fact, I'm not entirely sure\nthat this problem doesn't actually *encourage* people to that\nsolution, which would be very good if true.\n\n\nI would be more comfortable if the reward for mining were more\ncommensurate with the value it provides. Ultimately, of course, that\nmeans that each transaction fee would have to be more of a proportion\nof the value *to the spender* of that transaction being included in\nthe blockchain.\n\n(Aside: in order to convey to outsiders that miners are providing a\nuseful service rather than gaining undeserved reward for wasting\nelectricity, I refer to them as \"distributed transaction verification\nservers\" rather than \"miners\" whenever possible.)\n\nI'm pretty sure that \u2014 assuming there isn't some Bitcoin-killing\ndisaster \u2014 transaction fees will eventually rise, but sooner might be\nbetter, especially with the first coinbase-halving looming.\n\nPerhaps people will be motivated to include transaction fees if they\nknow that some miners don't bother to validate their transactions and\nothers do. They may feel motivated to reward the miners that are\nserving them and punish the ones that are not. (Note: this wouldn't be\na valid strategy on their part from a strictly game-theoretic\nperspective, but if they act on those motivations, then I don't care\nif it was rational or not.)\n\nAlso, they may decide that they want to counteract the added delay\nwhich those no-transactions miners are adding to *all* transactions\n(with or without fee), by putting a fee on their transactions in order\nto make them take less long when they are processed by a miner which\ndoes process (some) transactions.\n\nAlready this visualization, which I typically glance at a few times a\nday, usually shows a good separation with fee-included transactions\nsometimes doing much better than (some) free transactions:\n\nhttp://bitcoinstats.org/\n\nHowever, this graph shows that the aggregate reward to the miners for\nprocessing transaction is minimal:\n\nhttp://blockchain.info/charts/transaction-fees?timespan=60days&showDataPoints=false&daysAverageString=1&show_header=true&scale=0&address=\n\nYou can see from the first visualization (assuming it is showing the\ntypical pattern that I've seen) how you risk greater delay by sending\nyour transaction without fees. The no-transactions miners push *all*\ntransactions, fee or no-fee to the right. This may incentivize more\npeople to change their transactions from red diamonds into blue\ncircles, in order to move their transactions further to the left, even\nthough the no-transactions miners are not currently discriminating\namong the two types.\n\nTherefore, the presence of those miners may help push the aggregate\nfees in that latter graph up, which is something I would very much\nlike to see.\n\nRegards,\n\nZooko"
            },
            {
                "author": "Stefan Thomas",
                "date": "2012-05-26T11:52:33",
                "message_text_only": "Zooko is spot on - slower confirmations will give people a reason to set\nhigher fees. As soon as fees reach a level where they matter, even\nbotnet operators will be looking into ways of including transactions for\nsome extra profit.\n\nIn the meantime slightly slower confirmations aren't a problem. Consider\nthat even if it takes four blocks to get your transaction included\ninstead of one, once it is included, you still benefit from every new\nblock in terms of security. So if you're looking for six confirmations\nfor example, even a three block delay will only be a 50% delay for you.\nAnd of course there are techniques for instant transactions which\ncontinue to be refined and improved.\n\nAs for the proposed solutions: Punishing 1-tx blocks is complete and\nutter nonsense. It's trivial to include a bogus second transaction.\n\nAny additional challenges towards miners like hashes of the previous\nblock are at best useless. If I was running a botnet, I'd just grab that\nhash from a website (pretty good chance Blockchain.info will have it :P)\nor mining pool or wherever and keep going undeterred. At worst they may\naffect scalability one day. You might imagine a peer-to-peer network of\nminers who for cost reasons don't download all blocks anymore, but\nverify only a percentage of them at random. They might then exchange\nmessages about invalid blocks including a proof (invalid tx, merkle\nbranch) why the block is invalid. This is just one idea, the point is\nthat assumptions about what a legitimate miner looks like may not always\nhold in the future.\n\nFinally, there is an ethical aspect as well. If a miner wishes not to\ninclude my transaction that is his choice. He has no more an obligation\nto sell his service to me than I have to buy it from him. If I really,\nreally want him to include my transaction I will have to offer to pay more.\n\nIf we as developers think that confirmations are too slow or that more\nblocks should include transactions, then the right measures would be:\n\n- Educating users about the relationship between confirmation speed and fees\n- Raising the default transaction fee\n\nEvery market has a supply curve, so it is economically to be expected\nthat there will be some miners who don't include transactions, simply\nbecause they are at that end of the supply curve where it is not worth\nit for them to sell their service. All markets must have a certain\ntension - there must be miners who don't include transactions for there\nto be users who want their transactions included more quickly. In other\nwords there must be somebody not confirming if confirmations are to have\nvalue. If you interfere with that all you'll accomplish is keep\ntransaction fees below market level, which will make the transition from\ninflation-financed hashing to transaction-financed hashing more painful\nand disruptive.\n\nCheers,\n\nStefan"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-28T14:54:21",
                "message_text_only": "One of the issues here though is that it would be nice if miners published\ntheir own tx rules -- it might be hard to impute them from data.\n\nI had started a thread about this on bitcoin.org some time ago, and I don't\nrecall what the general outcome was.\n\nI had imagined an open service whereby a miner could publish a short string\nin their conbase tying to the service and the service would have different\nmetadata, including the miner's transaction guarantees.\n\nWe offered to host this before, and would still be willing to host such a\nservice.\n\nPeter\n\nOn Sat, May 26, 2012 at 7:52 AM, Stefan Thomas <moon at justmoon.de> wrote:\n\n> Zooko is spot on - slower confirmations will give people a reason to set\n> higher fees. As soon as fees reach a level where they matter, even\n> botnet operators will be looking into ways of including transactions for\n> some extra profit.\n>\n> In the meantime slightly slower confirmations aren't a problem. Consider\n> that even if it takes four blocks to get your transaction included\n> instead of one, once it is included, you still benefit from every new\n> block in terms of security. So if you're looking for six confirmations\n> for example, even a three block delay will only be a 50% delay for you.\n> And of course there are techniques for instant transactions which\n> continue to be refined and improved.\n>\n> As for the proposed solutions: Punishing 1-tx blocks is complete and\n> utter nonsense. It's trivial to include a bogus second transaction.\n>\n> Any additional challenges towards miners like hashes of the previous\n> block are at best useless. If I was running a botnet, I'd just grab that\n> hash from a website (pretty good chance Blockchain.info will have it :P)\n> or mining pool or wherever and keep going undeterred. At worst they may\n> affect scalability one day. You might imagine a peer-to-peer network of\n> miners who for cost reasons don't download all blocks anymore, but\n> verify only a percentage of them at random. They might then exchange\n> messages about invalid blocks including a proof (invalid tx, merkle\n> branch) why the block is invalid. This is just one idea, the point is\n> that assumptions about what a legitimate miner looks like may not always\n> hold in the future.\n>\n> Finally, there is an ethical aspect as well. If a miner wishes not to\n> include my transaction that is his choice. He has no more an obligation\n> to sell his service to me than I have to buy it from him. If I really,\n> really want him to include my transaction I will have to offer to pay more.\n>\n> If we as developers think that confirmations are too slow or that more\n> blocks should include transactions, then the right measures would be:\n>\n> - Educating users about the relationship between confirmation speed and\n> fees\n> - Raising the default transaction fee\n>\n> Every market has a supply curve, so it is economically to be expected\n> that there will be some miners who don't include transactions, simply\n> because they are at that end of the supply curve where it is not worth\n> it for them to sell their service. All markets must have a certain\n> tension - there must be miners who don't include transactions for there\n> to be users who want their transactions included more quickly. In other\n> words there must be somebody not confirming if confirmations are to have\n> value. If you interfere with that all you'll accomplish is keep\n> transaction fees below market level, which will make the transition from\n> inflation-financed hashing to transaction-financed hashing more painful\n> and disruptive.\n>\n> Cheers,\n>\n> Stefan\n>\n>\n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ <https://plus.google.com/112885659993091300749>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120528/23cf542d/attachment.html>"
            },
            {
                "author": "Michael Gr\u00f8nager",
                "date": "2012-05-29T08:52:49",
                "message_text_only": "Peter, I like the idea of being able to know what fees to expect from different miners (it is like a service description / SLA for their service), but I would prefer a more distributed discovery mechanism for the information on the fees (Spent 10 years on Grid Computing...).\n\nMiners could e.g. include a pointer to a webpage (or even their min fee) in the coinbase (encoded properly, like the \"/P2SH/\" string for BIP0016). That way clients could look it up them selves or you could create sites accumulating this information from the chain it self.\n\nSo something like :\n        const char* service_sla = \"|https://my_ubercool_asic_mining_pool/sla.php|\";\n        COINBASE_FLAGS << std::vector<unsigned char>(service_sla, service_sla+strlen(service_sla));\n \nThe format of the sla.php page should then be specified too - but it could be a json-rpc call returning a json object like (as result):\n{ \n    sla_version: \"0.1\",\n    accept_no_fee_tx: false,\n    min_fee: 50000,\n    big_tx_fee: 10000, // extra fee pr kb\n}\nI guess miners could work out a more suitable set of fees...\n\nSeems like this calls for a BIP ?\n\n/M\n\n\n\nOn 28/05/2012, at 16:54, Peter Vessenes wrote:\n\n> One of the issues here though is that it would be nice if miners published their own tx rules -- it might be hard to impute them from data.\n> \n> I had started a thread about this on bitcoin.org some time ago, and I don't recall what the general outcome was.\n> \n> I had imagined an open service whereby a miner could publish a short string in their conbase tying to the service and the service would have different metadata, including the miner's transaction guarantees.\n> \n> We offered to host this before, and would still be willing to host such a service.\n> \n> Peter\n> \n> On Sat, May 26, 2012 at 7:52 AM, Stefan Thomas <moon at justmoon.de> wrote:\n> Zooko is spot on - slower confirmations will give people a reason to set\n> higher fees. As soon as fees reach a level where they matter, even\n> botnet operators will be looking into ways of including transactions for\n> some extra profit.\n> \n> In the meantime slightly slower confirmations aren't a problem. Consider\n> that even if it takes four blocks to get your transaction included\n> instead of one, once it is included, you still benefit from every new\n> block in terms of security. So if you're looking for six confirmations\n> for example, even a three block delay will only be a 50% delay for you.\n> And of course there are techniques for instant transactions which\n> continue to be refined and improved.\n> \n> As for the proposed solutions: Punishing 1-tx blocks is complete and\n> utter nonsense. It's trivial to include a bogus second transaction.\n> \n> Any additional challenges towards miners like hashes of the previous\n> block are at best useless. If I was running a botnet, I'd just grab that\n> hash from a website (pretty good chance Blockchain.info will have it :P)\n> or mining pool or wherever and keep going undeterred. At worst they may\n> affect scalability one day. You might imagine a peer-to-peer network of\n> miners who for cost reasons don't download all blocks anymore, but\n> verify only a percentage of them at random. They might then exchange\n> messages about invalid blocks including a proof (invalid tx, merkle\n> branch) why the block is invalid. This is just one idea, the point is\n> that assumptions about what a legitimate miner looks like may not always\n> hold in the future.\n> \n> Finally, there is an ethical aspect as well. If a miner wishes not to\n> include my transaction that is his choice. He has no more an obligation\n> to sell his service to me than I have to buy it from him. If I really,\n> really want him to include my transaction I will have to offer to pay more.\n> \n> If we as developers think that confirmations are too slow or that more\n> blocks should include transactions, then the right measures would be:\n> \n> - Educating users about the relationship between confirmation speed and fees\n> - Raising the default transaction fee\n> \n> Every market has a supply curve, so it is economically to be expected\n> that there will be some miners who don't include transactions, simply\n> because they are at that end of the supply curve where it is not worth\n> it for them to sell their service. All markets must have a certain\n> tension - there must be miners who don't include transactions for there\n> to be users who want their transactions included more quickly. In other\n> words there must be somebody not confirming if confirmations are to have\n> value. If you interfere with that all you'll accomplish is keep\n> transaction fees below market level, which will make the transition from\n> inflation-financed hashing to transaction-financed hashing more painful\n> and disruptive.\n> \n> Cheers,\n> \n> Stefan\n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and\n> threat landscape has changed and how IT managers can respond. Discussions\n> will include endpoint security, mobile security and the latest in malware\n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> -- \n> \t\n> Peter J. Vessenes\n> CEO, CoinLab\n> M: 206.595.9839\n> Skype: vessenes\n> Google+\n> \n> ------------------------------------------------------------------------------\n> Live Security Virtual Conference\n> Exclusive live event will cover all the ways today's security and \n> threat landscape has changed and how IT managers can respond. Discussions \n> will include endpoint security, mobile security and the latest in malware \n> threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\nMichael Gronager, PhD\nDirector, Ceptacle\nJens Juels Gade 33\n2100 Copenhagen E\nMobile: +45 31 45 14 01\nE-mail: gronager at ceptacle.com\nWeb: http://www.ceptacle.com/"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-29T14:47:28",
                "message_text_only": "On Tuesday, May 29, 2012 8:52:49 AM Michael Gr\u00f8nager wrote:\n> The format of the sla.php page should then be specified too - but it could\n> be a json-rpc call returning a json object like (as result): {\n>     sla_version: \"0.1\",\n>     accept_no_fee_tx: false,\n>     min_fee: 50000,\n>     big_tx_fee: 10000, // extra fee pr kb\n> }\n> I guess miners could work out a more suitable set of fees...\n\nPlease not JSON, and not hard-coded logic. Bitcoin already has a secure \nscripting system - perhaps we can decide on an initial stack format and run a \nscript retrieved from the URI?"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-29T15:05:18",
                "message_text_only": "OK, I have a few thoughts on this:\n\n1) Germane to the original conversation, anything hard to implement will\nnot get implemented by miners.\n2) Coinbase is hard-limited to 100 bytes; this has to include space for\nvoting as well as extra nonce, etc. So, I'm not sure that a full URL is a\ngood plan.\n3) I'm a little fuzzy on the details of BIP governance; but I'm happy to\nwrite one up and get my thoughts down, or someone who's more familiar could\ndo it, I suppose.\n\nI propose the following spec:\n\nperiodically a miner may choose to publish a url through their coinbase as\nfollows:\n\n1) They shall prepend \\mi: to the url to designate it as a url for miner\ninfo, and append a trailing \\ to the url\n2) The url given in the coinbase shall have http:// prepended to it before\nprocessing.\n3) The destination may be a redirect (to allow short URLs), or may deliver\ncontent\n4) The content-type returned by the final site post-redirect shall be\neither (preferred text/json) or text/plain or text/html\n4) The text of the document delivered shall be a JSON format dictionary,\nand shall include at minimum the following fields: 'min_fee', 'pool_name',\nand 'last_modified' Optional fields can be determined over time as\nnecessary by the mining community\n5) The Service Level Agreement isn't binding, but miners who implement it\nare expected to make a best efforts attempt to follow it.\n\nSo a valid coinbase could be:\n/P2SH/\\mi:goo.gl/mr2D\\extra_nonce:2110\n\nGenerally a miner would occasionally publish the \\mi:\\ when they had\nupdated their SLA, or just every so often, but the canonical location would\nbe the final destination URL from the redirects.\n\nInre: Luke's complaint about JSON, it is the language of the web. There is\nno easier format for both computers and humans to read, and in this case,\nit includes extensibility, which is nice, since we have no idea how miners\nwill wish to divvy up their services; I think one would need to make a\nstrong case against JSON for a specific reason to not choose it by default.\n\nThoughts welcome!\n\nBest,\n\nPeter\n\n\n\nOn Tue, May 29, 2012 at 10:47 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Tuesday, May 29, 2012 8:52:49 AM Michael Gr\u00f8nager wrote:\n> > The format of the sla.php page should then be specified too - but it\n> could\n> > be a json-rpc call returning a json object like (as result): {\n> >     sla_version: \"0.1\",\n> >     accept_no_fee_tx: false,\n> >     min_fee: 50000,\n> >     big_tx_fee: 10000, // extra fee pr kb\n> > }\n> > I guess miners could work out a more suitable set of fees...\n>\n> Please not JSON, and not hard-coded logic. Bitcoin already has a secure\n> scripting system - perhaps we can decide on an initial stack format and\n> run a\n> script retrieved from the URI?\n>\n>\n\n\n-- \nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ <https://plus.google.com/112885659993091300749>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120529/134da980/attachment.html>"
            },
            {
                "author": "Rebroad (sourceforge)",
                "date": "2012-05-29T16:30:52",
                "message_text_only": "I'd like to garner consensus on whether anyone else thinks it desirable to\nhave a flag option for bitcoin to punish blocks for not including\ntransactions. I notice there are already pro-miner options, such as the\nrestricting the relaying of free transactions, and so including an option\nto restrict relaying of blocks from \"stingy\" miners to balance against the\ncurrent bias, so that the default bitcoin client can be run as much\npro-miner as pro-non-miner.\n\nOn Monday, May 28, 2012, rebroad at gmail.com wrote:\n\n> What i think this thread reveals is whether a bitcoin client is pro-miner\n> or pro-non-miner. What i think is needed is a fork where one benefits\n> miners (e.g. Limits relaying of free transactions, as has been added to the\n> current default client), and one that benefits non-miners (e.g. Limits\n> relaying of blocks not including free transactions). Then people can vote\n> based on the client they use.\n>\n> It seems to me that the current main client is a pro-miner one, and\n> possibly not what most people would vote for if they were given an easier\n> choice.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120529/2b9a2105/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2012-05-29T15:33:13",
                "message_text_only": "On Thu, May 24, 2012 at 12:33 PM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> There appears to be some non-trivial mining power devoted to mining\n> empty blocks.\n\nIn the last 2016 blocks, as I write this, there are only 35 1 txn blocks.\n\nThis is about 1.73%, which wouldn't be surprising just from timing\nalone.  Moreover, a fair amount (I didn't measure the percentage)\nappear to be mined by Eligius\u2014 Luke does some clever pre-computation\nof the hash tree for faster distribution right after new blocks.\n\nResources expended on fancy (and potentially risky) techno-economic\nhacks to discourage empty blocks would probably be better spent\nwriting very fast transaction tree generating code.\n\nCan we kill this thread now?"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-29T15:18:54",
                "message_text_only": "On Tuesday, May 29, 2012 3:05:18 PM Peter Vessenes wrote:\n> 1) Germane to the original conversation, anything hard to implement will\n> not get implemented by miners.\n\nWithout my got-tired-of-waiting-for-someone-to-merge-it coinbaser branch, \nanything modifying the coinbase is hard to implement.\n\n> 2) Coinbase is hard-limited to 100 bytes; this has to include space for\n> voting as well as extra nonce, etc. So, I'm not sure that a full URL is a\n> good plan.\n\nRather, I would suggest a 20 byte keyhash, which allows the owner to broadcast \na full URI out-of-band.\n\n> 1) They shall prepend \\mi: to the url to designate it as a url for miner\n> info, and append a trailing \\ to the url\n\nHow about a simple prefix to the fixed-size keyhash?\nPerhaps \"MFR=\" (Mining Fee Rules)\n\n> 2) The url given in the coinbase shall have http:// prepended to it before\n> processing.\n\nI would recommend miners use https, with a specified SSL keyhash in the URI \n(so we don't need to pay for a \"proper\" SSL cert).\n\n> 3) The destination may be a redirect (to allow short URLs), or may deliver\n> content\n\nClients should simply be required to follow the relevant HTTP specification.\n\n> 4) The content-type returned by the final site post-redirect shall be\n> either (preferred text/json) or text/plain or text/html\n\ntext/plain and text/html are just wrong and don't make any sense here.\n\n> Inre: Luke's complaint about JSON, it is the language of the web. There is\n> no easier format for both computers and humans to read, and in this case,\n> it includes extensibility, which is nice, since we have no idea how miners\n> will wish to divvy up their services; I think one would need to make a\n> strong case against JSON for a specific reason to not choose it by default.\n\nBitcoin isn't \"the web\", it's a complicated script-based cryptocurrency.\nEverything in the Bitcoin protocol requires a computer's interpretation for \nhumans, and there's no reason to stray from this default. Also, JSON is not \nextensible in any of the ways needed for this specific purpose.\n\n> 4) The text of the document delivered shall be a JSON format dictionary,\n> and shall include at minimum the following fields: 'min_fee', 'pool_name',\n> and 'last_modified' Optional fields can be determined over time as\n> necessary by the mining community\n\nLast Modified and other caching rules are dealt with in the relevant HTTP \nspecification...\n\n> 5) The Service Level Agreement isn't binding, but miners who implement it\n> are expected to make a best efforts attempt to follow it.\n\nWhile it doesn't make sense to give it the full legal force of a contract, I \nthink it should be expressed as a \"MUST\" in the BIP.\n\n> Generally a miner would occasionally publish the \\mi:\\ when they had\n> updated their SLA, or just every so often, but the canonical location would\n> be the final destination URL from the redirects.\n\nThe coinbase advertisement MUST be part of every coinbase mined by the miner, \nor there's no reliable way to prove which blocks are theirs."
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-29T15:28:56",
                "message_text_only": "I disagree with a bunch of your points, but I'll wait on others to comment,\nexcept I will say that I don't understand what the 20 byte keyhash is. Can\nyou elucidate?\n\nI am assuming major mining folks have written their own coinbasing\nfacilities, but perhaps this is not the case -- if so, I agree that some\nwork is necessary for such miners.\n\nFinally I will just comment that I am guided by the general perspective\nthat many things about bitcoins are opt-in; therefore it makes sense to me\nput difficult work onto those who are motivated to do it, and keep things\nas easy as possible for the 'maybes' to participate -- hence small\ncourtesies like allowing text/plain or text/html.\n\nPeter\n\nOn Tue, May 29, 2012 at 11:18 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Tuesday, May 29, 2012 3:05:18 PM Peter Vessenes wrote:\n> > 1) Germane to the original conversation, anything hard to implement will\n> > not get implemented by miners.\n>\n> Without my got-tired-of-waiting-for-someone-to-merge-it coinbaser branch,\n> anything modifying the coinbase is hard to implement.\n>\n> > 2) Coinbase is hard-limited to 100 bytes; this has to include space for\n> > voting as well as extra nonce, etc. So, I'm not sure that a full URL is a\n> > good plan.\n>\n> Rather, I would suggest a 20 byte keyhash, which allows the owner to\n> broadcast\n> a full URI out-of-band.\n>\n> > 1) They shall prepend \\mi: to the url to designate it as a url for miner\n> > info, and append a trailing \\ to the url\n>\n> How about a simple prefix to the fixed-size keyhash?\n> Perhaps \"MFR=\" (Mining Fee Rules)\n>\n> > 2) The url given in the coinbase shall have http:// prepended to it\n> before\n> > processing.\n>\n> I would recommend miners use https, with a specified SSL keyhash in the URI\n> (so we don't need to pay for a \"proper\" SSL cert).\n>\n> > 3) The destination may be a redirect (to allow short URLs), or may\n> deliver\n> > content\n>\n> Clients should simply be required to follow the relevant HTTP\n> specification.\n>\n> > 4) The content-type returned by the final site post-redirect shall be\n> > either (preferred text/json) or text/plain or text/html\n>\n> text/plain and text/html are just wrong and don't make any sense here.\n>\n> > Inre: Luke's complaint about JSON, it is the language of the web. There\n> is\n> > no easier format for both computers and humans to read, and in this case,\n> > it includes extensibility, which is nice, since we have no idea how\n> miners\n> > will wish to divvy up their services; I think one would need to make a\n> > strong case against JSON for a specific reason to not choose it by\n> default.\n>\n> Bitcoin isn't \"the web\", it's a complicated script-based cryptocurrency.\n> Everything in the Bitcoin protocol requires a computer's interpretation for\n> humans, and there's no reason to stray from this default. Also, JSON is not\n> extensible in any of the ways needed for this specific purpose.\n>\n> > 4) The text of the document delivered shall be a JSON format dictionary,\n> > and shall include at minimum the following fields: 'min_fee',\n> 'pool_name',\n> > and 'last_modified' Optional fields can be determined over time as\n> > necessary by the mining community\n>\n> Last Modified and other caching rules are dealt with in the relevant HTTP\n> specification...\n>\n> > 5) The Service Level Agreement isn't binding, but miners who implement it\n> > are expected to make a best efforts attempt to follow it.\n>\n> While it doesn't make sense to give it the full legal force of a contract,\n> I\n> think it should be expressed as a \"MUST\" in the BIP.\n>\n> > Generally a miner would occasionally publish the \\mi:\\ when they had\n> > updated their SLA, or just every so often, but the canonical location\n> would\n> > be the final destination URL from the redirects.\n>\n> The coinbase advertisement MUST be part of every coinbase mined by the\n> miner,\n> or there's no reliable way to prove which blocks are theirs.\n>\n\n\n\n-- \nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ <https://plus.google.com/112885659993091300749>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120529/c679f7af/attachment.html>"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-29T15:34:37",
                "message_text_only": "On Tuesday, May 29, 2012 3:28:56 PM Peter Vessenes wrote:\n> I don't understand what the 20 byte keyhash is. Can you elucidate?\n\n20 byte keyhashes are a fundamental building block of the Bitcoin protocol.\n\nripemd160(sha256(ecdsaPubKey))"
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-29T15:36:34",
                "message_text_only": "I suppose I mean that I don't understand how to reverse that into a URL\nwhen one is presented only with a block, or perhaps a coinbase in a\ntransaction.\n\nBest,\n\nPeter\n\nOn Tue, May 29, 2012 at 11:34 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Tuesday, May 29, 2012 3:28:56 PM Peter Vessenes wrote:\n> > I don't understand what the 20 byte keyhash is. Can you elucidate?\n>\n> 20 byte keyhashes are a fundamental building block of the Bitcoin protocol.\n>\n> ripemd160(sha256(ecdsaPubKey))\n>\n\n\n\n-- \nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ <https://plus.google.com/112885659993091300749>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120529/576c8f78/attachment.html>"
            },
            {
                "author": "Luke-Jr",
                "date": "2012-05-29T15:39:56",
                "message_text_only": "On Tuesday, May 29, 2012 3:36:34 PM Peter Vessenes wrote:\n> I suppose I mean that I don't understand how to reverse that into a URL\n> when one is presented only with a block, or perhaps a coinbase in a\n> transaction.\n\nA new message can be added to the p2p relay network, similar to tx and alert \nbroadcasts, that allow miners to publish/update their policy URI signed by the \nkey in question. Counter-DDoS rules could decline to relay or store URIs for \nkeys that haven't been published in - or achieved statistical significance in \n- the last N blocks."
            },
            {
                "author": "Peter Vessenes",
                "date": "2012-05-29T15:45:39",
                "message_text_only": "I see. That is undeniably more secure and \"bitcoin-y\" than my suggestion.\n\nIt's also really a lot more work, especially in that it requires extra\nlinkages between codebases that in my mind are largely separate.\n\nI'm just one voice, but I persist in believing that the 'lighter' solution,\nespecially for something that may not be a particularly big problem in the\nbitcoin world is good -- it carries much less technical implementation debt\ngoing forward, and has a lower risk of sort of seizing up development with\nadditional necessary code to worry about for those implementing to-spec\nclients.\n\nIf that lighter solution turns out to be gameable, or has problems that\nrequire the full force of the bitcoin network and concepts, that would be\nthe time to implement the improved version. That's just my approach,\nhowever. I worry that building in any additional requirements to the\nprotocol or codebase adds significant cost to the network as a whole over\nthe next 10 years.\n\nPeter\n\nOn Tue, May 29, 2012 at 11:39 AM, Luke-Jr <luke at dashjr.org> wrote:\n\n> On Tuesday, May 29, 2012 3:36:34 PM Peter Vessenes wrote:\n> > I suppose I mean that I don't understand how to reverse that into a URL\n> > when one is presented only with a block, or perhaps a coinbase in a\n> > transaction.\n>\n> A new message can be added to the p2p relay network, similar to tx and\n> alert\n> broadcasts, that allow miners to publish/update their policy URI signed by\n> the\n> key in question. Counter-DDoS rules could decline to relay or store URIs\n> for\n> keys that haven't been published in - or achieved statistical significance\n> in\n> - the last N blocks.\n>\n\n\n\n-- \nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ <https://plus.google.com/112885659993091300749>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120529/dc488769/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Punishing empty blocks?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr",
                "Rebroad (sourceforge)",
                "Robert McKay",
                "Arthur Britto",
                "Peter Vessenes",
                "Alan Reiner",
                "Gregory Maxwell",
                "Michael Gr\u00f8nager",
                "Zooko Wilcox-O'Hearn",
                "Stefan Thomas",
                "Joel Joonatan Kaartinen",
                "Christian Decker"
            ],
            "messages_count": 30,
            "total_messages_chars_count": 63736
        }
    },
    {
        "title": "[Bitcoin-development]  IPv6 bitcoin support now live",
        "thread_messages": [
            {
                "author": "Pieter Wuille",
                "date": "2012-05-26T13:14:40",
                "message_text_only": "On Sat, May 12, 2012 at 3:42 AM, Jeff Garzik <jgarzik at exmulti.com> wrote:\n> sipa just pushed out IPv6 support to bitcoin/bitcoin.git, and we have\n> a few IPv6 nodes live on the network already.\n>\n> If you have IPv6, please pull the latest bitcoin and test!\n\nSince yesterday, my DNS seeder (running at seed.bitcoin.sipa.be) \u00a0also\ncrawls the IPv6 network, and returns corresponding AAAA records.\nHopefully this helps IPv6 nodes to find eachother.\n\n--\nPieter"
            }
        ],
        "thread_summary": {
            "title": "IPv6 bitcoin support now live",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Pieter Wuille"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 458
        }
    },
    {
        "title": "[Bitcoin-development] Fw:  Punishing empty blocks?",
        "thread_messages": [
            {
                "author": "Amir Taaki",
                "date": "2012-05-28T16:25:51",
                "message_text_only": "That's a cool idea. Very meta.\n\n________________________________\nFrom: Peter Vessenes <peter at coinlab.com>\nTo: Stefan Thomas <moon at justmoon.de> \nCc: bitcoin-development at lists.sourceforge.net \nSent: Monday, May 28, 2012 4:54 PM\nSubject: Re: [Bitcoin-development] Punishing empty blocks?\n\n\nOne of the issues here though is that it would be nice if miners published their own tx rules -- it might be hard to impute them from data.\n\nI had started a thread about this on bitcoin.org some time ago, and I don't recall what the general outcome was.\n\nI had imagined an open service whereby a miner could publish a short string in their conbase tying to the service and the service would have different metadata, including the miner's transaction guarantees.\n\nWe offered to host this before, and would still be willing to host such a service.\n\nPeter\n\n\nOn Sat, May 26, 2012 at 7:52 AM, Stefan Thomas <moon at justmoon.de> wrote:\n\nZooko is spot on - slower confirmations will give people a reason to set\n>higher fees. As soon as fees reach a level where they matter, even\n>botnet operators will be looking into ways of including transactions for\n>some extra profit.\n>\n>In the meantime slightly slower confirmations aren't a problem. Consider\n>that even if it takes four blocks to get your transaction included\n>instead of one, once it is included, you still benefit from every new\n>block in terms of security. So if you're looking for six confirmations\n>for example, even a three block delay will only be a 50% delay for you.\n>And of course there are techniques for instant transactions which\n>continue to be refined and improved.\n>\n>As for the proposed solutions: Punishing 1-tx blocks is complete and\n>utter nonsense. It's trivial to include a bogus second transaction.\n>\n>Any additional challenges towards miners like hashes of the previous\n>block are at best useless. If I was running a botnet, I'd just grab that\n>hash from a website (pretty good chance Blockchain.info will have it :P)\n>or mining pool or wherever and keep going undeterred. At worst they may\n>affect scalability one day. You might imagine a peer-to-peer network of\n>miners who for cost reasons don't download all blocks anymore, but\n>verify only a percentage of them at random. They might then exchange\n>messages about invalid blocks including a proof (invalid tx, merkle\n>branch) why the block is invalid. This is just one idea, the point is\n>that assumptions about what a legitimate miner looks like may not always\n>hold in the future.\n>\n>Finally, there is an ethical aspect as well. If a miner wishes not to\n>include my transaction that is his choice. He has no more an obligation\n>to sell his service to me than I have to buy it from him. If I really,\n>really want him to include my transaction I will have to offer to pay more.\n>\n>If we as developers think that confirmations are too slow or that more\n>blocks should include transactions, then the right measures would be:\n>\n>- Educating users about the relationship between confirmation speed and fees\n>- Raising the default transaction fee\n>\n>Every market has a supply curve, so it is economically to be expected\n>that there will be some miners who don't include transactions, simply\n>because they are at that end of the supply curve where it is not worth\n>it for them to sell their service. All markets must have a certain\n>tension - there must be miners who don't include transactions for there\n>to be users who want their transactions included more quickly. In other\n>words there must be somebody not confirming if confirmations are to have\n>value. If you interfere with that all you'll accomplish is keep\n>transaction fees below market level, which will make the transition from\n>inflation-financed hashing to transaction-financed hashing more painful\n>and disruptive.\n>\n>Cheers,\n>\n>Stefan\n>\n>\n>------------------------------------------------------------------------------\n>Live Security Virtual Conference\n>Exclusive live event will cover all the ways today's security and\n>threat landscape has changed and how IT managers can respond. Discussions\n>will include endpoint security, mobile security and the latest in malware\n>threats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n-- \n\nPeter J. Vessenes\nCEO, CoinLab\nM: 206.595.9839\nSkype: vessenes\nGoogle+ \n\n------------------------------------------------------------------------------\nLive Security Virtual Conference\nExclusive live event will cover all the ways today's security and \nthreat landscape has changed and how IT managers can respond. Discussions \nwill include endpoint security, mobile security and the latest in malware \nthreats. http://www.accelacomm.com/jaw/sfrnl04242012/114/50122263/\n_______________________________________________\nBitcoin-development mailing list\nBitcoin-development at lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            }
        ],
        "thread_summary": {
            "title": "Fw:  Punishing empty blocks?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Amir Taaki"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 5087
        }
    },
    {
        "title": "[Bitcoin-development] Testnet reset for the 0.7 release",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2012-05-29T14:54:03",
                "message_text_only": "Testnet \"Mark III\" will be part of the 0.7 release, and is now in the\nmaster github branch.\n\n\"Mark III\" because this is the third genesis block for the testnet. The\nmain reason for the reset is to get a more 'sane' test network; with the\nBIP16 and BIP30 and testnet difficulty blockchain rule changes the old\ntestnet is a mess, with old clients serving up different, incompatible\nchains. The good news is the mess uncovered a couple of\nlarge-block-chain-reorganization bugs, but having a stable testnet to test\nnew implementations or services is more important.\n\nRules for tesnet3:\n  + Minimum difficulty 1.0 (same as main net-- old testnet min difficulty\nwas 0.125)\n  + max-difficulty-protection rule that allows blocks to be mined at min\ndifficulty if the block's timestamp is 20 minutes or more after the last\nblock AND the block isn't on a difficulty-adjustment boundary.\n\nTo make it easy to run either old code (using the old tesnet) and new code,\nthe wallet and blockchain are stored in $DATADIR/testnet3 instead of\n$DATADIR/testnet.\n\nAnd to make it easy to find other testnet3-running nodes, the IRC channel\nused for bootstrapping is #bitcoinTEST3 (instead of #bitcoinTEST).\n\nThe new testnet comes with a new blockchain that is full of interesting\ntest cases. In particular, there are test cases for:\n + BIP16; early blocks were generated with a timestamp before the BIP16\nswitchover date, and there are transactions that test the BIP16 switchover\nrules\n + Most of the enabled Script opcodes. I created thousands of transactions\nthat try to exercise edge cases in the Script interpreter. Missing are\ncomprehensive tests for the signature opcodes and SIGHASH_ modes.\n + Block acceptance rules, including the rule on maximum block size, block\ntimes, etc (thanks to gmaxwell)\n\nIf you're re-implementing Bitcoin then accepting the Mark III testnet\nblockchain is a good first test for compatibility. You'll still need to do\na lot of work to make sure you reject the same set of invalid transactions\nor blocks as the original Bitcoin code.\n\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120529/fc661b4e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Testnet reset for the 0.7 release",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gavin Andresen"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2247
        }
    },
    {
        "title": "[Bitcoin-development] [ANNOUNCE] BitCoinJ 0.5 released",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2012-05-30T15:58:45",
                "message_text_only": "I'm pleased to announce the release of BitCoinJ 0.5, the library that\npowers Android Wallet, SatoshiDice, Bitcoin Status, the server side part of\nBCCAPI and much more.\n\nThis release focusses on bug fixes, making the build more standard and\ncompleting the transition to the protobuf wallet format. It also includes\nthe first preview of the native API, allowing you to access bitcoinj from\nC++/Objective-C++ using a straightforward, intuitive mapping from the Java\nAPI. Much easier than JNI and no JVM is required, just the libgcj support\nlibrary. Examples of a native Cocoa app for OS X and a command line hello\nworld app are included. Because it's not fully finished/documented yet,\nthis work is available on a branch rather than in the main release.\n\nWe now have a Google+ page where we'll post announcements and developer\ntips/ideas: https://plus.google.com/102614914114364947458\n\nNew in this release:\n\n   - Address.getParameters() and Address.getParametersFromAddress() let you\n   figure out for what network the address is for (test, production, etc).\n   BitcoinURI no longer requires a NetworkParameters for the same reason.\n   - Updated to latest bouncy castle version, remove the need for the\n   Android artifact by using the SpongyCastle build\n   - Receives pending transactions much faster than before\n   - Update to the testnet2 rules\n   - Wallets now store the current chain head\n   - wallet-tool can now create and broadcast transactions from the command\n   line\n   - Wallets will now be auto-migrated to protobuf format if they were\n   previously serialized Java objects\n   - Now uses the standard Maven directory layout\n   - Many important bugfixes\n\nI'd like to thank Jim Burton, Miron Cuperman, Andreas Schildbach and Gary\nYoung for their contributions to this release.\n\nYou can get it from the download page on www.bitcoinj.org\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120530/0fc96642/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BitCoinJ 0.5 released",
            "categories": [
                "Bitcoin-development",
                "ANNOUNCE"
            ],
            "authors": [
                "Mike Hearn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2026
        }
    }
]