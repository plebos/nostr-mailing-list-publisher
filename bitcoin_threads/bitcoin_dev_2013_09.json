[
    {
        "title": "[Bitcoin-development] 0.8.4 released, fixes critical denial-of-service issue",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2013-09-04T01:16:35",
                "message_text_only": "Bitcoin-Qt version 0.8.4 is now available from:\n  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n\nThis is a maintenance release to fix a critical bug and three\nsecurity issues; we urge all users to upgrade.\n\nThere were no changes from 0.8.4 release candidate 2, so if you are running\n0.8.4rc2 you do not need to upgrade.\n\nPlease report bugs using the issue tracker at github:\n  https://github.com/bitcoin/bitcoin/issues\n\n\nHow to Upgrade\n--------------\n\nIf you are running an older version, shut it down. Wait\nuntil it has completely shut down (which might take a few minutes for older\nversions), then run the installer (on Windows) or just copy over\n/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n\nIf you are upgrading from version 0.7.2 or earlier, the first time you\nrun 0.8.4 your blockchain files will be re-indexed, which will take\nanywhere from 30 minutes to several hours, depending on the speed of\nyour machine.\n\n0.8.4 Release notes\n===================\n\nSecurity issues\n---------------\n\nAn attacker could send a series of messages that resulted in\nan integer division-by-zero error in the Bloom Filter handling\ncode, causing the Bitcoin-Qt or bitcoind process to crash.\nBloom filters were introduced with version 0.8, so versions 0.8.0\nthrough 0.8.3 are vulnerable to this critical denial-of-service attack.\n\nA constant-time algorithm is now used to check RPC password\nguess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n(CVE-2013-4165)\n\nImplement a better fix for the fill-memory-with-orphan-transactions\nattack that was fixed in 0.8.3. See\nhttps://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/\nfor a description of the weaknesses of the previous fix.\n(CVE-2013-4627)\n\nBugs fixed\n----------\n\nFix multi-block reorg transaction resurrection.\n\nFix non-standard disconnected transactions causing mempool orphans.\nThis bug could cause nodes running with the -debug flag to crash.\n\nOSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\nprevent the database corruption issues many people have\nexperienced on OSX.\n\nLinux: clicking on bitcoin: links was broken if you were using\na Gnome-based desktop.\n\nFix a hang-at-shutdown bug that only affects users that compile\ntheir own version of Bitcoin against Boost versions 1.50-1.52.\n\nOther changes\n-------------\n\nCheckpoint at block 250,000 to speed up initial block downloads\nand make the progress indicator when downloading more accurate.\n\n\nThanks to everybody who contributed to the 0.8.4 releases!\n----------------------------------------------------------\n\nPieter Wuille\nWarren Togami\nPatrick Strateman\npakt\nGregory Maxwell\nSergio Demian Lerner\ngrayleonard\nCory Fields\nMatt Corallo\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130904/acb92384/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "0.8.4 released, fixes critical denial-of-service issue",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gavin Andresen"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2940
        }
    },
    {
        "title": "[Bitcoin-development] An \"app store\" and non-network transaction fees",
        "thread_messages": [
            {
                "author": "Wendell",
                "date": "2013-09-04T19:47:09",
                "message_text_only": "Hi everyone,\n\nOur OS X wallet \"Hive\" features an integrated application platform. We hope this will be a great way for folks new to Bitcoin to discover a variety of Bitcoin businesses, from exchanges, to merchants, to games. The applications are locally hosted HTML/JS, and generally feature the most stripped-down UIs possible. We display them in a mobile-proportioned WebKit frame inside of Hive itself. Transaction requests within apps trigger native Cocoa dialogue boxes and everything feels nicely integrated and secure.\n\nShould Hive succeed in gaining a foothold, we hope that we may one day be able to sustain ourselves via an aggregate of very small fees on transactions within this app platform. We like the approach because it lets us stay focused on making Hive great, and keeping it free, but at the same time we recognize that it is a kind of obligatory middleman... With all that that implies? I'm not totally sure, and that's what the question is about.\n\nObviously there are a couple of brain-dead approaches: We could track what users do in the app, and send the business a bill (with blockchain proof, of course). Or, we could avoid troubling the business and have each user send a micro-transaction to some address of our choosing. The first one is messy and essentially makes us spyware. The second one is technically difficult, making a mess of transaction history, balances, and possibly in-app price listings. I'm not happy with either, but would lean towards the second one if I had to choose.\n\nI'm not 100% sure if this is the appropriate venue for it, but before we make that decision, I wanted to state our intentions and see if I could get some fresher ideas in the door. We want to be as ethical and (ideally) decentralized as possible -- priorities #1 and #2 -- but are otherwise open-minded.\n\nSome technical details for the curious:\n\n1) Yes, everything will be free software under a GPL license -- including the app store and the apps themselves! That may seem to be risky given our proposed business model, but we are open-minded and think we very much welcome the 'competition' of a would-be forker / hope we can work together. ;-)\n\n2) Although our BitcoinKit.framework supports both bitcoind and bitcoinj, we will be using bitcoinj with an integrated VM for the time being. The main draw is SPV, although to be honest we would prefer to support the network more via something like Peter Todd's partial UTXO sets idea (hint hint, anyone?).\n\nWe will be at the conference in Amsterdam on the 27th of this month if any of you want to meet and discuss.\n\nThanks for your time,\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 841 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130904/3bbaa0d6/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-05T08:26:07",
                "message_text_only": "Hey Wendell,\n\nInteresting idea you have there!\n\nOn Wed, Sep 4, 2013 at 9:47 PM, Wendell <w at grabhive.com> wrote:\n\n> Obviously there are a couple of brain-dead approaches: We could track what\n> users do in the app, and send the business a bill (with blockchain proof,\n> of course).\n>\n\nIt might be simpler to not think of it as an app store, but rather see it\nas a set of affiliate schemes. To get placed into the apps section you can\nsay that the business must have an affiliate scheme in place (i.e. open to\nmore than just you) and then you use the normal mechanisms of affiliate\ncodes and so on. The apps don't have to be offline. They can (and probably\nshould) be online, so the businesses can retain control of their features\nand brand. If you refer a lot of users to that business, you get the\nreferral bonuses. Affiliate schemes are a common way for open source\nprojects to monetize - e.g. Firefox development is largely paid for by\nsearch engine referrals. It's compatible with the ideals of openness\nbecause their income relies directly on their traffic, and there are\nseveral competing search engines the projects can play off against each\nother to get the best prices. Also, users expect search engine integration\nthese days, so they'd be sending search traffic regardless.\n\nThe main downside, of course, is it distorts technical judgement. You can\nget projects pushing certain businesses heavily not because it's\ntechnically the best thing for users, but because their income depends on\nit.\n\nOne alternative funding model you could explore is allowing users to bid on\nassurance contracts for feature development. This means you think up a\nbunch of improvements you could make, then allow users to pledge\nKickstarter-style towards their development. The upside is it allows the\ncommunity to direct development, and users feel directly involved and not\nexploited. The downside is, no recurring income you can use to support\nyourself whilst engaged in other endeavours.\n\n2) Although our BitcoinKit.framework supports both bitcoind and bitcoinj,\n> we will be using bitcoinj with an integrated VM for the time being. The\n> main draw is SPV, although to be honest we would prefer to support the\n> network more via something like Peter Todd's partial UTXO sets idea (hint\n> hint, anyone?).\n>\n\nBear in mind that regardless of how much *you* want to support the network,\nit's ultimately *your users* resources that will actually get spent. That's\nwhy I'm a bit skeptical of any schemes that rely on random end users\ndonating lots of cpu time or bandwidth to the network. If they want to do\nit, partial UTXO sets and other interesting ideas are worthwhile, but I\nguess most users won't. I think Bitcoin will over time be more and more\nlike Tor where relays are run on dedicated servers by people who have some\nmodicum of knowledge and community involvement.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/bb1ec2e1/attachment.html>"
            },
            {
                "author": "Wendell",
                "date": "2013-09-05T10:04:26",
                "message_text_only": "Hey Mike!\n\nOn Sep 5, 2013, at 10:26 AM, Mike Hearn wrote:\n> It might be simpler to not think of it as an app store, but rather see it as a set of affiliate schemes. To get placed into the apps section you can say that the business must have an affiliate scheme in place (i.e. open to more than just you) and then you use the normal mechanisms of affiliate codes and so on.\n> If you refer a lot of users to that business, you get the referral bonuses. Affiliate schemes are a common way for open source projects to monetize - e.g. Firefox development is largely paid for by search engine referrals. It's compatible with the ideals of openness because their income relies directly on their traffic, and there are several competing search engines the projects can play off against each other to get the best prices. Also, users expect search engine integration these days, so they'd be sending search traffic regardless.\n\nIn the long term, I think this makes perfect sense. After all, that's really what the first option is at its heart. About search engines, that's also a great point. We've thought about doing this, but my concern was that the ecosystem on the whole is too young and fragmented for this to make much sense. Until for example speciality search engines for Bitcoin products and services manifest (I'm sure they are coming), I suspect the results might be a little vague and unsatisfying.\n\nI really see Hive's app platform as a stepping-stone to more mature things. Hopefully several companies like BitPay end up offering both great affiliate programs and search engines very soon. Until then, that's why something like sending transaction fees directly from the user's wallet is even on the table.\n\n> The apps don't have to be offline. They can (and probably should) be online, so the businesses can retain control of their features and brand.\n\nYes, I should clarify. We do want businesses to be able to have that control. However we also want to do a kind of submission/review process in order to ensure some user experience continuity and also to monitor for potential exploits. The plan is ultimately to have a public repository for applications, maintained by us. We will review the pull requests of third parties and the Hive app will always try to pull the latest (approved) updates. Does that make sense? It's centralized responsibility and potential risk if we cannot keep up with demand, but again -- we want to try the approach, at least while starting out.\n\n> The main downside, of course, is it distorts technical judgement. You can get projects pushing certain businesses heavily not because it's technically the best thing for users, but because their income depends on it.\n\nThat's absolutely true, but at the moment the only thing I can really say is that we'll cross that bridge when we get there. ;-)\n\n> One alternative funding model you could explore is allowing users to bid on assurance contracts for feature development. This means you think up a bunch of improvements you could make, then allow users to pledge Kickstarter-style towards their development. The upside is it allows the community to direct development, and users feel directly involved and not exploited. The downside is, no recurring income you can use to support yourself whilst engaged in other endeavours.\n\nFunny you should mention it! I just mocked this idea up last week, though I assumed a cruder system of \"voting\" to an address that corresponds to a feature -- literally, voting with your wallet (for your wallet, ad infinitum). I watched your talk about assurance contracts and other \"hidden\" features, but am not entirely sure that I understood it enough to know how it would work in this context. Sorry for the persistent hand-holding requests, but some advice would be very welcome.\n\n>> 2) Although our BitcoinKit.framework supports both bitcoind and bitcoinj, we will be using bitcoinj with an integrated VM for the time being. The main draw is SPV, although to be honest we would prefer to support the network more via something like Peter Todd's partial UTXO sets idea (hint hint, anyone?).\n> \n> Bear in mind that regardless of how much you want to support the network, it's ultimately your users resources that will actually get spent. That's why I'm a bit skeptical of any schemes that rely on random end users donating lots of cpu time or bandwidth to the network. If they want to do it, partial UTXO sets and other interesting ideas are worthwhile, but I guess most users won't. I think Bitcoin will over time be more and more like Tor where relays are run on dedicated servers by people who have some modicum of knowledge and community involvement.\n\nIf it is a real burden for the users, that's the best argument I've yet heard. However, my impression from Peter's post was that it would be fairly painless for them. I guess there's also the question of diminishing returns: Is the network value of a full \"user\" Bitcoin node less than one run on a dedicated server? Will it eventually be? I don't know enough about that to comment, but I do know that in the Tor example, exits are chosen based on some criteria (I think, available bandwidth?). Is there a parallel in Bitcoin?\n\n(Probably best as a separate thread...)\n\nThanks for your thoughts, Mike.\n-w\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 841 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/ffd6a3a5/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-05T10:14:42",
                "message_text_only": "On Thu, Sep 5, 2013 at 12:04 PM, Wendell <w at grabhive.com> wrote:\n\n> Funny you should mention it! I just mocked this idea up last week, though\n> I assumed a cruder system of \"voting\" to an address that corresponds to a\n> feature -- literally, voting with your wallet (for your wallet, ad\n> infinitum). I watched your talk about assurance contracts and other\n> \"hidden\" features, but am not entirely sure that I understood it enough to\n> know how it would work in this context. Sorry for the persistent\n> hand-holding requests, but some advice would be very welcome.\n>\n\nWell, it's a bit complicated and needs some software development to do\nwell. The best way to fund a complex project would be to raise the money\nusing an assurance contr.... oh wait ;)\n\n\n> If it is a real burden for the users, that's the best argument I've yet\n> heard. However, my impression from Peter's post was that it would be fairly\n> painless for them.\n>\n\nIt could be automatic in the sense that users don't need to know it's\nhappening, but look at it this way. Gavin believes the future of computing\nis mobile and tablets. I don't know about that, but let's assume for the\nsake of argument he turns out to be right. These devices are expected to\nhave much longer battery life than laptops. Apps that spin up in the\nbackground and use battery+radio can easily be seen as \"abusive\" by end\nusers. In fact, if you look in the Bitcoin Wallet section of the forum,\nyou'll see a giant argument by users of the Android app who are upset\nbecause the app sometimes runs in the background *just to keep up with the\nchain*! That's not even donating resources, it's just trying to ensure it\ndoesn't fall behind, and this enrages some users because it can have a\nsmall but non-zero battery/bandwidth usage impact.\n\nGiven the number of complaints generated by just having the app sync\nautomatically, imagine what would happen if we started relaying blocks!\n\nGenerally the ethos and modus operandi of desktops is different to laptops\nwhich is in turn different to mobiles/tablets. Things you can get away with\non more powerful machines that expect to be plugged in all the time are\nverboten on more modern devices.\n\nNow that said, I can easily see Bitcoin enthusiasts buying some kind of\ncheap embedded device, maybe Raspberry Pi based, and plugging it into a\nwall in order to donate to the network. That way it doesn't affect their\nprimary devices responsiveness or storage or battery life.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/53170c33/attachment.html>"
            },
            {
                "author": "Wendell",
                "date": "2013-09-05T12:09:55",
                "message_text_only": "On Sep 5, 2013, at 12:14 PM, Mike Hearn wrote:\n> On Thu, Sep 5, 2013 at 12:04 PM, Wendell <w at grabhive.com> wrote:\n>> Funny you should mention it! I just mocked this idea up last week, though I assumed a cruder system of \"voting\" to an address that corresponds to a feature -- literally, voting with your wallet (for your wallet, ad infinitum). I watched your talk about assurance contracts and other \"hidden\" features, but am not entirely sure that I understood it enough to know how it would work in this context. Sorry for the persistent hand-holding requests, but some advice would be very welcome.\n> \n> Well, it's a bit complicated and needs some software development to do well. The best way to fund a complex project would be to raise the money using an assurance contr.... oh wait ;)\n\nWell, let's assume that our \"public good\" is based on the 5-step model described here:\nhttps://en.bitcoin.it/wiki/Contracts#Example_3:_Assurance_contracts\n\nThis good corresponds to something like \"Facebook contact synchronization\" and has a target of 50 BTC, though we also want to be able to take more if people are willing to give it.\n\nFrom here, it is unfortunately a little over our collective heads; we have as of yet no experience with the scripting language. I suppose I'm trying to twist your arm for an example, and maybe an anecdote. How would we do it? Does it require the donors to do anything esoteric? I saw \"but they do not broadcast it\" -- does this happen automatically when coins are sent to that address, for example?\n\nConfused but enthusiastic,\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-05T12:49:43",
                "message_text_only": "It needs people to use either a dedicated app or a wallet with the right\nfeatures. I've gone back and forth on whether it's better to have wallets\nbecome featureful things or to have lots of separate apps. There are pro's\nand con's to each.\n\nFortunately bitcoinj makes bringing up a new GUI wallet app quite easy\n(well ... if you're writing it in java ;). So having a dedicated app just\nfor managing your pledges is quite straightforward.\n\nAt that point it's about contracts programming:\n\nhttps://code.google.com/p/bitcoinj/wiki/WorkingWithContracts\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/bb210eef/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "An \"app store\" and non-network transaction fees",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Wendell"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 16574
        }
    },
    {
        "title": "[Bitcoin-development] GB V04",
        "thread_messages": [
            {
                "author": "Randolph D.",
                "date": "2013-09-04T21:35:57",
                "message_text_only": "Fwd:\n> V04 is out: Secure Instant Messenger\n> https://sourceforge.net/projects/goldbug/\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130904/420eaa82/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-05T08:27:06",
                "message_text_only": "Please do not post about this on bitcoin-development again. It's off topic\nand you were already asked to stop.\n\n\nOn Wed, Sep 4, 2013 at 11:35 PM, Randolph D. <rdohm321 at gmail.com> wrote:\n\n> Fwd:\n> > V04 is out: Secure Instant Messenger\n> > https://sourceforge.net/projects/goldbug/\n>\n>\n> ------------------------------------------------------------------------------\n> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n> Discover the easy way to master current and previous Microsoft technologies\n> and advance your career. Get an incredible 1,500+ hours of step-by-step\n> tutorial videos with LearnDevNow. Subscribe today and save!\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/4e82ff75/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "GB V04",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Randolph D."
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1389
        }
    },
    {
        "title": "[Bitcoin-development] Social network integration (brainstorm)",
        "thread_messages": [
            {
                "author": "Wendell",
                "date": "2013-09-05T08:23:01",
                "message_text_only": "Mike Hearn had a rather cool idea about watermarking images with Bitcoin addresses in order to facilitate auto-magically linking social networking profiles: apparently even without API access, reasonably large user images are available publicly via the major services (Facebook, Twitter).\n\nSince this process would necessarily be somewhat manual and would of course be \"undone\" anytime the user changed his/her profile image, it is probably not a solution for everyone. But it seems that this could be a helpful way to at least _begin_ organizing Bitcoin around people and organizations in a way that is broadly familiar.\n\nI haven't been able to get this to work myself, but Blockchain.info seems to offer sending 'coin via Facebook:\nhttps://blockchain.info/wallet/send-via\n\nThere is also the very cute Bitcoins With Friends:\nhttps://bitcoinswithfriends.com/\n\nMost of the other apps that I have seen at one point or another have vanished. I recall reading that Facebook was not particularly friendly to them, hence the present interest in more subversive (?) ways of making those connections.\n\nAgain, I am not 100% sure that this is the correct place for it, but I'm opening this thread to other such ideas in case anyone else wants to discuss it. Our motivation is making Bitcoin easier to use, and we suspect that even imperfect social network support will move us closer to that goal.\n\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\n> Re-orienting Bitcoin around people and companies is something we wanted to do for a long time. How do you get an address linked to a personal profile? Someone was asking me about this last month and I suggested watermarking addresses into social network profile pictures. The advantage of that approach is every social network supports profile pictures and big ones like Facebook and Twitter allow querying of somebodies picture without needing any API or user authentication, eg:\n> \n>    https://graph.facebook.com/i.am.the.real.mike/picture?type=large\n> \n> So obviously with such a thing you can send to any Facebook user who has configured their profile correctly. There's a library that implements watermarking that can survive social network recompression, but it is (doh) written in Java ;)"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-05T08:33:24",
                "message_text_only": ">\n> Since this process would necessarily be somewhat manual and would of\n> course be \"undone\" anytime the user changed his/her profile image, it is\n> probably not a solution for everyone.\n\n\nI guess these days most Facebook/G+/Twitter users are logged in from their\nsmartphone , so you'd implement it as a mobile app that gets API access via\nthe standard mobile frameworks. The UI flows for this are highly optimised\nand very slick. Once you have API access to read/write the users profile\npicture, your app can just wake up from time to time and check if the users\nprofile picture has changed. If it did, download the highest resolution\navailable, rewatermark and reupload.\n\nThe main sticking point I can see is that the user might end up losing\ncomments or likes on their primary photo, which would upset some people,\nand they might end up with duplicates if the old one was not erased. The\nFacebook API docs are notoriously poor - it's unclear to me whether an app\ncan edit a photo after it was uploaded, or whether it can only create new\nones (deleting photos requires whitelisting by Facebook).\n\nTo read the users watermarked address requires no API access or account,\nthough.\n\nProbably you wouldn't want to watermark an actual Bitcoin address or key.\nThe capacity of social network photos to carry stegod data is very low due\nto the incredibly high compression they go through. More likely you'd\nencode a very short URL which contains a payment request and then users\nwould rotate their key from time to time at the hosting site.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130905/94be6cf4/attachment.html>"
            },
            {
                "author": "Mats Henricson",
                "date": "2013-09-05T11:02:11",
                "message_text_only": "The Trsst project (Twitter + RSS + Google Reader = Trsst social network)\nhas some interesting ideas:\n\nhttp://www.trsst.com/paper/\n\nQuote:\n\n   In Trsst, every user account is a digital wallet. Authors and\n   individual pieces of content can receive secure and anonymous\n   micro-payments of digital crypto-currency, enabling long-\n   envisioned content monetization schemes where authors receive\n   small payments each time their content is consumed, shared,\n   or \"liked\".\n\nMats\n\nOn 09/05/2013 10:23 AM, Wendell wrote:\n> Mike Hearn had a rather cool idea about watermarking images with Bitcoin addresses in order to facilitate auto-magically linking social networking profiles: apparently even without API access, reasonably large user images are available publicly via the major services (Facebook, Twitter).\n> \n> Since this process would necessarily be somewhat manual and would of course be \"undone\" anytime the user changed his/her profile image, it is probably not a solution for everyone. But it seems that this could be a helpful way to at least _begin_ organizing Bitcoin around people and organizations in a way that is broadly familiar.\n> \n> I haven't been able to get this to work myself, but Blockchain.info seems to offer sending 'coin via Facebook:\n> https://blockchain.info/wallet/send-via\n> \n> There is also the very cute Bitcoins With Friends:\n> https://bitcoinswithfriends.com/\n> \n> Most of the other apps that I have seen at one point or another have vanished. I recall reading that Facebook was not particularly friendly to them, hence the present interest in more subversive (?) ways of making those connections.\n> \n> Again, I am not 100% sure that this is the correct place for it, but I'm opening this thread to other such ideas in case anyone else wants to discuss it. Our motivation is making Bitcoin easier to use, and we suspect that even imperfect social network support will move us closer to that goal.\n> \n> -wendell\n> \n> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n> \n>> Re-orienting Bitcoin around people and companies is something we wanted to do for a long time. How do you get an address linked to a personal profile? Someone was asking me about this last month and I suggested watermarking addresses into social network profile pictures. The advantage of that approach is every social network supports profile pictures and big ones like Facebook and Twitter allow querying of somebodies picture without needing any API or user authentication, eg:\n>>\n>>    https://graph.facebook.com/i.am.the.real.mike/picture?type=large\n>>\n>> So obviously with such a thing you can send to any Facebook user who has configured their profile correctly. There's a library that implements watermarking that can survive social network recompression, but it is (doh) written in Java ;)\n> \n> ------------------------------------------------------------------------------\n> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n> Discover the easy way to master current and previous Microsoft technologies\n> and advance your career. Get an incredible 1,500+ hours of step-by-step\n> tutorial videos with LearnDevNow. Subscribe today and save!\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            }
        ],
        "thread_summary": {
            "title": "Social network integration (brainstorm)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Mats Henricson",
                "Wendell"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 7425
        }
    },
    {
        "title": "[Bitcoin-development] Simple contacts exchange (was: Social network integration (brainstorm))",
        "thread_messages": [
            {
                "author": "Wendell",
                "date": "2013-09-06T15:07:44",
                "message_text_only": "Hi all,\n\nWe're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.\n\nThe simplest version goes like this:\n\n2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says \"you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA\", it's \"You received 2 BTC from Frank Jones\" including a nice photo.\n\nNow. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.\n\nAny thoughts about this?\n\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 841 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130906/6be1e4b2/attachment.sig>"
            },
            {
                "author": "Eric Lombrozo",
                "date": "2013-09-06T22:47:50",
                "message_text_only": "Why not just use the transaction hash itself for the lookup? Also, presumably you'd want to encrypt the data so that only the recipient of the transaction can do this lookup.\n\n-Eric\n\nOn Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:\n\n> Hi all,\n> \n> We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.\n> \n> The simplest version goes like this:\n> \n> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says \"you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA\", it's \"You received 2 BTC from Frank Jones\" including a nice photo.\n> \n> Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.\n> \n> Any thoughts about this?\n> \n> -wendell\n> \n> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n> \n> ------------------------------------------------------------------------------\n> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n> Discover the easy way to master current and previous Microsoft technologies\n> and advance your career. Get an incredible 1,500+ hours of step-by-step\n> tutorial videos with LearnDevNow. Subscribe today and save!\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 801 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130906/6f906efc/attachment.sig>"
            },
            {
                "author": "Wendell",
                "date": "2013-09-16T14:05:25",
                "message_text_only": "Luke pointed out that we should not be inserting extraneous data into the blockchain, so this sounds like the best option, Eric. \n\nI'm under the impression that a Bitcoin user Alice cannot see the actual public key of Bitcoin user Bob, so if we had Hive store metadata on a server relating to a given transaction ID, I would not be able to use those public keys key to encrypt. Is this a misunderstanding or is it correct?\n\nAssuming it is correct, the best that I could come up with was storing the transaction ID with a _fresh_ public key on a server, each time a transfer is made. Altogether it looks like this:\n\n- Alice generates a new keypair & revocation certificate for the transaction\n- Alice makes a Bitcoin transaction to Bob\n- Alice sends the transaction ID plus the new public key to server\n- Bob receives the Bitcoin transaction\n- Bob generates a new keypair & revocation certificate\n- Bob does a transaction ID lookup on the server, receives Alice's public key, sends his own new one\n- Bob encrypts his user metadata against Alice's new key\n- Alice downloads and decrypts Bob's metadata\n- Alice uploads her revocation certificate\n- Alice uploads her own metadata\n- Bob downloads Alice's metadata\n- Bob uploads his revocation certificate\n- (Server removes all keys with revocation certificates)\n\nI presume going the extra mile to generate new keys for each transaction is helpful for privacy?\n\nThe above seems rather inelegant to me. I really don't like that clients (wallets) are going to be beating down the server all the time checking for keys, or that there is a possibility of a desynchronization so severe that the user receives the data much too late for it to be useful. But, I suppose it can work.\n\nAnother thing I'm considering is Alice/Bob validating each other. I suppose we should include some kind of code that we encourage people to read to each other over the phone or some other medium, to ensure that \"it really is Alice\", before (for example) returning money to a very legit-looking personage.\n\nAny other thoughts? I would love to do this without using any servers at all (\"serverless keyserver\", anyone?), but I am not quite sure how.\n\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\nOn Sep 7, 2013, at 12:47 AM, Eric Lombrozo wrote:\n\n> Why not just use the transaction hash itself for the lookup? Also, presumably you'd want to encrypt the data so that only the recipient of the transaction can do this lookup.\n> \n> -Eric\n> \n> On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:\n> \n>> Hi all,\n>> \n>> We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.\n>> \n>> The simplest version goes like this:\n>> \n>> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says \"you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA\", it's \"You received 2 BTC from Frank Jones\" including a nice photo.\n>> \n>> Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.\n>> \n>> Any thoughts about this?\n>> \n>> -wendell\n>> \n>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n>> \n>> ------------------------------------------------------------------------------\n>> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n>> Discover the easy way to master current and previous Microsoft technologies\n>> and advance your career. Get an incredible 1,500+ hours of step-by-step\n>> tutorial videos with LearnDevNow. Subscribe today and save!\n>> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Wendell",
                "date": "2013-09-17T09:30:57",
                "message_text_only": "Couple of things I just thought about:\n\n1- Presume server should only sweep with two (or more, see below) revocation certificates being present\n2- Need to insert something in the flow so that Alice can verify that the uploaded key is actually Bob's (and perhaps vise-versa, given an extremely dedicated attacker with a fast connection?).\n\nIs there a way to do #2 without creating yet another transaction? Admittedly I am still really puzzled about the accessibility of public keys in Bitcoin!\n\nPlease remember that the idea is to have two wallets securely exchange a packet of metadata about a transaction beyond the scope of Bitcoin itself (a name, perhaps a small photo, etc) in order to increase usability. This will be my last post here on the topic except to reply in case anyone else contributes.\n\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\nOn Sep 16, 2013, at 4:05 PM, Wendell wrote:\n\n> Luke pointed out that we should not be inserting extraneous data into the blockchain, so this sounds like the best option, Eric. \n> \n> I'm under the impression that a Bitcoin user Alice cannot see the actual public key of Bitcoin user Bob, so if we had Hive store metadata on a server relating to a given transaction ID, I would not be able to use those public keys key to encrypt. Is this a misunderstanding or is it correct?\n> \n> Assuming it is correct, the best that I could come up with was storing the transaction ID with a _fresh_ public key on a server, each time a transfer is made. Altogether it looks like this:\n> \n> - Alice generates a new keypair & revocation certificate for the transaction\n> - Alice makes a Bitcoin transaction to Bob\n> - Alice sends the transaction ID plus the new public key to server\n> - Bob receives the Bitcoin transaction\n> - Bob generates a new keypair & revocation certificate\n> - Bob does a transaction ID lookup on the server, receives Alice's public key, sends his own new one\n> - Bob encrypts his user metadata against Alice's new key\n> - Alice downloads and decrypts Bob's metadata\n> - Alice uploads her revocation certificate\n> - Alice uploads her own metadata\n> - Bob downloads Alice's metadata\n> - Bob uploads his revocation certificate\n> - (Server removes all keys with revocation certificates)\n> \n> I presume going the extra mile to generate new keys for each transaction is helpful for privacy?\n> \n> The above seems rather inelegant to me. I really don't like that clients (wallets) are going to be beating down the server all the time checking for keys, or that there is a possibility of a desynchronization so severe that the user receives the data much too late for it to be useful. But, I suppose it can work.\n> \n> Another thing I'm considering is Alice/Bob validating each other. I suppose we should include some kind of code that we encourage people to read to each other over the phone or some other medium, to ensure that \"it really is Alice\", before (for example) returning money to a very legit-looking personage.\n> \n> Any other thoughts? I would love to do this without using any servers at all (\"serverless keyserver\", anyone?), but I am not quite sure how.\n> \n> -wendell\n> \n> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n> \n> On Sep 7, 2013, at 12:47 AM, Eric Lombrozo wrote:\n> \n>> Why not just use the transaction hash itself for the lookup? Also, presumably you'd want to encrypt the data so that only the recipient of the transaction can do this lookup.\n>> \n>> -Eric\n>> \n>> On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:\n>> \n>>> Hi all,\n>>> \n>>> We're thinking about ways of automatically exchanging contact details between wallets, in order to encourage the proliferation of identifiable names and photos rather than long and hard-to-verify addresses.\n>>> \n>>> The simplest version goes like this:\n>>> \n>>> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into the transaction. When it arrives on the other end, it is indeed looked up, and instead of being presented with a dialogue that says \"you received 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA\", it's \"You received 2 BTC from Frank Jones\" including a nice photo.\n>>> \n>>> Now. We can simply delete this data in reference to the transaction ID after it happens (or delete it after a time), but is there any more decentralized way to do it? I would prefer us to run no dedicated servers that would ever put us in a position of being coerced into giving data, or otherwise altering our system to store it.\n>>> \n>>> Any thoughts about this?\n>>> \n>>> -wendell\n>>> \n>>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n>>> \n>>> ------------------------------------------------------------------------------\n>>> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n>>> Discover the easy way to master current and previous Microsoft technologies\n>>> and advance your career. Get an incredible 1,500+ hours of step-by-step\n>>> tutorial videos with LearnDevNow. Subscribe today and save!\n>>> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-17T10:03:19",
                "message_text_only": "You can prove ownership of a private key by signing a challenger-generated\nnonce with the public part and giving the signature back to the challenger\n- same as with any asymmetric crypto system.\n\nAs I already noted, the payment protocol is designed to solve that problem.\nYou could design a BIP that extended the payment protocol to include\ninformation about the person who generated it.\n\n\nOn Tue, Sep 17, 2013 at 11:30 AM, Wendell <w at grabhive.com> wrote:\n\n> Couple of things I just thought about:\n>\n> 1- Presume server should only sweep with two (or more, see below)\n> revocation certificates being present\n> 2- Need to insert something in the flow so that Alice can verify that the\n> uploaded key is actually Bob's (and perhaps vise-versa, given an extremely\n> dedicated attacker with a fast connection?).\n>\n> Is there a way to do #2 without creating yet another transaction?\n> Admittedly I am still really puzzled about the accessibility of public keys\n> in Bitcoin!\n>\n> Please remember that the idea is to have two wallets securely exchange a\n> packet of metadata about a transaction beyond the scope of Bitcoin itself\n> (a name, perhaps a small photo, etc) in order to increase usability. This\n> will be my last post here on the topic except to reply in case anyone else\n> contributes.\n>\n> -wendell\n>\n> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n>\n> On Sep 16, 2013, at 4:05 PM, Wendell wrote:\n>\n> > Luke pointed out that we should not be inserting extraneous data into\n> the blockchain, so this sounds like the best option, Eric.\n> >\n> > I'm under the impression that a Bitcoin user Alice cannot see the actual\n> public key of Bitcoin user Bob, so if we had Hive store metadata on a\n> server relating to a given transaction ID, I would not be able to use those\n> public keys key to encrypt. Is this a misunderstanding or is it correct?\n> >\n> > Assuming it is correct, the best that I could come up with was storing\n> the transaction ID with a _fresh_ public key on a server, each time a\n> transfer is made. Altogether it looks like this:\n> >\n> > - Alice generates a new keypair & revocation certificate for the\n> transaction\n> > - Alice makes a Bitcoin transaction to Bob\n> > - Alice sends the transaction ID plus the new public key to server\n> > - Bob receives the Bitcoin transaction\n> > - Bob generates a new keypair & revocation certificate\n> > - Bob does a transaction ID lookup on the server, receives Alice's\n> public key, sends his own new one\n> > - Bob encrypts his user metadata against Alice's new key\n> > - Alice downloads and decrypts Bob's metadata\n> > - Alice uploads her revocation certificate\n> > - Alice uploads her own metadata\n> > - Bob downloads Alice's metadata\n> > - Bob uploads his revocation certificate\n> > - (Server removes all keys with revocation certificates)\n> >\n> > I presume going the extra mile to generate new keys for each transaction\n> is helpful for privacy?\n> >\n> > The above seems rather inelegant to me. I really don't like that clients\n> (wallets) are going to be beating down the server all the time checking for\n> keys, or that there is a possibility of a desynchronization so severe that\n> the user receives the data much too late for it to be useful. But, I\n> suppose it can work.\n> >\n> > Another thing I'm considering is Alice/Bob validating each other. I\n> suppose we should include some kind of code that we encourage people to\n> read to each other over the phone or some other medium, to ensure that \"it\n> really is Alice\", before (for example) returning money to a very\n> legit-looking personage.\n> >\n> > Any other thoughts? I would love to do this without using any servers at\n> all (\"serverless keyserver\", anyone?), but I am not quite sure how.\n> >\n> > -wendell\n> >\n> > grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n> >\n> > On Sep 7, 2013, at 12:47 AM, Eric Lombrozo wrote:\n> >\n> >> Why not just use the transaction hash itself for the lookup? Also,\n> presumably you'd want to encrypt the data so that only the recipient of the\n> transaction can do this lookup.\n> >>\n> >> -Eric\n> >>\n> >> On Sep 6, 2013, at 8:07 AM, Wendell <w at grabhive.com> wrote:\n> >>\n> >>> Hi all,\n> >>>\n> >>> We're thinking about ways of automatically exchanging contact details\n> between wallets, in order to encourage the proliferation of identifiable\n> names and photos rather than long and hard-to-verify addresses.\n> >>>\n> >>> The simplest version goes like this:\n> >>>\n> >>> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted\n> into the transaction. When it arrives on the other end, it is indeed looked\n> up, and instead of being presented with a dialogue that says \"you received\n> 2 BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA\", it's \"You received 2 BTC\n> from Frank Jones\" including a nice photo.\n> >>>\n> >>> Now. We can simply delete this data in reference to the transaction ID\n> after it happens (or delete it after a time), but is there any more\n> decentralized way to do it? I would prefer us to run no dedicated servers\n> that would ever put us in a position of being coerced into giving data, or\n> otherwise altering our system to store it.\n> >>>\n> >>> Any thoughts about this?\n> >>>\n> >>> -wendell\n> >>>\n> >>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n> >>>\n> >>>\n> ------------------------------------------------------------------------------\n> >>> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n> >>> Discover the easy way to master current and previous Microsoft\n> technologies\n> >>> and advance your career. Get an incredible 1,500+ hours of step-by-step\n> >>> tutorial videos with LearnDevNow. Subscribe today and save!\n> >>>\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk_______________________________________________\n> >>> Bitcoin-development mailing list\n> >>> Bitcoin-development at lists.sourceforge.net\n> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> LIMITED TIME SALE - Full Year of Microsoft Training For Just $49.99!\n> 1,500+ hours of tutorials including VisualStudio 2012, Windows 8,\n> SharePoint\n> 2013, SQL 2012, MVC 4, more. BEST VALUE: New Multi-Library Power Pack\n> includes\n> Mobile, Cloud, Java, and UX Design. Lowest price ever! Ends 9/20/13.\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041151&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/5399dd26/attachment.html>"
            },
            {
                "author": "Wendell",
                "date": "2013-09-17T12:05:30",
                "message_text_only": "Thanks Mike.\n\nI definitely took all your comments to heart, but we're looking to road-test something quickly for the sake of user experience in our own wallet. I wouldn't mind us contributing to a BIP once we have a better grip on the payment protocol itself, but (for example) I'm still not sure that I understand _why_ signed certificates are even required. Isn't that likely be an obstacle to adoption for use cases like this?\n\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\nOn Sep 17, 2013, at 12:03 PM, Mike Hearn wrote:\n\n> You can prove ownership of a private key by signing a challenger-generated nonce with the public part and giving the signature back to the challenger - same as with any asymmetric crypto system.\n> \n> As I already noted, the payment protocol is designed to solve that problem. You could design a BIP that extended the payment protocol to include information about the person who generated it.\n> \n>> On Tue, Sep 17, 2013 at 11:30 AM, Wendell <w at grabhive.com> wrote:\n>> Couple of things I just thought about:\n>> \n>> 1- Presume server should only sweep with two (or more, see below) revocation certificates being present\n>> 2- Need to insert something in the flow so that Alice can verify that the uploaded key is actually Bob's (and perhaps vise-versa, given an extremely dedicated attacker with a fast connection?).\n>> \n>> Is there a way to do #2 without creating yet another transaction? Admittedly I am still really puzzled about the accessibility of public keys in Bitcoin!\n>> \n>> Please remember that the idea is to have two wallets securely exchange a packet of metadata about a transaction beyond the scope of Bitcoin itself (a name, perhaps a small photo, etc) in order to increase usability. This will be my last post here on the topic except to reply in case anyone else contributes.\n>> \n>> -wendell\n>> \n>> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-07T21:44:38",
                "message_text_only": "This is the sort of thing the payment protocol is for. The recipient would\nvend a PaymentRequest containing identity details. The sender would submit\na Payment containing his/hers. The wallet then understands what to do.\n\n\nOn Fri, Sep 6, 2013 at 5:07 PM, Wendell <w at grabhive.com> wrote:\n\n> Hi all,\n>\n> We're thinking about ways of automatically exchanging contact details\n> between wallets, in order to encourage the proliferation of identifiable\n> names and photos rather than long and hard-to-verify addresses.\n>\n> The simplest version goes like this:\n>\n> 2 BTC Bitcoin is sent to someone, and a data lookup hash is inserted into\n> the transaction. When it arrives on the other end, it is indeed looked up,\n> and instead of being presented with a dialogue that says \"you received 2\n> BTC from 13Y94z43Nbbb6wevRyk82CeDoYQ5S28zmA\", it's \"You received 2 BTC from\n> Frank Jones\" including a nice photo.\n>\n> Now. We can simply delete this data in reference to the transaction ID\n> after it happens (or delete it after a time), but is there any more\n> decentralized way to do it? I would prefer us to run no dedicated servers\n> that would ever put us in a position of being coerced into giving data, or\n> otherwise altering our system to store it.\n>\n> Any thoughts about this?\n>\n> -wendell\n>\n> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n> Discover the easy way to master current and previous Microsoft technologies\n> and advance your career. Get an incredible 1,500+ hours of step-by-step\n> tutorial videos with LearnDevNow. Subscribe today and save!\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130907/cada844b/attachment.html>"
            },
            {
                "author": "Wendell",
                "date": "2013-09-09T07:26:35",
                "message_text_only": "OK, I was under the impression that this was mostly developed for merchants. I've seen some discussion here that seemed to suggest it requiring some non-trivial (for an end user) steps like getting a CA-signed certificate.\n\n-wendell\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\nOn Sep 7, 2013, at 11:44 PM, Mike Hearn wrote:\n\n> This is the sort of thing the payment protocol is for. The recipient would vend a PaymentRequest containing identity details. The sender would submit a Payment containing his/hers. The wallet then understands what to do."
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-09T11:43:40",
                "message_text_only": "The current version requires a signed cert yes. Whether that's difficult or\nnot depends on the policies of the cert authorities. Ultimately all they\nhave to do is verify an email address by sending it a clickable link, which\nis why StartSSL do it for free. Probably they aren't optimised for\nusability, but there's no technical reason why one couldn't be. It's a\ncompetitive market, after all.\n\nThere's also the option of extending the payment protocol to support other\nforms of PKI. But from a technical perspective the X.509 PKI is fine.\nSomeone can always set up their own CA for the Bitcoin community and\nconvince wallet developers to include their root cert, after all.\n\n\nOn Mon, Sep 9, 2013 at 9:26 AM, Wendell <w at grabhive.com> wrote:\n\n> OK, I was under the impression that this was mostly developed for\n> merchants. I've seen some discussion here that seemed to suggest it\n> requiring some non-trivial (for an end user) steps like getting a CA-signed\n> certificate.\n>\n> -wendell\n>\n> grabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n>\n> On Sep 7, 2013, at 11:44 PM, Mike Hearn wrote:\n>\n> > This is the sort of thing the payment protocol is for. The recipient\n> would vend a PaymentRequest containing identity details. The sender would\n> submit a Payment containing his/hers. The wallet then understands what to\n> do.\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130909/5ac9a201/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-17T12:36:29",
                "message_text_only": "The payment protocol doesn't *require* signed certificates, it just gives\nthe option of using them.\n\nHowever if you don't have some kind of cryptographic proof of identity,\nwhat stops me putting your name and face into my payment requests and\nclaiming to be you?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/45f7d548/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Simple contacts exchange (was: Social network integration (brainstorm))",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Eric Lombrozo",
                "Mike Hearn",
                "Wendell"
            ],
            "messages_count": 10,
            "total_messages_chars_count": 26467
        }
    },
    {
        "title": "[Bitcoin-development] Blockchain archival",
        "thread_messages": [
            {
                "author": "Chris Evans",
                "date": "2013-09-07T21:06:24",
                "message_text_only": "bitcoin protocol needs an archival system so the blockchain doesn't become\ntoo big to download\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130907/61462202/attachment.html>"
            },
            {
                "author": "rob.golding at astutium.com",
                "date": "2013-09-07T23:21:31",
                "message_text_only": "> bitcoin protocol needs an archival system so the blockchain doesn't\n> become too big to download\n\nSome people may want it all ...\n\nBalance at Point-In-Time summaries (say up to the penultimate \ndifficulty adjustment) would be one simple way.\nAnd make new-adopters get up and running in minutes not days, which can \nonly be a good thing.\n\nIf going that route, then solutions to the 'consolidate \naddresses/wallets' question and formal 'discard' of addresses could get \naddressed.\n\nRob"
            },
            {
                "author": "Luke-Jr",
                "date": "2013-09-07T23:33:52",
                "message_text_only": "On Saturday, September 07, 2013 11:21:31 PM rob.golding at astutium.com wrote:\n> > bitcoin protocol needs an archival system so the blockchain doesn't\n> > become too big to download\n> \n> Some people may want it all ...\n> \n> Balance at Point-In-Time summaries (say up to the penultimate\n> difficulty adjustment) would be one simple way.\n> And make new-adopters get up and running in minutes not days, which can\n> only be a good thing.\n\nThere's no reason to require the full blockchain download before being up and \nrunning. Bitcoin-Qt 0.9 will (probably) have Pieter's work in this area to be \nusable very quickly, and download/verify the history in the background \n(there's no way to be completely trust-free without this).\n\n> If going that route, then solutions to the 'consolidate addresses/wallets'\n> question and formal 'discard' of addresses could get addressed.\n\nNot sure what you mean here. Addresses and wallets are two completely \ndifferent things. Addresses are single-use destinations that point to a wallet \n(which is itself private and unknown to the network).\n\nLuke"
            },
            {
                "author": "rob.golding at astutium.com",
                "date": "2013-09-08T03:56:17",
                "message_text_only": "> (there's no way to be completely trust-free without this).\n\nNot quite true, as I said balance-at-point-in-time would solve that \n(and make the storage requirements much lower)\n\n>> If going that route, then solutions to the 'consolidate \n>> addresses/wallets'\n>> question and formal 'discard' of addresses could get addressed.\n> \n> Not sure what you mean here. Addresses and wallets are two completely\n> different things. Addresses are single-use destinations that point to \n> a wallet\n> (which is itself private and unknown to the network).\n\nFor bitcoin to grow beyond interesting experiment into global everyday \nuse a number of things would have to happen, not least of which is \ntaking 'average punter' into account. Whilst new ideas can filter into \nthe general consciousness over time,sometimes concepts have to go with \n'what already works' :)\n\nPeople's concept of money hasn't really changed in over 1,000 years - \nit remains 'something of known value i can exchange for something else'.\n\nNo-one outside of bitcoin dev's and early adopters really gets the \none-shot concept of addresses - possibly rightly so - keeping issues of \nit lowering levels of anonymity etc out of the discussion - it doesn't \nfit with the mindset people have - it's difficult enough getting \nmerchants to setup separate addresses for each client, one per \ntransaction is simply a waste (of addresses, storage, blockchain size, \nnumnber of inputs|outputs when spending etc)\n\nI'm sure the wife would love a new handbag everytime she gets some \nmoney, but the real-world just isnt like that ;)\n\nAddresses are perceived as the equivalent of a jar you stick your coins \nin. You can have lots of jars. Each jar can be for a specific reason or \nwhatever, but the analogy is there.\n\nWallets are like a box you keep some of your jars in. With the added \ninteresting concept that a jar can be in multiple boxes at the same \ntime. Only the person with the right 'key' can open the jar and take the \ncontents.\n\nHowever unlike the 3 money boxes I have behind me right now - which i \ncan take 1 single penny out of one and put it into another - if I want \nto move bitcoins from one addresses (jar) to another *of my own* I have \nto pay a fee. Worse still if the jar doesnt have much in it I'm denied \nthat ability.\n\nEnd user will neither understand why or want to pay the fee, for \ndealing with their own coins.\nIf a jar breaks I can just tip the contents into a new one - unless I'm \nvery careless, the amount in the new one = the amount in the old one - \npeople will want/need it to work like that.\n\nSimilarly if you do have all these addresses around, you may want (as \ngood housekeeping) discard some of them (after moving the cash).\n\nSo having the ability to specify address to send from is essential (and \na sadly missing feature of the QT client)\n\n'intra-wallet' transfers with an 'also discard the sending address' \nwould be a way of (once confirmed) stopping any further use of that \naddress (denied any further transactions by miners ?) and when \nbalance-at-point-in-time is implemented, a way of shrinking the storage \nfor all other bitcoin users (who chosse not to have a full transaction \nset).\n\n\nIf i send luke 10, and luke sends me back 3, i have 3, luke has 7.\nIf luke sends me 2, and i send luke 1, i have 4 and luke has 6.\nTo verify my ability to send jeff 4, all that is needed is to know that \nI have 4, not all the transactions that led to that state - thats how \nits done now, thats not necessarily efficient as bitcoin grows\n\nIf luke sends me 4 more, i now have 4 again, luke has 3\nIf i send 1 to each of the children, they have 1 each (*4)\n\nHaving a 'family' wallet means when on holiday they can have that \nrental of quad-bikes - to send the rental company 4 the client only \nneeds to know that those addresses now have 1 each in them, not all the \nprevious transactions - if they didnt exist at the point-in-time \nbalance, then yes, it would need to know about the luke>rob>kids \ntransactions, but thats all\n\nI moved to a new netbook recently - it took 140 *hours* to d/load and \nprocess the blockchain (yes the wifi was that bad), I heard from one of \nour clients that (although they only had the client running during \nworking hours) that to their desktop it was over 9 days before it had \ncaught up.\n\nIf all I was d/loading were the transactions since the last difficulty \nchange (as one example of a fixed point), and the remaining balance on \nany not-discarded address as at that point it would have been much much \nquicker, and not be shagging my shiny new hard drive.\n\nThere's more but it's 4.45 in the morning, and I cant think coherently \nuntil after a few hours kip and some good coffee :)\n\nRob"
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-09-08T04:13:48",
                "message_text_only": "This is all FAQ territory, and has been covered on the forums for years.\n\nBalance-at-point-in-time is not completely trust-free, as it is a\ndataset that must be bootstrapped into trust by... an earlier dataset.\n Continue this logic and you have a... chain.\n\nThere is plenty of on-going discussion on UTXO snapshotting -- UTXO\nlockin for each block, or something.  This is /somewhat/ like\nbalance-at-point-in-time, but no one pretends it is trust-free.\n\nThe /only/ way to have a completely trust-free solution is to be able\nto verify all data from genesis through $now. However, it is not\nnecessary for all bitcoin wallets to download and verify all those\ngigabytes of data; that is what SPV mode is for.\n\n      Jeff\n\n\n\nOn Sat, Sep 7, 2013 at 11:56 PM,  <rob.golding at astutium.com> wrote:\n>> (there's no way to be completely trust-free without this).\n>\n> Not quite true, as I said balance-at-point-in-time would solve that\n> (and make the storage requirements much lower)\n>\n>>> If going that route, then solutions to the 'consolidate\n>>> addresses/wallets'\n>>> question and formal 'discard' of addresses could get addressed.\n>>\n>> Not sure what you mean here. Addresses and wallets are two completely\n>> different things. Addresses are single-use destinations that point to\n>> a wallet\n>> (which is itself private and unknown to the network).\n>\n> For bitcoin to grow beyond interesting experiment into global everyday\n> use a number of things would have to happen, not least of which is\n> taking 'average punter' into account. Whilst new ideas can filter into\n> the general consciousness over time,sometimes concepts have to go with\n> 'what already works' :)\n>\n> People's concept of money hasn't really changed in over 1,000 years -\n> it remains 'something of known value i can exchange for something else'.\n>\n> No-one outside of bitcoin dev's and early adopters really gets the\n> one-shot concept of addresses - possibly rightly so - keeping issues of\n> it lowering levels of anonymity etc out of the discussion - it doesn't\n> fit with the mindset people have - it's difficult enough getting\n> merchants to setup separate addresses for each client, one per\n> transaction is simply a waste (of addresses, storage, blockchain size,\n> numnber of inputs|outputs when spending etc)\n>\n> I'm sure the wife would love a new handbag everytime she gets some\n> money, but the real-world just isnt like that ;)\n>\n> Addresses are perceived as the equivalent of a jar you stick your coins\n> in. You can have lots of jars. Each jar can be for a specific reason or\n> whatever, but the analogy is there.\n>\n> Wallets are like a box you keep some of your jars in. With the added\n> interesting concept that a jar can be in multiple boxes at the same\n> time. Only the person with the right 'key' can open the jar and take the\n> contents.\n>\n> However unlike the 3 money boxes I have behind me right now - which i\n> can take 1 single penny out of one and put it into another - if I want\n> to move bitcoins from one addresses (jar) to another *of my own* I have\n> to pay a fee. Worse still if the jar doesnt have much in it I'm denied\n> that ability.\n>\n> End user will neither understand why or want to pay the fee, for\n> dealing with their own coins.\n> If a jar breaks I can just tip the contents into a new one - unless I'm\n> very careless, the amount in the new one = the amount in the old one -\n> people will want/need it to work like that.\n>\n> Similarly if you do have all these addresses around, you may want (as\n> good housekeeping) discard some of them (after moving the cash).\n>\n> So having the ability to specify address to send from is essential (and\n> a sadly missing feature of the QT client)\n>\n> 'intra-wallet' transfers with an 'also discard the sending address'\n> would be a way of (once confirmed) stopping any further use of that\n> address (denied any further transactions by miners ?) and when\n> balance-at-point-in-time is implemented, a way of shrinking the storage\n> for all other bitcoin users (who chosse not to have a full transaction\n> set).\n>\n>\n> If i send luke 10, and luke sends me back 3, i have 3, luke has 7.\n> If luke sends me 2, and i send luke 1, i have 4 and luke has 6.\n> To verify my ability to send jeff 4, all that is needed is to know that\n> I have 4, not all the transactions that led to that state - thats how\n> its done now, thats not necessarily efficient as bitcoin grows\n>\n> If luke sends me 4 more, i now have 4 again, luke has 3\n> If i send 1 to each of the children, they have 1 each (*4)\n>\n> Having a 'family' wallet means when on holiday they can have that\n> rental of quad-bikes - to send the rental company 4 the client only\n> needs to know that those addresses now have 1 each in them, not all the\n> previous transactions - if they didnt exist at the point-in-time\n> balance, then yes, it would need to know about the luke>rob>kids\n> transactions, but thats all\n>\n> I moved to a new netbook recently - it took 140 *hours* to d/load and\n> process the blockchain (yes the wifi was that bad), I heard from one of\n> our clients that (although they only had the client running during\n> working hours) that to their desktop it was over 9 days before it had\n> caught up.\n>\n> If all I was d/loading were the transactions since the last difficulty\n> change (as one example of a fixed point), and the remaining balance on\n> any not-discarded address as at that point it would have been much much\n> quicker, and not be shagging my shiny new hard drive.\n>\n> There's more but it's 4.45 in the morning, and I cant think coherently\n> until after a few hours kip and some good coffee :)\n>\n> Rob\n>\n> ------------------------------------------------------------------------------\n> Learn the latest--Visual Studio 2012, SharePoint 2013, SQL 2012, more!\n> Discover the easy way to master current and previous Microsoft technologies\n> and advance your career. Get an incredible 1,500+ hours of step-by-step\n> tutorial videos with LearnDevNow. Subscribe today and save!\n> http://pubads.g.doubleclick.net/gampad/clk?id=58041391&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n-- \nJeff Garzik\nSenior Software Engineer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            }
        ],
        "thread_summary": {
            "title": "Blockchain archival",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Luke-Jr",
                "rob.golding at astutium.com",
                "Chris Evans"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 12909
        }
    },
    {
        "title": "[Bitcoin-development] Some current turbulence on the Bitcoin network: DB corruption errors on start from Bitcoin-qt / Bitcoind",
        "thread_messages": [
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-09T08:53:01",
                "message_text_only": "Please return your seats and fasten your seat-belts.\n\nAll Bitcoin-qt / Bitcoind nodes will currently fail to come back up\nafter a restart, reporting\n\n\": *** coin database inconsistencies found\"\nand\n\"Do you want to rebuild the block database now?\"\n\nReindexing _will not_ correct the problem.  In Bitcoin-qt you should\nsay no to this reindex prompt as it will not help for this problem and\nwill only waste your time.\n\nTo workaround:\n\nPlease specify the command-line or configuration file argument\n-checklevel=2  to Bitcoind or Bitcoin-qt.\n\nThe issue appears to have been introduced by 0.8.0 and is only a local\nissue, beyond the annoyance restarting nodes it appears to be harmless\nand carries no forking risk but will take a software update to fix\ncompletely.\n\nThis problem will persist until no more than 288 blocks after 256818,\nunless another trigger transaction is added to the blockchain (which\nmay well happen).\n\nMore information will be forthcoming once a patch is available."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-09T09:25:09",
                "message_text_only": "On Mon, Sep 9, 2013 at 1:53 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> More information will be forthcoming once a patch is available.\n\nI now have a patch up for review.\n\nhttps://github.com/bitcoin/bitcoin/pull/2982\n\n\n(You should wait until other developers have had a chance to review\nbefore rushing out and applying it. The checklevel=2 workaround is\nadequate for now.)"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-09T23:25:50",
                "message_text_only": "There is a good writeup of how to perform the workaround in Windows at\nhttps://bitcointalk.org/index.php?topic=290922.msg3117923#msg3117923"
            }
        ],
        "thread_summary": {
            "title": "Some current turbulence on the Bitcoin network: DB corruption errors on start from Bitcoin-qt / Bitcoind",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gregory Maxwell"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 1501
        }
    },
    {
        "title": "[Bitcoin-development] BIP0039 Mnemonic code for generating deterministic keys",
        "thread_messages": [
            {
                "author": "slush",
                "date": "2013-09-10T16:44:25",
                "message_text_only": "Hi all,\n\nwe just finalized the draft and reference implementation of BIP39. Regards\nto rules in BIP0001 we're asking for comments.\n\nThe aim of the proposal is to standardize algorithm across various clients\nand fix some design problems of existing (but not yet standardized)\nElectrum mnemonic algorithm.\n\nBIP39 is a nice complement to BIP32, which allow users to (paper) backup\nand share their wallet accross multiple clients easily.\n\nLink to BIP: https://en.bitcoin.it/wiki/BIP_0039\n\nThanks for your time,\nslush\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/98b6c6cc/attachment.html>"
            },
            {
                "author": "Andreas M. Antonopoulos",
                "date": "2013-09-10T17:36:02",
                "message_text_only": "Excellent!\n\n\nOn Tue, Sep 10, 2013 at 9:44 AM, slush <slush at centrum.cz> wrote:\n\n> Hi all,\n>\n> we just finalized the draft and reference implementation of BIP39. Regards\n> to rules in BIP0001 we're asking for comments.\n>\n> The aim of the proposal is to standardize algorithm across various clients\n> and fix some design problems of existing (but not yet standardized)\n> Electrum mnemonic algorithm.\n>\n> BIP39 is a nice complement to BIP32, which allow users to (paper) backup\n> and share their wallet accross multiple clients easily.\n>\n> Link to BIP: https://en.bitcoin.it/wiki/BIP_0039\n>\n> Thanks for your time,\n> slush\n>\n>\n> ------------------------------------------------------------------------------\n> How ServiceNow helps IT people transform IT departments:\n> 1. Consolidate legacy IT systems to a single system of record for IT\n> 2. Standardize and globalize service processes across IT\n> 3. Implement zero-touch automation to replace manual, redundant tasks\n> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/c2704441/attachment.html>"
            },
            {
                "author": "Matthew Mitchell",
                "date": "2013-09-10T20:40:40",
                "message_text_only": "I like this, though maybe sometimes you'll get rude word combinations come out. \n\nMatthew\n\nOn 10 Sep 2013, at 17:44, slush <slush at centrum.cz> wrote:\n\n> Hi all,\n> \n> we just finalized the draft and reference implementation of BIP39. Regards to rules in BIP0001 we're asking for comments.\n> \n> The aim of the proposal is to standardize algorithm across various clients and fix some design problems of existing (but not yet standardized) Electrum mnemonic algorithm.\n> \n> BIP39 is a nice complement to BIP32, which allow users to (paper) backup and share their wallet accross multiple clients easily.\n> \n> Link to BIP: https://en.bitcoin.it/wiki/BIP_0039\n> \n> Thanks for your time,\n> slush\n> ------------------------------------------------------------------------------\n> How ServiceNow helps IT people transform IT departments:\n> 1. Consolidate legacy IT systems to a single system of record for IT\n> 2. Standardize and globalize service processes across IT\n> 3. Implement zero-touch automation to replace manual, redundant tasks\n> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/65e42e3e/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 496 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/65e42e3e/attachment.sig>"
            },
            {
                "author": "slush",
                "date": "2013-09-10T20:50:58",
                "message_text_only": "In many iterations of editing the wordlist we made our best to pick\nwords which are easy to remember, still \"neutral\". Unfortunately it's\nalmost impossible to exclude some words which may together create\nnegative co-notations.\n\nThankfully we removed all racist and religious words so I believe all\nthree authors mentioned in the BIP are safe against fundamentalist\nbitcoin users :-).\n\nslush\n\nOn 9/10/13, Matthew Mitchell <matthewmitchell at godofgod.co.uk> wrote:\n> I like this, though maybe sometimes you'll get rude word combinations come\n> out.\n>\n> Matthew"
            },
            {
                "author": "Matthew Mitchell",
                "date": "2013-09-10T21:03:39",
                "message_text_only": "Well let's hope something like \"murder black people\", \"stupid asian person\" or \"whip african slave\" doesn't come up. :-) Maybe it would have been better without the aggressive words?\n\nMatthew\n\nOn 10 Sep 2013, at 21:50, slush <slush at centrum.cz> wrote:\n\n> In many iterations of editing the wordlist we made our best to pick\n> words which are easy to remember, still \"neutral\". Unfortunately it's\n> almost impossible to exclude some words which may together create\n> negative co-notations.\n> \n> Thankfully we removed all racist and religious words so I believe all\n> three authors mentioned in the BIP are safe against fundamentalist\n> bitcoin users :-).\n> \n> slush\n> \n> On 9/10/13, Matthew Mitchell <matthewmitchell at godofgod.co.uk> wrote:\n>> I like this, though maybe sometimes you'll get rude word combinations come\n>> out.\n>> \n>> Matthew\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 496 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/c70bd147/attachment.sig>"
            },
            {
                "author": "Pavol Rusnak",
                "date": "2013-09-10T21:34:01",
                "message_text_only": "On 10/09/13 23:03, Matthew Mitchell wrote:\n> Maybe it would have been better without the aggressive words?\n\nFeel free to come up with wordlist enhancements. That's why we put\nthis BIP for discussion in the first place. Three people went through\nthe wordlist numerous number of times and as you can see it's still\nnot perfect.\n\nPlease bear in mind that for every word you remove from the list, you\nhave to come up with a good alternative that is unique and hard to\nconfuse with the others.\n\n-- \nBest Regards / S pozdravom,\n\nPavol Rusnak <stick at gk2.sk>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-10T22:08:18",
                "message_text_only": "On Tue, Sep 10, 2013 at 2:03 PM, Matthew Mitchell\n<matthewmitchell at godofgod.co.uk> wrote:\n> Well let's hope something like \"murder black people\", \"stupid asian person\" or \"whip african slave\" doesn't come up. :-) Maybe it would have been better without the aggressive words?\n\nOuch.\n\nThis sounds like something that $20 of mechanical turk time could help\nout with a lot.  Put up the 2048 words and ask people to rate them for\npotential offensiveness and threatening. :)\n\nNouns often make for fairly neutral words, though careful for place\nnames which have had political complications. E.g. gdansk vs danzig."
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-09-10T22:35:53",
                "message_text_only": "Getting OT...\n\nFor a while I've wanted to combine one of these mnemonic code generators\nwith an NLP engine to do something like output a short story as the\npassphrase, even a humorous onem with the key encoded in the story\nitself (remember the gist of the story and that's sufficient to\nreconstruct the key).\n\nAlso, obligatory link about the failures of unsanitized word lists:\n\nhttp://iam.peteashton.com/keep-calm-rape-tshirt-amazon/\n\nIt can really backfire to get one of these things wrong.\nMark\n\nOn 9/10/13 3:08 PM, Gregory Maxwell wrote:\n> On Tue, Sep 10, 2013 at 2:03 PM, Matthew Mitchell\n> <matthewmitchell at godofgod.co.uk> wrote:\n>> Well let's hope something like \"murder black people\", \"stupid asian person\" or \"whip african slave\" doesn't come up. :-) Maybe it would have been better without the aggressive words?\n> \n> Ouch.\n> \n> This sounds like something that $20 of mechanical turk time could help\n> out with a lot.  Put up the 2048 words and ask people to rate them for\n> potential offensiveness and threatening. :)\n> \n> Nouns often make for fairly neutral words, though careful for place\n> names which have had political complications. E.g. gdansk vs danzig."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-10T22:43:55",
                "message_text_only": "On Tue, Sep 10, 2013 at 3:35 PM, Mark Friedenbach <mark at monetize.io> wrote:\n> It can really backfire to get one of these things wrong.\n\nOn the subject of unexpected results, for the longest time wikipedia\nhad problems with images randomly not displaying for some users.\n\nImages were stored by their cryptographic hash. If the hash was\ndeadbeef the URL would be:\n\n/d/de/deadbeef.jpg\n\nTurns out that a lot of people are running addons that block /a/ad/  ...\n\nNot running afoul of various censorware filters should be a design\ntarget too, as insane as it seems. Simply because \"The key is\n'Tienanmen Square people monkey'\"  \"People monkey isn't working!\" is a\nhard situation to trouble shoot!"
            },
            {
                "author": "Andreas Petersson",
                "date": "2013-09-11T12:49:47",
                "message_text_only": "This an excellent idea, because i proposed the same thing previously.\n\nthese bip 39 mnemonics are IMO too hard to remember.\n\nusing NLP we could generate a gramatically correct sentence out of 128\ncompletely random bits which is possible to remember. information could\nbe encoded in the selection of words but also in the choice of the\nsyntax tree.\nif i had too much spare time this would be an excellent project.\n\n\nAm 11.09.2013 00:35, schrieb Mark Friedenbach:\n> For a while I've wanted to combine one of these mnemonic code generators\n> with an NLP engine to do something like output a short story as the\n> passphrase, even a humorous onem with the key encoded in the story\n> itself (remember the gist of the story and that's sufficient to\n> reconstruct the key)."
            },
            {
                "author": "Pavol Rusnak",
                "date": "2013-09-12T12:09:57",
                "message_text_only": "On 11/09/13 14:49, Andreas Petersson wrote:\n> using NLP we could generate a gramatically correct sentence out of 128\n> completely random bits which is possible to remember. information could\n> be encoded in the selection of words but also in the choice of the\n> syntax tree.\n\nWe were playing with that idea quite a lot. The problem was that we\nended up with much bigger wordlist and thus it had to contain more\nobscure words. Also remember that this scheme has to run on embedded\ndevices as well, so any unnecessary complexity should be avoided.\n\n-- \nBest Regards / S pozdravom,\n\nPavol Rusnak <stick at gk2.sk>"
            },
            {
                "author": "slush",
                "date": "2013-09-10T22:47:51",
                "message_text_only": "We're open to changes in the wordlist. We'll accept pull request\nreplacing potentially offensive words by another more neutral, which\nalso fits all other requirements.\n\nPutting the wordlist together is really hard job and we spent few\nsleepless nights on that. By the way, words \"murder, black, people\"\nare contained also in Electrum wordlist and nobody complained yet :-).\n\nslush\n\nOn 9/11/13, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> On Tue, Sep 10, 2013 at 2:03 PM, Matthew Mitchell\n> <matthewmitchell at godofgod.co.uk> wrote:\n>> Well let's hope something like \"murder black people\", \"stupid asian\n>> person\" or \"whip african slave\" doesn't come up. :-) Maybe it would have\n>> been better without the aggressive words?\n>\n> Ouch.\n>\n> This sounds like something that $20 of mechanical turk time could help\n> out with a lot.  Put up the 2048 words and ask people to rate them for\n> potential offensiveness and threatening. :)\n>\n> Nouns often make for fairly neutral words, though careful for place\n> names which have had political complications. E.g. gdansk vs danzig.\n>"
            },
            {
                "author": "Pavol Rusnak",
                "date": "2013-09-12T12:11:10",
                "message_text_only": "On 10/09/13 23:03, Matthew Mitchell wrote:\n> Maybe it would have been better without the aggressive words?\n\nI revisited the wordlist and replaced around 67 words that can be\nfound offensive in some context.\n\n-- \nBest Regards / S pozdravom,\n\nPavol Rusnak <stick at gk2.sk>"
            },
            {
                "author": "Matthew Mitchell",
                "date": "2013-09-12T16:02:04",
                "message_text_only": "I removed some more but I haven't added enough back in. It was taking far longer than expected so I gave up, but maybe someone else can try to add some more:\n\nhttps://github.com/MatthewLM/python-mnemonic/blob/master/mnemonic/wordlist/english.txt\n\nOn 12 Sep 2013, at 13:11, Pavol Rusnak <stick at gk2.sk> wrote:\n\n> On 10/09/13 23:03, Matthew Mitchell wrote:\n>> Maybe it would have been better without the aggressive words?\n> \n> I revisited the wordlist and replaced around 67 words that can be\n> found offensive in some context.\n> \n> -- \n> Best Regards / S pozdravom,\n> \n> Pavol Rusnak <stick at gk2.sk>\n> \n> ------------------------------------------------------------------------------\n> How ServiceNow helps IT people transform IT departments:\n> 1. Consolidate legacy IT systems to a single system of record for IT\n> 2. Standardize and globalize service processes across IT\n> 3. Implement zero-touch automation to replace manual, redundant tasks\n> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 496 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130912/b6da8674/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "BIP0039 Mnemonic code for generating deterministic keys",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matthew Mitchell",
                "Andreas M. Antonopoulos",
                "slush",
                "Andreas Petersson",
                "Pavol Rusnak",
                "Gregory Maxwell",
                "Mark Friedenbach"
            ],
            "messages_count": 14,
            "total_messages_chars_count": 12898
        }
    },
    {
        "title": "[Bitcoin-development] Python implementation of RFC 6979",
        "thread_messages": [
            {
                "author": "slush",
                "date": "2013-09-10T16:52:26",
                "message_text_only": "Hi all,\n\nyesterday I found some time and implemented RFC 6979 into python-ecdsa\nmodule.\n\nRFC 6979 proposes algorithm of calculating 'k' value for signature from\nprivate key and signed data, so the 'k' is unique, but deterministic for\nevery signature. This enabled simple unit tests of code using ECDSA\nsignatures as well as some nice use cases for blackbox testing of 3rd party\nsoftware (you can calculate on your own if some software is making valid\nsignature, because there's no randomnes involved in the process). Yes, I'm\nreferring Trezor :-).\n\nThere's my fork of python-ecdsa with RFC 6979:\nhttps://github.com/trezor/python-ecdsa/\n\nThere's pull request waiting for python-ecdsa author aproval:\nhttps://github.com/warner/python-ecdsa/pull/10\n\nAaand there's RFC 6979: tools.ietf.org/html/rfc6979\n\nThanks,\nslush\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130910/ba1dc472/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Python implementation of RFC 6979",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "slush"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 996
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin-Qt / bitcoind version 0.8.5 released",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2013-09-13T01:11:43",
                "message_text_only": "Bitcoin-Qt version 0.8.5 is now available from:\n  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n\nThis is a maintenance release to fix a critical bug;\nwe urge all users to upgrade.\n\nPlease report bugs using the issue tracker at github:\n  https://github.com/bitcoin/bitcoin/issues\n\n0.8.5 Release notes\n===================\n\nBugs fixed\n----------\n\nTransactions with version numbers larger than 0x7fffffff were\nincorrectly being relayed and included in blocks.\n\nBlocks containing transactions with version numbers larger\nthan 0x7fffffff caused the code that checks for LevelDB database\ninconsistencies at startup to erroneously report database\ncorruption and suggest that you reindex your database.\n\nThis release also contains a non-critical fix to the code that\nenforces BIP 34 (block height in the coinbase transaction).\n\n--\n\nThanks to Gregory Maxwell and Pieter Wuille for quickly\nidentifying and fixing the transaction version number bug.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/39a9f36f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin-Qt / bitcoind version 0.8.5 released",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gavin Andresen"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1143
        }
    },
    {
        "title": "[Bitcoin-development] REWARD offered for hash collisions for SHA1, SHA256, RIPEMD160 and others",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2013-09-13T06:07:58",
                "message_text_only": "Rewards at the following P2SH addresses are available for anyone able to\ndemonstrate collision attacks against a variety of cryptographic\nalgorithms. You collect your bounty by demonstrating two messages that\nare not equal in value, yet result in the same digest when hashed. These\nmessages are used in a scriptSig, which satisfies the scriptPubKey\nstoring the bountied funds, allowing you to move them to a scriptPubKey\n(Bitcoin address) of your choice.\n\nFurther donations to the bounties are welcome, particularly for SHA1 -\naddress 37k7toV1Nv4DfmQbmZ8KuZDQCYK9x5KpzP - for which an attack on a\nsingle hash value is believed to be possible at an estimated cost of\n$2.77M (4)\n\n\nDetails below; note that the \"decodescript\" RPC command is not yet\nreleased; compile bitcoind from the git repository at\nhttp://github.com/bitcoin/bitcoin\n\nSHA1:\n\n$ btc decodescript 6e879169a77ca787\n{\n    \"asm\" : \"OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_SHA1 OP_SWAP OP_SHA1 OP_EQUAL\",\n    \"type\" : \"nonstandard\",\n    \"p2sh\" : \"37k7toV1Nv4DfmQbmZ8KuZDQCYK9x5KpzP\"\n}\n\n\nSHA256:\n\n$ btc decodescript 6e879169a87ca887\n{\n    \"asm\" : \"OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_SHA256 OP_SWAP OP_SHA256 OP_EQUAL\",\n    \"type\" : \"nonstandard\",\n    \"p2sh\" : \"35Snmmy3uhaer2gTboc81ayCip4m9DT4ko\"\n}\n\n\nRIPEMD160:\n\n$ btc decodescript 6e879169a67ca687\n{\n    \"asm\" : \"OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_RIPEMD160 OP_SWAP OP_RIPEMD160 OP_EQUAL\",\n    \"type\" : \"nonstandard\",\n    \"p2sh\" : \"3KyiQEGqqdb4nqfhUzGKN6KPhXmQsLNpay\"\n}\n\n\nRIPEMD160(SHA256()):\n\n$ btc decodescript 6e879169a97ca987\n{\n    \"asm\" : \"OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_HASH160 OP_SWAP OP_HASH160 OP_EQUAL\",\n    \"type\" : \"nonstandard\",\n    \"p2sh\" : \"39VXyuoc6SXYKp9TcAhoiN1mb4ns6z3Yu6\"\n}\n\n\nSHA256(SHA256()):\n\n$ btc decodescript 6e879169aa7caa87\n{\n    \"asm\" : \"OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_HASH256 OP_SWAP OP_HASH256 OP_EQUAL\",\n    \"type\" : \"nonstandard\",\n    \"p2sh\" : \"3DUQQvz4t57Jy7jxE86kyFcNpKtURNf1VW\"\n}\n\n\nand last but not least, the absolute value function:\n\n$ btc decodescript 6e879169907c9087\n{\n    \"asm\" : \"OP_2DUP OP_EQUAL OP_NOT OP_VERIFY OP_ABS OP_SWAP OP_ABS OP_EQUAL\",\n    \"type\" : \"nonstandard\",\n    \"p2sh\" : \"3QsT6Sast6ghfsjZ9VJj9u8jkM2qTfDgHV\"\n}\n\nFor example, this pair of transactions created, and then collected, an\nabsolute value function bounty:\n\n0100000001f3194f7c2a39809d6ea5fa2db68326932df146aaab7be2f398a524bd269d0b62000000008a473044022039bc13cb7fe565ff2e14b16fbc4a9facd36b25a435d2f49de4534463212aeaee022076413c7591385cd813df37d8104dd8110745c28178cef829b5ab3e56b7c30d22014104d34775baab521d7ba2bd43997312d5f663633484ae1a4d84246866b7088297715a049e2288ae16f168809d36e2da1162f03412bf23aa5f949f235eb2e7141783ffffffff03207e7500000000001976a9149bc0bbdd3024da4d0c38ed1aecf5c68dd1d3fa1288ac0000000000000000126a6e879169907c9087086e879169907c908740420f000000000017a914fe441065b6532231de2fac563152205ec4f59c748700000000\n\n0100000001f18cda90bbbcfb031c65ceda17c82dc046c7db0b96242ba4c5b53c411d8c056e020000000c510181086e879169907c9087ffffffff01a0bb0d00000000001976a9149bc0bbdd3024da4d0c38ed1aecf5c68dd1d3fa1288ac00000000\n\nSpecifically with the scriptSig: 1 -1 6e879169907c9087\n\n\nNotes:\n\n1) We advise mining the block in which you collect your bounty yourself;\n   scriptSigs satisfying the above scriptPubKeys do not cryptographically sign\n   the transaction's outputs. If the bounty value is sufficiently large\n   other miners may find it profitable to reorganize the chain to kill\n   your block and collect the reward themselves. This is particularly\n   profitable for larger, centralized, mining pools.\n\n2) Note that the value of your SHA256, RIPEMD160, RIPEMD160(SHA256()) or\n   SHA256^2 bounty may be diminished by the act of collecting it.\n\n3) Due to limitations of the Bitcoin scripting language bounties can\n   only be collected with solutions using messages less than 521 bytes\n   in size.\n\n4) \"When Will We See Collisions for SHA-1?\" - Bruce Schneier\n   https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/922d9e33/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "REWARD offered for hash collisions for SHA1, SHA256, RIPEMD160 and others",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Todd"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 4276
        }
    },
    {
        "title": "[Bitcoin-development] Bluetooth on Android",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2013-09-13T16:21:19",
                "message_text_only": "Just a heads up,\n\nOver a year ago Andreas and I prototyped bluetooth tx submission on Android\nat a hackfest in Berlin, and it will be with support on-by-default for the\nsending side soon. That means, anyone can enable the feature in the\nsettings page and start receiving payments via Bluetooth as long as both\nsides use the Bitcoin Wallet app.\n\nThe protocol used is a set of proprietary things. Once the payment protocol\nis implemented in bitcoinj, I guess we will recast the bluetooth support to\nuse that and then submit a BIP for it, but right now it wouldn't make sense\nto do so as we know the current protocol has a limited lifespan.\n\nSend via bluetooth resolves one of the most common UX fails we see here in\nEurope: people travel to conferences or events and then want to spend their\nBitcoins whilst they're abroad, but they can't reasonably do so because\ndata roaming is so expensive.  By allowing the receiver i.e. merchant to\nreceive the tx via Bluetooth, this problem is avoided - often the receiver\nis local and will be able to broadcast the transaction on your behalf.\n\nBriefly, we use an unauthenticated RFCOMM socket with the adapter MAC\naddress in a new btcmac parameter in the bitcoin: URI qrcode. No pairing is\nrequired. MITM attacks on the connection are possible, but all that's done\nwith it is writing raw tx bytes out over the connection so MITM is limited\nto DoS.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/60254eb1/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bluetooth on Android",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1568
        }
    },
    {
        "title": "[Bitcoin-development] New Output Script Type",
        "thread_messages": [
            {
                "author": "Turkey Breast",
                "date": "2013-09-14T00:51:11",
                "message_text_only": "http://www.proofofexistence.com/\n\nand\n\nhttps://github.com/spesmilo/sx/blob/master/src/sx-embed-addr\n\nEmbedding data in the blockchain as a hash is out there and a reality.\n\nI suggest that there should be a new payment type that is unspendable to support this.\nLike you have pubkey_hash, pubkey, script_hash, ..., \"embed_hash\"\n\n\nMaybe just a script with a single 20 byte push data.\n\nAdvantages:\n\n* Optimisation possibilities (you know this can't be spent, and the script can't be processed).\n* Avoid indexing in an address database Bitcoin addresses which are currently being\nused to index data. They will never be spent, yet they will be indexed because they look\nidentical to normal Bitcoin addresses.\n\nBy separating this class of Bitcoin usage, we can improve the core Bitcoin payments system.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130913/60ceb394/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-09-14T01:00:03",
                "message_text_only": "Prefix the script with OP_RETURN. Otherwise you are still contributing\nto blockchain bloat.\n\nMark\n\nOn 9/13/13 5:51 PM, Turkey Breast wrote:\n> http://www.proofofexistence.com/\n> \n> and\n> \n> https://github.com/spesmilo/sx/blob/master/src/sx-embed-addr\n> \n> Embedding data in the blockchain as a hash is out there and a reality.\n> \n> I suggest that there should be a new payment type that is unspendable to\n> support this.\n> Like you have pubkey_hash, pubkey, script_hash, ..., \"embed_hash\"\n> \n> Maybe just a script with a single 20 byte push data.\n> \n> Advantages:\n> \n> * Optimisation possibilities (you know this can't be spent, and the\n> script can't be processed).\n> * Avoid indexing in an address database Bitcoin addresses which are\n> currently being\n> used to index data. They will never be spent, yet they will be indexed\n> because they look\n> identical to normal Bitcoin addresses.\n> \n> By separating this class of Bitcoin usage, we can improve the core\n> Bitcoin payments system.\n> \n> \n> \n> ------------------------------------------------------------------------------\n> How ServiceNow helps IT people transform IT departments:\n> 1. Consolidate legacy IT systems to a single system of record for IT\n> 2. Standardize and globalize service processes across IT\n> 3. Implement zero-touch automation to replace manual, redundant tasks\n> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-09-14T01:10:08",
                "message_text_only": "See https://github.com/bitcoin/bitcoin/pull/2738\n\nOn Fri, Sep 13, 2013 at 8:51 PM, Turkey Breast <turkeybreast at yahoo.com> wrote:\n> http://www.proofofexistence.com/\n>\n> and\n>\n> https://github.com/spesmilo/sx/blob/master/src/sx-embed-addr\n>\n> Embedding data in the blockchain as a hash is out there and a reality.\n>\n> I suggest that there should be a new payment type that is unspendable to\n> support this.\n> Like you have pubkey_hash, pubkey, script_hash, ..., \"embed_hash\"\n>\n> Maybe just a script with a single 20 byte push data.\n>\n> Advantages:\n>\n> * Optimisation possibilities (you know this can't be spent, and the script\n> can't be processed).\n> * Avoid indexing in an address database Bitcoin addresses which are\n> currently being\n> used to index data. They will never be spent, yet they will be indexed\n> because they look\n> identical to normal Bitcoin addresses.\n>\n> By separating this class of Bitcoin usage, we can improve the core Bitcoin\n> payments system.\n>\n>\n> ------------------------------------------------------------------------------\n> How ServiceNow helps IT people transform IT departments:\n> 1. Consolidate legacy IT systems to a single system of record for IT\n> 2. Standardize and globalize service processes across IT\n> 3. Implement zero-touch automation to replace manual, redundant tasks\n> http://pubads.g.doubleclick.net/gampad/clk?id=51271111&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nSenior Software Engineer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            }
        ],
        "thread_summary": {
            "title": "New Output Script Type",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Turkey Breast",
                "Mark Friedenbach"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 4307
        }
    },
    {
        "title": "[Bitcoin-development] More appropriate XDG menu category for bitcoin-qt",
        "thread_messages": [
            {
                "author": "Matt Corallo",
                "date": "2013-09-15T18:13:54",
                "message_text_only": "(Finally) got around to this, sorry for the delay. 0.8.5 has the new\ncategory and pull request is at\nhttps://github.com/bitcoin/bitcoin/pull/2999\n\nMatt\n\nOn Fri, 2013-08-02 at 12:08 -0700, Kip Warner wrote:\n> Hey list,\n> \n> Currently the bitcoin-qt application's XDG desktop integration on some\n> desktop environments requests that it be placed under the \"Office\" menu\n> category.[1] This is a rather broad category and I would like to suggest\n> that this be refined further into \"Finance\", given that XDG's menu\n> specification allows for this.[2]\n> \n> I believe the line in question in bitcoin-qt.desktop should be as\n> follows:\n> \n>         Categories=Office;Finance;\n> \n> I would have provided this trivial patch myself, but my knowledge of Git\n> is rather weak and I apologize.\n> \n> Respectfully,\n> \n> [1] <https://github.com/bitcoin/bitcoin/blob/master/contrib/debian/bitcoin-qt.desktop>\n> [2] <http://standards.freedesktop.org/menu-spec/latest/apas02.html>\n> \n> ------------------------------------------------------------------------------\n> Get your SQL database under version control now!\n> Version control is standard for application code, but databases havent \n> caught up. So what steps can you take to put your SQL databases under \n> version control? Why should you start doing it? Read more to find out.\n> http://pubads.g.doubleclick.net/gampad/clk?id=49501711&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Kip Warner",
                "date": "2013-09-15T18:28:19",
                "message_text_only": "On Sun, 2013-09-15 at 14:13 -0400, Matt Corallo wrote:\n> (Finally) got around to this, sorry for the delay. 0.8.5 has the new\n> category and pull request is at\n> https://github.com/bitcoin/bitcoin/pull/2999\n> \n> Matt\n\nThanks a lot Matt.\n\n-- \nKip Warner -- Software Engineer\nOpenPGP encrypted/signed mail preferred\nhttp://www.thevertigo.com\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 198 bytes\nDesc: This is a digitally signed message part\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130915/60fd9c5e/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "More appropriate XDG menu category for bitcoin-qt",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Kip Warner",
                "Matt Corallo"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 2232
        }
    },
    {
        "title": "[Bitcoin-development] BIP32 (HD Wallets) implementation in Ruby",
        "thread_messages": [
            {
                "author": "Micah Winkelspecht",
                "date": "2013-09-17T10:11:03",
                "message_text_only": "I've been hard at work completing an open source Ruby gem library (called\nMoneyTree) that implements Hierarchical Deterministic Bitcoin wallets\n(BIP32), and it's about ready for release. It passes all of the test\nvectors and has 100% code coverage. I've also written an extensive README\nwhich goes into depth about HD Wallets, which I'll probably be turning into\na blog post.\n\nHowever, I'm pretty new to crypto, so I wanted to run it by this group\nfirst before releasing it. If anybody has knowledge of BIP32 and can give\nat a review, I would greatly appreciate it, and would be glad to add you as\na contributor.\n\nIf you have knowledge of the BIP32 spec, but not Ruby, you can still help\nby reading over my README for conceptual accuracy.\n\nCheck out the repo here: https://github.com/wink/money-tree\n\nThanks in advance,\n\nMicah Winkelspecht\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/7ea1c863/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP32 (HD Wallets) implementation in Ruby",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Micah Winkelspecht"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1022
        }
    },
    {
        "title": "[Bitcoin-development] Faster databases than LevelDB",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2013-09-17T11:00:04",
                "message_text_only": "LevelDB is fast - very fast if you give it enough CPU time and disk seeks.\nBut it's not the last word in performance.\n\nHyperLevelDB is a forked LevelDB with some changes, mostly, finer grained\nlocking and changes to how compaction works:\n\nhttp://hyperdex.org/performance/leveldb/\n\nHowever, it comes with a caveat - one of the changes they made is to take\naway write throttling if compaction falls behind, the app itself is\nexpected to do that.\n\nSophia is a competitor to LevelDB. The website claims that in benchmarks it\ncompletely smokes LevelDB. I have not explored how it does this or tried to\nreplicate their benchmarks myself:\n\nhttp://sphia.org/index.html\nhttp://sphia.org/benchmarks.html\n\nIt's written in C and BSD licensed.\n\nAs an example of the kind of speedup they claim to be capable of, they say\nLevelDB could do 167,476 random reads per second on their SSD based\nmachine. Sophia could do 438,084 reads/sec. Random reads are of course the\nmost interesting for us because that's what UTXO lookups involve.\n\nThey also compare against HyperLevelDB, where the differences are much less\npronounced and actually HyperLevelDB appears to be able to do random writes\nfaster than Sophia.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/6f3874ce/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-09-17T11:41:30",
                "message_text_only": "Only slightly related to this...\nWhat's the reason why BerkleyDB is maintained for the wallet?\nI think it would be a good thing to get rid of the libdb4.8++-dev\ndependency that makes bitcoind harder to compile on debian and ubuntu.\nUnless, of course, there's a reason I am missing...\n\n\nOn 9/17/13, Mike Hearn <mike at plan99.net> wrote:\n> LevelDB is fast - very fast if you give it enough CPU time and disk seeks.\n> But it's not the last word in performance.\n>\n> HyperLevelDB is a forked LevelDB with some changes, mostly, finer grained\n> locking and changes to how compaction works:\n>\n> http://hyperdex.org/performance/leveldb/\n>\n> However, it comes with a caveat - one of the changes they made is to take\n> away write throttling if compaction falls behind, the app itself is\n> expected to do that.\n>\n> Sophia is a competitor to LevelDB. The website claims that in benchmarks it\n> completely smokes LevelDB. I have not explored how it does this or tried to\n> replicate their benchmarks myself:\n>\n> http://sphia.org/index.html\n> http://sphia.org/benchmarks.html\n>\n> It's written in C and BSD licensed.\n>\n> As an example of the kind of speedup they claim to be capable of, they say\n> LevelDB could do 167,476 random reads per second on their SSD based\n> machine. Sophia could do 438,084 reads/sec. Random reads are of course the\n> most interesting for us because that's what UTXO lookups involve.\n>\n> They also compare against HyperLevelDB, where the differences are much less\n> pronounced and actually HyperLevelDB appears to be able to do random writes\n> faster than Sophia.\n>\n\n\n-- \nJorge Tim\u00f3n\n\nhttp://freico.in/"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-17T13:20:13",
                "message_text_only": "On Tue, Sep 17, 2013 at 4:00 AM, Mike Hearn <mike at plan99.net> wrote:\n> LevelDB is fast - very fast if you give it enough CPU time and disk seeks.\n> But it's not the last word in performance.\n\nI'd looked at the hyperleveldb, but their performance graphs made it\nseem like it would be slower for the actual database sizes we're using\ntoday.\n\nIs there a competitor that specializes in being more robust to corruption? :("
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-09-17T17:08:54",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nAlso somewhat related, I have been looking for some time now to\nabstract out the UTXO and block databases so that a variety of\nkey/value stores could be used as a backend, configured by a command\nline parameter. In particular, it would be interesting for some server\napplications to support HyperDex, which is basically a distributed,\nfault-tolerant version of LevelDB:\n\nhttp://hyperdex.org/\n\nBy the same mechanism you could just as easily support a Sophia backend.\n\nMark\n\n\nOn 9/17/13 4:00 AM, Mike Hearn wrote:\n> LevelDB is fast - very fast if you give it enough CPU time and\n> disk seeks. But it's not the last word in performance.\n> \n> HyperLevelDB is a forked LevelDB with some changes, mostly, finer \n> grained locking and changes to how compaction works:\n> \n> http://hyperdex.org/performance/leveldb/\n> \n> However, it comes with a caveat - one of the changes they made is\n> to take away write throttling if compaction falls behind, the app\n> itself is expected to do that.\n> \n> Sophia is a competitor to LevelDB. The website claims that in\n> benchmarks it completely smokes LevelDB. I have not explored how it\n> does this or tried to replicate their benchmarks myself:\n> \n> http://sphia.org/index.html http://sphia.org/benchmarks.html\n> \n> It's written in C and BSD licensed.\n> \n> As an example of the kind of speedup they claim to be capable of,\n> they say LevelDB could do 167,476 random reads per second on their\n> SSD based machine. Sophia could do 438,084 reads/sec. Random reads\n> are of course the most interesting for us because that's what UTXO\n> lookups involve.\n> \n> They also compare against HyperLevelDB, where the differences are\n> much less pronounced and actually HyperLevelDB appears to be able\n> to do random writes faster than Sophia.\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n>\n> \nLIMITED TIME SALE - Full Year of Microsoft Training For Just $49.99!\n> 1,500+ hours of tutorials including VisualStudio 2012, Windows 8,\n> SharePoint 2013, SQL 2012, MVC 4, more. BEST VALUE: New\n> Multi-Library Power Pack includes Mobile, Cloud, Java, and UX\n> Design. Lowest price ever! Ends 9/20/13. \n> http://pubads.g.doubleclick.net/gampad/clk?id=58041151&iu=/4140/ostg.clktrk\n>\n> \n> \n> \n> _______________________________________________ Bitcoin-development\n> mailing list Bitcoin-development at lists.sourceforge.net \n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG/MacGPG2 v2.0.19 (Darwin)\nComment: GPGTools - http://gpgtools.org\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQIcBAEBAgAGBQJSOIymAAoJEAdzVfsmodw4H48QALC+ae4wRLEg3lrg9sgayfOn\nukLM079PXgEbARFPt6WxkLnNGYzEbb7IzT0uvaKH4VIW/rrORy9VqNPmliF+834h\nXygUwfAzU04K/oLyCsdWZcOugj2P8aufNeA6whLS5IijDLtHb3Ueu4ORNcfLBGqp\nKKfqPj0QHseusiLJ9f3IW+LrdM1vAoT1jryTngpQy2i+qFFDM6CN3THCq4adJvjr\nAnYlfLoJSZ0/obz/krwLv6vP1BbwxXzv5CfD0Q2bdoEV/EgWDP3Bd5tUzUCjj53/\nqMmhaACoVlarohh64s3JNSDSkHDFSbHFt65ZgNQbNY1wmSeyilQcd8FGWOF/WRzW\nZ/pl2IdhoCm3t86xSggRGivj/EVeBJlD36i7ohpDbVWFPsf6B4e5M6xSdso/2WBp\nfr55TwehCaGE+UHa0gITkE/si1txvY4gti0bLNvwFDEcZ3qsXRsz4CyLlZLMBbPX\n4aRNGyqv2yJ2AivkEyNOUugo1Q8RKEKZWfWWDecI53DHdebzKX1zu9GLJwlGJqGw\nQzm7Tdb7S8J/D6IIHf4Xq2LDhQ2fnPylmGSmtuVFEMxeDhmdbNqKSr3kqlWQf3T8\nOa8bm6kUQFJ+11jLEkVEGZJC4e42+faQBxR+CsqvVsTEezDCP1dE7D3QV8ry9YBc\nDwXt3299Q03B5LoxpWTq\n=KseH\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-17T11:45:18",
                "message_text_only": "Nobody has written code to use a better format, migrate old wallets, etc.\n\n\nOn Tue, Sep 17, 2013 at 1:41 PM, Jorge Tim\u00f3n <jtimon at monetize.io> wrote:\n\n> Only slightly related to this...\n> What's the reason why BerkleyDB is maintained for the wallet?\n> I think it would be a good thing to get rid of the libdb4.8++-dev\n> dependency that makes bitcoind harder to compile on debian and ubuntu.\n> Unless, of course, there's a reason I am missing...\n>\n>\n> On 9/17/13, Mike Hearn <mike at plan99.net> wrote:\n> > LevelDB is fast - very fast if you give it enough CPU time and disk\n> seeks.\n> > But it's not the last word in performance.\n> >\n> > HyperLevelDB is a forked LevelDB with some changes, mostly, finer grained\n> > locking and changes to how compaction works:\n> >\n> > http://hyperdex.org/performance/leveldb/\n> >\n> > However, it comes with a caveat - one of the changes they made is to take\n> > away write throttling if compaction falls behind, the app itself is\n> > expected to do that.\n> >\n> > Sophia is a competitor to LevelDB. The website claims that in benchmarks\n> it\n> > completely smokes LevelDB. I have not explored how it does this or tried\n> to\n> > replicate their benchmarks myself:\n> >\n> > http://sphia.org/index.html\n> > http://sphia.org/benchmarks.html\n> >\n> > It's written in C and BSD licensed.\n> >\n> > As an example of the kind of speedup they claim to be capable of, they\n> say\n> > LevelDB could do 167,476 random reads per second on their SSD based\n> > machine. Sophia could do 438,084 reads/sec. Random reads are of course\n> the\n> > most interesting for us because that's what UTXO lookups involve.\n> >\n> > They also compare against HyperLevelDB, where the differences are much\n> less\n> > pronounced and actually HyperLevelDB appears to be able to do random\n> writes\n> > faster than Sophia.\n> >\n>\n>\n> --\n> Jorge Tim\u00f3n\n>\n> http://freico.in/\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/1a7bfe48/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2013-09-17T13:48:28",
                "message_text_only": "On 9/17/13, Mike Hearn <mike at plan99.net> wrote:\n> Nobody has written code to use a better format, migrate old wallets, etc.\n\nACK, thanks."
            }
        ],
        "thread_summary": {
            "title": "Faster databases than LevelDB",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Jorge Tim\u00f3n",
                "Gregory Maxwell",
                "Mark Friedenbach"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 9036
        }
    },
    {
        "title": "[Bitcoin-development] the XBT",
        "thread_messages": [
            {
                "author": "Ron",
                "date": "2013-09-18T03:22:39",
                "message_text_only": "Hello, \n\n\nHas everyone seen \n\nhttp://www.coindesk.com/bitcoin-gaining-market-based-legitimacy-xbt/ \n\n\nBitcoin has its own ISO currency code.\n\nRon\n\n\n\n________________________________\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130917/cf29536e/attachment.html>"
            },
            {
                "author": "Johnathan Corgan",
                "date": "2013-09-18T09:16:58",
                "message_text_only": "On Tue, Sep 17, 2013 at 11:22 PM, Ron <rdwnj at yahoo.com> wrote:\n\n\n> Has everyone seen\n> http://www.coindesk.com/bitcoin-gaining-market-based-legitimacy-xbt/\n>\n> Bitcoin has its own ISO currency code.\n>\n\nMy understanding is that XBT is a proposed standard, and hasn't been\napproved by ISO yet.  Did that change?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130918/852229b9/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-09-18T10:48:30",
                "message_text_only": "On Wed, Sep 18, 2013 at 5:16 AM, Johnathan Corgan\n<johnathan at corganlabs.com> wrote:\n> My understanding is that XBT is a proposed standard, and hasn't been\n> approved by ISO yet.  Did that change?\n\nNo.\n\n     Jeff"
            }
        ],
        "thread_summary": {
            "title": "the XBT",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Johnathan Corgan",
                "Ron"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 1073
        }
    },
    {
        "title": "[Bitcoin-development] Near-block broadcasts for proof of tx propagation",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2013-09-23T13:34:19",
                "message_text_only": "Currently there is no way for a node, SPV or otherwise, to know if a\ntransaction has been broadcast succesfully to any amount of hashing\npower. This makes it difficult to determine if a transaction failed to\neither propagate across the network, or failed to pay sufficient fees to\nbe worthy of inclusion in a block.\n\nBroadcasting blocks that almost, but not quite, met the difficulty\ntarget provides clients with fast and honest proof about the hashing\npower mining their transaction. This proof is inherently honest because\nmaking a \"near-block\" is an expensive operation; additionally given at\nleast one honest peer a node can detect near-block censorship by any\nother peer statistically.\n\n\nLimitations of fee estimation\n=============================\n\nMempool-based fee estimation is limited by the ability of peers to lie,\nparticularly to SPV peers. Miners wishing to increase fees can conduct\nsybil attacks where they lie to peers about the average fees required to\nget transactions into blocks. This problem is particularly dangerous\ngiven the lack of incentives to run full-nodes in the first place; the\nnumber of full nodes has continued to drop over time as users switch to\nSPV clients and web-wallets; it would be unfortunate if users started\nswitching to web-wallets because they could offer better fee estimation.\nIn any case creating monetary incentives to sybil the network is very\nundesirable.\n\nOut-of-band fee payment has the opposite effect of making fees in blocks\nappear lower than actually required to get them mined; transactions will\nget stuck unless an initial bad estimate can be replaced with a higher\npaying one. The payment protocol makes out-of-band fee payment\nattractive in the case where you want to accept a payment from a\ncustomer and pay the fee for them; child-pays-for-parent wastes money\npaying for additional blockchain space.\n\nReplacement-based schemes allow for recovery from stuck too-low\ntransactions, but they are still succeptable to sybil attacks. (don't\nrelay the transaction to other pools)\n\n\nMiner incentives to create near blocks\n======================================\n\nWhy would a miner want to go to the trouble of broadcasting a near block\nanyway? Wouldn't it be better if users didn't get feedback about fees\nand over-paid instead?\n\nIf you are a large miner as a % of total profit efforts such as sybiling\nthe network have a greater rate of return; if you are a small miner the\ngreater income you receive from deception is outweighed by the cost.\nThus you have an incentive to provide mechanisms to force larger miners\nto behave honestly.\n\nSecondly near-blocks could help \"pre-propagate\" transactions that will\nbe mined in the near future, thus reducing block propagation times and\nhence orphan rates. (the pre-propagation can use the proof-of-work to\nrate-limit transactions that nodes would otherwise not forward, also\nallowing non-full nodes to safely participate in relaying) Again, this\nis something that most interests smaller miners with less peak bandwidth\nrather than large pools.\n\nIn the event of a fork near blocks can be used to more quickly determine\nwhich side of the fork has the majority of hashing power, allowing the\nminority side to switch sooner. Again the reduction in orphan rates\nbenefits smaller miners more than larger ones. (though note how only\nnear-block headers are required for this application)\n\n\nContents of a near block\n========================\n\nFrom the miner incentives we see that near blocks should contain two\ntypes of information:\n\n1) Transactions known to the miner, but not included in the current\nblock. This information allows nodes to determine if a transaction they\nhave broadcast was succesfully propagated to the majority of hashing\npower regardless of whether or not it is being mined, allowing nodes to\navoid sybil attacks attempting to censor the transactions they make.\n\nThis information needs to be committed separately in the coinbase tx.\nThe incentive for miners here is to ensure that no-one can gain an\nunfair advantage with a sybil attack.\n\n2) Transactions the miner is attempting to mine, proved by the merkle\nroot. The incentives here are allowing non-full nodes to safely\npropagate transactions, improving block propagation, as well as further\npreventing deception by larger miners.\n\nTransaction mutability complicates both #1 and #2. In the case of #1\nnodes can exploit mutability while relaying transactions, although at\nleast relaying mutability is increasingly difficult; the incentives are\nsuch that the miners themselves have no reason to lie about the txids\nthey know of. For #2 the incentives are all harmed by mutating\ntransactions, so again we can expect miners to either leave transactions\nas they are, or simply not publish near blocks at all.\n\nBandwidth usage is reasonable: the average transaction from the last\n10,000 blocks is 450 bytes. Both data sets can be delta compressed\nagainst previously sent txids. Even a naive implementation that sends\nfull txids would result in near blocks that are about 1/10th of the size\nof full blocks. (32-byte txids, and 1/4 of that amount in the \"seen but\nnot mined\" list) The machinery for near blocks can also be easily\nre-used to implement improved full-block relaying with transactions in\nblocks being referenced to by txid.\n\n\nReplacement with near blocks\n============================\n\nAn node making a transaction can do the following:\n\n1. Broadcast the transaction with an initial estimated fee. (the txid is\nadded to the bloom filter here) The estimate can safely be be on the low\nside.\n\n2. Wait\n\n3. If transaction still hasn't appeared in either a block or near block,\nrebroadcast with a higher fee, either by replace-by-fee method, or\nzero-conf safe method of adding an additional txin+txout.\n\nPeers practicing censorship of either transactions or near blocks can be\ndetected statisticly by preferring to connect to peers that provide more\nnear blocks. Note how a short 80-byte near block header is sufficient\ninformation to detect a peer withholding near blocks, and that header\ncan be relayed by SPV peers safely. If the transaction fails to get into\nthe \"seen-but-not-mined\" list, a node can use that failure as an\nindication to find other peers to relay too.\n\nCurrently SPV clients are vulnerable to their peers withholding valid\nbloom filter matches; future UTXO commitments can be designed to make\nthis impossible, and spot-check auditing can detect it now.\n\n\nOut-of-band fee payment with near blocks\n========================================\n\nA purchaser of out-of-band fee payment services can use near-blocks to\ncheck that their fee offer has been accepted and miners are mining their\ntransaction. This would be particularly useful for a decentralized\nsystem where offers backed by fidelity bonds are made; it would be good\nto encourage such systems over arrangements between purchasers and large\npools.\n\n\nSecurity\n========\n\nThere is a serious problem however with proof-of-propagation and\nproof-of-mining: they let miners cheat. The proof that a given\ntransaction is being mined can be used to mine the transaction yourself,\nwithout having to maintain a copy of the UTXO set or indeed do any\nvalidation at all. Having said that this risk already exists due to\nP2Pool, which forwards transactions along with shares already.\n\nIn any case, it's yet another argument that we need miners to prove they\npossess the UTXO set.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130923/56f02ac6/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Near-block broadcasts for proof of tx propagation",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Peter Todd"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 7709
        }
    },
    {
        "title": "[Bitcoin-development] Payment Protocol: BIP 70, 71, 72",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2013-09-24T13:52:24",
                "message_text_only": "BTW, on the \"make qrcodes more scannable\" front -- is it too late to change\nBIP 72 so the new param is just \"r\" instead of \"request\"? Every byte helps\nwhen it comes to qrcodes ...\n\n\nOn Tue, Aug 20, 2013 at 12:05 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> I think the confidence of the tx is not really the users concern anyway.\n> They wrote it so they know it's valid. If the merchant disagrees for some\n> reason then the user can find out, out of band when the goods/services are\n> not delivered.\n>\n>\n> On Tue, Aug 20, 2013 at 1:19 AM, Gavin Andresen <gavinandresen at gmail.com>wrote:\n>\n>> On Tue, Aug 20, 2013 at 8:15 AM, Andreas Petersson <andreas at petersson.at>wrote:\n>>\n>>> I was just reviewing the integration work to integrate the Payment\n>>> Protocol into our products. Is there any notion of a standardized\n>>> invoice serialisation? If i pay for two Burgers and one Club Mate, how\n>>> would my Bitcoin Wallet be able to know that?\n>>\n>>\n>> No. There are XML-based (shudder) standards for electronic invoicing that\n>> include all sorts of bells and whistles; the PaymentDetails message could\n>> easily encapsulate one of them in an 'invoice' field extension. Or we could\n>> reinvent the wheel and come up with our own, but I'd rather use an existing\n>> standard (or maybe a subset of an existing standard).\n>>\n>> I didn't want to wade into that swamp for the 1.0 version of the payment\n>> protocol.\n>>\n>>\n>>> Right now, i would simply\n>>> put that into \"memo\" and come up with my own serialisation mechanism.\n>>>\n>>\n>> \"Two Burgers, one Club Mate\" seems pretty user-friendly.\n>>\n>>  Second, is there a way to communicate acceptance levels of TX\n>>> (unconfirmed, 1 conf, 6 conf) maybe using several PaymentACK?\n>>>\n>>\n>> No, because the Payment->PaymentACK communication round-trip is done in\n>> one, non-persistent http request-response round-trip.\n>>\n>> I don't think we want to allow merchants to push messages to the wallet\n>> (wouldn't take long for merchants to use the opportunity to push annoying\n>> advertising at me, I think), and I don't think we want wallets to poll the\n>> merchant. Although maybe a payment protocol version 2.0 feature could be a\n>> PaymentACK extension that says \"ask me how the transaction is going at THIS\n>> URL in THIS many minutes.\"\n>>\n>> --\n>> --\n>> Gavin Andresen\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Introducing Performance Central, a new site from SourceForge and\n>> AppDynamics. Performance Central is your source for news, insights,\n>> analysis and resources for efficient Application Performance Management.\n>> Visit us today!\n>>\n>> http://pubads.g.doubleclick.net/gampad/clk?id=48897511&iu=/4140/ostg.clktrk\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130924/d1998d43/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2013-09-24T23:35:07",
                "message_text_only": "On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> BTW, on the \"make qrcodes more scannable\" front -- is it too late to\n> change BIP 72 so the new param is just \"r\" instead of \"request\"? Every byte\n> helps when it comes to qrcodes ...\n>\n\nNot too late, assuming there are no objections. Smaller QR codes is a very\ngood reason to change it.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/d18a015a/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-25T09:27:03",
                "message_text_only": "We could also say that if protocol part (https://) is missing, it's implied\nautomatically. So just:\n\nbitcoin:1abc........?r=bob.com/r/aZgR\n\nI think that's about as small as possible without re-using the pubkey as a\ntoken in the url.\n\n\nOn Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <gavinandresen at gmail.com>wrote:\n\n> On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net> wrote:\n>\n>> BTW, on the \"make qrcodes more scannable\" front -- is it too late to\n>> change BIP 72 so the new param is just \"r\" instead of \"request\"? Every byte\n>> helps when it comes to qrcodes ...\n>>\n>\n> Not too late, assuming there are no objections. Smaller QR codes is a very\n> good reason to change it.\n>\n> --\n> --\n> Gavin Andresen\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/342acca1/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2013-09-25T10:28:53",
                "message_text_only": "While it's good to save space, I'm at the moment not convinced that\ntaking a de-route via an URL is a good idea to begin with.\n\nThe main problem is trust. If you scan a QR code from a foreign phone,\nyou trust that that phone is owned by the one you want to send money to.\nBy adding the HTTP request that trust is voided.\n\nAs soon as there is a BIP70 implementation, I will begin playing with\nputting the payment request directly into the QR code.\n\n\nOn 09/25/2013 11:27 AM, Mike Hearn wrote:\n> We could also say that if protocol part (https://) is missing, it's\n> implied automatically. So just:\n> \n> bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>\n> \n> I think that's about as small as possible without re-using the pubkey as\n> a token in the url.\n> \n> \n> On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <gavinandresen at gmail.com\n> <mailto:gavinandresen at gmail.com>> wrote:\n> \n>     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net\n>     <mailto:mike at plan99.net>> wrote:\n> \n>         BTW, on the \"make qrcodes more scannable\" front -- is it too\n>         late to change BIP 72 so the new param is just \"r\" instead of\n>         \"request\"? Every byte helps when it comes to qrcodes ...\n> \n> \n>     Not too late, assuming there are no objections. Smaller QR codes is\n>     a very good reason to change it.\n>      \n>     -- \n>     --\n>     Gavin Andresen\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from \n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-25T11:15:17",
                "message_text_only": "It won't fit. But I don't see the logic. A URI contains instructions for\nmaking a payment. If that instruction is \"pay to this address\" or \"download\nthis file and do what you find there\", it's no different unless there's\npotential for a MITM attack. If the request URL is HTTPS or a secured\nBluetooth connection then there's no such possibility.\n\n\n\n\nOn Wed, Sep 25, 2013 at 12:28 PM, Andreas Schildbach\n<andreas at schildbach.de>wrote:\n\n> While it's good to save space, I'm at the moment not convinced that\n> taking a de-route via an URL is a good idea to begin with.\n>\n> The main problem is trust. If you scan a QR code from a foreign phone,\n> you trust that that phone is owned by the one you want to send money to.\n> By adding the HTTP request that trust is voided.\n>\n> As soon as there is a BIP70 implementation, I will begin playing with\n> putting the payment request directly into the QR code.\n>\n>\n> On 09/25/2013 11:27 AM, Mike Hearn wrote:\n> > We could also say that if protocol part (https://) is missing, it's\n> > implied automatically. So just:\n> >\n> > bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>\n> >\n> > I think that's about as small as possible without re-using the pubkey as\n> > a token in the url.\n> >\n> >\n> > On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <gavinandresen at gmail.com\n> > <mailto:gavinandresen at gmail.com>> wrote:\n> >\n> >     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net\n> >     <mailto:mike at plan99.net>> wrote:\n> >\n> >         BTW, on the \"make qrcodes more scannable\" front -- is it too\n> >         late to change BIP 72 so the new param is just \"r\" instead of\n> >         \"request\"? Every byte helps when it comes to qrcodes ...\n> >\n> >\n> >     Not too late, assuming there are no objections. Smaller QR codes is\n> >     a very good reason to change it.\n> >\n> >     --\n> >     --\n> >     Gavin Andresen\n> >\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > October Webinars: Code for Performance\n> > Free Intel webinars can help you accelerate application performance.\n> > Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> > the latest Intel processors and coprocessors. See abstracts and register\n> >\n> >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> >\n> >\n> >\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/a27c210f/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2013-09-25T11:33:09",
                "message_text_only": "On 09/25/2013 01:15 PM, Mike Hearn wrote:\n\n> It won't fit.\n\nWhy do you think that? Of course, I would skip the certificate, as its\nunnecessary if you see your partner in person.\n\n> But I don't see the logic. A URI contains instructions for\n> making a payment. If that instruction is \"pay to this address\" or\n> \"download this file and do what you find there\", it's no different\n> unless there's potential for a MITM attack. If the request URL is HTTPS\n> or a secured Bluetooth connection then there's no such possibility.\n\nHTTPS trust is utterly broken unless you fix it by adding the\ncertificate or a fingerprint to the QR code. Bluetooth is not present in\nevery case, e.g. QR codes scanned from the web. (Also, we currently\ndon't have a concept of allowing both. The receiver forces you to either\nuse BT or HTTP.)\n\nSo yes, MITM is what I'm worrying about. When I'm scanning a QR code\nfrom a phone, you don't have that problem (unless sophisticated optical\nattacks emerge). Also, the HTTP request can fail and/or be slow, making\nthe whole payment process more difficult than necessary.\n\n\n> On Wed, Sep 25, 2013 at 12:28 PM, Andreas Schildbach\n> <andreas at schildbach.de <mailto:andreas at schildbach.de>> wrote:\n> \n>     While it's good to save space, I'm at the moment not convinced that\n>     taking a de-route via an URL is a good idea to begin with.\n> \n>     The main problem is trust. If you scan a QR code from a foreign phone,\n>     you trust that that phone is owned by the one you want to send money to.\n>     By adding the HTTP request that trust is voided.\n> \n>     As soon as there is a BIP70 implementation, I will begin playing with\n>     putting the payment request directly into the QR code.\n> \n> \n>     On 09/25/2013 11:27 AM, Mike Hearn wrote:\n>     > We could also say that if protocol part (https://) is missing, it's\n>     > implied automatically. So just:\n>     >\n>     > bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>\n>     <http://bob.com/r/aZgR>\n>     >\n>     > I think that's about as small as possible without re-using the\n>     pubkey as\n>     > a token in the url.\n>     >\n>     >\n>     > On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen\n>     <gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>\n>     > <mailto:gavinandresen at gmail.com <mailto:gavinandresen at gmail.com>>>\n>     wrote:\n>     >\n>     >     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net\n>     <mailto:mike at plan99.net>\n>     >     <mailto:mike at plan99.net <mailto:mike at plan99.net>>> wrote:\n>     >\n>     >         BTW, on the \"make qrcodes more scannable\" front -- is it too\n>     >         late to change BIP 72 so the new param is just \"r\" instead of\n>     >         \"request\"? Every byte helps when it comes to qrcodes ...\n>     >\n>     >\n>     >     Not too late, assuming there are no objections. Smaller QR\n>     codes is\n>     >     a very good reason to change it.\n>     >\n>     >     --\n>     >     --\n>     >     Gavin Andresen\n>     >\n>     >\n>     >\n>     >\n>     >\n>     ------------------------------------------------------------------------------\n>     > October Webinars: Code for Performance\n>     > Free Intel webinars can help you accelerate application performance.\n>     > Explore tips for MPI, OpenMP, advanced profiling, and more. Get\n>     the most from\n>     > the latest Intel processors and coprocessors. See abstracts and\n>     register >\n>     >\n>     http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>     >\n>     >\n>     >\n>     > _______________________________________________\n>     > Bitcoin-development mailing list\n>     > Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>     >\n> \n> \n> \n>     ------------------------------------------------------------------------------\n>     October Webinars: Code for Performance\n>     Free Intel webinars can help you accelerate application performance.\n>     Explore tips for MPI, OpenMP, advanced profiling, and more. Get the\n>     most from\n>     the latest Intel processors and coprocessors. See abstracts and\n>     register >\n>     http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from \n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-25T11:45:02",
                "message_text_only": "On Wed, Sep 25, 2013 at 1:33 PM, Andreas Schildbach\n<andreas at schildbach.de>wrote:\n\n> Why do you think that? Of course, I would skip the certificate, as its\n> unnecessary if you see your partner in person.\n>\n\nOK, it might fit if you don't use any of the features the protocol provides\n:) You can try it here:\n\nhttps://bitcoincore.org/~gavin/createpaymentrequest.php\n\n\n> HTTPS trust is utterly broken unless you fix it by adding the\n>\ncertificate or a fingerprint to the QR code.\n>\n\nIt's not \"utterly broken\", that's over-dramatic. It's just the best that\ncan be done with todays technology. I wrote about the SSL PKI and how it's\nbeing upgraded here:\n\nhttps://bitcointalk.org/index.php?topic=300809.0\n\nIf you're thinking about governments and so on subverting CA's, then there\nis a plan for handling that (outside the Bitcoin world) called certificate\ntransparency which is being implemented now.\n\nNow when you are getting a QR code from the web, it's already being served\nover HTTPS. So if you're up against an attacker who can break a CA in order\nto steal your money, then you already lose, the QRcode itself as MITMd.\n\nIn the Bluetooth case we might have to keep the address around and use it\nto do ECDHE or something like that. The current BT support doesn't need\nthat because it's just blasting out a tx, the entire protocol is write\nonly. Once it's reading data as well then it'll need a custom security\nlayer.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/4bbd61a3/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2013-09-25T11:59:52",
                "message_text_only": "On 09/25/2013 01:45 PM, Mike Hearn wrote:\n\n> OK, it might fit if you don't use any of the features the protocol\n> provides :)\n\nNow you're dver-dramaticing (-:\n\nI'm just skipping one feature which I think is useless for QR codes\nscanned in person.\n\n> You can try it here:\n\nThanks. A typical request would be around 60 bytes, which should produce\nan URL with around 100 chars. That should be fine for scanning, but I\nwill experiment.\n\n> If you're thinking about governments and so on subverting CA's, then\n> there is a plan for handling that (outside the Bitcoin world) called\n> certificate transparency which is being implemented now.\n\nGood to hear. Let's see if it gets momentum.\n\n> Now when you are getting a QR code from the web, it's already being\n> served over HTTPS. So if you're up against an attacker who can break a\n> CA in order to steal your money, then you already lose, the QRcode\n> itself as MITMd.\n\nSure. I was talking about QR codes scanned in person.\n\n> In the Bluetooth case we might have to keep the address around and use\n> it to do ECDHE or something like that.\n\nYeah, will look at that as soon as we're implementing the payment\nprotocol fully."
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-09-25T14:31:19",
                "message_text_only": "BitPay experimented with QR codes in low light, restaurant and other\nconditions.  QR codes become difficult to use even at 100 chars.\n\nOn the merchant side, we prefer a short URL that speaks payment\nprotocol if visited via bitcoin client, but will gracefully work if\nscanned by a phone with zero bitcoin support -- you will simply be\nredirected to a BitPay invoice page for a normal browser.\n\n\n\nOn Wed, Sep 25, 2013 at 7:59 AM, Andreas Schildbach\n<andreas at schildbach.de> wrote:\n> On 09/25/2013 01:45 PM, Mike Hearn wrote:\n>\n>> OK, it might fit if you don't use any of the features the protocol\n>> provides :)\n>\n> Now you're dver-dramaticing (-:\n>\n> I'm just skipping one feature which I think is useless for QR codes\n> scanned in person.\n>\n>> You can try it here:\n>\n> Thanks. A typical request would be around 60 bytes, which should produce\n> an URL with around 100 chars. That should be fine for scanning, but I\n> will experiment.\n>\n>> If you're thinking about governments and so on subverting CA's, then\n>> there is a plan for handling that (outside the Bitcoin world) called\n>> certificate transparency which is being implemented now.\n>\n> Good to hear. Let's see if it gets momentum.\n>\n>> Now when you are getting a QR code from the web, it's already being\n>> served over HTTPS. So if you're up against an attacker who can break a\n>> CA in order to steal your money, then you already lose, the QRcode\n>> itself as MITMd.\n>\n> Sure. I was talking about QR codes scanned in person.\n>\n>> In the Bluetooth case we might have to keep the address around and use\n>> it to do ECDHE or something like that.\n>\n> Yeah, will look at that as soon as we're implementing the payment\n> protocol fully.\n>\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n-- \nJeff Garzik\nSenior Software Engineer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-25T14:38:58",
                "message_text_only": "Low light shouldn't be an issue for QRcodes generated by phones. They have\nbacklit screens that should always be bright enough. I can see how it might\nbe an issue for printed codes.\n\nIf your phone has no Bitcoin app installed then being redirected to an\ninvoice page is pretty useless, you still won't be able to pay the bill no\nmatter what (where do you get the money from?). If they are just raw HTTP\nURLs then it means the effect of scanning a QRcode with a standalone\nscanner app is different to scanning it inside the wallet, which is unlike\nall other uses of QRcodes I know of. So I'm not really convinced by that UX\nyet. Perhaps we can thrash it out in Amsterdam. Right now I'm thinking\nQRcodes should always contain bitcoin URIs.\n\n\nOn Wed, Sep 25, 2013 at 4:31 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> BitPay experimented with QR codes in low light, restaurant and other\n> conditions.  QR codes become difficult to use even at 100 chars.\n>\n> On the merchant side, we prefer a short URL that speaks payment\n> protocol if visited via bitcoin client, but will gracefully work if\n> scanned by a phone with zero bitcoin support -- you will simply be\n> redirected to a BitPay invoice page for a normal browser.\n>\n>\n>\n> On Wed, Sep 25, 2013 at 7:59 AM, Andreas Schildbach\n> <andreas at schildbach.de> wrote:\n> > On 09/25/2013 01:45 PM, Mike Hearn wrote:\n> >\n> >> OK, it might fit if you don't use any of the features the protocol\n> >> provides :)\n> >\n> > Now you're dver-dramaticing (-:\n> >\n> > I'm just skipping one feature which I think is useless for QR codes\n> > scanned in person.\n> >\n> >> You can try it here:\n> >\n> > Thanks. A typical request would be around 60 bytes, which should produce\n> > an URL with around 100 chars. That should be fine for scanning, but I\n> > will experiment.\n> >\n> >> If you're thinking about governments and so on subverting CA's, then\n> >> there is a plan for handling that (outside the Bitcoin world) called\n> >> certificate transparency which is being implemented now.\n> >\n> > Good to hear. Let's see if it gets momentum.\n> >\n> >> Now when you are getting a QR code from the web, it's already being\n> >> served over HTTPS. So if you're up against an attacker who can break a\n> >> CA in order to steal your money, then you already lose, the QRcode\n> >> itself as MITMd.\n> >\n> > Sure. I was talking about QR codes scanned in person.\n> >\n> >> In the Bluetooth case we might have to keep the address around and use\n> >> it to do ECDHE or something like that.\n> >\n> > Yeah, will look at that as soon as we're implementing the payment\n> > protocol fully.\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > October Webinars: Code for Performance\n> > Free Intel webinars can help you accelerate application performance.\n> > Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> > the latest Intel processors and coprocessors. See abstracts and register\n> >\n> >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> --\n> Jeff Garzik\n> Senior Software Engineer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/f9ad5c64/attachment.html>"
            },
            {
                "author": "Melvin Carvalho",
                "date": "2013-09-25T11:35:48",
                "message_text_only": "On 25 September 2013 13:15, Mike Hearn <mike at plan99.net> wrote:\n\n> It won't fit. But I don't see the logic. A URI contains instructions for\n> making a payment. If that instruction is \"pay to this address\" or \"download\n> this file and do what you find there\", it's no different unless there's\n> potential for a MITM attack. If the request URL is HTTPS or a secured\n> Bluetooth connection then there's no such possibility.\n>\n\nIt depends on the attacker.  I think a large entity such as a govt or big\nto medium size corporation *may* be able to MITM https, of course the\nincentive to do so is probably not there ...\n\n\n>\n>\n>\n>\n> On Wed, Sep 25, 2013 at 12:28 PM, Andreas Schildbach <\n> andreas at schildbach.de> wrote:\n>\n>> While it's good to save space, I'm at the moment not convinced that\n>> taking a de-route via an URL is a good idea to begin with.\n>>\n>> The main problem is trust. If you scan a QR code from a foreign phone,\n>> you trust that that phone is owned by the one you want to send money to.\n>> By adding the HTTP request that trust is voided.\n>>\n>> As soon as there is a BIP70 implementation, I will begin playing with\n>> putting the payment request directly into the QR code.\n>>\n>>\n>> On 09/25/2013 11:27 AM, Mike Hearn wrote:\n>> > We could also say that if protocol part (https://) is missing, it's\n>> > implied automatically. So just:\n>> >\n>> > bitcoin:1abc........?r=bob.com/r/aZgR <http://bob.com/r/aZgR>\n>> >\n>> > I think that's about as small as possible without re-using the pubkey as\n>> > a token in the url.\n>> >\n>> >\n>> > On Wed, Sep 25, 2013 at 1:35 AM, Gavin Andresen <\n>> gavinandresen at gmail.com\n>> > <mailto:gavinandresen at gmail.com>> wrote:\n>> >\n>> >     On Tue, Sep 24, 2013 at 11:52 PM, Mike Hearn <mike at plan99.net\n>> >     <mailto:mike at plan99.net>> wrote:\n>> >\n>> >         BTW, on the \"make qrcodes more scannable\" front -- is it too\n>> >         late to change BIP 72 so the new param is just \"r\" instead of\n>> >         \"request\"? Every byte helps when it comes to qrcodes ...\n>> >\n>> >\n>> >     Not too late, assuming there are no objections. Smaller QR codes is\n>> >     a very good reason to change it.\n>> >\n>> >     --\n>> >     --\n>> >     Gavin Andresen\n>> >\n>> >\n>> >\n>> >\n>> >\n>> ------------------------------------------------------------------------------\n>> > October Webinars: Code for Performance\n>> > Free Intel webinars can help you accelerate application performance.\n>> > Explore tips for MPI, OpenMP, advanced profiling, and more. Get the\n>> most from\n>> > the latest Intel processors and coprocessors. See abstracts and\n>> register >\n>> >\n>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>> >\n>> >\n>> >\n>> > _______________________________________________\n>> > Bitcoin-development mailing list\n>> > Bitcoin-development at lists.sourceforge.net\n>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> >\n>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> October Webinars: Code for Performance\n>> Free Intel webinars can help you accelerate application performance.\n>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n>> from\n>> the latest Intel processors and coprocessors. See abstracts and register >\n>>\n>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130925/55e2d8b1/attachment.html>"
            },
            {
                "author": "The Doctor",
                "date": "2013-09-25T16:12:45",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 09/25/2013 07:35 AM, Melvin Carvalho wrote:\n\n> It depends on the attacker.  I think a large entity such as a govt\n> or big to medium size corporation *may* be able to MITM https, of\n> course the incentive to do so is probably not there ...\n\nDLP (data loss prevention) products usually have MITM capability, to\nmake sure that proprietary information isn't being exfiltrated.  Also,\nsome companies have full packet capture policies.  The technology is\nout there and people buy and use it.  Whether or not they're going to\ncare about Bitcoin URIs in the short term, I don't know.\n\nSome of the companies documented here have such products:\n\nhttp://bluecabinet.info/wiki/Blue_cabinet#List_of_companies\n\nYou are correct in that the incentive to carry out MITM attacks in\nthis use case may not be there.  However, detecting transactions may\nbe more useful to an attacker than meddling with them.\n\n- -- \nThe Doctor [412/724/301/703] [ZS]\nDeveloper, Project Byzantium: http://project-byzantium.org/\n\nPGP: 0x807B17C1 / 7960 1CDC 85C9 0B63 8D9F  DD89 3BD8 FF2B 807B 17C1\nWWW: https://drwho.virtadpt.net/\n\n\"Shiloh?  Is your name Shiloh?  Can I talk to you?\"\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.20 (GNU/Linux)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niEYEARECAAYFAlJDC30ACgkQO9j/K4B7F8FungCgyQtkyiQIekhlv1/Nqdd/JAIV\n3EgAoKW8wTOI11lEq0ieOsRiQmnkM9w6\n=W50W\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Peter Todd",
                "date": "2013-09-26T06:37:19",
                "message_text_only": "On Wed, Sep 25, 2013 at 01:35:48PM +0200, Melvin Carvalho wrote:\n> On 25 September 2013 13:15, Mike Hearn <mike at plan99.net> wrote:\n> \n> > It won't fit. But I don't see the logic. A URI contains instructions for\n> > making a payment. If that instruction is \"pay to this address\" or \"download\n> > this file and do what you find there\", it's no different unless there's\n> > potential for a MITM attack. If the request URL is HTTPS or a secured\n> > Bluetooth connection then there's no such possibility.\n> >\n> \n> It depends on the attacker.  I think a large entity such as a govt or big\n> to medium size corporation *may* be able to MITM https, of course the\n> incentive to do so is probably not there ...\n\n...until the Bitcoin payment protocol showed up and let anyone with the\nability to MITM https turn that ability into untraceable cash.\n\nI won't be at all surprised if one of the most valuable things to come\nout of the payment protocol using the SSL PKI infrastructure is to give\nus a good understanding of exactly how it's broken, and to give everyone\ninvolved good reasons to fix it.\n\nEven if the flaws of SSL PKI were exploited as a way to harm bitcoin by\ngovernments and other large players - and SSL PKI remained unfixed - I'd\nmuch rather have that solid evidence that it was broken than not.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130926/e942454d/attachment.sig>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2013-09-25T14:26:48",
                "message_text_only": "On Wed, Sep 25, 2013 at 6:28 AM, Andreas Schildbach\n<andreas at schildbach.de> wrote:\n> As soon as there is a BIP70 implementation, I will begin playing with\n> putting the payment request directly into the QR code.\n\nYou may test with Bitcoin-QT right now.\n\n-- \nJeff Garzik\nSenior Software Engineer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            }
        ],
        "thread_summary": {
            "title": "Payment Protocol: BIP 70, 71, 72",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Andreas Schildbach",
                "Mike Hearn",
                "Peter Todd",
                "Gavin Andresen",
                "Melvin Carvalho",
                "The Doctor"
            ],
            "messages_count": 14,
            "total_messages_chars_count": 32465
        }
    },
    {
        "title": "[Bitcoin-development] smart contracts -- possible use case? yes or no?",
        "thread_messages": [
            {
                "author": "Melvin Carvalho",
                "date": "2013-09-27T23:41:45",
                "message_text_only": "We all love bitcoin's ability to transfer value in real time across borders.\n\nBut the regulatory environment in many geographical regions in uncertain.\nDo we need to pay capital gains?   Do we need to pay a sales taxs etc. etc.\n\nAt this point bitcoin is small enough for this to not be a huge issue, but\none day that may change (maybe we hope!).\n\nSo my idea is to voluntarily pre empt legislation by giving donations to\ngovt (aka taxation) for bitcoin service providers.\n\nHowever, there is something of a problem with voluntary donations.  Most\npeople are not satisfied with the way they are spent.  In the UK a recent\nsurvey said that only 18% of people thought that tax money was wisely\nspent.  This is bad for govt., bad for people, and bad for the trusted\nrelationship.\n\nCan we fix it?  Maybe we smart contract and voluntary donations it's\npossible!\n\nSo let's say I run a business and I make 1 million euros.  I wish to donate\n10% of my profits to society.  But let's say I dont want that money to go\nto wars of aggression, but rather, to the fire de[department.\n\nSo we set up a smart contract that is only \"cashable\" if the money goes to\nthe right place (verified by an oracle).\n\nAt this point everyone wins.  The business person is happy to make a\ncontribution.  The govt. is happy that it gets more revenue.  The fire\ndept. is happy that it has revenue to do its work.  And everything has gone\nto the right place in a kind of democratic way.\n\nOver time if it takes off, this could provide revenue for many essential\nservices that are needed by people, in a way that allows more democratic\nfreedom of choice.\n\nSo my question is whether it may be possible to use smart contracts to\nachieve a better democracy that is good for people, good for govt, and good\nfor innovation?  My hope is that the answer is ...\n\n\"Yes We Can\"\n\n:)\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130928/45394d5b/attachment.html>"
            },
            {
                "author": "rob.golding at astutium.com",
                "date": "2013-09-28T20:15:34",
                "message_text_only": "> But the regulatory environment in many geographical regions in\n> uncertain. \u00a0 Do we need to pay capital gains?\u00a0\u00a0 Do we need to pay a\n> sales taxs etc. etc.\n\nIn most regions it's not only 'simple' but trivial - BTC is just \n'another currency' and accounted for exactly the same way - it doens't \nmatter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig \nDung, you still have a GBP tax issue ...\n\n> So my idea is to voluntarily pre empt legislation by giving donations\n> to govt (aka taxation) for bitcoin service providers.\u00a0\n\nYou want to volunteer to pay tax ? I'd suggest stronger medication ...\n\n> However, there is something of a problem with voluntary donations.\u00a0\n> Most people are not satisfied with the way they are spent.\n\n80% of 'donations' end up spent on 'adminsitration' and not what they \nwere donated for, this is a 'greed' issue not a 'currency' issue.\n\n> In the UK\n> a recent survey said that only 18% of people thought that tax money\n> was wisely spent.\n\nTax isn't voluntary or a donation. The 18% who think UK tax is well \nspent are the 18% of the population who get the tax money, not the 82% \nthat pay it ;)\n\n> Can we fix it?\n\nFirst we kill all the politicians ...\n\n> So let's say I run a business and I make 1 million euros.\u00a0 I wish to\n> donate 10% of my profits to society.\u00a0 But let's say I dont want that\n> money to go to wars of aggression, but rather, to the fire\n> de[department.\u00a0\n\nSo give it to the FD - what you do with your post-tax profits are up to \nyou ;)\n\n> At this point everyone wins.\u00a0 The business person is happy to make a\n> contribution.\u00a0 The govt. is happy that it gets more revenue.\u00a0 The\n> fire dept. is happy that it has revenue to do its work.\u00a0 And\n> everything has gone to the right place in a kind of democratic way.\n\nWhere does gov't come into this ? I think you're confusing 'tax' which \nyou have zero control over and 'donations' which you already have 100% \ncontrol over.\n\nRob"
            },
            {
                "author": "Neil Fincham",
                "date": "2013-09-29T02:28:26",
                "message_text_only": "I subscribe to this list so I can keep up-to date with bitcoin development,\ncan we keep philosophy and tax evasion out of it?\n\nNeil\n\n\nOn 29 September 2013 09:15, <rob.golding at astutium.com> wrote:\n\n> > But the regulatory environment in many geographical regions in\n> > uncertain.   Do we need to pay capital gains?   Do we need to pay a\n> > sales taxs etc. etc.\n>\n> In most regions it's not only 'simple' but trivial - BTC is just\n> 'another currency' and accounted for exactly the same way - it doens't\n> matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig\n> Dung, you still have a GBP tax issue ...\n>\n> > So my idea is to voluntarily pre empt legislation by giving donations\n> > to govt (aka taxation) for bitcoin service providers.\n>\n> You want to volunteer to pay tax ? I'd suggest stronger medication ...\n>\n> > However, there is something of a problem with voluntary donations.\n> > Most people are not satisfied with the way they are spent.\n>\n> 80% of 'donations' end up spent on 'adminsitration' and not what they\n> were donated for, this is a 'greed' issue not a 'currency' issue.\n>\n> > In the UK\n> > a recent survey said that only 18% of people thought that tax money\n> > was wisely spent.\n>\n> Tax isn't voluntary or a donation. The 18% who think UK tax is well\n> spent are the 18% of the population who get the tax money, not the 82%\n> that pay it ;)\n>\n> > Can we fix it?\n>\n> First we kill all the politicians ...\n>\n> > So let's say I run a business and I make 1 million euros.  I wish to\n> > donate 10% of my profits to society.  But let's say I dont want that\n> > money to go to wars of aggression, but rather, to the fire\n> > de[department.\n>\n> So give it to the FD - what you do with your post-tax profits are up to\n> you ;)\n>\n> > At this point everyone wins.  The business person is happy to make a\n> > contribution.  The govt. is happy that it gets more revenue.  The\n> > fire dept. is happy that it has revenue to do its work.  And\n> > everything has gone to the right place in a kind of democratic way.\n>\n> Where does gov't come into this ? I think you're confusing 'tax' which\n> you have zero control over and 'donations' which you already have 100%\n> control over.\n>\n> Rob\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/acf2c2d6/attachment.html>"
            },
            {
                "author": "Gavin Andresen",
                "date": "2013-09-29T08:32:10",
                "message_text_only": "On Sun, Sep 29, 2013 at 12:28 PM, Neil Fincham <neil at asdf.co.nz> wrote:\n\n> I subscribe to this list so I can keep up-to date with bitcoin\n> development, can we keep philosophy and tax evasion out of it?\n>\n\nYes, that's off-topic for this mailing list. Lets stick to technical issues\nthat we can solve by writing code.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/1705ccb0/attachment.html>"
            },
            {
                "author": "Adam Back",
                "date": "2013-09-29T09:37:08",
                "message_text_only": "There are some policy decision points in the protocol (and code) that may\nbecome centralized risks or choke points that undermine the p2p nature.  So\nthe extent that those can be argued to have in principle have a technical\nfix, it could be quite interesting to research the necessary technology\n(advanced crypto, byzantine networking argument etc) that could address\nthem.  eg payee/payer blacklisting by a large group of miners and \"committed\ntransaction\" proposal to address it.\n\nHowever even for that type of thing I think bitcoin-dev would probably\nrather focus eg on something that has reached the stage of having a BIP.  Eg\nit might be better to discuss early stage or speculative ideas on\nbitcointalk.org technical thread.\n\nhttps://bitcointalk.org/index.php?board=6.0\n\ntaxation in particular there are examples where even the political sphere\naccepts significantly anonymous taxation.  eg for europeans with certain\ntypes of investment in a swiss bank, the swiss bank sends however many\nmillion as a single payment across all users per european country to their\npassport home country (minus 25% cut for the swiss government).  Perhaps\nsuch things could be possible for bitcoin.  Again I think bitcoin talk would\nbe a good place for such a discussion if that was the OP question\nindirectly.\n\nAdam\n\nOn Sun, Sep 29, 2013 at 06:32:10PM +1000, Gavin Andresen wrote:\n>   On Sun, Sep 29, 2013 at 12:28 PM, Neil Fincham <[1]neil at asdf.co.nz>\n>   wrote:\n>\n>   I subscribe to this list so I can keep up-to date with bitcoin\n>   development, can we keep philosophy and tax evasion out of it?\n>\n>   Yes, that's off-topic for this mailing list. Lets stick to technical\n>   issues that we can solve by writing code.\n>   --\n>   --\n>   Gavin Andresen\n>\n>References\n>\n>   1. mailto:neil at asdf.co.nz\n\n>------------------------------------------------------------------------------\n>October Webinars: Code for Performance\n>Free Intel webinars can help you accelerate application performance.\n>Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most from\n>the latest Intel processors and coprocessors. See abstracts and register >\n>http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2013-09-29T17:49:00",
                "message_text_only": "This kind of thing - providing external audits of customer accounts\nwithout revealing private data - would be generally useful beyond\ntaxation. If you have any solutions, I'd be interested to hear them\n(although bitcoin-dev is probably not the right place yet).\n\nMark\n\nOn 9/29/13 2:37 AM, Adam Back wrote:\n> taxation in particular there are examples where even the political sphere\n> accepts significantly anonymous taxation.  eg for europeans with certain\n> types of investment in a swiss bank, the swiss bank sends however many\n> million as a single payment across all users per european country to their\n> passport home country (minus 25% cut for the swiss government).  Perhaps\n> such things could be possible for bitcoin.  Again I think bitcoin talk would\n> be a good place for such a discussion if that was the OP question\n> indirectly."
            },
            {
                "author": "Melvin Carvalho",
                "date": "2013-09-29T09:44:35",
                "message_text_only": "On 29 September 2013 10:32, Gavin Andresen <gavinandresen at gmail.com> wrote:\n\n> On Sun, Sep 29, 2013 at 12:28 PM, Neil Fincham <neil at asdf.co.nz> wrote:\n>\n>> I subscribe to this list so I can keep up-to date with bitcoin\n>> development, can we keep philosophy and tax evasion out of it?\n>>\n>\n> Yes, that's off-topic for this mailing list. Lets stick to technical\n> issues that we can solve by writing code.\n>\n\nHi Gavin, apologies if my post came across as off-topic.  My aim was to\npresent a use case, and ask whether or not it was technically feasible\nusing smart contracts.\n\n\n>\n> --\n> --\n> Gavin Andresen\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/482050c2/attachment.html>"
            },
            {
                "author": "Melvin Carvalho",
                "date": "2013-09-29T09:46:48",
                "message_text_only": "On 29 September 2013 04:28, Neil Fincham <neil at asdf.co.nz> wrote:\n\n> I subscribe to this list so I can keep up-to date with bitcoin\n> development, can we keep philosophy and tax evasion out of it?\n>\n\nHi Neil, perhaps I didnt present the use case clearly.  It was not about\nevasion, it was about voluntary donations going to the correct place, being\nverified by an oracle.  I dont wish to stray off topic, so I'll leave it at\nthat.\n\n\n>\n> Neil\n>\n>\n> On 29 September 2013 09:15, <rob.golding at astutium.com> wrote:\n>\n>> > But the regulatory environment in many geographical regions in\n>> > uncertain.   Do we need to pay capital gains?   Do we need to pay a\n>> > sales taxs etc. etc.\n>>\n>> In most regions it's not only 'simple' but trivial - BTC is just\n>> 'another currency' and accounted for exactly the same way - it doens't\n>> matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig\n>> Dung, you still have a GBP tax issue ...\n>>\n>> > So my idea is to voluntarily pre empt legislation by giving donations\n>> > to govt (aka taxation) for bitcoin service providers.\n>>\n>> You want to volunteer to pay tax ? I'd suggest stronger medication ...\n>>\n>> > However, there is something of a problem with voluntary donations.\n>> > Most people are not satisfied with the way they are spent.\n>>\n>> 80% of 'donations' end up spent on 'adminsitration' and not what they\n>> were donated for, this is a 'greed' issue not a 'currency' issue.\n>>\n>> > In the UK\n>> > a recent survey said that only 18% of people thought that tax money\n>> > was wisely spent.\n>>\n>> Tax isn't voluntary or a donation. The 18% who think UK tax is well\n>> spent are the 18% of the population who get the tax money, not the 82%\n>> that pay it ;)\n>>\n>> > Can we fix it?\n>>\n>> First we kill all the politicians ...\n>>\n>> > So let's say I run a business and I make 1 million euros.  I wish to\n>> > donate 10% of my profits to society.  But let's say I dont want that\n>> > money to go to wars of aggression, but rather, to the fire\n>> > de[department.\n>>\n>> So give it to the FD - what you do with your post-tax profits are up to\n>> you ;)\n>>\n>> > At this point everyone wins.  The business person is happy to make a\n>> > contribution.  The govt. is happy that it gets more revenue.  The\n>> > fire dept. is happy that it has revenue to do its work.  And\n>> > everything has gone to the right place in a kind of democratic way.\n>>\n>> Where does gov't come into this ? I think you're confusing 'tax' which\n>> you have zero control over and 'donations' which you already have 100%\n>> control over.\n>>\n>> Rob\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> October Webinars: Code for Performance\n>> Free Intel webinars can help you accelerate application performance.\n>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n>> from\n>> the latest Intel processors and coprocessors. See abstracts and register >\n>>\n>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/4eafafab/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2013-09-29T11:33:50",
                "message_text_only": "This kind of thing is better discussed in the dev forum of bitcointalk.org\n\n\nOn Sun, Sep 29, 2013 at 11:46 AM, Melvin Carvalho\n<melvincarvalho at gmail.com>wrote:\n\n>\n>\n>\n> On 29 September 2013 04:28, Neil Fincham <neil at asdf.co.nz> wrote:\n>\n>> I subscribe to this list so I can keep up-to date with bitcoin\n>> development, can we keep philosophy and tax evasion out of it?\n>>\n>\n> Hi Neil, perhaps I didnt present the use case clearly.  It was not about\n> evasion, it was about voluntary donations going to the correct place, being\n> verified by an oracle.  I dont wish to stray off topic, so I'll leave it at\n> that.\n>\n>\n>>\n>> Neil\n>>\n>>\n>> On 29 September 2013 09:15, <rob.golding at astutium.com> wrote:\n>>\n>>> > But the regulatory environment in many geographical regions in\n>>> > uncertain.   Do we need to pay capital gains?   Do we need to pay a\n>>> > sales taxs etc. etc.\n>>>\n>>> In most regions it's not only 'simple' but trivial - BTC is just\n>>> 'another currency' and accounted for exactly the same way - it doens't\n>>> matter if you sell your hose for GBP, USD, EUR, BTC or sacks of Pig\n>>> Dung, you still have a GBP tax issue ...\n>>>\n>>> > So my idea is to voluntarily pre empt legislation by giving donations\n>>> > to govt (aka taxation) for bitcoin service providers.\n>>>\n>>> You want to volunteer to pay tax ? I'd suggest stronger medication ...\n>>>\n>>> > However, there is something of a problem with voluntary donations.\n>>> > Most people are not satisfied with the way they are spent.\n>>>\n>>> 80% of 'donations' end up spent on 'adminsitration' and not what they\n>>> were donated for, this is a 'greed' issue not a 'currency' issue.\n>>>\n>>> > In the UK\n>>> > a recent survey said that only 18% of people thought that tax money\n>>> > was wisely spent.\n>>>\n>>> Tax isn't voluntary or a donation. The 18% who think UK tax is well\n>>> spent are the 18% of the population who get the tax money, not the 82%\n>>> that pay it ;)\n>>>\n>>> > Can we fix it?\n>>>\n>>> First we kill all the politicians ...\n>>>\n>>> > So let's say I run a business and I make 1 million euros.  I wish to\n>>> > donate 10% of my profits to society.  But let's say I dont want that\n>>> > money to go to wars of aggression, but rather, to the fire\n>>> > de[department.\n>>>\n>>> So give it to the FD - what you do with your post-tax profits are up to\n>>> you ;)\n>>>\n>>> > At this point everyone wins.  The business person is happy to make a\n>>> > contribution.  The govt. is happy that it gets more revenue.  The\n>>> > fire dept. is happy that it has revenue to do its work.  And\n>>> > everything has gone to the right place in a kind of democratic way.\n>>>\n>>> Where does gov't come into this ? I think you're confusing 'tax' which\n>>> you have zero control over and 'donations' which you already have 100%\n>>> control over.\n>>>\n>>> Rob\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> October Webinars: Code for Performance\n>>> Free Intel webinars can help you accelerate application performance.\n>>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n>>> from\n>>> the latest Intel processors and coprocessors. See abstracts and register\n>>> >\n>>>\n>>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> October Webinars: Code for Performance\n>> Free Intel webinars can help you accelerate application performance.\n>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n>> from\n>> the latest Intel processors and coprocessors. See abstracts and register >\n>>\n>> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60133471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/a5c36ac6/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "smart contracts -- possible use case? yes or no?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Adam Back",
                "Mike Hearn",
                "rob.golding at astutium.com",
                "Neil Fincham",
                "Gavin Andresen",
                "Mark Friedenbach",
                "Melvin Carvalho"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 21205
        }
    },
    {
        "title": "[Bitcoin-development] Introducing Hive, a new wallet for Mac OS X",
        "thread_messages": [
            {
                "author": "Wendell",
                "date": "2013-09-28T16:22:51",
                "message_text_only": "Hi everyone,\n\nWe have pushed out our first test release of Hive, a new OS X wallet focused on usability and discovery:\nhttps://bitcointalk.org/index.php?topic=304060\n\nHive is powered by a new version of our BitcoinKit.framework, updated recently with bitcoinj support.\n\nMemory of a famous Reid Hoffman quote implores us to reveal that Hive is still missing _many_ basic features. This is not a release that you should give to anyone for serious use. We wanted to get the ball rolling with the community as early as possible, to gather feedback -- and hopefully a little assistance!\n\nThanks to everyone at Bitcoin Europe 2013 for the feedback and moral support!\n\n-wendell\n\nPS- If you're interested in including an app for your Bitcoin-supporting service in Hive, please be in touch!\n\ngrabhive.com | twitter.com/grabhive | gpg: 6C0C9411\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 841 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130928/7aef2b72/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Introducing Hive, a new wallet for Mac OS X",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Wendell"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1136
        }
    },
    {
        "title": "[Bitcoin-development] locks and directories",
        "thread_messages": [
            {
                "author": "Ron",
                "date": "2013-09-30T03:46:06",
                "message_text_only": "Hello\n\nIs it required, presumed, assumed, coincidence, chance or irrelevant that the three different databases in bitcoin:\n1. the network addresses database, reflected in peers.dat\n2. the levelDB block chain database (blocks/blknnnnn.dat, blocks/revnnnnn.dat, blocks/index/nnnnn.sst et al, chainstate/nnnnn.sst et al)\n3. the Berkeley DB wallet database (db.log, wallet.dat, database/log.nnnnnnnnn1)\nare all in the \"datadir\" directory?\n\nI only ask since it would seem that a more mature (?) bitcoind or bitcoin-qt would optionally, like the three (databases) in separate paths or drives, etc. It would seem easier to transport, backup etc. the pieces one wants. I find the block chain database is the most important (time consuming), because of its size, to duplicate and transport in order to backup. This also attacks the \"Criticism\" section in \nhttps://en.bitcoin.it/wiki/Bitcoin-Qt\n\nThe first question is: can one backup by just looking at the dates, and just back up those files with the equal or newer dates, and the \"log, current and manifest\" files? An initial then incremental backups, as it were.\n\nI am thinking of the frailties of data on OS's such as Windows in the hands of the \"less than adept\" shall we say. Also if one takes part in backing up one's data, one may actually have some idea where it is!\n\nRon\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130929/4304e379/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "locks and directories",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Ron"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1503
        }
    },
    {
        "title": "[Bitcoin-development] bitcoind stops responding",
        "thread_messages": [
            {
                "author": "slush",
                "date": "2013-09-30T20:44:57",
                "message_text_only": "Hi,\n\nduring several weeks I'm observing more and more frequent issues with\nbitcoind. The problem is that bitcoind stops responding to RPC calls, but\nthere's no other suspicious activity in bitcoind log, CPU usage is low,\ndisk I/O is standard etc.\n\nI observed this problem with version 0.8.2, but it is still happening with\n0.8.5. Originally this happen just one or twice per day. Today my\nmonitoring scripts restarted bitcoind more than 30x, which sounds alarming.\nThis happen on various backends, so it isn't a problem of one specific\nnode. Is there anybody else who's observing similar problem?\n\nThanks,\nslush\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130930/bcb9dc1b/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2013-09-30T21:01:36",
                "message_text_only": "https://github.com/litecoin-project/litecoin/issues/67\n0.8.2 apparently was the first Bitcoin version to support RPC keepalive.\n With the 4 RPC thread limit, four keepalive connections will exhaust all\nfour and prevent further connections.  This issue describes a workaround\nwhere you build with more RPC threads.\n\n\nOn Mon, Sep 30, 2013 at 10:44 AM, slush <slush at centrum.cz> wrote:\n\n> Hi,\n>\n> during several weeks I'm observing more and more frequent issues with\n> bitcoind. The problem is that bitcoind stops responding to RPC calls, but\n> there's no other suspicious activity in bitcoind log, CPU usage is low,\n> disk I/O is standard etc.\n>\n> I observed this problem with version 0.8.2, but it is still happening with\n> 0.8.5. Originally this happen just one or twice per day. Today my\n> monitoring scripts restarted bitcoind more than 30x, which sounds alarming.\n> This happen on various backends, so it isn't a problem of one specific\n> node. Is there anybody else who's observing similar problem?\n>\n> Thanks,\n> slush\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60134791&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130930/55ac7669/attachment.html>"
            },
            {
                "author": "Fatima Castiglione Maldonado \u53d1",
                "date": "2013-09-30T22:00:14",
                "message_text_only": "Hi,\nI am new on the list. I got a similar problem.\n\nIf I put \"sendToAdress\" transactions to bitcoind, it will accept between 1\nand 3 transactions per minute, depending on the underlying machine.\nIf I try to send one transaction every 20 seconds or less, bitcoind stops\nresponding to RPC calls.\n\nDoes anybody know of any solution / fix / workaround for this?\n\nThanks in advance.\n\n\n2013/9/30 Warren Togami Jr. <wtogami at gmail.com>\n\n> https://github.com/litecoin-project/litecoin/issues/67\n> 0.8.2 apparently was the first Bitcoin version to support RPC keepalive.\n>  With the 4 RPC thread limit, four keepalive connections will exhaust all\n> four and prevent further connections.  This issue describes a workaround\n> where you build with more RPC threads.\n>\n>\n> On Mon, Sep 30, 2013 at 10:44 AM, slush <slush at centrum.cz> wrote:\n>\n>> Hi,\n>>\n>> during several weeks I'm observing more and more frequent issues with\n>> bitcoind. The problem is that bitcoind stops responding to RPC calls, but\n>> there's no other suspicious activity in bitcoind log, CPU usage is low,\n>> disk I/O is standard etc.\n>>\n>> I observed this problem with version 0.8.2, but it is still happening\n>> with 0.8.5. Originally this happen just one or twice per day. Today my\n>> monitoring scripts restarted bitcoind more than 30x, which sounds alarming.\n>> This happen on various backends, so it isn't a problem of one specific\n>> node. Is there anybody else who's observing similar problem?\n>>\n>> Thanks,\n>> slush\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> October Webinars: Code for Performance\n>> Free Intel webinars can help you accelerate application performance.\n>> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n>> from\n>> the latest Intel processors and coprocessors. See abstracts and register >\n>>\n>> http://pubads.g.doubleclick.net/gampad/clk?id=60134791&iu=/4140/ostg.clktrk\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n>\n> ------------------------------------------------------------------------------\n> October Webinars: Code for Performance\n> Free Intel webinars can help you accelerate application performance.\n> Explore tips for MPI, OpenMP, advanced profiling, and more. Get the most\n> from\n> the latest Intel processors and coprocessors. See abstracts and register >\n> http://pubads.g.doubleclick.net/gampad/clk?id=60134791&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n\n\n-- \n=================================\nF\u00e1tima Castiglione Maldonado\ncastiglionemaldonado at gmail.com\n\n                     ____\n                   ,'_   |\n __________________|__|__|__\n<_____                      )                _.------._\n      `-----------,------.-'              ,-'          `-.\n                 |    |  |              ,'                `.\n                ,'    |  |            ,'                    `.\n                |  _,-'  |__         /                        \\\n              _,'-'    `.   `---.___|_____________             \\\n          .--'  -----.  | _____________________   `-. -----     |\n          |    ___|  |  |                      \\  ,- \\          |\n          |    ___|  |===========================((|) |         |\n          |       |  |  | _____________________/  `- /          |\n          `--._ -----'  |        _________________,-' -----     |\n               `.-._   ,' __.---'   |                          /\n                |   `-.  |           \\                        /\n                `.    |  |            `.                    ,'\n                 |    |  |              `.                ,'\n _____,----------`-------`-.              `-._        _,-'\n<___________________________)                 `------'\n                   | _|  |\n                   `.____|\n\n\n\n=================================\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130930/99f0c31a/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2013-09-30T22:08:01",
                "message_text_only": "On Mon, Sep 30, 2013 at 3:00 PM, Fatima Castiglione Maldonado \u53d1\n<castiglionemaldonado at gmail.com> wrote:\n> I am new on the list. I got a similar problem.\n> If I put \"sendToAdress\" transactions to bitcoind, it will accept between 1\n> and 3 transactions per minute, depending on the underlying machine.\n> If I try to send one transaction every 20 seconds or less, bitcoind stops\n> responding to RPC calls.\n>\n> Does anybody know of any solution / fix / workaround for this?\n\nThis is unrelated to Slush's question.\n\nThe complexity of IsConfirmed/Ismine is exponential and starts taking\ntens of seconds at a chain of a dozen unconfirmed transactions (and\ngrowing from there)\n\nThere are some patches that change this, but since the whole network\nwill only average about 7tx per second, you're probably doing\nsomething wrong if you're building great big chains of unconfirmed\ntransaction.  Are you aware of sendmany?"
            }
        ],
        "thread_summary": {
            "title": "bitcoind stops responding",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr.",
                "Gregory Maxwell",
                "slush",
                "Fatima Castiglione Maldonado \u53d1"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 7852
        }
    }
]