[
    {
        "title": "[bitcoin-dev] Fee estimates and RBF",
        "thread_messages": [
            {
                "author": "Jeremy",
                "date": "2021-05-01T00:11:42",
                "message_text_only": "Hi Prayank,\n\nVery glad to hear you are weathering the storm OK, wishing you and yours\nsafety in the weeks ahead.\n\nI think you'll be interested to see\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html\nespecially with regards to background services.\n\nIn the long term, this can be particularly useful since you can use a\nseparate fee-only wallet to arrange the bumps if your main wallet keys are\noffline, and you do not disturb any of the on-chain dependants.\n\nIt can also be much cheaper to use this mechanism than actual RBF because\nyou are not subject to the feerate improvement rule, which forces you to\npay for the bump on all tx data.\n\nI would be very interested to see a system whereby you can make a market\n(maybe via LN) for someone to get your TX included (using oracle network\nOK) by a particular date. Then you can abstract the whole system a lot\nbetter, so that you can fee bump without having to create any direct on\nchain traffic, and a sponsor vector can be offered across a number of txns\nby a service provider.\n\nCheers,\n\nJeremy\n--\n@JeremyRubin <https://twitter.com/JeremyRubin>\n<https://twitter.com/JeremyRubin>\n\n\nOn Fri, Apr 30, 2021 at 2:40 PM Prayank via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hello World,\n>\n> I hope everyone is doing okay. Things are not good in India and even I was\n> tested covid positive few days back. Recovered and feeling better now.\n> Hoping everything gets back to normal soon.\n>\n> There are different estimations used in wallets, explorers and other\n> Bitcoin projects. For example: `estimatesmartfee` in Bitcoin Core (One of\n> the implementation for Bitcoin which is used more but not official as there\n> is nothing official in Bitcoin).  Are different estimations misleading and\n> affect the way fees are used in Bitcoin transactions? Will it be better if\n> we just share mempool stats and user can decide the fee rate accordingly?\n>\n> If I compare this with BTCUSD orderbook on any exchange, are we trying to\n> estimate at what price buy order will get filled in certain time? Does that\n> make sense?\n>\n> Mempool Stats: https://i.imgur.com/r4XKk2p.png\n> BTCUSD Orderbook: https://i.imgur.com/ylGVHJB.png\n>\n> I consider it misleading because lot of users think a transaction with fee\n> rate 1-5 sat/vByte will be included in 1 week or maybe a transaction with X\n> sat/VByte will be included in Y time which is not true. Users can decide\n> the fee rate and can do bidding, transaction will be included based on\n> demand, supply and miners.\n>\n> Will it be better if the wallets used this approach?\n> 1.Show mempool stats\n> 2.Leave the fee rate for user to decide\n> 3.RBF every transaction and follow different algorithms for automated\n> bidding\n>\n> A basic algorithm for automated bidding can be:\n> https://i.stack.imgur.com/1SlPv.png\n>\n> Such RBF algos can be helpful for users when Bitcoin wallets are open in\n> background. Maybe it will work better for mobile wallets in which you can\n> see a notification every time transaction is replaced with a new fee rate\n> automatically.\n>\n> I wanted to know what others think about this approach of creating and\n> using different RBF algos instead of predicting something that is difficult\n> or doesn't make sense. Also if there was a way we could achieve this even\n> if the user goes offline. For example: Alice broadcasts Tx1 with 1\n> sat/vByte, its replaced with Tx2 (2 sat/vByte) after 2 blocks because Tx1\n> was not confirmed. Alice decides to shut down her system or switch off\n> mobile or mobile data. Tx2 is still not confirmed after another 2 blocks\n> but it has some information as one OP_RETURN output which is used by\n> Bitcoin nodes that see this transaction in the mempool. Bob's node use this\n> information to replace the transaction with Tx3 and use fee rate 3\n> sat/vByte.\n>\n> --\n> Prayank\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210430/95501ff9/attachment.html>"
            },
            {
                "author": "Prayank",
                "date": "2021-05-01T16:59:14",
                "message_text_only": "Thanks Jeremy for sharing this link:\u00a0https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html\n\nTrying to understand everything mentioned and \"fee-only\" wallet sounds interesting.\n-- \nPrayank\n\nMay 1, 2021, 05:41 by jlrubin at mit.edu:\n\n> Hi Prayank,\n>\n> Very glad to hear you are weathering the storm OK, wishing you and yours safety in the weeks ahead.\n>\n> I think you'll be interested to see > https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html>  especially with regards to background services.\n>\n> In the long term, this can be particularly useful since you can use a separate fee-only wallet to arrange the bumps if your main wallet keys are offline, and you do not disturb any of the on-chain dependants.\n>\n> It can also be much cheaper to use this mechanism than actual RBF because you are not subject to the feerate improvement rule, which forces you to pay for the bump on all tx data.\n>\n> I would be very interested to see a system whereby you can make a market (maybe via LN) for someone to get your TX included (using oracle network OK) by a particular date. Then you can abstract the whole system a lot better, so that you can fee bump without having to create any direct on chain traffic, and a sponsor vector can be offered across a number of txns by a service provider.\n>\n> Cheers,\n>\n> Jeremy\n> --\n> @JeremyRubin <https://twitter.com/JeremyRubin> <https://twitter.com/JeremyRubin>\n>\n>\n> On Fri, Apr 30, 2021 at 2:40 PM Prayank via bitcoin-dev <> bitcoin-dev at lists.linuxfoundation.org> > wrote:\n>\n>> Hello World, \n>>\n>> I hope everyone is doing okay. Things are not good in India and even I was tested covid positive few days back. Recovered and feeling better now. Hoping everything gets back to normal soon.\n>>\n>> There are different estimations used in wallets, explorers and other Bitcoin projects. For example: `estimatesmartfee` in Bitcoin Core (One of the implementation for Bitcoin which is used more but not official as there is nothing official in Bitcoin).\u00a0 Are different estimations misleading and affect the way fees are used in Bitcoin transactions? Will it be better if we just share mempool stats and user can decide the fee rate accordingly?\n>>\n>> If I compare this with BTCUSD orderbook on any exchange, are we trying to estimate at what price buy order will get filled in certain time? Does that make sense?\n>>\n>> Mempool Stats: >> https://i.imgur.com/r4XKk2p.png\n>> BTCUSD Orderbook: >> https://i.imgur.com/ylGVHJB.png\n>>\n>> I consider it misleading because lot of users think a transaction with fee rate 1-5 sat/vByte will be included in 1 week or maybe a transaction with X sat/VByte will be included in Y time which is not true. Users can decide the fee rate and can do bidding, transaction will be included based on demand, supply and miners.\n>>\n>> Will it be better if the wallets used this approach?\n>> 1.Show mempool stats\n>> 2.Leave the fee rate for user to decide\n>> 3.RBF every transaction and follow different algorithms for automated bidding\n>>\n>> A basic algorithm for automated bidding can be: >> https://i.stack.imgur.com/1SlPv.png\n>>\n>> Such RBF algos can be helpful for users when Bitcoin wallets are open in background. Maybe it will work better for mobile wallets in which you can see a notification every time transaction is replaced with a new fee rate automatically.\n>>\n>> I wanted to know what others think about this approach of creating and using different RBF algos instead of predicting something that is difficult or doesn't make sense. Also if there was a way we could achieve this even if the user goes offline. For example: Alice broadcasts Tx1 with 1 sat/vByte, its replaced with Tx2 (2 sat/vByte) after 2 blocks because Tx1 was not confirmed. Alice decides to shut down her system or switch off mobile or mobile data. Tx2 is still not confirmed after another 2 blocks but it has some information as one OP_RETURN output which is used by Bitcoin nodes that see this transaction in the mempool. Bob's node use this information to replace the transaction with Tx3 and use fee rate 3 sat/vByte.\n>>\n>> --\n>> Prayank\n>>\n>> _______________________________________________\n>>  bitcoin-dev mailing list\n>>  >> bitcoin-dev at lists.linuxfoundation.org\n>>  >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210501/196939d4/attachment.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-03T04:02:07",
                "message_text_only": "Good morning Prayank,\n\nI believe a \"true\" full-RBF wallet should be what every onchain wallet aspires to.\n\nHowever, I think a lot of the effort necessary here has to do with sheer engineering issues.\n\nFor example, if you think \"RBF does not exist\", you can do things like:\n\n* Spend an unconfirmed input from a third party.\n  * This is not actually safe since an unconfirmed tx might have a conflicting transaction get confirmed, but a lot of onchain wallets support this for non-RBF unconfirmed inputs because 99.9% of the time this never happens.\n* When you spend from a (confirmed or unconfirmed) input, delete it from your db forever (because you do not have to worry about alternate transactions spending the same input).\n  * This simplifies db design, you do not have to keep track of states like \"has been spent but tx is not confirmed yet\", \"has two different alternate transactions spending it that have not confirmed\", \"is on a transaction that is not confirmed and therefore this input might disappear completely\" etc.\n\nIn particular, if we want a \"true\" full-RBF wallet:\n\n* Suppose the user wants to spend some amount to address A.\n  * The user imposes a limit on up to how much to spend on fees to have this spend happen.\n* The wallet optimistically creates a low-fee send transaction.\n* After some time, the wallet bumps up the fee by creating a new transaction.\n  * The wallet keeps bumping up, up to the designated limit, the longer the transaction is not confirmed.\n\nOf note is that there is a *race condition* in the above case.\nWhen the wallet is bumping up and constructing a new transaction with higher fee, a miner could find a new block that has the old transaction with lower fee.\n\nNow consider the subsequent user story.\n\n* After some time, the user wants to spend another amount to address B.\n  * Again the user imposes a limit on how much to spend on fees to have this spend happen.\n* The wallet RBFs the existing transaction to include the spend to address B.\n\nAgain, a race condition can occur --- while the wallet is feebumping a new transaction that includes the new output, a random miner can find a new block that includes the old transaction.\n\nThus, the wallet really needs to keep track of any \"pending spends\" and correlate them with actual transactions.\n\nFurther, of course it is convenient to be able to spend money even while it is unconfirmed.\nBut the sender of the unconfirmed input might be using the same software as this wallet as well, meaning that the actual transaction output might change as the original spender keeps fee-bumping it over time.\n\nI confess I have not been thinking of this as well as I should have.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Prayank",
                "date": "2021-05-06T01:57:59",
                "message_text_only": "Good morning ZmnSCPxj,\n\nThanks for your response. I agree there are few exceptions:\u00a0\n\n1.Unconfirmed output can be spent resulting in conflict with RBF\n2.Race condition and mining pool may include old transaction with low fee\nI am trying few things related to RBF and handling such exceptions, will share if I find anything interesting.\n-- \nPrayank\n\nMay 3, 2021, 09:32 by ZmnSCPxj at protonmail.com:\n\n> Good morning Prayank,\n>\n> I believe a \"true\" full-RBF wallet should be what every onchain wallet aspires to.\n>\n> However, I think a lot of the effort necessary here has to do with sheer engineering issues.\n>\n> For example, if you think \"RBF does not exist\", you can do things like:\n>\n> * Spend an unconfirmed input from a third party.\n>  * This is not actually safe since an unconfirmed tx might have a conflicting transaction get confirmed, but a lot of onchain wallets support this for non-RBF unconfirmed inputs because 99.9% of the time this never happens.\n> * When you spend from a (confirmed or unconfirmed) input, delete it from your db forever (because you do not have to worry about alternate transactions spending the same input).\n>  * This simplifies db design, you do not have to keep track of states like \"has been spent but tx is not confirmed yet\", \"has two different alternate transactions spending it that have not confirmed\", \"is on a transaction that is not confirmed and therefore this input might disappear completely\" etc.\n>\n> In particular, if we want a \"true\" full-RBF wallet:\n>\n> * Suppose the user wants to spend some amount to address A.\n>  * The user imposes a limit on up to how much to spend on fees to have this spend happen.\n> * The wallet optimistically creates a low-fee send transaction.\n> * After some time, the wallet bumps up the fee by creating a new transaction.\n>  * The wallet keeps bumping up, up to the designated limit, the longer the transaction is not confirmed.\n>\n> Of note is that there is a *race condition* in the above case.\n> When the wallet is bumping up and constructing a new transaction with higher fee, a miner could find a new block that has the old transaction with lower fee.\n>\n> Now consider the subsequent user story.\n>\n> * After some time, the user wants to spend another amount to address B.\n>  * Again the user imposes a limit on how much to spend on fees to have this spend happen.\n> * The wallet RBFs the existing transaction to include the spend to address B.\n>\n> Again, a race condition can occur --- while the wallet is feebumping a new transaction that includes the new output, a random miner can find a new block that includes the old transaction.\n>\n> Thus, the wallet really needs to keep track of any \"pending spends\" and correlate them with actual transactions.\n>\n> Further, of course it is convenient to be able to spend money even while it is unconfirmed.\n> But the sender of the unconfirmed input might be using the same software as this wallet as well, meaning that the actual transaction output might change as the original spender keeps fee-bumping it over time.\n>\n> I confess I have not been thinking of this as well as I should have.\n>\n> Regards,\n> ZmnSCPxj\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210506/a77cc71c/attachment.html>"
            },
            {
                "author": "Prayank",
                "date": "2021-05-14T10:05:23",
                "message_text_only": "I have shared response by Jeremy and ZmnSCPxj in an answer to\u00a0https://bitcoin.stackexchange.com/questions/105860/what-are-we-trying-to-predict-in-fee-estimation-and-why\n\nAlso find the recent CVE related to RBF by Antoine Riard and implementation of RBF in Bitcoin Core compared to btcd interesting. Even though I am not sure why inherited signalling is not implemented in Bitcoin Core.\nRBF, CPFP and their combinations are something that is less explored IMO. For example: I had discussed one usecase of CPFP with Harding in IRC once in which a project uses maker-taker model. Maker broadcasts transaction with 1 sat/vByte and taker has to confirm this transaction by creating a child transaction with an effective fee rate according to mempool stats. Basically, the idea of receiver paying for the transaction instead of sender. But it will involve lot of exception handling.\n-- \nPrayank\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210514/f256d77e/attachment.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T13:10:12",
                "message_text_only": "Good morning Prayank,\n\n>  But it will involve lot of exception handling.\n\n\nYes, that is precisely the problem here.\n\nIf you select a fixed feerate and then just broadcast-and-forget, you have no real exceptions you have to handle --- but that means not using RBF at all.\n\n\nTesting the handling of reorgs in particular is important, as a reorg might use an older version of an RBFed transaction rather than a newer version.\nThis also implies that further follow-up transactions might need to be recreated in such a case.\n\nAs this is financial code, we need a lot of testing, and code that has a lot of branches due to having to handle a lot of possible exceptions and so forth is a headache to completely cover in testing.\n\n\nC-lightning supposedly supports RBF, in the sense that every transaction it makes always signals RBF, but I am almost certain there are edge cases where it might mishandle a replaced transaction and lose track of onchain funds, and it is difficult to support both \"we can spend unconfirmed change outputs\" (a very common feature of nearly every onchain wallet) with \"we can change the feerate of unconfirmed transactions\" (which changes the txid and therefore the UTXO id of the change output spent by use of the previous feature).\n\nRegards,\nZmnSCPxj"
            }
        ],
        "thread_summary": {
            "title": "Fee estimates and RBF",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "ZmnSCPxj",
                "Jeremy",
                "Prayank"
            ],
            "messages_count": 6,
            "total_messages_chars_count": 17107
        }
    },
    {
        "title": "[bitcoin-dev] Bitcoin Core 0.21.1 released",
        "thread_messages": [
            {
                "author": "W. J. van der Laan",
                "date": "2021-05-02T07:14:05",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\n0.21.1 Release Notes\n====================\n\nBitcoin Core version 0.21.1 is now available from:\n\n  <https://bitcoincore.org/bin/bitcoin-core-0.21.1/>\n\nOr through Bittorrent:\n\n  magnet:?xt=urn:btih:205b0189271c50a02fe966491e15737a01f94e08&dn=bitcoin-core-0.21.1&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969%2Fannounce&tr=udp%3A%2F%2Fexplodie.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.torrent.eu.org%3A451%2Fannounce&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969\n\nThis minor release includes various bug fixes and performance\nimprovements, as well as updated translations.\n\nPlease report bugs using the issue tracker at GitHub:\n\n  <https://github.com/bitcoin/bitcoin/issues>\n\nTo receive security and update notifications, please subscribe to:\n\n  <https://bitcoincore.org/en/list/announcements/join/>\n\nHow to Upgrade\n==============\n\nIf you are running an older version, shut it down. Wait until it has completely\nshut down (which might take a few minutes in some cases), then run the\ninstaller (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\nor `bitcoind`/`bitcoin-qt` (on Linux).\n\nUpgrading directly from a version of Bitcoin Core that has reached its EOL is\npossible, but it might take some time if the data directory needs to be migrated. Old\nwallet versions of Bitcoin Core are generally supported.\n\nCompatibility\n==============\n\nBitcoin Core is supported and extensively tested on operating systems\nusing the Linux kernel, macOS 10.12+, and Windows 7 and newer.  Bitcoin\nCore should also work on most other Unix-like systems but is not as\nfrequently tested on them.  It is not recommended to use Bitcoin Core on\nunsupported systems.\n\n- From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\nlonger supported. Additionally, Bitcoin Core does not yet change appearance\nwhen macOS \"dark mode\" is activated.\n\nNotable changes\n===============\n\n## Taproot Soft Fork\n\nIncluded in this release are the mainnet and testnet activation\nparameters for the taproot soft fork (BIP341) which also adds support\nfor schnorr signatures (BIP340) and tapscript (BIP342).\n\nIf activated, these improvements will allow users of single-signature\nscripts, multisignature scripts, and complex contracts to all use\nidentical-appearing commitments that enhance their privacy and the\nfungibility of all bitcoins. Spenders will enjoy lower fees and the\nability to resolve many multisig scripts and complex contracts with the\nsame efficiency, low fees, and large anonymity set as single-sig users.\nTaproot and schnorr also include efficiency improvements for full nodes\nsuch as the ability to batch signature verification.  Together, the\nimprovements lay the groundwork for future potential\nupgrades that may improve efficiency, privacy, and fungibility further.\n\nActivation for taproot is being managed using a variation of BIP9\nversionbits called Speedy Trial (described in BIP341). Taproot's\nversionbit is bit 2, and nodes will begin tracking which blocks signal\nsupport for taproot at the beginning of the first retarget period after\ntaproot\u2019s start date of 24 April 2021.  If 90% of blocks within a\n2,016-block retarget period (about two weeks) signal support for taproot\nprior to the first retarget period beginning after the time of 11 August\n2021, the soft fork will be locked in, and taproot will then be active\nas of block 709632 (expected in early or mid November).\n\nShould taproot not be locked in via Speedy Trial activation, it is\nexpected that a follow-up activation mechanism will be deployed, with\nchanges to address the reasons the Speedy Trial method failed.\n\nThis release includes the ability to pay taproot addresses, although\npayments to such addresses are not secure until taproot activates.\nIt also includes the ability to relay and mine taproot transactions\nafter activation.  Beyond those two basic capabilities, this release\ndoes not include any code that allows anyone to directly use taproot.\nThe addition of taproot-related features to Bitcoin Core's wallet is\nexpected in later releases once taproot activation is assured.\n\nAll users, businesses, and miners are encouraged to upgrade to this\nrelease (or a subsequent compatible release) unless they object to\nactivation of taproot.  If taproot is locked in, then upgrading before\nblock 709632 is highly recommended to help enforce taproot's new rules\nand to avoid the unlikely case of seeing falsely confirmed transactions.\n\nMiners who want to activate Taproot should preferably use this release\nto control their signaling.  The `getblocktemplate` RPC results will\nautomatically be updated to signal once the appropriate start has been\nreached and continue signaling until the timeout occurs or taproot\nactivates.  Alternatively, miners may manually start signaling on bit 2\nat any time; if taproot activates, they will need to ensure they update\ntheir nodes before block 709632 or non-upgraded nodes could cause them to mine on\nan invalid chain.  See the [versionbits\nFAQ](https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/) for\ndetails.\n\n\nFor more information about taproot, please see the following resources:\n\n- - Technical specifications\n  - [BIP340 Schnorr signatures for secp256k1](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki)\n  - [BIP341 Taproot: SegWit version 1 spending rules](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)\n  - [BIP342 Validation of Taproot scripts](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki)\n\n- - Popular articles;\n  - [Taproot Is Coming: What It Is, and How It Will Benefit Bitcoin](https://bitcoinmagazine.com/technical/taproot-coming-what-it-and-how-it-will-benefit-bitcoin)\n  - [What do Schnorr Signatures Mean for Bitcoin?](https://academy.binance.com/en/articles/what-do-schnorr-signatures-mean-for-bitcoin)\n  - [The Schnorr Signature & Taproot Softfork Proposal](https://blog.bitmex.com/the-schnorr-signature-taproot-softfork-proposal/)\n\n- - Development history overview\n  - [Taproot](https://bitcoinops.org/en/topics/taproot/)\n  - [Schnorr signatures](https://bitcoinops.org/en/topics/schnorr-signatures/)\n  - [Tapscript](https://bitcoinops.org/en/topics/tapscript/)\n  - [Soft fork activation](https://bitcoinops.org/en/topics/soft-fork-activation/)\n\n- - Other\n  - [Questions and answers related to taproot](https://bitcoin.stackexchange.com/questions/tagged/taproot)\n  - [Taproot review](https://github.com/ajtowns/taproot-review)\n\nUpdated RPCs\n- ------------\n\n- - Due to [BIP 350](https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki)\n  being implemented, behavior for all RPCs that accept addresses is changed when\n  a native witness version 1 (or higher) is passed. These now require a Bech32m\n  encoding instead of a Bech32 one, and Bech32m encoding will be used for such\n  addresses in RPC output as well. No version 1 addresses should be created\n  for mainnet until consensus rules are adopted that give them meaning\n  (e.g. through [BIP 341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki)).\n  Once that happens, Bech32m is expected to be used for them, so this shouldn't\n  affect any production systems, but may be observed on other networks where such\n  addresses already have meaning (like signet).\n\n0.21.1 change log\n=================\n\n### Consensus\n- - #21377 Speedy trial support for versionbits (ajtowns)\n- - #21686 Speedy trial activation parameters for Taproot (achow101)\n\n### P2P protocol and network code\n- - #20852 allow CSubNet of non-IP networks (vasild)\n- - #21043 Avoid UBSan warning in ProcessMessage(\u2026) (practicalswift)\n\n### Wallet\n- - #21166 Introduce DeferredSignatureChecker and have SignatureExtractorClass subclass it (achow101)\n- - #21083 Avoid requesting fee rates multiple times during coin selection (achow101)\n\n### RPC and other APIs\n- - #21201 Disallow sendtoaddress and sendmany when private keys disabled (achow101)\n\n### Build system\n- - #21486 link against -lsocket if required for `*ifaddrs` (fanquake)\n- - #20983 Fix MSVC build after gui#176 (hebasto)\n\n### Tests and QA\n- - #21380 Add fuzzing harness for versionbits (ajtowns)\n- - #20812 fuzz: Bump FuzzedDataProvider.h (MarcoFalke)\n- - #20740 fuzz: Update FuzzedDataProvider.h from upstream (LLVM) (practicalswift)\n- - #21446 Update vcpkg checkout commit (sipsorcery)\n- - #21397 fuzz: Bump FuzzedDataProvider.h (MarcoFalke)\n- - #21081 Fix the unreachable code at `feature_taproot` (brunoerg)\n- - #20562 Test that a fully signed tx given to signrawtx is unchanged (achow101)\n- - #21571 Make sure non-IP peers get discouraged and disconnected (vasild, MarcoFalke)\n- - #21489 fuzz: cleanups for versionbits fuzzer (ajtowns)\n\n### Miscellaneous\n- - #20861 BIP 350: Implement Bech32m and use it for v1+ segwit addresses (sipa)\n\n### Documentation\n- - #21384 add signet to bitcoin.conf documentation (jonatack)\n- - #21342 Remove outdated comment (hebasto)\n\nCredits\n=======\n\nThanks to everyone who directly contributed to this release:\n\n- - Aaron Clauson\n- - Andrew Chow\n- - Anthony Towns\n- - Bruno Garcia\n- - Fabian Jahr\n- - fanquake\n- - Hennadii Stepanov\n- - Jon Atack\n- - Luke Dashjr\n- - MarcoFalke\n- - Pieter Wuille\n- - practicalswift\n- - randymcmillan\n- - Sjors Provoost\n- - Vasil Dimov\n- - W. J. van der Laan\n\nAs well as to everyone that helped with translations on\n[Transifex](https://www.transifex.com/bitcoin/bitcoin/).\n\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAEBCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAmCOTyUACgkQHkrtYphs\n0l0NGgf/fkAJXREQTITAdHfYpv0kFJERm2TSgDCNUIevtbQAl+OHnTyyAtnKScTh\n9RVJrrq2smZvFpDyDjYuBspW9yhdQ9RgJOkp1Az1RAx5IJPeCPvMJ44VG4lJAsJN\n5QL6TsarMdbyKjYZ0lqkLjbjDV77ZVmboT2r18G5S5gDVMJ+4rOgqjY2ASh3FlDQ\nruic+Wm8ly4Fv/EwUoMAgq7fq+GJAuBiqfjDYZNtOISYj4fDK9cL8Moc++km3niO\nBCsYVrskxHKMjBVIZ40R+vHclMbjc5Gsh8bBKFYBkZGJ3+4DItLpUhhJBsmAy3hq\nSKTknRUElQbMxs3WlwTxXb0B8x+c/w==\n=CtcI\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Core 0.21.1 released",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "W. J. van der Laan"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 10045
        }
    },
    {
        "title": "[bitcoin-dev] maximum block height on transaction",
        "thread_messages": [
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-03T02:30:07",
                "message_text_only": "Good morning Billy, and list,\n\n> -   Using an opcode would greatly increase CPU usage because the script cache would need to be reworked (and probably cannot be made to work).\n> -   Adding a field would greatly increase the code complexity to the level of SegWit, without all the important bugfixes+features (tx malleability, quadratic sighash, well-defined extensible outputs) that SegWit provides.\n\nSometimes, the only way out is through.\n\nA general idea to get around this would be:\n\n* Define a \"hidden\" field of a transaction, which is not existent in *any* serialization of the transaction.\n* Set a default value for this field that would be compatible with pre-softfork rules.\n* Have an opcode that manipulates this field, carefully designed so it is idempotent.\n\nThe above general idea is not original to me, I believe.\nI think I have seen it elsewhere on the list, possibly in discussions around sidechains, though my primary cache is unable to fetch and additional searches through unindexed storage is taking too long.\n\nSo, for this particular case, here is a (non-serious) proposal to implement a maximum block height on transactions.\n\n* Create a new field `u32 nMaxHeight` on `CTransaction` that is not serialized in any transaction format.\n  * A block is not valid if any transaction in it has an `nMaxHeight` larger than the block height of the block.\n  * Default value is `0xFFFFFFFF`.\n* Add a new opcode `OP_SETMAXHEIGHT` that replaces an existing `OP_NOP`.\n  * The opcode must be followed by an `OP_PUSH` of a 32-bit value, else script validation fails.\n    * This prevents using a computed value, instead the value must be given as a constant in the script text.\n      This is a precaution to reduce the risk that execution of the script at a different time or different computer or etc will result in a different value that the `OP_SETMAXHEIGHT` opcode uses, which can cause consensus divergence.\n      If we figure out later that this precaution is not necessary, we can just use another `OP_NOP` for `OP_SETMAXHEIGHTFROMSTACK`.\n  * If the current `nMaxHeight` is larger than the given value, then the `nMaxHeight` is set to the given value.\n\nThe above avoids issues with opcodes --- the script interpreter can continue to be executed in the only place it is in, i.e. at entry into the mempool.\nIt also avoids some of the code complexity with fields, since the field is non-existent in any serialization of the transaction, but is instead implied by the scripts that the transaction causes to be executed, reducing the need to identify pre-softfork peers and baby-talk to them --- the baby-talk simply contains \"parental bonuses\" that are understood by upgraded nodes who are \"in the know\".\n\nAdditional complications, such as the need for an index of `nMaxHeight` for transactions in the mempool (to remove transactions whose `nMaxHeight` is now in the past), and the additional checks needed when receiving an in-block transaction that is not in the mempool, are left to the reader.\nSimilar field and opcode for `CTransactionInput` for a relative-time max height are also left as an exercise to the reader.\n\n> -   You can do what you want with a second `nLockTime`d transaction that spends the output anyway.\n\nThe advantage of this functionality is that you can be safely offline at the time the timeout occurs in any complicated timeout-based contract.\n\nTypically, when using say an HTLC, the contractor who holds lien on the timelock branch, has to be online at the time the timelock becomes valid, in order to impose a timeout on the hashlock branch.\nHowever, if instead the hashlock branch includes an `OP_SETMAXHEIGHT`, then the contractor holding lien on the timelock branch does not have this risk.\n\nHowever, the contractor holding the lien on the hashlock branch now has increased risk.\nIf the timeout is approaching, and suddenly there is high mempool usage at the time, then a claim of the hashlock branch may fall off the mempool due to `nMaxHeight` violation.\nBut the transaction claiming the hashlock branch has been published and the preimage has been published in mempools all over the world, thus the contractor holding lien on the hashlock branch risks not being compensated for revelation of the preimage.\n\nWhereas with the current way things are, the timelock-holder is at risk, and the hashlock-holder has reduced risk since even if the timeout arrives, there is still the possibility that the hashlock branch is what gets confirmed, whereas with `OP_SETMAXHEIGHT` the hashlock-holder has 0 chance of getting the hashlock branch confirmed in case of sudden spike in onchain usaage.\n\nThus it seems to me that this scheme does not really *improve* Bitcoin significantly, it only moves risks from one participant to another in a two-participant contract.\nThus, this proposal is not particularly serious.\n\nRegards,\nZmnSCPxj"
            }
        ],
        "thread_summary": {
            "title": "maximum block height on transaction",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "ZmnSCPxj"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 4860
        }
    },
    {
        "title": "[bitcoin-dev] BIP - limiting OP_RETURN / HF",
        "thread_messages": [
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-03T05:17:46",
                "message_text_only": "Good morning Ruben,\n\n> Hi Yanmaani,\n>\n> >Merged mining at present only needs one hash for a merkle root, and that's stored in the coinbase.\n>\n> Yes, but that method is not \"blind\", meaning BTC miners have to validate\u00a0the merged-mined chain, which is a significant downside.\n>\n> >It would be even simpler to add the following rules\n>\n> That would require a specific soft fork, whereas the method described in my post avoids doing that.\n>\n> >do I need to put in a transaction that burns bitcoins for the tx fee\n>\n> The blind merged-mined chain (which I call a \"spacechain\") needs its own native token in order to pay for fees. The mechanism I proposed for that is the perpetual one-way peg, which allows fair \"spacecoin\" creation by burning BTC, and circumvents creating bad speculative altcoin incentives. Anyone can create a spacechain block and take the fees, and then try to get BTC miners to include it by paying a higher fee than others (via RBF).\n\nWhat bothers me about BMM is the B.\n\nMainchain miners assume that sidechain functionaries check the sidechain rules.\nTheir rule is that if the sidechain functionary is willing to pay an amount, then obviously the sidechain functionary must benefit by at *least* that amount (if not, the sidechain functionary is losing funds over time and will go out of business at some point).\nThus the BMM is an economic incentive for sidechain functionaries to be honest, because dishonesty means that sidechain nodes will reject their blocks and they will have earned nothing in the sidechain that is of equal or greater value than what they spend on the mainchain.\n\nBut the BMM on mainchain is done by bidding.\nSuppose a sidechain functionary creates a block where it gets S fees, and it pays (times any exchange rates that arise due to differing security profiles of mainchain vs sidechain) M in fess to mainchain miners to get its commitment on the mainchain.\nThen any other competing sidechain functionary can create the same block except the S fees go to itself, and paying M+1 in fees to mainchain miners to get *that* commitment mainchain.\nThis triggers a bidding war.\nLogically, further sidechain functionaries will now bid M+2 etc. until M=S (times exchange rates) and the highest bidder earns nothing.\n\nThat means that sidechain functionaries will not earn anything once there are at least 2 functionaries, because if there are two sidechain functionaries then they will start the above bidding war and all earnings go to mainchain miners, who are not actually validating anything in the sidechain.\nSo they are doing all this work of validating the sidechain blocks, but gain nothing thereby, and are thus not much better than fullnodes.\n\nEven if you argue that the sidechain functionaries might gain economic benefit from the existence of the sidechain, that economic benefit can be quantified as some economic value, that can be exchanged at some exchange rate with some number of mainchain tokens, so M just rises above S by that economic benefit and sidechain functionaries will still end up earning 0 money.\n\nIf there is only one sidechain functionary the above bidding war does not occur, but then the entire sidechain depends on this one sidechain functionary.\n\nSo it does not seem to me that blinded merge mining would work at scale.\nMaybe.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Ruben Somsen",
                "date": "2021-05-04T12:51:14",
                "message_text_only": "Good evening ZmnSCPxj,\n\nThanks for thinking it through. I appreciate the time and effort.\n\n>sidechain functionaries will not earn anything once there are at least 2\nfunctionaries [...] they are doing all this work of validating the\nsidechain blocks, but gain nothing [...] the entire sidechain depends on\nthis one sidechain functionary\n\nI think your description is accurate, and while it may intuitively sound\nproblematic, it turns out it does not actually cause any issues.\n\nEven in a scenario where one entity is consistently creating all the\nspacechain blocks, they can only do so as long as they consistently leave 0\nprofit on the table for others. This is actually perfectly acceptable,\nbecause that means this entity is not censoring anyone. As soon as they try\nto abuse their position with censorship, it's trivial for anyone to step in\nand outbid them.\n\nHow trivial, you may wonder? Well, there is very little difference between\nbeing a spacechain miner and a spacechain user. Both are expected to run\nfull nodes, the only difference is that the miner has some BTC available\nand is willing to use it to \"mine\" the block reward in the spacechain. This\nmeans that the barrier for users to act as miners is low to the point where\nit may happen altruistically, and, interestingly, it also doubles as an\nappealing way for users to purchase spacecoins in a decentralized fashion.\n\nBtw, I personally prefer not to call a \"BMM chain\" a sidechain, because in\nmy eyes it's not a sidechain if the chain has its own altcoin. The\nspacechain design (which avoids the use of an altcoin) comes closer to\nbeing a sidechain in that regard, but even there the use of the term\n\"sidechain\" is debatable.\n\nI hope this clarifies things.\n\nCheers,\nRuben\n\n\n\n\n\nOn Mon, May 3, 2021 at 7:17 AM ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n\n> Good morning Ruben,\n>\n> > Hi Yanmaani,\n> >\n> > >Merged mining at present only needs one hash for a merkle root, and\n> that's stored in the coinbase.\n> >\n> > Yes, but that method is not \"blind\", meaning BTC miners have to\n> validate the merged-mined chain, which is a significant downside.\n> >\n> > >It would be even simpler to add the following rules\n> >\n> > That would require a specific soft fork, whereas the method described in\n> my post avoids doing that.\n> >\n> > >do I need to put in a transaction that burns bitcoins for the tx fee\n> >\n> > The blind merged-mined chain (which I call a \"spacechain\") needs its own\n> native token in order to pay for fees. The mechanism I proposed for that is\n> the perpetual one-way peg, which allows fair \"spacecoin\" creation by\n> burning BTC, and circumvents creating bad speculative altcoin incentives.\n> Anyone can create a spacechain block and take the fees, and then try to get\n> BTC miners to include it by paying a higher fee than others (via RBF).\n>\n> What bothers me about BMM is the B.\n>\n> Mainchain miners assume that sidechain functionaries check the sidechain\n> rules.\n> Their rule is that if the sidechain functionary is willing to pay an\n> amount, then obviously the sidechain functionary must benefit by at *least*\n> that amount (if not, the sidechain functionary is losing funds over time\n> and will go out of business at some point).\n> Thus the BMM is an economic incentive for sidechain functionaries to be\n> honest, because dishonesty means that sidechain nodes will reject their\n> blocks and they will have earned nothing in the sidechain that is of equal\n> or greater value than what they spend on the mainchain.\n>\n> But the BMM on mainchain is done by bidding.\n> Suppose a sidechain functionary creates a block where it gets S fees, and\n> it pays (times any exchange rates that arise due to differing security\n> profiles of mainchain vs sidechain) M in fess to mainchain miners to get\n> its commitment on the mainchain.\n> Then any other competing sidechain functionary can create the same block\n> except the S fees go to itself, and paying M+1 in fees to mainchain miners\n> to get *that* commitment mainchain.\n> This triggers a bidding war.\n> Logically, further sidechain functionaries will now bid M+2 etc. until M=S\n> (times exchange rates) and the highest bidder earns nothing.\n>\n> That means that sidechain functionaries will not earn anything once there\n> are at least 2 functionaries, because if there are two sidechain\n> functionaries then they will start the above bidding war and all earnings\n> go to mainchain miners, who are not actually validating anything in the\n> sidechain.\n> So they are doing all this work of validating the sidechain blocks, but\n> gain nothing thereby, and are thus not much better than fullnodes.\n>\n> Even if you argue that the sidechain functionaries might gain economic\n> benefit from the existence of the sidechain, that economic benefit can be\n> quantified as some economic value, that can be exchanged at some exchange\n> rate with some number of mainchain tokens, so M just rises above S by that\n> economic benefit and sidechain functionaries will still end up earning 0\n> money.\n>\n> If there is only one sidechain functionary the above bidding war does not\n> occur, but then the entire sidechain depends on this one sidechain\n> functionary.\n>\n> So it does not seem to me that blinded merge mining would work at scale.\n> Maybe.\n>\n> Regards,\n> ZmnSCPxj\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210504/9e7e2fe4/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP - limiting OP_RETURN / HF",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "ZmnSCPxj",
                "Ruben Somsen"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 8777
        }
    },
    {
        "title": "[bitcoin-dev] Encryption of an existing BIP39 mnemonic without changing the seed",
        "thread_messages": [
            {
                "author": "Tobias Kaupat",
                "date": "2021-05-05T17:32:05",
                "message_text_only": "Hi all,\nI want to start a discussion about a use case I have and a possible\nsolution. I have not found any satisfying solution to this use case yet.\n\n*Use case:*\nAn existing mnemonic (e.g. for a hardware wallet) should be saved on a\npaper backup in a password encrypted form. The encrypted form should be a\nmnemonic itself to keep all backup properties like error correction.\n\n*Suggested solution:*\n1) Take the existing mnemonic and extract the related entropy\n2) Create a SHA526 hash (key) from a user defined password\n3) Use the key as input for an AES CTR (empty IV) to encrypt the entropy\n4) Derive a new mnemonic from the encrypted entropy to be stored on a paper\nbackup\n\nWe can add some hints to the paper backp that the mnemonic is encrypted, or\nprefix it with \"*\" to make clear it's not usable without applying the\npassword via the algorithm above.\n\nTo restore the original mnemonic, one must know the password and need to\nfollow the process above again.\n\nAn example implementation in GoLang can be found here:\nhttps://github.com/Niondir/go-bip39/blob/master/encyrption_test.go\n\n*Why not use the existing BIP-39 Passphrase?*\nWhen generating a mnemonic with passphrase, the entropy is derived from the\npassphrase. When you have an existing mnemonic without a passphrase, any\nattempt to add a passphrase will end up in a different seed and thus a\ndifferent private key. What we actually need is to encrypt the entropy.\n\nI'm open for your feedback. All encryption parameters are up to discussion\nand the whole proposal needs a security review. It's just the first draft.\n\n*Existing solutions*\nOne solution I found is \"Seedshift\" which can be found here:\nhttps://github.com/mifunetoshiro/Seedshift\n\nBut I consider it less secure and I would like to suggest a solution based\non provably secure algorithms rather than a \"rot23 derivation\". Also using\na date as password seems not very clever to me.\n\nKind regards\nTobias\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210505/3e25a360/attachment.html>"
            },
            {
                "author": "Peter D. Gray",
                "date": "2021-05-06T12:56:37",
                "message_text_only": "Hi Tobias.\n\nThe most recent release of Coldcard now offers \"Seed XOR\" to solve\nsimilar problems. It allows any numbers of standard BIP-39\ncompatible seed phrases to be bitwise XOR'ed together to make a new seed.\n\nColdcard can split an existing seed into 2, 3 or 4 new phrases, or\nyou can take your existing seed phrase, and XOR-in a new seed phrase\nto arrive at a new random seed phrase (and wallet).\n\nMore details about this feature at: <https://seedxor.com>\n\nBest part is XOR is simple enough that the split or combine operation can\nbe worked out by hand on paper. (We even made a worksheet for this.)\nThe checksums on each of the XOR parts protects the final result, and\neach \"part\" is a fully functional decoy wallet.\n\nHope that helps!\n\nOn Wed, May 05, 2021 at 07:32:05PM +0200, Tobias Kaupat wrote:\n> Hi all,\n> I want to start a discussion about a use case I have and a possible\n> solution. I have not found any satisfying solution to this use case yet.\n> \n> *Use case:*\n> An existing mnemonic (e.g. for a hardware wallet) should be saved on a\n> paper backup in a password encrypted form. The encrypted form should be a\n> mnemonic itself to keep all backup properties like error correction.\n> \n> *Suggested solution:*\n> 1) Take the existing mnemonic and extract the related entropy\n> 2) Create a SHA526 hash (key) from a user defined password\n> 3) Use the key as input for an AES CTR (empty IV) to encrypt the entropy\n> 4) Derive a new mnemonic from the encrypted entropy to be stored on a paper\n> backup\n...\n> *Existing solutions*\n> One solution I found is \"Seedshift\" which can be found here:\n> https://github.com/mifunetoshiro/Seedshift\n> \n> But I consider it less secure and I would like to suggest a solution based\n> on provably secure algorithms rather than a \"rot23 derivation\". Also using\n> a date as password seems not very clever to me.\n> \n> Kind regards\n> Tobias\n\n---\n@DocHEX  ||  Coinkite  ||  PGP: A3A31BAD 5A2A5B10\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 488 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210506/a6b3fc68/attachment.sig>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-06T13:19:31",
                "message_text_only": "i would stretch the password, with pbkdf2 or argon2 with like 30k\nrounds or something first, rather than \"just hashing it\".  remember,\nit's pretty easy to validate these seeds - not like you lock someone\nout after 9 guesses!\n\nOn Wed, May 5, 2021 at 3:38 PM Tobias Kaupat via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n> Hi all,\n> I want to start a discussion about a use case I have and a possible solution. I have not found any satisfying solution to this use case yet.\n>\n> Use case:\n> An existing mnemonic (e.g. for a hardware wallet) should be saved on a paper backup in a password encrypted form. The encrypted form should be a mnemonic itself to keep all backup properties like error correction.\n>\n> Suggested solution:\n> 1) Take the existing mnemonic and extract the related entropy\n> 2) Create a SHA526 hash (key) from a user defined password\n> 3) Use the key as input for an AES CTR (empty IV) to encrypt the entropy\n> 4) Derive a new mnemonic from the encrypted entropy to be stored on a paper backup\n>\n> We can add some hints to the paper backp that the mnemonic is encrypted, or prefix it with \"*\" to make clear it's not usable without applying the password via the algorithm above.\n>\n> To restore the original mnemonic, one must know the password and need to follow the process above again.\n>\n> An example implementation in GoLang can be found here:\n> https://github.com/Niondir/go-bip39/blob/master/encyrption_test.go\n>\n> Why not use the existing BIP-39 Passphrase?\n> When generating a mnemonic with passphrase, the entropy is derived from the passphrase. When you have an existing mnemonic without a passphrase, any attempt to add a passphrase will end up in a different seed and thus a different private key. What we actually need is to encrypt the entropy.\n>\n> I'm open for your feedback. All encryption parameters are up to discussion and the whole proposal needs a security review. It's just the first draft.\n>\n> Existing solutions\n> One solution I found is \"Seedshift\" which can be found here: https://github.com/mifunetoshiro/Seedshift\n>\n> But I consider it less secure and I would like to suggest a solution based on provably secure algorithms rather than a \"rot23 derivation\". Also using a date as password seems not very clever to me.\n>\n> Kind regards\n> Tobias\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Tobias Kaupat",
                "date": "2021-05-06T14:10:31",
                "message_text_only": "Hello Erik,\nThanks for your reply.\nAfter a little research I came to the same conclusion. PDKDF2 makes sense,\nsince it is already used in BIP39.\nI will update my code.\n\n\n\nRegarding SeedXOR:\nThat's at least a similar solution, but than I have to store 2 phrases, I\nreally like to keep one part in my head, which is only possible with a\npassword.\nPlus for anyone who want to use two seeds my proposal also works - it just\nneeds software to be applied.\n\nKind regards\nTobias Kaupat\n\n\n\nErik Aronesty <erik at q32.com> schrieb am Do., 6. Mai 2021, 15:19:\n\n> i would stretch the password, with pbkdf2 or argon2 with like 30k\n> rounds or something first, rather than \"just hashing it\".  remember,\n> it's pretty easy to validate these seeds - not like you lock someone\n> out after 9 guesses!\n>\n> On Wed, May 5, 2021 at 3:38 PM Tobias Kaupat via bitcoin-dev\n> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >\n> > Hi all,\n> > I want to start a discussion about a use case I have and a possible\n> solution. I have not found any satisfying solution to this use case yet.\n> >\n> > Use case:\n> > An existing mnemonic (e.g. for a hardware wallet) should be saved on a\n> paper backup in a password encrypted form. The encrypted form should be a\n> mnemonic itself to keep all backup properties like error correction.\n> >\n> > Suggested solution:\n> > 1) Take the existing mnemonic and extract the related entropy\n> > 2) Create a SHA526 hash (key) from a user defined password\n> > 3) Use the key as input for an AES CTR (empty IV) to encrypt the entropy\n> > 4) Derive a new mnemonic from the encrypted entropy to be stored on a\n> paper backup\n> >\n> > We can add some hints to the paper backp that the mnemonic is encrypted,\n> or prefix it with \"*\" to make clear it's not usable without applying the\n> password via the algorithm above.\n> >\n> > To restore the original mnemonic, one must know the password and need to\n> follow the process above again.\n> >\n> > An example implementation in GoLang can be found here:\n> > https://github.com/Niondir/go-bip39/blob/master/encyrption_test.go\n> >\n> > Why not use the existing BIP-39 Passphrase?\n> > When generating a mnemonic with passphrase, the entropy is derived from\n> the passphrase. When you have an existing mnemonic without a passphrase,\n> any attempt to add a passphrase will end up in a different seed and thus a\n> different private key. What we actually need is to encrypt the entropy.\n> >\n> > I'm open for your feedback. All encryption parameters are up to\n> discussion and the whole proposal needs a security review. It's just the\n> first draft.\n> >\n> > Existing solutions\n> > One solution I found is \"Seedshift\" which can be found here:\n> https://github.com/mifunetoshiro/Seedshift\n> >\n> > But I consider it less secure and I would like to suggest a solution\n> based on provably secure algorithms rather than a \"rot23 derivation\". Also\n> using a date as password seems not very clever to me.\n> >\n> > Kind regards\n> > Tobias\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210506/49c0c183/attachment.html>"
            },
            {
                "author": "yanmaani at cock.li",
                "date": "2021-05-08T22:49:01",
                "message_text_only": "Why the existing mnemonic? If you've already dealt with unencrypted \nmaterial carelessly, the genie is out of the bottle. And if you're OK \nwith making a new one, why not just use BIP-39 passphrases to begin \nwith?\n\nIf you must, it seems like a decent way to accomplish it, but raw \nSHA-256 is probably not the best choice. PBKDF2 like in the BIP-39 spec \nis tried and true, or something like scrypt. This would however change \nthe storage format - you'd have to store a salt too, making your \nmnemonic bigger.\n\nOn 2021-05-05 17:32, Tobias Kaupat via bitcoin-dev wrote:\n> Hi all,\n> I want to start a discussion about a use case I have and a possible\n> solution. I have not found any satisfying solution to this use case\n> yet.\n> \n> Use case:\n> An existing mnemonic (e.g. for a hardware wallet) should be saved on a\n> paper backup in a password encrypted form. The encrypted form should\n> be a mnemonic itself to keep all backup properties like error\n> correction.\n> \n> Suggested solution:\n> 1) Take the existing mnemonic and extract the related entropy\n> 2) Create a SHA526 hash (key) from a user defined password\n> 3) Use the key as input for an AES CTR (empty IV) to encrypt the\n> entropy\n> 4) Derive a new mnemonic from the encrypted entropy to be stored on a\n> paper backup\n> \n> We can add some hints to the paper backp that the mnemonic is\n> encrypted, or prefix it with \"*\" to make clear it's not usable without\n> applying the password via the algorithm above.\n> \n> To restore the original mnemonic, one must know the password and need\n> to follow the process above again.\n> \n> An example implementation in GoLang can be found here:\n> https://github.com/Niondir/go-bip39/blob/master/encyrption_test.go\n> \n> Why not use the existing BIP-39 Passphrase?\n> When generating a mnemonic with passphrase, the entropy is derived\n> from the passphrase. When you have an existing mnemonic without a\n> passphrase, any attempt to add a passphrase will end up in a different\n> seed and thus a different private key. What we actually need is to\n> encrypt the entropy.\n> \n> I'm open for your feedback. All encryption parameters are up to\n> discussion and the whole proposal needs a security review. It's just\n> the first draft.\n> \n> Existing solutions\n> One solution I found is \"Seedshift\" which can be found here:\n> https://github.com/mifunetoshiro/Seedshift\n> \n> But I consider it less secure and I would like to suggest a solution\n> based on provably secure algorithms rather than a \"rot23 derivation\".\n> Also using a date as password seems not very clever to me.\n> \n> Kind regards\n> Tobias\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            }
        ],
        "thread_summary": {
            "title": "Encryption of an existing BIP39 mnemonic without changing the seed",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Tobias Kaupat",
                "Peter D. Gray",
                "Erik Aronesty",
                "yanmaani at cock.li"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 12907
        }
    },
    {
        "title": "[bitcoin-dev] Full Disclosure: CVE-2021-31876 Defect in Bitcoin Core's bip125 logic",
        "thread_messages": [
            {
                "author": "Antoine Riard",
                "date": "2021-05-06T13:55:53",
                "message_text_only": "Hi,\n\nI'm writing to report a defect in Bitcoin Core bip125 logic with minor\nsecurity and operational implications for downstream projects. Though this\ndefect grieves Bitcoin Core nodes 0.12.0 and above, base layer safety isn't\nimpacted.\n\n# Problem\n\nBip 125 specification describes the following signalling mechanism :\n\n\"\nThis policy specifies two ways a transaction can signal that it is\nreplaceable.\n\n* Explicit signaling: A transaction is considered to have opted in to\nallowing replacement of itself if any of its inputs have an nSequence\nnumber less than (0xffffffff - 1).\n\n* Inherited signaling: Transactions that don't explicitly signal\nreplaceability are replaceable under this policy for as long as any one of\ntheir ancestors signals replaceability and remains unconfirmed.\n\nOne or more transactions currently in the mempool (original transactions)\nwill be replaced by a new transaction (replacement transaction) that spends\none or more of the same inputs if,\n\n# The original transactions signal replaceability explicitly or through\ninheritance as described in the above Summary section.\n\"\n\nAn unconfirmed child transaction with nSequence = 0xff_ff_ff_ff spending an\nunconfirmed parent with nSequence <= 0xff_ff_ff_fd should be replaceable as\nthe child transaction signals \"through inheritance\". However, the\nreplacement code as implemented in Core's `PreChecks()` shows that this\nbehavior isn't  enforced and Core's mempool rejects replacement attempts of\nan unconfirmed child transaction.\n\nBranch asserting the behavior is here :\nhttps://github.com/ariard/bitcoin/commits/2021-03-test-rbf\n\n# Solution\n\nThe defect has not been patched.\n\n# Downstream Projects Affected\n\n* LN : State-of-the-art pinning attacks against second-stage HTLCs\ntransactions were thought to be only possible by exploiting RBF rule 3 on\nthe necessity of a higher absolute fee [0]. However, this replacement\ndefect opens the way for an attacker to only pin with an opt-out child\nwithout a higher fee than the honest competing transaction. This lowers the\ncost of attack as the malicious pinning transaction only has to be above\nmempools'min feerate. This also increases odds of attack success for a\nreduced feerate diminishes odds of confirmation ending the pinning.\n\nA functional test demo illustrating cases is available on this branch:\nhttps://github.com/ariard/bitcoin/commits/2021-05-htlc-preimage-pinnings\n\nLN nodes operators concerned by this defect might favor anchor outputs\nchannels, fully mitigating this specific pinning vector.\n\n* Onchain DLC/Coinswap/Vault : Those contract protocols have also multiple\nstages of execution with time-sensitive transactions opening the way to\npinning attacks. Those protocols being non-deployed or in early phase, I\nwould recommend that any in-protocol competing transactions explicitly\nsignal RBF.\n\n* Coinjoin/Cut-Through : if CPFP is employed as a fee-bumping strategy, if\nthe coinjoin transaction is still laying in network mempools, if a\nfee-bumping output is spendable by any protocol participant, this\nfee-bumping mechanism might be halted by a malicious protocol participant\nbroadcasting an low-feerate opt-out child. According to bip125, if the\ncoinjoin parent tx signals replaceability, the child transaction should be\nreplaceable, whatever its signaling. However Core doesn't apply this\npolicy. RBF of the coinjoin transaction itself should be used as a\nfallback. I'm not aware of any deployed coinjoin using such\n\"anyone-can-bump\" fee-bumping strategy.\n\n* Simple wallets : RBF engines' behaviors might be altered in ways not\nmatching the intent of their developers. I invite RBF engines dev to verify\nwhat those components are doing in the light of disclosed information.\n\n# Discovery\n\nWhile reviewing the LN dual-funding flow, I inquired on potential new DoS\nvectors introduced by relying on counterparty utxos in this following\nanalysis [1]. The second DoS issue \"RBF opt-out by a Counterparty\nDouble-Spend\" is relying on a malicious chain of transactions where the\nparent is signaling RBF opt-in through nSequence<=0xff_ff_ff_ff-1 but the\nchild, servicing as a pinning transaction, opt-out from the RBF policy.\nThis pinning trick conception was matching my understanding of Core code\nbut while reading again the specification, I observed that it was\ninconsistent from the inherited signaling mechanism as described in the\nbip's \"Summary\" section.\n\nAfter exercising the logic, I did submit the defect to Dave Harding, asking\nconfirmation of divergence between Bitcoin Core and BIP 125. Soon after, he\ndid confirm it and pointed that the defect has been there since the 2015's\nPR introducing the opt-in RBF, advicing to to consider security\nimplications for deployed second-layer protocols. After noticing the minor\nimplications for pinning attacks on second-stage LN transactions while\ntalking with Matt Corallo, I did disclose to the Bitcoin Core security list.\n\nMy initial report was recommending avoiding a covert patch in the mempool\nas risks of introducing DoS in this part of the codebase seemed to outweigh\nsecurity of deployed LN channels. This direction was agreed by the opinions\nexpressed on the security list. Beyond, there was a lack of agreement on\nhow to proceed with the disclosure as so far in the history project,\ntransaction relay policy have not been considered as strongly reliable.\nThough from now on, L2 protocols like Lightning are making assumptions on\nsubset of this policy for their safety, such as the highlighted RBF one.\n\nDefect was disclosed to the LN projects maintainers, informing them that\ncurrently in deployment anchor outputs protocol upgrade was mitigating\nagainst this defect though old channels will stay vulnerable. To the best\nof my knowledge, I didn't identify other deployed protocols of which coins\nsafety are impacted by this defect.\n\n# Ecosystem Observations\n\nThis long-standing defect with benign security implications provided an\nopportunity to exercise coordinated security disclosure across layers and\ndevelopment teams.\n\nIMO, it underlies few interesting points:\n* the lack of an established policy for coordinated security disclosures\nbetween a base layer implementation and its downstream projects\n* the lack of a clear methodology to identify downstream projects affected\nby a transaction relay policy wreckage\n* the lack of minimally-disruptive, emergency upgrade mechanisms\nimplemented by downstream projects [2]\n\nFinally, security implications for downstream projects provoked by base\nlayer issues shouldn't be minimized as they do have a risk of windblow on\nbase layer operations. I believe we should minimize risks of disaster\nscenarios such as thousands of LN channels manually closed by worried\noperators due to a non-concerted security disclosure, provoking mempool\ncloaks and disrupting regular transactions for a while.\n\n# Timeline\n\n2021-03-18 : Defect discovered, report to Dave Harding original author of\nbip125, confirmation of the defect\n2021-03-19 : Disclosure to the Bitcoin Core security list, Dave Harding,\nMatt Corallo, acknowledgment of the issue\n2021-04-05 : Disclosure to the LN projects maintainers (c-lightning, lnd,\neclair, electrum, rust-lightning)\n2021-04-28 : CVE-2021-31876 assigned\n2021-05-06 : Full disclosure to the bitcoin-dev mailing list\n\nI believe the information reported is correct and reflects the best of my\nknowledge, please point any shortcoming.\n\nCheers,\nAntoine\n\n[0]\nhttps://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002639.html\n[1] See \"On Mempool Funny Games against Multi-Party Funded Transactions\",\npublished 2021-05-06\n[2] Such as\nhttps://lists.linuxfoundation.org/pipermail/lightning-dev/2020-July/002763.html\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210506/80fed090/attachment-0001.html>"
            },
            {
                "author": "darosior",
                "date": "2021-05-09T07:56:43",
                "message_text_only": "Hi Antoine,\n\nThank you for the disclosure.\n\n> * Onchain DLC/Coinswap/Vault : Those contract protocols have also multiple stages of execution with time-sensitive transactions opening the way to pinning attacks. Those protocols being non-deployed or in early phase, I would recommend that any in-protocol competing transactions explicitly signal RBF.\n\nFor what it's worth, Revault isn't vulnerable as all transactions signal RBF and there is no way to sneak a non-signaling competing transaction (as long as the CSV isn't matured yet).\n\nThanks,\n\nAntoine (the other one)\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210509/73a6d27f/attachment-0001.html>"
            },
            {
                "author": "Ruben Somsen",
                "date": "2021-05-11T21:16:18",
                "message_text_only": "Hi Antoine,\n\nThanks for bringing this up.\n\nIt seems spacechains[0] are impacted by this. Simply explained, the idea is\nto allow for fee-bidding Blind Merged Mining[1] by creating one transaction\nfor each block, to which anyone can attach a block hash. The preferred\nmechanism utilizes sighash_anyprevout and is not affected, but there is\nalso a practical variant that could be used without requiring the\nanyprevout soft fork, which unfortunately does seem to be impacted. Here's\na brief description:\n\nTX0:\n\ninput 0\n\noutput 1a*\noutput 1b\n\nTX1:\n\ninput 1a*\n\noutput 2a**\noutput 2b\n\nTX2:\n\ninput 2a**\n\noutput 3a***\noutput 3b\n\nEtc.\n\nEvery TX has two outputs, one of which (\"a\") is used as the input for the\nnext TX (these are pre-signed and act as a covenant), resulting in a\ncontinuous chain of transactions. The other output (\"b\") can be spent by\nanyone, and is meant to CPFP the parent TX and, importantly, be RBF\nreplaceable by anyone. This allows whoever pays the highest CPFP fee to\n\"win the RBF auction\" and attach their TX to the output, containing the\nwinning spacechain block hash.\n\nWith inherited signalling, this works because each pre-signed TX is RBF\nenabled, so each CPFP transaction inherits RBF as well. But if inherited\nsignalling does not function, the first person who makes a CPFP transaction\ncan simply disable RBF and win the auction, thus breaking the intended\nfee-bidding mechanism.\n\nYou can also find a diagram in this spacechains presentation (timestamped\nlink): https://youtu.be/N2ow4Q34Jeg?t=2555\n\nAs it stands, this bug gets in the way of being able to deploy spacechains.\n\n-- Ruben Somsen\n\n\n\n[0]\nhttps://medium.com/@RubenSomsen/21-million-bitcoins-to-rule-all-sidechains-the-perpetual-one-way-peg-96cb2f8ac302\n\n[1] https://gist.github.com/RubenSomsen/5e4be6d18e5fa526b17d8b34906b16a5\n\n\n\n\nOn Sun, May 9, 2021 at 10:41 AM darosior via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hi Antoine,\n>\n>\n> Thank you for the disclosure.\n>\n>\n>\n> > * Onchain DLC/Coinswap/Vault : Those contract protocols have also\n> multiple stages of execution with time-sensitive transactions opening the\n> way to pinning attacks. Those protocols being non-deployed or in early\n> phase, I would recommend that any in-protocol competing transactions\n> explicitly signal RBF.\n>\n>\n> For what it's worth, Revault isn't vulnerable as all transactions signal\n> RBF and there is no way to sneak a non-signaling competing transaction (as\n> long as the CSV isn't matured yet).\n>\n>\n>\n> Thanks,\n>\n> Antoine (the other one)_______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210511/15b9d16c/attachment-0001.html>"
            },
            {
                "author": "Antoine Riard",
                "date": "2021-05-12T13:11:50",
                "message_text_only": "Hi Ruben,\n\nThanks for raising awareness about spacechains/BMM, I didn't have knowledge\nit was relying on a fee-based English auction to mine side-blocks. IIUC,\nit's another type of dynamic membership\nmulti-party signature where parties are block-signing with a fee proposal\ninstead of a PoW ? Though you still assume mainchain miners aren't\ncolluding and blindly applying the RBF policy\n\nEffectively, if you can block RBF by opting-out, parties are not competing\nanymore on feerate but on gaining propagation advantage in the tx-relay\ntopology. And such advantage is quite easy to\ngain with a modified client, mass-connecting and not enforcing inventory\nbroadcast interval timers.\n\n> As it stands, this bug gets in the way of being able to deploy\nspacechains.\n\nNoted, yet another good-point to transition towards full-rbf!\n\nCheers,\nAntoine\n\nLe mar. 11 mai 2021 \u00e0 17:16, Ruben Somsen <rsomsen at gmail.com> a \u00e9crit :\n\n> Hi Antoine,\n>\n> Thanks for bringing this up.\n>\n> It seems spacechains[0] are impacted by this. Simply explained, the idea\n> is to allow for fee-bidding Blind Merged Mining[1] by creating one\n> transaction for each block, to which anyone can attach a block hash. The\n> preferred mechanism utilizes sighash_anyprevout and is not affected, but\n> there is also a practical variant that could be used without requiring the\n> anyprevout soft fork, which unfortunately does seem to be impacted. Here's\n> a brief description:\n>\n> TX0:\n>\n> input 0\n>\n> output 1a*\n> output 1b\n>\n> TX1:\n>\n> input 1a*\n>\n> output 2a**\n> output 2b\n>\n> TX2:\n>\n> input 2a**\n>\n> output 3a***\n> output 3b\n>\n> Etc.\n>\n> Every TX has two outputs, one of which (\"a\") is used as the input for the\n> next TX (these are pre-signed and act as a covenant), resulting in a\n> continuous chain of transactions. The other output (\"b\") can be spent by\n> anyone, and is meant to CPFP the parent TX and, importantly, be RBF\n> replaceable by anyone. This allows whoever pays the highest CPFP fee to\n> \"win the RBF auction\" and attach their TX to the output, containing the\n> winning spacechain block hash.\n>\n> With inherited signalling, this works because each pre-signed TX is RBF\n> enabled, so each CPFP transaction inherits RBF as well. But if inherited\n> signalling does not function, the first person who makes a CPFP transaction\n> can simply disable RBF and win the auction, thus breaking the intended\n> fee-bidding mechanism.\n>\n> You can also find a diagram in this spacechains presentation (timestamped\n> link): https://youtu.be/N2ow4Q34Jeg?t=2555\n>\n> As it stands, this bug gets in the way of being able to deploy spacechains.\n>\n> -- Ruben Somsen\n>\n>\n>\n> [0]\n> https://medium.com/@RubenSomsen/21-million-bitcoins-to-rule-all-sidechains-the-perpetual-one-way-peg-96cb2f8ac302\n>\n> [1] https://gist.github.com/RubenSomsen/5e4be6d18e5fa526b17d8b34906b16a5\n>\n>\n>\n>\n> On Sun, May 9, 2021 at 10:41 AM darosior via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Hi Antoine,\n>>\n>>\n>> Thank you for the disclosure.\n>>\n>>\n>>\n>> > * Onchain DLC/Coinswap/Vault : Those contract protocols have also\n>> multiple stages of execution with time-sensitive transactions opening the\n>> way to pinning attacks. Those protocols being non-deployed or in early\n>> phase, I would recommend that any in-protocol competing transactions\n>> explicitly signal RBF.\n>>\n>>\n>> For what it's worth, Revault isn't vulnerable as all transactions signal\n>> RBF and there is no way to sneak a non-signaling competing transaction (as\n>> long as the CSV isn't matured yet).\n>>\n>>\n>>\n>> Thanks,\n>>\n>> Antoine (the other one)_______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210512/9045d4ec/attachment-0001.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2021-05-11T21:50:50",
                "message_text_only": "Is there a list of software impacted by this CVE, and the versions it is fixed \nin?\n\n(Note this isn't a vulnerability in Bitcoin Core; BIP125 is strictly a policy \nmatter, not part of the consensus rules and never safe to rely on in any \ncase...)\n\n\nOn Thursday 06 May 2021 13:55:53 Antoine Riard via bitcoin-dev wrote:\n> Hi,\n>\n> I'm writing to report a defect in Bitcoin Core bip125 logic with minor\n> security and operational implications for downstream projects. Though this\n> defect grieves Bitcoin Core nodes 0.12.0 and above, base layer safety isn't\n> impacted.\n>\n> # Problem\n>\n> Bip 125 specification describes the following signalling mechanism :\n>\n> \"\n> This policy specifies two ways a transaction can signal that it is\n> replaceable.\n>\n> * Explicit signaling: A transaction is considered to have opted in to\n> allowing replacement of itself if any of its inputs have an nSequence\n> number less than (0xffffffff - 1).\n>\n> * Inherited signaling: Transactions that don't explicitly signal\n> replaceability are replaceable under this policy for as long as any one of\n> their ancestors signals replaceability and remains unconfirmed.\n>\n> One or more transactions currently in the mempool (original transactions)\n> will be replaced by a new transaction (replacement transaction) that spends\n> one or more of the same inputs if,\n>\n> # The original transactions signal replaceability explicitly or through\n> inheritance as described in the above Summary section.\n> \"\n>\n> An unconfirmed child transaction with nSequence = 0xff_ff_ff_ff spending an\n> unconfirmed parent with nSequence <= 0xff_ff_ff_fd should be replaceable as\n> the child transaction signals \"through inheritance\". However, the\n> replacement code as implemented in Core's `PreChecks()` shows that this\n> behavior isn't  enforced and Core's mempool rejects replacement attempts of\n> an unconfirmed child transaction.\n>\n> Branch asserting the behavior is here :\n> https://github.com/ariard/bitcoin/commits/2021-03-test-rbf\n>\n> # Solution\n>\n> The defect has not been patched.\n>\n> # Downstream Projects Affected\n>\n> * LN : State-of-the-art pinning attacks against second-stage HTLCs\n> transactions were thought to be only possible by exploiting RBF rule 3 on\n> the necessity of a higher absolute fee [0]. However, this replacement\n> defect opens the way for an attacker to only pin with an opt-out child\n> without a higher fee than the honest competing transaction. This lowers the\n> cost of attack as the malicious pinning transaction only has to be above\n> mempools'min feerate. This also increases odds of attack success for a\n> reduced feerate diminishes odds of confirmation ending the pinning.\n>\n> A functional test demo illustrating cases is available on this branch:\n> https://github.com/ariard/bitcoin/commits/2021-05-htlc-preimage-pinnings\n>\n> LN nodes operators concerned by this defect might favor anchor outputs\n> channels, fully mitigating this specific pinning vector.\n>\n> * Onchain DLC/Coinswap/Vault : Those contract protocols have also multiple\n> stages of execution with time-sensitive transactions opening the way to\n> pinning attacks. Those protocols being non-deployed or in early phase, I\n> would recommend that any in-protocol competing transactions explicitly\n> signal RBF.\n>\n> * Coinjoin/Cut-Through : if CPFP is employed as a fee-bumping strategy, if\n> the coinjoin transaction is still laying in network mempools, if a\n> fee-bumping output is spendable by any protocol participant, this\n> fee-bumping mechanism might be halted by a malicious protocol participant\n> broadcasting an low-feerate opt-out child. According to bip125, if the\n> coinjoin parent tx signals replaceability, the child transaction should be\n> replaceable, whatever its signaling. However Core doesn't apply this\n> policy. RBF of the coinjoin transaction itself should be used as a\n> fallback. I'm not aware of any deployed coinjoin using such\n> \"anyone-can-bump\" fee-bumping strategy.\n>\n> * Simple wallets : RBF engines' behaviors might be altered in ways not\n> matching the intent of their developers. I invite RBF engines dev to verify\n> what those components are doing in the light of disclosed information.\n>\n> # Discovery\n>\n> While reviewing the LN dual-funding flow, I inquired on potential new DoS\n> vectors introduced by relying on counterparty utxos in this following\n> analysis [1]. The second DoS issue \"RBF opt-out by a Counterparty\n> Double-Spend\" is relying on a malicious chain of transactions where the\n> parent is signaling RBF opt-in through nSequence<=0xff_ff_ff_ff-1 but the\n> child, servicing as a pinning transaction, opt-out from the RBF policy.\n> This pinning trick conception was matching my understanding of Core code\n> but while reading again the specification, I observed that it was\n> inconsistent from the inherited signaling mechanism as described in the\n> bip's \"Summary\" section.\n>\n> After exercising the logic, I did submit the defect to Dave Harding, asking\n> confirmation of divergence between Bitcoin Core and BIP 125. Soon after, he\n> did confirm it and pointed that the defect has been there since the 2015's\n> PR introducing the opt-in RBF, advicing to to consider security\n> implications for deployed second-layer protocols. After noticing the minor\n> implications for pinning attacks on second-stage LN transactions while\n> talking with Matt Corallo, I did disclose to the Bitcoin Core security\n> list.\n>\n> My initial report was recommending avoiding a covert patch in the mempool\n> as risks of introducing DoS in this part of the codebase seemed to outweigh\n> security of deployed LN channels. This direction was agreed by the opinions\n> expressed on the security list. Beyond, there was a lack of agreement on\n> how to proceed with the disclosure as so far in the history project,\n> transaction relay policy have not been considered as strongly reliable.\n> Though from now on, L2 protocols like Lightning are making assumptions on\n> subset of this policy for their safety, such as the highlighted RBF one.\n>\n> Defect was disclosed to the LN projects maintainers, informing them that\n> currently in deployment anchor outputs protocol upgrade was mitigating\n> against this defect though old channels will stay vulnerable. To the best\n> of my knowledge, I didn't identify other deployed protocols of which coins\n> safety are impacted by this defect.\n>\n> # Ecosystem Observations\n>\n> This long-standing defect with benign security implications provided an\n> opportunity to exercise coordinated security disclosure across layers and\n> development teams.\n>\n> IMO, it underlies few interesting points:\n> * the lack of an established policy for coordinated security disclosures\n> between a base layer implementation and its downstream projects\n> * the lack of a clear methodology to identify downstream projects affected\n> by a transaction relay policy wreckage\n> * the lack of minimally-disruptive, emergency upgrade mechanisms\n> implemented by downstream projects [2]\n>\n> Finally, security implications for downstream projects provoked by base\n> layer issues shouldn't be minimized as they do have a risk of windblow on\n> base layer operations. I believe we should minimize risks of disaster\n> scenarios such as thousands of LN channels manually closed by worried\n> operators due to a non-concerted security disclosure, provoking mempool\n> cloaks and disrupting regular transactions for a while.\n>\n> # Timeline\n>\n> 2021-03-18 : Defect discovered, report to Dave Harding original author of\n> bip125, confirmation of the defect\n> 2021-03-19 : Disclosure to the Bitcoin Core security list, Dave Harding,\n> Matt Corallo, acknowledgment of the issue\n> 2021-04-05 : Disclosure to the LN projects maintainers (c-lightning, lnd,\n> eclair, electrum, rust-lightning)\n> 2021-04-28 : CVE-2021-31876 assigned\n> 2021-05-06 : Full disclosure to the bitcoin-dev mailing list\n>\n> I believe the information reported is correct and reflects the best of my\n> knowledge, please point any shortcoming.\n>\n> Cheers,\n> Antoine\n>\n> [0]\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002639\n>.html [1] See \"On Mempool Funny Games against Multi-Party Funded\n> Transactions\", published 2021-05-06\n> [2] Such as\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-July/002763.\n>html"
            },
            {
                "author": "Antoine Riard",
                "date": "2021-05-12T13:19:37",
                "message_text_only": "Hi Luke,\n\n> Is there a list of software impacted by this CVE, and the versions it is\nfixed\nin?\n\nSpeaking only for LN clients, as I think they're the only ones deployed\nwith real funds at stake. Defect is mitigated by new \"anchor\" channel type,\nforcing RBF-signaling on all transactions.\n* lnd v0.12 \"anchor\" activated by default, lnd v0.10 \"anchor\" activated by\nuser flag\n* c-lightning, no release yet with \"anchor\" support\n* eclair, no release yet with \"anchor\" support\n* rust-lightning, no release yet with \"anchor\" support\n\n> (Note this isn't a vulnerability in Bitcoin Core; BIP125 is strictly a\npolicy\nmatter, not part of the consensus rules and never safe to rely on in any\ncase...)\n\nAnswering two-folds.\n\nFirst I somehow agree it's not a \"vulnerability\" in Bitcoin Core but at\nleast a clear lack of compliance to a heavily relied-on bitcoin standard\nthrough the ecosystem. Even if BIPs are descriptive documentation and not\nprescriptive, I don't think we have guidelines for now on how to proceed\nwith identified flaws with security implications for downstream projects.\n\nShould the Bitcoin Core project adopt a security bulletin or advisories for\nsecurity-related info pertinent for downstream ?\n\nSecondly, opinions were divergent on the security list on how to report on\nthis. On one side, tx-relay and mempool acceptance rules aren't considered\nas reliable or strongly normative and purely a matter of node's policy.\n\nOn the other side, we have more and more deployed Bitcoin\napplications/protocols (e.g LN, vaults, ...) directly making security\nassumptions on them. Even if we consider such beliefs misplaced or\ningenious, we're laying on top of a permissionless system and can't really\nprevent developers and users from deploying such softwares.\n\nShould we stay on this statu quo and invite such Bitcoin users to deploy\ntheir own overlay network for transaction propagation satisfying their\nadvanced requirements, at the price of far-less censorship-resistance and a\nmore opaque fee market for everyone ?\n\nOr instead qualify a new, third set of rules between consensus and pure\n\"policy\", especially crafted to support Bitcoin applications requiring\ntransparency and stability of tx-relay and mempool acceptance rules, at the\nprice of ossifying some part of full-nodes ? Of course, the degree of\nnormativity we could guarantee for those rules is making them compatible\nwith economic incentives of everyone. Hopefully fostering their wide\ndissemination across full-node implementations and miner mempools.\n\nYou have good arguments and trade-offs on both sides.\n\nOverall, I agree that describing tx-relay/mempool rules as non-normative,\nnon-reliable is the most understood mental model among developers *today*.\nThat said, I would like to underscore that this model might not be adequate\nin light of recent ecosystem evolutions and reveal itself a bit crippling\nthe future...\n\nCheers,\nAntoine\n\nLe mar. 11 mai 2021 \u00e0 17:51, Luke Dashjr <luke at dashjr.org> a \u00e9crit :\n\n> Is there a list of software impacted by this CVE, and the versions it is\n> fixed\n> in?\n>\n> (Note this isn't a vulnerability in Bitcoin Core; BIP125 is strictly a\n> policy\n> matter, not part of the consensus rules and never safe to rely on in any\n> case...)\n>\n>\n> On Thursday 06 May 2021 13:55:53 Antoine Riard via bitcoin-dev wrote:\n> > Hi,\n> >\n> > I'm writing to report a defect in Bitcoin Core bip125 logic with minor\n> > security and operational implications for downstream projects. Though\n> this\n> > defect grieves Bitcoin Core nodes 0.12.0 and above, base layer safety\n> isn't\n> > impacted.\n> >\n> > # Problem\n> >\n> > Bip 125 specification describes the following signalling mechanism :\n> >\n> > \"\n> > This policy specifies two ways a transaction can signal that it is\n> > replaceable.\n> >\n> > * Explicit signaling: A transaction is considered to have opted in to\n> > allowing replacement of itself if any of its inputs have an nSequence\n> > number less than (0xffffffff - 1).\n> >\n> > * Inherited signaling: Transactions that don't explicitly signal\n> > replaceability are replaceable under this policy for as long as any one\n> of\n> > their ancestors signals replaceability and remains unconfirmed.\n> >\n> > One or more transactions currently in the mempool (original transactions)\n> > will be replaced by a new transaction (replacement transaction) that\n> spends\n> > one or more of the same inputs if,\n> >\n> > # The original transactions signal replaceability explicitly or through\n> > inheritance as described in the above Summary section.\n> > \"\n> >\n> > An unconfirmed child transaction with nSequence = 0xff_ff_ff_ff spending\n> an\n> > unconfirmed parent with nSequence <= 0xff_ff_ff_fd should be replaceable\n> as\n> > the child transaction signals \"through inheritance\". However, the\n> > replacement code as implemented in Core's `PreChecks()` shows that this\n> > behavior isn't  enforced and Core's mempool rejects replacement attempts\n> of\n> > an unconfirmed child transaction.\n> >\n> > Branch asserting the behavior is here :\n> > https://github.com/ariard/bitcoin/commits/2021-03-test-rbf\n> >\n> > # Solution\n> >\n> > The defect has not been patched.\n> >\n> > # Downstream Projects Affected\n> >\n> > * LN : State-of-the-art pinning attacks against second-stage HTLCs\n> > transactions were thought to be only possible by exploiting RBF rule 3 on\n> > the necessity of a higher absolute fee [0]. However, this replacement\n> > defect opens the way for an attacker to only pin with an opt-out child\n> > without a higher fee than the honest competing transaction. This lowers\n> the\n> > cost of attack as the malicious pinning transaction only has to be above\n> > mempools'min feerate. This also increases odds of attack success for a\n> > reduced feerate diminishes odds of confirmation ending the pinning.\n> >\n> > A functional test demo illustrating cases is available on this branch:\n> > https://github.com/ariard/bitcoin/commits/2021-05-htlc-preimage-pinnings\n> >\n> > LN nodes operators concerned by this defect might favor anchor outputs\n> > channels, fully mitigating this specific pinning vector.\n> >\n> > * Onchain DLC/Coinswap/Vault : Those contract protocols have also\n> multiple\n> > stages of execution with time-sensitive transactions opening the way to\n> > pinning attacks. Those protocols being non-deployed or in early phase, I\n> > would recommend that any in-protocol competing transactions explicitly\n> > signal RBF.\n> >\n> > * Coinjoin/Cut-Through : if CPFP is employed as a fee-bumping strategy,\n> if\n> > the coinjoin transaction is still laying in network mempools, if a\n> > fee-bumping output is spendable by any protocol participant, this\n> > fee-bumping mechanism might be halted by a malicious protocol participant\n> > broadcasting an low-feerate opt-out child. According to bip125, if the\n> > coinjoin parent tx signals replaceability, the child transaction should\n> be\n> > replaceable, whatever its signaling. However Core doesn't apply this\n> > policy. RBF of the coinjoin transaction itself should be used as a\n> > fallback. I'm not aware of any deployed coinjoin using such\n> > \"anyone-can-bump\" fee-bumping strategy.\n> >\n> > * Simple wallets : RBF engines' behaviors might be altered in ways not\n> > matching the intent of their developers. I invite RBF engines dev to\n> verify\n> > what those components are doing in the light of disclosed information.\n> >\n> > # Discovery\n> >\n> > While reviewing the LN dual-funding flow, I inquired on potential new DoS\n> > vectors introduced by relying on counterparty utxos in this following\n> > analysis [1]. The second DoS issue \"RBF opt-out by a Counterparty\n> > Double-Spend\" is relying on a malicious chain of transactions where the\n> > parent is signaling RBF opt-in through nSequence<=0xff_ff_ff_ff-1 but the\n> > child, servicing as a pinning transaction, opt-out from the RBF policy.\n> > This pinning trick conception was matching my understanding of Core code\n> > but while reading again the specification, I observed that it was\n> > inconsistent from the inherited signaling mechanism as described in the\n> > bip's \"Summary\" section.\n> >\n> > After exercising the logic, I did submit the defect to Dave Harding,\n> asking\n> > confirmation of divergence between Bitcoin Core and BIP 125. Soon after,\n> he\n> > did confirm it and pointed that the defect has been there since the\n> 2015's\n> > PR introducing the opt-in RBF, advicing to to consider security\n> > implications for deployed second-layer protocols. After noticing the\n> minor\n> > implications for pinning attacks on second-stage LN transactions while\n> > talking with Matt Corallo, I did disclose to the Bitcoin Core security\n> > list.\n> >\n> > My initial report was recommending avoiding a covert patch in the mempool\n> > as risks of introducing DoS in this part of the codebase seemed to\n> outweigh\n> > security of deployed LN channels. This direction was agreed by the\n> opinions\n> > expressed on the security list. Beyond, there was a lack of agreement on\n> > how to proceed with the disclosure as so far in the history project,\n> > transaction relay policy have not been considered as strongly reliable.\n> > Though from now on, L2 protocols like Lightning are making assumptions on\n> > subset of this policy for their safety, such as the highlighted RBF one.\n> >\n> > Defect was disclosed to the LN projects maintainers, informing them that\n> > currently in deployment anchor outputs protocol upgrade was mitigating\n> > against this defect though old channels will stay vulnerable. To the best\n> > of my knowledge, I didn't identify other deployed protocols of which\n> coins\n> > safety are impacted by this defect.\n> >\n> > # Ecosystem Observations\n> >\n> > This long-standing defect with benign security implications provided an\n> > opportunity to exercise coordinated security disclosure across layers and\n> > development teams.\n> >\n> > IMO, it underlies few interesting points:\n> > * the lack of an established policy for coordinated security disclosures\n> > between a base layer implementation and its downstream projects\n> > * the lack of a clear methodology to identify downstream projects\n> affected\n> > by a transaction relay policy wreckage\n> > * the lack of minimally-disruptive, emergency upgrade mechanisms\n> > implemented by downstream projects [2]\n> >\n> > Finally, security implications for downstream projects provoked by base\n> > layer issues shouldn't be minimized as they do have a risk of windblow on\n> > base layer operations. I believe we should minimize risks of disaster\n> > scenarios such as thousands of LN channels manually closed by worried\n> > operators due to a non-concerted security disclosure, provoking mempool\n> > cloaks and disrupting regular transactions for a while.\n> >\n> > # Timeline\n> >\n> > 2021-03-18 : Defect discovered, report to Dave Harding original author of\n> > bip125, confirmation of the defect\n> > 2021-03-19 : Disclosure to the Bitcoin Core security list, Dave Harding,\n> > Matt Corallo, acknowledgment of the issue\n> > 2021-04-05 : Disclosure to the LN projects maintainers (c-lightning, lnd,\n> > eclair, electrum, rust-lightning)\n> > 2021-04-28 : CVE-2021-31876 assigned\n> > 2021-05-06 : Full disclosure to the bitcoin-dev mailing list\n> >\n> > I believe the information reported is correct and reflects the best of my\n> > knowledge, please point any shortcoming.\n> >\n> > Cheers,\n> > Antoine\n> >\n> > [0]\n> >\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002639\n> >.html [1] See \"On Mempool Funny Games against Multi-Party Funded\n> > Transactions\", published 2021-05-06\n> > [2] Such as\n> >\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-July/002763\n> .\n> >html\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210512/0338199b/attachment-0001.html>"
            },
            {
                "author": "Olaoluwa Osuntokun",
                "date": "2021-05-13T01:06:21",
                "message_text_only": "Hi Antoine,\n\nExcellent work as usual!\n\nWhen this was initially reported, I suspected that btcd wasn't actually\naffected by this issue (proper RBF inheritance). I wrote a unit test earlier\ntoday to confirm this: https://github.com/btcsuite/btcd/pull/1719.\n\nI'm particularly fond of btcd's implementation of RBF signalling:\nhttps://github.com/btcsuite/btcd/blob/master/mempool/mempool.go#L603.\n\nThe separation of concerns here makes it (IMO) much easier to follow (as\nwell as uint test) compared to bitcoind's `MemPoolAccept::PreChecks`\nfunction. Its recursive nature makes the inherited replaceability explicit.\n\n-- Laolu\n\n\nOn Thu, May 6, 2021 at 8:49 AM Antoine Riard via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hi,\n>\n> I'm writing to report a defect in Bitcoin Core bip125 logic with minor\n> security and operational implications for downstream projects. Though this\n> defect grieves Bitcoin Core nodes 0.12.0 and above, base layer safety isn't\n> impacted.\n>\n> # Problem\n>\n> Bip 125 specification describes the following signalling mechanism :\n>\n> \"\n> This policy specifies two ways a transaction can signal that it is\n> replaceable.\n>\n> * Explicit signaling: A transaction is considered to have opted in to\n> allowing replacement of itself if any of its inputs have an nSequence\n> number less than (0xffffffff - 1).\n>\n> * Inherited signaling: Transactions that don't explicitly signal\n> replaceability are replaceable under this policy for as long as any one of\n> their ancestors signals replaceability and remains unconfirmed.\n>\n> One or more transactions currently in the mempool (original transactions)\n> will be replaced by a new transaction (replacement transaction) that spends\n> one or more of the same inputs if,\n>\n> # The original transactions signal replaceability explicitly or through\n> inheritance as described in the above Summary section.\n> \"\n>\n> An unconfirmed child transaction with nSequence = 0xff_ff_ff_ff spending\n> an unconfirmed parent with nSequence <= 0xff_ff_ff_fd should be replaceable\n> as the child transaction signals \"through inheritance\". However, the\n> replacement code as implemented in Core's `PreChecks()` shows that this\n> behavior isn't  enforced and Core's mempool rejects replacement attempts of\n> an unconfirmed child transaction.\n>\n> Branch asserting the behavior is here :\n> https://github.com/ariard/bitcoin/commits/2021-03-test-rbf\n>\n> # Solution\n>\n> The defect has not been patched.\n>\n> # Downstream Projects Affected\n>\n> * LN : State-of-the-art pinning attacks against second-stage HTLCs\n> transactions were thought to be only possible by exploiting RBF rule 3 on\n> the necessity of a higher absolute fee [0]. However, this replacement\n> defect opens the way for an attacker to only pin with an opt-out child\n> without a higher fee than the honest competing transaction. This lowers the\n> cost of attack as the malicious pinning transaction only has to be above\n> mempools'min feerate. This also increases odds of attack success for a\n> reduced feerate diminishes odds of confirmation ending the pinning.\n>\n> A functional test demo illustrating cases is available on this branch:\n> https://github.com/ariard/bitcoin/commits/2021-05-htlc-preimage-pinnings\n>\n> LN nodes operators concerned by this defect might favor anchor outputs\n> channels, fully mitigating this specific pinning vector.\n>\n> * Onchain DLC/Coinswap/Vault : Those contract protocols have also multiple\n> stages of execution with time-sensitive transactions opening the way to\n> pinning attacks. Those protocols being non-deployed or in early phase, I\n> would recommend that any in-protocol competing transactions explicitly\n> signal RBF.\n>\n> * Coinjoin/Cut-Through : if CPFP is employed as a fee-bumping strategy, if\n> the coinjoin transaction is still laying in network mempools, if a\n> fee-bumping output is spendable by any protocol participant, this\n> fee-bumping mechanism might be halted by a malicious protocol participant\n> broadcasting an low-feerate opt-out child. According to bip125, if the\n> coinjoin parent tx signals replaceability, the child transaction should be\n> replaceable, whatever its signaling. However Core doesn't apply this\n> policy. RBF of the coinjoin transaction itself should be used as a\n> fallback. I'm not aware of any deployed coinjoin using such\n> \"anyone-can-bump\" fee-bumping strategy.\n>\n> * Simple wallets : RBF engines' behaviors might be altered in ways not\n> matching the intent of their developers. I invite RBF engines dev to verify\n> what those components are doing in the light of disclosed information.\n>\n> # Discovery\n>\n> While reviewing the LN dual-funding flow, I inquired on potential new DoS\n> vectors introduced by relying on counterparty utxos in this following\n> analysis [1]. The second DoS issue \"RBF opt-out by a Counterparty\n> Double-Spend\" is relying on a malicious chain of transactions where the\n> parent is signaling RBF opt-in through nSequence<=0xff_ff_ff_ff-1 but the\n> child, servicing as a pinning transaction, opt-out from the RBF policy.\n> This pinning trick conception was matching my understanding of Core code\n> but while reading again the specification, I observed that it was\n> inconsistent from the inherited signaling mechanism as described in the\n> bip's \"Summary\" section.\n>\n> After exercising the logic, I did submit the defect to Dave Harding,\n> asking confirmation of divergence between Bitcoin Core and BIP 125. Soon\n> after, he did confirm it and pointed that the defect has been there since\n> the 2015's PR introducing the opt-in RBF, advicing to to consider security\n> implications for deployed second-layer protocols. After noticing the minor\n> implications for pinning attacks on second-stage LN transactions while\n> talking with Matt Corallo, I did disclose to the Bitcoin Core security list.\n>\n> My initial report was recommending avoiding a covert patch in the mempool\n> as risks of introducing DoS in this part of the codebase seemed to outweigh\n> security of deployed LN channels. This direction was agreed by the opinions\n> expressed on the security list. Beyond, there was a lack of agreement on\n> how to proceed with the disclosure as so far in the history project,\n> transaction relay policy have not been considered as strongly reliable.\n> Though from now on, L2 protocols like Lightning are making assumptions on\n> subset of this policy for their safety, such as the highlighted RBF one.\n>\n> Defect was disclosed to the LN projects maintainers, informing them that\n> currently in deployment anchor outputs protocol upgrade was mitigating\n> against this defect though old channels will stay vulnerable. To the best\n> of my knowledge, I didn't identify other deployed protocols of which coins\n> safety are impacted by this defect.\n>\n> # Ecosystem Observations\n>\n> This long-standing defect with benign security implications provided an\n> opportunity to exercise coordinated security disclosure across layers and\n> development teams.\n>\n> IMO, it underlies few interesting points:\n> * the lack of an established policy for coordinated security disclosures\n> between a base layer implementation and its downstream projects\n> * the lack of a clear methodology to identify downstream projects affected\n> by a transaction relay policy wreckage\n> * the lack of minimally-disruptive, emergency upgrade mechanisms\n> implemented by downstream projects [2]\n>\n> Finally, security implications for downstream projects provoked by base\n> layer issues shouldn't be minimized as they do have a risk of windblow on\n> base layer operations. I believe we should minimize risks of disaster\n> scenarios such as thousands of LN channels manually closed by worried\n> operators due to a non-concerted security disclosure, provoking mempool\n> cloaks and disrupting regular transactions for a while.\n>\n> # Timeline\n>\n> 2021-03-18 : Defect discovered, report to Dave Harding original author of\n> bip125, confirmation of the defect\n> 2021-03-19 : Disclosure to the Bitcoin Core security list, Dave Harding,\n> Matt Corallo, acknowledgment of the issue\n> 2021-04-05 : Disclosure to the LN projects maintainers (c-lightning, lnd,\n> eclair, electrum, rust-lightning)\n> 2021-04-28 : CVE-2021-31876 assigned\n> 2021-05-06 : Full disclosure to the bitcoin-dev mailing list\n>\n> I believe the information reported is correct and reflects the best of my\n> knowledge, please point any shortcoming.\n>\n> Cheers,\n> Antoine\n>\n> [0]\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002639.html\n> [1] See \"On Mempool Funny Games against Multi-Party Funded Transactions\",\n> published 2021-05-06\n> [2] Such as\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-July/002763.html\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210512/8b2f3e0b/attachment-0001.html>"
            }
        ],
        "thread_summary": {
            "title": "Full Disclosure: CVE-2021-31876 Defect in Bitcoin Core's bip125 logic",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Antoine Riard",
                "darosior",
                "Olaoluwa Osuntokun",
                "Luke Dashjr",
                "Ruben Somsen"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 44696
        }
    },
    {
        "title": "[bitcoin-dev] Opinion on proof of stake in future",
        "thread_messages": [
            {
                "author": "SatoshiSingh",
                "date": "2021-05-07T17:17:24",
                "message_text_only": "Hello list,\n\nI am a lurker here and like many of you I worry about the energy usage of bitcoin mining. I understand a lot mining happens with renewable resources but the impact is still high.\n\nI want to get your opinion on implementing proof of stake for bitcoin mining in future. For now, proof of stake is still untested and not battle tested like proof of work. Though someday it will be.\n\nIn the following years we'll be seeing proof of stake being implemented. Smaller networks can test PoS which is a luxury bitcoin can't afford. Here's how I see this the possibilities:\n\n1 - Proof of stake isn't a good enough security mechanism\n2 - Proof of state is a good security mechanism and works as intended\n\nIF PoS turns out to be good after battle testing, would you consider implementing it for Bitcoin? I understand this would invoke a lot of controversies and a hard fork that no one likes. But its important enough to consider a hard fork. What are your opinions provided PoS does work?\n\nLove from India."
            },
            {
                "author": "Eric Voskuil",
                "date": "2021-05-07T23:04:19",
                "message_text_only": "https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Stake-Fallacy\n\n> On May 7, 2021, at 15:50, SatoshiSingh via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> \n> \ufeffHello list,\n> \n> I am a lurker here and like many of you I worry about the energy usage of bitcoin mining. I understand a lot mining happens with renewable resources but the impact is still high.\n> \n> I want to get your opinion on implementing proof of stake for bitcoin mining in future. For now, proof of stake is still untested and not battle tested like proof of work. Though someday it will be.\n> \n> In the following years we'll be seeing proof of stake being implemented. Smaller networks can test PoS which is a luxury bitcoin can't afford. Here's how I see this the possibilities:\n> \n> 1 - Proof of stake isn't a good enough security mechanism\n> 2 - Proof of state is a good security mechanism and works as intended\n> \n> IF PoS turns out to be good after battle testing, would you consider implementing it for Bitcoin? I understand this would invoke a lot of controversies and a hard fork that no one likes. But its important enough to consider a hard fork. What are your opinions provided PoS does work?\n> \n> Love from India.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210507/ed773f98/attachment.html>"
            },
            {
                "author": "Karl",
                "date": "2021-05-08T14:33:31",
                "message_text_only": "Bitcoin would get better mainstream public reputation if the block reward\nwere reduced to reduce mining.  This would quickly and easily reduce energy\nexpenditure.\n\nA system would be needed to do that with consensus, to make it political.\nFor example, making a norm of extending the block reward termination\nfarther into the future, spreading the remaining coins out more thinly, but\nnever doing the opposite.\n\nPoS can be made to work but it's hard to do so amid such disagreement.  It\nis so hard to express one's relevant information concisely and effectively.\n\nI recommended earlier finding or hiring an experienced facilitator who\ncould make sure all concerns around the chain are included by engaging all\nthe dialog more productively.  Somebody would need to be available to do\nthe work of finding such a person and any compensation they might need.\n\nOn Fri, May 7, 2021, 7:05 PM Eric Voskuil via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Stake-Fallacy\n>\n\nThis wiki states things as impossible but does not at all demonstrate them\nto be so.\n\nThe assumption that something is impossible always relies on many other\nassumptions, and the reader may have different ones from the author.\n\nQuote from Proof-of-Stake-Fallacy\n> In Other Means Principle it is shown that censorship resistance depends\non people paying miners to overpower the censor.\n> Overcoming censorship is not possible in a PoS system, as the censor has\nacquired majority stake and cannot be unseated.\n\nIf the link in that text is followed you get,\n\nQuote from Other Means Principle:\n> Given that mining is necessarily anonymous, there is no way for the\neconomy to prevent state participation in mining.\n\nThe article then goes on to assume this, but \"no way\" is a circular link\nback to Proof-of-Stake-Fallacy!\n\nNever is it demonstrated that a censor will always be able to have majority\nstake.  In a PoS system, they would have to be able to form false chain\nhistories to do that.  In a PoW system, they would have to outcompete the\nwork.\n\nThese are not inherent limitations.  The whole world is open.  Consider a\nproof of work algorithm that requires the freeing of prisoners: a state a\nvery different state if it does this.  Or a communication protocol that\nalready cannot be intercepted.  These things are exotically hard, but not\nimpossible, and show that the logic of the articles is not valid.\n\nAnother random idea: incentivising out-of-band channels, for example.\nMining blocks based on finding and uniting illegitimate forks.  Now a chain\nfunctions by defeating its own censorship.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210508/0f6fc4e7/attachment.html>"
            },
            {
                "author": "R E Broadley",
                "date": "2021-05-09T10:21:17",
                "message_text_only": "On Sat, 8 May 2021 at 15:36, Karl via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n> Bitcoin would get better mainstream public reputation if the block reward were reduced to reduce mining.  This would quickly and easily reduce energy expenditure.\n\nYou're in luck then, as the block reward is being reduced by 50%, every 4 years."
            },
            {
                "author": "Karl",
                "date": "2021-05-09T10:59:46",
                "message_text_only": "On Sun, May 9, 2021, 6:21 AM R E Broadley <\nrebroad+linuxfoundation.org at gmail.com> wrote:\n\n> On Sat, 8 May 2021 at 15:36, Karl via bitcoin-dev\n> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> > Bitcoin would get better mainstream public reputation if the block\n> reward were reduced to reduce mining.  This would quickly and easily reduce\n> energy expenditure.\n>\n> You're in luck then, as the block reward is being reduced by 50%, every 4\n> years.\n>\n\nI'm aware of that and it is why I mentioned \"block reward termination\" in\nthe next paragraph... did you receive the rest of my message?  Or why do\nyou say this?\n\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210509/6cd06ec8/attachment-0001.html>"
            },
            {
                "author": "Jeremy",
                "date": "2021-05-07T23:19:48",
                "message_text_only": "Proof-of-stake tends towards oligopolistic control, which is antithetical\nto bitcoin.\n\nProof-of-stake also has some other security issues that make it a bad\nsubstitute for Proof-of-work with respect to equivocation (reorgs).\n\nOverall you'll find me *personally* in the camp that it's OK to explore\nnon-PoW means of consensus long term that can keep the network in consensus\nin a more capital efficient manner, but that proof-of-stake is not such a\nsubstitute. Other Bitcoiners will disagree with this invariably, but if you\ntruly have a novel solution for Byzantine Generals, it would be a major\ncontribution to not just Bitcoin but the field of computer science as a\nwhole and would likely get due consideration.\n\nWhat's difficult is that Bitcoin PoW has some very specific properties that\nmay or may not be desirable around e.g. fairness that might be difficult to\nensure in other systems, so there is probably more to the puzzle than just\nconsensus.\n--\n@JeremyRubin <https://twitter.com/JeremyRubin>\n<https://twitter.com/JeremyRubin>\n\n\nOn Fri, May 7, 2021 at 3:50 PM SatoshiSingh via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hello list,\n>\n> I am a lurker here and like many of you I worry about the energy usage of\n> bitcoin mining. I understand a lot mining happens with renewable resources\n> but the impact is still high.\n>\n> I want to get your opinion on implementing proof of stake for bitcoin\n> mining in future. For now, proof of stake is still untested and not battle\n> tested like proof of work. Though someday it will be.\n>\n> In the following years we'll be seeing proof of stake being implemented.\n> Smaller networks can test PoS which is a luxury bitcoin can't afford.\n> Here's how I see this the possibilities:\n>\n> 1 - Proof of stake isn't a good enough security mechanism\n> 2 - Proof of state is a good security mechanism and works as intended\n>\n> IF PoS turns out to be good after battle testing, would you consider\n> implementing it for Bitcoin? I understand this would invoke a lot of\n> controversies and a hard fork that no one likes. But its important enough\n> to consider a hard fork. What are your opinions provided PoS does work?\n>\n> Love from India.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210507/bdc3653f/attachment.html>"
            },
            {
                "author": "honest69abe",
                "date": "2021-05-08T02:40:34",
                "message_text_only": "And to address your energy usage concern:\n\nEnergy usage, in-and-of-itself, is nothing to be ashamed of!! It's the composition of that energy usage that could be shameful. There is much debate currently about what that composition is for Bitcoin, but those estimates range from between 20-80% renewable. However, where it currently stands is largely irrelevant...\n\nWhat is more important;\nBitcoin mining introduces the first free-market demand for the cheapest energy source.\n\nI think most people are unaware of how impactful this is.\n\nRenewable energies have crossed over into being the cheapest forms of energy and are still declining at steep rates. Estimates from the International Renewable Energy Agency breakdown the Levelized Cost of Energy as such: Geothermal ($0.05-0.1/kWh), Coal (0.06-0.07), natural gas (0.04-0.07), wind (0.02-0.05), solar (0.03-0.04), hydro (0.01-0.04).\n\nThus, Bitcoin is the first intrinsic incentive for humans to invest in cheapest energy, which happen to be the cleanest forms of energy.\n\nBitcoin as a free-market energy generation incentive that doesn't also optimize for human habitability will be civilizationally changing. E.g. solar farms in deserts, high-altitude wind.\n\nWelcome to any thoughts and criticisms of my thinking here\n\nSent from ProtonMail mobile\n\n-------- Original Message --------\nOn May 7, 2021, 7:19 PM, Jeremy via bitcoin-dev wrote:\n\n> Proof-of-stake tends towards oligopolistic control, which is antithetical to bitcoin.\n>\n> Proof-of-stake also has some other security issues that make it a bad substitute for Proof-of-work with respect to equivocation (reorgs).\n>\n> Overall you'll find me personally in the camp that it's OK to explore non-PoW means of consensus long term that can keep the network in consensus in a more capital efficient manner, but that proof-of-stake is not such a substitute. Other Bitcoiners will disagree with this invariably, but if you truly have a novel solution for Byzantine Generals, it would be a major contribution to not just Bitcoin but the field of computer science as a whole and would likely get due consideration.\n>\n> What's difficult is that Bitcoin PoW has some very specific properties that may or may not be desirable around e.g. fairness that might be difficult to ensure in other systems, so there is probably more to the puzzle than just consensus.\n> --\n> [@JeremyRubin](https://twitter.com/JeremyRubin)https://twitter.com/JeremyRubin\n>\n> On Fri, May 7, 2021 at 3:50 PM SatoshiSingh via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Hello list,\n>>\n>> I am a lurker here and like many of you I worry about the energy usage of bitcoin mining. I understand a lot mining happens with renewable resources but the impact is still high.\n>>\n>> I want to get your opinion on implementing proof of stake for bitcoin mining in future. For now, proof of stake is still untested and not battle tested like proof of work. Though someday it will be.\n>>\n>> In the following years we'll be seeing proof of stake being implemented. Smaller networks can test PoS which is a luxury bitcoin can't afford. Here's how I see this the possibilities:\n>>\n>> 1 - Proof of stake isn't a good enough security mechanism\n>> 2 - Proof of state is a good security mechanism and works as intended\n>>\n>> IF PoS turns out to be good after battle testing, would you consider implementing it for Bitcoin? I understand this would invoke a lot of controversies and a hard fork that no one likes. But its important enough to consider a hard fork. What are your opinions provided PoS does work?\n>>\n>> Love from India.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210508/f555e3c8/attachment.html>"
            },
            {
                "author": "Karl",
                "date": "2021-05-08T14:42:24",
                "message_text_only": ">\n> What is more important;\n> Bitcoin mining introduces the first free-market demand for the cheapest\n> energy source.\n\n\nThis is a really great idea but I think access to technologically advanced\nhardware is a stronger component than energy here.\n\nMaking open community chip fabs might change that.  Then anybody could get\non the bandwagon.  But right now the hardware barrier keeps the common\nperson out.\n\nIf you can build a chip fab, you may also be able to build a powerplant.\nNot many others can do that to compete with you.  The energy economy still\nhas more supply than competition or renewable energy would quickly\noutcompete nonrenewable as the price dropped.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210508/416f416a/attachment.html>"
            },
            {
                "author": "Cloud Strife",
                "date": "2021-05-09T19:07:43",
                "message_text_only": "Proof of stake is permissioned by coins, an internal, permissioned, and\nalready owned resource.\n\nYou cannot gain tokens without someone choosing to give up those coins - a\nform of permission. Permission can also be thought of as an infinite\nbarrier to entry.\n\nPoW forces giving up control through both permissionless to enter mining\nvia EXTERNAL permissionless resources and unforgeable costliness for the\nminers.\n\nWithout unforgeable costliness there's no reason to ever give up control in\nPoS.\n\nIn fact, staking quite literally incentivizes keeping control by rewarding\nthose in control with more coins and control in perpetuity at no cost - the\nincentives on PoS are completely backwards from decentralizing control.\n\nSince no mechanism forces control to be permissionlessly distributed to\nothers, parties in control cannot be considered independent parties nor can\ncontrol be considered decentralized.\n\nPoS solves nothing that's relevant to permissionless decentralized networks.\n\n\n> In the following years we'll be seeing proof of stake being implemented\n\n\nIt has been implemented since 2014 but it doesn't meet criteria for a\npermissionless network. There's nothing new about implementing permissioned\nnetworks.\n\nYou could try to replace proof of work with proof of bitcoin burn (not well\nstudied) on blockchains other than Bitcoin, but there's no known\nreplacement for proof of work for Bitcoin right now.\n\nPoS has been considered and studied since then many times since then and\ndismissed repeatedly for irrelevance to decentralized permissionless\ntechnology, examples:\n\n   - https://nakamotoinstitute.org/research/on-stake-and-consensus/\n   -\n   https://medium.com/@factchecker9000/nothing-is-worse-than-proof-of-stake-e70b12b988ca\n   - https://www.truthcoin.info/blog/pow-cheapest/\n   -\n   https://hugonguyen.medium.com/work-is-timeless-stake-is-not-554c4450ce18\n   - https://arxiv.org/abs/1809.06528\n\n\n\nOn Sat, May 8, 2021 at 10:49 AM Karl via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> What is more important;\n>> Bitcoin mining introduces the first free-market demand for the cheapest\n>> energy source.\n>\n>\n> This is a really great idea but I think access to technologically advanced\n> hardware is a stronger component than energy here.\n>\n> Making open community chip fabs might change that.  Then anybody could get\n> on the bandwagon.  But right now the hardware barrier keeps the common\n> person out.\n>\n> If you can build a chip fab, you may also be able to build a powerplant.\n> Not many others can do that to compete with you.  The energy economy still\n> has more supply than competition or renewable energy would quickly\n> outcompete nonrenewable as the price dropped.\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210509/b188b6b3/attachment-0001.html>"
            },
            {
                "author": "Prayank",
                "date": "2021-05-08T10:21:04",
                "message_text_only": "My opinion:\n\n1.I don't consider PoS to be a better consensus mechanism compared to PoW used in Bitcoin. So any proposal related to PoS in Bitcoin is not an improvement for me.\n\u00a0\n2.Bitcoin is a protocol for decentralized network that creates consensus without needing a central authority to provide trust. Bitcoin with PoS will be a protocol for a network that creates consensus based on bitcoin holdings.\n\n3.Experiments with PoS can work in trust minimized applications that use Bitcoin or LN or Bitcoin sidechains. However, PoW works better for base layer or Bitcoin protocol.\n\n4.Bitcoin protocol should not be changed based on mainstream media articles, new buzzwords or trends, altcoins, governments etc.\u00a0\n\n5.Everything involves trade-offs. Not everything needs to be online. Not everything needs to be on a chain of blocks. There are things that you would prefer to save in a spreadsheet offline or write on a paper. Similarly PoS is not the best consensus mechanism for a 'decentralized network' but it may work for projects(not decentralized) that want to use Bitcoin for few things.\n\n6.Most of the Bitcoin users and devs consider PoW used in Bitcoin as the best consensus mechanism. Few people experimenting with PoS will result in another altcoin with nothing much to contribute in improving Bitcoin. I think there are better things to focus on and one of them is privacy.\n\nFew things related to Bitcoin mining that I consider improvements:\n\n-Stratum v2\n-More countries started mining bitcoin recently\n-Recycling ASIC heat:\u00a0https://braiins.com/blog/green-innovation-in-bitcoin-mining-recycling-asic-heat\n\nI would love to see people in India researching about creating better ASICs and more involved in Bitcoin mining.\u00a0\n\nRelated links:\n\nhttps://bitcoin.stackexchange.com/questions/95356/why-doesnt-bitcoin-migrate-to-proof-of-stake\n\nhttps://download.wpsoftware.net/bitcoin/asic-faq.pdf\u00a0(Andrew Poelstra)\n\nhttps://medium.com/@dsl_uiuc/fake-stake-attacks-on-chain-based-proof-of-stake-cryptocurrencies-b8b05723f806\n\n\n-- \n Prayank\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210508/ba41a1a9/attachment.html>"
            },
            {
                "author": "Eric Martindale",
                "date": "2021-05-08T13:44:24",
                "message_text_only": "Mr. Singh,\n\nProof of Stake is only resilient to \u2153 of the network demonstrating a\nByzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold.\nYou can explore prior research here:\nhttps://download.wpsoftware.net/bitcoin/pos.pdf\n\nIndependent of the security thresholds, Proof of Stake requires other\ntrade-offs which are incompatible with Bitcoin's objective (to be a\ntrustless digital cash) \u2014 specifically the famous \"security vs. liveness\"\nguarantee.  Digital cash is not useful if it must be globally halted to\nensure its security, and Proof of Work squarely addresses this concern.\n\nAbove and beyond any security consideration, Proof of Stake incentivizes\nthe accumulation of wealth within a small set of actors, which is\nundesirable for the long-term health of any such network.  If we are to\nfree humanity from the tyranny of the State, we must do so by protecting\nthe rights of every individual to hold and preserve their own value,\nwithout trusting any third party.  Entrusting the health of the network to\nthe \"economic elite\" is the paramount evil with respect to Bitcoin's\nobjectives, nevermind that Proof of Work relies on energy expenditure to\nprovide its security.\n\nSincerely,\n\nEric Martindale, relentless maker.\nFounder & CEO, Fabric, Inc. <https://fabric.fm>\n+1 (919) 374-2020\n\n\nOn Fri, May 7, 2021 at 6:50 PM SatoshiSingh via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hello list,\n>\n> I am a lurker here and like many of you I worry about the energy usage of\n> bitcoin mining. I understand a lot mining happens with renewable resources\n> but the impact is still high.\n>\n> I want to get your opinion on implementing proof of stake for bitcoin\n> mining in future. For now, proof of stake is still untested and not battle\n> tested like proof of work. Though someday it will be.\n>\n> In the following years we'll be seeing proof of stake being implemented.\n> Smaller networks can test PoS which is a luxury bitcoin can't afford.\n> Here's how I see this the possibilities:\n>\n> 1 - Proof of stake isn't a good enough security mechanism\n> 2 - Proof of state is a good security mechanism and works as intended\n>\n> IF PoS turns out to be good after battle testing, would you consider\n> implementing it for Bitcoin? I understand this would invoke a lot of\n> controversies and a hard fork that no one likes. But its important enough\n> to consider a hard fork. What are your opinions provided PoS does work?\n>\n> Love from India.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210508/28d52c41/attachment-0001.html>"
            },
            {
                "author": "R E Broadley",
                "date": "2021-05-09T11:30:53",
                "message_text_only": "According to this paper:\nhttps://www.cs.umd.edu/projects/coinscope/coinscope.pdf\n\nPoW is also only resilient to 1/3rd of the network.\n\nOn Sat, 8 May 2021 at 14:46, Eric Martindale via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n> Mr. Singh,\n>\n> Proof of Stake is only resilient to \u2153 of the network demonstrating a\nByzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold.\nYou can explore prior research here:\nhttps://download.wpsoftware.net/bitcoin/pos.pdf\n>\n> Independent of the security thresholds, Proof of Stake requires other\ntrade-offs which are incompatible with Bitcoin's objective (to be a\ntrustless digital cash) \u2014 specifically the famous \"security vs. liveness\"\nguarantee.  Digital cash is not useful if it must be globally halted to\nensure its security, and Proof of Work squarely addresses this concern.\n>\n> Above and beyond any security consideration, Proof of Stake incentivizes\nthe accumulation of wealth within a small set of actors, which is\nundesirable for the long-term health of any such network.  If we are to\nfree humanity from the tyranny of the State, we must do so by protecting\nthe rights of every individual to hold and preserve their own value,\nwithout trusting any third party.  Entrusting the health of the network to\nthe \"economic elite\" is the paramount evil with respect to Bitcoin's\nobjectives, nevermind that Proof of Work relies on energy expenditure to\nprovide its security.\n>\n> Sincerely,\n>\n> Eric Martindale, relentless maker.\n> Founder & CEO, Fabric, Inc.\n> +1 (919) 374-2020\n>\n>\n> On Fri, May 7, 2021 at 6:50 PM SatoshiSingh via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>> Hello list,\n>>\n>> I am a lurker here and like many of you I worry about the energy usage\nof bitcoin mining. I understand a lot mining happens with renewable\nresources but the impact is still high.\n>>\n>> I want to get your opinion on implementing proof of stake for bitcoin\nmining in future. For now, proof of stake is still untested and not battle\ntested like proof of work. Though someday it will be.\n>>\n>> In the following years we'll be seeing proof of stake being implemented.\nSmaller networks can test PoS which is a luxury bitcoin can't afford.\nHere's how I see this the possibilities:\n>>\n>> 1 - Proof of stake isn't a good enough security mechanism\n>> 2 - Proof of state is a good security mechanism and works as intended\n>>\n>> IF PoS turns out to be good after battle testing, would you consider\nimplementing it for Bitcoin? I understand this would invoke a lot of\ncontroversies and a hard fork that no one likes. But its important enough\nto consider a hard fork. What are your opinions provided PoS does work?\n>>\n>> Love from India.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210509/120dd43f/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-10T14:08:14",
                "message_text_only": "personally, not speaking for anyone else, i think that proof-of-burn\nhas a much higher likelihood of being a) good enough security and b)\nsolving the nothing-at-stake problem\n\n the only issue i see with a quality PoB implementation is a robust\nsolution to the block-timing problem.\n\nhttps://grisha.org/blog/2018/01/23/explaining-proof-of-work/\n\ni do think there *could* be other low-energy solutions to verifiable\ntiming, just haven't seen one\n\n\nOn Fri, May 7, 2021 at 6:50 PM SatoshiSingh via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n> Hello list,\n>\n> I am a lurker here and like many of you I worry about the energy usage of bitcoin mining. I understand a lot mining happens with renewable resources but the impact is still high.\n>\n> I want to get your opinion on implementing proof of stake for bitcoin mining in future. For now, proof of stake is still untested and not battle tested like proof of work. Though someday it will be.\n>\n> In the following years we'll be seeing proof of stake being implemented. Smaller networks can test PoS which is a luxury bitcoin can't afford. Here's how I see this the possibilities:\n>\n> 1 - Proof of stake isn't a good enough security mechanism\n> 2 - Proof of state is a good security mechanism and works as intended\n>\n> IF PoS turns out to be good after battle testing, would you consider implementing it for Bitcoin? I understand this would invoke a lot of controversies and a hard fork that no one likes. But its important enough to consider a hard fork. What are your opinions provided PoS does work?\n>\n> Love from India.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Keagan McClelland",
                "date": "2021-05-10T15:01:05",
                "message_text_only": "To reiterate some of the points here. My problem with proof of stake is\ntwofold.\n\n1. It requires permission of coin holders to enter into the system. This is\nnot true of proof of work. You may even attempt (though not successfully) a\nproof of work with pencil and paper and submit the block from a regular\nlaptop if you so choose. Whether this level of permissionlessness is\nnecessary is up to individual risk tolerance etc. but it is definitely the\ndefault preference of Bitcoin.\n\n2. Proof of stake must have a trusted means of timestamping to regulate\noverproduction of blocks. This introduction of trust is generally\nconsidered to be a nonstarter in Bitcoin. Proof of Work regulates this by\nmaking blocks fundamentally difficult to produce in the first place.\n\nLike Jeremy, I\u2019m always interested to learn about new attempts in consensus\nalgorithms, but the bar to clear is very high and proof of stake to date\nhas not proposed much less demonstrated a set of properties that is\nconsistent with Bitcoins objectives.\n\nKeagan\n\nOn Mon, May 10, 2021 at 8:43 AM Erik Aronesty via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> personally, not speaking for anyone else, i think that proof-of-burn\n> has a much higher likelihood of being a) good enough security and b)\n> solving the nothing-at-stake problem\n>\n>  the only issue i see with a quality PoB implementation is a robust\n> solution to the block-timing problem.\n>\n> https://grisha.org/blog/2018/01/23/explaining-proof-of-work/\n>\n> i do think there *could* be other low-energy solutions to verifiable\n> timing, just haven't seen one\n>\n>\n> On Fri, May 7, 2021 at 6:50 PM SatoshiSingh via bitcoin-dev\n> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >\n> > Hello list,\n> >\n> > I am a lurker here and like many of you I worry about the energy usage\n> of bitcoin mining. I understand a lot mining happens with renewable\n> resources but the impact is still high.\n> >\n> > I want to get your opinion on implementing proof of stake for bitcoin\n> mining in future. For now, proof of stake is still untested and not battle\n> tested like proof of work. Though someday it will be.\n> >\n> > In the following years we'll be seeing proof of stake being implemented.\n> Smaller networks can test PoS which is a luxury bitcoin can't afford.\n> Here's how I see this the possibilities:\n> >\n> > 1 - Proof of stake isn't a good enough security mechanism\n> > 2 - Proof of state is a good security mechanism and works as intended\n> >\n> > IF PoS turns out to be good after battle testing, would you consider\n> implementing it for Bitcoin? I understand this would invoke a lot of\n> controversies and a hard fork that no one likes. But its important enough\n> to consider a hard fork. What are your opinions provided PoS does work?\n> >\n> > Love from India.\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210510/a45a8038/attachment.html>"
            },
            {
                "author": "LORD HIS EXCELLENCY JAMES HRMH",
                "date": "2021-05-10T21:22:17",
                "message_text_only": "Good Afternoon,\n\nProof-of-stake sounds like an altcoin fork. There is no consideration that proof-of-work is insufficient or that it can be improved upon, only that it should be regulated. Imagine, you are a gold miner with larger hands so you start a mining race and mine plenty more than everyone. Pretty soon everybody is employing all their available resources just to keep up in the mining race since there are only so many carts instead of just to leisurely utilise surplus resources for an opportune find. Each block is a new gold mine. It is enough for everybody to use leisurely resources.\n\nI have initiated conversation previously regarding a method to regulate mining, and believe whole heartedly it should happen. That is necessary for the future stability of Bitcoin as it is clear the rate of work cannot be allowed to increase at such a rate. If you search the bitcoin-dev archives you will find discussion there under my email as we search for a solution.\n\nKING JAMES HRMH\nGreat British Empire\n\nRegards,\nThe Australian\nLORD HIS EXCELLENCY JAMES HRMH (& HMRH)\nof Hougun Manor & Glencoe & British Empire\nMR. Damian A. James Williamson\nWills\n\net al.\n\n\nWilltech\nwww.willtech.com.au\nwww.go-overt.com\nand other projects\n\nearn.com/willtech\nlinkedin.com/in/damianwilliamson\n\n\nm. 0487135719\nf. +61261470192\n\n\nThis email does not constitute a general advice. Please disregard this email if misdelivered.\n________________________________\nFrom: bitcoin-dev <bitcoin-dev-bounces at lists.linuxfoundation.org> on behalf of Keagan McClelland via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>\nSent: Tuesday, 11 May 2021 1:01 AM\nTo: Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>; Erik Aronesty <erik at q32.com>\nCc: SatoshiSingh <SatoshiSingh at protonmail.com>\nSubject: Re: [bitcoin-dev] Opinion on proof of stake in future\n\nTo reiterate some of the points here. My problem with proof of stake is twofold.\n\n1. It requires permission of coin holders to enter into the system. This is not true of proof of work. You may even attempt (though not successfully) a proof of work with pencil and paper and submit the block from a regular laptop if you so choose. Whether this level of permissionlessness is necessary is up to individual risk tolerance etc. but it is definitely the default preference of Bitcoin.\n\n2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks. This introduction of trust is generally considered to be a nonstarter in Bitcoin. Proof of Work regulates this by making blocks fundamentally difficult to produce in the first place.\n\nLike Jeremy, I\u2019m always interested to learn about new attempts in consensus algorithms, but the bar to clear is very high and proof of stake to date has not proposed much less demonstrated a set of properties that is consistent with Bitcoins objectives.\n\nKeagan\n\nOn Mon, May 10, 2021 at 8:43 AM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:\npersonally, not speaking for anyone else, i think that proof-of-burn\nhas a much higher likelihood of being a) good enough security and b)\nsolving the nothing-at-stake problem\n\n the only issue i see with a quality PoB implementation is a robust\nsolution to the block-timing problem.\n\nhttps://grisha.org/blog/2018/01/23/explaining-proof-of-work/\n\ni do think there *could* be other low-energy solutions to verifiable\ntiming, just haven't seen one\n\n\nOn Fri, May 7, 2021 at 6:50 PM SatoshiSingh via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:\n>\n> Hello list,\n>\n> I am a lurker here and like many of you I worry about the energy usage of bitcoin mining. I understand a lot mining happens with renewable resources but the impact is still high.\n>\n> I want to get your opinion on implementing proof of stake for bitcoin mining in future. For now, proof of stake is still untested and not battle tested like proof of work. Though someday it will be.\n>\n> In the following years we'll be seeing proof of stake being implemented. Smaller networks can test PoS which is a luxury bitcoin can't afford. Here's how I see this the possibilities:\n>\n> 1 - Proof of stake isn't a good enough security mechanism\n> 2 - Proof of state is a good security mechanism and works as intended\n>\n> IF PoS turns out to be good after battle testing, would you consider implementing it for Bitcoin? I understand this would invoke a lot of controversies and a hard fork that no one likes. But its important enough to consider a hard fork. What are your opinions provided PoS does work?\n>\n> Love from India.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n_______________________________________________\nbitcoin-dev mailing list\nbitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210510/788958ad/attachment-0001.html>"
            },
            {
                "author": "Jeremy",
                "date": "2021-05-10T21:51:26",
                "message_text_only": "re: 2, there's been some promising developments with Verifiable Delay\nFunctions that make me think that the block regulation problems are\nsolvable without requiring brute-force search proof of work. Are those\ninapplicable for some reason?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210510/ec6b1926/attachment.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-17T16:58:59",
                "message_text_only": "Verifiable Delay Functions involve active participation of a single\nverifier.   Without this a VDF decays into a proof-of-work (multiple\nverifiers === parallelism).\n\nThe verifier, in this case is \"the bitcoin network\" taken as a whole.\n I think it is reasonable to consider that some difficult-to-game\nproperty of the last N blocks (like the hash of the last 100\nblock-id's or whatever), could be the verification input.\n\nThe VDF gets calculated by *every* eligible proof-of-burn miner, and\nthen this is used to prevent a timing issue.\n\nSeems reasonable to me, but I haven't looked too far into the\nrequirements of VDF's\n\nnice summary for anyone who is interested:\nhttps://medium.com/@djrtwo/vdfs-are-not-proof-of-work-91ba3bec2bf4\n\nWhile VDF's almost always lead to a \"cpu-speed monopoly\", this would\nonly be helpful for block latency in a proof-of-burn chain.  Block\nheight would be calculated by eligible-miner-burned-coins, so the\nmonopoly could be easily avoided.\n\nThere has been some decent earlier work on blind/uncensorable burns:\nhttps://eprint.iacr.org/2019/1096.pdf\n\nA miner could then reveal A) the VDF and B) proof-of-burn as a part of\na block.  Nodes would simply select the block with A) a valid VDF and\nB) the highest \"qualified\" POB.\n\nWith most burns running at a loss, and no way to predict the next\n\"winning burn\", and the VDF providing timing, I'm not sure how this is\nworse than Bitcoin's existing system.\n\nOn Mon, May 10, 2021 at 5:51 PM Jeremy <jlrubin at mit.edu> wrote:\n>\n> re: 2, there's been some promising developments with Verifiable Delay Functions that make me think that the block regulation problems are solvable without requiring brute-force search proof of work. Are those inapplicable for some reason?\n>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T07:06:23",
                "message_text_only": "Good morning Erik,\n\n> Verifiable Delay Functions involve active participation of a single\n> verifier. Without this a VDF decays into a proof-of-work (multiple\n> verifiers === parallelism).\n>\n> The verifier, in this case is \"the bitcoin network\" taken as a whole.\n> I think it is reasonable to consider that some difficult-to-game\n> property of the last N blocks (like the hash of the last 100\n> block-id's or whatever), could be the verification input.\n>\n> The VDF gets calculated by every eligible proof-of-burn miner, and\n> then this is used to prevent a timing issue.\n>\n> Seems reasonable to me, but I haven't looked too far into the\n> requirements of VDF's\n>\n> nice summary for anyone who is interested:\n> https://medium.com/@djrtwo/vdfs-are-not-proof-of-work-91ba3bec2bf4\n>\n> While VDF's almost always lead to a \"cpu-speed monopoly\", this would\n> only be helpful for block latency in a proof-of-burn chain. Block\n> height would be calculated by eligible-miner-burned-coins, so the\n> monopoly could be easily avoided.\n\nInteresting link.\n\nHowever, I would like to point out that the *real* reason that PoW consumes lots of power is ***NOT***:\n\n* Proof-of-work is parallelizable, so it allows miners consume more energy (by buying more grinders) in order to get more blocks than their competitors.\n\nThe *real* reason is:\n\n* Proof-of-work allows miners to consume more energy in order to get more blocks than their competitors.\n\nVDFs attempt to sidestep that by removing parallelism.\nHowever, there are ways to increase *sequential* speed, such as:\n\n* Overclocking.\n  * This shortens lifetime, so you can spend more energy (on building new miners) in order to get more blocks than your competitors.\n* Lower temperatures.\n  * This requires refrigeration/cooling, so you can spend more energy (on the refrigeration process) in order to get more blocks than your competitors.\n\nI am certain people with gaming rigs can point out more ways to improve sequential speed, as necessary to get more frames per second.\n\nGiven the above, I think VDFs will still fail at their intended task.\nSpeed, yo.\n\nThus, VDFs do not serve as a sufficient deterrent away from ever-increasing energy consumption --- it just moves the energy consumption increase away from the obvious (parallelism) to the obscure-if-you-have-no-gamer-buds.\n\nYou humans just need to get up to Kardashev 1.0, stat.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Zac Greenwood",
                "date": "2021-05-18T10:16:01",
                "message_text_only": "VDFs might enable more constant block times, for instance by having a\ntwo-step PoW:\n\n1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to\ndifficulty adjustments similar to the as-is). As per the property of VDFs,\nminers are able show proof of work.\n\n2. Use current PoW mechanism with lower difficulty so finding a block takes\n1 minute on average, again subject to as-is difficulty adjustments.\n\nAs a result, variation in block times will be greatly reduced.\n\nZac\n\n\nOn Tue, 18 May 2021 at 09:07, ZmnSCPxj via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Good morning Erik,\n>\n> > Verifiable Delay Functions involve active participation of a single\n> > verifier. Without this a VDF decays into a proof-of-work (multiple\n> > verifiers === parallelism).\n> >\n> > The verifier, in this case is \"the bitcoin network\" taken as a whole.\n> > I think it is reasonable to consider that some difficult-to-game\n> > property of the last N blocks (like the hash of the last 100\n> > block-id's or whatever), could be the verification input.\n> >\n> > The VDF gets calculated by every eligible proof-of-burn miner, and\n> > then this is used to prevent a timing issue.\n> >\n> > Seems reasonable to me, but I haven't looked too far into the\n> > requirements of VDF's\n> >\n> > nice summary for anyone who is interested:\n> > https://medium.com/@djrtwo/vdfs-are-not-proof-of-work-91ba3bec2bf4\n> >\n> > While VDF's almost always lead to a \"cpu-speed monopoly\", this would\n> > only be helpful for block latency in a proof-of-burn chain. Block\n> > height would be calculated by eligible-miner-burned-coins, so the\n> > monopoly could be easily avoided.\n>\n> Interesting link.\n>\n> However, I would like to point out that the *real* reason that PoW\n> consumes lots of power is ***NOT***:\n>\n> * Proof-of-work is parallelizable, so it allows miners consume more energy\n> (by buying more grinders) in order to get more blocks than their\n> competitors.\n>\n> The *real* reason is:\n>\n> * Proof-of-work allows miners to consume more energy in order to get more\n> blocks than their competitors.\n>\n> VDFs attempt to sidestep that by removing parallelism.\n> However, there are ways to increase *sequential* speed, such as:\n>\n> * Overclocking.\n>   * This shortens lifetime, so you can spend more energy (on building new\n> miners) in order to get more blocks than your competitors.\n> * Lower temperatures.\n>   * This requires refrigeration/cooling, so you can spend more energy (on\n> the refrigeration process) in order to get more blocks than your\n> competitors.\n>\n> I am certain people with gaming rigs can point out more ways to improve\n> sequential speed, as necessary to get more frames per second.\n>\n> Given the above, I think VDFs will still fail at their intended task.\n> Speed, yo.\n>\n> Thus, VDFs do not serve as a sufficient deterrent away from\n> ever-increasing energy consumption --- it just moves the energy consumption\n> increase away from the obvious (parallelism) to the\n> obscure-if-you-have-no-gamer-buds.\n>\n> You humans just need to get up to Kardashev 1.0, stat.\n>\n> Regards,\n> ZmnSCPxj\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/2f1a992a/attachment.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T10:42:49",
                "message_text_only": "Good morning Zac,\n\n> VDFs might enable more constant block times, for instance by having a two-step PoW:\n>\n> 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>\n> 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>\n> As a result, variation in block times will be greatly reduced.\n\nAs I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n\nThus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\nAfter all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Zac Greenwood",
                "date": "2021-05-18T14:02:18",
                "message_text_only": "Hi ZmnSCPxj,\n\nPlease note that I am not suggesting VDFs as a means to save energy, but\nsolely as a means to make the time between blocks more constant.\n\nZac\n\n\nOn Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n\n> Good morning Zac,\n>\n> > VDFs might enable more constant block times, for instance by having a\n> two-step PoW:\n> >\n> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to\n> difficulty adjustments similar to the as-is). As per the property of VDFs,\n> miners are able show proof of work.\n> >\n> > 2. Use current PoW mechanism with lower difficulty so finding a block\n> takes 1 minute on average, again subject to as-is difficulty adjustments.\n> >\n> > As a result, variation in block times will be greatly reduced.\n>\n> As I understand it, another weakness of VDFs is that they are not\n> inherently progress-free (their sequential nature prevents that; they are\n> inherently progress-requiring).\n>\n> Thus, a miner which focuses on improving the amount of energy that it can\n> pump into the VDF circuitry (by overclocking and freezing the circuitry),\n> could potentially get into a winner-takes-all situation, possibly leading\n> to even *worse* competition and even *more* energy consumption.\n> After all, if you can start mining 0.1s faster than the competition, that\n> is a 0.1s advantage where *only you* can mine *in the entire world*.\n>\n> Regards,\n> ZmnSCPxj\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/abd8b876/attachment.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-18T18:52:51",
                "message_text_only": "1. i never suggested vdf's to replace pow.\n\n2. my suggestion was specifically *in the context of* a working\nproof-of-burn protocol\n\n- vdfs used only for timing (not block height)\n- blind-burned coins of a specific age used to replace proof of work\n- the required \"work\" per block would simply be a competition to\nacquire rewards, and so miners would have to burn coins, well in\nadvance, and hope that their burned coins got rewarded in some far\nfuture\n- the point of burned coins is to mimic, in every meaningful way, the\nvalue gained from proof of work... without some of the security\ndrawbacks\n- the miner risks losing all of his burned coins (like all miners risk\nlosing their work in each block)\n- new burns can't be used\n- old burns age out (like ASICs do)\n- other requirements on burns might be needed to properly mirror the\nproperties of PoW and the incentives Bitcoin uses to mine honestly.\n\n3. i do believe it is *possible* that a \"burned coin + vdf system\"\nmight be more secure in the long run, and that if the entire space\nagreed that such an endeavor was worthwhile, a test net could be spun\nup, and a hard-fork could be initiated.\n\n4. i would never suggest such a thing unless i believed it was\npossible that consensus was possible.  so no, this is not an \"alt\ncoin\"\n\nOn Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>\n> Hi ZmnSCPxj,\n>\n> Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>\n> Zac\n>\n>\n> On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>\n>> Good morning Zac,\n>>\n>> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>> >\n>> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>> >\n>> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>> >\n>> > As a result, variation in block times will be greatly reduced.\n>>\n>> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>\n>> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>\n>> Regards,\n>> ZmnSCPxj"
            },
            {
                "author": "Michael Dubrovsky",
                "date": "2021-05-19T14:07:53",
                "message_text_only": "Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself.\nPoS, VDFs, and so on are interesting but I guess there are other threads\ngoing on these topics already where they would be relevant.\n\nAlso, it's important to distinguish between oPoW and these other\n\"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\nthe core game theory or security assumptions of Hashcash and actually\ncontains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n\nCheers,\nMike\n\nOn Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> 1. i never suggested vdf's to replace pow.\n>\n> 2. my suggestion was specifically *in the context of* a working\n> proof-of-burn protocol\n>\n> - vdfs used only for timing (not block height)\n> - blind-burned coins of a specific age used to replace proof of work\n> - the required \"work\" per block would simply be a competition to\n> acquire rewards, and so miners would have to burn coins, well in\n> advance, and hope that their burned coins got rewarded in some far\n> future\n> - the point of burned coins is to mimic, in every meaningful way, the\n> value gained from proof of work... without some of the security\n> drawbacks\n> - the miner risks losing all of his burned coins (like all miners risk\n> losing their work in each block)\n> - new burns can't be used\n> - old burns age out (like ASICs do)\n> - other requirements on burns might be needed to properly mirror the\n> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>\n> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n> might be more secure in the long run, and that if the entire space\n> agreed that such an endeavor was worthwhile, a test net could be spun\n> up, and a hard-fork could be initiated.\n>\n> 4. i would never suggest such a thing unless i believed it was\n> possible that consensus was possible.  so no, this is not an \"alt\n> coin\"\n>\n> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n> >\n> > Hi ZmnSCPxj,\n> >\n> > Please note that I am not suggesting VDFs as a means to save energy, but\n> solely as a means to make the time between blocks more constant.\n> >\n> > Zac\n> >\n> >\n> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n> >>\n> >> Good morning Zac,\n> >>\n> >> > VDFs might enable more constant block times, for instance by having a\n> two-step PoW:\n> >> >\n> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject\n> to difficulty adjustments similar to the as-is). As per the property of\n> VDFs, miners are able show proof of work.\n> >> >\n> >> > 2. Use current PoW mechanism with lower difficulty so finding a block\n> takes 1 minute on average, again subject to as-is difficulty adjustments.\n> >> >\n> >> > As a result, variation in block times will be greatly reduced.\n> >>\n> >> As I understand it, another weakness of VDFs is that they are not\n> inherently progress-free (their sequential nature prevents that; they are\n> inherently progress-requiring).\n> >>\n> >> Thus, a miner which focuses on improving the amount of energy that it\n> can pump into the VDF circuitry (by overclocking and freezing the\n> circuitry), could potentially get into a winner-takes-all situation,\n> possibly leading to even *worse* competition and even *more* energy\n> consumption.\n> >> After all, if you can start mining 0.1s faster than the competition,\n> that is a 0.1s advantage where *only you* can mine *in the entire world*.\n> >>\n> >> Regards,\n> >> ZmnSCPxj\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n\n\n-- \nMichael Dubrovsky\nFounder; PoWx\nwww.PoWx.org <http://www.powx.org/>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210519/1da2c85a/attachment.html>"
            },
            {
                "author": "Michael Dubrovsky",
                "date": "2021-05-19T15:30:36",
                "message_text_only": "Ah sorry, I didn't realize this was, in fact, a different thread! :)\n\nOn Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n\n> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself.\n> PoS, VDFs, and so on are interesting but I guess there are other threads\n> going on these topics already where they would be relevant.\n>\n> Also, it's important to distinguish between oPoW and these other\n> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n> the core game theory or security assumptions of Hashcash and actually\n> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>\n> Cheers,\n> Mike\n>\n> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> 1. i never suggested vdf's to replace pow.\n>>\n>> 2. my suggestion was specifically *in the context of* a working\n>> proof-of-burn protocol\n>>\n>> - vdfs used only for timing (not block height)\n>> - blind-burned coins of a specific age used to replace proof of work\n>> - the required \"work\" per block would simply be a competition to\n>> acquire rewards, and so miners would have to burn coins, well in\n>> advance, and hope that their burned coins got rewarded in some far\n>> future\n>> - the point of burned coins is to mimic, in every meaningful way, the\n>> value gained from proof of work... without some of the security\n>> drawbacks\n>> - the miner risks losing all of his burned coins (like all miners risk\n>> losing their work in each block)\n>> - new burns can't be used\n>> - old burns age out (like ASICs do)\n>> - other requirements on burns might be needed to properly mirror the\n>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>\n>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>> might be more secure in the long run, and that if the entire space\n>> agreed that such an endeavor was worthwhile, a test net could be spun\n>> up, and a hard-fork could be initiated.\n>>\n>> 4. i would never suggest such a thing unless i believed it was\n>> possible that consensus was possible.  so no, this is not an \"alt\n>> coin\"\n>>\n>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>> >\n>> > Hi ZmnSCPxj,\n>> >\n>> > Please note that I am not suggesting VDFs as a means to save energy,\n>> but solely as a means to make the time between blocks more constant.\n>> >\n>> > Zac\n>> >\n>> >\n>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>> >>\n>> >> Good morning Zac,\n>> >>\n>> >> > VDFs might enable more constant block times, for instance by having\n>> a two-step PoW:\n>> >> >\n>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject\n>> to difficulty adjustments similar to the as-is). As per the property of\n>> VDFs, miners are able show proof of work.\n>> >> >\n>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n>> block takes 1 minute on average, again subject to as-is difficulty\n>> adjustments.\n>> >> >\n>> >> > As a result, variation in block times will be greatly reduced.\n>> >>\n>> >> As I understand it, another weakness of VDFs is that they are not\n>> inherently progress-free (their sequential nature prevents that; they are\n>> inherently progress-requiring).\n>> >>\n>> >> Thus, a miner which focuses on improving the amount of energy that it\n>> can pump into the VDF circuitry (by overclocking and freezing the\n>> circuitry), could potentially get into a winner-takes-all situation,\n>> possibly leading to even *worse* competition and even *more* energy\n>> consumption.\n>> >> After all, if you can start mining 0.1s faster than the competition,\n>> that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>> >>\n>> >> Regards,\n>> >> ZmnSCPxj\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n> --\n> Michael Dubrovsky\n> Founder; PoWx\n> www.PoWx.org <http://www.powx.org/>\n>\n\n\n-- \nMichael Dubrovsky\nFounder; PoWx\nwww.PoWx.org <http://www.powx.org/>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210519/c650edcc/attachment.html>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-21T00:04:11",
                "message_text_only": "I think there is a lot of misinformation and bias against Proof of Stake.\nYes there have been lots of shady coins that use insecure PoS mechanisms.\nYes there have been massive issues with distribution of PoS coins (of\ncourse there have also been massive issues with PoW coins as well).\nHowever, I want to remind everyone that there is a difference between\n\"proved to be impossible\" and \"have not achieved recognized success yet\".\nMost of the arguments levied against PoS are out of date or rely on\nunproven assumptions or extrapolation from the analysis of a particular PoS\nsystem. I certainly don't think we should experiment with bitcoin by\nswitching to PoS, but from my research, it seems very likely that there is\na proof of stake consensus protocol we could build that has substantially\nhigher security (cost / capital required to execute an attack) while at the\nsame time costing far less resources (which do translate to fees on the\nnetwork) *without* compromising any of the critical security properties\nbitcoin relies on. I think the critical piece of this is the disagreements\naround hardcoded checkpoints, which is a critical piece solving attacks\nthat could be levied on a PoS chain, and how that does (or doesn't) affect\nthe security model.\n\n@Eric Your proof of stake fallacy seems to be saying that PoS is worse when\na 51% attack happens. While I agree, I think that line of thinking omits\nimportant facts:\n* The capital required to 51% attack a PoS chain can be made substantially\ngreater than on a PoS chain.\n* The capital the attacker stands to lose can be substantially greater as\nwell if the attack is successful.\n* The effectiveness of paying miners to raise the honest fraction of miners\nabove 50% may be quite bad.\n* Allowing a 51% attack is already unacceptable. It should be considered\nwhether what happens in the case of a 51% may not be significantly\ndifferent. The currency would likely be critically damaged in a 51% attack\nregardless of consensus mechanism.\n\n> Proof-of-stake tends towards oligopolistic control\n\nPeople repeat this often, but the facts support this. There is no\ncentralization pressure in any proof of stake mechanism that I'm aware of.\nIE if you have 10 times as much coin that you use to mint blocks, you\nshould expect to earn 10x as much minting revenue - not more than 10x. By\ncontrast, proof of work does in fact have clear centralization pressure -\nthis is not disputed. Our goal in relation to that is to ensure that the\ncentralization pressure remains insignifiant. Proof of work also clearly\nhas a lot more barriers to entry than any proof of stake system does. Both\nof these mean the tendency towards oligopolistic control is worse for PoW.\n\n> Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n\nI certainly agree. Bitcoin's energy usage at the moment is I think quite\nwarranted. However, the question is: can we do substantially better. I\nthink if we can, we probably should... eventually.\n\n> Proof of Stake is only resilient to \u2153 of the network demonstrating a\nByzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n\nI see no mention of this in the pos.pdf\n<https://download.wpsoftware.net/bitcoin/pos.pdf> you linked to. I'm not\naware of any proof that *all *PoS systems have a failure threshold of 1/3.\nI know that staking systems like Casper do in fact have that 1/3\nrequirement. However there are PoS designs that should exceed that up to\nnearly 50% as far as I'm aware. Proof of work is not in fact resilient up\nto the 1/2 threshold in the way you would think. IE, if 100% of miners are\ncurrently honest and have a collective 100 exahashes/s hashpower, an\nattacker does not need to obtain 100 exahashes/s, but actually only needs\nto accumulate 50 exahashes/s. This is because as the attacker accumulates\nhashpower, it drives honest miners out of the market as the difficulty\nincreases to beyond what is economically sustainable. Also, its been shown\nthat the best proof of work can do is require an attacker to obtain 33% of\nthe hashpower because of the selfish mining attack\n<https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack>\ndiscussed\nin depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of\nthese things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n\n > Proof of Stake requires other trade-offs which are incompatible with\nBitcoin's objective (to be a trustless digital cash) \u2014 specifically the\nfamous \"security vs. liveness\" guarantee\n\nDo you have a good source that talks about why you think proof of stake\ncannot be used for a trustless digital cash?\n\n> You cannot gain tokens without someone choosing to give up those coins -\na form of permission.\n\nThis is not a practical constraint. Just like in mining, some nodes may\nreject you, but there will likely be more that will accept you, some\nsellers may reject you, but most would accept your money as payment for\nbitcoins. I don't think requiring the \"permission\" of one of millions of\npeople in the market can be reasonably considered a \"permissioned\ncurrency\".\n\n> 2. Proof of stake must have a trusted means of timestamping to regulate\noverproduction of blocks\n\nBoth PoW and PoS could mine/mint blocks twice as fast if everyone agreed to\ndouble their clock speeds. Both systems rely on an honest majority sticking\nto standard time.\n\n\nOn Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>\n> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>\n>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself.\n>> PoS, VDFs, and so on are interesting but I guess there are other threads\n>> going on these topics already where they would be relevant.\n>>\n>> Also, it's important to distinguish between oPoW and these other\n>> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n>> the core game theory or security assumptions of Hashcash and actually\n>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>\n>> Cheers,\n>> Mike\n>>\n>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>>> 1. i never suggested vdf's to replace pow.\n>>>\n>>> 2. my suggestion was specifically *in the context of* a working\n>>> proof-of-burn protocol\n>>>\n>>> - vdfs used only for timing (not block height)\n>>> - blind-burned coins of a specific age used to replace proof of work\n>>> - the required \"work\" per block would simply be a competition to\n>>> acquire rewards, and so miners would have to burn coins, well in\n>>> advance, and hope that their burned coins got rewarded in some far\n>>> future\n>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>> value gained from proof of work... without some of the security\n>>> drawbacks\n>>> - the miner risks losing all of his burned coins (like all miners risk\n>>> losing their work in each block)\n>>> - new burns can't be used\n>>> - old burns age out (like ASICs do)\n>>> - other requirements on burns might be needed to properly mirror the\n>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>\n>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>> might be more secure in the long run, and that if the entire space\n>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>> up, and a hard-fork could be initiated.\n>>>\n>>> 4. i would never suggest such a thing unless i believed it was\n>>> possible that consensus was possible.  so no, this is not an \"alt\n>>> coin\"\n>>>\n>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n>>> wrote:\n>>> >\n>>> > Hi ZmnSCPxj,\n>>> >\n>>> > Please note that I am not suggesting VDFs as a means to save energy,\n>>> but solely as a means to make the time between blocks more constant.\n>>> >\n>>> > Zac\n>>> >\n>>> >\n>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n>>> wrote:\n>>> >>\n>>> >> Good morning Zac,\n>>> >>\n>>> >> > VDFs might enable more constant block times, for instance by having\n>>> a two-step PoW:\n>>> >> >\n>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject\n>>> to difficulty adjustments similar to the as-is). As per the property of\n>>> VDFs, miners are able show proof of work.\n>>> >> >\n>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n>>> block takes 1 minute on average, again subject to as-is difficulty\n>>> adjustments.\n>>> >> >\n>>> >> > As a result, variation in block times will be greatly reduced.\n>>> >>\n>>> >> As I understand it, another weakness of VDFs is that they are not\n>>> inherently progress-free (their sequential nature prevents that; they are\n>>> inherently progress-requiring).\n>>> >>\n>>> >> Thus, a miner which focuses on improving the amount of energy that it\n>>> can pump into the VDF circuitry (by overclocking and freezing the\n>>> circuitry), could potentially get into a winner-takes-all situation,\n>>> possibly leading to even *worse* competition and even *more* energy\n>>> consumption.\n>>> >> After all, if you can start mining 0.1s faster than the competition,\n>>> that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>> >>\n>>> >> Regards,\n>>> >> ZmnSCPxj\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>\n>>\n>> --\n>> Michael Dubrovsky\n>> Founder; PoWx\n>> www.PoWx.org <http://www.powx.org/>\n>>\n>\n>\n> --\n> Michael Dubrovsky\n> Founder; PoWx\n> www.PoWx.org <http://www.powx.org/>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210520/fec21169/attachment-0001.html>"
            },
            {
                "author": "vizeet srivastava",
                "date": "2021-05-21T09:42:01",
                "message_text_only": "It is difficult to understand how energy usage is a bad thing.\nAt one end we talk about energy usage as a bad thing and we also talk about\nglobal warming.\nIf Earth is receiving extra energy which is causing global warming\nshouldn't we use extra energy to do something useful.\n\n\nOn Fri, May 21, 2021 at 2:52 PM Billy Tetrud via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> I think there is a lot of misinformation and bias against Proof of Stake.\n> Yes there have been lots of shady coins that use insecure PoS mechanisms.\n> Yes there have been massive issues with distribution of PoS coins (of\n> course there have also been massive issues with PoW coins as well).\n> However, I want to remind everyone that there is a difference between\n> \"proved to be impossible\" and \"have not achieved recognized success yet\".\n> Most of the arguments levied against PoS are out of date or rely on\n> unproven assumptions or extrapolation from the analysis of a particular PoS\n> system. I certainly don't think we should experiment with bitcoin by\n> switching to PoS, but from my research, it seems very likely that there is\n> a proof of stake consensus protocol we could build that has substantially\n> higher security (cost / capital required to execute an attack) while at the\n> same time costing far less resources (which do translate to fees on the\n> network) *without* compromising any of the critical security properties\n> bitcoin relies on. I think the critical piece of this is the disagreements\n> around hardcoded checkpoints, which is a critical piece solving attacks\n> that could be levied on a PoS chain, and how that does (or doesn't) affect\n> the security model.\n>\n> @Eric Your proof of stake fallacy seems to be saying that PoS is worse\n> when a 51% attack happens. While I agree, I think that line of thinking\n> omits important facts:\n> * The capital required to 51% attack a PoS chain can be made substantially\n> greater than on a PoS chain.\n> * The capital the attacker stands to lose can be substantially greater as\n> well if the attack is successful.\n> * The effectiveness of paying miners to raise the honest fraction of\n> miners above 50% may be quite bad.\n> * Allowing a 51% attack is already unacceptable. It should be considered\n> whether what happens in the case of a 51% may not be significantly\n> different. The currency would likely be critically damaged in a 51% attack\n> regardless of consensus mechanism.\n>\n> > Proof-of-stake tends towards oligopolistic control\n>\n> People repeat this often, but the facts support this. There is no\n> centralization pressure in any proof of stake mechanism that I'm aware of.\n> IE if you have 10 times as much coin that you use to mint blocks, you\n> should expect to earn 10x as much minting revenue - not more than 10x. By\n> contrast, proof of work does in fact have clear centralization pressure -\n> this is not disputed. Our goal in relation to that is to ensure that the\n> centralization pressure remains insignifiant. Proof of work also clearly\n> has a lot more barriers to entry than any proof of stake system does. Both\n> of these mean the tendency towards oligopolistic control is worse for PoW.\n>\n> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>\n> I certainly agree. Bitcoin's energy usage at the moment is I think quite\n> warranted. However, the question is: can we do substantially better. I\n> think if we can, we probably should... eventually.\n>\n> > Proof of Stake is only resilient to \u2153 of the network demonstrating a\n> Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>\n> I see no mention of this in the pos.pdf\n> <https://download.wpsoftware.net/bitcoin/pos.pdf> you linked to. I'm not\n> aware of any proof that *all *PoS systems have a failure threshold of\n> 1/3. I know that staking systems like Casper do in fact have that 1/3\n> requirement. However there are PoS designs that should exceed that up to\n> nearly 50% as far as I'm aware. Proof of work is not in fact resilient up\n> to the 1/2 threshold in the way you would think. IE, if 100% of miners are\n> currently honest and have a collective 100 exahashes/s hashpower, an\n> attacker does not need to obtain 100 exahashes/s, but actually only needs\n> to accumulate 50 exahashes/s. This is because as the attacker accumulates\n> hashpower, it drives honest miners out of the market as the difficulty\n> increases to beyond what is economically sustainable. Also, its been shown\n> that the best proof of work can do is require an attacker to obtain 33% of\n> the hashpower because of the selfish mining attack\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> discussed\n> in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both\n> of these things reduce PoW's security by a factor of about 83% (1 -\n> 50%*33%).\n>\n>  > Proof of Stake requires other trade-offs which are incompatible with\n> Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the\n> famous \"security vs. liveness\" guarantee\n>\n> Do you have a good source that talks about why you think proof of stake\n> cannot be used for a trustless digital cash?\n>\n> > You cannot gain tokens without someone choosing to give up those coins -\n> a form of permission.\n>\n> This is not a practical constraint. Just like in mining, some nodes may\n> reject you, but there will likely be more that will accept you, some\n> sellers may reject you, but most would accept your money as payment for\n> bitcoins. I don't think requiring the \"permission\" of one of millions of\n> people in the market can be reasonably considered a \"permissioned\n> currency\".\n>\n> > 2. Proof of stake must have a trusted means of timestamping to regulate\n> overproduction of blocks\n>\n> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed\n> to double their clock speeds. Both systems rely on an honest majority\n> sticking to standard time.\n>\n>\n> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>\n>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>\n>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n>>> itself. PoS, VDFs, and so on are interesting but I guess there are other\n>>> threads going on these topics already where they would be relevant.\n>>>\n>>> Also, it's important to distinguish between oPoW and these other\n>>> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n>>> the core game theory or security assumptions of Hashcash and actually\n>>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>\n>>> Cheers,\n>>> Mike\n>>>\n>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>\n>>>> 1. i never suggested vdf's to replace pow.\n>>>>\n>>>> 2. my suggestion was specifically *in the context of* a working\n>>>> proof-of-burn protocol\n>>>>\n>>>> - vdfs used only for timing (not block height)\n>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>> - the required \"work\" per block would simply be a competition to\n>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>> advance, and hope that their burned coins got rewarded in some far\n>>>> future\n>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>> value gained from proof of work... without some of the security\n>>>> drawbacks\n>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>> losing their work in each block)\n>>>> - new burns can't be used\n>>>> - old burns age out (like ASICs do)\n>>>> - other requirements on burns might be needed to properly mirror the\n>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>\n>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>> might be more secure in the long run, and that if the entire space\n>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>> up, and a hard-fork could be initiated.\n>>>>\n>>>> 4. i would never suggest such a thing unless i believed it was\n>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>> coin\"\n>>>>\n>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n>>>> wrote:\n>>>> >\n>>>> > Hi ZmnSCPxj,\n>>>> >\n>>>> > Please note that I am not suggesting VDFs as a means to save energy,\n>>>> but solely as a means to make the time between blocks more constant.\n>>>> >\n>>>> > Zac\n>>>> >\n>>>> >\n>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n>>>> wrote:\n>>>> >>\n>>>> >> Good morning Zac,\n>>>> >>\n>>>> >> > VDFs might enable more constant block times, for instance by\n>>>> having a two-step PoW:\n>>>> >> >\n>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n>>>> subject to difficulty adjustments similar to the as-is). As per the\n>>>> property of VDFs, miners are able show proof of work.\n>>>> >> >\n>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n>>>> block takes 1 minute on average, again subject to as-is difficulty\n>>>> adjustments.\n>>>> >> >\n>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>> >>\n>>>> >> As I understand it, another weakness of VDFs is that they are not\n>>>> inherently progress-free (their sequential nature prevents that; they are\n>>>> inherently progress-requiring).\n>>>> >>\n>>>> >> Thus, a miner which focuses on improving the amount of energy that\n>>>> it can pump into the VDF circuitry (by overclocking and freezing the\n>>>> circuitry), could potentially get into a winner-takes-all situation,\n>>>> possibly leading to even *worse* competition and even *more* energy\n>>>> consumption.\n>>>> >> After all, if you can start mining 0.1s faster than the competition,\n>>>> that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>> >>\n>>>> >> Regards,\n>>>> >> ZmnSCPxj\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n>>>\n>>> --\n>>> Michael Dubrovsky\n>>> Founder; PoWx\n>>> www.PoWx.org <http://www.powx.org/>\n>>>\n>>\n>>\n>> --\n>> Michael Dubrovsky\n>> Founder; PoWx\n>> www.PoWx.org <http://www.powx.org/>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210521/1dd9e3b5/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-21T20:57:51",
                "message_text_only": "proof of burn has all the benefits of proof of stake (if there are any)\n\nbut it also solves the \"nothing at stake\" problem\n\nthe incentive in POB is that you're making a long-term investment in\nmining, and you want a stable protocol, quality network, etc.... to\npay off your investment.\n\nOn Thu, May 20, 2021 at 8:04 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>\n> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>\n> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>\n> > Proof-of-stake tends towards oligopolistic control\n>\n> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>\n> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>\n> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>\n> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>\n> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>\n>  > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>\n> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>\n> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>\n> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>\n> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>\n> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>\n>\n> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>\n>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>\n>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>\n>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>\n>>> Cheers,\n>>> Mike\n>>>\n>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>\n>>>> 1. i never suggested vdf's to replace pow.\n>>>>\n>>>> 2. my suggestion was specifically *in the context of* a working\n>>>> proof-of-burn protocol\n>>>>\n>>>> - vdfs used only for timing (not block height)\n>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>> - the required \"work\" per block would simply be a competition to\n>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>> advance, and hope that their burned coins got rewarded in some far\n>>>> future\n>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>> value gained from proof of work... without some of the security\n>>>> drawbacks\n>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>> losing their work in each block)\n>>>> - new burns can't be used\n>>>> - old burns age out (like ASICs do)\n>>>> - other requirements on burns might be needed to properly mirror the\n>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>\n>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>> might be more secure in the long run, and that if the entire space\n>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>> up, and a hard-fork could be initiated.\n>>>>\n>>>> 4. i would never suggest such a thing unless i believed it was\n>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>> coin\"\n>>>>\n>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>> >\n>>>> > Hi ZmnSCPxj,\n>>>> >\n>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>> >\n>>>> > Zac\n>>>> >\n>>>> >\n>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>> >>\n>>>> >> Good morning Zac,\n>>>> >>\n>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>> >> >\n>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>> >> >\n>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>> >> >\n>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>> >>\n>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>> >>\n>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>> >>\n>>>> >> Regards,\n>>>> >> ZmnSCPxj\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>>\n>>> --\n>>> Michael Dubrovsky\n>>> Founder; PoWx\n>>> www.PoWx.org\n>>\n>>\n>>\n>> --\n>> Michael Dubrovsky\n>> Founder; PoWx\n>> www.PoWx.org\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-21T21:45:12",
                "message_text_only": "@Erik\n>  it also solves the \"nothing at stake\" problem\n\nA. the \"nothing at stake\" problem can be and has been solved by PoS\nconsensus mechanisms (unless you mean it more broadly than I'm taking it),\nand B. Proof of Burn should have just as much \"nothing at stake\" issues as\nPoS. Both consensus mechanisms depend on the current state of the chain to\ndetermine whether someone's stake or burn would allow the creation of a\nblock. But I am curious, how does proof of burn solve the \"nothing at\nstake\" problem in your view?\n\nOn Fri, May 21, 2021 at 10:58 AM Erik Aronesty <erik at q32.com> wrote:\n\n> proof of burn has all the benefits of proof of stake (if there are any)\n>\n> but it also solves the \"nothing at stake\" problem\n>\n> the incentive in POB is that you're making a long-term investment in\n> mining, and you want a stable protocol, quality network, etc.... to\n> pay off your investment.\n>\n> On Thu, May 20, 2021 at 8:04 PM Billy Tetrud <billy.tetrud at gmail.com>\n> wrote:\n> >\n> > I think there is a lot of misinformation and bias against Proof of\n> Stake. Yes there have been lots of shady coins that use insecure PoS\n> mechanisms. Yes there have been massive issues with distribution of PoS\n> coins (of course there have also been massive issues with PoW coins as\n> well). However, I want to remind everyone that there is a difference\n> between \"proved to be impossible\" and \"have not achieved recognized success\n> yet\". Most of the arguments levied against PoS are out of date or rely on\n> unproven assumptions or extrapolation from the analysis of a particular PoS\n> system. I certainly don't think we should experiment with bitcoin by\n> switching to PoS, but from my research, it seems very likely that there is\n> a proof of stake consensus protocol we could build that has substantially\n> higher security (cost / capital required to execute an attack) while at the\n> same time costing far less resources (which do translate to fees on the\n> network) *without* compromising any of the critical security properties\n> bitcoin relies on. I think the critical piece of this is the disagreements\n> around hardcoded checkpoints, which is a critical piece solving attacks\n> that could be levied on a PoS chain, and how that does (or doesn't) affect\n> the security model.\n> >\n> > @Eric Your proof of stake fallacy seems to be saying that PoS is worse\n> when a 51% attack happens. While I agree, I think that line of thinking\n> omits important facts:\n> > * The capital required to 51% attack a PoS chain can be made\n> substantially greater than on a PoS chain.\n> > * The capital the attacker stands to lose can be substantially greater\n> as well if the attack is successful.\n> > * The effectiveness of paying miners to raise the honest fraction of\n> miners above 50% may be quite bad.\n> > * Allowing a 51% attack is already unacceptable. It should be considered\n> whether what happens in the case of a 51% may not be significantly\n> different. The currency would likely be critically damaged in a 51% attack\n> regardless of consensus mechanism.\n> >\n> > > Proof-of-stake tends towards oligopolistic control\n> >\n> > People repeat this often, but the facts support this. There is no\n> centralization pressure in any proof of stake mechanism that I'm aware of.\n> IE if you have 10 times as much coin that you use to mint blocks, you\n> should expect to earn 10x as much minting revenue - not more than 10x. By\n> contrast, proof of work does in fact have clear centralization pressure -\n> this is not disputed. Our goal in relation to that is to ensure that the\n> centralization pressure remains insignifiant. Proof of work also clearly\n> has a lot more barriers to entry than any proof of stake system does. Both\n> of these mean the tendency towards oligopolistic control is worse for PoW.\n> >\n> > > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n> >\n> > I certainly agree. Bitcoin's energy usage at the moment is I think quite\n> warranted. However, the question is: can we do substantially better. I\n> think if we can, we probably should... eventually.\n> >\n> > > Proof of Stake is only resilient to \u2153 of the network demonstrating a\n> Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n> >\n> > I see no mention of this in the pos.pdf you linked to. I'm not aware of\n> any proof that all PoS systems have a failure threshold of 1/3. I know that\n> staking systems like Casper do in fact have that 1/3 requirement. However\n> there are PoS designs that should exceed that up to nearly 50% as far as\n> I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold\n> in the way you would think. IE, if 100% of miners are currently honest and\n> have a collective 100 exahashes/s hashpower, an attacker does not need to\n> obtain 100 exahashes/s, but actually only needs to accumulate 50\n> exahashes/s. This is because as the attacker accumulates hashpower, it\n> drives honest miners out of the market as the difficulty increases to\n> beyond what is economically sustainable. Also, its been shown that the best\n> proof of work can do is require an attacker to obtain 33% of the hashpower\n> because of the selfish mining attack discussed in depth in this paper:\n> https://arxiv.org/abs/1311.0243. Together, both of these things reduce\n> PoW's security by a factor of about 83% (1 - 50%*33%).\n> >\n> >  > Proof of Stake requires other trade-offs which are incompatible with\n> Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the\n> famous \"security vs. liveness\" guarantee\n> >\n> > Do you have a good source that talks about why you think proof of stake\n> cannot be used for a trustless digital cash?\n> >\n> > > You cannot gain tokens without someone choosing to give up those coins\n> - a form of permission.\n> >\n> > This is not a practical constraint. Just like in mining, some nodes may\n> reject you, but there will likely be more that will accept you, some\n> sellers may reject you, but most would accept your money as payment for\n> bitcoins. I don't think requiring the \"permission\" of one of millions of\n> people in the market can be reasonably considered a \"permissioned currency\".\n> >\n> > > 2. Proof of stake must have a trusted means of timestamping to\n> regulate overproduction of blocks\n> >\n> > Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed\n> to double their clock speeds. Both systems rely on an honest majority\n> sticking to standard time.\n> >\n> >\n> > On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >>\n> >> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n> >>\n> >> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org>\n> wrote:\n> >>>\n> >>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n> itself. PoS, VDFs, and so on are interesting but I guess there are other\n> threads going on these topics already where they would be relevant.\n> >>>\n> >>> Also, it's important to distinguish between oPoW and these other\n> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n> the core game theory or security assumptions of Hashcash and actually\n> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n> >>>\n> >>> Cheers,\n> >>> Mike\n> >>>\n> >>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >>>>\n> >>>> 1. i never suggested vdf's to replace pow.\n> >>>>\n> >>>> 2. my suggestion was specifically *in the context of* a working\n> >>>> proof-of-burn protocol\n> >>>>\n> >>>> - vdfs used only for timing (not block height)\n> >>>> - blind-burned coins of a specific age used to replace proof of work\n> >>>> - the required \"work\" per block would simply be a competition to\n> >>>> acquire rewards, and so miners would have to burn coins, well in\n> >>>> advance, and hope that their burned coins got rewarded in some far\n> >>>> future\n> >>>> - the point of burned coins is to mimic, in every meaningful way, the\n> >>>> value gained from proof of work... without some of the security\n> >>>> drawbacks\n> >>>> - the miner risks losing all of his burned coins (like all miners risk\n> >>>> losing their work in each block)\n> >>>> - new burns can't be used\n> >>>> - old burns age out (like ASICs do)\n> >>>> - other requirements on burns might be needed to properly mirror the\n> >>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n> >>>>\n> >>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n> >>>> might be more secure in the long run, and that if the entire space\n> >>>> agreed that such an endeavor was worthwhile, a test net could be spun\n> >>>> up, and a hard-fork could be initiated.\n> >>>>\n> >>>> 4. i would never suggest such a thing unless i believed it was\n> >>>> possible that consensus was possible.  so no, this is not an \"alt\n> >>>> coin\"\n> >>>>\n> >>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n> wrote:\n> >>>> >\n> >>>> > Hi ZmnSCPxj,\n> >>>> >\n> >>>> > Please note that I am not suggesting VDFs as a means to save\n> energy, but solely as a means to make the time between blocks more constant.\n> >>>> >\n> >>>> > Zac\n> >>>> >\n> >>>> >\n> >>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n> wrote:\n> >>>> >>\n> >>>> >> Good morning Zac,\n> >>>> >>\n> >>>> >> > VDFs might enable more constant block times, for instance by\n> having a two-step PoW:\n> >>>> >> >\n> >>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n> subject to difficulty adjustments similar to the as-is). As per the\n> property of VDFs, miners are able show proof of work.\n> >>>> >> >\n> >>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n> block takes 1 minute on average, again subject to as-is difficulty\n> adjustments.\n> >>>> >> >\n> >>>> >> > As a result, variation in block times will be greatly reduced.\n> >>>> >>\n> >>>> >> As I understand it, another weakness of VDFs is that they are not\n> inherently progress-free (their sequential nature prevents that; they are\n> inherently progress-requiring).\n> >>>> >>\n> >>>> >> Thus, a miner which focuses on improving the amount of energy that\n> it can pump into the VDF circuitry (by overclocking and freezing the\n> circuitry), could potentially get into a winner-takes-all situation,\n> possibly leading to even *worse* competition and even *more* energy\n> consumption.\n> >>>> >> After all, if you can start mining 0.1s faster than the\n> competition, that is a 0.1s advantage where *only you* can mine *in the\n> entire world*.\n> >>>> >>\n> >>>> >> Regards,\n> >>>> >> ZmnSCPxj\n> >>>> _______________________________________________\n> >>>> bitcoin-dev mailing list\n> >>>> bitcoin-dev at lists.linuxfoundation.org\n> >>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>>\n> >>>\n> >>>\n> >>> --\n> >>> Michael Dubrovsky\n> >>> Founder; PoWx\n> >>> www.PoWx.org\n> >>\n> >>\n> >>\n> >> --\n> >> Michael Dubrovsky\n> >> Founder; PoWx\n> >> www.PoWx.org\n> >> _______________________________________________\n> >> bitcoin-dev mailing list\n> >> bitcoin-dev at lists.linuxfoundation.org\n> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210521/0d41b5ee/attachment-0001.html>"
            },
            {
                "author": "Lloyd Fournier",
                "date": "2021-05-23T03:41:12",
                "message_text_only": "Hi Billy,\n\nI was going to write a post which started by dismissing many of the weak\narguments that are made against PoS made in this thread and elsewhere.\nAlthough I don't agree with all your points you have done a decent job here\nso I'll focus on the second part: why I think Proof-of-Stake is\ninappropriate for a Bitcoin-like system.\n\nProof of stake is not fit for purpose for a global settlement layer in a\npure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to\nbe.\nPoS necessarily gives responsibilities to the holders of coins that they do\nnot want and cannot handle.\nIn Bitcoin, large unsophisticated coin holders can put their coins in cold\nstorage without a second thought given to the health of the underlying\nledger.\nAs much as hardcore Bitcoiners try to convince them to run their own node,\nmost don't, and that's perfectly acceptable.\nAt no point do their personal decisions affect the underlying consensus --\nit only affects their personal security assurance (not that of the system\nitself).\nIn PoS systems this clean separation of responsibilities does not exist.\n\nI think that the more rigorously studied PoS protocols will work fine\nwithin the security claims made in their papers.\nPeople who believe that these protocols are destined for catastrophic\nconsensus failure are certainly in for a surprise.\nBut the devil is in the detail.\nLet's look at what the implications of using the leading proof of stake\nprotocols would have on Bitcoin:\n\n### Proof of SquareSpace (Cardano, Polkdadot)\n\nCardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an\ninbuilt on-chain delegation system[5].\nIn these protocols, coin holders who do not want to run their node with\ntheir hot keys in it delegate it to a \"Stake Pool\".\nI call the resulting system Proof-of-SquareSpace since most will choose a\npool by looking around for one with a nice website and offering the largest\nshare of the block reward.\nOn the surface this might sound no different than someone with an mining\nrig shopping around for a good mining pool but there are crucial\ndifferences:\n\n1. The person making the decision is forced into it just because they own\nthe currency -- someone with a mining rig has purchased it with the intent\nto make profit by participating in consensus.\n\n2. When you join a mining pool your systems are very much still online. You\nare just partaking in a pool to reduce your profit variance. You still see\nevery block that you help create and *you never help create a block without\nseeing it first*.\n\n3. If by SquareSpace sybil attack you gain a dishonest majority and start\ncensoring transactions how are the users meant to redelegate their stake to\nhonest pools?\nI guess they can just send a transaction delegating to another pool...oh\nwait I guess that might be censored too! This seems really really bad.\nIn Bitcoin, miners can just join a different pool at a whim. There is\nnothing the attacker can do to stop them. A temporary dishonest majority\nheals relatively well.\n\nThere is another severe disadvantage to this on-chain delegation system:\nevery UTXO must indicate which staking account this UTXO belongs to so the\nappropriate share of block rewards can be transferred there.\nBeing able to associate every UTXO to an account ruins one of the main\nprivacy advantages of the UTXO model.\nIt also grows the size of the blockchain significantly.\n\n### \"Pure\" proof of stake (Algorand)\n\nAlgorand's[4] approach is to only allow online stake to participate in the\nprotocol.\nTheoretically, This means that keys holding funds have to be online in\norder for them to author blocks when they are chosen.\nOf course in reality no one wants to keep their coin holding keys online so\nin Alogorand you can authorize a set of \"participation keys\"[1] that will\nbe used to create blocks on your coin holding key's behalf.\nHopefully you've spotted the problem.\nYou can send your participation keys to any malicious party with a nice\nwebsite (see random example [2]) offering you a good return.\nDamn it's still Proof-of-SquareSpace!\nThe minor advantage is that at least the participation keys expire after a\ncertain amount of time so eventually the SquareSpace attacker will lose\ntheir hold on consensus.\nImportantly there is also less junk on the blockchain because the\nparticipation keys are delegated off-chain and so are not making as much of\na mess.\n\n### Conclusion\n\nI don't see a way to get around the conflicting requirement that the keys\nfor large amounts of coins should be kept offline but those are exactly the\ncoins we need online to make the scheme secure.\nIf we allow delegation then we open up a new social attack surface and it\ndegenerates to Proof-of-SquareSpace.\n\nFor a \"digital gold\" like system like Bitcoin we optimize for simplicity\nand desperately want to avoid extraneous responsibilities for the holder of\nthe coin.\nAfter all, gold is an inert element on the periodic table that doesn't\nconfer responsibilities on the holder to maintain the quality of all the\nother bars of gold out there.\nBitcoin feels like this too and in many ways is more inert and beautifully\nboring than gold.\nFor Bitcoin to succeed I think we need to keep it that way and\nProof-of-Stake makes everything a bit too exciting.\n\nI suppose in the end the market will decide what is real digital gold and\nwhether these bad technical trade offs are worth being able to say it uses\nless electricity. It goes without saying that making bad technical\ndecisions to appease the current political climate is an anathema to\nBitcoin.\n\nWould be interested to know if you or others think differently on these\npoints.\n\n[1]:\nhttps://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n[2]: https://staking.staked.us/algorand-staking\n[3]: https://eprint.iacr.org/2017/573.pdf\n[4]:\nhttps://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n[5]:\nhttps://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n\nCheers,\n\nLL\n\nOn Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> I think there is a lot of misinformation and bias against Proof of Stake.\n> Yes there have been lots of shady coins that use insecure PoS mechanisms.\n> Yes there have been massive issues with distribution of PoS coins (of\n> course there have also been massive issues with PoW coins as well).\n> However, I want to remind everyone that there is a difference between\n> \"proved to be impossible\" and \"have not achieved recognized success yet\".\n> Most of the arguments levied against PoS are out of date or rely on\n> unproven assumptions or extrapolation from the analysis of a particular PoS\n> system. I certainly don't think we should experiment with bitcoin by\n> switching to PoS, but from my research, it seems very likely that there is\n> a proof of stake consensus protocol we could build that has substantially\n> higher security (cost / capital required to execute an attack) while at the\n> same time costing far less resources (which do translate to fees on the\n> network) *without* compromising any of the critical security properties\n> bitcoin relies on. I think the critical piece of this is the disagreements\n> around hardcoded checkpoints, which is a critical piece solving attacks\n> that could be levied on a PoS chain, and how that does (or doesn't) affect\n> the security model.\n>\n> @Eric Your proof of stake fallacy seems to be saying that PoS is worse\n> when a 51% attack happens. While I agree, I think that line of thinking\n> omits important facts:\n> * The capital required to 51% attack a PoS chain can be made substantially\n> greater than on a PoS chain.\n> * The capital the attacker stands to lose can be substantially greater as\n> well if the attack is successful.\n> * The effectiveness of paying miners to raise the honest fraction of\n> miners above 50% may be quite bad.\n> * Allowing a 51% attack is already unacceptable. It should be considered\n> whether what happens in the case of a 51% may not be significantly\n> different. The currency would likely be critically damaged in a 51% attack\n> regardless of consensus mechanism.\n>\n> > Proof-of-stake tends towards oligopolistic control\n>\n> People repeat this often, but the facts support this. There is no\n> centralization pressure in any proof of stake mechanism that I'm aware of.\n> IE if you have 10 times as much coin that you use to mint blocks, you\n> should expect to earn 10x as much minting revenue - not more than 10x. By\n> contrast, proof of work does in fact have clear centralization pressure -\n> this is not disputed. Our goal in relation to that is to ensure that the\n> centralization pressure remains insignifiant. Proof of work also clearly\n> has a lot more barriers to entry than any proof of stake system does. Both\n> of these mean the tendency towards oligopolistic control is worse for PoW.\n>\n> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>\n> I certainly agree. Bitcoin's energy usage at the moment is I think quite\n> warranted. However, the question is: can we do substantially better. I\n> think if we can, we probably should... eventually.\n>\n> > Proof of Stake is only resilient to \u2153 of the network demonstrating a\n> Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>\n> I see no mention of this in the pos.pdf\n> <https://download.wpsoftware.net/bitcoin/pos.pdf> you linked to. I'm not\n> aware of any proof that *all *PoS systems have a failure threshold of\n> 1/3. I know that staking systems like Casper do in fact have that 1/3\n> requirement. However there are PoS designs that should exceed that up to\n> nearly 50% as far as I'm aware. Proof of work is not in fact resilient up\n> to the 1/2 threshold in the way you would think. IE, if 100% of miners are\n> currently honest and have a collective 100 exahashes/s hashpower, an\n> attacker does not need to obtain 100 exahashes/s, but actually only needs\n> to accumulate 50 exahashes/s. This is because as the attacker accumulates\n> hashpower, it drives honest miners out of the market as the difficulty\n> increases to beyond what is economically sustainable. Also, its been shown\n> that the best proof of work can do is require an attacker to obtain 33% of\n> the hashpower because of the selfish mining attack\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> discussed\n> in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both\n> of these things reduce PoW's security by a factor of about 83% (1 -\n> 50%*33%).\n>\n>  > Proof of Stake requires other trade-offs which are incompatible with\n> Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the\n> famous \"security vs. liveness\" guarantee\n>\n> Do you have a good source that talks about why you think proof of stake\n> cannot be used for a trustless digital cash?\n>\n> > You cannot gain tokens without someone choosing to give up those coins -\n> a form of permission.\n>\n> This is not a practical constraint. Just like in mining, some nodes may\n> reject you, but there will likely be more that will accept you, some\n> sellers may reject you, but most would accept your money as payment for\n> bitcoins. I don't think requiring the \"permission\" of one of millions of\n> people in the market can be reasonably considered a \"permissioned\n> currency\".\n>\n> > 2. Proof of stake must have a trusted means of timestamping to regulate\n> overproduction of blocks\n>\n> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed\n> to double their clock speeds. Both systems rely on an honest majority\n> sticking to standard time.\n>\n>\n> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>\n>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>\n>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n>>> itself. PoS, VDFs, and so on are interesting but I guess there are other\n>>> threads going on these topics already where they would be relevant.\n>>>\n>>> Also, it's important to distinguish between oPoW and these other\n>>> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n>>> the core game theory or security assumptions of Hashcash and actually\n>>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>\n>>> Cheers,\n>>> Mike\n>>>\n>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>\n>>>> 1. i never suggested vdf's to replace pow.\n>>>>\n>>>> 2. my suggestion was specifically *in the context of* a working\n>>>> proof-of-burn protocol\n>>>>\n>>>> - vdfs used only for timing (not block height)\n>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>> - the required \"work\" per block would simply be a competition to\n>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>> advance, and hope that their burned coins got rewarded in some far\n>>>> future\n>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>> value gained from proof of work... without some of the security\n>>>> drawbacks\n>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>> losing their work in each block)\n>>>> - new burns can't be used\n>>>> - old burns age out (like ASICs do)\n>>>> - other requirements on burns might be needed to properly mirror the\n>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>\n>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>> might be more secure in the long run, and that if the entire space\n>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>> up, and a hard-fork could be initiated.\n>>>>\n>>>> 4. i would never suggest such a thing unless i believed it was\n>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>> coin\"\n>>>>\n>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n>>>> wrote:\n>>>> >\n>>>> > Hi ZmnSCPxj,\n>>>> >\n>>>> > Please note that I am not suggesting VDFs as a means to save energy,\n>>>> but solely as a means to make the time between blocks more constant.\n>>>> >\n>>>> > Zac\n>>>> >\n>>>> >\n>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n>>>> wrote:\n>>>> >>\n>>>> >> Good morning Zac,\n>>>> >>\n>>>> >> > VDFs might enable more constant block times, for instance by\n>>>> having a two-step PoW:\n>>>> >> >\n>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n>>>> subject to difficulty adjustments similar to the as-is). As per the\n>>>> property of VDFs, miners are able show proof of work.\n>>>> >> >\n>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n>>>> block takes 1 minute on average, again subject to as-is difficulty\n>>>> adjustments.\n>>>> >> >\n>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>> >>\n>>>> >> As I understand it, another weakness of VDFs is that they are not\n>>>> inherently progress-free (their sequential nature prevents that; they are\n>>>> inherently progress-requiring).\n>>>> >>\n>>>> >> Thus, a miner which focuses on improving the amount of energy that\n>>>> it can pump into the VDF circuitry (by overclocking and freezing the\n>>>> circuitry), could potentially get into a winner-takes-all situation,\n>>>> possibly leading to even *worse* competition and even *more* energy\n>>>> consumption.\n>>>> >> After all, if you can start mining 0.1s faster than the competition,\n>>>> that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>> >>\n>>>> >> Regards,\n>>>> >> ZmnSCPxj\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n>>>\n>>> --\n>>> Michael Dubrovsky\n>>> Founder; PoWx\n>>> www.PoWx.org <http://www.powx.org/>\n>>>\n>>\n>>\n>> --\n>> Michael Dubrovsky\n>> Founder; PoWx\n>> www.PoWx.org <http://www.powx.org/>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/732fa3c5/attachment-0001.html>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-23T19:10:50",
                "message_text_only": "@Lloyd\n\n>  Proof-of-SquareSpace\n\nI agree with your points about delegated proof of stake. I wrote my own\ncritique about that\n<https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#analysis-of-delegated-proof-of-stake-dpos>\nas\nwell. And your point, that other forms of PoS devolve to DPoS by virtue of\npeople wanting to actively mint blocks without exposing their coins in hot\nwallets, is an interesting one.\n\n> how are the users meant to redelegate their stake to honest pools?\n\nThis could be mitigated partially if delegation didn't require any kind of\nblockchain transaction. For example, users could simply send a signed\nmessage saying \"this other key can mint blocks with my coins\", and then\nminting a block using those coins would require presenting the delegation\nsignature. This only partially mitigates the problem since the dishonest\npool would still be able to use those coins as well, so it would be a race\nat that point. Still better than nothing. And pools could simply require\nfull custody of the coins.\n\n>From what you mentioned, it sounds like maybe Algorand does something\nsimilar to this.\n\n> I don't see a way to get around the conflicting requirement that the keys\nfor large amounts of coins should be kept offline but those are exactly the\ncoins we need online to make the scheme secure.\n\nThere are a couple solutions you didn't mention. One is your \"traditional\"\nlocked-stake kind of systems, where participants are required to lock their\nstake for long periods of time. Since normal users aren't likely to want to\ndo this, it will likely be left to more sophisticated stakers likely\nstaking very large amounts.\n\nBoth mechanisms you mentioned allow delegation, and it might seem like\nmaybe there'd be a way to disallow delegation, however since users can\nalways give custody of their coins to trusted pools, that would be a\ndelgation mechanism of last resort that can't be removed. So you can do\nthings that make it hard (for both users and pool operators) to delegate\ntrustlessly, but you can't get rid of the ability to delgate entirely.\n\nIn general, the situations where I see people not pooling are:\n\nA. They are entirely prevented by technical means. It seems reasonably\nclear that this is impossible.\nB. The downsides are more than unsophisticated users are willing to incur\n(eg stake locking).\nC. The rewards are so small that it isn't worth it for people to put in\nmuch effort to gain them.\nD. The rewards are so frequent that pooling is unnecessary.\n\nB excludes a lot of people from being able to help secure the chain, but\nthis is not materially different from PoW mining in that regard. D is a bit\nborder line. With 1 billion people attempting to participate and 10 minute\nblocks, 232 people would need to share the block reward in order to expect\na payout on average once per month. With 8 billion people that would turn\ninto more like 1700 people. This seems potentially doable (eg via cosigner\nrequirements on minted blocks), but it is a lot of participants per block.\n\nI think options C and D combined would be an ideal approach here. Because\nminting uses very few real resources, minting could be pretty much have\narbitrarily low ongoing costs. This means fees can be low and blocks can\nhave low payouts. If the reward was low and people could expect to see it\nonce every couple years, people could simply treat it like a lottery. Great\nif they win it now, but nothing that anyone needs to rely on (which would\nincentivize the pools to reduce variance that we want to avoid). If there\nis no locked stake or other major barriers in place to minting blocks, that\nwould also help avoid the compultion to use a pool.\n\nIn any case, you bring up good points, and they certainly complicate the\nissue. By the way, if you were confused as to what VPoS was in the section\nfrom my above link, this might satisfy your curiosity\n<https://github.com/fresheneesz/ValidatedProofOfStake>.\n\nCheers\n\n\n\n\nOn Sat, May 22, 2021 at 5:41 PM Lloyd Fournier <lloyd.fourn at gmail.com>\nwrote:\n\n> Hi Billy,\n>\n> I was going to write a post which started by dismissing many of the weak\n> arguments that are made against PoS made in this thread and elsewhere.\n> Although I don't agree with all your points you have done a decent job\n> here so I'll focus on the second part: why I think Proof-of-Stake is\n> inappropriate for a Bitcoin-like system.\n>\n> Proof of stake is not fit for purpose for a global settlement layer in a\n> pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to\n> be.\n> PoS necessarily gives responsibilities to the holders of coins that they\n> do not want and cannot handle.\n> In Bitcoin, large unsophisticated coin holders can put their coins in cold\n> storage without a second thought given to the health of the underlying\n> ledger.\n> As much as hardcore Bitcoiners try to convince them to run their own node,\n> most don't, and that's perfectly acceptable.\n> At no point do their personal decisions affect the underlying consensus --\n> it only affects their personal security assurance (not that of the system\n> itself).\n> In PoS systems this clean separation of responsibilities does not exist.\n>\n> I think that the more rigorously studied PoS protocols will work fine\n> within the security claims made in their papers.\n> People who believe that these protocols are destined for catastrophic\n> consensus failure are certainly in for a surprise.\n> But the devil is in the detail.\n> Let's look at what the implications of using the leading proof of stake\n> protocols would have on Bitcoin:\n>\n> ### Proof of SquareSpace (Cardano, Polkdadot)\n>\n> Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an\n> inbuilt on-chain delegation system[5].\n> In these protocols, coin holders who do not want to run their node with\n> their hot keys in it delegate it to a \"Stake Pool\".\n> I call the resulting system Proof-of-SquareSpace since most will choose a\n> pool by looking around for one with a nice website and offering the largest\n> share of the block reward.\n> On the surface this might sound no different than someone with an mining\n> rig shopping around for a good mining pool but there are crucial\n> differences:\n>\n> 1. The person making the decision is forced into it just because they own\n> the currency -- someone with a mining rig has purchased it with the intent\n> to make profit by participating in consensus.\n>\n> 2. When you join a mining pool your systems are very much still online.\n> You are just partaking in a pool to reduce your profit variance. You still\n> see every block that you help create and *you never help create a block\n> without seeing it first*.\n>\n> 3. If by SquareSpace sybil attack you gain a dishonest majority and start\n> censoring transactions how are the users meant to redelegate their stake to\n> honest pools?\n> I guess they can just send a transaction delegating to another pool...oh\n> wait I guess that might be censored too! This seems really really bad.\n> In Bitcoin, miners can just join a different pool at a whim. There is\n> nothing the attacker can do to stop them. A temporary dishonest majority\n> heals relatively well.\n>\n> There is another severe disadvantage to this on-chain delegation system:\n> every UTXO must indicate which staking account this UTXO belongs to so the\n> appropriate share of block rewards can be transferred there.\n> Being able to associate every UTXO to an account ruins one of the main\n> privacy advantages of the UTXO model.\n> It also grows the size of the blockchain significantly.\n>\n> ### \"Pure\" proof of stake (Algorand)\n>\n> Algorand's[4] approach is to only allow online stake to participate in the\n> protocol.\n> Theoretically, This means that keys holding funds have to be online in\n> order for them to author blocks when they are chosen.\n> Of course in reality no one wants to keep their coin holding keys online\n> so in Alogorand you can authorize a set of \"participation keys\"[1] that\n> will be used to create blocks on your coin holding key's behalf.\n> Hopefully you've spotted the problem.\n> You can send your participation keys to any malicious party with a nice\n> website (see random example [2]) offering you a good return.\n> Damn it's still Proof-of-SquareSpace!\n> The minor advantage is that at least the participation keys expire after a\n> certain amount of time so eventually the SquareSpace attacker will lose\n> their hold on consensus.\n> Importantly there is also less junk on the blockchain because the\n> participation keys are delegated off-chain and so are not making as much of\n> a mess.\n>\n> ### Conclusion\n>\n> I don't see a way to get around the conflicting requirement that the keys\n> for large amounts of coins should be kept offline but those are exactly the\n> coins we need online to make the scheme secure.\n> If we allow delegation then we open up a new social attack surface and it\n> degenerates to Proof-of-SquareSpace.\n>\n> For a \"digital gold\" like system like Bitcoin we optimize for simplicity\n> and desperately want to avoid extraneous responsibilities for the holder of\n> the coin.\n> After all, gold is an inert element on the periodic table that doesn't\n> confer responsibilities on the holder to maintain the quality of all the\n> other bars of gold out there.\n> Bitcoin feels like this too and in many ways is more inert and beautifully\n> boring than gold.\n> For Bitcoin to succeed I think we need to keep it that way and\n> Proof-of-Stake makes everything a bit too exciting.\n>\n> I suppose in the end the market will decide what is real digital gold and\n> whether these bad technical trade offs are worth being able to say it uses\n> less electricity. It goes without saying that making bad technical\n> decisions to appease the current political climate is an anathema to\n> Bitcoin.\n>\n> Would be interested to know if you or others think differently on these\n> points.\n>\n> [1]:\n> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n> [2]: https://staking.staked.us/algorand-staking\n> [3]: https://eprint.iacr.org/2017/573.pdf\n> [4]:\n> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n> [5]:\n> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>\n> Cheers,\n>\n> LL\n>\n> On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> I think there is a lot of misinformation and bias against Proof of Stake.\n>> Yes there have been lots of shady coins that use insecure PoS mechanisms.\n>> Yes there have been massive issues with distribution of PoS coins (of\n>> course there have also been massive issues with PoW coins as well).\n>> However, I want to remind everyone that there is a difference between\n>> \"proved to be impossible\" and \"have not achieved recognized success yet\".\n>> Most of the arguments levied against PoS are out of date or rely on\n>> unproven assumptions or extrapolation from the analysis of a particular PoS\n>> system. I certainly don't think we should experiment with bitcoin by\n>> switching to PoS, but from my research, it seems very likely that there is\n>> a proof of stake consensus protocol we could build that has substantially\n>> higher security (cost / capital required to execute an attack) while at the\n>> same time costing far less resources (which do translate to fees on the\n>> network) *without* compromising any of the critical security properties\n>> bitcoin relies on. I think the critical piece of this is the disagreements\n>> around hardcoded checkpoints, which is a critical piece solving attacks\n>> that could be levied on a PoS chain, and how that does (or doesn't) affect\n>> the security model.\n>>\n>> @Eric Your proof of stake fallacy seems to be saying that PoS is worse\n>> when a 51% attack happens. While I agree, I think that line of thinking\n>> omits important facts:\n>> * The capital required to 51% attack a PoS chain can be made\n>> substantially greater than on a PoS chain.\n>> * The capital the attacker stands to lose can be substantially greater as\n>> well if the attack is successful.\n>> * The effectiveness of paying miners to raise the honest fraction of\n>> miners above 50% may be quite bad.\n>> * Allowing a 51% attack is already unacceptable. It should be considered\n>> whether what happens in the case of a 51% may not be significantly\n>> different. The currency would likely be critically damaged in a 51% attack\n>> regardless of consensus mechanism.\n>>\n>> > Proof-of-stake tends towards oligopolistic control\n>>\n>> People repeat this often, but the facts support this. There is no\n>> centralization pressure in any proof of stake mechanism that I'm aware of.\n>> IE if you have 10 times as much coin that you use to mint blocks, you\n>> should expect to earn 10x as much minting revenue - not more than 10x. By\n>> contrast, proof of work does in fact have clear centralization pressure -\n>> this is not disputed. Our goal in relation to that is to ensure that the\n>> centralization pressure remains insignifiant. Proof of work also clearly\n>> has a lot more barriers to entry than any proof of stake system does. Both\n>> of these mean the tendency towards oligopolistic control is worse for PoW.\n>>\n>> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>\n>> I certainly agree. Bitcoin's energy usage at the moment is I think quite\n>> warranted. However, the question is: can we do substantially better. I\n>> think if we can, we probably should... eventually.\n>>\n>> > Proof of Stake is only resilient to \u2153 of the network demonstrating a\n>> Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>\n>> I see no mention of this in the pos.pdf\n>> <https://download.wpsoftware.net/bitcoin/pos.pdf> you linked to. I'm not\n>> aware of any proof that *all *PoS systems have a failure threshold of\n>> 1/3. I know that staking systems like Casper do in fact have that 1/3\n>> requirement. However there are PoS designs that should exceed that up to\n>> nearly 50% as far as I'm aware. Proof of work is not in fact resilient up\n>> to the 1/2 threshold in the way you would think. IE, if 100% of miners are\n>> currently honest and have a collective 100 exahashes/s hashpower, an\n>> attacker does not need to obtain 100 exahashes/s, but actually only needs\n>> to accumulate 50 exahashes/s. This is because as the attacker accumulates\n>> hashpower, it drives honest miners out of the market as the difficulty\n>> increases to beyond what is economically sustainable. Also, its been shown\n>> that the best proof of work can do is require an attacker to obtain 33% of\n>> the hashpower because of the selfish mining attack\n>> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> discussed\n>> in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both\n>> of these things reduce PoW's security by a factor of about 83% (1 -\n>> 50%*33%).\n>>\n>>  > Proof of Stake requires other trade-offs which are incompatible with\n>> Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the\n>> famous \"security vs. liveness\" guarantee\n>>\n>> Do you have a good source that talks about why you think proof of stake\n>> cannot be used for a trustless digital cash?\n>>\n>> > You cannot gain tokens without someone choosing to give up those coins\n>> - a form of permission.\n>>\n>> This is not a practical constraint. Just like in mining, some nodes may\n>> reject you, but there will likely be more that will accept you, some\n>> sellers may reject you, but most would accept your money as payment for\n>> bitcoins. I don't think requiring the \"permission\" of one of millions of\n>> people in the market can be reasonably considered a \"permissioned\n>> currency\".\n>>\n>> > 2. Proof of stake must have a trusted means of timestamping to regulate\n>> overproduction of blocks\n>>\n>> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed\n>> to double their clock speeds. Both systems rely on an honest majority\n>> sticking to standard time.\n>>\n>>\n>> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>\n>>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org>\n>>> wrote:\n>>>\n>>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n>>>> itself. PoS, VDFs, and so on are interesting but I guess there are other\n>>>> threads going on these topics already where they would be relevant.\n>>>>\n>>>> Also, it's important to distinguish between oPoW and these other\n>>>> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n>>>> the core game theory or security assumptions of Hashcash and actually\n>>>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>>\n>>>> Cheers,\n>>>> Mike\n>>>>\n>>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>\n>>>>> 1. i never suggested vdf's to replace pow.\n>>>>>\n>>>>> 2. my suggestion was specifically *in the context of* a working\n>>>>> proof-of-burn protocol\n>>>>>\n>>>>> - vdfs used only for timing (not block height)\n>>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>>> - the required \"work\" per block would simply be a competition to\n>>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>>> advance, and hope that their burned coins got rewarded in some far\n>>>>> future\n>>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>>> value gained from proof of work... without some of the security\n>>>>> drawbacks\n>>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>>> losing their work in each block)\n>>>>> - new burns can't be used\n>>>>> - old burns age out (like ASICs do)\n>>>>> - other requirements on burns might be needed to properly mirror the\n>>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>>\n>>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>>> might be more secure in the long run, and that if the entire space\n>>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>>> up, and a hard-fork could be initiated.\n>>>>>\n>>>>> 4. i would never suggest such a thing unless i believed it was\n>>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>>> coin\"\n>>>>>\n>>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n>>>>> wrote:\n>>>>> >\n>>>>> > Hi ZmnSCPxj,\n>>>>> >\n>>>>> > Please note that I am not suggesting VDFs as a means to save energy,\n>>>>> but solely as a means to make the time between blocks more constant.\n>>>>> >\n>>>>> > Zac\n>>>>> >\n>>>>> >\n>>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n>>>>> wrote:\n>>>>> >>\n>>>>> >> Good morning Zac,\n>>>>> >>\n>>>>> >> > VDFs might enable more constant block times, for instance by\n>>>>> having a two-step PoW:\n>>>>> >> >\n>>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n>>>>> subject to difficulty adjustments similar to the as-is). As per the\n>>>>> property of VDFs, miners are able show proof of work.\n>>>>> >> >\n>>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n>>>>> block takes 1 minute on average, again subject to as-is difficulty\n>>>>> adjustments.\n>>>>> >> >\n>>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>>> >>\n>>>>> >> As I understand it, another weakness of VDFs is that they are not\n>>>>> inherently progress-free (their sequential nature prevents that; they are\n>>>>> inherently progress-requiring).\n>>>>> >>\n>>>>> >> Thus, a miner which focuses on improving the amount of energy that\n>>>>> it can pump into the VDF circuitry (by overclocking and freezing the\n>>>>> circuitry), could potentially get into a winner-takes-all situation,\n>>>>> possibly leading to even *worse* competition and even *more* energy\n>>>>> consumption.\n>>>>> >> After all, if you can start mining 0.1s faster than the\n>>>>> competition, that is a 0.1s advantage where *only you* can mine *in the\n>>>>> entire world*.\n>>>>> >>\n>>>>> >> Regards,\n>>>>> >> ZmnSCPxj\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>\n>>>>\n>>>>\n>>>> --\n>>>> Michael Dubrovsky\n>>>> Founder; PoWx\n>>>> www.PoWx.org <http://www.powx.org/>\n>>>>\n>>>\n>>>\n>>> --\n>>> Michael Dubrovsky\n>>> Founder; PoWx\n>>> www.PoWx.org <http://www.powx.org/>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/430ad500/attachment-0001.html>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-23T19:28:43",
                "message_text_only": "I made a couple typos and mistakes in my couple previous emails:\n\n* \"People repeat this often, but the facts support this\" -> \"the facts *don't\n*support this\"\n* \"Together, both of these things reduce PoW's security by a factor of\nabout 83% (1 - 50%*33%).\" -> \"factor of about 83% (1 - 50%**(50% - 33%)/50%*).\"\n(I made a mistake that happened to come out to an almost identical result\ncoincidentally).\n* \"And pools could simply require full custody of the coins.\" -> \"*But *pools\ncould...\"\n\nOn Sun, May 23, 2021 at 9:10 AM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n\n> @Lloyd\n>\n> >  Proof-of-SquareSpace\n>\n> I agree with your points about delegated proof of stake. I wrote my own\n> critique about that\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#analysis-of-delegated-proof-of-stake-dpos> as\n> well. And your point, that other forms of PoS devolve to DPoS by virtue of\n> people wanting to actively mint blocks without exposing their coins in hot\n> wallets, is an interesting one.\n>\n> > how are the users meant to redelegate their stake to honest pools?\n>\n> This could be mitigated partially if delegation didn't require any kind of\n> blockchain transaction. For example, users could simply send a signed\n> message saying \"this other key can mint blocks with my coins\", and then\n> minting a block using those coins would require presenting the delegation\n> signature. This only partially mitigates the problem since the dishonest\n> pool would still be able to use those coins as well, so it would be a race\n> at that point. Still better than nothing. And pools could simply require\n> full custody of the coins.\n>\n> From what you mentioned, it sounds like maybe Algorand does something\n> similar to this.\n>\n> > I don't see a way to get around the conflicting requirement that the\n> keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n>\n> There are a couple solutions you didn't mention. One is your \"traditional\"\n> locked-stake kind of systems, where participants are required to lock their\n> stake for long periods of time. Since normal users aren't likely to want to\n> do this, it will likely be left to more sophisticated stakers likely\n> staking very large amounts.\n>\n> Both mechanisms you mentioned allow delegation, and it might seem like\n> maybe there'd be a way to disallow delegation, however since users can\n> always give custody of their coins to trusted pools, that would be a\n> delgation mechanism of last resort that can't be removed. So you can do\n> things that make it hard (for both users and pool operators) to delegate\n> trustlessly, but you can't get rid of the ability to delgate entirely.\n>\n> In general, the situations where I see people not pooling are:\n>\n> A. They are entirely prevented by technical means. It seems reasonably\n> clear that this is impossible.\n> B. The downsides are more than unsophisticated users are willing to incur\n> (eg stake locking).\n> C. The rewards are so small that it isn't worth it for people to put in\n> much effort to gain them.\n> D. The rewards are so frequent that pooling is unnecessary.\n>\n> B excludes a lot of people from being able to help secure the chain, but\n> this is not materially different from PoW mining in that regard. D is a bit\n> border line. With 1 billion people attempting to participate and 10 minute\n> blocks, 232 people would need to share the block reward in order to expect\n> a payout on average once per month. With 8 billion people that would turn\n> into more like 1700 people. This seems potentially doable (eg via cosigner\n> requirements on minted blocks), but it is a lot of participants per block.\n>\n> I think options C and D combined would be an ideal approach here. Because\n> minting uses very few real resources, minting could be pretty much have\n> arbitrarily low ongoing costs. This means fees can be low and blocks can\n> have low payouts. If the reward was low and people could expect to see it\n> once every couple years, people could simply treat it like a lottery. Great\n> if they win it now, but nothing that anyone needs to rely on (which would\n> incentivize the pools to reduce variance that we want to avoid). If there\n> is no locked stake or other major barriers in place to minting blocks, that\n> would also help avoid the compultion to use a pool.\n>\n> In any case, you bring up good points, and they certainly complicate the\n> issue. By the way, if you were confused as to what VPoS was in the section\n> from my above link, this might satisfy your curiosity\n> <https://github.com/fresheneesz/ValidatedProofOfStake>.\n>\n> Cheers\n>\n>\n>\n>\n> On Sat, May 22, 2021 at 5:41 PM Lloyd Fournier <lloyd.fourn at gmail.com>\n> wrote:\n>\n>> Hi Billy,\n>>\n>> I was going to write a post which started by dismissing many of the weak\n>> arguments that are made against PoS made in this thread and elsewhere.\n>> Although I don't agree with all your points you have done a decent job\n>> here so I'll focus on the second part: why I think Proof-of-Stake is\n>> inappropriate for a Bitcoin-like system.\n>>\n>> Proof of stake is not fit for purpose for a global settlement layer in a\n>> pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to\n>> be.\n>> PoS necessarily gives responsibilities to the holders of coins that they\n>> do not want and cannot handle.\n>> In Bitcoin, large unsophisticated coin holders can put their coins in\n>> cold storage without a second thought given to the health of the underlying\n>> ledger.\n>> As much as hardcore Bitcoiners try to convince them to run their own\n>> node, most don't, and that's perfectly acceptable.\n>> At no point do their personal decisions affect the underlying consensus\n>> -- it only affects their personal security assurance (not that of the\n>> system itself).\n>> In PoS systems this clean separation of responsibilities does not exist.\n>>\n>> I think that the more rigorously studied PoS protocols will work fine\n>> within the security claims made in their papers.\n>> People who believe that these protocols are destined for catastrophic\n>> consensus failure are certainly in for a surprise.\n>> But the devil is in the detail.\n>> Let's look at what the implications of using the leading proof of stake\n>> protocols would have on Bitcoin:\n>>\n>> ### Proof of SquareSpace (Cardano, Polkdadot)\n>>\n>> Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an\n>> inbuilt on-chain delegation system[5].\n>> In these protocols, coin holders who do not want to run their node with\n>> their hot keys in it delegate it to a \"Stake Pool\".\n>> I call the resulting system Proof-of-SquareSpace since most will choose a\n>> pool by looking around for one with a nice website and offering the largest\n>> share of the block reward.\n>> On the surface this might sound no different than someone with an mining\n>> rig shopping around for a good mining pool but there are crucial\n>> differences:\n>>\n>> 1. The person making the decision is forced into it just because they own\n>> the currency -- someone with a mining rig has purchased it with the intent\n>> to make profit by participating in consensus.\n>>\n>> 2. When you join a mining pool your systems are very much still online.\n>> You are just partaking in a pool to reduce your profit variance. You still\n>> see every block that you help create and *you never help create a block\n>> without seeing it first*.\n>>\n>> 3. If by SquareSpace sybil attack you gain a dishonest majority and start\n>> censoring transactions how are the users meant to redelegate their stake to\n>> honest pools?\n>> I guess they can just send a transaction delegating to another pool...oh\n>> wait I guess that might be censored too! This seems really really bad.\n>> In Bitcoin, miners can just join a different pool at a whim. There is\n>> nothing the attacker can do to stop them. A temporary dishonest majority\n>> heals relatively well.\n>>\n>> There is another severe disadvantage to this on-chain delegation system:\n>> every UTXO must indicate which staking account this UTXO belongs to so the\n>> appropriate share of block rewards can be transferred there.\n>> Being able to associate every UTXO to an account ruins one of the main\n>> privacy advantages of the UTXO model.\n>> It also grows the size of the blockchain significantly.\n>>\n>> ### \"Pure\" proof of stake (Algorand)\n>>\n>> Algorand's[4] approach is to only allow online stake to participate in\n>> the protocol.\n>> Theoretically, This means that keys holding funds have to be online in\n>> order for them to author blocks when they are chosen.\n>> Of course in reality no one wants to keep their coin holding keys online\n>> so in Alogorand you can authorize a set of \"participation keys\"[1] that\n>> will be used to create blocks on your coin holding key's behalf.\n>> Hopefully you've spotted the problem.\n>> You can send your participation keys to any malicious party with a nice\n>> website (see random example [2]) offering you a good return.\n>> Damn it's still Proof-of-SquareSpace!\n>> The minor advantage is that at least the participation keys expire after\n>> a certain amount of time so eventually the SquareSpace attacker will lose\n>> their hold on consensus.\n>> Importantly there is also less junk on the blockchain because the\n>> participation keys are delegated off-chain and so are not making as much of\n>> a mess.\n>>\n>> ### Conclusion\n>>\n>> I don't see a way to get around the conflicting requirement that the keys\n>> for large amounts of coins should be kept offline but those are exactly the\n>> coins we need online to make the scheme secure.\n>> If we allow delegation then we open up a new social attack surface and it\n>> degenerates to Proof-of-SquareSpace.\n>>\n>> For a \"digital gold\" like system like Bitcoin we optimize for simplicity\n>> and desperately want to avoid extraneous responsibilities for the holder of\n>> the coin.\n>> After all, gold is an inert element on the periodic table that doesn't\n>> confer responsibilities on the holder to maintain the quality of all the\n>> other bars of gold out there.\n>> Bitcoin feels like this too and in many ways is more inert and\n>> beautifully boring than gold.\n>> For Bitcoin to succeed I think we need to keep it that way and\n>> Proof-of-Stake makes everything a bit too exciting.\n>>\n>> I suppose in the end the market will decide what is real digital gold and\n>> whether these bad technical trade offs are worth being able to say it uses\n>> less electricity. It goes without saying that making bad technical\n>> decisions to appease the current political climate is an anathema to\n>> Bitcoin.\n>>\n>> Would be interested to know if you or others think differently on these\n>> points.\n>>\n>> [1]:\n>> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>> [2]: https://staking.staked.us/algorand-staking\n>> [3]: https://eprint.iacr.org/2017/573.pdf\n>> [4]:\n>> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>> [5]:\n>> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>\n>> Cheers,\n>>\n>> LL\n>>\n>> On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>>> I think there is a lot of misinformation and bias against Proof of\n>>> Stake. Yes there have been lots of shady coins that use insecure PoS\n>>> mechanisms. Yes there have been massive issues with distribution of PoS\n>>> coins (of course there have also been massive issues with PoW coins as\n>>> well). However, I want to remind everyone that there is a difference\n>>> between \"proved to be impossible\" and \"have not achieved recognized success\n>>> yet\". Most of the arguments levied against PoS are out of date or rely on\n>>> unproven assumptions or extrapolation from the analysis of a particular PoS\n>>> system. I certainly don't think we should experiment with bitcoin by\n>>> switching to PoS, but from my research, it seems very likely that there is\n>>> a proof of stake consensus protocol we could build that has substantially\n>>> higher security (cost / capital required to execute an attack) while at the\n>>> same time costing far less resources (which do translate to fees on the\n>>> network) *without* compromising any of the critical security properties\n>>> bitcoin relies on. I think the critical piece of this is the disagreements\n>>> around hardcoded checkpoints, which is a critical piece solving attacks\n>>> that could be levied on a PoS chain, and how that does (or doesn't) affect\n>>> the security model.\n>>>\n>>> @Eric Your proof of stake fallacy seems to be saying that PoS is worse\n>>> when a 51% attack happens. While I agree, I think that line of thinking\n>>> omits important facts:\n>>> * The capital required to 51% attack a PoS chain can be made\n>>> substantially greater than on a PoS chain.\n>>> * The capital the attacker stands to lose can be substantially greater\n>>> as well if the attack is successful.\n>>> * The effectiveness of paying miners to raise the honest fraction of\n>>> miners above 50% may be quite bad.\n>>> * Allowing a 51% attack is already unacceptable. It should be considered\n>>> whether what happens in the case of a 51% may not be significantly\n>>> different. The currency would likely be critically damaged in a 51% attack\n>>> regardless of consensus mechanism.\n>>>\n>>> > Proof-of-stake tends towards oligopolistic control\n>>>\n>>> People repeat this often, but the facts support this. There is no\n>>> centralization pressure in any proof of stake mechanism that I'm aware of.\n>>> IE if you have 10 times as much coin that you use to mint blocks, you\n>>> should expect to earn 10x as much minting revenue - not more than 10x. By\n>>> contrast, proof of work does in fact have clear centralization pressure -\n>>> this is not disputed. Our goal in relation to that is to ensure that the\n>>> centralization pressure remains insignifiant. Proof of work also clearly\n>>> has a lot more barriers to entry than any proof of stake system does. Both\n>>> of these mean the tendency towards oligopolistic control is worse for PoW.\n>>>\n>>> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>>\n>>> I certainly agree. Bitcoin's energy usage at the moment is I think quite\n>>> warranted. However, the question is: can we do substantially better. I\n>>> think if we can, we probably should... eventually.\n>>>\n>>> > Proof of Stake is only resilient to \u2153 of the network demonstrating a\n>>> Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>>\n>>> I see no mention of this in the pos.pdf\n>>> <https://download.wpsoftware.net/bitcoin/pos.pdf> you linked to. I'm\n>>> not aware of any proof that *all *PoS systems have a failure threshold\n>>> of 1/3. I know that staking systems like Casper do in fact have that 1/3\n>>> requirement. However there are PoS designs that should exceed that up to\n>>> nearly 50% as far as I'm aware. Proof of work is not in fact resilient up\n>>> to the 1/2 threshold in the way you would think. IE, if 100% of miners are\n>>> currently honest and have a collective 100 exahashes/s hashpower, an\n>>> attacker does not need to obtain 100 exahashes/s, but actually only needs\n>>> to accumulate 50 exahashes/s. This is because as the attacker accumulates\n>>> hashpower, it drives honest miners out of the market as the difficulty\n>>> increases to beyond what is economically sustainable. Also, its been shown\n>>> that the best proof of work can do is require an attacker to obtain 33% of\n>>> the hashpower because of the selfish mining attack\n>>> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> discussed\n>>> in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both\n>>> of these things reduce PoW's security by a factor of about 83% (1 -\n>>> 50%*33%).\n>>>\n>>>  > Proof of Stake requires other trade-offs which are incompatible with\n>>> Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the\n>>> famous \"security vs. liveness\" guarantee\n>>>\n>>> Do you have a good source that talks about why you think proof of stake\n>>> cannot be used for a trustless digital cash?\n>>>\n>>> > You cannot gain tokens without someone choosing to give up those coins\n>>> - a form of permission.\n>>>\n>>> This is not a practical constraint. Just like in mining, some nodes may\n>>> reject you, but there will likely be more that will accept you, some\n>>> sellers may reject you, but most would accept your money as payment for\n>>> bitcoins. I don't think requiring the \"permission\" of one of millions of\n>>> people in the market can be reasonably considered a \"permissioned\n>>> currency\".\n>>>\n>>> > 2. Proof of stake must have a trusted means of timestamping to\n>>> regulate overproduction of blocks\n>>>\n>>> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed\n>>> to double their clock speeds. Both systems rely on an honest majority\n>>> sticking to standard time.\n>>>\n>>>\n>>> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>\n>>>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>>\n>>>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org>\n>>>> wrote:\n>>>>\n>>>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n>>>>> itself. PoS, VDFs, and so on are interesting but I guess there are other\n>>>>> threads going on these topics already where they would be relevant.\n>>>>>\n>>>>> Also, it's important to distinguish between oPoW and these other\n>>>>> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n>>>>> the core game theory or security assumptions of Hashcash and actually\n>>>>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>>>\n>>>>> Cheers,\n>>>>> Mike\n>>>>>\n>>>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n>>>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>\n>>>>>> 1. i never suggested vdf's to replace pow.\n>>>>>>\n>>>>>> 2. my suggestion was specifically *in the context of* a working\n>>>>>> proof-of-burn protocol\n>>>>>>\n>>>>>> - vdfs used only for timing (not block height)\n>>>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>>>> - the required \"work\" per block would simply be a competition to\n>>>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>>>> advance, and hope that their burned coins got rewarded in some far\n>>>>>> future\n>>>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>>>> value gained from proof of work... without some of the security\n>>>>>> drawbacks\n>>>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>>>> losing their work in each block)\n>>>>>> - new burns can't be used\n>>>>>> - old burns age out (like ASICs do)\n>>>>>> - other requirements on burns might be needed to properly mirror the\n>>>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>>>\n>>>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>>>> might be more secure in the long run, and that if the entire space\n>>>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>>>> up, and a hard-fork could be initiated.\n>>>>>>\n>>>>>> 4. i would never suggest such a thing unless i believed it was\n>>>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>>>> coin\"\n>>>>>>\n>>>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n>>>>>> wrote:\n>>>>>> >\n>>>>>> > Hi ZmnSCPxj,\n>>>>>> >\n>>>>>> > Please note that I am not suggesting VDFs as a means to save\n>>>>>> energy, but solely as a means to make the time between blocks more constant.\n>>>>>> >\n>>>>>> > Zac\n>>>>>> >\n>>>>>> >\n>>>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n>>>>>> wrote:\n>>>>>> >>\n>>>>>> >> Good morning Zac,\n>>>>>> >>\n>>>>>> >> > VDFs might enable more constant block times, for instance by\n>>>>>> having a two-step PoW:\n>>>>>> >> >\n>>>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n>>>>>> subject to difficulty adjustments similar to the as-is). As per the\n>>>>>> property of VDFs, miners are able show proof of work.\n>>>>>> >> >\n>>>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n>>>>>> block takes 1 minute on average, again subject to as-is difficulty\n>>>>>> adjustments.\n>>>>>> >> >\n>>>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>>>> >>\n>>>>>> >> As I understand it, another weakness of VDFs is that they are not\n>>>>>> inherently progress-free (their sequential nature prevents that; they are\n>>>>>> inherently progress-requiring).\n>>>>>> >>\n>>>>>> >> Thus, a miner which focuses on improving the amount of energy that\n>>>>>> it can pump into the VDF circuitry (by overclocking and freezing the\n>>>>>> circuitry), could potentially get into a winner-takes-all situation,\n>>>>>> possibly leading to even *worse* competition and even *more* energy\n>>>>>> consumption.\n>>>>>> >> After all, if you can start mining 0.1s faster than the\n>>>>>> competition, that is a 0.1s advantage where *only you* can mine *in the\n>>>>>> entire world*.\n>>>>>> >>\n>>>>>> >> Regards,\n>>>>>> >> ZmnSCPxj\n>>>>>> _______________________________________________\n>>>>>> bitcoin-dev mailing list\n>>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>>\n>>>>>\n>>>>>\n>>>>> --\n>>>>> Michael Dubrovsky\n>>>>> Founder; PoWx\n>>>>> www.PoWx.org <http://www.powx.org/>\n>>>>>\n>>>>\n>>>>\n>>>> --\n>>>> Michael Dubrovsky\n>>>> Founder; PoWx\n>>>> www.PoWx.org <http://www.powx.org/>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/16cfd723/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-24T13:47:24",
                "message_text_only": "> I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n\nproof of burn clearly solves this, since nothing is held online\n\n>  how does proof of burn solve the \"nothing at stake\" problem in your view?\n\ndefinition of nothing at stake: in the event of a fork, whether the\nfork is accidental or a malicious, the optimal strategy for any miner\nis to mine on every chain, so that the miner gets their reward no\nmatter which fork wins.   indeed in proof-of-stake, the proofs are\npublished on the very chains mines, so the incentive is magnified.\n\nin proof-of-burn, your burn investment is always \"at stake\", any\nredaction can result in a loss-of-burn, because burns can be tied,\nprecisely, to block-heights\n\nas a result, miners no longer have an incentive to mine all chains\n\nin this way proof of burn can be more secure than proof-of-stake, and\neven more secure than proof of work\n\n\n\n\n\n\n\n>\n\nOn Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n> Hi Billy,\n>\n> I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n> Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>\n> Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n> PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n> In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n> As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n> At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n> In PoS systems this clean separation of responsibilities does not exist.\n>\n> I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n> People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n> But the devil is in the detail.\n> Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>\n> ### Proof of SquareSpace (Cardano, Polkdadot)\n>\n> Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n> In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n> I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n> On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>\n> 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>\n> 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>\n> 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n> I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n> In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>\n> There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n> Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n> It also grows the size of the blockchain significantly.\n>\n> ### \"Pure\" proof of stake (Algorand)\n>\n> Algorand's[4] approach is to only allow online stake to participate in the protocol.\n> Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n> Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n> Hopefully you've spotted the problem.\n> You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n> Damn it's still Proof-of-SquareSpace!\n> The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n> Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>\n> ### Conclusion\n>\n> I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n> If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>\n> For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n> After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n> Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n> For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>\n> I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>\n> Would be interested to know if you or others think differently on these points.\n>\n> [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n> [2]: https://staking.staked.us/algorand-staking\n> [3]: https://eprint.iacr.org/2017/573.pdf\n> [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n> [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>\n> Cheers,\n>\n> LL\n>\n> On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>\n>> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>\n>> > Proof-of-stake tends towards oligopolistic control\n>>\n>> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>\n>> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>\n>> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>\n>> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>\n>> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>\n>>  > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>\n>> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>\n>> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>\n>> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>\n>> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>\n>> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>\n>>\n>> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>\n>>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>\n>>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>>\n>>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>>\n>>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>>\n>>>> Cheers,\n>>>> Mike\n>>>>\n>>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>\n>>>>> 1. i never suggested vdf's to replace pow.\n>>>>>\n>>>>> 2. my suggestion was specifically *in the context of* a working\n>>>>> proof-of-burn protocol\n>>>>>\n>>>>> - vdfs used only for timing (not block height)\n>>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>>> - the required \"work\" per block would simply be a competition to\n>>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>>> advance, and hope that their burned coins got rewarded in some far\n>>>>> future\n>>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>>> value gained from proof of work... without some of the security\n>>>>> drawbacks\n>>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>>> losing their work in each block)\n>>>>> - new burns can't be used\n>>>>> - old burns age out (like ASICs do)\n>>>>> - other requirements on burns might be needed to properly mirror the\n>>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>>\n>>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>>> might be more secure in the long run, and that if the entire space\n>>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>>> up, and a hard-fork could be initiated.\n>>>>>\n>>>>> 4. i would never suggest such a thing unless i believed it was\n>>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>>> coin\"\n>>>>>\n>>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>>> >\n>>>>> > Hi ZmnSCPxj,\n>>>>> >\n>>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>>> >\n>>>>> > Zac\n>>>>> >\n>>>>> >\n>>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>>> >>\n>>>>> >> Good morning Zac,\n>>>>> >>\n>>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>>> >> >\n>>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>>> >> >\n>>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>>> >> >\n>>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>>> >>\n>>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>>> >>\n>>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>>> >>\n>>>>> >> Regards,\n>>>>> >> ZmnSCPxj\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>>\n>>>>\n>>>> --\n>>>> Michael Dubrovsky\n>>>> Founder; PoWx\n>>>> www.PoWx.org\n>>>\n>>>\n>>>\n>>> --\n>>> Michael Dubrovsky\n>>> Founder; PoWx\n>>> www.PoWx.org\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-24T20:43:53",
                "message_text_only": ">  proof of burn clearly solves this, since nothing is held online\n\nWell.. the coins to be burned need to be online when they're burned. But\nyes, only a small fraction of the total coins need to be online.\n\n> your burn investment is always \"at stake\", any redaction can result in a\nloss-of-burn, because burns can be tied, precisely, to block-heights\n\nSo you're saying that if say someone tries to mine a block on a shorter\nchain, that requires them to send a transaction burning their coins, and\nthat transaction could also be spent on the longest chain, which means\ntheir coins are burned even if the chain they tried to mine on doesn't win?\nI'm fuzzy on how proof of burn works.\n\n> proof of burn can be more secure than proof-of-stake\n\nFYI, proof of stake can be done without the \"nothing at stake\" problem. You\ncan simply punish people who mint on shorter chains (by rewarding people\nwho publish proofs of this happening on the main chain). In quorum-based\nPoS, you can punish people in the quorum that propose or sign multiple\nblocks for the same height. The \"nothing at stake\" problem is a solved\nproblem at this point for PoS.\n\n\n\nOn Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n\n> > I don't see a way to get around the conflicting requirement that the\n> keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n>\n> proof of burn clearly solves this, since nothing is held online\n>\n> >  how does proof of burn solve the \"nothing at stake\" problem in your\n> view?\n>\n> definition of nothing at stake: in the event of a fork, whether the\n> fork is accidental or a malicious, the optimal strategy for any miner\n> is to mine on every chain, so that the miner gets their reward no\n> matter which fork wins.   indeed in proof-of-stake, the proofs are\n> published on the very chains mines, so the incentive is magnified.\n>\n> in proof-of-burn, your burn investment is always \"at stake\", any\n> redaction can result in a loss-of-burn, because burns can be tied,\n> precisely, to block-heights\n>\n> as a result, miners no longer have an incentive to mine all chains\n>\n> in this way proof of burn can be more secure than proof-of-stake, and\n> even more secure than proof of work\n>\n>\n>\n>\n>\n>\n>\n> >\n>\n> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >\n> > Hi Billy,\n> >\n> > I was going to write a post which started by dismissing many of the weak\n> arguments that are made against PoS made in this thread and elsewhere.\n> > Although I don't agree with all your points you have done a decent job\n> here so I'll focus on the second part: why I think Proof-of-Stake is\n> inappropriate for a Bitcoin-like system.\n> >\n> > Proof of stake is not fit for purpose for a global settlement layer in a\n> pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to\n> be.\n> > PoS necessarily gives responsibilities to the holders of coins that they\n> do not want and cannot handle.\n> > In Bitcoin, large unsophisticated coin holders can put their coins in\n> cold storage without a second thought given to the health of the underlying\n> ledger.\n> > As much as hardcore Bitcoiners try to convince them to run their own\n> node, most don't, and that's perfectly acceptable.\n> > At no point do their personal decisions affect the underlying consensus\n> -- it only affects their personal security assurance (not that of the\n> system itself).\n> > In PoS systems this clean separation of responsibilities does not exist.\n> >\n> > I think that the more rigorously studied PoS protocols will work fine\n> within the security claims made in their papers.\n> > People who believe that these protocols are destined for catastrophic\n> consensus failure are certainly in for a surprise.\n> > But the devil is in the detail.\n> > Let's look at what the implications of using the leading proof of stake\n> protocols would have on Bitcoin:\n> >\n> > ### Proof of SquareSpace (Cardano, Polkdadot)\n> >\n> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an\n> inbuilt on-chain delegation system[5].\n> > In these protocols, coin holders who do not want to run their node with\n> their hot keys in it delegate it to a \"Stake Pool\".\n> > I call the resulting system Proof-of-SquareSpace since most will choose\n> a pool by looking around for one with a nice website and offering the\n> largest share of the block reward.\n> > On the surface this might sound no different than someone with an mining\n> rig shopping around for a good mining pool but there are crucial\n> differences:\n> >\n> > 1. The person making the decision is forced into it just because they\n> own the currency -- someone with a mining rig has purchased it with the\n> intent to make profit by participating in consensus.\n> >\n> > 2. When you join a mining pool your systems are very much still online.\n> You are just partaking in a pool to reduce your profit variance. You still\n> see every block that you help create and *you never help create a block\n> without seeing it first*.\n> >\n> > 3. If by SquareSpace sybil attack you gain a dishonest majority and\n> start censoring transactions how are the users meant to redelegate their\n> stake to honest pools?\n> > I guess they can just send a transaction delegating to another pool...oh\n> wait I guess that might be censored too! This seems really really bad.\n> > In Bitcoin, miners can just join a different pool at a whim. There is\n> nothing the attacker can do to stop them. A temporary dishonest majority\n> heals relatively well.\n> >\n> > There is another severe disadvantage to this on-chain delegation system:\n> every UTXO must indicate which staking account this UTXO belongs to so the\n> appropriate share of block rewards can be transferred there.\n> > Being able to associate every UTXO to an account ruins one of the main\n> privacy advantages of the UTXO model.\n> > It also grows the size of the blockchain significantly.\n> >\n> > ### \"Pure\" proof of stake (Algorand)\n> >\n> > Algorand's[4] approach is to only allow online stake to participate in\n> the protocol.\n> > Theoretically, This means that keys holding funds have to be online in\n> order for them to author blocks when they are chosen.\n> > Of course in reality no one wants to keep their coin holding keys online\n> so in Alogorand you can authorize a set of \"participation keys\"[1] that\n> will be used to create blocks on your coin holding key's behalf.\n> > Hopefully you've spotted the problem.\n> > You can send your participation keys to any malicious party with a nice\n> website (see random example [2]) offering you a good return.\n> > Damn it's still Proof-of-SquareSpace!\n> > The minor advantage is that at least the participation keys expire after\n> a certain amount of time so eventually the SquareSpace attacker will lose\n> their hold on consensus.\n> > Importantly there is also less junk on the blockchain because the\n> participation keys are delegated off-chain and so are not making as much of\n> a mess.\n> >\n> > ### Conclusion\n> >\n> > I don't see a way to get around the conflicting requirement that the\n> keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n> > If we allow delegation then we open up a new social attack surface and\n> it degenerates to Proof-of-SquareSpace.\n> >\n> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity\n> and desperately want to avoid extraneous responsibilities for the holder of\n> the coin.\n> > After all, gold is an inert element on the periodic table that doesn't\n> confer responsibilities on the holder to maintain the quality of all the\n> other bars of gold out there.\n> > Bitcoin feels like this too and in many ways is more inert and\n> beautifully boring than gold.\n> > For Bitcoin to succeed I think we need to keep it that way and\n> Proof-of-Stake makes everything a bit too exciting.\n> >\n> > I suppose in the end the market will decide what is real digital gold\n> and whether these bad technical trade offs are worth being able to say it\n> uses less electricity. It goes without saying that making bad technical\n> decisions to appease the current political climate is an anathema to\n> Bitcoin.\n> >\n> > Would be interested to know if you or others think differently on these\n> points.\n> >\n> > [1]:\n> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n> > [2]: https://staking.staked.us/algorand-staking\n> > [3]: https://eprint.iacr.org/2017/573.pdf\n> > [4]:\n> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n> > [5]:\n> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n> >\n> > Cheers,\n> >\n> > LL\n> >\n> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >>\n> >> I think there is a lot of misinformation and bias against Proof of\n> Stake. Yes there have been lots of shady coins that use insecure PoS\n> mechanisms. Yes there have been massive issues with distribution of PoS\n> coins (of course there have also been massive issues with PoW coins as\n> well). However, I want to remind everyone that there is a difference\n> between \"proved to be impossible\" and \"have not achieved recognized success\n> yet\". Most of the arguments levied against PoS are out of date or rely on\n> unproven assumptions or extrapolation from the analysis of a particular PoS\n> system. I certainly don't think we should experiment with bitcoin by\n> switching to PoS, but from my research, it seems very likely that there is\n> a proof of stake consensus protocol we could build that has substantially\n> higher security (cost / capital required to execute an attack) while at the\n> same time costing far less resources (which do translate to fees on the\n> network) *without* compromising any of the critical security properties\n> bitcoin relies on. I think the critical piece of this is the disagreements\n> around hardcoded checkpoints, which is a critical piece solving attacks\n> that could be levied on a PoS chain, and how that does (or doesn't) affect\n> the security model.\n> >>\n> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse\n> when a 51% attack happens. While I agree, I think that line of thinking\n> omits important facts:\n> >> * The capital required to 51% attack a PoS chain can be made\n> substantially greater than on a PoS chain.\n> >> * The capital the attacker stands to lose can be substantially greater\n> as well if the attack is successful.\n> >> * The effectiveness of paying miners to raise the honest fraction of\n> miners above 50% may be quite bad.\n> >> * Allowing a 51% attack is already unacceptable. It should be\n> considered whether what happens in the case of a 51% may not be\n> significantly different. The currency would likely be critically damaged in\n> a 51% attack regardless of consensus mechanism.\n> >>\n> >> > Proof-of-stake tends towards oligopolistic control\n> >>\n> >> People repeat this often, but the facts support this. There is no\n> centralization pressure in any proof of stake mechanism that I'm aware of.\n> IE if you have 10 times as much coin that you use to mint blocks, you\n> should expect to earn 10x as much minting revenue - not more than 10x. By\n> contrast, proof of work does in fact have clear centralization pressure -\n> this is not disputed. Our goal in relation to that is to ensure that the\n> centralization pressure remains insignifiant. Proof of work also clearly\n> has a lot more barriers to entry than any proof of stake system does. Both\n> of these mean the tendency towards oligopolistic control is worse for PoW.\n> >>\n> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n> >>\n> >> I certainly agree. Bitcoin's energy usage at the moment is I think\n> quite warranted. However, the question is: can we do substantially better.\n> I think if we can, we probably should... eventually.\n> >>\n> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a\n> Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n> >>\n> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of\n> any proof that all PoS systems have a failure threshold of 1/3. I know that\n> staking systems like Casper do in fact have that 1/3 requirement. However\n> there are PoS designs that should exceed that up to nearly 50% as far as\n> I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold\n> in the way you would think. IE, if 100% of miners are currently honest and\n> have a collective 100 exahashes/s hashpower, an attacker does not need to\n> obtain 100 exahashes/s, but actually only needs to accumulate 50\n> exahashes/s. This is because as the attacker accumulates hashpower, it\n> drives honest miners out of the market as the difficulty increases to\n> beyond what is economically sustainable. Also, its been shown that the best\n> proof of work can do is require an attacker to obtain 33% of the hashpower\n> because of the selfish mining attack discussed in depth in this paper:\n> https://arxiv.org/abs/1311.0243. Together, both of these things reduce\n> PoW's security by a factor of about 83% (1 - 50%*33%).\n> >>\n> >>  > Proof of Stake requires other trade-offs which are incompatible with\n> Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the\n> famous \"security vs. liveness\" guarantee\n> >>\n> >> Do you have a good source that talks about why you think proof of stake\n> cannot be used for a trustless digital cash?\n> >>\n> >> > You cannot gain tokens without someone choosing to give up those\n> coins - a form of permission.\n> >>\n> >> This is not a practical constraint. Just like in mining, some nodes may\n> reject you, but there will likely be more that will accept you, some\n> sellers may reject you, but most would accept your money as payment for\n> bitcoins. I don't think requiring the \"permission\" of one of millions of\n> people in the market can be reasonably considered a \"permissioned currency\".\n> >>\n> >> > 2. Proof of stake must have a trusted means of timestamping to\n> regulate overproduction of blocks\n> >>\n> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone\n> agreed to double their clock speeds. Both systems rely on an honest\n> majority sticking to standard time.\n> >>\n> >>\n> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >>>\n> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n> >>>\n> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org>\n> wrote:\n> >>>>\n> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n> itself. PoS, VDFs, and so on are interesting but I guess there are other\n> threads going on these topics already where they would be relevant.\n> >>>>\n> >>>> Also, it's important to distinguish between oPoW and these other\n> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n> the core game theory or security assumptions of Hashcash and actually\n> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n> >>>>\n> >>>> Cheers,\n> >>>> Mike\n> >>>>\n> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >>>>>\n> >>>>> 1. i never suggested vdf's to replace pow.\n> >>>>>\n> >>>>> 2. my suggestion was specifically *in the context of* a working\n> >>>>> proof-of-burn protocol\n> >>>>>\n> >>>>> - vdfs used only for timing (not block height)\n> >>>>> - blind-burned coins of a specific age used to replace proof of work\n> >>>>> - the required \"work\" per block would simply be a competition to\n> >>>>> acquire rewards, and so miners would have to burn coins, well in\n> >>>>> advance, and hope that their burned coins got rewarded in some far\n> >>>>> future\n> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n> >>>>> value gained from proof of work... without some of the security\n> >>>>> drawbacks\n> >>>>> - the miner risks losing all of his burned coins (like all miners\n> risk\n> >>>>> losing their work in each block)\n> >>>>> - new burns can't be used\n> >>>>> - old burns age out (like ASICs do)\n> >>>>> - other requirements on burns might be needed to properly mirror the\n> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n> >>>>>\n> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n> >>>>> might be more secure in the long run, and that if the entire space\n> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n> >>>>> up, and a hard-fork could be initiated.\n> >>>>>\n> >>>>> 4. i would never suggest such a thing unless i believed it was\n> >>>>> possible that consensus was possible.  so no, this is not an \"alt\n> >>>>> coin\"\n> >>>>>\n> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n> wrote:\n> >>>>> >\n> >>>>> > Hi ZmnSCPxj,\n> >>>>> >\n> >>>>> > Please note that I am not suggesting VDFs as a means to save\n> energy, but solely as a means to make the time between blocks more constant.\n> >>>>> >\n> >>>>> > Zac\n> >>>>> >\n> >>>>> >\n> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n> wrote:\n> >>>>> >>\n> >>>>> >> Good morning Zac,\n> >>>>> >>\n> >>>>> >> > VDFs might enable more constant block times, for instance by\n> having a two-step PoW:\n> >>>>> >> >\n> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n> subject to difficulty adjustments similar to the as-is). As per the\n> property of VDFs, miners are able show proof of work.\n> >>>>> >> >\n> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a\n> block takes 1 minute on average, again subject to as-is difficulty\n> adjustments.\n> >>>>> >> >\n> >>>>> >> > As a result, variation in block times will be greatly reduced.\n> >>>>> >>\n> >>>>> >> As I understand it, another weakness of VDFs is that they are not\n> inherently progress-free (their sequential nature prevents that; they are\n> inherently progress-requiring).\n> >>>>> >>\n> >>>>> >> Thus, a miner which focuses on improving the amount of energy\n> that it can pump into the VDF circuitry (by overclocking and freezing the\n> circuitry), could potentially get into a winner-takes-all situation,\n> possibly leading to even *worse* competition and even *more* energy\n> consumption.\n> >>>>> >> After all, if you can start mining 0.1s faster than the\n> competition, that is a 0.1s advantage where *only you* can mine *in the\n> entire world*.\n> >>>>> >>\n> >>>>> >> Regards,\n> >>>>> >> ZmnSCPxj\n> >>>>> _______________________________________________\n> >>>>> bitcoin-dev mailing list\n> >>>>> bitcoin-dev at lists.linuxfoundation.org\n> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>>>\n> >>>>\n> >>>>\n> >>>> --\n> >>>> Michael Dubrovsky\n> >>>> Founder; PoWx\n> >>>> www.PoWx.org\n> >>>\n> >>>\n> >>>\n> >>> --\n> >>> Michael Dubrovsky\n> >>> Founder; PoWx\n> >>> www.PoWx.org\n> >>> _______________________________________________\n> >>> bitcoin-dev mailing list\n> >>> bitcoin-dev at lists.linuxfoundation.org\n> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >>\n> >> _______________________________________________\n> >> bitcoin-dev mailing list\n> >> bitcoin-dev at lists.linuxfoundation.org\n> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> > _______________________________________________\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210524/4796a55c/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-24T21:49:23",
                "message_text_only": "> > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> I'm fuzzy on how proof of burn works.\n\nwhen you burn coins, you burn them to be used at a future particular\nblock height: so if i'm burning for block 553, i can only use them to\nmine block 553.   if i have a choice between two chains, one longer\nand one shorter, i can only choose one... deterministically, for that\nburn: the chain with the height 553.   if we fix the \"lead time\" for\nburned coins to be weeks or even months in advance, miners have a very\nstrong, long-term, investment in the stability of the chain.\n\ntherefore there is no \"nothing at stake\" problem.   it's\ndeterministic, so miners have no choice.  they can *only* choose the\ntransactions that go into the block.  they cannot choose which chain\nto mine, and it's time-locked, so rollbacks and instability always\nhurt miners the most.\n\nthe \"punishment\" systems of PoS are \"weird at best\", certainly\nunproven.   i can imagine scenarios where large stakeholders can\ncollude to punish smaller stakeholders simply to drive them out of\nbusiness, for example.   and then you have to put checks in place to\nprevent that, and more checks for those prevention system...\n\nin PoB, there is no complexity.  simpler systems like this are\ntypically more secure.\n\nPoB also solves problems caused by \"energy dependence\", which could\nlead to state monopolies on mining (like the new Bitcoin Mining\nCouncil).   these consortiums, if state sanctioned, could become a\nsource of censorship, for example.   Since PoB doesn't require you to\nhave a live, well-connected node, it's harder to censor & harder to\ntrace.\n\nEliminating this weakness seems to be in the best interests of\nexisting stakeholders\n\n\n\n\nOn Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>\n> >  proof of burn clearly solves this, since nothing is held online\n>\n> Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>\n> > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>\n> So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>\n> > proof of burn can be more secure than proof-of-stake\n>\n> FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>\n>\n>\n> On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>\n>> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>\n>> proof of burn clearly solves this, since nothing is held online\n>>\n>> >  how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>\n>> definition of nothing at stake: in the event of a fork, whether the\n>> fork is accidental or a malicious, the optimal strategy for any miner\n>> is to mine on every chain, so that the miner gets their reward no\n>> matter which fork wins.   indeed in proof-of-stake, the proofs are\n>> published on the very chains mines, so the incentive is magnified.\n>>\n>> in proof-of-burn, your burn investment is always \"at stake\", any\n>> redaction can result in a loss-of-burn, because burns can be tied,\n>> precisely, to block-heights\n>>\n>> as a result, miners no longer have an incentive to mine all chains\n>>\n>> in this way proof of burn can be more secure than proof-of-stake, and\n>> even more secure than proof of work\n>>\n>>\n>>\n>>\n>>\n>>\n>>\n>> >\n>>\n>> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >\n>> > Hi Billy,\n>> >\n>> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>> >\n>> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>> > In PoS systems this clean separation of responsibilities does not exist.\n>> >\n>> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>> > But the devil is in the detail.\n>> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>> >\n>> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>> >\n>> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>> >\n>> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>> >\n>> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>> >\n>> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>> >\n>> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>> > It also grows the size of the blockchain significantly.\n>> >\n>> > ### \"Pure\" proof of stake (Algorand)\n>> >\n>> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>> > Hopefully you've spotted the problem.\n>> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>> > Damn it's still Proof-of-SquareSpace!\n>> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>> >\n>> > ### Conclusion\n>> >\n>> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>> >\n>> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>> >\n>> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>> >\n>> > Would be interested to know if you or others think differently on these points.\n>> >\n>> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>> > [2]: https://staking.staked.us/algorand-staking\n>> > [3]: https://eprint.iacr.org/2017/573.pdf\n>> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>> >\n>> > Cheers,\n>> >\n>> > LL\n>> >\n>> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >>\n>> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>> >>\n>> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>> >>\n>> >> > Proof-of-stake tends towards oligopolistic control\n>> >>\n>> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>> >>\n>> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>> >>\n>> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>> >>\n>> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>> >>\n>> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>> >>\n>> >>  > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>> >>\n>> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>> >>\n>> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>> >>\n>> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>> >>\n>> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>> >>\n>> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>> >>\n>> >>\n>> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >>>\n>> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>> >>>\n>> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>> >>>>\n>> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>> >>>>\n>> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>> >>>>\n>> >>>> Cheers,\n>> >>>> Mike\n>> >>>>\n>> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >>>>>\n>> >>>>> 1. i never suggested vdf's to replace pow.\n>> >>>>>\n>> >>>>> 2. my suggestion was specifically *in the context of* a working\n>> >>>>> proof-of-burn protocol\n>> >>>>>\n>> >>>>> - vdfs used only for timing (not block height)\n>> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>> >>>>> - the required \"work\" per block would simply be a competition to\n>> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>> >>>>> advance, and hope that their burned coins got rewarded in some far\n>> >>>>> future\n>> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>> >>>>> value gained from proof of work... without some of the security\n>> >>>>> drawbacks\n>> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>> >>>>> losing their work in each block)\n>> >>>>> - new burns can't be used\n>> >>>>> - old burns age out (like ASICs do)\n>> >>>>> - other requirements on burns might be needed to properly mirror the\n>> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>> >>>>>\n>> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>> >>>>> might be more secure in the long run, and that if the entire space\n>> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>> >>>>> up, and a hard-fork could be initiated.\n>> >>>>>\n>> >>>>> 4. i would never suggest such a thing unless i believed it was\n>> >>>>> possible that consensus was possible.  so no, this is not an \"alt\n>> >>>>> coin\"\n>> >>>>>\n>> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>> >>>>> >\n>> >>>>> > Hi ZmnSCPxj,\n>> >>>>> >\n>> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>> >>>>> >\n>> >>>>> > Zac\n>> >>>>> >\n>> >>>>> >\n>> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>> >>>>> >>\n>> >>>>> >> Good morning Zac,\n>> >>>>> >>\n>> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>> >>>>> >> >\n>> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>> >>>>> >> >\n>> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>> >>>>> >> >\n>> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>> >>>>> >>\n>> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>> >>>>> >>\n>> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>> >>>>> >>\n>> >>>>> >> Regards,\n>> >>>>> >> ZmnSCPxj\n>> >>>>> _______________________________________________\n>> >>>>> bitcoin-dev mailing list\n>> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >>>>\n>> >>>>\n>> >>>>\n>> >>>> --\n>> >>>> Michael Dubrovsky\n>> >>>> Founder; PoWx\n>> >>>> www.PoWx.org\n>> >>>\n>> >>>\n>> >>>\n>> >>> --\n>> >>> Michael Dubrovsky\n>> >>> Founder; PoWx\n>> >>> www.PoWx.org\n>> >>> _______________________________________________\n>> >>> bitcoin-dev mailing list\n>> >>> bitcoin-dev at lists.linuxfoundation.org\n>> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >>\n>> >> _______________________________________________\n>> >> bitcoin-dev mailing list\n>> >> bitcoin-dev at lists.linuxfoundation.org\n>> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >\n>> > _______________________________________________\n>> > bitcoin-dev mailing list\n>> > bitcoin-dev at lists.linuxfoundation.org\n>> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-25T01:52:51",
                "message_text_only": "Is this <https://en.bitcoin.it/wiki/Proof_of_burn> the kind of proof of\nburn you're talking about?\n\n>   if i have a choice between two chains, one longer and one shorter, i\ncan only choose one... deterministically\n\nWhat prevents you from attempting to mine block 553 on both chains?\n\n> miners have a very strong, long-term, investment in the stability of the\nchain.\n\nYes, but the same can be said of any coin, even ones that do have the\nnothing at stake problem. This isn't sufficient tho because the chain is a\ncommon good, and the tragedy of the commons holds for it.\n\n> you burn them to be used at a future particular block height\n\nThis sounds exploitable. It seems like an attacker could simply focus all\ntheir burns on a particular set of 6 blocks to double spend, minimizing\ntheir cost of attack.\n\n> i can imagine scenarios where large stakeholders can collude to punish\nsmaller stakeholders simply to drive them out of business, for example\n\nAre you talking about a 51% attack? This is possible in any decentralized\ncryptocurrency.\n\n\nOn Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n\n> > > your burn investment is always \"at stake\", any redaction can result in\n> a loss-of-burn, because burns can be tied, precisely, to block-heights\n> > I'm fuzzy on how proof of burn works.\n>\n> when you burn coins, you burn them to be used at a future particular\n> block height: so if i'm burning for block 553, i can only use them to\n> mine block 553.   if i have a choice between two chains, one longer\n> and one shorter, i can only choose one... deterministically, for that\n> burn: the chain with the height 553.   if we fix the \"lead time\" for\n> burned coins to be weeks or even months in advance, miners have a very\n> strong, long-term, investment in the stability of the chain.\n>\n> therefore there is no \"nothing at stake\" problem.   it's\n> deterministic, so miners have no choice.  they can *only* choose the\n> transactions that go into the block.  they cannot choose which chain\n> to mine, and it's time-locked, so rollbacks and instability always\n> hurt miners the most.\n>\n> the \"punishment\" systems of PoS are \"weird at best\", certainly\n> unproven.   i can imagine scenarios where large stakeholders can\n> collude to punish smaller stakeholders simply to drive them out of\n> business, for example.   and then you have to put checks in place to\n> prevent that, and more checks for those prevention system...\n>\n> in PoB, there is no complexity.  simpler systems like this are\n> typically more secure.\n>\n> PoB also solves problems caused by \"energy dependence\", which could\n> lead to state monopolies on mining (like the new Bitcoin Mining\n> Council).   these consortiums, if state sanctioned, could become a\n> source of censorship, for example.   Since PoB doesn't require you to\n> have a live, well-connected node, it's harder to censor & harder to\n> trace.\n>\n> Eliminating this weakness seems to be in the best interests of\n> existing stakeholders\n>\n>\n>\n>\n> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com>\n> wrote:\n> >\n> > >  proof of burn clearly solves this, since nothing is held online\n> >\n> > Well.. the coins to be burned need to be online when they're burned. But\n> yes, only a small fraction of the total coins need to be online.\n> >\n> > > your burn investment is always \"at stake\", any redaction can result in\n> a loss-of-burn, because burns can be tied, precisely, to block-heights\n> >\n> > So you're saying that if say someone tries to mine a block on a shorter\n> chain, that requires them to send a transaction burning their coins, and\n> that transaction could also be spent on the longest chain, which means\n> their coins are burned even if the chain they tried to mine on doesn't win?\n> I'm fuzzy on how proof of burn works.\n> >\n> > > proof of burn can be more secure than proof-of-stake\n> >\n> > FYI, proof of stake can be done without the \"nothing at stake\" problem.\n> You can simply punish people who mint on shorter chains (by rewarding\n> people who publish proofs of this happening on the main chain). In\n> quorum-based PoS, you can punish people in the quorum that propose or sign\n> multiple blocks for the same height. The \"nothing at stake\" problem is a\n> solved problem at this point for PoS.\n> >\n> >\n> >\n> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n> >>\n> >> > I don't see a way to get around the conflicting requirement that the\n> keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n> >>\n> >> proof of burn clearly solves this, since nothing is held online\n> >>\n> >> >  how does proof of burn solve the \"nothing at stake\" problem in your\n> view?\n> >>\n> >> definition of nothing at stake: in the event of a fork, whether the\n> >> fork is accidental or a malicious, the optimal strategy for any miner\n> >> is to mine on every chain, so that the miner gets their reward no\n> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n> >> published on the very chains mines, so the incentive is magnified.\n> >>\n> >> in proof-of-burn, your burn investment is always \"at stake\", any\n> >> redaction can result in a loss-of-burn, because burns can be tied,\n> >> precisely, to block-heights\n> >>\n> >> as a result, miners no longer have an incentive to mine all chains\n> >>\n> >> in this way proof of burn can be more secure than proof-of-stake, and\n> >> even more secure than proof of work\n> >>\n> >>\n> >>\n> >>\n> >>\n> >>\n> >>\n> >> >\n> >>\n> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >\n> >> > Hi Billy,\n> >> >\n> >> > I was going to write a post which started by dismissing many of the\n> weak arguments that are made against PoS made in this thread and elsewhere.\n> >> > Although I don't agree with all your points you have done a decent\n> job here so I'll focus on the second part: why I think Proof-of-Stake is\n> inappropriate for a Bitcoin-like system.\n> >> >\n> >> > Proof of stake is not fit for purpose for a global settlement layer\n> in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is\n> trying to be.\n> >> > PoS necessarily gives responsibilities to the holders of coins that\n> they do not want and cannot handle.\n> >> > In Bitcoin, large unsophisticated coin holders can put their coins in\n> cold storage without a second thought given to the health of the underlying\n> ledger.\n> >> > As much as hardcore Bitcoiners try to convince them to run their own\n> node, most don't, and that's perfectly acceptable.\n> >> > At no point do their personal decisions affect the underlying\n> consensus -- it only affects their personal security assurance (not that of\n> the system itself).\n> >> > In PoS systems this clean separation of responsibilities does not\n> exist.\n> >> >\n> >> > I think that the more rigorously studied PoS protocols will work fine\n> within the security claims made in their papers.\n> >> > People who believe that these protocols are destined for catastrophic\n> consensus failure are certainly in for a surprise.\n> >> > But the devil is in the detail.\n> >> > Let's look at what the implications of using the leading proof of\n> stake protocols would have on Bitcoin:\n> >> >\n> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n> >> >\n> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an\n> inbuilt on-chain delegation system[5].\n> >> > In these protocols, coin holders who do not want to run their node\n> with their hot keys in it delegate it to a \"Stake Pool\".\n> >> > I call the resulting system Proof-of-SquareSpace since most will\n> choose a pool by looking around for one with a nice website and offering\n> the largest share of the block reward.\n> >> > On the surface this might sound no different than someone with an\n> mining rig shopping around for a good mining pool but there are crucial\n> differences:\n> >> >\n> >> > 1. The person making the decision is forced into it just because they\n> own the currency -- someone with a mining rig has purchased it with the\n> intent to make profit by participating in consensus.\n> >> >\n> >> > 2. When you join a mining pool your systems are very much still\n> online. You are just partaking in a pool to reduce your profit variance.\n> You still see every block that you help create and *you never help create a\n> block without seeing it first*.\n> >> >\n> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and\n> start censoring transactions how are the users meant to redelegate their\n> stake to honest pools?\n> >> > I guess they can just send a transaction delegating to another\n> pool...oh wait I guess that might be censored too! This seems really really\n> bad.\n> >> > In Bitcoin, miners can just join a different pool at a whim. There is\n> nothing the attacker can do to stop them. A temporary dishonest majority\n> heals relatively well.\n> >> >\n> >> > There is another severe disadvantage to this on-chain delegation\n> system: every UTXO must indicate which staking account this UTXO belongs to\n> so the appropriate share of block rewards can be transferred there.\n> >> > Being able to associate every UTXO to an account ruins one of the\n> main privacy advantages of the UTXO model.\n> >> > It also grows the size of the blockchain significantly.\n> >> >\n> >> > ### \"Pure\" proof of stake (Algorand)\n> >> >\n> >> > Algorand's[4] approach is to only allow online stake to participate\n> in the protocol.\n> >> > Theoretically, This means that keys holding funds have to be online\n> in order for them to author blocks when they are chosen.\n> >> > Of course in reality no one wants to keep their coin holding keys\n> online so in Alogorand you can authorize a set of \"participation keys\"[1]\n> that will be used to create blocks on your coin holding key's behalf.\n> >> > Hopefully you've spotted the problem.\n> >> > You can send your participation keys to any malicious party with a\n> nice website (see random example [2]) offering you a good return.\n> >> > Damn it's still Proof-of-SquareSpace!\n> >> > The minor advantage is that at least the participation keys expire\n> after a certain amount of time so eventually the SquareSpace attacker will\n> lose their hold on consensus.\n> >> > Importantly there is also less junk on the blockchain because the\n> participation keys are delegated off-chain and so are not making as much of\n> a mess.\n> >> >\n> >> > ### Conclusion\n> >> >\n> >> > I don't see a way to get around the conflicting requirement that the\n> keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n> >> > If we allow delegation then we open up a new social attack surface\n> and it degenerates to Proof-of-SquareSpace.\n> >> >\n> >> > For a \"digital gold\" like system like Bitcoin we optimize for\n> simplicity and desperately want to avoid extraneous responsibilities for\n> the holder of the coin.\n> >> > After all, gold is an inert element on the periodic table that\n> doesn't confer responsibilities on the holder to maintain the quality of\n> all the other bars of gold out there.\n> >> > Bitcoin feels like this too and in many ways is more inert and\n> beautifully boring than gold.\n> >> > For Bitcoin to succeed I think we need to keep it that way and\n> Proof-of-Stake makes everything a bit too exciting.\n> >> >\n> >> > I suppose in the end the market will decide what is real digital gold\n> and whether these bad technical trade offs are worth being able to say it\n> uses less electricity. It goes without saying that making bad technical\n> decisions to appease the current political climate is an anathema to\n> Bitcoin.\n> >> >\n> >> > Would be interested to know if you or others think differently on\n> these points.\n> >> >\n> >> > [1]:\n> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n> >> > [2]: https://staking.staked.us/algorand-staking\n> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n> >> > [4]:\n> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n> >> > [5]:\n> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n> >> >\n> >> > Cheers,\n> >> >\n> >> > LL\n> >> >\n> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >>\n> >> >> I think there is a lot of misinformation and bias against Proof of\n> Stake. Yes there have been lots of shady coins that use insecure PoS\n> mechanisms. Yes there have been massive issues with distribution of PoS\n> coins (of course there have also been massive issues with PoW coins as\n> well). However, I want to remind everyone that there is a difference\n> between \"proved to be impossible\" and \"have not achieved recognized success\n> yet\". Most of the arguments levied against PoS are out of date or rely on\n> unproven assumptions or extrapolation from the analysis of a particular PoS\n> system. I certainly don't think we should experiment with bitcoin by\n> switching to PoS, but from my research, it seems very likely that there is\n> a proof of stake consensus protocol we could build that has substantially\n> higher security (cost / capital required to execute an attack) while at the\n> same time costing far less resources (which do translate to fees on the\n> network) *without* compromising any of the critical security properties\n> bitcoin relies on. I think the critical piece of this is the disagreements\n> around hardcoded checkpoints, which is a critical piece solving attacks\n> that could be levied on a PoS chain, and how that does (or doesn't) affect\n> the security model.\n> >> >>\n> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is\n> worse when a 51% attack happens. While I agree, I think that line of\n> thinking omits important facts:\n> >> >> * The capital required to 51% attack a PoS chain can be made\n> substantially greater than on a PoS chain.\n> >> >> * The capital the attacker stands to lose can be substantially\n> greater as well if the attack is successful.\n> >> >> * The effectiveness of paying miners to raise the honest fraction of\n> miners above 50% may be quite bad.\n> >> >> * Allowing a 51% attack is already unacceptable. It should be\n> considered whether what happens in the case of a 51% may not be\n> significantly different. The currency would likely be critically damaged in\n> a 51% attack regardless of consensus mechanism.\n> >> >>\n> >> >> > Proof-of-stake tends towards oligopolistic control\n> >> >>\n> >> >> People repeat this often, but the facts support this. There is no\n> centralization pressure in any proof of stake mechanism that I'm aware of.\n> IE if you have 10 times as much coin that you use to mint blocks, you\n> should expect to earn 10x as much minting revenue - not more than 10x. By\n> contrast, proof of work does in fact have clear centralization pressure -\n> this is not disputed. Our goal in relation to that is to ensure that the\n> centralization pressure remains insignifiant. Proof of work also clearly\n> has a lot more barriers to entry than any proof of stake system does. Both\n> of these mean the tendency towards oligopolistic control is worse for PoW.\n> >> >>\n> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n> >> >>\n> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think\n> quite warranted. However, the question is: can we do substantially better.\n> I think if we can, we probably should... eventually.\n> >> >>\n> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating\n> a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n> >> >>\n> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware\n> of any proof that all PoS systems have a failure threshold of 1/3. I know\n> that staking systems like Casper do in fact have that 1/3 requirement.\n> However there are PoS designs that should exceed that up to nearly 50% as\n> far as I'm aware. Proof of work is not in fact resilient up to the 1/2\n> threshold in the way you would think. IE, if 100% of miners are currently\n> honest and have a collective 100 exahashes/s hashpower, an attacker does\n> not need to obtain 100 exahashes/s, but actually only needs to accumulate\n> 50 exahashes/s. This is because as the attacker accumulates hashpower, it\n> drives honest miners out of the market as the difficulty increases to\n> beyond what is economically sustainable. Also, its been shown that the best\n> proof of work can do is require an attacker to obtain 33% of the hashpower\n> because of the selfish mining attack discussed in depth in this paper:\n> https://arxiv.org/abs/1311.0243. Together, both of these things reduce\n> PoW's security by a factor of about 83% (1 - 50%*33%).\n> >> >>\n> >> >>  > Proof of Stake requires other trade-offs which are incompatible\n> with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically\n> the famous \"security vs. liveness\" guarantee\n> >> >>\n> >> >> Do you have a good source that talks about why you think proof of\n> stake cannot be used for a trustless digital cash?\n> >> >>\n> >> >> > You cannot gain tokens without someone choosing to give up those\n> coins - a form of permission.\n> >> >>\n> >> >> This is not a practical constraint. Just like in mining, some nodes\n> may reject you, but there will likely be more that will accept you, some\n> sellers may reject you, but most would accept your money as payment for\n> bitcoins. I don't think requiring the \"permission\" of one of millions of\n> people in the market can be reasonably considered a \"permissioned currency\".\n> >> >>\n> >> >> > 2. Proof of stake must have a trusted means of timestamping to\n> regulate overproduction of blocks\n> >> >>\n> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone\n> agreed to double their clock speeds. Both systems rely on an honest\n> majority sticking to standard time.\n> >> >>\n> >> >>\n> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >>>\n> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n> >> >>>\n> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org>\n> wrote:\n> >> >>>>\n> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP\n> itself. PoS, VDFs, and so on are interesting but I guess there are other\n> threads going on these topics already where they would be relevant.\n> >> >>>>\n> >> >>>> Also, it's important to distinguish between oPoW and these other\n> \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter\n> the core game theory or security assumptions of Hashcash and actually\n> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n> >> >>>>\n> >> >>>> Cheers,\n> >> >>>> Mike\n> >> >>>>\n> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >>>>>\n> >> >>>>> 1. i never suggested vdf's to replace pow.\n> >> >>>>>\n> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n> >> >>>>> proof-of-burn protocol\n> >> >>>>>\n> >> >>>>> - vdfs used only for timing (not block height)\n> >> >>>>> - blind-burned coins of a specific age used to replace proof of\n> work\n> >> >>>>> - the required \"work\" per block would simply be a competition to\n> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n> >> >>>>> future\n> >> >>>>> - the point of burned coins is to mimic, in every meaningful way,\n> the\n> >> >>>>> value gained from proof of work... without some of the security\n> >> >>>>> drawbacks\n> >> >>>>> - the miner risks losing all of his burned coins (like all miners\n> risk\n> >> >>>>> losing their work in each block)\n> >> >>>>> - new burns can't be used\n> >> >>>>> - old burns age out (like ASICs do)\n> >> >>>>> - other requirements on burns might be needed to properly mirror\n> the\n> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine\n> honestly.\n> >> >>>>>\n> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n> >> >>>>> might be more secure in the long run, and that if the entire space\n> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be\n> spun\n> >> >>>>> up, and a hard-fork could be initiated.\n> >> >>>>>\n> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n> >> >>>>> possible that consensus was possible.  so no, this is not an \"alt\n> >> >>>>> coin\"\n> >> >>>>>\n> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com>\n> wrote:\n> >> >>>>> >\n> >> >>>>> > Hi ZmnSCPxj,\n> >> >>>>> >\n> >> >>>>> > Please note that I am not suggesting VDFs as a means to save\n> energy, but solely as a means to make the time between blocks more constant.\n> >> >>>>> >\n> >> >>>>> > Zac\n> >> >>>>> >\n> >> >>>>> >\n> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com>\n> wrote:\n> >> >>>>> >>\n> >> >>>>> >> Good morning Zac,\n> >> >>>>> >>\n> >> >>>>> >> > VDFs might enable more constant block times, for instance by\n> having a two-step PoW:\n> >> >>>>> >> >\n> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being\n> subject to difficulty adjustments similar to the as-is). As per the\n> property of VDFs, miners are able show proof of work.\n> >> >>>>> >> >\n> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so\n> finding a block takes 1 minute on average, again subject to as-is\n> difficulty adjustments.\n> >> >>>>> >> >\n> >> >>>>> >> > As a result, variation in block times will be greatly\n> reduced.\n> >> >>>>> >>\n> >> >>>>> >> As I understand it, another weakness of VDFs is that they are\n> not inherently progress-free (their sequential nature prevents that; they\n> are inherently progress-requiring).\n> >> >>>>> >>\n> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy\n> that it can pump into the VDF circuitry (by overclocking and freezing the\n> circuitry), could potentially get into a winner-takes-all situation,\n> possibly leading to even *worse* competition and even *more* energy\n> consumption.\n> >> >>>>> >> After all, if you can start mining 0.1s faster than the\n> competition, that is a 0.1s advantage where *only you* can mine *in the\n> entire world*.\n> >> >>>>> >>\n> >> >>>>> >> Regards,\n> >> >>>>> >> ZmnSCPxj\n> >> >>>>> _______________________________________________\n> >> >>>>> bitcoin-dev mailing list\n> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >> >>>>\n> >> >>>>\n> >> >>>>\n> >> >>>> --\n> >> >>>> Michael Dubrovsky\n> >> >>>> Founder; PoWx\n> >> >>>> www.PoWx.org\n> >> >>>\n> >> >>>\n> >> >>>\n> >> >>> --\n> >> >>> Michael Dubrovsky\n> >> >>> Founder; PoWx\n> >> >>> www.PoWx.org\n> >> >>> _______________________________________________\n> >> >>> bitcoin-dev mailing list\n> >> >>> bitcoin-dev at lists.linuxfoundation.org\n> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >> >>\n> >> >> _______________________________________________\n> >> >> bitcoin-dev mailing list\n> >> >> bitcoin-dev at lists.linuxfoundation.org\n> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >> >\n> >> > _______________________________________________\n> >> > bitcoin-dev mailing list\n> >> > bitcoin-dev at lists.linuxfoundation.org\n> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210524/8f5565cc/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-25T13:00:11",
                "message_text_only": "> > you burn them to be used at a future particular block height\n\n> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n\ncould be right.   the original idea was to have burns decay over time,\nlike ASIC's.\n\nanyway the point was not that \"i had a magic formula\"\n\nthe point was that proof of burn is almost always better than proof of\nstake - simply because the \"proof\" is on-chain, not sitting on a node\nsomewhere waiting to be stolen.\n\nOn Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>\n> Is this the kind of proof of burn you're talking about?\n>\n> >   if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n>\n> What prevents you from attempting to mine block 553 on both chains?\n>\n> > miners have a very strong, long-term, investment in the stability of the chain.\n>\n> Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n>\n> > you burn them to be used at a future particular block height\n>\n> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>\n> > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n>\n> Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n>\n>\n> On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>\n>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>> > I'm fuzzy on how proof of burn works.\n>>\n>> when you burn coins, you burn them to be used at a future particular\n>> block height: so if i'm burning for block 553, i can only use them to\n>> mine block 553.   if i have a choice between two chains, one longer\n>> and one shorter, i can only choose one... deterministically, for that\n>> burn: the chain with the height 553.   if we fix the \"lead time\" for\n>> burned coins to be weeks or even months in advance, miners have a very\n>> strong, long-term, investment in the stability of the chain.\n>>\n>> therefore there is no \"nothing at stake\" problem.   it's\n>> deterministic, so miners have no choice.  they can *only* choose the\n>> transactions that go into the block.  they cannot choose which chain\n>> to mine, and it's time-locked, so rollbacks and instability always\n>> hurt miners the most.\n>>\n>> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>> unproven.   i can imagine scenarios where large stakeholders can\n>> collude to punish smaller stakeholders simply to drive them out of\n>> business, for example.   and then you have to put checks in place to\n>> prevent that, and more checks for those prevention system...\n>>\n>> in PoB, there is no complexity.  simpler systems like this are\n>> typically more secure.\n>>\n>> PoB also solves problems caused by \"energy dependence\", which could\n>> lead to state monopolies on mining (like the new Bitcoin Mining\n>> Council).   these consortiums, if state sanctioned, could become a\n>> source of censorship, for example.   Since PoB doesn't require you to\n>> have a live, well-connected node, it's harder to censor & harder to\n>> trace.\n>>\n>> Eliminating this weakness seems to be in the best interests of\n>> existing stakeholders\n>>\n>>\n>>\n>>\n>> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>> >\n>> > >  proof of burn clearly solves this, since nothing is held online\n>> >\n>> > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>> >\n>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>> >\n>> > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>> >\n>> > > proof of burn can be more secure than proof-of-stake\n>> >\n>> > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>> >\n>> >\n>> >\n>> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>> >>\n>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>> >>\n>> >> proof of burn clearly solves this, since nothing is held online\n>> >>\n>> >> >  how does proof of burn solve the \"nothing at stake\" problem in your view?\n>> >>\n>> >> definition of nothing at stake: in the event of a fork, whether the\n>> >> fork is accidental or a malicious, the optimal strategy for any miner\n>> >> is to mine on every chain, so that the miner gets their reward no\n>> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n>> >> published on the very chains mines, so the incentive is magnified.\n>> >>\n>> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>> >> redaction can result in a loss-of-burn, because burns can be tied,\n>> >> precisely, to block-heights\n>> >>\n>> >> as a result, miners no longer have an incentive to mine all chains\n>> >>\n>> >> in this way proof of burn can be more secure than proof-of-stake, and\n>> >> even more secure than proof of work\n>> >>\n>> >>\n>> >>\n>> >>\n>> >>\n>> >>\n>> >>\n>> >> >\n>> >>\n>> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >\n>> >> > Hi Billy,\n>> >> >\n>> >> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>> >> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>> >> >\n>> >> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>> >> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>> >> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>> >> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>> >> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>> >> > In PoS systems this clean separation of responsibilities does not exist.\n>> >> >\n>> >> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>> >> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>> >> > But the devil is in the detail.\n>> >> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>> >> >\n>> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>> >> >\n>> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>> >> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>> >> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>> >> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>> >> >\n>> >> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>> >> >\n>> >> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>> >> >\n>> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>> >> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>> >> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>> >> >\n>> >> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>> >> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>> >> > It also grows the size of the blockchain significantly.\n>> >> >\n>> >> > ### \"Pure\" proof of stake (Algorand)\n>> >> >\n>> >> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>> >> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>> >> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>> >> > Hopefully you've spotted the problem.\n>> >> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>> >> > Damn it's still Proof-of-SquareSpace!\n>> >> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>> >> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>> >> >\n>> >> > ### Conclusion\n>> >> >\n>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>> >> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>> >> >\n>> >> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>> >> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>> >> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>> >> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>> >> >\n>> >> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>> >> >\n>> >> > Would be interested to know if you or others think differently on these points.\n>> >> >\n>> >> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>> >> > [2]: https://staking.staked.us/algorand-staking\n>> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>> >> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>> >> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>> >> >\n>> >> > Cheers,\n>> >> >\n>> >> > LL\n>> >> >\n>> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >>\n>> >> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>> >> >>\n>> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>> >> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>> >> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>> >> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>> >> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>> >> >>\n>> >> >> > Proof-of-stake tends towards oligopolistic control\n>> >> >>\n>> >> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>> >> >>\n>> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>> >> >>\n>> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>> >> >>\n>> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>> >> >>\n>> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>> >> >>\n>> >> >>  > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>> >> >>\n>> >> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>> >> >>\n>> >> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>> >> >>\n>> >> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>> >> >>\n>> >> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>> >> >>\n>> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>> >> >>\n>> >> >>\n>> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >>>\n>> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>> >> >>>\n>> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>> >> >>>>\n>> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>> >> >>>>\n>> >> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>> >> >>>>\n>> >> >>>> Cheers,\n>> >> >>>> Mike\n>> >> >>>>\n>> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >>>>>\n>> >> >>>>> 1. i never suggested vdf's to replace pow.\n>> >> >>>>>\n>> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n>> >> >>>>> proof-of-burn protocol\n>> >> >>>>>\n>> >> >>>>> - vdfs used only for timing (not block height)\n>> >> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>> >> >>>>> - the required \"work\" per block would simply be a competition to\n>> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n>> >> >>>>> future\n>> >> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>> >> >>>>> value gained from proof of work... without some of the security\n>> >> >>>>> drawbacks\n>> >> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>> >> >>>>> losing their work in each block)\n>> >> >>>>> - new burns can't be used\n>> >> >>>>> - old burns age out (like ASICs do)\n>> >> >>>>> - other requirements on burns might be needed to properly mirror the\n>> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>> >> >>>>>\n>> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>> >> >>>>> might be more secure in the long run, and that if the entire space\n>> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>> >> >>>>> up, and a hard-fork could be initiated.\n>> >> >>>>>\n>> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>> >> >>>>> possible that consensus was possible.  so no, this is not an \"alt\n>> >> >>>>> coin\"\n>> >> >>>>>\n>> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>> >> >>>>> >\n>> >> >>>>> > Hi ZmnSCPxj,\n>> >> >>>>> >\n>> >> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>> >> >>>>> >\n>> >> >>>>> > Zac\n>> >> >>>>> >\n>> >> >>>>> >\n>> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>> >> >>>>> >>\n>> >> >>>>> >> Good morning Zac,\n>> >> >>>>> >>\n>> >> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>> >> >>>>> >> >\n>> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>> >> >>>>> >> >\n>> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>> >> >>>>> >> >\n>> >> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>> >> >>>>> >>\n>> >> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>> >> >>>>> >>\n>> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>> >> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>> >> >>>>> >>\n>> >> >>>>> >> Regards,\n>> >> >>>>> >> ZmnSCPxj\n>> >> >>>>> _______________________________________________\n>> >> >>>>> bitcoin-dev mailing list\n>> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >> >>>>\n>> >> >>>>\n>> >> >>>>\n>> >> >>>> --\n>> >> >>>> Michael Dubrovsky\n>> >> >>>> Founder; PoWx\n>> >> >>>> www.PoWx.org\n>> >> >>>\n>> >> >>>\n>> >> >>>\n>> >> >>> --\n>> >> >>> Michael Dubrovsky\n>> >> >>> Founder; PoWx\n>> >> >>> www.PoWx.org\n>> >> >>> _______________________________________________\n>> >> >>> bitcoin-dev mailing list\n>> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >> >>\n>> >> >> _______________________________________________\n>> >> >> bitcoin-dev mailing list\n>> >> >> bitcoin-dev at lists.linuxfoundation.org\n>> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >> >\n>> >> > _______________________________________________\n>> >> > bitcoin-dev mailing list\n>> >> > bitcoin-dev at lists.linuxfoundation.org\n>> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-25T20:01:51",
                "message_text_only": "@befreeandopen \" An attacker can calculate whether or not she can prolong\nthis chain or not and if so with what timestamp.\"\n\nThe scenario you describe would only be likely to happen at all if the\nmalicious actor has a very large fraction of the stake - probably quite\nclose to 50%. At that point, you're talking about a 51% attack, not the\nnothing at stake problem. The nothing at stake problem is the problem where\nanyone will mint on any chain. Its clear that if there's a substantial\npunishment for minting on chains other than the one that eventually wins,\nevery minter without a significant fraction of the stake will be honest and\nnot attempt to mint on old blocks or support someone else's attempt to mint\non old blocks (until and if it becomes the heaviest chain). Because the\nattacker would need probably >45% of the active stake (take a look at\nthe reasoning\nhere\n<https://github.com/fresheneesz/ValidatedProofOfStake#security-the-minimum-cost-of-attack>\nfor a deeper analysis of that statement), I don't agree that punishment is\nnot a sufficient mitigation of the nothing at stake problem. To exploit the\nnothing at stake problem, you basically need to 51% attack, at which point\nyou've exceeded the operating conditions of the system, so of course its\ngonna have problems, just like a 51% attack would cause with PoW.\n\n> I am not sure if this is what you call quorum-based PoS\n\nYes, pre-selected minters is exactly what I mean by that.\n\n> it allows the attacker to know who to attack at which point with powerful\nDDOS in order to hurt liveness of such system\n\nJust like in bitcoin, associating keys with IP addresses isn't generally an\neasy thing to do on the fly like that. If you know someone's IP address,\nyou can target them. But if you only know their address or public key, the\nreverse isn't as easy. With a quorum-based PoS system, you can see their\npublic key and address, but finding out their IP to DOS would be a huge\nchallenge I think.\n\nNote, tho, that quorum-based PoS generally also have punishments as part of\nthe protocol. The introduction of punishments do indeed handily solve the\nnothing at stake problem. And you didn't mention a single problem that the\npunishments introduce that weren't already there before punishments. There\nare tradeoffs with introducing punishments (eg in some cases you might\npunish honest actors), but they are minor in comparison to solving the\nnothing at stake problem.\n\nSo I don't think it is at all misleading to claim that \"nothing at stake\"\nis a solved problem. I do in fact mean that the solutions to that problem\ndon't introduce any other problems with anywhere near the same level of\nsignificance.\n\nOn Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n\n> > > you burn them to be used at a future particular block height\n>\n> > This sounds exploitable. It seems like an attacker could simply focus\n> all their burns on a particular set of 6 blocks to double spend, minimizing\n> their cost of attack.\n>\n> could be right.   the original idea was to have burns decay over time,\n> like ASIC's.\n>\n> anyway the point was not that \"i had a magic formula\"\n>\n> the point was that proof of burn is almost always better than proof of\n> stake - simply because the \"proof\" is on-chain, not sitting on a node\n> somewhere waiting to be stolen.\n>\n> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com>\n> wrote:\n> >\n> > Is this the kind of proof of burn you're talking about?\n> >\n> > >   if i have a choice between two chains, one longer and one shorter, i\n> can only choose one... deterministically\n> >\n> > What prevents you from attempting to mine block 553 on both chains?\n> >\n> > > miners have a very strong, long-term, investment in the stability of\n> the chain.\n> >\n> > Yes, but the same can be said of any coin, even ones that do have the\n> nothing at stake problem. This isn't sufficient tho because the chain is a\n> common good, and the tragedy of the commons holds for it.\n> >\n> > > you burn them to be used at a future particular block height\n> >\n> > This sounds exploitable. It seems like an attacker could simply focus\n> all their burns on a particular set of 6 blocks to double spend, minimizing\n> their cost of attack.\n> >\n> > > i can imagine scenarios where large stakeholders can collude to punish\n> smaller stakeholders simply to drive them out of business, for example\n> >\n> > Are you talking about a 51% attack? This is possible in any\n> decentralized cryptocurrency.\n> >\n> >\n> > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n> >>\n> >> > > your burn investment is always \"at stake\", any redaction can result\n> in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> >> > I'm fuzzy on how proof of burn works.\n> >>\n> >> when you burn coins, you burn them to be used at a future particular\n> >> block height: so if i'm burning for block 553, i can only use them to\n> >> mine block 553.   if i have a choice between two chains, one longer\n> >> and one shorter, i can only choose one... deterministically, for that\n> >> burn: the chain with the height 553.   if we fix the \"lead time\" for\n> >> burned coins to be weeks or even months in advance, miners have a very\n> >> strong, long-term, investment in the stability of the chain.\n> >>\n> >> therefore there is no \"nothing at stake\" problem.   it's\n> >> deterministic, so miners have no choice.  they can *only* choose the\n> >> transactions that go into the block.  they cannot choose which chain\n> >> to mine, and it's time-locked, so rollbacks and instability always\n> >> hurt miners the most.\n> >>\n> >> the \"punishment\" systems of PoS are \"weird at best\", certainly\n> >> unproven.   i can imagine scenarios where large stakeholders can\n> >> collude to punish smaller stakeholders simply to drive them out of\n> >> business, for example.   and then you have to put checks in place to\n> >> prevent that, and more checks for those prevention system...\n> >>\n> >> in PoB, there is no complexity.  simpler systems like this are\n> >> typically more secure.\n> >>\n> >> PoB also solves problems caused by \"energy dependence\", which could\n> >> lead to state monopolies on mining (like the new Bitcoin Mining\n> >> Council).   these consortiums, if state sanctioned, could become a\n> >> source of censorship, for example.   Since PoB doesn't require you to\n> >> have a live, well-connected node, it's harder to censor & harder to\n> >> trace.\n> >>\n> >> Eliminating this weakness seems to be in the best interests of\n> >> existing stakeholders\n> >>\n> >>\n> >>\n> >>\n> >> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com>\n> wrote:\n> >> >\n> >> > >  proof of burn clearly solves this, since nothing is held online\n> >> >\n> >> > Well.. the coins to be burned need to be online when they're burned.\n> But yes, only a small fraction of the total coins need to be online.\n> >> >\n> >> > > your burn investment is always \"at stake\", any redaction can result\n> in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> >> >\n> >> > So you're saying that if say someone tries to mine a block on a\n> shorter chain, that requires them to send a transaction burning their\n> coins, and that transaction could also be spent on the longest chain, which\n> means their coins are burned even if the chain they tried to mine on\n> doesn't win? I'm fuzzy on how proof of burn works.\n> >> >\n> >> > > proof of burn can be more secure than proof-of-stake\n> >> >\n> >> > FYI, proof of stake can be done without the \"nothing at stake\"\n> problem. You can simply punish people who mint on shorter chains (by\n> rewarding people who publish proofs of this happening on the main chain).\n> In quorum-based PoS, you can punish people in the quorum that propose or\n> sign multiple blocks for the same height. The \"nothing at stake\" problem is\n> a solved problem at this point for PoS.\n> >> >\n> >> >\n> >> >\n> >> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n> >> >>\n> >> >> > I don't see a way to get around the conflicting requirement that\n> the keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n> >> >>\n> >> >> proof of burn clearly solves this, since nothing is held online\n> >> >>\n> >> >> >  how does proof of burn solve the \"nothing at stake\" problem in\n> your view?\n> >> >>\n> >> >> definition of nothing at stake: in the event of a fork, whether the\n> >> >> fork is accidental or a malicious, the optimal strategy for any miner\n> >> >> is to mine on every chain, so that the miner gets their reward no\n> >> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n> >> >> published on the very chains mines, so the incentive is magnified.\n> >> >>\n> >> >> in proof-of-burn, your burn investment is always \"at stake\", any\n> >> >> redaction can result in a loss-of-burn, because burns can be tied,\n> >> >> precisely, to block-heights\n> >> >>\n> >> >> as a result, miners no longer have an incentive to mine all chains\n> >> >>\n> >> >> in this way proof of burn can be more secure than proof-of-stake, and\n> >> >> even more secure than proof of work\n> >> >>\n> >> >>\n> >> >>\n> >> >>\n> >> >>\n> >> >>\n> >> >>\n> >> >> >\n> >> >>\n> >> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n> >> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >> >\n> >> >> > Hi Billy,\n> >> >> >\n> >> >> > I was going to write a post which started by dismissing many of\n> the weak arguments that are made against PoS made in this thread and\n> elsewhere.\n> >> >> > Although I don't agree with all your points you have done a decent\n> job here so I'll focus on the second part: why I think Proof-of-Stake is\n> inappropriate for a Bitcoin-like system.\n> >> >> >\n> >> >> > Proof of stake is not fit for purpose for a global settlement\n> layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin\n> is trying to be.\n> >> >> > PoS necessarily gives responsibilities to the holders of coins\n> that they do not want and cannot handle.\n> >> >> > In Bitcoin, large unsophisticated coin holders can put their coins\n> in cold storage without a second thought given to the health of the\n> underlying ledger.\n> >> >> > As much as hardcore Bitcoiners try to convince them to run their\n> own node, most don't, and that's perfectly acceptable.\n> >> >> > At no point do their personal decisions affect the underlying\n> consensus -- it only affects their personal security assurance (not that of\n> the system itself).\n> >> >> > In PoS systems this clean separation of responsibilities does not\n> exist.\n> >> >> >\n> >> >> > I think that the more rigorously studied PoS protocols will work\n> fine within the security claims made in their papers.\n> >> >> > People who believe that these protocols are destined for\n> catastrophic consensus failure are certainly in for a surprise.\n> >> >> > But the devil is in the detail.\n> >> >> > Let's look at what the implications of using the leading proof of\n> stake protocols would have on Bitcoin:\n> >> >> >\n> >> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n> >> >> >\n> >> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with\n> an inbuilt on-chain delegation system[5].\n> >> >> > In these protocols, coin holders who do not want to run their node\n> with their hot keys in it delegate it to a \"Stake Pool\".\n> >> >> > I call the resulting system Proof-of-SquareSpace since most will\n> choose a pool by looking around for one with a nice website and offering\n> the largest share of the block reward.\n> >> >> > On the surface this might sound no different than someone with an\n> mining rig shopping around for a good mining pool but there are crucial\n> differences:\n> >> >> >\n> >> >> > 1. The person making the decision is forced into it just because\n> they own the currency -- someone with a mining rig has purchased it with\n> the intent to make profit by participating in consensus.\n> >> >> >\n> >> >> > 2. When you join a mining pool your systems are very much still\n> online. You are just partaking in a pool to reduce your profit variance.\n> You still see every block that you help create and *you never help create a\n> block without seeing it first*.\n> >> >> >\n> >> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority\n> and start censoring transactions how are the users meant to redelegate\n> their stake to honest pools?\n> >> >> > I guess they can just send a transaction delegating to another\n> pool...oh wait I guess that might be censored too! This seems really really\n> bad.\n> >> >> > In Bitcoin, miners can just join a different pool at a whim. There\n> is nothing the attacker can do to stop them. A temporary dishonest majority\n> heals relatively well.\n> >> >> >\n> >> >> > There is another severe disadvantage to this on-chain delegation\n> system: every UTXO must indicate which staking account this UTXO belongs to\n> so the appropriate share of block rewards can be transferred there.\n> >> >> > Being able to associate every UTXO to an account ruins one of the\n> main privacy advantages of the UTXO model.\n> >> >> > It also grows the size of the blockchain significantly.\n> >> >> >\n> >> >> > ### \"Pure\" proof of stake (Algorand)\n> >> >> >\n> >> >> > Algorand's[4] approach is to only allow online stake to\n> participate in the protocol.\n> >> >> > Theoretically, This means that keys holding funds have to be\n> online in order for them to author blocks when they are chosen.\n> >> >> > Of course in reality no one wants to keep their coin holding keys\n> online so in Alogorand you can authorize a set of \"participation keys\"[1]\n> that will be used to create blocks on your coin holding key's behalf.\n> >> >> > Hopefully you've spotted the problem.\n> >> >> > You can send your participation keys to any malicious party with a\n> nice website (see random example [2]) offering you a good return.\n> >> >> > Damn it's still Proof-of-SquareSpace!\n> >> >> > The minor advantage is that at least the participation keys expire\n> after a certain amount of time so eventually the SquareSpace attacker will\n> lose their hold on consensus.\n> >> >> > Importantly there is also less junk on the blockchain because the\n> participation keys are delegated off-chain and so are not making as much of\n> a mess.\n> >> >> >\n> >> >> > ### Conclusion\n> >> >> >\n> >> >> > I don't see a way to get around the conflicting requirement that\n> the keys for large amounts of coins should be kept offline but those are\n> exactly the coins we need online to make the scheme secure.\n> >> >> > If we allow delegation then we open up a new social attack surface\n> and it degenerates to Proof-of-SquareSpace.\n> >> >> >\n> >> >> > For a \"digital gold\" like system like Bitcoin we optimize for\n> simplicity and desperately want to avoid extraneous responsibilities for\n> the holder of the coin.\n> >> >> > After all, gold is an inert element on the periodic table that\n> doesn't confer responsibilities on the holder to maintain the quality of\n> all the other bars of gold out there.\n> >> >> > Bitcoin feels like this too and in many ways is more inert and\n> beautifully boring than gold.\n> >> >> > For Bitcoin to succeed I think we need to keep it that way and\n> Proof-of-Stake makes everything a bit too exciting.\n> >> >> >\n> >> >> > I suppose in the end the market will decide what is real digital\n> gold and whether these bad technical trade offs are worth being able to say\n> it uses less electricity. It goes without saying that making bad technical\n> decisions to appease the current political climate is an anathema to\n> Bitcoin.\n> >> >> >\n> >> >> > Would be interested to know if you or others think differently on\n> these points.\n> >> >> >\n> >> >> > [1]:\n> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n> >> >> > [2]: https://staking.staked.us/algorand-staking\n> >> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n> >> >> > [4]:\n> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n> >> >> > [5]:\n> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n> >> >> >\n> >> >> > Cheers,\n> >> >> >\n> >> >> > LL\n> >> >> >\n> >> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >> >>\n> >> >> >> I think there is a lot of misinformation and bias against Proof\n> of Stake. Yes there have been lots of shady coins that use insecure PoS\n> mechanisms. Yes there have been massive issues with distribution of PoS\n> coins (of course there have also been massive issues with PoW coins as\n> well). However, I want to remind everyone that there is a difference\n> between \"proved to be impossible\" and \"have not achieved recognized success\n> yet\". Most of the arguments levied against PoS are out of date or rely on\n> unproven assumptions or extrapolation from the analysis of a particular PoS\n> system. I certainly don't think we should experiment with bitcoin by\n> switching to PoS, but from my research, it seems very likely that there is\n> a proof of stake consensus protocol we could build that has substantially\n> higher security (cost / capital required to execute an attack) while at the\n> same time costing far less resources (which do translate to fees on the\n> network) *without* compromising any of the critical security properties\n> bitcoin relies on. I think the critical piece of this is the disagreements\n> around hardcoded checkpoints, which is a critical piece solving attacks\n> that could be levied on a PoS chain, and how that does (or doesn't) affect\n> the security model.\n> >> >> >>\n> >> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is\n> worse when a 51% attack happens. While I agree, I think that line of\n> thinking omits important facts:\n> >> >> >> * The capital required to 51% attack a PoS chain can be made\n> substantially greater than on a PoS chain.\n> >> >> >> * The capital the attacker stands to lose can be substantially\n> greater as well if the attack is successful.\n> >> >> >> * The effectiveness of paying miners to raise the honest fraction\n> of miners above 50% may be quite bad.\n> >> >> >> * Allowing a 51% attack is already unacceptable. It should be\n> considered whether what happens in the case of a 51% may not be\n> significantly different. The currency would likely be critically damaged in\n> a 51% attack regardless of consensus mechanism.\n> >> >> >>\n> >> >> >> > Proof-of-stake tends towards oligopolistic control\n> >> >> >>\n> >> >> >> People repeat this often, but the facts support this. There is no\n> centralization pressure in any proof of stake mechanism that I'm aware of.\n> IE if you have 10 times as much coin that you use to mint blocks, you\n> should expect to earn 10x as much minting revenue - not more than 10x. By\n> contrast, proof of work does in fact have clear centralization pressure -\n> this is not disputed. Our goal in relation to that is to ensure that the\n> centralization pressure remains insignifiant. Proof of work also clearly\n> has a lot more barriers to entry than any proof of stake system does. Both\n> of these mean the tendency towards oligopolistic control is worse for PoW.\n> >> >> >>\n> >> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n> >> >> >>\n> >> >> >> I certainly agree. Bitcoin's energy usage at the moment is I\n> think quite warranted. However, the question is: can we do substantially\n> better. I think if we can, we probably should... eventually.\n> >> >> >>\n> >> >> >> > Proof of Stake is only resilient to \u2153 of the network\n> demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to\n> the \u00bd threshold\n> >> >> >>\n> >> >> >> I see no mention of this in the pos.pdf you linked to. I'm not\n> aware of any proof that all PoS systems have a failure threshold of 1/3. I\n> know that staking systems like Casper do in fact have that 1/3 requirement.\n> However there are PoS designs that should exceed that up to nearly 50% as\n> far as I'm aware. Proof of work is not in fact resilient up to the 1/2\n> threshold in the way you would think. IE, if 100% of miners are currently\n> honest and have a collective 100 exahashes/s hashpower, an attacker does\n> not need to obtain 100 exahashes/s, but actually only needs to accumulate\n> 50 exahashes/s. This is because as the attacker accumulates hashpower, it\n> drives honest miners out of the market as the difficulty increases to\n> beyond what is economically sustainable. Also, its been shown that the best\n> proof of work can do is require an attacker to obtain 33% of the hashpower\n> because of the selfish mining attack discussed in depth in this paper:\n> https://arxiv.org/abs/1311.0243. Together, both of these things reduce\n> PoW's security by a factor of about 83% (1 - 50%*33%).\n> >> >> >>\n> >> >> >>  > Proof of Stake requires other trade-offs which are\n> incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014\n> specifically the famous \"security vs. liveness\" guarantee\n> >> >> >>\n> >> >> >> Do you have a good source that talks about why you think proof of\n> stake cannot be used for a trustless digital cash?\n> >> >> >>\n> >> >> >> > You cannot gain tokens without someone choosing to give up\n> those coins - a form of permission.\n> >> >> >>\n> >> >> >> This is not a practical constraint. Just like in mining, some\n> nodes may reject you, but there will likely be more that will accept you,\n> some sellers may reject you, but most would accept your money as payment\n> for bitcoins. I don't think requiring the \"permission\" of one of millions\n> of people in the market can be reasonably considered a \"permissioned\n> currency\".\n> >> >> >>\n> >> >> >> > 2. Proof of stake must have a trusted means of timestamping to\n> regulate overproduction of blocks\n> >> >> >>\n> >> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone\n> agreed to double their clock speeds. Both systems rely on an honest\n> majority sticking to standard time.\n> >> >> >>\n> >> >> >>\n> >> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev\n> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >> >>>\n> >> >> >>> Ah sorry, I didn't realize this was, in fact, a different\n> thread! :)\n> >> >> >>>\n> >> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <\n> mike at powx.org> wrote:\n> >> >> >>>>\n> >> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the\n> BIP itself. PoS, VDFs, and so on are interesting but I guess there are\n> other threads going on these topics already where they would be relevant.\n> >> >> >>>>\n> >> >> >>>> Also, it's important to distinguish between oPoW and these\n> other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't\n> alter the core game theory or security assumptions of Hashcash and actually\n> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n> >> >> >>>>\n> >> >> >>>> Cheers,\n> >> >> >>>> Mike\n> >> >> >>>>\n> >> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n> >> >> >>>>>\n> >> >> >>>>> 1. i never suggested vdf's to replace pow.\n> >> >> >>>>>\n> >> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n> >> >> >>>>> proof-of-burn protocol\n> >> >> >>>>>\n> >> >> >>>>> - vdfs used only for timing (not block height)\n> >> >> >>>>> - blind-burned coins of a specific age used to replace proof\n> of work\n> >> >> >>>>> - the required \"work\" per block would simply be a competition\n> to\n> >> >> >>>>> acquire rewards, and so miners would have to burn coins, well\n> in\n> >> >> >>>>> advance, and hope that their burned coins got rewarded in some\n> far\n> >> >> >>>>> future\n> >> >> >>>>> - the point of burned coins is to mimic, in every meaningful\n> way, the\n> >> >> >>>>> value gained from proof of work... without some of the security\n> >> >> >>>>> drawbacks\n> >> >> >>>>> - the miner risks losing all of his burned coins (like all\n> miners risk\n> >> >> >>>>> losing their work in each block)\n> >> >> >>>>> - new burns can't be used\n> >> >> >>>>> - old burns age out (like ASICs do)\n> >> >> >>>>> - other requirements on burns might be needed to properly\n> mirror the\n> >> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine\n> honestly.\n> >> >> >>>>>\n> >> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf\n> system\"\n> >> >> >>>>> might be more secure in the long run, and that if the entire\n> space\n> >> >> >>>>> agreed that such an endeavor was worthwhile, a test net could\n> be spun\n> >> >> >>>>> up, and a hard-fork could be initiated.\n> >> >> >>>>>\n> >> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n> >> >> >>>>> possible that consensus was possible.  so no, this is not an\n> \"alt\n> >> >> >>>>> coin\"\n> >> >> >>>>>\n> >> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <\n> zachgrw at gmail.com> wrote:\n> >> >> >>>>> >\n> >> >> >>>>> > Hi ZmnSCPxj,\n> >> >> >>>>> >\n> >> >> >>>>> > Please note that I am not suggesting VDFs as a means to save\n> energy, but solely as a means to make the time between blocks more constant.\n> >> >> >>>>> >\n> >> >> >>>>> > Zac\n> >> >> >>>>> >\n> >> >> >>>>> >\n> >> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <\n> ZmnSCPxj at protonmail.com> wrote:\n> >> >> >>>>> >>\n> >> >> >>>>> >> Good morning Zac,\n> >> >> >>>>> >>\n> >> >> >>>>> >> > VDFs might enable more constant block times, for instance\n> by having a two-step PoW:\n> >> >> >>>>> >> >\n> >> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF\n> being subject to difficulty adjustments similar to the as-is). As per the\n> property of VDFs, miners are able show proof of work.\n> >> >> >>>>> >> >\n> >> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so\n> finding a block takes 1 minute on average, again subject to as-is\n> difficulty adjustments.\n> >> >> >>>>> >> >\n> >> >> >>>>> >> > As a result, variation in block times will be greatly\n> reduced.\n> >> >> >>>>> >>\n> >> >> >>>>> >> As I understand it, another weakness of VDFs is that they\n> are not inherently progress-free (their sequential nature prevents that;\n> they are inherently progress-requiring).\n> >> >> >>>>> >>\n> >> >> >>>>> >> Thus, a miner which focuses on improving the amount of\n> energy that it can pump into the VDF circuitry (by overclocking and\n> freezing the circuitry), could potentially get into a winner-takes-all\n> situation, possibly leading to even *worse* competition and even *more*\n> energy consumption.\n> >> >> >>>>> >> After all, if you can start mining 0.1s faster than the\n> competition, that is a 0.1s advantage where *only you* can mine *in the\n> entire world*.\n> >> >> >>>>> >>\n> >> >> >>>>> >> Regards,\n> >> >> >>>>> >> ZmnSCPxj\n> >> >> >>>>> _______________________________________________\n> >> >> >>>>> bitcoin-dev mailing list\n> >> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n> >> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >> >> >>>>\n> >> >> >>>>\n> >> >> >>>>\n> >> >> >>>> --\n> >> >> >>>> Michael Dubrovsky\n> >> >> >>>> Founder; PoWx\n> >> >> >>>> www.PoWx.org\n> >> >> >>>\n> >> >> >>>\n> >> >> >>>\n> >> >> >>> --\n> >> >> >>> Michael Dubrovsky\n> >> >> >>> Founder; PoWx\n> >> >> >>> www.PoWx.org\n> >> >> >>> _______________________________________________\n> >> >> >>> bitcoin-dev mailing list\n> >> >> >>> bitcoin-dev at lists.linuxfoundation.org\n> >> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >> >> >>\n> >> >> >> _______________________________________________\n> >> >> >> bitcoin-dev mailing list\n> >> >> >> bitcoin-dev at lists.linuxfoundation.org\n> >> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >> >> >\n> >> >> > _______________________________________________\n> >> >> > bitcoin-dev mailing list\n> >> >> > bitcoin-dev at lists.linuxfoundation.org\n> >> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/f0981968/attachment-0001.html>"
            },
            {
                "author": "befreeandopen",
                "date": "2021-05-25T21:10:35",
                "message_text_only": "> @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n>\n> The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the [reasoning here](https://github.com/fresheneesz/ValidatedProofOfStake#security-the-minimum-cost-of-attack) for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n\nThis is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n\n>> I am not sure if this is what you call quorum-based PoS\n>\n> Yes, pre-selected minters is exactly what I mean by that.\n>\n>> it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n>\n> Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n\nI do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n\n> Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n\nWhile I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n\nConsider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n\nThen if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n\n> So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n\nIt still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n\nJust because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n\n> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>\n>>> > you burn them to be used at a future particular block height\n>>\n>>> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>\n>> could be right. the original idea was to have burns decay over time,\n>> like ASIC's.\n>>\n>> anyway the point was not that \"i had a magic formula\"\n>>\n>> the point was that proof of burn is almost always better than proof of\n>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>> somewhere waiting to be stolen.\n>>\n>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>\n>>> Is this the kind of proof of burn you're talking about?\n>>>\n>>> > if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n>>>\n>>> What prevents you from attempting to mine block 553 on both chains?\n>>>\n>>> > miners have a very strong, long-term, investment in the stability of the chain.\n>>>\n>>> Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n>>>\n>>> > you burn them to be used at a future particular block height\n>>>\n>>> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>\n>>> > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n>>>\n>>> Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n>>>\n>>>\n>>> On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>\n>>>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>> > I'm fuzzy on how proof of burn works.\n>>>>\n>>>> when you burn coins, you burn them to be used at a future particular\n>>>> block height: so if i'm burning for block 553, i can only use them to\n>>>> mine block 553. if i have a choice between two chains, one longer\n>>>> and one shorter, i can only choose one... deterministically, for that\n>>>> burn: the chain with the height 553. if we fix the \"lead time\" for\n>>>> burned coins to be weeks or even months in advance, miners have a very\n>>>> strong, long-term, investment in the stability of the chain.\n>>>>\n>>>> therefore there is no \"nothing at stake\" problem. it's\n>>>> deterministic, so miners have no choice. they can *only* choose the\n>>>> transactions that go into the block. they cannot choose which chain\n>>>> to mine, and it's time-locked, so rollbacks and instability always\n>>>> hurt miners the most.\n>>>>\n>>>> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>>>> unproven. i can imagine scenarios where large stakeholders can\n>>>> collude to punish smaller stakeholders simply to drive them out of\n>>>> business, for example. and then you have to put checks in place to\n>>>> prevent that, and more checks for those prevention system...\n>>>>\n>>>> in PoB, there is no complexity. simpler systems like this are\n>>>> typically more secure.\n>>>>\n>>>> PoB also solves problems caused by \"energy dependence\", which could\n>>>> lead to state monopolies on mining (like the new Bitcoin Mining\n>>>> Council). these consortiums, if state sanctioned, could become a\n>>>> source of censorship, for example. Since PoB doesn't require you to\n>>>> have a live, well-connected node, it's harder to censor & harder to\n>>>> trace.\n>>>>\n>>>> Eliminating this weakness seems to be in the best interests of\n>>>> existing stakeholders\n>>>>\n>>>>\n>>>>\n>>>>\n>>>> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>> >\n>>>> > > proof of burn clearly solves this, since nothing is held online\n>>>> >\n>>>> > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>>>> >\n>>>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>> >\n>>>> > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>>>> >\n>>>> > > proof of burn can be more secure than proof-of-stake\n>>>> >\n>>>> > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>>>> >\n>>>> >\n>>>> >\n>>>> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>>> >>\n>>>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>> >>\n>>>> >> proof of burn clearly solves this, since nothing is held online\n>>>> >>\n>>>> >> > how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>>> >>\n>>>> >> definition of nothing at stake: in the event of a fork, whether the\n>>>> >> fork is accidental or a malicious, the optimal strategy for any miner\n>>>> >> is to mine on every chain, so that the miner gets their reward no\n>>>> >> matter which fork wins. indeed in proof-of-stake, the proofs are\n>>>> >> published on the very chains mines, so the incentive is magnified.\n>>>> >>\n>>>> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>>>> >> redaction can result in a loss-of-burn, because burns can be tied,\n>>>> >> precisely, to block-heights\n>>>> >>\n>>>> >> as a result, miners no longer have an incentive to mine all chains\n>>>> >>\n>>>> >> in this way proof of burn can be more secure than proof-of-stake, and\n>>>> >> even more secure than proof of work\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >> >\n>>>> >>\n>>>> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>>>> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >\n>>>> >> > Hi Billy,\n>>>> >> >\n>>>> >> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>>>> >> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>>> >> >\n>>>> >> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>>>> >> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>>>> >> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>>>> >> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>>>> >> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>>>> >> > In PoS systems this clean separation of responsibilities does not exist.\n>>>> >> >\n>>>> >> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>>>> >> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>>>> >> > But the devil is in the detail.\n>>>> >> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>>>> >> >\n>>>> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>>>> >> >\n>>>> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>>>> >> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>>>> >> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>>>> >> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>>>> >> >\n>>>> >> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>>>> >> >\n>>>> >> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>>>> >> >\n>>>> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>>>> >> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>>>> >> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>>>> >> >\n>>>> >> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>>>> >> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>>>> >> > It also grows the size of the blockchain significantly.\n>>>> >> >\n>>>> >> > ### \"Pure\" proof of stake (Algorand)\n>>>> >> >\n>>>> >> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>>>> >> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>>>> >> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>>>> >> > Hopefully you've spotted the problem.\n>>>> >> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>>>> >> > Damn it's still Proof-of-SquareSpace!\n>>>> >> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>>>> >> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>>>> >> >\n>>>> >> > ### Conclusion\n>>>> >> >\n>>>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>> >> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>>>> >> >\n>>>> >> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>>>> >> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>>>> >> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>>>> >> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>>>> >> >\n>>>> >> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>>>> >> >\n>>>> >> > Would be interested to know if you or others think differently on these points.\n>>>> >> >\n>>>> >> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>>> >> > [2]: https://staking.staked.us/algorand-staking\n>>>> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>>>> >> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>>> >> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>>> >> >\n>>>> >> > Cheers,\n>>>> >> >\n>>>> >> > LL\n>>>> >> >\n>>>> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >>\n>>>> >> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>>> >> >>\n>>>> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>>>> >> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>>>> >> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>>>> >> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>>>> >> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>>> >> >>\n>>>> >> >> > Proof-of-stake tends towards oligopolistic control\n>>>> >> >>\n>>>> >> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>>> >> >>\n>>>> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>>> >> >>\n>>>> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>>> >> >>\n>>>> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>>> >> >>\n>>>> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>>> >> >>\n>>>> >> >> > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>>> >> >>\n>>>> >> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>>> >> >>\n>>>> >> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>>> >> >>\n>>>> >> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>>> >> >>\n>>>> >> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>>> >> >>\n>>>> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>>> >> >>\n>>>> >> >>\n>>>> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >>>\n>>>> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>> >> >>>\n>>>> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>> >> >>>>\n>>>> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>> >> >>>>\n>>>> >> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>> >> >>>>\n>>>> >> >>>> Cheers,\n>>>> >> >>>> Mike\n>>>> >> >>>>\n>>>> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >>>>>\n>>>> >> >>>>> 1. i never suggested vdf's to replace pow.\n>>>> >> >>>>>\n>>>> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n>>>> >> >>>>> proof-of-burn protocol\n>>>> >> >>>>>\n>>>> >> >>>>> - vdfs used only for timing (not block height)\n>>>> >> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>> >> >>>>> - the required \"work\" per block would simply be a competition to\n>>>> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n>>>> >> >>>>> future\n>>>> >> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>> >> >>>>> value gained from proof of work... without some of the security\n>>>> >> >>>>> drawbacks\n>>>> >> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>> >> >>>>> losing their work in each block)\n>>>> >> >>>>> - new burns can't be used\n>>>> >> >>>>> - old burns age out (like ASICs do)\n>>>> >> >>>>> - other requirements on burns might be needed to properly mirror the\n>>>> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>> >> >>>>>\n>>>> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>> >> >>>>> might be more secure in the long run, and that if the entire space\n>>>> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>> >> >>>>> up, and a hard-fork could be initiated.\n>>>> >> >>>>>\n>>>> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>>>> >> >>>>> possible that consensus was possible. so no, this is not an \"alt\n>>>> >> >>>>> coin\"\n>>>> >> >>>>>\n>>>> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>> >> >>>>> >\n>>>> >> >>>>> > Hi ZmnSCPxj,\n>>>> >> >>>>> >\n>>>> >> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>> >> >>>>> >\n>>>> >> >>>>> > Zac\n>>>> >> >>>>> >\n>>>> >> >>>>> >\n>>>> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>> >> >>>>> >>\n>>>> >> >>>>> >> Good morning Zac,\n>>>> >> >>>>> >>\n>>>> >> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>> >> >>>>> >> >\n>>>> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>> >> >>>>> >> >\n>>>> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>> >> >>>>> >> >\n>>>> >> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>> >> >>>>> >>\n>>>> >> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>> >> >>>>> >>\n>>>> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>> >> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>> >> >>>>> >>\n>>>> >> >>>>> >> Regards,\n>>>> >> >>>>> >> ZmnSCPxj\n>>>> >> >>>>> _______________________________________________\n>>>> >> >>>>> bitcoin-dev mailing list\n>>>> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> >> >>>>\n>>>> >> >>>>\n>>>> >> >>>>\n>>>> >> >>>> --\n>>>> >> >>>> Michael Dubrovsky\n>>>> >> >>>> Founder; PoWx\n>>>> >> >>>> www.PoWx.org\n>>>> >> >>>\n>>>> >> >>>\n>>>> >> >>>\n>>>> >> >>> --\n>>>> >> >>> Michael Dubrovsky\n>>>> >> >>> Founder; PoWx\n>>>> >> >>> www.PoWx.org\n>>>> >> >>> _______________________________________________\n>>>> >> >>> bitcoin-dev mailing list\n>>>> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> >> >>\n>>>> >> >> _______________________________________________\n>>>> >> >> bitcoin-dev mailing list\n>>>> >> >> bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> >> >\n>>>> >> > _______________________________________________\n>>>> >> > bitcoin-dev mailing list\n>>>> >> > bitcoin-dev at lists.linuxfoundation.org\n>>>> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/53d90560/attachment-0001.html>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-26T06:53:44",
                "message_text_only": "@befreeandopen I guess I misunderstood your selfish minting attack. Let me\nmake sure I understand it. You're saying it would go as follows?:\n\n1. The malicious actor comes across an opportunity to mint the next 3\nblocks. But they hold off and don't release their blocks just yet.\n2. They receive a new block minted by someone else.\n3. The malicious actor then chooses to release their other 2 blocks on on\nthe second from the top block if it gives them more blocks in the future\nthan minting on the top block. And instead lets the top block proceed if it\ngives them more blocks in the future (also figuring in the 3 blocks they're\nmissing out on minting).\n4. Profit!\n\nThe problem with this attack is that any self respecting PoS system\nwouldn't have the information available for minters to know how blocks will\naffect their future prospects of minting. Otherwise this would introduce\nthe problem of stake grinding. This can be done using collaborative\nrandomness (where numbers from many parties are combined to create a random\nnumber that no individual party could predict). In fact, that's what the\nCasper protocol does to decide quorums. In a non quorum case, you can do\nsomething like record a hash of a number in the block header, and then have\na second step to release that number later. Rewards can be given can be\nused to ensure minters act honestly here by minting messages that release\nthese numbers and not releasing their secret numbers too early.\n\nFun fact tho: there is an attack called the \"selfish mining attack\" for\nproof of work, and it reduces the security of PoW by at least 1/3rd\n<https://bitcoinmagazine.com/technical/selfish-mining-a-25-attack-against-the-bitcoin-network-1383578440>\n.\n\n>   the problem is not as hard as you think\n\nI don't claim to know just how hard finding the IP address associated with\na bitcoin address is. However, the DOS risk can be solved more completely\nby only allowing the owner of coins themselves to know whether they can\nmint a block. Eg by determining whether someone can mint a block based on\ntheir public key hidden behind hashes (as normal in addresses). Only when\nsomeone does in fact mint a block do they reveal their hidden public key in\norder to prove they are allowed to mint the block.\n\n> I agree that introduction of punishment itself does not imply introducing\na problem elsewhere (which I did not claim if you reread my previous\nmessage)\n\nI'm glad we agree there. Perhaps I misunderstood what you meant by \"you\nshould not omit to mention that by doing so, typically, you have introduced\nanother problem elsewhere.\"\n\n> As long as the staker makes sure (which is not that hard) that she does\nnot miss a chance to create a block, her significance in the system will\nalways increase in time. It will increase relative to all normal users who\ndo not stake\n\nWell, if you're in the closed system of the cryptocurrency, sure. But we\ndon't live in that closed system. Minters will earn some ROI from minting\njust like any other financial activity. Others may find more success\nspending their time doing things other than figuring out how to mint coins.\nIn that case, they'll be able to earn more coin that they could later\ndecide to use to mint blocks if they decide to.\n\n> Just because of the above we must reject PoS as being critically insecure\n\nI think the only thing we can conclude from this is that you have come up\nwith an insecure proof of stake protocol. I don't see how anything you've\nbrought up amounts to substantial evidence that all possible PoS protocols\nare insecure.\n\n\nOn Tue, May 25, 2021 at 11:10 AM befreeandopen <befreeandopen at protonmail.com>\nwrote:\n\n>\n> @befreeandopen \" An attacker can calculate whether or not she can prolong\n> this chain or not and if so with what timestamp.\"\n>\n> The scenario you describe would only be likely to happen at all if the\n> malicious actor has a very large fraction of the stake - probably quite\n> close to 50%. At that point, you're talking about a 51% attack, not the\n> nothing at stake problem. The nothing at stake problem is the problem where\n> anyone will mint on any chain. Its clear that if there's a substantial\n> punishment for minting on chains other than the one that eventually wins,\n> every minter without a significant fraction of the stake will be honest and\n> not attempt to mint on old blocks or support someone else's attempt to mint\n> on old blocks (until and if it becomes the heaviest chain). Because the\n> attacker would need probably >45% of the active stake (take a look at the reasoning\n> here\n> <https://github.com/fresheneesz/ValidatedProofOfStake#security-the-minimum-cost-of-attack>\n> for a deeper analysis of that statement), I don't agree that punishment is\n> not a sufficient mitigation of the nothing at stake problem. To exploit the\n> nothing at stake problem, you basically need to 51% attack, at which point\n> you've exceeded the operating conditions of the system, so of course its\n> gonna have problems, just like a 51% attack would cause with PoW.\n>\n>\n> This is not at all the case. The attacker benefits using the described\n> technique at any size of the stake and significantly so with just 5% of the\n> stake. By significantly, I do not mean that the attacker is able to\n> completely take control the network (in short term), but rather that the\n> attacker has significant advantage in the number of blocks she creates\n> compared to what she \"should be able to create\". This means the attacker's\n> stake increases significantly faster than of the honest nodes, which in\n> long term is very serious in PoS system. If you believe close to 50% is\n> needed for that, you need to redo your math. So no, you are wrong stating\n> that \"to exploit nothing at stake problem you basically need to 51%\n> attack\". It is rather the opposite - eventually, nothing at stake attack\n> leads to ability to perform 51% attack.\n>\n>\n>\n> > I am not sure if this is what you call quorum-based PoS\n>\n> Yes, pre-selected minters is exactly what I mean by that.\n>\n> > it allows the attacker to know who to attack at which point with\n> powerful DDOS in order to hurt liveness of such system\n>\n> Just like in bitcoin, associating keys with IP addresses isn't generally\n> an easy thing to do on the fly like that. If you know someone's IP address,\n> you can target them. But if you only know their address or public key, the\n> reverse isn't as easy. With a quorum-based PoS system, you can see their\n> public key and address, but finding out their IP to DOS would be a huge\n> challenge I think.\n>\n>\n> I do not dispute that the problem is not trivial, but the problem is not\n> as hard as you think. The network graph analysis is a known technique and\n> it is not trivial, but not very hard either. Introducing a large number of\n> nodes to the system to achieve very good success rate of analysis of area\n> of origin of blocks is doable and has been done in past. So again, I very\n> much disagree with your conclusion that this is somehow secure. It is\n> absolutely insecure.\n>\n>\n>\n> Note, tho, that quorum-based PoS generally also have punishments as part\n> of the protocol. The introduction of punishments do indeed handily solve\n> the nothing at stake problem. And you didn't mention a single problem that\n> the punishments introduce that weren't already there before punishments.\n> There are tradeoffs with introducing punishments (eg in some cases you\n> might punish honest actors), but they are minor in comparison to solving\n> the nothing at stake problem.\n>\n>\n> While I agree that introduction of punishment itself does not imply\n> introducing a problem elsewhere (which I did not claim if you reread my\n> previous message), it does introduce additional complexity which may\n> introduce problem, but more importantly, while it slightly improves\n> resistance against the nothing at stake attack, it solves absolutely\n> nothing. Your claim is based on wrong claim of needed close to 50% stake,\n> but that could not be farther from the truth. It is not true even in\n> optimal conditions when all participants of the network stake or delegate\n> their stake. These optimal conditions rarely, if ever, occur. And that's\n> another thing that we have not mention in our debate, so please allow me to\n> introduce another problem to PoS.\n>\n> Consider what is needed for such optimal conditions to occur - all coins\n> are always part of the stake, which means that they need to somehow\n> automatically part of the staking process even when they are moved. But in\n> many PoS systems you usually require some age (in terms of confirmations)\n> of the coin before you allow it to be used for participation in staking\n> process and that is for a good reason - to prevent various grinding\n> attacks. In some systems the coin must be specifically registered before it\n> can be staked, in others, simply waiting for enough confirmations enables\n> you to stake with the coin. I am not sure if there is a system which does\n> not have this cooling period for a coin that has been moved. Maybe it is\n> possible though, but AFAIK it is not common and not battle tested feature.\n>\n> Then if we admit that achieving the optimal condition is rather\n> theoretical. Then if we do not have the optimal condition, it means that a\n> staker with K% of the total available supply increases it's percentage over\n> time to some amounts >K%. As long as the staker makes sure (which is not\n> that hard) that she does not miss a chance to create a block, her\n> significance in the system will always increase in time. It will increase\n> relative to all normal users who do not stake (if there are any) and\n> relative to all other stakers who make mistakes or who are not wealthy\n> enough to afford not selling any position ever. But powerful attacker is\n> exactly in such position and thus she will gain significance in such a\n> system. The technique I have described, and that you mistakenly think is\n> viable only with huge amounts of stake, only puts the attacker to even\n> greater advantage. But even without the described attack (which exploits\n> nothing at stake), the PoS system converges to a system more and more\n> controlled by powerful entity, which we can assume is the attacker.\n>\n>\n> So I don't think it is at all misleading to claim that \"nothing at stake\"\n> is a solved problem. I do in fact mean that the solutions to that problem\n> don't introduce any other problems with anywhere near the same level of\n> significance.\n>\n>\n> It still stands as truly misleading claim. I disagree that introducing\n> DDOS opportunity with medium level of difficulty for the attacker to\n> implement it, in case of \"quorum-based PoS\" is not a problem anywhere near\n> the same level of significance. Such an attack vector allows you to turn\n> off the network if you spend some time and money. That is hardly acceptable.\n>\n> Just because of the above we must reject PoS as being critically insecure\n> until someone invents and demonstrates an actual way of solving these\n> issues.\n>\n>\n>\n> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>\n>> > > you burn them to be used at a future particular block height\n>>\n>> > This sounds exploitable. It seems like an attacker could simply focus\n>> all their burns on a particular set of 6 blocks to double spend, minimizing\n>> their cost of attack.\n>>\n>> could be right.   the original idea was to have burns decay over time,\n>> like ASIC's.\n>>\n>> anyway the point was not that \"i had a magic formula\"\n>>\n>> the point was that proof of burn is almost always better than proof of\n>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>> somewhere waiting to be stolen.\n>>\n>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com>\n>> wrote:\n>> >\n>> > Is this the kind of proof of burn you're talking about?\n>> >\n>> > >   if i have a choice between two chains, one longer and one shorter,\n>> i can only choose one... deterministically\n>> >\n>> > What prevents you from attempting to mine block 553 on both chains?\n>> >\n>> > > miners have a very strong, long-term, investment in the stability of\n>> the chain.\n>> >\n>> > Yes, but the same can be said of any coin, even ones that do have the\n>> nothing at stake problem. This isn't sufficient tho because the chain is a\n>> common good, and the tragedy of the commons holds for it.\n>> >\n>> > > you burn them to be used at a future particular block height\n>> >\n>> > This sounds exploitable. It seems like an attacker could simply focus\n>> all their burns on a particular set of 6 blocks to double spend, minimizing\n>> their cost of attack.\n>> >\n>> > > i can imagine scenarios where large stakeholders can collude to\n>> punish smaller stakeholders simply to drive them out of business, for\n>> example\n>> >\n>> > Are you talking about a 51% attack? This is possible in any\n>> decentralized cryptocurrency.\n>> >\n>> >\n>> > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>> >>\n>> >> > > your burn investment is always \"at stake\", any redaction can\n>> result in a loss-of-burn, because burns can be tied, precisely, to\n>> block-heights\n>> >> > I'm fuzzy on how proof of burn works.\n>> >>\n>> >> when you burn coins, you burn them to be used at a future particular\n>> >> block height: so if i'm burning for block 553, i can only use them to\n>> >> mine block 553.   if i have a choice between two chains, one longer\n>> >> and one shorter, i can only choose one... deterministically, for that\n>> >> burn: the chain with the height 553.   if we fix the \"lead time\" for\n>> >> burned coins to be weeks or even months in advance, miners have a very\n>> >> strong, long-term, investment in the stability of the chain.\n>> >>\n>> >> therefore there is no \"nothing at stake\" problem.   it's\n>> >> deterministic, so miners have no choice.  they can *only* choose the\n>> >> transactions that go into the block.  they cannot choose which chain\n>> >> to mine, and it's time-locked, so rollbacks and instability always\n>> >> hurt miners the most.\n>> >>\n>> >> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>> >> unproven.   i can imagine scenarios where large stakeholders can\n>> >> collude to punish smaller stakeholders simply to drive them out of\n>> >> business, for example.   and then you have to put checks in place to\n>> >> prevent that, and more checks for those prevention system...\n>> >>\n>> >> in PoB, there is no complexity.  simpler systems like this are\n>> >> typically more secure.\n>> >>\n>> >> PoB also solves problems caused by \"energy dependence\", which could\n>> >> lead to state monopolies on mining (like the new Bitcoin Mining\n>> >> Council).   these consortiums, if state sanctioned, could become a\n>> >> source of censorship, for example.   Since PoB doesn't require you to\n>> >> have a live, well-connected node, it's harder to censor & harder to\n>> >> trace.\n>> >>\n>> >> Eliminating this weakness seems to be in the best interests of\n>> >> existing stakeholders\n>> >>\n>> >>\n>> >>\n>> >>\n>> >> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com>\n>> wrote:\n>> >> >\n>> >> > >  proof of burn clearly solves this, since nothing is held online\n>> >> >\n>> >> > Well.. the coins to be burned need to be online when they're burned.\n>> But yes, only a small fraction of the total coins need to be online.\n>> >> >\n>> >> > > your burn investment is always \"at stake\", any redaction can\n>> result in a loss-of-burn, because burns can be tied, precisely, to\n>> block-heights\n>> >> >\n>> >> > So you're saying that if say someone tries to mine a block on a\n>> shorter chain, that requires them to send a transaction burning their\n>> coins, and that transaction could also be spent on the longest chain, which\n>> means their coins are burned even if the chain they tried to mine on\n>> doesn't win? I'm fuzzy on how proof of burn works.\n>> >> >\n>> >> > > proof of burn can be more secure than proof-of-stake\n>> >> >\n>> >> > FYI, proof of stake can be done without the \"nothing at stake\"\n>> problem. You can simply punish people who mint on shorter chains (by\n>> rewarding people who publish proofs of this happening on the main chain).\n>> In quorum-based PoS, you can punish people in the quorum that propose or\n>> sign multiple blocks for the same height. The \"nothing at stake\" problem is\n>> a solved problem at this point for PoS.\n>> >> >\n>> >> >\n>> >> >\n>> >> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>> >> >>\n>> >> >> > I don't see a way to get around the conflicting requirement that\n>> the keys for large amounts of coins should be kept offline but those are\n>> exactly the coins we need online to make the scheme secure.\n>> >> >>\n>> >> >> proof of burn clearly solves this, since nothing is held online\n>> >> >>\n>> >> >> >  how does proof of burn solve the \"nothing at stake\" problem in\n>> your view?\n>> >> >>\n>> >> >> definition of nothing at stake: in the event of a fork, whether the\n>> >> >> fork is accidental or a malicious, the optimal strategy for any\n>> miner\n>> >> >> is to mine on every chain, so that the miner gets their reward no\n>> >> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n>> >> >> published on the very chains mines, so the incentive is magnified.\n>> >> >>\n>> >> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>> >> >> redaction can result in a loss-of-burn, because burns can be tied,\n>> >> >> precisely, to block-heights\n>> >> >>\n>> >> >> as a result, miners no longer have an incentive to mine all chains\n>> >> >>\n>> >> >> in this way proof of burn can be more secure than proof-of-stake,\n>> and\n>> >> >> even more secure than proof of work\n>> >> >>\n>> >> >>\n>> >> >>\n>> >> >>\n>> >> >>\n>> >> >>\n>> >> >>\n>> >> >> >\n>> >> >>\n>> >> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>> >> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >> >\n>> >> >> > Hi Billy,\n>> >> >> >\n>> >> >> > I was going to write a post which started by dismissing many of\n>> the weak arguments that are made against PoS made in this thread and\n>> elsewhere.\n>> >> >> > Although I don't agree with all your points you have done a\n>> decent job here so I'll focus on the second part: why I think\n>> Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>> >> >> >\n>> >> >> > Proof of stake is not fit for purpose for a global settlement\n>> layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin\n>> is trying to be.\n>> >> >> > PoS necessarily gives responsibilities to the holders of coins\n>> that they do not want and cannot handle.\n>> >> >> > In Bitcoin, large unsophisticated coin holders can put their\n>> coins in cold storage without a second thought given to the health of the\n>> underlying ledger.\n>> >> >> > As much as hardcore Bitcoiners try to convince them to run their\n>> own node, most don't, and that's perfectly acceptable.\n>> >> >> > At no point do their personal decisions affect the underlying\n>> consensus -- it only affects their personal security assurance (not that of\n>> the system itself).\n>> >> >> > In PoS systems this clean separation of responsibilities does not\n>> exist.\n>> >> >> >\n>> >> >> > I think that the more rigorously studied PoS protocols will work\n>> fine within the security claims made in their papers.\n>> >> >> > People who believe that these protocols are destined for\n>> catastrophic consensus failure are certainly in for a surprise.\n>> >> >> > But the devil is in the detail.\n>> >> >> > Let's look at what the implications of using the leading proof of\n>> stake protocols would have on Bitcoin:\n>> >> >> >\n>> >> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>> >> >> >\n>> >> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with\n>> an inbuilt on-chain delegation system[5].\n>> >> >> > In these protocols, coin holders who do not want to run their\n>> node with their hot keys in it delegate it to a \"Stake Pool\".\n>> >> >> > I call the resulting system Proof-of-SquareSpace since most will\n>> choose a pool by looking around for one with a nice website and offering\n>> the largest share of the block reward.\n>> >> >> > On the surface this might sound no different than someone with an\n>> mining rig shopping around for a good mining pool but there are crucial\n>> differences:\n>> >> >> >\n>> >> >> > 1. The person making the decision is forced into it just because\n>> they own the currency -- someone with a mining rig has purchased it with\n>> the intent to make profit by participating in consensus.\n>> >> >> >\n>> >> >> > 2. When you join a mining pool your systems are very much still\n>> online. You are just partaking in a pool to reduce your profit variance.\n>> You still see every block that you help create and *you never help create a\n>> block without seeing it first*.\n>> >> >> >\n>> >> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority\n>> and start censoring transactions how are the users meant to redelegate\n>> their stake to honest pools?\n>> >> >> > I guess they can just send a transaction delegating to another\n>> pool...oh wait I guess that might be censored too! This seems really really\n>> bad.\n>> >> >> > In Bitcoin, miners can just join a different pool at a whim.\n>> There is nothing the attacker can do to stop them. A temporary dishonest\n>> majority heals relatively well.\n>> >> >> >\n>> >> >> > There is another severe disadvantage to this on-chain delegation\n>> system: every UTXO must indicate which staking account this UTXO belongs to\n>> so the appropriate share of block rewards can be transferred there.\n>> >> >> > Being able to associate every UTXO to an account ruins one of the\n>> main privacy advantages of the UTXO model.\n>> >> >> > It also grows the size of the blockchain significantly.\n>> >> >> >\n>> >> >> > ### \"Pure\" proof of stake (Algorand)\n>> >> >> >\n>> >> >> > Algorand's[4] approach is to only allow online stake to\n>> participate in the protocol.\n>> >> >> > Theoretically, This means that keys holding funds have to be\n>> online in order for them to author blocks when they are chosen.\n>> >> >> > Of course in reality no one wants to keep their coin holding keys\n>> online so in Alogorand you can authorize a set of \"participation keys\"[1]\n>> that will be used to create blocks on your coin holding key's behalf.\n>> >> >> > Hopefully you've spotted the problem.\n>> >> >> > You can send your participation keys to any malicious party with\n>> a nice website (see random example [2]) offering you a good return.\n>> >> >> > Damn it's still Proof-of-SquareSpace!\n>> >> >> > The minor advantage is that at least the participation keys\n>> expire after a certain amount of time so eventually the SquareSpace\n>> attacker will lose their hold on consensus.\n>> >> >> > Importantly there is also less junk on the blockchain because the\n>> participation keys are delegated off-chain and so are not making as much of\n>> a mess.\n>> >> >> >\n>> >> >> > ### Conclusion\n>> >> >> >\n>> >> >> > I don't see a way to get around the conflicting requirement that\n>> the keys for large amounts of coins should be kept offline but those are\n>> exactly the coins we need online to make the scheme secure.\n>> >> >> > If we allow delegation then we open up a new social attack\n>> surface and it degenerates to Proof-of-SquareSpace.\n>> >> >> >\n>> >> >> > For a \"digital gold\" like system like Bitcoin we optimize for\n>> simplicity and desperately want to avoid extraneous responsibilities for\n>> the holder of the coin.\n>> >> >> > After all, gold is an inert element on the periodic table that\n>> doesn't confer responsibilities on the holder to maintain the quality of\n>> all the other bars of gold out there.\n>> >> >> > Bitcoin feels like this too and in many ways is more inert and\n>> beautifully boring than gold.\n>> >> >> > For Bitcoin to succeed I think we need to keep it that way and\n>> Proof-of-Stake makes everything a bit too exciting.\n>> >> >> >\n>> >> >> > I suppose in the end the market will decide what is real digital\n>> gold and whether these bad technical trade offs are worth being able to say\n>> it uses less electricity. It goes without saying that making bad technical\n>> decisions to appease the current political climate is an anathema to\n>> Bitcoin.\n>> >> >> >\n>> >> >> > Would be interested to know if you or others think differently on\n>> these points.\n>> >> >> >\n>> >> >> > [1]:\n>> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>> >> >> > [2]: https://staking.staked.us/algorand-staking\n>> >> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>> >> >> > [4]:\n>> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>> >> >> > [5]:\n>> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>> >> >> >\n>> >> >> > Cheers,\n>> >> >> >\n>> >> >> > LL\n>> >> >> >\n>> >> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >> >>\n>> >> >> >> I think there is a lot of misinformation and bias against Proof\n>> of Stake. Yes there have been lots of shady coins that use insecure PoS\n>> mechanisms. Yes there have been massive issues with distribution of PoS\n>> coins (of course there have also been massive issues with PoW coins as\n>> well). However, I want to remind everyone that there is a difference\n>> between \"proved to be impossible\" and \"have not achieved recognized success\n>> yet\". Most of the arguments levied against PoS are out of date or rely on\n>> unproven assumptions or extrapolation from the analysis of a particular PoS\n>> system. I certainly don't think we should experiment with bitcoin by\n>> switching to PoS, but from my research, it seems very likely that there is\n>> a proof of stake consensus protocol we could build that has substantially\n>> higher security (cost / capital required to execute an attack) while at the\n>> same time costing far less resources (which do translate to fees on the\n>> network) *without* compromising any of the critical security properties\n>> bitcoin relies on. I think the critical piece of this is the disagreements\n>> around hardcoded checkpoints, which is a critical piece solving attacks\n>> that could be levied on a PoS chain, and how that does (or doesn't) affect\n>> the security model.\n>> >> >> >>\n>> >> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is\n>> worse when a 51% attack happens. While I agree, I think that line of\n>> thinking omits important facts:\n>> >> >> >> * The capital required to 51% attack a PoS chain can be made\n>> substantially greater than on a PoS chain.\n>> >> >> >> * The capital the attacker stands to lose can be substantially\n>> greater as well if the attack is successful.\n>> >> >> >> * The effectiveness of paying miners to raise the honest\n>> fraction of miners above 50% may be quite bad.\n>> >> >> >> * Allowing a 51% attack is already unacceptable. It should be\n>> considered whether what happens in the case of a 51% may not be\n>> significantly different. The currency would likely be critically damaged in\n>> a 51% attack regardless of consensus mechanism.\n>> >> >> >>\n>> >> >> >> > Proof-of-stake tends towards oligopolistic control\n>> >> >> >>\n>> >> >> >> People repeat this often, but the facts support this. There is\n>> no centralization pressure in any proof of stake mechanism that I'm aware\n>> of. IE if you have 10 times as much coin that you use to mint blocks, you\n>> should expect to earn 10x as much minting revenue - not more than 10x. By\n>> contrast, proof of work does in fact have clear centralization pressure -\n>> this is not disputed. Our goal in relation to that is to ensure that the\n>> centralization pressure remains insignifiant. Proof of work also clearly\n>> has a lot more barriers to entry than any proof of stake system does. Both\n>> of these mean the tendency towards oligopolistic control is worse for PoW.\n>> >> >> >>\n>> >> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>> >> >> >>\n>> >> >> >> I certainly agree. Bitcoin's energy usage at the moment is I\n>> think quite warranted. However, the question is: can we do substantially\n>> better. I think if we can, we probably should... eventually.\n>> >> >> >>\n>> >> >> >> > Proof of Stake is only resilient to \u2153 of the network\n>> demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to\n>> the \u00bd threshold\n>> >> >> >>\n>> >> >> >> I see no mention of this in the pos.pdf you linked to. I'm not\n>> aware of any proof that all PoS systems have a failure threshold of 1/3. I\n>> know that staking systems like Casper do in fact have that 1/3 requirement.\n>> However there are PoS designs that should exceed that up to nearly 50% as\n>> far as I'm aware. Proof of work is not in fact resilient up to the 1/2\n>> threshold in the way you would think. IE, if 100% of miners are currently\n>> honest and have a collective 100 exahashes/s hashpower, an attacker does\n>> not need to obtain 100 exahashes/s, but actually only needs to accumulate\n>> 50 exahashes/s. This is because as the attacker accumulates hashpower, it\n>> drives honest miners out of the market as the difficulty increases to\n>> beyond what is economically sustainable. Also, its been shown that the best\n>> proof of work can do is require an attacker to obtain 33% of the hashpower\n>> because of the selfish mining attack discussed in depth in this paper:\n>> https://arxiv.org/abs/1311.0243. Together, both of these things reduce\n>> PoW's security by a factor of about 83% (1 - 50%*33%).\n>> >> >> >>\n>> >> >> >>  > Proof of Stake requires other trade-offs which are\n>> incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014\n>> specifically the famous \"security vs. liveness\" guarantee\n>> >> >> >>\n>> >> >> >> Do you have a good source that talks about why you think proof\n>> of stake cannot be used for a trustless digital cash?\n>> >> >> >>\n>> >> >> >> > You cannot gain tokens without someone choosing to give up\n>> those coins - a form of permission.\n>> >> >> >>\n>> >> >> >> This is not a practical constraint. Just like in mining, some\n>> nodes may reject you, but there will likely be more that will accept you,\n>> some sellers may reject you, but most would accept your money as payment\n>> for bitcoins. I don't think requiring the \"permission\" of one of millions\n>> of people in the market can be reasonably considered a \"permissioned\n>> currency\".\n>> >> >> >>\n>> >> >> >> > 2. Proof of stake must have a trusted means of timestamping to\n>> regulate overproduction of blocks\n>> >> >> >>\n>> >> >> >> Both PoW and PoS could mine/mint blocks twice as fast if\n>> everyone agreed to double their clock speeds. Both systems rely on an\n>> honest majority sticking to standard time.\n>> >> >> >>\n>> >> >> >>\n>> >> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via\n>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >> >>>\n>> >> >> >>> Ah sorry, I didn't realize this was, in fact, a different\n>> thread! :)\n>> >> >> >>>\n>> >> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <\n>> mike at powx.org> wrote:\n>> >> >> >>>>\n>> >> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the\n>> BIP itself. PoS, VDFs, and so on are interesting but I guess there are\n>> other threads going on these topics already where they would be relevant.\n>> >> >> >>>>\n>> >> >> >>>> Also, it's important to distinguish between oPoW and these\n>> other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't\n>> alter the core game theory or security assumptions of Hashcash and actually\n>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>> >> >> >>>>\n>> >> >> >>>> Cheers,\n>> >> >> >>>> Mike\n>> >> >> >>>>\n>> >> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <\n>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>> >> >> >>>>>\n>> >> >> >>>>> 1. i never suggested vdf's to replace pow.\n>> >> >> >>>>>\n>> >> >> >>>>> 2. my suggestion was specifically *in the context of* a\n>> working\n>> >> >> >>>>> proof-of-burn protocol\n>> >> >> >>>>>\n>> >> >> >>>>> - vdfs used only for timing (not block height)\n>> >> >> >>>>> - blind-burned coins of a specific age used to replace proof\n>> of work\n>> >> >> >>>>> - the required \"work\" per block would simply be a competition\n>> to\n>> >> >> >>>>> acquire rewards, and so miners would have to burn coins, well\n>> in\n>> >> >> >>>>> advance, and hope that their burned coins got rewarded in\n>> some far\n>> >> >> >>>>> future\n>> >> >> >>>>> - the point of burned coins is to mimic, in every meaningful\n>> way, the\n>> >> >> >>>>> value gained from proof of work... without some of the\n>> security\n>> >> >> >>>>> drawbacks\n>> >> >> >>>>> - the miner risks losing all of his burned coins (like all\n>> miners risk\n>> >> >> >>>>> losing their work in each block)\n>> >> >> >>>>> - new burns can't be used\n>> >> >> >>>>> - old burns age out (like ASICs do)\n>> >> >> >>>>> - other requirements on burns might be needed to properly\n>> mirror the\n>> >> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine\n>> honestly.\n>> >> >> >>>>>\n>> >> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf\n>> system\"\n>> >> >> >>>>> might be more secure in the long run, and that if the entire\n>> space\n>> >> >> >>>>> agreed that such an endeavor was worthwhile, a test net could\n>> be spun\n>> >> >> >>>>> up, and a hard-fork could be initiated.\n>> >> >> >>>>>\n>> >> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>> >> >> >>>>> possible that consensus was possible.  so no, this is not an\n>> \"alt\n>> >> >> >>>>> coin\"\n>> >> >> >>>>>\n>> >> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <\n>> zachgrw at gmail.com> wrote:\n>> >> >> >>>>> >\n>> >> >> >>>>> > Hi ZmnSCPxj,\n>> >> >> >>>>> >\n>> >> >> >>>>> > Please note that I am not suggesting VDFs as a means to\n>> save energy, but solely as a means to make the time between blocks more\n>> constant.\n>> >> >> >>>>> >\n>> >> >> >>>>> > Zac\n>> >> >> >>>>> >\n>> >> >> >>>>> >\n>> >> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <\n>> ZmnSCPxj at protonmail.com> wrote:\n>> >> >> >>>>> >>\n>> >> >> >>>>> >> Good morning Zac,\n>> >> >> >>>>> >>\n>> >> >> >>>>> >> > VDFs might enable more constant block times, for\n>> instance by having a two-step PoW:\n>> >> >> >>>>> >> >\n>> >> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF\n>> being subject to difficulty adjustments similar to the as-is). As per the\n>> property of VDFs, miners are able show proof of work.\n>> >> >> >>>>> >> >\n>> >> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so\n>> finding a block takes 1 minute on average, again subject to as-is\n>> difficulty adjustments.\n>> >> >> >>>>> >> >\n>> >> >> >>>>> >> > As a result, variation in block times will be greatly\n>> reduced.\n>> >> >> >>>>> >>\n>> >> >> >>>>> >> As I understand it, another weakness of VDFs is that they\n>> are not inherently progress-free (their sequential nature prevents that;\n>> they are inherently progress-requiring).\n>> >> >> >>>>> >>\n>> >> >> >>>>> >> Thus, a miner which focuses on improving the amount of\n>> energy that it can pump into the VDF circuitry (by overclocking and\n>> freezing the circuitry), could potentially get into a winner-takes-all\n>> situation, possibly leading to even *worse* competition and even *more*\n>> energy consumption.\n>> >> >> >>>>> >> After all, if you can start mining 0.1s faster than the\n>> competition, that is a 0.1s advantage where *only you* can mine *in the\n>> entire world*.\n>> >> >> >>>>> >>\n>> >> >> >>>>> >> Regards,\n>> >> >> >>>>> >> ZmnSCPxj\n>> >> >> >>>>> _______________________________________________\n>> >> >> >>>>> bitcoin-dev mailing list\n>> >> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>> >> >> >>>>>\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >> >> >>>>\n>> >> >> >>>>\n>> >> >> >>>>\n>> >> >> >>>> --\n>> >> >> >>>> Michael Dubrovsky\n>> >> >> >>>> Founder; PoWx\n>> >> >> >>>> www.PoWx.org\n>> >> >> >>>\n>> >> >> >>>\n>> >> >> >>>\n>> >> >> >>> --\n>> >> >> >>> Michael Dubrovsky\n>> >> >> >>> Founder; PoWx\n>> >> >> >>> www.PoWx.org\n>> >> >> >>> _______________________________________________\n>> >> >> >>> bitcoin-dev mailing list\n>> >> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>> >> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >> >> >>\n>> >> >> >> _______________________________________________\n>> >> >> >> bitcoin-dev mailing list\n>> >> >> >> bitcoin-dev at lists.linuxfoundation.org\n>> >> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>> >> >> >\n>> >> >> > _______________________________________________\n>> >> >> > bitcoin-dev mailing list\n>> >> >> > bitcoin-dev at lists.linuxfoundation.org\n>> >> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/92b5d4d1/attachment-0001.html>"
            },
            {
                "author": "befreeandopen",
                "date": "2021-05-26T13:11:44",
                "message_text_only": "> @befreeandopen I guess I misunderstood your selfish minting attack. Let me make sure I understand it. You're saying it would go as follows?:\n>\n> 1. The malicious actor comes across an opportunity to mint the next 3 blocks. But they hold off and don't release their blocks just yet.\n> 2. They receive a new block minted by someone else.\n> 3. The malicious actor then chooses to release their other 2 blocks on on the second from the top block if it gives them more blocks in the future than minting on the top block. And instead lets the top block proceed if it gives them more blocks in the future (also figuring in the 3 blocks they're missing out on minting).\n> 4. Profit!\n>\n> The problem with this attack is that any self respecting PoS system wouldn't have the information available for minters to know how blocks will affect their future prospects of minting. Otherwise this would introduce the problem of stake grinding. This can be done using collaborative randomness (where numbers from many parties are combined to create a random number that no individual party could predict). In fact, that's what the Casper protocol does to decide quorums. In a non quorum case, you can do something like record a hash of a number in the block header, and then have a second step to release that number later. Rewards can be given can be used to ensure minters act honestly here by minting messages that release these numbers and not releasing their secret numbers too early.\n\nYes, you misunderstood it. First, let me say that the above thoughts of yours are incorrect, at least for non-quorum case. Since the transition in the blockchain system from S1 to S2 is only by adding new block, and since stakers always need to be able to decide whether or not they can add the next block, it follows that if a staker creates a new block locally, she can decide whether the new state allows her to add another block on top. As you mentioned, this COULD introduce problem of staking, that you are incorrect in that it is a necessity. Usual prevention of the grinding problem in this case is that an \"old enough\" source of randomness applies for the current block production process. Of course this, as it is typical for PoS, introduces other problems, but let's discard those.\n\nI will try to explain in detail what you misunderstood before. You start with a chain ending with blocks A-B-C, C being the top, the common feature of PoS system (non-quorum), roughly speaking, is that if N is the total amount of coins that participate in the staking process to create a new block on top of C (let's call that D), then a participant having K*N amount of stake has chance K to be the one who will create the next stake. In other words, the power of stakers is supposed to be linear in the system - you own 10 coins gives you 10x the chance of finding block over someone who has 1 coin.\n\nWhat i was claiming is that using the technique I have described, this linearity is violated. Why? Well, it works for honest stakers among the competition of honest stakers - they really do have the chance of K to find the next block. However, the attacker, using nothing at stake, checks her ability to build block D (at some timestamp). If she is successful, she does not propagate D immediately, but instead she also checks whether she can build on top of B and on top of A. Since with every new timestamp, usually, there is a new chance to build the block, it is not uncommon that she finds she is indeed able to build such block C' on top of B. Here it is likely t(C') > t(C) as the attacker has relatively low stake. Note that in order to produce such C', she not only could have tried the current timestamp t(D), but also all previous timestamps up to t(B) (usually that's the consensus rule, but it may depend on a specific consensus). So her chance to produce such C' is greater than her previous chance of producing C (which chance was limited by other stakers in the system and the discovery of block C by one of them). Now suppose that she found such C' and now she continues by trying to prolong this chain by finding D'. And again here, it is quite likely that her chance to find such D' is greater than was her chance of finding D because again there are likely multiple timestamps she could try. This all was possible just because nothing at stake allows you to just try if you can produce a block in certain state of block chain or not. Now if she actually was able to find D', she discards D and only publishes chain A-B-C'-D', which can not be punished despite the fact that she indeed produced two different forks. She can not be punished because this production was local and only the final result of A-B-C'-D' was published, in which case she gained an extra block over the honest strategy which would only give her block D.\n\n> Fun fact tho: there is an attack called the \"selfish mining attack\" for proof of work, and it reduces the security of PoW by [at least 1/3rd](https://bitcoinmagazine.com/technical/selfish-mining-a-25-attack-against-the-bitcoin-network-1383578440).\n\nHow is that relevant to our discussion? This is known research that has nothing to do with PoS except that it is often worse on PoS.\n\n>> the problem is not as hard as you think\n>\n> I don't claim to know just how hard finding the IP address associated with a bitcoin address is. However, the DOS risk can be solved more completely by only allowing the owner of coins themselves to know whether they can mint a block. Eg by determining whether someone can mint a block based on their public key hidden behind hashes (as normal in addresses). Only when someone does in fact mint a block do they reveal their hidden public key in order to prove they are allowed to mint the block.\n\nThis is true, but you are mixing quorum and non-quorum systems. My objection here was towards such system where I specifically said that the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system. So in such system, I claimed, the known producer is the only target at any given point of time. This of course does not apply to any other type of system where future producers are not known. No need to dispute, again, something that was not claimed.\n\n>> I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message)\n>\n> I'm glad we agree there. Perhaps I misunderstood what you meant by \"you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere.\"\n\nPerhaps you should quote the full sentence and not just a part of it:\n\n\"Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\"\n\nYou can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\nIn case of the punishment it was meant to be the not solve it completely part.\nAlso \"typically\" does not imply always.\nBut this parsing of English sentences for you seems very off topic here. My point is, in context of Bitcoin, reject such unsupported claims that PoS is a reasonable alternative to PoW, let's stick to that.\n\n>> As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake\n>\n> Well, if you're in the closed system of the cryptocurrency, sure. But we don't live in that closed system. Minters will earn some ROI from minting just like any other financial activity. Others may find more success spending their time doing things other than figuring out how to mint coins. In that case, they'll be able to earn more coin that they could later decide to use to mint blocks if they decide to.\n\nThis only supports the point I was making. Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great.\n\n>> Just because of the above we must reject PoS as being critically insecure\n>\n> I think the only thing we can conclude from this is that you have come up with an insecure proof of stake protocol. I don't see how anything you've brought up amounts to substantial evidence that all possible PoS protocols are insecure.\n\nI have not come up with anything. I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure. It is up to you to show that you know how to solve every problem that people throw at you. So far we have just demonstrated that your claim that nothing at stake is solved was unjustified. You have not described a system that would solve it (and not introduce critical DDOS attack vector as it is in quorum based systems - per the prior definition of such systems).\n\nOf course the list of problems of PoS systems do not end with just nothing at stake, but it is good enough example that by itself prevents its adoption in decentralized consensus. No need to go to other hard problems without solving nothing at stake.\n\n> On Tue, May 25, 2021 at 11:10 AM befreeandopen <befreeandopen at protonmail.com> wrote:\n>\n>>> @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n>>>\n>>> The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the [reasoning here](https://github.com/fresheneesz/ValidatedProofOfStake#security-the-minimum-cost-of-attack) for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n>>\n>> This is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n>>\n>>>> I am not sure if this is what you call quorum-based PoS\n>>>\n>>> Yes, pre-selected minters is exactly what I mean by that.\n>>>\n>>>> it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n>>>\n>>> Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n>>\n>> I do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n>>\n>>> Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n>>\n>> While I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n>>\n>> Consider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n>>\n>> Then if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n>>\n>>> So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n>>\n>> It still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n>>\n>> Just because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n>>\n>>> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>>>\n>>>>> > you burn them to be used at a future particular block height\n>>>>\n>>>>> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>>\n>>>> could be right. the original idea was to have burns decay over time,\n>>>> like ASIC's.\n>>>>\n>>>> anyway the point was not that \"i had a magic formula\"\n>>>>\n>>>> the point was that proof of burn is almost always better than proof of\n>>>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>>>> somewhere waiting to be stolen.\n>>>>\n>>>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>>>\n>>>>> Is this the kind of proof of burn you're talking about?\n>>>>>\n>>>>> > if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n>>>>>\n>>>>> What prevents you from attempting to mine block 553 on both chains?\n>>>>>\n>>>>> > miners have a very strong, long-term, investment in the stability of the chain.\n>>>>>\n>>>>> Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n>>>>>\n>>>>> > you burn them to be used at a future particular block height\n>>>>>\n>>>>> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>>>\n>>>>> > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n>>>>>\n>>>>> Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n>>>>>\n>>>>>\n>>>>> On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>>>\n>>>>>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>>>> > I'm fuzzy on how proof of burn works.\n>>>>>>\n>>>>>> when you burn coins, you burn them to be used at a future particular\n>>>>>> block height: so if i'm burning for block 553, i can only use them to\n>>>>>> mine block 553. if i have a choice between two chains, one longer\n>>>>>> and one shorter, i can only choose one... deterministically, for that\n>>>>>> burn: the chain with the height 553. if we fix the \"lead time\" for\n>>>>>> burned coins to be weeks or even months in advance, miners have a very\n>>>>>> strong, long-term, investment in the stability of the chain.\n>>>>>>\n>>>>>> therefore there is no \"nothing at stake\" problem. it's\n>>>>>> deterministic, so miners have no choice. they can *only* choose the\n>>>>>> transactions that go into the block. they cannot choose which chain\n>>>>>> to mine, and it's time-locked, so rollbacks and instability always\n>>>>>> hurt miners the most.\n>>>>>>\n>>>>>> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>>>>>> unproven. i can imagine scenarios where large stakeholders can\n>>>>>> collude to punish smaller stakeholders simply to drive them out of\n>>>>>> business, for example. and then you have to put checks in place to\n>>>>>> prevent that, and more checks for those prevention system...\n>>>>>>\n>>>>>> in PoB, there is no complexity. simpler systems like this are\n>>>>>> typically more secure.\n>>>>>>\n>>>>>> PoB also solves problems caused by \"energy dependence\", which could\n>>>>>> lead to state monopolies on mining (like the new Bitcoin Mining\n>>>>>> Council). these consortiums, if state sanctioned, could become a\n>>>>>> source of censorship, for example. Since PoB doesn't require you to\n>>>>>> have a live, well-connected node, it's harder to censor & harder to\n>>>>>> trace.\n>>>>>>\n>>>>>> Eliminating this weakness seems to be in the best interests of\n>>>>>> existing stakeholders\n>>>>>>\n>>>>>>\n>>>>>>\n>>>>>>\n>>>>>> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>>>> >\n>>>>>> > > proof of burn clearly solves this, since nothing is held online\n>>>>>> >\n>>>>>> > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>>>>>> >\n>>>>>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>>>> >\n>>>>>> > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>>>>>> >\n>>>>>> > > proof of burn can be more secure than proof-of-stake\n>>>>>> >\n>>>>>> > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>>>>>> >\n>>>>>> >\n>>>>>> >\n>>>>>> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>>> >>\n>>>>>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>>>> >>\n>>>>>> >> proof of burn clearly solves this, since nothing is held online\n>>>>>> >>\n>>>>>> >> > how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>>>>> >>\n>>>>>> >> definition of nothing at stake: in the event of a fork, whether the\n>>>>>> >> fork is accidental or a malicious, the optimal strategy for any miner\n>>>>>> >> is to mine on every chain, so that the miner gets their reward no\n>>>>>> >> matter which fork wins. indeed in proof-of-stake, the proofs are\n>>>>>> >> published on the very chains mines, so the incentive is magnified.\n>>>>>> >>\n>>>>>> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>>>>>> >> redaction can result in a loss-of-burn, because burns can be tied,\n>>>>>> >> precisely, to block-heights\n>>>>>> >>\n>>>>>> >> as a result, miners no longer have an incentive to mine all chains\n>>>>>> >>\n>>>>>> >> in this way proof of burn can be more secure than proof-of-stake, and\n>>>>>> >> even more secure than proof of work\n>>>>>> >>\n>>>>>> >>\n>>>>>> >>\n>>>>>> >>\n>>>>>> >>\n>>>>>> >>\n>>>>>> >>\n>>>>>> >> >\n>>>>>> >>\n>>>>>> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>>>>>> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>> >> >\n>>>>>> >> > Hi Billy,\n>>>>>> >> >\n>>>>>> >> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>>>>>> >> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>>>>> >> >\n>>>>>> >> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>>>>>> >> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>>>>>> >> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>>>>>> >> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>>>>>> >> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>>>>>> >> > In PoS systems this clean separation of responsibilities does not exist.\n>>>>>> >> >\n>>>>>> >> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>>>>>> >> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>>>>>> >> > But the devil is in the detail.\n>>>>>> >> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>>>>>> >> >\n>>>>>> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>>>>>> >> >\n>>>>>> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>>>>>> >> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>>>>>> >> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>>>>>> >> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>>>>>> >> >\n>>>>>> >> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>>>>>> >> >\n>>>>>> >> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>>>>>> >> >\n>>>>>> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>>>>>> >> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>>>>>> >> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>>>>>> >> >\n>>>>>> >> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>>>>>> >> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>>>>>> >> > It also grows the size of the blockchain significantly.\n>>>>>> >> >\n>>>>>> >> > ### \"Pure\" proof of stake (Algorand)\n>>>>>> >> >\n>>>>>> >> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>>>>>> >> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>>>>>> >> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>>>>>> >> > Hopefully you've spotted the problem.\n>>>>>> >> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>>>>>> >> > Damn it's still Proof-of-SquareSpace!\n>>>>>> >> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>>>>>> >> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>>>>>> >> >\n>>>>>> >> > ### Conclusion\n>>>>>> >> >\n>>>>>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>>>> >> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>>>>>> >> >\n>>>>>> >> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>>>>>> >> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>>>>>> >> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>>>>>> >> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>>>>>> >> >\n>>>>>> >> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>>>>>> >> >\n>>>>>> >> > Would be interested to know if you or others think differently on these points.\n>>>>>> >> >\n>>>>>> >> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>>>>> >> > [2]: https://staking.staked.us/algorand-staking\n>>>>>> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>>>>>> >> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>>>>> >> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>>>>> >> >\n>>>>>> >> > Cheers,\n>>>>>> >> >\n>>>>>> >> > LL\n>>>>>> >> >\n>>>>>> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>> >> >>\n>>>>>> >> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>>>>> >> >>\n>>>>>> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>>>>>> >> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>>>>>> >> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>>>>>> >> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>>>>>> >> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>>>>> >> >>\n>>>>>> >> >> > Proof-of-stake tends towards oligopolistic control\n>>>>>> >> >>\n>>>>>> >> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>>>>> >> >>\n>>>>>> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>>>>> >> >>\n>>>>>> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>>>>> >> >>\n>>>>>> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>>>>> >> >>\n>>>>>> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>>>>> >> >>\n>>>>>> >> >> > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>>>>> >> >>\n>>>>>> >> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>>>>> >> >>\n>>>>>> >> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>>>>> >> >>\n>>>>>> >> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>>>>> >> >>\n>>>>>> >> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>>>>> >> >>\n>>>>>> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>>>>> >> >>\n>>>>>> >> >>\n>>>>>> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>> >> >>>\n>>>>>> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>>>> >> >>>\n>>>>>> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>>>> >> >>>>\n>>>>>> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>>>> >> >>>>\n>>>>>> >> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>>>> >> >>>>\n>>>>>> >> >>>> Cheers,\n>>>>>> >> >>>> Mike\n>>>>>> >> >>>>\n>>>>>> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>> >> >>>>>\n>>>>>> >> >>>>> 1. i never suggested vdf's to replace pow.\n>>>>>> >> >>>>>\n>>>>>> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n>>>>>> >> >>>>> proof-of-burn protocol\n>>>>>> >> >>>>>\n>>>>>> >> >>>>> - vdfs used only for timing (not block height)\n>>>>>> >> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>>>> >> >>>>> - the required \"work\" per block would simply be a competition to\n>>>>>> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>>>> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n>>>>>> >> >>>>> future\n>>>>>> >> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>>>> >> >>>>> value gained from proof of work... without some of the security\n>>>>>> >> >>>>> drawbacks\n>>>>>> >> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>>>> >> >>>>> losing their work in each block)\n>>>>>> >> >>>>> - new burns can't be used\n>>>>>> >> >>>>> - old burns age out (like ASICs do)\n>>>>>> >> >>>>> - other requirements on burns might be needed to properly mirror the\n>>>>>> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>>> >> >>>>>\n>>>>>> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>>>> >> >>>>> might be more secure in the long run, and that if the entire space\n>>>>>> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>>>> >> >>>>> up, and a hard-fork could be initiated.\n>>>>>> >> >>>>>\n>>>>>> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>>>>>> >> >>>>> possible that consensus was possible. so no, this is not an \"alt\n>>>>>> >> >>>>> coin\"\n>>>>>> >> >>>>>\n>>>>>> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>>>> >> >>>>> >\n>>>>>> >> >>>>> > Hi ZmnSCPxj,\n>>>>>> >> >>>>> >\n>>>>>> >> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>>>> >> >>>>> >\n>>>>>> >> >>>>> > Zac\n>>>>>> >> >>>>> >\n>>>>>> >> >>>>> >\n>>>>>> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>>>> >> >>>>> >>\n>>>>>> >> >>>>> >> Good morning Zac,\n>>>>>> >> >>>>> >>\n>>>>>> >> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>>>> >> >>>>> >> >\n>>>>>> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>>>> >> >>>>> >> >\n>>>>>> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>>>> >> >>>>> >> >\n>>>>>> >> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>>>> >> >>>>> >>\n>>>>>> >> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>>>> >> >>>>> >>\n>>>>>> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>>>> >> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>>>> >> >>>>> >>\n>>>>>> >> >>>>> >> Regards,\n>>>>>> >> >>>>> >> ZmnSCPxj\n>>>>>> >> >>>>> _______________________________________________\n>>>>>> >> >>>>> bitcoin-dev mailing list\n>>>>>> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>> >> >>>>\n>>>>>> >> >>>>\n>>>>>> >> >>>>\n>>>>>> >> >>>> --\n>>>>>> >> >>>> Michael Dubrovsky\n>>>>>> >> >>>> Founder; PoWx\n>>>>>> >> >>>> www.PoWx.org\n>>>>>> >> >>>\n>>>>>> >> >>>\n>>>>>> >> >>>\n>>>>>> >> >>> --\n>>>>>> >> >>> Michael Dubrovsky\n>>>>>> >> >>> Founder; PoWx\n>>>>>> >> >>> www.PoWx.org\n>>>>>> >> >>> _______________________________________________\n>>>>>> >> >>> bitcoin-dev mailing list\n>>>>>> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>> >> >>\n>>>>>> >> >> _______________________________________________\n>>>>>> >> >> bitcoin-dev mailing list\n>>>>>> >> >> bitcoin-dev at lists.linuxfoundation.org\n>>>>>> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>> >> >\n>>>>>> >> > _______________________________________________\n>>>>>> >> > bitcoin-dev mailing list\n>>>>>> >> > bitcoin-dev at lists.linuxfoundation.org\n>>>>>> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210526/62455f29/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-26T22:07:02",
                "message_text_only": "note: the \"nothing at stake\" problem you propose is not broken for\nproof-of-burn, because the attacker\n\na) has no idea which past transactions are burns\nb) has no way to use his mining power, even 5%, to maliciously improve\nhis odds of being selected\n\nOn Wed, May 26, 2021 at 9:12 AM befreeandopen\n<befreeandopen at protonmail.com> wrote:\n>\n>\n>\n> @befreeandopen I guess I misunderstood your selfish minting attack. Let me make sure I understand it. You're saying it would go as follows?:\n>\n> 1. The malicious actor comes across an opportunity to mint the next 3 blocks. But they hold off and don't release their blocks just yet.\n> 2. They receive a new block minted by someone else.\n> 3. The malicious actor then chooses to release their other 2 blocks on on the second from the top block if it gives them more blocks in the future than minting on the top block. And instead lets the top block proceed if it gives them more blocks in the future (also figuring in the 3 blocks they're missing out on minting).\n> 4. Profit!\n>\n> The problem with this attack is that any self respecting PoS system wouldn't have the information available for minters to know how blocks will affect their future prospects of minting. Otherwise this would introduce the problem of stake grinding. This can be done using collaborative randomness (where numbers from many parties are combined to create a random number that no individual party could predict). In fact, that's what the Casper protocol does to decide quorums. In a non quorum case, you can do something like record a hash of a number in the block header, and then have a second step to release that number later. Rewards can be given can be used to ensure minters act honestly here by minting messages that release these numbers and not releasing their secret numbers too early.\n>\n>\n> Yes, you misunderstood it. First, let me say that the above thoughts of yours are incorrect, at least for non-quorum case. Since the transition in the blockchain system from S1 to S2 is only by adding new block, and since stakers always need to be able to decide whether or not they can add the next block, it follows that if a staker creates a new block locally, she can decide whether the new state allows her to add another block on top. As you mentioned, this COULD introduce problem of staking, that you are incorrect in that it is a necessity. Usual prevention of the grinding problem in this case is that an \"old enough\" source of randomness applies for the current block production process. Of course this, as it is typical for PoS, introduces other problems, but let's discard those.\n>\n> I will try to explain in detail what you misunderstood before. You start with a chain ending with blocks A-B-C, C being the top, the common feature of PoS system (non-quorum), roughly speaking, is that if N is the total amount of coins that participate in the staking process to create a new block on top of C (let's call that D), then a participant having K*N amount of stake has chance K to be the one who will create the next stake. In other words, the power of stakers is supposed to be linear in the system - you own 10 coins gives you 10x the chance of finding block over someone who has 1 coin.\n>\n> What i was claiming is that using the technique I have described, this linearity is violated. Why? Well, it works for honest stakers among the competition of honest stakers - they really do have the chance of K to find the next block. However, the attacker, using nothing at stake, checks her ability to build block D (at some timestamp). If she is successful, she does not propagate D immediately, but instead she also checks whether she can build on top of B and on top of A. Since with every new timestamp, usually, there is a new chance to build the block, it is not uncommon that she finds she is indeed able to build such block C' on top of B. Here it is likely t(C') > t(C) as the attacker has relatively low stake. Note that in order to produce such C', she not only could have tried the current timestamp t(D), but also all previous timestamps up to t(B) (usually that's the consensus rule, but it may depend on a specific consensus). So her chance to produce such C' is greater than her previous chance of producing C (which chance was limited by other stakers in the system and the discovery of block C by one of them). Now suppose that she found such C' and now she continues by trying to prolong this chain by finding D'. And again here, it is quite likely that her chance to find such D' is greater than was her chance of finding D because again there are likely multiple timestamps she could try. This all was possible just because nothing at stake allows you to just try if you can produce a block in certain state of block chain or not. Now if she actually was able to find D', she discards D and only publishes chain A-B-C'-D', which can not be punished despite the fact that she indeed produced two different forks. She can not be punished because this production was local and only the final result of A-B-C'-D' was published, in which case she gained an extra block over the honest strategy which would only give her block D.\n>\n>\n>\n> Fun fact tho: there is an attack called the \"selfish mining attack\" for proof of work, and it reduces the security of PoW by at least 1/3rd.\n>\n>\n> How is that relevant to our discussion? This is known research that has nothing to do with PoS except that it is often worse on PoS.\n>\n>\n>\n> >   the problem is not as hard as you think\n>\n> I don't claim to know just how hard finding the IP address associated with a bitcoin address is. However, the DOS risk can be solved more completely by only allowing the owner of coins themselves to know whether they can mint a block. Eg by determining whether someone can mint a block based on their public key hidden behind hashes (as normal in addresses). Only when someone does in fact mint a block do they reveal their hidden public key in order to prove they are allowed to mint the block.\n>\n>\n> This is true, but you are mixing quorum and non-quorum systems. My objection here was towards such system where I specifically said that the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system. So in such system, I claimed, the known producer is the only target at any given point of time. This of course does not apply to any other type of system where future producers are not known. No need to dispute, again, something that was not claimed.\n>\n>\n>\n>\n> > I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message)\n>\n> I'm glad we agree there. Perhaps I misunderstood what you meant by \"you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere.\"\n>\n>\n> Perhaps you should quote the full sentence and not just a part of it:\n>\n> \"Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\"\n>\n> You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n> In case of the punishment it was meant to be the not solve it completely part.\n> Also \"typically\" does not imply always.\n> But this parsing of English sentences for you seems very off topic here. My point is, in context of Bitcoin, reject such unsupported claims that PoS is a reasonable alternative to PoW, let's stick to that.\n>\n>\n>\n> > As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake\n>\n> Well, if you're in the closed system of the cryptocurrency, sure. But we don't live in that closed system. Minters will earn some ROI from minting just like any other financial activity. Others may find more success spending their time doing things other than figuring out how to mint coins. In that case, they'll be able to earn more coin that they could later decide to use to mint blocks if they decide to.\n>\n>\n> This only supports the point I was making. Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great.\n>\n>\n>\n>\n> > Just because of the above we must reject PoS as being critically insecure\n>\n> I think the only thing we can conclude from this is that you have come up with an insecure proof of stake protocol. I don't see how anything you've brought up amounts to substantial evidence that all possible PoS protocols are insecure.\n>\n>\n> I have not come up with anything. I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure. It is up to you to show that you know how to solve every problem that people throw at you. So far we have just demonstrated that your claim that nothing at stake is solved was unjustified. You have not described a system that would solve it (and not introduce critical DDOS attack vector as it is in quorum based systems - per the prior definition of such systems).\n>\n> Of course the list of problems of PoS systems do not end with just nothing at stake, but it is good enough example that by itself prevents its adoption in decentralized consensus. No need to go to other hard problems without solving nothing at stake.\n>\n>\n>\n>\n>\n> On Tue, May 25, 2021 at 11:10 AM befreeandopen <befreeandopen at protonmail.com> wrote:\n>>\n>>\n>> @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n>>\n>> The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the reasoning here for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n>>\n>>\n>> This is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n>>\n>>\n>>\n>> > I am not sure if this is what you call quorum-based PoS\n>>\n>> Yes, pre-selected minters is exactly what I mean by that.\n>>\n>> > it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n>>\n>> Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n>>\n>>\n>> I do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n>>\n>>\n>>\n>> Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n>>\n>>\n>> While I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n>>\n>> Consider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n>>\n>> Then if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n>>\n>>\n>> So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n>>\n>>\n>> It still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n>>\n>> Just because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n>>\n>>\n>>\n>> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>>>\n>>> > > you burn them to be used at a future particular block height\n>>>\n>>> > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>\n>>> could be right.   the original idea was to have burns decay over time,\n>>> like ASIC's.\n>>>\n>>> anyway the point was not that \"i had a magic formula\"\n>>>\n>>> the point was that proof of burn is almost always better than proof of\n>>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>>> somewhere waiting to be stolen.\n>>>\n>>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>> >\n>>> > Is this the kind of proof of burn you're talking about?\n>>> >\n>>> > >   if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n>>> >\n>>> > What prevents you from attempting to mine block 553 on both chains?\n>>> >\n>>> > > miners have a very strong, long-term, investment in the stability of the chain.\n>>> >\n>>> > Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n>>> >\n>>> > > you burn them to be used at a future particular block height\n>>> >\n>>> > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>> >\n>>> > > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n>>> >\n>>> > Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n>>> >\n>>> >\n>>> > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>> >>\n>>> >> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>> >> > I'm fuzzy on how proof of burn works.\n>>> >>\n>>> >> when you burn coins, you burn them to be used at a future particular\n>>> >> block height: so if i'm burning for block 553, i can only use them to\n>>> >> mine block 553.   if i have a choice between two chains, one longer\n>>> >> and one shorter, i can only choose one... deterministically, for that\n>>> >> burn: the chain with the height 553.   if we fix the \"lead time\" for\n>>> >> burned coins to be weeks or even months in advance, miners have a very\n>>> >> strong, long-term, investment in the stability of the chain.\n>>> >>\n>>> >> therefore there is no \"nothing at stake\" problem.   it's\n>>> >> deterministic, so miners have no choice.  they can *only* choose the\n>>> >> transactions that go into the block.  they cannot choose which chain\n>>> >> to mine, and it's time-locked, so rollbacks and instability always\n>>> >> hurt miners the most.\n>>> >>\n>>> >> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>>> >> unproven.   i can imagine scenarios where large stakeholders can\n>>> >> collude to punish smaller stakeholders simply to drive them out of\n>>> >> business, for example.   and then you have to put checks in place to\n>>> >> prevent that, and more checks for those prevention system...\n>>> >>\n>>> >> in PoB, there is no complexity.  simpler systems like this are\n>>> >> typically more secure.\n>>> >>\n>>> >> PoB also solves problems caused by \"energy dependence\", which could\n>>> >> lead to state monopolies on mining (like the new Bitcoin Mining\n>>> >> Council).   these consortiums, if state sanctioned, could become a\n>>> >> source of censorship, for example.   Since PoB doesn't require you to\n>>> >> have a live, well-connected node, it's harder to censor & harder to\n>>> >> trace.\n>>> >>\n>>> >> Eliminating this weakness seems to be in the best interests of\n>>> >> existing stakeholders\n>>> >>\n>>> >>\n>>> >>\n>>> >>\n>>> >> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>> >> >\n>>> >> > >  proof of burn clearly solves this, since nothing is held online\n>>> >> >\n>>> >> > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>>> >> >\n>>> >> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>> >> >\n>>> >> > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>>> >> >\n>>> >> > > proof of burn can be more secure than proof-of-stake\n>>> >> >\n>>> >> > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>>> >> >\n>>> >> >\n>>> >> >\n>>> >> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>> >> >>\n>>> >> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>> >> >>\n>>> >> >> proof of burn clearly solves this, since nothing is held online\n>>> >> >>\n>>> >> >> >  how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>> >> >>\n>>> >> >> definition of nothing at stake: in the event of a fork, whether the\n>>> >> >> fork is accidental or a malicious, the optimal strategy for any miner\n>>> >> >> is to mine on every chain, so that the miner gets their reward no\n>>> >> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n>>> >> >> published on the very chains mines, so the incentive is magnified.\n>>> >> >>\n>>> >> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>>> >> >> redaction can result in a loss-of-burn, because burns can be tied,\n>>> >> >> precisely, to block-heights\n>>> >> >>\n>>> >> >> as a result, miners no longer have an incentive to mine all chains\n>>> >> >>\n>>> >> >> in this way proof of burn can be more secure than proof-of-stake, and\n>>> >> >> even more secure than proof of work\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >> >\n>>> >> >>\n>>> >> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>>> >> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >\n>>> >> >> > Hi Billy,\n>>> >> >> >\n>>> >> >> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>>> >> >> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>> >> >> >\n>>> >> >> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>>> >> >> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>>> >> >> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>>> >> >> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>>> >> >> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>>> >> >> > In PoS systems this clean separation of responsibilities does not exist.\n>>> >> >> >\n>>> >> >> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>>> >> >> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>>> >> >> > But the devil is in the detail.\n>>> >> >> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>>> >> >> >\n>>> >> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>>> >> >> >\n>>> >> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>>> >> >> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>>> >> >> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>>> >> >> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>>> >> >> >\n>>> >> >> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>>> >> >> >\n>>> >> >> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>>> >> >> >\n>>> >> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>>> >> >> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>>> >> >> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>>> >> >> >\n>>> >> >> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>>> >> >> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>>> >> >> > It also grows the size of the blockchain significantly.\n>>> >> >> >\n>>> >> >> > ### \"Pure\" proof of stake (Algorand)\n>>> >> >> >\n>>> >> >> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>>> >> >> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>>> >> >> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>>> >> >> > Hopefully you've spotted the problem.\n>>> >> >> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>>> >> >> > Damn it's still Proof-of-SquareSpace!\n>>> >> >> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>>> >> >> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>>> >> >> >\n>>> >> >> > ### Conclusion\n>>> >> >> >\n>>> >> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>> >> >> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>>> >> >> >\n>>> >> >> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>>> >> >> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>>> >> >> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>>> >> >> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>>> >> >> >\n>>> >> >> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>>> >> >> >\n>>> >> >> > Would be interested to know if you or others think differently on these points.\n>>> >> >> >\n>>> >> >> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>> >> >> > [2]: https://staking.staked.us/algorand-staking\n>>> >> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>>> >> >> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>> >> >> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>> >> >> >\n>>> >> >> > Cheers,\n>>> >> >> >\n>>> >> >> > LL\n>>> >> >> >\n>>> >> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >>\n>>> >> >> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>> >> >> >>\n>>> >> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>>> >> >> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>>> >> >> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>>> >> >> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>>> >> >> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>> >> >> >>\n>>> >> >> >> > Proof-of-stake tends towards oligopolistic control\n>>> >> >> >>\n>>> >> >> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>> >> >> >>\n>>> >> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>> >> >> >>\n>>> >> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>> >> >> >>\n>>> >> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>> >> >> >>\n>>> >> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>> >> >> >>\n>>> >> >> >>  > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>> >> >> >>\n>>> >> >> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>> >> >> >>\n>>> >> >> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>> >> >> >>\n>>> >> >> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>> >> >> >>\n>>> >> >> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>> >> >> >>\n>>> >> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>> >> >> >>\n>>> >> >> >>\n>>> >> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >>>\n>>> >> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>> >> >> >>>\n>>> >> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>> >> >> >>>>\n>>> >> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>> >> >> >>>>\n>>> >> >> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>> >> >> >>>>\n>>> >> >> >>>> Cheers,\n>>> >> >> >>>> Mike\n>>> >> >> >>>>\n>>> >> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >>>>>\n>>> >> >> >>>>> 1. i never suggested vdf's to replace pow.\n>>> >> >> >>>>>\n>>> >> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n>>> >> >> >>>>> proof-of-burn protocol\n>>> >> >> >>>>>\n>>> >> >> >>>>> - vdfs used only for timing (not block height)\n>>> >> >> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>>> >> >> >>>>> - the required \"work\" per block would simply be a competition to\n>>> >> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>>> >> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n>>> >> >> >>>>> future\n>>> >> >> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>> >> >> >>>>> value gained from proof of work... without some of the security\n>>> >> >> >>>>> drawbacks\n>>> >> >> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>> >> >> >>>>> losing their work in each block)\n>>> >> >> >>>>> - new burns can't be used\n>>> >> >> >>>>> - old burns age out (like ASICs do)\n>>> >> >> >>>>> - other requirements on burns might be needed to properly mirror the\n>>> >> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>> >> >> >>>>>\n>>> >> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>> >> >> >>>>> might be more secure in the long run, and that if the entire space\n>>> >> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>> >> >> >>>>> up, and a hard-fork could be initiated.\n>>> >> >> >>>>>\n>>> >> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>>> >> >> >>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>> >> >> >>>>> coin\"\n>>> >> >> >>>>>\n>>> >> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > Hi ZmnSCPxj,\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > Zac\n>>> >> >> >>>>> >\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> Good morning Zac,\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>> >> >> >>>>> >> >\n>>> >> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>> >> >> >>>>> >> >\n>>> >> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>> >> >> >>>>> >> >\n>>> >> >> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>> >> >> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> Regards,\n>>> >> >> >>>>> >> ZmnSCPxj\n>>> >> >> >>>>> _______________________________________________\n>>> >> >> >>>>> bitcoin-dev mailing list\n>>> >> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> >> >> >>>>\n>>> >> >> >>>>\n>>> >> >> >>>>\n>>> >> >> >>>> --\n>>> >> >> >>>> Michael Dubrovsky\n>>> >> >> >>>> Founder; PoWx\n>>> >> >> >>>> www.PoWx.org\n>>> >> >> >>>\n>>> >> >> >>>\n>>> >> >> >>>\n>>> >> >> >>> --\n>>> >> >> >>> Michael Dubrovsky\n>>> >> >> >>> Founder; PoWx\n>>> >> >> >>> www.PoWx.org\n>>> >> >> >>> _______________________________________________\n>>> >> >> >>> bitcoin-dev mailing list\n>>> >> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> >> >> >>\n>>> >> >> >> _______________________________________________\n>>> >> >> >> bitcoin-dev mailing list\n>>> >> >> >> bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> >> >> >\n>>> >> >> > _______________________________________________\n>>> >> >> > bitcoin-dev mailing list\n>>> >> >> > bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>>\n>"
            },
            {
                "author": "befreeandopen",
                "date": "2021-05-28T14:40:45",
                "message_text_only": "Erik, I am sorry, I have little knowledge about proof-of-burn, I never found it interesting up until now. Some of your recent claims seem quite strong to me and I'd like to read more.\n\nForgive me if this has been mentioned recently, but is there a full specification of the concept you are referring to? I don't mean just the basic idea description (that much is clear to me), I mean a fully detailed proposal or technical documentation that would give me a precise information about what exactly it is that you are talking about.\n\n\nSent with ProtonMail Secure Email.\n\n\u2010\u2010\u2010\u2010\u2010\u2010\u2010 Original Message \u2010\u2010\u2010\u2010\u2010\u2010\u2010\nOn Wednesday, May 26, 2021 11:07 PM, Erik Aronesty <erik at q32.com> wrote:\n\n> note: the \"nothing at stake\" problem you propose is not broken for\n> proof-of-burn, because the attacker\n>\n> a) has no idea which past transactions are burns\n> b) has no way to use his mining power, even 5%, to maliciously improve\n> his odds of being selected\n>\n> On Wed, May 26, 2021 at 9:12 AM befreeandopen\n> befreeandopen at protonmail.com wrote:\n>\n> > @befreeandopen I guess I misunderstood your selfish minting attack. Let me make sure I understand it. You're saying it would go as follows?:\n> >\n> > 1.  The malicious actor comes across an opportunity to mint the next 3 blocks. But they hold off and don't release their blocks just yet.\n> > 2.  They receive a new block minted by someone else.\n> > 3.  The malicious actor then chooses to release their other 2 blocks on on the second from the top block if it gives them more blocks in the future than minting on the top block. And instead lets the top block proceed if it gives them more blocks in the future (also figuring in the 3 blocks they're missing out on minting).\n> > 4.  Profit!\n> >\n> > The problem with this attack is that any self respecting PoS system wouldn't have the information available for minters to know how blocks will affect their future prospects of minting. Otherwise this would introduce the problem of stake grinding. This can be done using collaborative randomness (where numbers from many parties are combined to create a random number that no individual party could predict). In fact, that's what the Casper protocol does to decide quorums. In a non quorum case, you can do something like record a hash of a number in the block header, and then have a second step to release that number later. Rewards can be given can be used to ensure minters act honestly here by minting messages that release these numbers and not releasing their secret numbers too early.\n> > Yes, you misunderstood it. First, let me say that the above thoughts of yours are incorrect, at least for non-quorum case. Since the transition in the blockchain system from S1 to S2 is only by adding new block, and since stakers always need to be able to decide whether or not they can add the next block, it follows that if a staker creates a new block locally, she can decide whether the new state allows her to add another block on top. As you mentioned, this COULD introduce problem of staking, that you are incorrect in that it is a necessity. Usual prevention of the grinding problem in this case is that an \"old enough\" source of randomness applies for the current block production process. Of course this, as it is typical for PoS, introduces other problems, but let's discard those.\n> > I will try to explain in detail what you misunderstood before. You start with a chain ending with blocks A-B-C, C being the top, the common feature of PoS system (non-quorum), roughly speaking, is that if N is the total amount of coins that participate in the staking process to create a new block on top of C (let's call that D), then a participant having K*N amount of stake has chance K to be the one who will create the next stake. In other words, the power of stakers is supposed to be linear in the system - you own 10 coins gives you 10x the chance of finding block over someone who has 1 coin.\n> > What i was claiming is that using the technique I have described, this linearity is violated. Why? Well, it works for honest stakers among the competition of honest stakers - they really do have the chance of K to find the next block. However, the attacker, using nothing at stake, checks her ability to build block D (at some timestamp). If she is successful, she does not propagate D immediately, but instead she also checks whether she can build on top of B and on top of A. Since with every new timestamp, usually, there is a new chance to build the block, it is not uncommon that she finds she is indeed able to build such block C' on top of B. Here it is likely t(C') > t(C) as the attacker has relatively low stake. Note that in order to produce such C', she not only could have tried the current timestamp t(D), but also all previous timestamps up to t(B) (usually that's the consensus rule, but it may depend on a specific consensus). So her chance to produce such C' is greater than her previous chance of producing C (which chance was limited by other stakers in the system and the discovery of block C by one of them). Now suppose that she found such C' and now she continues by trying to prolong this chain by finding D'. And again here, it is quite likely that her chance to find such D' is greater than was her chance of finding D because again there are likely multiple timestamps she could try. This all was possible just because nothing at stake allows you to just try if you can produce a block in certain state of block chain or not. Now if she actually was able to find D', she discards D and only publishes chain A-B-C'-D', which can not be punished despite the fact that she indeed produced two different forks. She can not be punished because this production was local and only the final result of A-B-C'-D' was published, in which case she gained an extra block over the honest strategy which would only give her block D.\n> > Fun fact tho: there is an attack called the \"selfish mining attack\" for proof of work, and it reduces the security of PoW by at least 1/3rd.\n> > How is that relevant to our discussion? This is known research that has nothing to do with PoS except that it is often worse on PoS.\n> >\n> > > the problem is not as hard as you think\n> >\n> > I don't claim to know just how hard finding the IP address associated with a bitcoin address is. However, the DOS risk can be solved more completely by only allowing the owner of coins themselves to know whether they can mint a block. Eg by determining whether someone can mint a block based on their public key hidden behind hashes (as normal in addresses). Only when someone does in fact mint a block do they reveal their hidden public key in order to prove they are allowed to mint the block.\n> > This is true, but you are mixing quorum and non-quorum systems. My objection here was towards such system where I specifically said that the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system. So in such system, I claimed, the known producer is the only target at any given point of time. This of course does not apply to any other type of system where future producers are not known. No need to dispute, again, something that was not claimed.\n> >\n> > > I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message)\n> >\n> > I'm glad we agree there. Perhaps I misunderstood what you meant by \"you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere.\"\n> > Perhaps you should quote the full sentence and not just a part of it:\n> > \"Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\"\n> > You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n> > In case of the punishment it was meant to be the not solve it completely part.\n> > Also \"typically\" does not imply always.\n> > But this parsing of English sentences for you seems very off topic here. My point is, in context of Bitcoin, reject such unsupported claims that PoS is a reasonable alternative to PoW, let's stick to that.\n> >\n> > > As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake\n> >\n> > Well, if you're in the closed system of the cryptocurrency, sure. But we don't live in that closed system. Minters will earn some ROI from minting just like any other financial activity. Others may find more success spending their time doing things other than figuring out how to mint coins. In that case, they'll be able to earn more coin that they could later decide to use to mint blocks if they decide to.\n> > This only supports the point I was making. Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great.\n> >\n> > > Just because of the above we must reject PoS as being critically insecure\n> >\n> > I think the only thing we can conclude from this is that you have come up with an insecure proof of stake protocol. I don't see how anything you've brought up amounts to substantial evidence that all possible PoS protocols are insecure.\n> > I have not come up with anything. I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure. It is up to you to show that you know how to solve every problem that people throw at you. So far we have just demonstrated that your claim that nothing at stake is solved was unjustified. You have not described a system that would solve it (and not introduce critical DDOS attack vector as it is in quorum based systems - per the prior definition of such systems).\n> > Of course the list of problems of PoS systems do not end with just nothing at stake, but it is good enough example that by itself prevents its adoption in decentralized consensus. No need to go to other hard problems without solving nothing at stake.\n> > On Tue, May 25, 2021 at 11:10 AM befreeandopen befreeandopen at protonmail.com wrote:\n> >\n> > > @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n> > > The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the reasoning here for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n> > > This is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n> > >\n> > > > I am not sure if this is what you call quorum-based PoS\n> > >\n> > > Yes, pre-selected minters is exactly what I mean by that.\n> > >\n> > > > it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n> > >\n> > > Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n> > > I do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n> > > Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n> > > While I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n> > > Consider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n> > > Then if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n> > > So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n> > > It still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n> > > Just because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n> > > On Tue, May 25, 2021 at 3:00 AM Erik Aronesty erik at q32.com wrote:\n> > >\n> > > > > > you burn them to be used at a future particular block height\n> > > >\n> > > > > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n> > > >\n> > > > could be right. the original idea was to have burns decay over time,\n> > > > like ASIC's.\n> > > > anyway the point was not that \"i had a magic formula\"\n> > > > the point was that proof of burn is almost always better than proof of\n> > > > stake - simply because the \"proof\" is on-chain, not sitting on a node\n> > > > somewhere waiting to be stolen.\n> > > > On Mon, May 24, 2021 at 9:53 PM Billy Tetrud billy.tetrud at gmail.com wrote:\n> > > >\n> > > > > Is this the kind of proof of burn you're talking about?\n> > > > >\n> > > > > > if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n> > > > >\n> > > > > What prevents you from attempting to mine block 553 on both chains?\n> > > > >\n> > > > > > miners have a very strong, long-term, investment in the stability of the chain.\n> > > > >\n> > > > > Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n> > > > >\n> > > > > > you burn them to be used at a future particular block height\n> > > > >\n> > > > > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n> > > > >\n> > > > > > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n> > > > >\n> > > > > Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n> > > > > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty erik at q32.com wrote:\n> > > > >\n> > > > > > > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> > > > > > > > I'm fuzzy on how proof of burn works.\n> > > > > >\n> > > > > > when you burn coins, you burn them to be used at a future particular\n> > > > > > block height: so if i'm burning for block 553, i can only use them to\n> > > > > > mine block 553. if i have a choice between two chains, one longer\n> > > > > > and one shorter, i can only choose one... deterministically, for that\n> > > > > > burn: the chain with the height 553. if we fix the \"lead time\" for\n> > > > > > burned coins to be weeks or even months in advance, miners have a very\n> > > > > > strong, long-term, investment in the stability of the chain.\n> > > > > > therefore there is no \"nothing at stake\" problem. it's\n> > > > > > deterministic, so miners have no choice. they can only choose the\n> > > > > > transactions that go into the block. they cannot choose which chain\n> > > > > > to mine, and it's time-locked, so rollbacks and instability always\n> > > > > > hurt miners the most.\n> > > > > > the \"punishment\" systems of PoS are \"weird at best\", certainly\n> > > > > > unproven. i can imagine scenarios where large stakeholders can\n> > > > > > collude to punish smaller stakeholders simply to drive them out of\n> > > > > > business, for example. and then you have to put checks in place to\n> > > > > > prevent that, and more checks for those prevention system...\n> > > > > > in PoB, there is no complexity. simpler systems like this are\n> > > > > > typically more secure.\n> > > > > > PoB also solves problems caused by \"energy dependence\", which could\n> > > > > > lead to state monopolies on mining (like the new Bitcoin Mining\n> > > > > > Council). these consortiums, if state sanctioned, could become a\n> > > > > > source of censorship, for example. Since PoB doesn't require you to\n> > > > > > have a live, well-connected node, it's harder to censor & harder to\n> > > > > > trace.\n> > > > > > Eliminating this weakness seems to be in the best interests of\n> > > > > > existing stakeholders\n> > > > > > On Mon, May 24, 2021 at 4:44 PM Billy Tetrud billy.tetrud at gmail.com wrote:\n> > > > > >\n> > > > > > > > proof of burn clearly solves this, since nothing is held online\n> > > > > > >\n> > > > > > > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n> > > > > > >\n> > > > > > > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> > > > > > >\n> > > > > > > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n> > > > > > >\n> > > > > > > > proof of burn can be more secure than proof-of-stake\n> > > > > > >\n> > > > > > > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n> > > > > > > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty erik at q32.com wrote:\n> > > > > > >\n> > > > > > > > > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n> > > > > > > >\n> > > > > > > > proof of burn clearly solves this, since nothing is held online\n> > > > > > > >\n> > > > > > > > > how does proof of burn solve the \"nothing at stake\" problem in your view?\n> > > > > > > >\n> > > > > > > > definition of nothing at stake: in the event of a fork, whether the\n> > > > > > > > fork is accidental or a malicious, the optimal strategy for any miner\n> > > > > > > > is to mine on every chain, so that the miner gets their reward no\n> > > > > > > > matter which fork wins. indeed in proof-of-stake, the proofs are\n> > > > > > > > published on the very chains mines, so the incentive is magnified.\n> > > > > > > > in proof-of-burn, your burn investment is always \"at stake\", any\n> > > > > > > > redaction can result in a loss-of-burn, because burns can be tied,\n> > > > > > > > precisely, to block-heights\n> > > > > > > > as a result, miners no longer have an incentive to mine all chains\n> > > > > > > > in this way proof of burn can be more secure than proof-of-stake, and\n> > > > > > > > even more secure than proof of work\n> > > > > > > >\n> > > > > > > > >\n> > > > > > > >\n> > > > > > > > On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n> > > > > > > > bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > >\n> > > > > > > > > Hi Billy,\n> > > > > > > > > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n> > > > > > > > > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n> > > > > > > > > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n> > > > > > > > > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n> > > > > > > > > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n> > > > > > > > > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n> > > > > > > > > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n> > > > > > > > > In PoS systems this clean separation of responsibilities does not exist.\n> > > > > > > > > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n> > > > > > > > > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n> > > > > > > > > But the devil is in the detail.\n> > > > > > > > > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n> > > > > > > > >\n> > > > > > > > > ### Proof of SquareSpace (Cardano, Polkdadot)\n> > > > > > > > >\n> > > > > > > > > Cardano is a UTXO based PoS coin based on Ouroboros Praos3 with an inbuilt on-chain delegation system5.\n> > > > > > > > > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n> > > > > > > > > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n> > > > > > > > > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n> > > > > > > > >\n> > > > > > > > > 1.  The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n> > > > > > > > >\n> > > > > > > > > 2.  When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and you never help create a block without seeing it first.\n> > > > > > > > >\n> > > > > > > > > 3.  If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n> > > > > > > > >     I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n> > > > > > > > >     In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n> > > > > > > > >\n> > > > > > > > >\n> > > > > > > > > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n> > > > > > > > > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n> > > > > > > > > It also grows the size of the blockchain significantly.\n> > > > > > > > >\n> > > > > > > > > ### \"Pure\" proof of stake (Algorand)\n> > > > > > > > >\n> > > > > > > > > Algorand's4 approach is to only allow online stake to participate in the protocol.\n> > > > > > > > > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n> > > > > > > > > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"1 that will be used to create blocks on your coin holding key's behalf.\n> > > > > > > > > Hopefully you've spotted the problem.\n> > > > > > > > > You can send your participation keys to any malicious party with a nice website (see random example 2) offering you a good return.\n> > > > > > > > > Damn it's still Proof-of-SquareSpace!\n> > > > > > > > > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n> > > > > > > > > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n> > > > > > > > >\n> > > > > > > > > ### Conclusion\n> > > > > > > > >\n> > > > > > > > > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n> > > > > > > > > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n> > > > > > > > > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n> > > > > > > > > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n> > > > > > > > > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n> > > > > > > > > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n> > > > > > > > > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n> > > > > > > > > Would be interested to know if you or others think differently on these points.\n> > > > > > > > > Cheers,\n> > > > > > > > > LL\n> > > > > > > > > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > >\n> > > > > > > > > > I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) without compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n> > > > > > > > > > @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n> > > > > > > > > >\n> > > > > > > > > > -   The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n> > > > > > > > > > -   The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n> > > > > > > > > > -   The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n> > > > > > > > > > -   Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n> > > > > > > > > >\n> > > > > > > > > > > Proof-of-stake tends towards oligopolistic control\n> > > > > > > > > >\n> > > > > > > > > > People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n> > > > > > > > > >\n> > > > > > > > > > > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n> > > > > > > > > >\n> > > > > > > > > > I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n> > > > > > > > > >\n> > > > > > > > > > > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n> > > > > > > > > >\n> > > > > > > > > > I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n> > > > > > > > > >\n> > > > > > > > > > > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n> > > > > > > > > >\n> > > > > > > > > > Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n> > > > > > > > > >\n> > > > > > > > > > > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n> > > > > > > > > >\n> > > > > > > > > > This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n> > > > > > > > > >\n> > > > > > > > > > > 2.  Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n> > > > > > > > > >\n> > > > > > > > > > Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n> > > > > > > > > > On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > >\n> > > > > > > > > > > Ah sorry, I didn't realize this was, in fact, a different thread! :)\n> > > > > > > > > > > On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky mike at powx.org wrote:\n> > > > > > > > > > >\n> > > > > > > > > > > > Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n> > > > > > > > > > > > Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n> > > > > > > > > > > > Cheers,\n> > > > > > > > > > > > Mike\n> > > > > > > > > > > > On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > > > >\n> > > > > > > > > > > > > 1.  i never suggested vdf's to replace pow.\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > 2.  my suggestion was specifically in the context of a working\n> > > > > > > > > > > > >     proof-of-burn protocol\n> > > > > > > > > > > > >\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > -   vdfs used only for timing (not block height)\n> > > > > > > > > > > > > -   blind-burned coins of a specific age used to replace proof of work\n> > > > > > > > > > > > > -   the required \"work\" per block would simply be a competition to\n> > > > > > > > > > > > >     acquire rewards, and so miners would have to burn coins, well in\n> > > > > > > > > > > > >     advance, and hope that their burned coins got rewarded in some far\n> > > > > > > > > > > > >     future\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > -   the point of burned coins is to mimic, in every meaningful way, the\n> > > > > > > > > > > > >     value gained from proof of work... without some of the security\n> > > > > > > > > > > > >     drawbacks\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > -   the miner risks losing all of his burned coins (like all miners risk\n> > > > > > > > > > > > >     losing their work in each block)\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > -   new burns can't be used\n> > > > > > > > > > > > > -   old burns age out (like ASICs do)\n> > > > > > > > > > > > > -   other requirements on burns might be needed to properly mirror the\n> > > > > > > > > > > > >     properties of PoW and the incentives Bitcoin uses to mine honestly.\n> > > > > > > > > > > > >\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > 3.  i do believe it is possible that a \"burned coin + vdf system\"\n> > > > > > > > > > > > >     might be more secure in the long run, and that if the entire space\n> > > > > > > > > > > > >     agreed that such an endeavor was worthwhile, a test net could be spun\n> > > > > > > > > > > > >     up, and a hard-fork could be initiated.\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > 4.  i would never suggest such a thing unless i believed it was\n> > > > > > > > > > > > >     possible that consensus was possible. so no, this is not an \"alt\n> > > > > > > > > > > > >     coin\"\n> > > > > > > > > > > > >\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > On Tue, May 18, 2021 at 10:02 AM Zac Greenwood zachgrw at gmail.com wrote:\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > > Hi ZmnSCPxj,\n> > > > > > > > > > > > > > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n> > > > > > > > > > > > > > Zac\n> > > > > > > > > > > > > > On Tue, 18 May 2021 at 12:42, ZmnSCPxj ZmnSCPxj at protonmail.com wrote:\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > Good morning Zac,\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > VDFs might enable more constant block times, for instance by having a two-step PoW:\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > 1.  Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > 2.  Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > As a result, variation in block times will be greatly reduced.\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n> > > > > > > > > > > > > > > Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even worse competition and even more energy consumption.\n> > > > > > > > > > > > > > > After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where only you can mine in the entire world.\n> > > > > > > > > > > > > > > Regards,\n> > > > > > > > > > > > > > > ZmnSCPxj\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > > > >\n> > > > > > > > > > > > --\n> > > > > > > > > > > > Michael Dubrovsky\n> > > > > > > > > > > > Founder; PoWx\n> > > > > > > > > > > > www.PoWx.org\n> > > > > > > > > > >\n> > > > > > > > > > > --\n> > > > > > > > > > > Michael Dubrovsky\n> > > > > > > > > > > Founder; PoWx\n> > > > > > > > > > > www.PoWx.org\n> > > > > > > > > > >\n> > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > >\n> > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > >\n> > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-28T20:06:16",
                "message_text_only": "best writeup i know of is here:\n\nhttps://en.bitcoin.it/wiki/Proof_of_burn\n\nno formal proposals or proofs that i know of.\n\nOn Fri, May 28, 2021 at 10:40 AM befreeandopen\n<befreeandopen at protonmail.com> wrote:\n>\n> Erik, I am sorry, I have little knowledge about proof-of-burn, I never found it interesting up until now. Some of your recent claims seem quite strong to me and I'd like to read more.\n>\n> Forgive me if this has been mentioned recently, but is there a full specification of the concept you are referring to? I don't mean just the basic idea description (that much is clear to me), I mean a fully detailed proposal or technical documentation that would give me a precise information about what exactly it is that you are talking about.\n>\n>\n> Sent with ProtonMail Secure Email.\n>\n> \u2010\u2010\u2010\u2010\u2010\u2010\u2010 Original Message \u2010\u2010\u2010\u2010\u2010\u2010\u2010\n> On Wednesday, May 26, 2021 11:07 PM, Erik Aronesty <erik at q32.com> wrote:\n>\n> > note: the \"nothing at stake\" problem you propose is not broken for\n> > proof-of-burn, because the attacker\n> >\n> > a) has no idea which past transactions are burns\n> > b) has no way to use his mining power, even 5%, to maliciously improve\n> > his odds of being selected\n> >\n> > On Wed, May 26, 2021 at 9:12 AM befreeandopen\n> > befreeandopen at protonmail.com wrote:\n> >\n> > > @befreeandopen I guess I misunderstood your selfish minting attack. Let me make sure I understand it. You're saying it would go as follows?:\n> > >\n> > > 1.  The malicious actor comes across an opportunity to mint the next 3 blocks. But they hold off and don't release their blocks just yet.\n> > > 2.  They receive a new block minted by someone else.\n> > > 3.  The malicious actor then chooses to release their other 2 blocks on on the second from the top block if it gives them more blocks in the future than minting on the top block. And instead lets the top block proceed if it gives them more blocks in the future (also figuring in the 3 blocks they're missing out on minting).\n> > > 4.  Profit!\n> > >\n> > > The problem with this attack is that any self respecting PoS system wouldn't have the information available for minters to know how blocks will affect their future prospects of minting. Otherwise this would introduce the problem of stake grinding. This can be done using collaborative randomness (where numbers from many parties are combined to create a random number that no individual party could predict). In fact, that's what the Casper protocol does to decide quorums. In a non quorum case, you can do something like record a hash of a number in the block header, and then have a second step to release that number later. Rewards can be given can be used to ensure minters act honestly here by minting messages that release these numbers and not releasing their secret numbers too early.\n> > > Yes, you misunderstood it. First, let me say that the above thoughts of yours are incorrect, at least for non-quorum case. Since the transition in the blockchain system from S1 to S2 is only by adding new block, and since stakers always need to be able to decide whether or not they can add the next block, it follows that if a staker creates a new block locally, she can decide whether the new state allows her to add another block on top. As you mentioned, this COULD introduce problem of staking, that you are incorrect in that it is a necessity. Usual prevention of the grinding problem in this case is that an \"old enough\" source of randomness applies for the current block production process. Of course this, as it is typical for PoS, introduces other problems, but let's discard those.\n> > > I will try to explain in detail what you misunderstood before. You start with a chain ending with blocks A-B-C, C being the top, the common feature of PoS system (non-quorum), roughly speaking, is that if N is the total amount of coins that participate in the staking process to create a new block on top of C (let's call that D), then a participant having K*N amount of stake has chance K to be the one who will create the next stake. In other words, the power of stakers is supposed to be linear in the system - you own 10 coins gives you 10x the chance of finding block over someone who has 1 coin.\n> > > What i was claiming is that using the technique I have described, this linearity is violated. Why? Well, it works for honest stakers among the competition of honest stakers - they really do have the chance of K to find the next block. However, the attacker, using nothing at stake, checks her ability to build block D (at some timestamp). If she is successful, she does not propagate D immediately, but instead she also checks whether she can build on top of B and on top of A. Since with every new timestamp, usually, there is a new chance to build the block, it is not uncommon that she finds she is indeed able to build such block C' on top of B. Here it is likely t(C') > t(C) as the attacker has relatively low stake. Note that in order to produce such C', she not only could have tried the current timestamp t(D), but also all previous timestamps up to t(B) (usually that's the consensus rule, but it may depend on a specific consensus). So her chance to produce such C' is greater than her previous chance of producing C (which chance was limited by other stakers in the system and the discovery of block C by one of them). Now suppose that she found such C' and now she continues by trying to prolong this chain by finding D'. And again here, it is quite likely that her chance to find such D' is greater than was her chance of finding D because again there are likely multiple timestamps she could try. This all was possible just because nothing at stake allows you to just try if you can produce a block in certain state of block chain or not. Now if she actually was able to find D', she discards D and only publishes chain A-B-C'-D', which can not be punished despite the fact that she indeed produced two different forks. She can not be punished because this production was local and only the final result of A-B-C'-D' was published, in which case she gained an extra block over the honest strategy which would only give her block D.\n> > > Fun fact tho: there is an attack called the \"selfish mining attack\" for proof of work, and it reduces the security of PoW by at least 1/3rd.\n> > > How is that relevant to our discussion? This is known research that has nothing to do with PoS except that it is often worse on PoS.\n> > >\n> > > > the problem is not as hard as you think\n> > >\n> > > I don't claim to know just how hard finding the IP address associated with a bitcoin address is. However, the DOS risk can be solved more completely by only allowing the owner of coins themselves to know whether they can mint a block. Eg by determining whether someone can mint a block based on their public key hidden behind hashes (as normal in addresses). Only when someone does in fact mint a block do they reveal their hidden public key in order to prove they are allowed to mint the block.\n> > > This is true, but you are mixing quorum and non-quorum systems. My objection here was towards such system where I specifically said that the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system. So in such system, I claimed, the known producer is the only target at any given point of time. This of course does not apply to any other type of system where future producers are not known. No need to dispute, again, something that was not claimed.\n> > >\n> > > > I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message)\n> > >\n> > > I'm glad we agree there. Perhaps I misunderstood what you meant by \"you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere.\"\n> > > Perhaps you should quote the full sentence and not just a part of it:\n> > > \"Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\"\n> > > You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n> > > In case of the punishment it was meant to be the not solve it completely part.\n> > > Also \"typically\" does not imply always.\n> > > But this parsing of English sentences for you seems very off topic here. My point is, in context of Bitcoin, reject such unsupported claims that PoS is a reasonable alternative to PoW, let's stick to that.\n> > >\n> > > > As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake\n> > >\n> > > Well, if you're in the closed system of the cryptocurrency, sure. But we don't live in that closed system. Minters will earn some ROI from minting just like any other financial activity. Others may find more success spending their time doing things other than figuring out how to mint coins. In that case, they'll be able to earn more coin that they could later decide to use to mint blocks if they decide to.\n> > > This only supports the point I was making. Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great.\n> > >\n> > > > Just because of the above we must reject PoS as being critically insecure\n> > >\n> > > I think the only thing we can conclude from this is that you have come up with an insecure proof of stake protocol. I don't see how anything you've brought up amounts to substantial evidence that all possible PoS protocols are insecure.\n> > > I have not come up with anything. I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure. It is up to you to show that you know how to solve every problem that people throw at you. So far we have just demonstrated that your claim that nothing at stake is solved was unjustified. You have not described a system that would solve it (and not introduce critical DDOS attack vector as it is in quorum based systems - per the prior definition of such systems).\n> > > Of course the list of problems of PoS systems do not end with just nothing at stake, but it is good enough example that by itself prevents its adoption in decentralized consensus. No need to go to other hard problems without solving nothing at stake.\n> > > On Tue, May 25, 2021 at 11:10 AM befreeandopen befreeandopen at protonmail.com wrote:\n> > >\n> > > > @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n> > > > The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the reasoning here for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n> > > > This is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n> > > >\n> > > > > I am not sure if this is what you call quorum-based PoS\n> > > >\n> > > > Yes, pre-selected minters is exactly what I mean by that.\n> > > >\n> > > > > it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n> > > >\n> > > > Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n> > > > I do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n> > > > Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n> > > > While I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n> > > > Consider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n> > > > Then if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n> > > > So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n> > > > It still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n> > > > Just because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n> > > > On Tue, May 25, 2021 at 3:00 AM Erik Aronesty erik at q32.com wrote:\n> > > >\n> > > > > > > you burn them to be used at a future particular block height\n> > > > >\n> > > > > > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n> > > > >\n> > > > > could be right. the original idea was to have burns decay over time,\n> > > > > like ASIC's.\n> > > > > anyway the point was not that \"i had a magic formula\"\n> > > > > the point was that proof of burn is almost always better than proof of\n> > > > > stake - simply because the \"proof\" is on-chain, not sitting on a node\n> > > > > somewhere waiting to be stolen.\n> > > > > On Mon, May 24, 2021 at 9:53 PM Billy Tetrud billy.tetrud at gmail.com wrote:\n> > > > >\n> > > > > > Is this the kind of proof of burn you're talking about?\n> > > > > >\n> > > > > > > if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n> > > > > >\n> > > > > > What prevents you from attempting to mine block 553 on both chains?\n> > > > > >\n> > > > > > > miners have a very strong, long-term, investment in the stability of the chain.\n> > > > > >\n> > > > > > Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n> > > > > >\n> > > > > > > you burn them to be used at a future particular block height\n> > > > > >\n> > > > > > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n> > > > > >\n> > > > > > > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n> > > > > >\n> > > > > > Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n> > > > > > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty erik at q32.com wrote:\n> > > > > >\n> > > > > > > > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> > > > > > > > > I'm fuzzy on how proof of burn works.\n> > > > > > >\n> > > > > > > when you burn coins, you burn them to be used at a future particular\n> > > > > > > block height: so if i'm burning for block 553, i can only use them to\n> > > > > > > mine block 553. if i have a choice between two chains, one longer\n> > > > > > > and one shorter, i can only choose one... deterministically, for that\n> > > > > > > burn: the chain with the height 553. if we fix the \"lead time\" for\n> > > > > > > burned coins to be weeks or even months in advance, miners have a very\n> > > > > > > strong, long-term, investment in the stability of the chain.\n> > > > > > > therefore there is no \"nothing at stake\" problem. it's\n> > > > > > > deterministic, so miners have no choice. they can only choose the\n> > > > > > > transactions that go into the block. they cannot choose which chain\n> > > > > > > to mine, and it's time-locked, so rollbacks and instability always\n> > > > > > > hurt miners the most.\n> > > > > > > the \"punishment\" systems of PoS are \"weird at best\", certainly\n> > > > > > > unproven. i can imagine scenarios where large stakeholders can\n> > > > > > > collude to punish smaller stakeholders simply to drive them out of\n> > > > > > > business, for example. and then you have to put checks in place to\n> > > > > > > prevent that, and more checks for those prevention system...\n> > > > > > > in PoB, there is no complexity. simpler systems like this are\n> > > > > > > typically more secure.\n> > > > > > > PoB also solves problems caused by \"energy dependence\", which could\n> > > > > > > lead to state monopolies on mining (like the new Bitcoin Mining\n> > > > > > > Council). these consortiums, if state sanctioned, could become a\n> > > > > > > source of censorship, for example. Since PoB doesn't require you to\n> > > > > > > have a live, well-connected node, it's harder to censor & harder to\n> > > > > > > trace.\n> > > > > > > Eliminating this weakness seems to be in the best interests of\n> > > > > > > existing stakeholders\n> > > > > > > On Mon, May 24, 2021 at 4:44 PM Billy Tetrud billy.tetrud at gmail.com wrote:\n> > > > > > >\n> > > > > > > > > proof of burn clearly solves this, since nothing is held online\n> > > > > > > >\n> > > > > > > > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n> > > > > > > >\n> > > > > > > > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n> > > > > > > >\n> > > > > > > > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n> > > > > > > >\n> > > > > > > > > proof of burn can be more secure than proof-of-stake\n> > > > > > > >\n> > > > > > > > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n> > > > > > > > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty erik at q32.com wrote:\n> > > > > > > >\n> > > > > > > > > > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n> > > > > > > > >\n> > > > > > > > > proof of burn clearly solves this, since nothing is held online\n> > > > > > > > >\n> > > > > > > > > > how does proof of burn solve the \"nothing at stake\" problem in your view?\n> > > > > > > > >\n> > > > > > > > > definition of nothing at stake: in the event of a fork, whether the\n> > > > > > > > > fork is accidental or a malicious, the optimal strategy for any miner\n> > > > > > > > > is to mine on every chain, so that the miner gets their reward no\n> > > > > > > > > matter which fork wins. indeed in proof-of-stake, the proofs are\n> > > > > > > > > published on the very chains mines, so the incentive is magnified.\n> > > > > > > > > in proof-of-burn, your burn investment is always \"at stake\", any\n> > > > > > > > > redaction can result in a loss-of-burn, because burns can be tied,\n> > > > > > > > > precisely, to block-heights\n> > > > > > > > > as a result, miners no longer have an incentive to mine all chains\n> > > > > > > > > in this way proof of burn can be more secure than proof-of-stake, and\n> > > > > > > > > even more secure than proof of work\n> > > > > > > > >\n> > > > > > > > > >\n> > > > > > > > >\n> > > > > > > > > On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n> > > > > > > > > bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > >\n> > > > > > > > > > Hi Billy,\n> > > > > > > > > > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n> > > > > > > > > > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n> > > > > > > > > > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n> > > > > > > > > > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n> > > > > > > > > > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n> > > > > > > > > > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n> > > > > > > > > > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n> > > > > > > > > > In PoS systems this clean separation of responsibilities does not exist.\n> > > > > > > > > > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n> > > > > > > > > > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n> > > > > > > > > > But the devil is in the detail.\n> > > > > > > > > > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n> > > > > > > > > >\n> > > > > > > > > > ### Proof of SquareSpace (Cardano, Polkdadot)\n> > > > > > > > > >\n> > > > > > > > > > Cardano is a UTXO based PoS coin based on Ouroboros Praos3 with an inbuilt on-chain delegation system5.\n> > > > > > > > > > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n> > > > > > > > > > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n> > > > > > > > > > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n> > > > > > > > > >\n> > > > > > > > > > 1.  The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n> > > > > > > > > >\n> > > > > > > > > > 2.  When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and you never help create a block without seeing it first.\n> > > > > > > > > >\n> > > > > > > > > > 3.  If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n> > > > > > > > > >     I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n> > > > > > > > > >     In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n> > > > > > > > > >\n> > > > > > > > > >\n> > > > > > > > > > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n> > > > > > > > > > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n> > > > > > > > > > It also grows the size of the blockchain significantly.\n> > > > > > > > > >\n> > > > > > > > > > ### \"Pure\" proof of stake (Algorand)\n> > > > > > > > > >\n> > > > > > > > > > Algorand's4 approach is to only allow online stake to participate in the protocol.\n> > > > > > > > > > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n> > > > > > > > > > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"1 that will be used to create blocks on your coin holding key's behalf.\n> > > > > > > > > > Hopefully you've spotted the problem.\n> > > > > > > > > > You can send your participation keys to any malicious party with a nice website (see random example 2) offering you a good return.\n> > > > > > > > > > Damn it's still Proof-of-SquareSpace!\n> > > > > > > > > > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n> > > > > > > > > > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n> > > > > > > > > >\n> > > > > > > > > > ### Conclusion\n> > > > > > > > > >\n> > > > > > > > > > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n> > > > > > > > > > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n> > > > > > > > > > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n> > > > > > > > > > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n> > > > > > > > > > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n> > > > > > > > > > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n> > > > > > > > > > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n> > > > > > > > > > Would be interested to know if you or others think differently on these points.\n> > > > > > > > > > Cheers,\n> > > > > > > > > > LL\n> > > > > > > > > > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > >\n> > > > > > > > > > > I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) without compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n> > > > > > > > > > > @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n> > > > > > > > > > >\n> > > > > > > > > > > -   The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n> > > > > > > > > > > -   The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n> > > > > > > > > > > -   The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n> > > > > > > > > > > -   Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n> > > > > > > > > > >\n> > > > > > > > > > > > Proof-of-stake tends towards oligopolistic control\n> > > > > > > > > > >\n> > > > > > > > > > > People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n> > > > > > > > > > >\n> > > > > > > > > > > > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n> > > > > > > > > > >\n> > > > > > > > > > > I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n> > > > > > > > > > >\n> > > > > > > > > > > > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n> > > > > > > > > > >\n> > > > > > > > > > > I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n> > > > > > > > > > >\n> > > > > > > > > > > > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n> > > > > > > > > > >\n> > > > > > > > > > > Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n> > > > > > > > > > >\n> > > > > > > > > > > > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n> > > > > > > > > > >\n> > > > > > > > > > > This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n> > > > > > > > > > >\n> > > > > > > > > > > > 2.  Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n> > > > > > > > > > >\n> > > > > > > > > > > Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n> > > > > > > > > > > On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > > >\n> > > > > > > > > > > > Ah sorry, I didn't realize this was, in fact, a different thread! :)\n> > > > > > > > > > > > On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky mike at powx.org wrote:\n> > > > > > > > > > > >\n> > > > > > > > > > > > > Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n> > > > > > > > > > > > > Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n> > > > > > > > > > > > > Cheers,\n> > > > > > > > > > > > > Mike\n> > > > > > > > > > > > > On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > > 1.  i never suggested vdf's to replace pow.\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > 2.  my suggestion was specifically in the context of a working\n> > > > > > > > > > > > > >     proof-of-burn protocol\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > -   vdfs used only for timing (not block height)\n> > > > > > > > > > > > > > -   blind-burned coins of a specific age used to replace proof of work\n> > > > > > > > > > > > > > -   the required \"work\" per block would simply be a competition to\n> > > > > > > > > > > > > >     acquire rewards, and so miners would have to burn coins, well in\n> > > > > > > > > > > > > >     advance, and hope that their burned coins got rewarded in some far\n> > > > > > > > > > > > > >     future\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > -   the point of burned coins is to mimic, in every meaningful way, the\n> > > > > > > > > > > > > >     value gained from proof of work... without some of the security\n> > > > > > > > > > > > > >     drawbacks\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > -   the miner risks losing all of his burned coins (like all miners risk\n> > > > > > > > > > > > > >     losing their work in each block)\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > -   new burns can't be used\n> > > > > > > > > > > > > > -   old burns age out (like ASICs do)\n> > > > > > > > > > > > > > -   other requirements on burns might be needed to properly mirror the\n> > > > > > > > > > > > > >     properties of PoW and the incentives Bitcoin uses to mine honestly.\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > 3.  i do believe it is possible that a \"burned coin + vdf system\"\n> > > > > > > > > > > > > >     might be more secure in the long run, and that if the entire space\n> > > > > > > > > > > > > >     agreed that such an endeavor was worthwhile, a test net could be spun\n> > > > > > > > > > > > > >     up, and a hard-fork could be initiated.\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > 4.  i would never suggest such a thing unless i believed it was\n> > > > > > > > > > > > > >     possible that consensus was possible. so no, this is not an \"alt\n> > > > > > > > > > > > > >     coin\"\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > On Tue, May 18, 2021 at 10:02 AM Zac Greenwood zachgrw at gmail.com wrote:\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > Hi ZmnSCPxj,\n> > > > > > > > > > > > > > > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n> > > > > > > > > > > > > > > Zac\n> > > > > > > > > > > > > > > On Tue, 18 May 2021 at 12:42, ZmnSCPxj ZmnSCPxj at protonmail.com wrote:\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > Good morning Zac,\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > VDFs might enable more constant block times, for instance by having a two-step PoW:\n> > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > 1.  Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n> > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > 2.  Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n> > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > As a result, variation in block times will be greatly reduced.\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n> > > > > > > > > > > > > > > > Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even worse competition and even more energy consumption.\n> > > > > > > > > > > > > > > > After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where only you can mine in the entire world.\n> > > > > > > > > > > > > > > > Regards,\n> > > > > > > > > > > > > > > > ZmnSCPxj\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > --\n> > > > > > > > > > > > > Michael Dubrovsky\n> > > > > > > > > > > > > Founder; PoWx\n> > > > > > > > > > > > > www.PoWx.org\n> > > > > > > > > > > >\n> > > > > > > > > > > > --\n> > > > > > > > > > > > Michael Dubrovsky\n> > > > > > > > > > > > Founder; PoWx\n> > > > > > > > > > > > www.PoWx.org\n> > > > > > > > > > > >\n> > > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > > >\n> > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > >\n> > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-28T21:40:19",
                "message_text_only": "@befreeandopen   \"If you want to make some arbitrary very narrow\ndefinitions of what nothing at stake is so that you can claim your false\nstatement that it is a solved problem\"\n\nWow, you are really unnecessarily hostile. This isn't r/bitcoin my friend.\nPlease assume some good faith. I simply pointed out my misunderstanding.\nBut it sounds like you're not willing to explain yourself clearly nor\nactually have a reasoned discussion and prefer to insult me. So I think our\nconversation is indeed over.\n\nOn Fri, May 28, 2021 at 10:06 AM Erik Aronesty <erik at q32.com> wrote:\n\n> best writeup i know of is here:\n>\n> https://en.bitcoin.it/wiki/Proof_of_burn\n>\n> no formal proposals or proofs that i know of.\n>\n> On Fri, May 28, 2021 at 10:40 AM befreeandopen\n> <befreeandopen at protonmail.com> wrote:\n> >\n> > Erik, I am sorry, I have little knowledge about proof-of-burn, I never\n> found it interesting up until now. Some of your recent claims seem quite\n> strong to me and I'd like to read more.\n> >\n> > Forgive me if this has been mentioned recently, but is there a full\n> specification of the concept you are referring to? I don't mean just the\n> basic idea description (that much is clear to me), I mean a fully detailed\n> proposal or technical documentation that would give me a precise\n> information about what exactly it is that you are talking about.\n> >\n> >\n> > Sent with ProtonMail Secure Email.\n> >\n> > \u2010\u2010\u2010\u2010\u2010\u2010\u2010 Original Message \u2010\u2010\u2010\u2010\u2010\u2010\u2010\n> > On Wednesday, May 26, 2021 11:07 PM, Erik Aronesty <erik at q32.com> wrote:\n> >\n> > > note: the \"nothing at stake\" problem you propose is not broken for\n> > > proof-of-burn, because the attacker\n> > >\n> > > a) has no idea which past transactions are burns\n> > > b) has no way to use his mining power, even 5%, to maliciously improve\n> > > his odds of being selected\n> > >\n> > > On Wed, May 26, 2021 at 9:12 AM befreeandopen\n> > > befreeandopen at protonmail.com wrote:\n> > >\n> > > > @befreeandopen I guess I misunderstood your selfish minting attack.\n> Let me make sure I understand it. You're saying it would go as follows?:\n> > > >\n> > > > 1.  The malicious actor comes across an opportunity to mint the next\n> 3 blocks. But they hold off and don't release their blocks just yet.\n> > > > 2.  They receive a new block minted by someone else.\n> > > > 3.  The malicious actor then chooses to release their other 2 blocks\n> on on the second from the top block if it gives them more blocks in the\n> future than minting on the top block. And instead lets the top block\n> proceed if it gives them more blocks in the future (also figuring in the 3\n> blocks they're missing out on minting).\n> > > > 4.  Profit!\n> > > >\n> > > > The problem with this attack is that any self respecting PoS system\n> wouldn't have the information available for minters to know how blocks will\n> affect their future prospects of minting. Otherwise this would introduce\n> the problem of stake grinding. This can be done using collaborative\n> randomness (where numbers from many parties are combined to create a random\n> number that no individual party could predict). In fact, that's what the\n> Casper protocol does to decide quorums. In a non quorum case, you can do\n> something like record a hash of a number in the block header, and then have\n> a second step to release that number later. Rewards can be given can be\n> used to ensure minters act honestly here by minting messages that release\n> these numbers and not releasing their secret numbers too early.\n> > > > Yes, you misunderstood it. First, let me say that the above thoughts\n> of yours are incorrect, at least for non-quorum case. Since the transition\n> in the blockchain system from S1 to S2 is only by adding new block, and\n> since stakers always need to be able to decide whether or not they can add\n> the next block, it follows that if a staker creates a new block locally,\n> she can decide whether the new state allows her to add another block on\n> top. As you mentioned, this COULD introduce problem of staking, that you\n> are incorrect in that it is a necessity. Usual prevention of the grinding\n> problem in this case is that an \"old enough\" source of randomness applies\n> for the current block production process. Of course this, as it is typical\n> for PoS, introduces other problems, but let's discard those.\n> > > > I will try to explain in detail what you misunderstood before. You\n> start with a chain ending with blocks A-B-C, C being the top, the common\n> feature of PoS system (non-quorum), roughly speaking, is that if N is the\n> total amount of coins that participate in the staking process to create a\n> new block on top of C (let's call that D), then a participant having K*N\n> amount of stake has chance K to be the one who will create the next stake.\n> In other words, the power of stakers is supposed to be linear in the system\n> - you own 10 coins gives you 10x the chance of finding block over someone\n> who has 1 coin.\n> > > > What i was claiming is that using the technique I have described,\n> this linearity is violated. Why? Well, it works for honest stakers among\n> the competition of honest stakers - they really do have the chance of K to\n> find the next block. However, the attacker, using nothing at stake, checks\n> her ability to build block D (at some timestamp). If she is successful, she\n> does not propagate D immediately, but instead she also checks whether she\n> can build on top of B and on top of A. Since with every new timestamp,\n> usually, there is a new chance to build the block, it is not uncommon that\n> she finds she is indeed able to build such block C' on top of B. Here it is\n> likely t(C') > t(C) as the attacker has relatively low stake. Note that in\n> order to produce such C', she not only could have tried the current\n> timestamp t(D), but also all previous timestamps up to t(B) (usually that's\n> the consensus rule, but it may depend on a specific consensus). So her\n> chance to produce such C' is greater than her previous chance of producing\n> C (which chance was limited by other stakers in the system and the\n> discovery of block C by one of them). Now suppose that she found such C'\n> and now she continues by trying to prolong this chain by finding D'. And\n> again here, it is quite likely that her chance to find such D' is greater\n> than was her chance of finding D because again there are likely multiple\n> timestamps she could try. This all was possible just because nothing at\n> stake allows you to just try if you can produce a block in certain state of\n> block chain or not. Now if she actually was able to find D', she discards D\n> and only publishes chain A-B-C'-D', which can not be punished despite the\n> fact that she indeed produced two different forks. She can not be punished\n> because this production was local and only the final result of A-B-C'-D'\n> was published, in which case she gained an extra block over the honest\n> strategy which would only give her block D.\n> > > > Fun fact tho: there is an attack called the \"selfish mining attack\"\n> for proof of work, and it reduces the security of PoW by at least 1/3rd.\n> > > > How is that relevant to our discussion? This is known research that\n> has nothing to do with PoS except that it is often worse on PoS.\n> > > >\n> > > > > the problem is not as hard as you think\n> > > >\n> > > > I don't claim to know just how hard finding the IP address\n> associated with a bitcoin address is. However, the DOS risk can be solved\n> more completely by only allowing the owner of coins themselves to know\n> whether they can mint a block. Eg by determining whether someone can mint a\n> block based on their public key hidden behind hashes (as normal in\n> addresses). Only when someone does in fact mint a block do they reveal\n> their hidden public key in order to prove they are allowed to mint the\n> block.\n> > > > This is true, but you are mixing quorum and non-quorum systems. My\n> objection here was towards such system where I specifically said that the\n> list of producers for next epoch is known up front and you confirmed that\n> this is what you meant with \"quorum\" system. So in such system, I claimed,\n> the known producer is the only target at any given point of time. This of\n> course does not apply to any other type of system where future producers\n> are not known. No need to dispute, again, something that was not claimed.\n> > > >\n> > > > > I agree that introduction of punishment itself does not imply\n> introducing a problem elsewhere (which I did not claim if you reread my\n> previous message)\n> > > >\n> > > > I'm glad we agree there. Perhaps I misunderstood what you meant by\n> \"you should not omit to mention that by doing so, typically, you have\n> introduced another problem elsewhere.\"\n> > > > Perhaps you should quote the full sentence and not just a part of it:\n> > > > \"Of course you can always change the rules in a way that a certain\n> specific attack is not doable, but you should not omit to mention that by\n> doing so, typically, you have introduced another problem elsewhere, or you\n> have not solved it completely.\"\n> > > > You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT\n> COMPLETELY)\n> > > > In case of the punishment it was meant to be the not solve it\n> completely part.\n> > > > Also \"typically\" does not imply always.\n> > > > But this parsing of English sentences for you seems very off topic\n> here. My point is, in context of Bitcoin, reject such unsupported claims\n> that PoS is a reasonable alternative to PoW, let's stick to that.\n> > > >\n> > > > > As long as the staker makes sure (which is not that hard) that she\n> does not miss a chance to create a block, her significance in the system\n> will always increase in time. It will increase relative to all normal users\n> who do not stake\n> > > >\n> > > > Well, if you're in the closed system of the cryptocurrency, sure.\n> But we don't live in that closed system. Minters will earn some ROI from\n> minting just like any other financial activity. Others may find more\n> success spending their time doing things other than figuring out how to\n> mint coins. In that case, they'll be able to earn more coin that they could\n> later decide to use to mint blocks if they decide to.\n> > > > This only supports the point I was making. Since the optimal\n> scenario with all existing coins participating is just theoretical, the\n> attacker's position will ever so improve. It seems we are in agreement\n> here, great.\n> > > >\n> > > > > Just because of the above we must reject PoS as being critically\n> insecure\n> > > >\n> > > > I think the only thing we can conclude from this is that you have\n> come up with an insecure proof of stake protocol. I don't see how anything\n> you've brought up amounts to substantial evidence that all possible PoS\n> protocols are insecure.\n> > > > I have not come up with anything. I'm afraid you've not realized the\n> burden of proof is on your side if you vouch for a design that is not\n> believed and trusted to be secure. It is up to you to show that you know\n> how to solve every problem that people throw at you. So far we have just\n> demonstrated that your claim that nothing at stake is solved was\n> unjustified. You have not described a system that would solve it (and not\n> introduce critical DDOS attack vector as it is in quorum based systems -\n> per the prior definition of such systems).\n> > > > Of course the list of problems of PoS systems do not end with just\n> nothing at stake, but it is good enough example that by itself prevents its\n> adoption in decentralized consensus. No need to go to other hard problems\n> without solving nothing at stake.\n> > > > On Tue, May 25, 2021 at 11:10 AM befreeandopen\n> befreeandopen at protonmail.com wrote:\n> > > >\n> > > > > @befreeandopen \" An attacker can calculate whether or not she can\n> prolong this chain or not and if so with what timestamp.\"\n> > > > > The scenario you describe would only be likely to happen at all if\n> the malicious actor has a very large fraction of the stake - probably quite\n> close to 50%. At that point, you're talking about a 51% attack, not the\n> nothing at stake problem. The nothing at stake problem is the problem where\n> anyone will mint on any chain. Its clear that if there's a substantial\n> punishment for minting on chains other than the one that eventually wins,\n> every minter without a significant fraction of the stake will be honest and\n> not attempt to mint on old blocks or support someone else's attempt to mint\n> on old blocks (until and if it becomes the heaviest chain). Because the\n> attacker would need probably >45% of the active stake (take a look at the\n> reasoning here for a deeper analysis of that statement), I don't agree that\n> punishment is not a sufficient mitigation of the nothing at stake problem.\n> To exploit the nothing at stake problem, you basically need to 51% attack,\n> at which point you've exceeded the operating conditions of the system, so\n> of course its gonna have problems, just like a 51% attack would cause with\n> PoW.\n> > > > > This is not at all the case. The attacker benefits using the\n> described technique at any size of the stake and significantly so with just\n> 5% of the stake. By significantly, I do not mean that the attacker is able\n> to completely take control the network (in short term), but rather that the\n> attacker has significant advantage in the number of blocks she creates\n> compared to what she \"should be able to create\". This means the attacker's\n> stake increases significantly faster than of the honest nodes, which in\n> long term is very serious in PoS system. If you believe close to 50% is\n> needed for that, you need to redo your math. So no, you are wrong stating\n> that \"to exploit nothing at stake problem you basically need to 51%\n> attack\". It is rather the opposite - eventually, nothing at stake attack\n> leads to ability to perform 51% attack.\n> > > > >\n> > > > > > I am not sure if this is what you call quorum-based PoS\n> > > > >\n> > > > > Yes, pre-selected minters is exactly what I mean by that.\n> > > > >\n> > > > > > it allows the attacker to know who to attack at which point with\n> powerful DDOS in order to hurt liveness of such system\n> > > > >\n> > > > > Just like in bitcoin, associating keys with IP addresses isn't\n> generally an easy thing to do on the fly like that. If you know someone's\n> IP address, you can target them. But if you only know their address or\n> public key, the reverse isn't as easy. With a quorum-based PoS system, you\n> can see their public key and address, but finding out their IP to DOS would\n> be a huge challenge I think.\n> > > > > I do not dispute that the problem is not trivial, but the problem\n> is not as hard as you think. The network graph analysis is a known\n> technique and it is not trivial, but not very hard either. Introducing a\n> large number of nodes to the system to achieve very good success rate of\n> analysis of area of origin of blocks is doable and has been done in past.\n> So again, I very much disagree with your conclusion that this is somehow\n> secure. It is absolutely insecure.\n> > > > > Note, tho, that quorum-based PoS generally also have punishments\n> as part of the protocol. The introduction of punishments do indeed handily\n> solve the nothing at stake problem. And you didn't mention a single problem\n> that the punishments introduce that weren't already there before\n> punishments. There are tradeoffs with introducing punishments (eg in some\n> cases you might punish honest actors), but they are minor in comparison to\n> solving the nothing at stake problem.\n> > > > > While I agree that introduction of punishment itself does not\n> imply introducing a problem elsewhere (which I did not claim if you reread\n> my previous message), it does introduce additional complexity which may\n> introduce problem, but more importantly, while it slightly improves\n> resistance against the nothing at stake attack, it solves absolutely\n> nothing. Your claim is based on wrong claim of needed close to 50% stake,\n> but that could not be farther from the truth. It is not true even in\n> optimal conditions when all participants of the network stake or delegate\n> their stake. These optimal conditions rarely, if ever, occur. And that's\n> another thing that we have not mention in our debate, so please allow me to\n> introduce another problem to PoS.\n> > > > > Consider what is needed for such optimal conditions to occur - all\n> coins are always part of the stake, which means that they need to somehow\n> automatically part of the staking process even when they are moved. But in\n> many PoS systems you usually require some age (in terms of confirmations)\n> of the coin before you allow it to be used for participation in staking\n> process and that is for a good reason - to prevent various grinding\n> attacks. In some systems the coin must be specifically registered before it\n> can be staked, in others, simply waiting for enough confirmations enables\n> you to stake with the coin. I am not sure if there is a system which does\n> not have this cooling period for a coin that has been moved. Maybe it is\n> possible though, but AFAIK it is not common and not battle tested feature.\n> > > > > Then if we admit that achieving the optimal condition is rather\n> theoretical. Then if we do not have the optimal condition, it means that a\n> staker with K% of the total available supply increases it's percentage over\n> time to some amounts >K%. As long as the staker makes sure (which is not\n> that hard) that she does not miss a chance to create a block, her\n> significance in the system will always increase in time. It will increase\n> relative to all normal users who do not stake (if there are any) and\n> relative to all other stakers who make mistakes or who are not wealthy\n> enough to afford not selling any position ever. But powerful attacker is\n> exactly in such position and thus she will gain significance in such a\n> system. The technique I have described, and that you mistakenly think is\n> viable only with huge amounts of stake, only puts the attacker to even\n> greater advantage. But even without the described attack (which exploits\n> nothing at stake), the PoS system converges to a system more and more\n> controlled by powerful entity, which we can assume is the attacker.\n> > > > > So I don't think it is at all misleading to claim that \"nothing at\n> stake\" is a solved problem. I do in fact mean that the solutions to that\n> problem don't introduce any other problems with anywhere near the same\n> level of significance.\n> > > > > It still stands as truly misleading claim. I disagree that\n> introducing DDOS opportunity with medium level of difficulty for the\n> attacker to implement it, in case of \"quorum-based PoS\" is not a problem\n> anywhere near the same level of significance. Such an attack vector allows\n> you to turn off the network if you spend some time and money. That is\n> hardly acceptable.\n> > > > > Just because of the above we must reject PoS as being critically\n> insecure until someone invents and demonstrates an actual way of solving\n> these issues.\n> > > > > On Tue, May 25, 2021 at 3:00 AM Erik Aronesty erik at q32.com wrote:\n> > > > >\n> > > > > > > > you burn them to be used at a future particular block height\n> > > > > >\n> > > > > > > This sounds exploitable. It seems like an attacker could\n> simply focus all their burns on a particular set of 6 blocks to double\n> spend, minimizing their cost of attack.\n> > > > > >\n> > > > > > could be right. the original idea was to have burns decay over\n> time,\n> > > > > > like ASIC's.\n> > > > > > anyway the point was not that \"i had a magic formula\"\n> > > > > > the point was that proof of burn is almost always better than\n> proof of\n> > > > > > stake - simply because the \"proof\" is on-chain, not sitting on a\n> node\n> > > > > > somewhere waiting to be stolen.\n> > > > > > On Mon, May 24, 2021 at 9:53 PM Billy Tetrud\n> billy.tetrud at gmail.com wrote:\n> > > > > >\n> > > > > > > Is this the kind of proof of burn you're talking about?\n> > > > > > >\n> > > > > > > > if i have a choice between two chains, one longer and one\n> shorter, i can only choose one... deterministically\n> > > > > > >\n> > > > > > > What prevents you from attempting to mine block 553 on both\n> chains?\n> > > > > > >\n> > > > > > > > miners have a very strong, long-term, investment in the\n> stability of the chain.\n> > > > > > >\n> > > > > > > Yes, but the same can be said of any coin, even ones that do\n> have the nothing at stake problem. This isn't sufficient tho because the\n> chain is a common good, and the tragedy of the commons holds for it.\n> > > > > > >\n> > > > > > > > you burn them to be used at a future particular block height\n> > > > > > >\n> > > > > > > This sounds exploitable. It seems like an attacker could\n> simply focus all their burns on a particular set of 6 blocks to double\n> spend, minimizing their cost of attack.\n> > > > > > >\n> > > > > > > > i can imagine scenarios where large stakeholders can collude\n> to punish smaller stakeholders simply to drive them out of business, for\n> example\n> > > > > > >\n> > > > > > > Are you talking about a 51% attack? This is possible in any\n> decentralized cryptocurrency.\n> > > > > > > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty erik at q32.com\n> wrote:\n> > > > > > >\n> > > > > > > > > > your burn investment is always \"at stake\", any redaction\n> can result in a loss-of-burn, because burns can be tied, precisely, to\n> block-heights\n> > > > > > > > > > I'm fuzzy on how proof of burn works.\n> > > > > > > >\n> > > > > > > > when you burn coins, you burn them to be used at a future\n> particular\n> > > > > > > > block height: so if i'm burning for block 553, i can only\n> use them to\n> > > > > > > > mine block 553. if i have a choice between two chains, one\n> longer\n> > > > > > > > and one shorter, i can only choose one... deterministically,\n> for that\n> > > > > > > > burn: the chain with the height 553. if we fix the \"lead\n> time\" for\n> > > > > > > > burned coins to be weeks or even months in advance, miners\n> have a very\n> > > > > > > > strong, long-term, investment in the stability of the chain.\n> > > > > > > > therefore there is no \"nothing at stake\" problem. it's\n> > > > > > > > deterministic, so miners have no choice. they can only\n> choose the\n> > > > > > > > transactions that go into the block. they cannot choose\n> which chain\n> > > > > > > > to mine, and it's time-locked, so rollbacks and instability\n> always\n> > > > > > > > hurt miners the most.\n> > > > > > > > the \"punishment\" systems of PoS are \"weird at best\",\n> certainly\n> > > > > > > > unproven. i can imagine scenarios where large stakeholders\n> can\n> > > > > > > > collude to punish smaller stakeholders simply to drive them\n> out of\n> > > > > > > > business, for example. and then you have to put checks in\n> place to\n> > > > > > > > prevent that, and more checks for those prevention system...\n> > > > > > > > in PoB, there is no complexity. simpler systems like this are\n> > > > > > > > typically more secure.\n> > > > > > > > PoB also solves problems caused by \"energy dependence\",\n> which could\n> > > > > > > > lead to state monopolies on mining (like the new Bitcoin\n> Mining\n> > > > > > > > Council). these consortiums, if state sanctioned, could\n> become a\n> > > > > > > > source of censorship, for example. Since PoB doesn't require\n> you to\n> > > > > > > > have a live, well-connected node, it's harder to censor &\n> harder to\n> > > > > > > > trace.\n> > > > > > > > Eliminating this weakness seems to be in the best interests\n> of\n> > > > > > > > existing stakeholders\n> > > > > > > > On Mon, May 24, 2021 at 4:44 PM Billy Tetrud\n> billy.tetrud at gmail.com wrote:\n> > > > > > > >\n> > > > > > > > > > proof of burn clearly solves this, since nothing is held\n> online\n> > > > > > > > >\n> > > > > > > > > Well.. the coins to be burned need to be online when\n> they're burned. But yes, only a small fraction of the total coins need to\n> be online.\n> > > > > > > > >\n> > > > > > > > > > your burn investment is always \"at stake\", any redaction\n> can result in a loss-of-burn, because burns can be tied, precisely, to\n> block-heights\n> > > > > > > > >\n> > > > > > > > > So you're saying that if say someone tries to mine a block\n> on a shorter chain, that requires them to send a transaction burning their\n> coins, and that transaction could also be spent on the longest chain, which\n> means their coins are burned even if the chain they tried to mine on\n> doesn't win? I'm fuzzy on how proof of burn works.\n> > > > > > > > >\n> > > > > > > > > > proof of burn can be more secure than proof-of-stake\n> > > > > > > > >\n> > > > > > > > > FYI, proof of stake can be done without the \"nothing at\n> stake\" problem. You can simply punish people who mint on shorter chains (by\n> rewarding people who publish proofs of this happening on the main chain).\n> In quorum-based PoS, you can punish people in the quorum that propose or\n> sign multiple blocks for the same height. The \"nothing at stake\" problem is\n> a solved problem at this point for PoS.\n> > > > > > > > > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty erik at q32.com\n> wrote:\n> > > > > > > > >\n> > > > > > > > > > > I don't see a way to get around the conflicting\n> requirement that the keys for large amounts of coins should be kept offline\n> but those are exactly the coins we need online to make the scheme secure.\n> > > > > > > > > >\n> > > > > > > > > > proof of burn clearly solves this, since nothing is held\n> online\n> > > > > > > > > >\n> > > > > > > > > > > how does proof of burn solve the \"nothing at stake\"\n> problem in your view?\n> > > > > > > > > >\n> > > > > > > > > > definition of nothing at stake: in the event of a fork,\n> whether the\n> > > > > > > > > > fork is accidental or a malicious, the optimal strategy\n> for any miner\n> > > > > > > > > > is to mine on every chain, so that the miner gets their\n> reward no\n> > > > > > > > > > matter which fork wins. indeed in proof-of-stake, the\n> proofs are\n> > > > > > > > > > published on the very chains mines, so the incentive is\n> magnified.\n> > > > > > > > > > in proof-of-burn, your burn investment is always \"at\n> stake\", any\n> > > > > > > > > > redaction can result in a loss-of-burn, because burns\n> can be tied,\n> > > > > > > > > > precisely, to block-heights\n> > > > > > > > > > as a result, miners no longer have an incentive to mine\n> all chains\n> > > > > > > > > > in this way proof of burn can be more secure than\n> proof-of-stake, and\n> > > > > > > > > > even more secure than proof of work\n> > > > > > > > > >\n> > > > > > > > > > >\n> > > > > > > > > >\n> > > > > > > > > > On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via\n> bitcoin-dev\n> > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > >\n> > > > > > > > > > > Hi Billy,\n> > > > > > > > > > > I was going to write a post which started by\n> dismissing many of the weak arguments that are made against PoS made in\n> this thread and elsewhere.\n> > > > > > > > > > > Although I don't agree with all your points you have\n> done a decent job here so I'll focus on the second part: why I think\n> Proof-of-Stake is inappropriate for a Bitcoin-like system.\n> > > > > > > > > > > Proof of stake is not fit for purpose for a global\n> settlement layer in a pure digital asset (i.e. \"digital gold\") which is\n> what Bitcoin is trying to be.\n> > > > > > > > > > > PoS necessarily gives responsibilities to the holders\n> of coins that they do not want and cannot handle.\n> > > > > > > > > > > In Bitcoin, large unsophisticated coin holders can put\n> their coins in cold storage without a second thought given to the health of\n> the underlying ledger.\n> > > > > > > > > > > As much as hardcore Bitcoiners try to convince them to\n> run their own node, most don't, and that's perfectly acceptable.\n> > > > > > > > > > > At no point do their personal decisions affect the\n> underlying consensus -- it only affects their personal security assurance\n> (not that of the system itself).\n> > > > > > > > > > > In PoS systems this clean separation of\n> responsibilities does not exist.\n> > > > > > > > > > > I think that the more rigorously studied PoS protocols\n> will work fine within the security claims made in their papers.\n> > > > > > > > > > > People who believe that these protocols are destined\n> for catastrophic consensus failure are certainly in for a surprise.\n> > > > > > > > > > > But the devil is in the detail.\n> > > > > > > > > > > Let's look at what the implications of using the\n> leading proof of stake protocols would have on Bitcoin:\n> > > > > > > > > > >\n> > > > > > > > > > > ### Proof of SquareSpace (Cardano, Polkdadot)\n> > > > > > > > > > >\n> > > > > > > > > > > Cardano is a UTXO based PoS coin based on Ouroboros\n> Praos3 with an inbuilt on-chain delegation system5.\n> > > > > > > > > > > In these protocols, coin holders who do not want to\n> run their node with their hot keys in it delegate it to a \"Stake Pool\".\n> > > > > > > > > > > I call the resulting system Proof-of-SquareSpace since\n> most will choose a pool by looking around for one with a nice website and\n> offering the largest share of the block reward.\n> > > > > > > > > > > On the surface this might sound no different than\n> someone with an mining rig shopping around for a good mining pool but there\n> are crucial differences:\n> > > > > > > > > > >\n> > > > > > > > > > > 1.  The person making the decision is forced into it\n> just because they own the currency -- someone with a mining rig has\n> purchased it with the intent to make profit by participating in consensus.\n> > > > > > > > > > >\n> > > > > > > > > > > 2.  When you join a mining pool your systems are very\n> much still online. You are just partaking in a pool to reduce your profit\n> variance. You still see every block that you help create and you never help\n> create a block without seeing it first.\n> > > > > > > > > > >\n> > > > > > > > > > > 3.  If by SquareSpace sybil attack you gain a\n> dishonest majority and start censoring transactions how are the users meant\n> to redelegate their stake to honest pools?\n> > > > > > > > > > >     I guess they can just send a transaction\n> delegating to another pool...oh wait I guess that might be censored too!\n> This seems really really bad.\n> > > > > > > > > > >     In Bitcoin, miners can just join a different pool\n> at a whim. There is nothing the attacker can do to stop them. A temporary\n> dishonest majority heals relatively well.\n> > > > > > > > > > >\n> > > > > > > > > > >\n> > > > > > > > > > > There is another severe disadvantage to this on-chain\n> delegation system: every UTXO must indicate which staking account this UTXO\n> belongs to so the appropriate share of block rewards can be transferred\n> there.\n> > > > > > > > > > > Being able to associate every UTXO to an account ruins\n> one of the main privacy advantages of the UTXO model.\n> > > > > > > > > > > It also grows the size of the blockchain significantly.\n> > > > > > > > > > >\n> > > > > > > > > > > ### \"Pure\" proof of stake (Algorand)\n> > > > > > > > > > >\n> > > > > > > > > > > Algorand's4 approach is to only allow online stake to\n> participate in the protocol.\n> > > > > > > > > > > Theoretically, This means that keys holding funds have\n> to be online in order for them to author blocks when they are chosen.\n> > > > > > > > > > > Of course in reality no one wants to keep their coin\n> holding keys online so in Alogorand you can authorize a set of\n> \"participation keys\"1 that will be used to create blocks on your coin\n> holding key's behalf.\n> > > > > > > > > > > Hopefully you've spotted the problem.\n> > > > > > > > > > > You can send your participation keys to any malicious\n> party with a nice website (see random example 2) offering you a good return.\n> > > > > > > > > > > Damn it's still Proof-of-SquareSpace!\n> > > > > > > > > > > The minor advantage is that at least the participation\n> keys expire after a certain amount of time so eventually the SquareSpace\n> attacker will lose their hold on consensus.\n> > > > > > > > > > > Importantly there is also less junk on the blockchain\n> because the participation keys are delegated off-chain and so are not\n> making as much of a mess.\n> > > > > > > > > > >\n> > > > > > > > > > > ### Conclusion\n> > > > > > > > > > >\n> > > > > > > > > > > I don't see a way to get around the conflicting\n> requirement that the keys for large amounts of coins should be kept offline\n> but those are exactly the coins we need online to make the scheme secure.\n> > > > > > > > > > > If we allow delegation then we open up a new social\n> attack surface and it degenerates to Proof-of-SquareSpace.\n> > > > > > > > > > > For a \"digital gold\" like system like Bitcoin we\n> optimize for simplicity and desperately want to avoid extraneous\n> responsibilities for the holder of the coin.\n> > > > > > > > > > > After all, gold is an inert element on the periodic\n> table that doesn't confer responsibilities on the holder to maintain the\n> quality of all the other bars of gold out there.\n> > > > > > > > > > > Bitcoin feels like this too and in many ways is more\n> inert and beautifully boring than gold.\n> > > > > > > > > > > For Bitcoin to succeed I think we need to keep it that\n> way and Proof-of-Stake makes everything a bit too exciting.\n> > > > > > > > > > > I suppose in the end the market will decide what is\n> real digital gold and whether these bad technical trade offs are worth\n> being able to say it uses less electricity. It goes without saying that\n> making bad technical decisions to appease the current political climate is\n> an anathema to Bitcoin.\n> > > > > > > > > > > Would be interested to know if you or others think\n> differently on these points.\n> > > > > > > > > > > Cheers,\n> > > > > > > > > > > LL\n> > > > > > > > > > > On Fri, 21 May 2021 at 19:21, Billy Tetrud via\n> bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > > >\n> > > > > > > > > > > > I think there is a lot of misinformation and bias\n> against Proof of Stake. Yes there have been lots of shady coins that use\n> insecure PoS mechanisms. Yes there have been massive issues with\n> distribution of PoS coins (of course there have also been massive issues\n> with PoW coins as well). However, I want to remind everyone that there is a\n> difference between \"proved to be impossible\" and \"have not achieved\n> recognized success yet\". Most of the arguments levied against PoS are out\n> of date or rely on unproven assumptions or extrapolation from the analysis\n> of a particular PoS system. I certainly don't think we should experiment\n> with bitcoin by switching to PoS, but from my research, it seems very\n> likely that there is a proof of stake consensus protocol we could build\n> that has substantially higher security (cost / capital required to execute\n> an attack) while at the same time costing far less resources (which do\n> translate to fees on the network) without compromising any of the critical\n> security properties bitcoin relies on. I think the critical piece of this\n> is the disagreements around hardcoded checkpoints, which is a critical\n> piece solving attacks that could be levied on a PoS chain, and how that\n> does (or doesn't) affect the security model.\n> > > > > > > > > > > > @Eric Your proof of stake fallacy seems to be saying\n> that PoS is worse when a 51% attack happens. While I agree, I think that\n> line of thinking omits important facts:\n> > > > > > > > > > > >\n> > > > > > > > > > > > -   The capital required to 51% attack a PoS chain\n> can be made substantially greater than on a PoS chain.\n> > > > > > > > > > > > -   The capital the attacker stands to lose can be\n> substantially greater as well if the attack is successful.\n> > > > > > > > > > > > -   The effectiveness of paying miners to raise the\n> honest fraction of miners above 50% may be quite bad.\n> > > > > > > > > > > > -   Allowing a 51% attack is already unacceptable.\n> It should be considered whether what happens in the case of a 51% may not\n> be significantly different. The currency would likely be critically damaged\n> in a 51% attack regardless of consensus mechanism.\n> > > > > > > > > > > >\n> > > > > > > > > > > > > Proof-of-stake tends towards oligopolistic control\n> > > > > > > > > > > >\n> > > > > > > > > > > > People repeat this often, but the facts support\n> this. There is no centralization pressure in any proof of stake mechanism\n> that I'm aware of. IE if you have 10 times as much coin that you use to\n> mint blocks, you should expect to earn 10x as much minting revenue - not\n> more than 10x. By contrast, proof of work does in fact have clear\n> centralization pressure - this is not disputed. Our goal in relation to\n> that is to ensure that the centralization pressure remains insignifiant.\n> Proof of work also clearly has a lot more barriers to entry than any proof\n> of stake system does. Both of these mean the tendency towards oligopolistic\n> control is worse for PoW.\n> > > > > > > > > > > >\n> > > > > > > > > > > > > Energy usage, in-and-of-itself, is nothing to be\n> ashamed of!!\n> > > > > > > > > > > >\n> > > > > > > > > > > > I certainly agree. Bitcoin's energy usage at the\n> moment is I think quite warranted. However, the question is: can we do\n> substantially better. I think if we can, we probably should... eventually.\n> > > > > > > > > > > >\n> > > > > > > > > > > > > Proof of Stake is only resilient to \u2153 of the\n> network demonstrating a Byzantine Fault, whilst Proof of Work is resilient\n> up to the \u00bd threshold\n> > > > > > > > > > > >\n> > > > > > > > > > > > I see no mention of this in the pos.pdf you linked\n> to. I'm not aware of any proof that all PoS systems have a failure\n> threshold of 1/3. I know that staking systems like Casper do in fact have\n> that 1/3 requirement. However there are PoS designs that should exceed that\n> up to nearly 50% as far as I'm aware. Proof of work is not in fact\n> resilient up to the 1/2 threshold in the way you would think. IE, if 100%\n> of miners are currently honest and have a collective 100 exahashes/s\n> hashpower, an attacker does not need to obtain 100 exahashes/s, but\n> actually only needs to accumulate 50 exahashes/s. This is because as the\n> attacker accumulates hashpower, it drives honest miners out of the market\n> as the difficulty increases to beyond what is economically sustainable.\n> Also, its been shown that the best proof of work can do is require an\n> attacker to obtain 33% of the hashpower because of the selfish mining\n> attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243.\n> Together, both of these things reduce PoW's security by a factor of about\n> 83% (1 - 50%*33%).\n> > > > > > > > > > > >\n> > > > > > > > > > > > > Proof of Stake requires other trade-offs which are\n> incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014\n> specifically the famous \"security vs. liveness\" guarantee\n> > > > > > > > > > > >\n> > > > > > > > > > > > Do you have a good source that talks about why you\n> think proof of stake cannot be used for a trustless digital cash?\n> > > > > > > > > > > >\n> > > > > > > > > > > > > You cannot gain tokens without someone choosing to\n> give up those coins - a form of permission.\n> > > > > > > > > > > >\n> > > > > > > > > > > > This is not a practical constraint. Just like in\n> mining, some nodes may reject you, but there will likely be more that will\n> accept you, some sellers may reject you, but most would accept your money\n> as payment for bitcoins. I don't think requiring the \"permission\" of one of\n> millions of people in the market can be reasonably considered a\n> \"permissioned currency\".\n> > > > > > > > > > > >\n> > > > > > > > > > > > > 2.  Proof of stake must have a trusted means of\n> timestamping to regulate overproduction of blocks\n> > > > > > > > > > > >\n> > > > > > > > > > > > Both PoW and PoS could mine/mint blocks twice as\n> fast if everyone agreed to double their clock speeds. Both systems rely on\n> an honest majority sticking to standard time.\n> > > > > > > > > > > > On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky\n> via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > > > >\n> > > > > > > > > > > > > Ah sorry, I didn't realize this was, in fact, a\n> different thread! :)\n> > > > > > > > > > > > > On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky\n> mike at powx.org wrote:\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > > Folks, I suggest we keep the discussion to PoW,\n> oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess\n> there are other threads going on these topics already where they would be\n> relevant.\n> > > > > > > > > > > > > > Also, it's important to distinguish between oPoW\n> and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work\n> that doesn't alter the core game theory or security assumptions of Hashcash\n> and actually contains SHA (can be SHA3, SHA256, etc hash is\n> interchangeable).\n> > > > > > > > > > > > > > Cheers,\n> > > > > > > > > > > > > > Mike\n> > > > > > > > > > > > > > On Tue, May 18, 2021 at 4:55 PM Erik Aronesty\n> via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > 1.  i never suggested vdf's to replace pow.\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > 2.  my suggestion was specifically in the\n> context of a working\n> > > > > > > > > > > > > > >     proof-of-burn protocol\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > -   vdfs used only for timing (not block\n> height)\n> > > > > > > > > > > > > > > -   blind-burned coins of a specific age used\n> to replace proof of work\n> > > > > > > > > > > > > > > -   the required \"work\" per block would simply\n> be a competition to\n> > > > > > > > > > > > > > >     acquire rewards, and so miners would have\n> to burn coins, well in\n> > > > > > > > > > > > > > >     advance, and hope that their burned coins\n> got rewarded in some far\n> > > > > > > > > > > > > > >     future\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > -   the point of burned coins is to mimic, in\n> every meaningful way, the\n> > > > > > > > > > > > > > >     value gained from proof of work... without\n> some of the security\n> > > > > > > > > > > > > > >     drawbacks\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > -   the miner risks losing all of his burned\n> coins (like all miners risk\n> > > > > > > > > > > > > > >     losing their work in each block)\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > -   new burns can't be used\n> > > > > > > > > > > > > > > -   old burns age out (like ASICs do)\n> > > > > > > > > > > > > > > -   other requirements on burns might be\n> needed to properly mirror the\n> > > > > > > > > > > > > > >     properties of PoW and the incentives\n> Bitcoin uses to mine honestly.\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > 3.  i do believe it is possible that a \"burned\n> coin + vdf system\"\n> > > > > > > > > > > > > > >     might be more secure in the long run, and\n> that if the entire space\n> > > > > > > > > > > > > > >     agreed that such an endeavor was\n> worthwhile, a test net could be spun\n> > > > > > > > > > > > > > >     up, and a hard-fork could be initiated.\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > 4.  i would never suggest such a thing unless\n> i believed it was\n> > > > > > > > > > > > > > >     possible that consensus was possible. so\n> no, this is not an \"alt\n> > > > > > > > > > > > > > >     coin\"\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > On Tue, May 18, 2021 at 10:02 AM Zac Greenwood\n> zachgrw at gmail.com wrote:\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > Hi ZmnSCPxj,\n> > > > > > > > > > > > > > > > Please note that I am not suggesting VDFs as\n> a means to save energy, but solely as a means to make the time between\n> blocks more constant.\n> > > > > > > > > > > > > > > > Zac\n> > > > > > > > > > > > > > > > On Tue, 18 May 2021 at 12:42, ZmnSCPxj\n> ZmnSCPxj at protonmail.com wrote:\n> > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > Good morning Zac,\n> > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > > VDFs might enable more constant block\n> times, for instance by having a two-step PoW:\n> > > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > > 1.  Use a VDF that takes say 9 minutes\n> to resolve (VDF being subject to difficulty adjustments similar to the\n> as-is). As per the property of VDFs, miners are able show proof of work.\n> > > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > > 2.  Use current PoW mechanism with lower\n> difficulty so finding a block takes 1 minute on average, again subject to\n> as-is difficulty adjustments.\n> > > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > > As a result, variation in block times\n> will be greatly reduced.\n> > > > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > > > As I understand it, another weakness of\n> VDFs is that they are not inherently progress-free (their sequential nature\n> prevents that; they are inherently progress-requiring).\n> > > > > > > > > > > > > > > > > Thus, a miner which focuses on improving\n> the amount of energy that it can pump into the VDF circuitry (by\n> overclocking and freezing the circuitry), could potentially get into a\n> winner-takes-all situation, possibly leading to even worse competition and\n> even more energy consumption.\n> > > > > > > > > > > > > > > > > After all, if you can start mining 0.1s\n> faster than the competition, that is a 0.1s advantage where only you can\n> mine in the entire world.\n> > > > > > > > > > > > > > > > > Regards,\n> > > > > > > > > > > > > > > > > ZmnSCPxj\n> > > > > > > > > > > > > > >\n> > > > > > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > > > > >\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > > > > > >\n> > > > > > > > > > > > > > --\n> > > > > > > > > > > > > > Michael Dubrovsky\n> > > > > > > > > > > > > > Founder; PoWx\n> > > > > > > > > > > > > > www.PoWx.org\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > --\n> > > > > > > > > > > > > Michael Dubrovsky\n> > > > > > > > > > > > > Founder; PoWx\n> > > > > > > > > > > > > www.PoWx.org\n> > > > > > > > > > > > >\n> > > > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > > >\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > > > >\n> > > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > > >\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> > > > > > > > > > >\n> > > > > > > > > > > bitcoin-dev mailing list\n> > > > > > > > > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > > > > > > > >\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> >\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210528/2af536ce/attachment-0001.html>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-27T10:08:57",
                "message_text_only": ">  using nothing at stake\n\nI see from the way you're using this term now that you mean something\ncompletely different by it than I usually understand the phrase. You seem\nto mean it as that minters can check whether they can mint a block without\nany cost. By contrast, I generally understand the phrase to mean the\nproblem where there is no cost to broadcasting blocks on many different\nchains.\n\n> she gained an extra block over the honest strategy which would only give\nher block D\n\nI think I see what you're saying now. It actually sounds quite similar to\nthe selfish mining attack in proof of work. However I do acknowledge that\nthe ability to secretly mint on both your secret chain(s) and the public\nchain makes it worse in PoS. How much worse is something that should be\nquantified. This is also a solvable problem. Designing a secure system can\nbe kind of like whack a mole. You fix the weakest link in the chain, and\nthere is inevitably now a new weakest link that is stronger than the link\nyou fixed. Bitcoin is no different, as development continues, more security\nimprovements are implemented.\n\nIn this case, there's a number of possible solutions, some of which can be\ncombined. Eg you can program all honest clients to mint selfishly. You'd\nlikely need to lengthen the number of blocks that constitute a finalized\ntransaction, but you can probably reduce the block time to compensate, so\nfinalization doesn't actually take longer. You could also require many\nadditional signatures on each block from outside validators.\n\n> How is that relevant to our discussion?\n\nIt is relevant because the benefits of proof of stake must be compared to\nan alternative, and the alternative of reference here is clearly PoW. I'm\npointing out that the vulnerability you're describing in the type of PoS\nyou're talking about also exists in what its being compared against. To\nknow whether PoS or PoW is better on this particular aspect, you need to\ncompare the levels of advantage that can be obtained in each, and how this\naffects the cost of attacking the system. Its not as straight forward as\nsaying \"PoS is bad because it has this vulnerability\" when the system you\ncompare it to also has a very similar vulnerability. You need to quantify\nthe difference at that point.\n\n> the list of producers for next epoch is known up front and you confirmed\nthat this is what you meant with \"quorum\" system\n\nKnown by public key, not by IP address.\n\n> (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n\nI agree that claiming that Y is a solved problem would be misleading if the\nsolution creates problems that are of greater significance than the\noriginal problem. I would also agree that if the solution creates\nsignificant problems that are substantially less significant than the\nproblem it solves, it would be misleading to say its a \"solved problem\" -\nsaying \"partially solved\" would be more accurate there.\n\nHowever, I do not agree that it is at all misleading to say \"nothing at\nstake is a solved problem\" just because solving that specific problem\ndoesn't solve all the problems with proof of stake. Its unreasonable to\nexpect that when someone claims problem X is solved, that it also implies\nall problems related to X are solved.\n\nI maintain that nothing at stake is a solved problem. There are solutions\nthat do not create other problems of anywhere near the same level of\nsignificance.\n\n> Since the optimal scenario with all existing coins participating is just\ntheoretical, the attacker's position will ever so improve. It seems we are\nin agreement here, great\n\nI don't believe we're in agreement there. I don't know how what you said\nrefutes my point.\n\n> I'm afraid you've not realized the burden of proof is on your side if you\nvouch for a design that is not believed and trusted to be secure.\n\nYou were the one that claimed proof of stake cannot be made secure. The\nburden of proof is on you to support your own claims.\n\n> You have not described a system that would solve it\n\nI would be curious to hear a full critique from you about this protocol\n<https://github.com/fresheneesz/ValidatedProofOfStake>.\n\nOn Wed, May 26, 2021 at 3:12 AM befreeandopen <befreeandopen at protonmail.com>\nwrote:\n\n>\n>\n> @befreeandopen I guess I misunderstood your selfish minting attack. Let me\n> make sure I understand it. You're saying it would go as follows?:\n>\n> 1. The malicious actor comes across an opportunity to mint the next 3\n> blocks. But they hold off and don't release their blocks just yet.\n> 2. They receive a new block minted by someone else.\n> 3. The malicious actor then chooses to release their other 2 blocks on on\n> the second from the top block if it gives them more blocks in the future\n> than minting on the top block. And instead lets the top block proceed if it\n> gives them more blocks in the future (also figuring in the 3 blocks they're\n> missing out on minting).\n> 4. Profit!\n>\n> The problem with this attack is that any self respecting PoS system\n> wouldn't have the information available for minters to know how blocks will\n> affect their future prospects of minting. Otherwise this would introduce\n> the problem of stake grinding. This can be done using collaborative\n> randomness (where numbers from many parties are combined to create a random\n> number that no individual party could predict). In fact, that's what the\n> Casper protocol does to decide quorums. In a non quorum case, you can do\n> something like record a hash of a number in the block header, and then have\n> a second step to release that number later. Rewards can be given can be\n> used to ensure minters act honestly here by minting messages that release\n> these numbers and not releasing their secret numbers too early.\n>\n>\n> Yes, you misunderstood it. First, let me say that the above thoughts of\n> yours are incorrect, at least for non-quorum case. Since the transition in\n> the blockchain system from S1 to S2 is only by adding new block, and since\n> stakers always need to be able to decide whether or not they can add the\n> next block, it follows that if a staker creates a new block locally, she\n> can decide whether the new state allows her to add another block on top. As\n> you mentioned, this COULD introduce problem of staking, that you are\n> incorrect in that it is a necessity. Usual prevention of the grinding\n> problem in this case is that an \"old enough\" source of randomness applies\n> for the current block production process. Of course this, as it is typical\n> for PoS, introduces other problems, but let's discard those.\n>\n> I will try to explain in detail what you misunderstood before. You start\n> with a chain ending with blocks A-B-C, C being the top, the common feature\n> of PoS system (non-quorum), roughly speaking, is that if N is the total\n> amount of coins that participate in the staking process to create a new\n> block on top of C (let's call that D), then a participant having K*N amount\n> of stake has chance K to be the one who will create the next stake. In\n> other words, the power of stakers is supposed to be linear in the system -\n> you own 10 coins gives you 10x the chance of finding block over someone who\n> has 1 coin.\n>\n> What i was claiming is that using the technique I have described, this\n> linearity is violated. Why? Well, it works for honest stakers among the\n> competition of honest stakers - they really do have the chance of K to find\n> the next block. However, the attacker, using nothing at stake, checks her\n> ability to build block D (at some timestamp). If she is successful, she\n> does not propagate D immediately, but instead she also checks whether she\n> can build on top of B and on top of A. Since with every new timestamp,\n> usually, there is a new chance to build the block, it is not uncommon that\n> she finds she is indeed able to build such block C' on top of B. Here it is\n> likely t(C') > t(C) as the attacker has relatively low stake. Note that in\n> order to produce such C', she not only could have tried the current\n> timestamp t(D), but also all previous timestamps up to t(B) (usually that's\n> the consensus rule, but it may depend on a specific consensus). So her\n> chance to produce such C' is greater than her previous chance of producing\n> C (which chance was limited by other stakers in the system and the\n> discovery of block C by one of them). Now suppose that she found such C'\n> and now she continues by trying to prolong this chain by finding D'. And\n> again here, it is quite likely that her chance to find such D' is greater\n> than was her chance of finding D because again there are likely multiple\n> timestamps she could try. This all was possible just because nothing at\n> stake allows you to just try if you can produce a block in certain state of\n> block chain or not. Now if she actually was able to find D', she discards D\n> and only publishes chain A-B-C'-D', which can not be punished despite the\n> fact that she indeed produced two different forks. She can not be punished\n> because this production was local and only the final result of A-B-C'-D'\n> was published, in which case she gained an extra block over the honest\n> strategy which would only give her block D.\n>\n>\n>\n> Fun fact tho: there is an attack called the \"selfish mining attack\" for\n> proof of work, and it reduces the security of PoW by at least 1/3rd\n> <https://bitcoinmagazine.com/technical/selfish-mining-a-25-attack-against-the-bitcoin-network-1383578440>\n> .\n>\n>\n> How is that relevant to our discussion? This is known research that has\n> nothing to do with PoS except that it is often worse on PoS.\n>\n>\n>\n> >   the problem is not as hard as you think\n>\n> I don't claim to know just how hard finding the IP address associated with\n> a bitcoin address is. However, the DOS risk can be solved more completely\n> by only allowing the owner of coins themselves to know whether they can\n> mint a block. Eg by determining whether someone can mint a block based on\n> their public key hidden behind hashes (as normal in addresses). Only when\n> someone does in fact mint a block do they reveal their hidden public key in\n> order to prove they are allowed to mint the block.\n>\n>\n> This is true, but you are mixing quorum and non-quorum systems. My\n> objection here was towards such system where I specifically said that the\n> list of producers for next epoch is known up front and you confirmed that\n> this is what you meant with \"quorum\" system. So in such system, I claimed,\n> the known producer is the only target at any given point of time. This of\n> course does not apply to any other type of system where future producers\n> are not known. No need to dispute, again, something that was not claimed.\n>\n>\n>\n>\n> > I agree that introduction of punishment itself does not imply\n> introducing a problem elsewhere (which I did not claim if you reread my\n> previous message)\n>\n> I'm glad we agree there. Perhaps I misunderstood what you meant by \"you\n> should not omit to mention that by doing so, typically, you have introduced\n> another problem elsewhere.\"\n>\n>\n> Perhaps you should quote the full sentence and not just a part of it:\n>\n> \"Of course you can always change the rules in a way that a certain\n> specific attack is not doable, but you should not omit to mention that by\n> doing so, typically, you have introduced another problem elsewhere, or you\n> have not solved it completely.\"\n>\n> You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT\n> COMPLETELY)\n> In case of the punishment it was meant to be the not solve it completely\n> part.\n> Also \"typically\" does not imply always.\n> But this parsing of English sentences for you seems very off topic here.\n> My point is, in context of Bitcoin, reject such unsupported claims that PoS\n> is a reasonable alternative to PoW, let's stick to that.\n>\n>\n>\n> > As long as the staker makes sure (which is not that hard) that she does\n> not miss a chance to create a block, her significance in the system will\n> always increase in time. It will increase relative to all normal users who\n> do not stake\n>\n> Well, if you're in the closed system of the cryptocurrency, sure. But we\n> don't live in that closed system. Minters will earn some ROI from minting\n> just like any other financial activity. Others may find more success\n> spending their time doing things other than figuring out how to mint coins.\n> In that case, they'll be able to earn more coin that they could later\n> decide to use to mint blocks if they decide to.\n>\n>\n> This only supports the point I was making. Since the optimal scenario with\n> all existing coins participating is just theoretical, the attacker's\n> position will ever so improve. It seems we are in agreement here, great.\n>\n>\n>\n>\n> > Just because of the above we must reject PoS as being critically\n> insecure\n>\n> I think the only thing we can conclude from this is that you have come up\n> with an insecure proof of stake protocol. I don't see how anything you've\n> brought up amounts to substantial evidence that all possible PoS protocols\n> are insecure.\n>\n>\n> I have not come up with anything. I'm afraid you've not realized the\n> burden of proof is on your side if you vouch for a design that is not\n> believed and trusted to be secure. It is up to you to show that you know\n> how to solve every problem that people throw at you. So far we have just\n> demonstrated that your claim that nothing at stake is solved was\n> unjustified. You have not described a system that would solve it (and not\n> introduce critical DDOS attack vector as it is in quorum based systems -\n> per the prior definition of such systems).\n>\n> Of course the list of problems of PoS systems do not end with just nothing\n> at stake, but it is good enough example that by itself prevents its\n> adoption in decentralized consensus. No need to go to other hard problems\n> without solving nothing at stake.\n>\n>\n>\n>\n>\n> On Tue, May 25, 2021 at 11:10 AM befreeandopen <\n> befreeandopen at protonmail.com> wrote:\n>\n>>\n>> @befreeandopen \" An attacker can calculate whether or not she can prolong\n>> this chain or not and if so with what timestamp.\"\n>>\n>> The scenario you describe would only be likely to happen at all if the\n>> malicious actor has a very large fraction of the stake - probably quite\n>> close to 50%. At that point, you're talking about a 51% attack, not the\n>> nothing at stake problem. The nothing at stake problem is the problem where\n>> anyone will mint on any chain. Its clear that if there's a substantial\n>> punishment for minting on chains other than the one that eventually wins,\n>> every minter without a significant fraction of the stake will be honest and\n>> not attempt to mint on old blocks or support someone else's attempt to mint\n>> on old blocks (until and if it becomes the heaviest chain). Because the\n>> attacker would need probably >45% of the active stake (take a look at the reasoning\n>> here\n>> <https://github.com/fresheneesz/ValidatedProofOfStake#security-the-minimum-cost-of-attack>\n>> for a deeper analysis of that statement), I don't agree that punishment is\n>> not a sufficient mitigation of the nothing at stake problem. To exploit the\n>> nothing at stake problem, you basically need to 51% attack, at which point\n>> you've exceeded the operating conditions of the system, so of course its\n>> gonna have problems, just like a 51% attack would cause with PoW.\n>>\n>>\n>> This is not at all the case. The attacker benefits using the described\n>> technique at any size of the stake and significantly so with just 5% of the\n>> stake. By significantly, I do not mean that the attacker is able to\n>> completely take control the network (in short term), but rather that the\n>> attacker has significant advantage in the number of blocks she creates\n>> compared to what she \"should be able to create\". This means the attacker's\n>> stake increases significantly faster than of the honest nodes, which in\n>> long term is very serious in PoS system. If you believe close to 50% is\n>> needed for that, you need to redo your math. So no, you are wrong stating\n>> that \"to exploit nothing at stake problem you basically need to 51%\n>> attack\". It is rather the opposite - eventually, nothing at stake attack\n>> leads to ability to perform 51% attack.\n>>\n>>\n>>\n>> > I am not sure if this is what you call quorum-based PoS\n>>\n>> Yes, pre-selected minters is exactly what I mean by that.\n>>\n>> > it allows the attacker to know who to attack at which point with\n>> powerful DDOS in order to hurt liveness of such system\n>>\n>> Just like in bitcoin, associating keys with IP addresses isn't generally\n>> an easy thing to do on the fly like that. If you know someone's IP address,\n>> you can target them. But if you only know their address or public key, the\n>> reverse isn't as easy. With a quorum-based PoS system, you can see their\n>> public key and address, but finding out their IP to DOS would be a huge\n>> challenge I think.\n>>\n>>\n>> I do not dispute that the problem is not trivial, but the problem is not\n>> as hard as you think. The network graph analysis is a known technique and\n>> it is not trivial, but not very hard either. Introducing a large number of\n>> nodes to the system to achieve very good success rate of analysis of area\n>> of origin of blocks is doable and has been done in past. So again, I very\n>> much disagree with your conclusion that this is somehow secure. It is\n>> absolutely insecure.\n>>\n>>\n>>\n>> Note, tho, that quorum-based PoS generally also have punishments as part\n>> of the protocol. The introduction of punishments do indeed handily solve\n>> the nothing at stake problem. And you didn't mention a single problem that\n>> the punishments introduce that weren't already there before punishments.\n>> There are tradeoffs with introducing punishments (eg in some cases you\n>> might punish honest actors), but they are minor in comparison to solving\n>> the nothing at stake problem.\n>>\n>>\n>> While I agree that introduction of punishment itself does not imply\n>> introducing a problem elsewhere (which I did not claim if you reread my\n>> previous message), it does introduce additional complexity which may\n>> introduce problem, but more importantly, while it slightly improves\n>> resistance against the nothing at stake attack, it solves absolutely\n>> nothing. Your claim is based on wrong claim of needed close to 50% stake,\n>> but that could not be farther from the truth. It is not true even in\n>> optimal conditions when all participants of the network stake or delegate\n>> their stake. These optimal conditions rarely, if ever, occur. And that's\n>> another thing that we have not mention in our debate, so please allow me to\n>> introduce another problem to PoS.\n>>\n>> Consider what is needed for such optimal conditions to occur - all coins\n>> are always part of the stake, which means that they need to somehow\n>> automatically part of the staking process even when they are moved. But in\n>> many PoS systems you usually require some age (in terms of confirmations)\n>> of the coin before you allow it to be used for participation in staking\n>> process and that is for a good reason - to prevent various grinding\n>> attacks. In some systems the coin must be specifically registered before it\n>> can be staked, in others, simply waiting for enough confirmations enables\n>> you to stake with the coin. I am not sure if there is a system which does\n>> not have this cooling period for a coin that has been moved. Maybe it is\n>> possible though, but AFAIK it is not common and not battle tested feature.\n>>\n>> Then if we admit that achieving the optimal condition is rather\n>> theoretical. Then if we do not have the optimal condition, it means that a\n>> staker with K% of the total available supply increases it's percentage over\n>> time to some amounts >K%. As long as the staker makes sure (which is not\n>> that hard) that she does not miss a chance to create a block, her\n>> significance in the system will always increase in time. It will increase\n>> relative to all normal users who do not stake (if there are any) and\n>> relative to all other stakers who make mistakes or who are not wealthy\n>> enough to afford not selling any position ever. But powerful attacker is\n>> exactly in such position and thus she will gain significance in such a\n>> system. The technique I have described, and that you mistakenly think is\n>> viable only with huge amounts of stake, only puts the attacker to even\n>> greater advantage. But even without the described attack (which exploits\n>> nothing at stake), the PoS system converges to a system more and more\n>> controlled by powerful entity, which we can assume is the attacker.\n>>\n>>\n>> So I don't think it is at all misleading to claim that \"nothing at stake\"\n>> is a solved problem. I do in fact mean that the solutions to that problem\n>> don't introduce any other problems with anywhere near the same level of\n>> significance.\n>>\n>>\n>> It still stands as truly misleading claim. I disagree that introducing\n>> DDOS opportunity with medium level of difficulty for the attacker to\n>> implement it, in case of \"quorum-based PoS\" is not a problem anywhere near\n>> the same level of significance. Such an attack vector allows you to turn\n>> off the network if you spend some time and money. That is hardly acceptable.\n>>\n>> Just because of the above we must reject PoS as being critically insecure\n>> until someone invents and demonstrates an actual way of solving these\n>> issues.\n>>\n>>\n>>\n>> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>>\n>>> > > you burn them to be used at a future particular block height\n>>>\n>>> > This sounds exploitable. It seems like an attacker could simply focus\n>>> all their burns on a particular set of 6 blocks to double spend, minimizing\n>>> their cost of attack.\n>>>\n>>> could be right.   the original idea was to have burns decay over time,\n>>> like ASIC's.\n>>>\n>>> anyway the point was not that \"i had a magic formula\"\n>>>\n>>> the point was that proof of burn is almost always better than proof of\n>>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>>> somewhere waiting to be stolen.\n>>>\n>>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com>\n>>> wrote:\n>>> >\n>>> > Is this the kind of proof of burn you're talking about?\n>>> >\n>>> > >   if i have a choice between two chains, one longer and one shorter,\n>>> i can only choose one... deterministically\n>>> >\n>>> > What prevents you from attempting to mine block 553 on both chains?\n>>> >\n>>> > > miners have a very strong, long-term, investment in the stability of\n>>> the chain.\n>>> >\n>>> > Yes, but the same can be said of any coin, even ones that do have the\n>>> nothing at stake problem. This isn't sufficient tho because the chain is a\n>>> common good, and the tragedy of the commons holds for it.\n>>> >\n>>> > > you burn them to be used at a future particular block height\n>>> >\n>>> > This sounds exploitable. It seems like an attacker could simply focus\n>>> all their burns on a particular set of 6 blocks to double spend, minimizing\n>>> their cost of attack.\n>>> >\n>>> > > i can imagine scenarios where large stakeholders can collude to\n>>> punish smaller stakeholders simply to drive them out of business, for\n>>> example\n>>> >\n>>> > Are you talking about a 51% attack? This is possible in any\n>>> decentralized cryptocurrency.\n>>> >\n>>> >\n>>> > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>> >>\n>>> >> > > your burn investment is always \"at stake\", any redaction can\n>>> result in a loss-of-burn, because burns can be tied, precisely, to\n>>> block-heights\n>>> >> > I'm fuzzy on how proof of burn works.\n>>> >>\n>>> >> when you burn coins, you burn them to be used at a future particular\n>>> >> block height: so if i'm burning for block 553, i can only use them to\n>>> >> mine block 553.   if i have a choice between two chains, one longer\n>>> >> and one shorter, i can only choose one... deterministically, for that\n>>> >> burn: the chain with the height 553.   if we fix the \"lead time\" for\n>>> >> burned coins to be weeks or even months in advance, miners have a very\n>>> >> strong, long-term, investment in the stability of the chain.\n>>> >>\n>>> >> therefore there is no \"nothing at stake\" problem.   it's\n>>> >> deterministic, so miners have no choice.  they can *only* choose the\n>>> >> transactions that go into the block.  they cannot choose which chain\n>>> >> to mine, and it's time-locked, so rollbacks and instability always\n>>> >> hurt miners the most.\n>>> >>\n>>> >> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>>> >> unproven.   i can imagine scenarios where large stakeholders can\n>>> >> collude to punish smaller stakeholders simply to drive them out of\n>>> >> business, for example.   and then you have to put checks in place to\n>>> >> prevent that, and more checks for those prevention system...\n>>> >>\n>>> >> in PoB, there is no complexity.  simpler systems like this are\n>>> >> typically more secure.\n>>> >>\n>>> >> PoB also solves problems caused by \"energy dependence\", which could\n>>> >> lead to state monopolies on mining (like the new Bitcoin Mining\n>>> >> Council).   these consortiums, if state sanctioned, could become a\n>>> >> source of censorship, for example.   Since PoB doesn't require you to\n>>> >> have a live, well-connected node, it's harder to censor & harder to\n>>> >> trace.\n>>> >>\n>>> >> Eliminating this weakness seems to be in the best interests of\n>>> >> existing stakeholders\n>>> >>\n>>> >>\n>>> >>\n>>> >>\n>>> >> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com>\n>>> wrote:\n>>> >> >\n>>> >> > >  proof of burn clearly solves this, since nothing is held online\n>>> >> >\n>>> >> > Well.. the coins to be burned need to be online when they're\n>>> burned. But yes, only a small fraction of the total coins need to be online.\n>>> >> >\n>>> >> > > your burn investment is always \"at stake\", any redaction can\n>>> result in a loss-of-burn, because burns can be tied, precisely, to\n>>> block-heights\n>>> >> >\n>>> >> > So you're saying that if say someone tries to mine a block on a\n>>> shorter chain, that requires them to send a transaction burning their\n>>> coins, and that transaction could also be spent on the longest chain, which\n>>> means their coins are burned even if the chain they tried to mine on\n>>> doesn't win? I'm fuzzy on how proof of burn works.\n>>> >> >\n>>> >> > > proof of burn can be more secure than proof-of-stake\n>>> >> >\n>>> >> > FYI, proof of stake can be done without the \"nothing at stake\"\n>>> problem. You can simply punish people who mint on shorter chains (by\n>>> rewarding people who publish proofs of this happening on the main chain).\n>>> In quorum-based PoS, you can punish people in the quorum that propose or\n>>> sign multiple blocks for the same height. The \"nothing at stake\" problem is\n>>> a solved problem at this point for PoS.\n>>> >> >\n>>> >> >\n>>> >> >\n>>> >> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>> >> >>\n>>> >> >> > I don't see a way to get around the conflicting requirement that\n>>> the keys for large amounts of coins should be kept offline but those are\n>>> exactly the coins we need online to make the scheme secure.\n>>> >> >>\n>>> >> >> proof of burn clearly solves this, since nothing is held online\n>>> >> >>\n>>> >> >> >  how does proof of burn solve the \"nothing at stake\" problem in\n>>> your view?\n>>> >> >>\n>>> >> >> definition of nothing at stake: in the event of a fork, whether the\n>>> >> >> fork is accidental or a malicious, the optimal strategy for any\n>>> miner\n>>> >> >> is to mine on every chain, so that the miner gets their reward no\n>>> >> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n>>> >> >> published on the very chains mines, so the incentive is magnified.\n>>> >> >>\n>>> >> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>>> >> >> redaction can result in a loss-of-burn, because burns can be tied,\n>>> >> >> precisely, to block-heights\n>>> >> >>\n>>> >> >> as a result, miners no longer have an incentive to mine all chains\n>>> >> >>\n>>> >> >> in this way proof of burn can be more secure than proof-of-stake,\n>>> and\n>>> >> >> even more secure than proof of work\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >>\n>>> >> >> >\n>>> >> >>\n>>> >> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>>> >> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >\n>>> >> >> > Hi Billy,\n>>> >> >> >\n>>> >> >> > I was going to write a post which started by dismissing many of\n>>> the weak arguments that are made against PoS made in this thread and\n>>> elsewhere.\n>>> >> >> > Although I don't agree with all your points you have done a\n>>> decent job here so I'll focus on the second part: why I think\n>>> Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>> >> >> >\n>>> >> >> > Proof of stake is not fit for purpose for a global settlement\n>>> layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin\n>>> is trying to be.\n>>> >> >> > PoS necessarily gives responsibilities to the holders of coins\n>>> that they do not want and cannot handle.\n>>> >> >> > In Bitcoin, large unsophisticated coin holders can put their\n>>> coins in cold storage without a second thought given to the health of the\n>>> underlying ledger.\n>>> >> >> > As much as hardcore Bitcoiners try to convince them to run their\n>>> own node, most don't, and that's perfectly acceptable.\n>>> >> >> > At no point do their personal decisions affect the underlying\n>>> consensus -- it only affects their personal security assurance (not that of\n>>> the system itself).\n>>> >> >> > In PoS systems this clean separation of responsibilities does\n>>> not exist.\n>>> >> >> >\n>>> >> >> > I think that the more rigorously studied PoS protocols will work\n>>> fine within the security claims made in their papers.\n>>> >> >> > People who believe that these protocols are destined for\n>>> catastrophic consensus failure are certainly in for a surprise.\n>>> >> >> > But the devil is in the detail.\n>>> >> >> > Let's look at what the implications of using the leading proof\n>>> of stake protocols would have on Bitcoin:\n>>> >> >> >\n>>> >> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>>> >> >> >\n>>> >> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3]\n>>> with an inbuilt on-chain delegation system[5].\n>>> >> >> > In these protocols, coin holders who do not want to run their\n>>> node with their hot keys in it delegate it to a \"Stake Pool\".\n>>> >> >> > I call the resulting system Proof-of-SquareSpace since most will\n>>> choose a pool by looking around for one with a nice website and offering\n>>> the largest share of the block reward.\n>>> >> >> > On the surface this might sound no different than someone with\n>>> an mining rig shopping around for a good mining pool but there are crucial\n>>> differences:\n>>> >> >> >\n>>> >> >> > 1. The person making the decision is forced into it just because\n>>> they own the currency -- someone with a mining rig has purchased it with\n>>> the intent to make profit by participating in consensus.\n>>> >> >> >\n>>> >> >> > 2. When you join a mining pool your systems are very much still\n>>> online. You are just partaking in a pool to reduce your profit variance.\n>>> You still see every block that you help create and *you never help create a\n>>> block without seeing it first*.\n>>> >> >> >\n>>> >> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority\n>>> and start censoring transactions how are the users meant to redelegate\n>>> their stake to honest pools?\n>>> >> >> > I guess they can just send a transaction delegating to another\n>>> pool...oh wait I guess that might be censored too! This seems really really\n>>> bad.\n>>> >> >> > In Bitcoin, miners can just join a different pool at a whim.\n>>> There is nothing the attacker can do to stop them. A temporary dishonest\n>>> majority heals relatively well.\n>>> >> >> >\n>>> >> >> > There is another severe disadvantage to this on-chain delegation\n>>> system: every UTXO must indicate which staking account this UTXO belongs to\n>>> so the appropriate share of block rewards can be transferred there.\n>>> >> >> > Being able to associate every UTXO to an account ruins one of\n>>> the main privacy advantages of the UTXO model.\n>>> >> >> > It also grows the size of the blockchain significantly.\n>>> >> >> >\n>>> >> >> > ### \"Pure\" proof of stake (Algorand)\n>>> >> >> >\n>>> >> >> > Algorand's[4] approach is to only allow online stake to\n>>> participate in the protocol.\n>>> >> >> > Theoretically, This means that keys holding funds have to be\n>>> online in order for them to author blocks when they are chosen.\n>>> >> >> > Of course in reality no one wants to keep their coin holding\n>>> keys online so in Alogorand you can authorize a set of \"participation\n>>> keys\"[1] that will be used to create blocks on your coin holding key's\n>>> behalf.\n>>> >> >> > Hopefully you've spotted the problem.\n>>> >> >> > You can send your participation keys to any malicious party with\n>>> a nice website (see random example [2]) offering you a good return.\n>>> >> >> > Damn it's still Proof-of-SquareSpace!\n>>> >> >> > The minor advantage is that at least the participation keys\n>>> expire after a certain amount of time so eventually the SquareSpace\n>>> attacker will lose their hold on consensus.\n>>> >> >> > Importantly there is also less junk on the blockchain because\n>>> the participation keys are delegated off-chain and so are not making as\n>>> much of a mess.\n>>> >> >> >\n>>> >> >> > ### Conclusion\n>>> >> >> >\n>>> >> >> > I don't see a way to get around the conflicting requirement that\n>>> the keys for large amounts of coins should be kept offline but those are\n>>> exactly the coins we need online to make the scheme secure.\n>>> >> >> > If we allow delegation then we open up a new social attack\n>>> surface and it degenerates to Proof-of-SquareSpace.\n>>> >> >> >\n>>> >> >> > For a \"digital gold\" like system like Bitcoin we optimize for\n>>> simplicity and desperately want to avoid extraneous responsibilities for\n>>> the holder of the coin.\n>>> >> >> > After all, gold is an inert element on the periodic table that\n>>> doesn't confer responsibilities on the holder to maintain the quality of\n>>> all the other bars of gold out there.\n>>> >> >> > Bitcoin feels like this too and in many ways is more inert and\n>>> beautifully boring than gold.\n>>> >> >> > For Bitcoin to succeed I think we need to keep it that way and\n>>> Proof-of-Stake makes everything a bit too exciting.\n>>> >> >> >\n>>> >> >> > I suppose in the end the market will decide what is real digital\n>>> gold and whether these bad technical trade offs are worth being able to say\n>>> it uses less electricity. It goes without saying that making bad technical\n>>> decisions to appease the current political climate is an anathema to\n>>> Bitcoin.\n>>> >> >> >\n>>> >> >> > Would be interested to know if you or others think differently\n>>> on these points.\n>>> >> >> >\n>>> >> >> > [1]:\n>>> https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>> >> >> > [2]: https://staking.staked.us/algorand-staking\n>>> >> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>>> >> >> > [4]:\n>>> https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>> >> >> > [5]:\n>>> https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>> >> >> >\n>>> >> >> > Cheers,\n>>> >> >> >\n>>> >> >> > LL\n>>> >> >> >\n>>> >> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <\n>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >>\n>>> >> >> >> I think there is a lot of misinformation and bias against Proof\n>>> of Stake. Yes there have been lots of shady coins that use insecure PoS\n>>> mechanisms. Yes there have been massive issues with distribution of PoS\n>>> coins (of course there have also been massive issues with PoW coins as\n>>> well). However, I want to remind everyone that there is a difference\n>>> between \"proved to be impossible\" and \"have not achieved recognized success\n>>> yet\". Most of the arguments levied against PoS are out of date or rely on\n>>> unproven assumptions or extrapolation from the analysis of a particular PoS\n>>> system. I certainly don't think we should experiment with bitcoin by\n>>> switching to PoS, but from my research, it seems very likely that there is\n>>> a proof of stake consensus protocol we could build that has substantially\n>>> higher security (cost / capital required to execute an attack) while at the\n>>> same time costing far less resources (which do translate to fees on the\n>>> network) *without* compromising any of the critical security properties\n>>> bitcoin relies on. I think the critical piece of this is the disagreements\n>>> around hardcoded checkpoints, which is a critical piece solving attacks\n>>> that could be levied on a PoS chain, and how that does (or doesn't) affect\n>>> the security model.\n>>> >> >> >>\n>>> >> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS\n>>> is worse when a 51% attack happens. While I agree, I think that line of\n>>> thinking omits important facts:\n>>> >> >> >> * The capital required to 51% attack a PoS chain can be made\n>>> substantially greater than on a PoS chain.\n>>> >> >> >> * The capital the attacker stands to lose can be substantially\n>>> greater as well if the attack is successful.\n>>> >> >> >> * The effectiveness of paying miners to raise the honest\n>>> fraction of miners above 50% may be quite bad.\n>>> >> >> >> * Allowing a 51% attack is already unacceptable. It should be\n>>> considered whether what happens in the case of a 51% may not be\n>>> significantly different. The currency would likely be critically damaged in\n>>> a 51% attack regardless of consensus mechanism.\n>>> >> >> >>\n>>> >> >> >> > Proof-of-stake tends towards oligopolistic control\n>>> >> >> >>\n>>> >> >> >> People repeat this often, but the facts support this. There is\n>>> no centralization pressure in any proof of stake mechanism that I'm aware\n>>> of. IE if you have 10 times as much coin that you use to mint blocks, you\n>>> should expect to earn 10x as much minting revenue - not more than 10x. By\n>>> contrast, proof of work does in fact have clear centralization pressure -\n>>> this is not disputed. Our goal in relation to that is to ensure that the\n>>> centralization pressure remains insignifiant. Proof of work also clearly\n>>> has a lot more barriers to entry than any proof of stake system does. Both\n>>> of these mean the tendency towards oligopolistic control is worse for PoW.\n>>> >> >> >>\n>>> >> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>> >> >> >>\n>>> >> >> >> I certainly agree. Bitcoin's energy usage at the moment is I\n>>> think quite warranted. However, the question is: can we do substantially\n>>> better. I think if we can, we probably should... eventually.\n>>> >> >> >>\n>>> >> >> >> > Proof of Stake is only resilient to \u2153 of the network\n>>> demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to\n>>> the \u00bd threshold\n>>> >> >> >>\n>>> >> >> >> I see no mention of this in the pos.pdf you linked to. I'm not\n>>> aware of any proof that all PoS systems have a failure threshold of 1/3. I\n>>> know that staking systems like Casper do in fact have that 1/3 requirement.\n>>> However there are PoS designs that should exceed that up to nearly 50% as\n>>> far as I'm aware. Proof of work is not in fact resilient up to the 1/2\n>>> threshold in the way you would think. IE, if 100% of miners are currently\n>>> honest and have a collective 100 exahashes/s hashpower, an attacker does\n>>> not need to obtain 100 exahashes/s, but actually only needs to accumulate\n>>> 50 exahashes/s. This is because as the attacker accumulates hashpower, it\n>>> drives honest miners out of the market as the difficulty increases to\n>>> beyond what is economically sustainable. Also, its been shown that the best\n>>> proof of work can do is require an attacker to obtain 33% of the hashpower\n>>> because of the selfish mining attack discussed in depth in this paper:\n>>> https://arxiv.org/abs/1311.0243. Together, both of these things reduce\n>>> PoW's security by a factor of about 83% (1 - 50%*33%).\n>>> >> >> >>\n>>> >> >> >>  > Proof of Stake requires other trade-offs which are\n>>> incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014\n>>> specifically the famous \"security vs. liveness\" guarantee\n>>> >> >> >>\n>>> >> >> >> Do you have a good source that talks about why you think proof\n>>> of stake cannot be used for a trustless digital cash?\n>>> >> >> >>\n>>> >> >> >> > You cannot gain tokens without someone choosing to give up\n>>> those coins - a form of permission.\n>>> >> >> >>\n>>> >> >> >> This is not a practical constraint. Just like in mining, some\n>>> nodes may reject you, but there will likely be more that will accept you,\n>>> some sellers may reject you, but most would accept your money as payment\n>>> for bitcoins. I don't think requiring the \"permission\" of one of millions\n>>> of people in the market can be reasonably considered a \"permissioned\n>>> currency\".\n>>> >> >> >>\n>>> >> >> >> > 2. Proof of stake must have a trusted means of timestamping\n>>> to regulate overproduction of blocks\n>>> >> >> >>\n>>> >> >> >> Both PoW and PoS could mine/mint blocks twice as fast if\n>>> everyone agreed to double their clock speeds. Both systems rely on an\n>>> honest majority sticking to standard time.\n>>> >> >> >>\n>>> >> >> >>\n>>> >> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via\n>>> bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >>>\n>>> >> >> >>> Ah sorry, I didn't realize this was, in fact, a different\n>>> thread! :)\n>>> >> >> >>>\n>>> >> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <\n>>> mike at powx.org> wrote:\n>>> >> >> >>>>\n>>> >> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the\n>>> BIP itself. PoS, VDFs, and so on are interesting but I guess there are\n>>> other threads going on these topics already where they would be relevant.\n>>> >> >> >>>>\n>>> >> >> >>>> Also, it's important to distinguish between oPoW and these\n>>> other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't\n>>> alter the core game theory or security assumptions of Hashcash and actually\n>>> contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>> >> >> >>>>\n>>> >> >> >>>> Cheers,\n>>> >> >> >>>> Mike\n>>> >> >> >>>>\n>>> >> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev\n>>> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>> >> >> >>>>>\n>>> >> >> >>>>> 1. i never suggested vdf's to replace pow.\n>>> >> >> >>>>>\n>>> >> >> >>>>> 2. my suggestion was specifically *in the context of* a\n>>> working\n>>> >> >> >>>>> proof-of-burn protocol\n>>> >> >> >>>>>\n>>> >> >> >>>>> - vdfs used only for timing (not block height)\n>>> >> >> >>>>> - blind-burned coins of a specific age used to replace proof\n>>> of work\n>>> >> >> >>>>> - the required \"work\" per block would simply be a\n>>> competition to\n>>> >> >> >>>>> acquire rewards, and so miners would have to burn coins,\n>>> well in\n>>> >> >> >>>>> advance, and hope that their burned coins got rewarded in\n>>> some far\n>>> >> >> >>>>> future\n>>> >> >> >>>>> - the point of burned coins is to mimic, in every meaningful\n>>> way, the\n>>> >> >> >>>>> value gained from proof of work... without some of the\n>>> security\n>>> >> >> >>>>> drawbacks\n>>> >> >> >>>>> - the miner risks losing all of his burned coins (like all\n>>> miners risk\n>>> >> >> >>>>> losing their work in each block)\n>>> >> >> >>>>> - new burns can't be used\n>>> >> >> >>>>> - old burns age out (like ASICs do)\n>>> >> >> >>>>> - other requirements on burns might be needed to properly\n>>> mirror the\n>>> >> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine\n>>> honestly.\n>>> >> >> >>>>>\n>>> >> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf\n>>> system\"\n>>> >> >> >>>>> might be more secure in the long run, and that if the entire\n>>> space\n>>> >> >> >>>>> agreed that such an endeavor was worthwhile, a test net\n>>> could be spun\n>>> >> >> >>>>> up, and a hard-fork could be initiated.\n>>> >> >> >>>>>\n>>> >> >> >>>>> 4. i would never suggest such a thing unless i believed it\n>>> was\n>>> >> >> >>>>> possible that consensus was possible.  so no, this is not an\n>>> \"alt\n>>> >> >> >>>>> coin\"\n>>> >> >> >>>>>\n>>> >> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <\n>>> zachgrw at gmail.com> wrote:\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > Hi ZmnSCPxj,\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > Please note that I am not suggesting VDFs as a means to\n>>> save energy, but solely as a means to make the time between blocks more\n>>> constant.\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > Zac\n>>> >> >> >>>>> >\n>>> >> >> >>>>> >\n>>> >> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <\n>>> ZmnSCPxj at protonmail.com> wrote:\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> Good morning Zac,\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> > VDFs might enable more constant block times, for\n>>> instance by having a two-step PoW:\n>>> >> >> >>>>> >> >\n>>> >> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF\n>>> being subject to difficulty adjustments similar to the as-is). As per the\n>>> property of VDFs, miners are able show proof of work.\n>>> >> >> >>>>> >> >\n>>> >> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so\n>>> finding a block takes 1 minute on average, again subject to as-is\n>>> difficulty adjustments.\n>>> >> >> >>>>> >> >\n>>> >> >> >>>>> >> > As a result, variation in block times will be greatly\n>>> reduced.\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> As I understand it, another weakness of VDFs is that they\n>>> are not inherently progress-free (their sequential nature prevents that;\n>>> they are inherently progress-requiring).\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> Thus, a miner which focuses on improving the amount of\n>>> energy that it can pump into the VDF circuitry (by overclocking and\n>>> freezing the circuitry), could potentially get into a winner-takes-all\n>>> situation, possibly leading to even *worse* competition and even *more*\n>>> energy consumption.\n>>> >> >> >>>>> >> After all, if you can start mining 0.1s faster than the\n>>> competition, that is a 0.1s advantage where *only you* can mine *in the\n>>> entire world*.\n>>> >> >> >>>>> >>\n>>> >> >> >>>>> >> Regards,\n>>> >> >> >>>>> >> ZmnSCPxj\n>>> >> >> >>>>> _______________________________________________\n>>> >> >> >>>>> bitcoin-dev mailing list\n>>> >> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> >>>>>\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> >> >> >>>>\n>>> >> >> >>>>\n>>> >> >> >>>>\n>>> >> >> >>>> --\n>>> >> >> >>>> Michael Dubrovsky\n>>> >> >> >>>> Founder; PoWx\n>>> >> >> >>>> www.PoWx.org\n>>> >> >> >>>\n>>> >> >> >>>\n>>> >> >> >>>\n>>> >> >> >>> --\n>>> >> >> >>> Michael Dubrovsky\n>>> >> >> >>> Founder; PoWx\n>>> >> >> >>> www.PoWx.org\n>>> >> >> >>> _______________________________________________\n>>> >> >> >>> bitcoin-dev mailing list\n>>> >> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> >> >> >>\n>>> >> >> >> _______________________________________________\n>>> >> >> >> bitcoin-dev mailing list\n>>> >> >> >> bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>> >> >> >\n>>> >> >> > _______________________________________________\n>>> >> >> > bitcoin-dev mailing list\n>>> >> >> > bitcoin-dev at lists.linuxfoundation.org\n>>> >> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210527/d4d35b2b/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-27T13:11:13",
                "message_text_only": "Problems with proof-of-stake:\n\n - A single CVE can tear down the network and hacked nodes can result\nin transferring all mining power to one group\n - PoS is vulnerable to DOS attacks (increasing latency reduces the\ncost of mining attacks)\n - PoS is vulnerable to stakers colluding to punish/drive out others\n\nThis *cannot* happen in PoW (or PoB), because \"pulling the plug\" is\nsufficient to stop a hacked mining rig.  (I should know, my first rig\nwas hacked, day 1, until i learned how to secure it properly!)\n\n**The value of a base layer is tied tightly to its \"risk of default\",\nthus PoW will always be superior, harder money.**\n\nBitcoin has very, very low risk of default:\n\n- proof model ties to real-world energy\n- core devs that are risk averse and will never hard fork to reverse\ntransactions\n- extremely decentralized, priority given to decentralization and\nsecurity over every other feature in every PR\n- fees kept high enough to financially secure the network - allowing\nbillions in value to move safely for dollars in fees\n\nPoW is harder money than PoS, and Bitcoin is, foremost, hard money.\n\nPoS has no sunk-investment, no replication and requires stake to be\nonline (and attackable), and I think has no business being considered\nas an alternative to PoW for a base-layer system like Bitcoin.\n\nThese are problems.that cannot be overlooked or swept under the rug.\n\nIf you cannot \"pull the plug\" on stake, then you cannot defend the\nnetwork from an attack.\n\nOn Thu, May 27, 2021 at 6:09 AM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>\n> >  using nothing at stake\n>\n> I see from the way you're using this term now that you mean something completely different by it than I usually understand the phrase. You seem to mean it as that minters can check whether they can mint a block without any cost. By contrast, I generally understand the phrase to mean the problem where there is no cost to broadcasting blocks on many different chains.\n>\n> > she gained an extra block over the honest strategy which would only give her block D\n>\n> I think I see what you're saying now. It actually sounds quite similar to the selfish mining attack in proof of work. However I do acknowledge that the ability to secretly mint on both your secret chain(s) and the public chain makes it worse in PoS. How much worse is something that should be quantified. This is also a solvable problem. Designing a secure system can be kind of like whack a mole. You fix the weakest link in the chain, and there is inevitably now a new weakest link that is stronger than the link you fixed. Bitcoin is no different, as development continues, more security improvements are implemented.\n>\n> In this case, there's a number of possible solutions, some of which can be combined. Eg you can program all honest clients to mint selfishly. You'd likely need to lengthen the number of blocks that constitute a finalized transaction, but you can probably reduce the block time to compensate, so finalization doesn't actually take longer. You could also require many additional signatures on each block from outside validators.\n>\n> > How is that relevant to our discussion?\n>\n> It is relevant because the benefits of proof of stake must be compared to an alternative, and the alternative of reference here is clearly PoW. I'm pointing out that the vulnerability you're describing in the type of PoS you're talking about also exists in what its being compared against. To know whether PoS or PoW is better on this particular aspect, you need to compare the levels of advantage that can be obtained in each, and how this affects the cost of attacking the system. Its not as straight forward as saying \"PoS is bad because it has this vulnerability\" when the system you compare it to also has a very similar vulnerability. You need to quantify the difference at that point.\n>\n> > the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system\n>\n> Known by public key, not by IP address.\n>\n> > (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n>\n> I agree that claiming that Y is a solved problem would be misleading if the solution creates problems that are of greater significance than the original problem. I would also agree that if the solution creates significant problems that are substantially less significant than the problem it solves, it would be misleading to say its a \"solved problem\" - saying \"partially solved\" would be more accurate there.\n>\n> However, I do not agree that it is at all misleading to say \"nothing at stake is a solved problem\" just because solving that specific problem doesn't solve all the problems with proof of stake. Its unreasonable to expect that when someone claims problem X is solved, that it also implies all problems related to X are solved.\n>\n> I maintain that nothing at stake is a solved problem. There are solutions that do not create other problems of anywhere near the same level of significance.\n>\n> > Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great\n>\n> I don't believe we're in agreement there. I don't know how what you said refutes my point.\n>\n> > I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure.\n>\n> You were the one that claimed proof of stake cannot be made secure. The burden of proof is on you to support your own claims.\n>\n> > You have not described a system that would solve it\n>\n> I would be curious to hear a full critique from you about this protocol.\n>\n> On Wed, May 26, 2021 at 3:12 AM befreeandopen <befreeandopen at protonmail.com> wrote:\n>>\n>>\n>>\n>> @befreeandopen I guess I misunderstood your selfish minting attack. Let me make sure I understand it. You're saying it would go as follows?:\n>>\n>> 1. The malicious actor comes across an opportunity to mint the next 3 blocks. But they hold off and don't release their blocks just yet.\n>> 2. They receive a new block minted by someone else.\n>> 3. The malicious actor then chooses to release their other 2 blocks on on the second from the top block if it gives them more blocks in the future than minting on the top block. And instead lets the top block proceed if it gives them more blocks in the future (also figuring in the 3 blocks they're missing out on minting).\n>> 4. Profit!\n>>\n>> The problem with this attack is that any self respecting PoS system wouldn't have the information available for minters to know how blocks will affect their future prospects of minting. Otherwise this would introduce the problem of stake grinding. This can be done using collaborative randomness (where numbers from many parties are combined to create a random number that no individual party could predict). In fact, that's what the Casper protocol does to decide quorums. In a non quorum case, you can do something like record a hash of a number in the block header, and then have a second step to release that number later. Rewards can be given can be used to ensure minters act honestly here by minting messages that release these numbers and not releasing their secret numbers too early.\n>>\n>>\n>> Yes, you misunderstood it. First, let me say that the above thoughts of yours are incorrect, at least for non-quorum case. Since the transition in the blockchain system from S1 to S2 is only by adding new block, and since stakers always need to be able to decide whether or not they can add the next block, it follows that if a staker creates a new block locally, she can decide whether the new state allows her to add another block on top. As you mentioned, this COULD introduce problem of staking, that you are incorrect in that it is a necessity. Usual prevention of the grinding problem in this case is that an \"old enough\" source of randomness applies for the current block production process. Of course this, as it is typical for PoS, introduces other problems, but let's discard those.\n>>\n>> I will try to explain in detail what you misunderstood before. You start with a chain ending with blocks A-B-C, C being the top, the common feature of PoS system (non-quorum), roughly speaking, is that if N is the total amount of coins that participate in the staking process to create a new block on top of C (let's call that D), then a participant having K*N amount of stake has chance K to be the one who will create the next stake. In other words, the power of stakers is supposed to be linear in the system - you own 10 coins gives you 10x the chance of finding block over someone who has 1 coin.\n>>\n>> What i was claiming is that using the technique I have described, this linearity is violated. Why? Well, it works for honest stakers among the competition of honest stakers - they really do have the chance of K to find the next block. However, the attacker, using nothing at stake, checks her ability to build block D (at some timestamp). If she is successful, she does not propagate D immediately, but instead she also checks whether she can build on top of B and on top of A. Since with every new timestamp, usually, there is a new chance to build the block, it is not uncommon that she finds she is indeed able to build such block C' on top of B. Here it is likely t(C') > t(C) as the attacker has relatively low stake. Note that in order to produce such C', she not only could have tried the current timestamp t(D), but also all previous timestamps up to t(B) (usually that's the consensus rule, but it may depend on a specific consensus). So her chance to produce such C' is greater than her previous chance of producing C (which chance was limited by other stakers in the system and the discovery of block C by one of them). Now suppose that she found such C' and now she continues by trying to prolong this chain by finding D'. And again here, it is quite likely that her chance to find such D' is greater than was her chance of finding D because again there are likely multiple timestamps she could try. This all was possible just because nothing at stake allows you to just try if you can produce a block in certain state of block chain or not. Now if she actually was able to find D', she discards D and only publishes chain A-B-C'-D', which can not be punished despite the fact that she indeed produced two different forks. She can not be punished because this production was local and only the final result of A-B-C'-D' was published, in which case she gained an extra block over the honest strategy which would only give her block D.\n>>\n>>\n>>\n>> Fun fact tho: there is an attack called the \"selfish mining attack\" for proof of work, and it reduces the security of PoW by at least 1/3rd.\n>>\n>>\n>> How is that relevant to our discussion? This is known research that has nothing to do with PoS except that it is often worse on PoS.\n>>\n>>\n>>\n>> >   the problem is not as hard as you think\n>>\n>> I don't claim to know just how hard finding the IP address associated with a bitcoin address is. However, the DOS risk can be solved more completely by only allowing the owner of coins themselves to know whether they can mint a block. Eg by determining whether someone can mint a block based on their public key hidden behind hashes (as normal in addresses). Only when someone does in fact mint a block do they reveal their hidden public key in order to prove they are allowed to mint the block.\n>>\n>>\n>> This is true, but you are mixing quorum and non-quorum systems. My objection here was towards such system where I specifically said that the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system. So in such system, I claimed, the known producer is the only target at any given point of time. This of course does not apply to any other type of system where future producers are not known. No need to dispute, again, something that was not claimed.\n>>\n>>\n>>\n>>\n>> > I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message)\n>>\n>> I'm glad we agree there. Perhaps I misunderstood what you meant by \"you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere.\"\n>>\n>>\n>> Perhaps you should quote the full sentence and not just a part of it:\n>>\n>> \"Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\"\n>>\n>> You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n>> In case of the punishment it was meant to be the not solve it completely part.\n>> Also \"typically\" does not imply always.\n>> But this parsing of English sentences for you seems very off topic here. My point is, in context of Bitcoin, reject such unsupported claims that PoS is a reasonable alternative to PoW, let's stick to that.\n>>\n>>\n>>\n>> > As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake\n>>\n>> Well, if you're in the closed system of the cryptocurrency, sure. But we don't live in that closed system. Minters will earn some ROI from minting just like any other financial activity. Others may find more success spending their time doing things other than figuring out how to mint coins. In that case, they'll be able to earn more coin that they could later decide to use to mint blocks if they decide to.\n>>\n>>\n>> This only supports the point I was making. Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great.\n>>\n>>\n>>\n>>\n>> > Just because of the above we must reject PoS as being critically insecure\n>>\n>> I think the only thing we can conclude from this is that you have come up with an insecure proof of stake protocol. I don't see how anything you've brought up amounts to substantial evidence that all possible PoS protocols are insecure.\n>>\n>>\n>> I have not come up with anything. I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure. It is up to you to show that you know how to solve every problem that people throw at you. So far we have just demonstrated that your claim that nothing at stake is solved was unjustified. You have not described a system that would solve it (and not introduce critical DDOS attack vector as it is in quorum based systems - per the prior definition of such systems).\n>>\n>> Of course the list of problems of PoS systems do not end with just nothing at stake, but it is good enough example that by itself prevents its adoption in decentralized consensus. No need to go to other hard problems without solving nothing at stake.\n>>\n>>\n>>\n>>\n>>\n>> On Tue, May 25, 2021 at 11:10 AM befreeandopen <befreeandopen at protonmail.com> wrote:\n>>>\n>>>\n>>> @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n>>>\n>>> The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the reasoning here for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n>>>\n>>>\n>>> This is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n>>>\n>>>\n>>>\n>>> > I am not sure if this is what you call quorum-based PoS\n>>>\n>>> Yes, pre-selected minters is exactly what I mean by that.\n>>>\n>>> > it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n>>>\n>>> Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n>>>\n>>>\n>>> I do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n>>>\n>>>\n>>>\n>>> Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n>>>\n>>>\n>>> While I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n>>>\n>>> Consider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n>>>\n>>> Then if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n>>>\n>>>\n>>> So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n>>>\n>>>\n>>> It still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n>>>\n>>> Just because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n>>>\n>>>\n>>>\n>>> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>\n>>>> > > you burn them to be used at a future particular block height\n>>>>\n>>>> > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>>\n>>>> could be right.   the original idea was to have burns decay over time,\n>>>> like ASIC's.\n>>>>\n>>>> anyway the point was not that \"i had a magic formula\"\n>>>>\n>>>> the point was that proof of burn is almost always better than proof of\n>>>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>>>> somewhere waiting to be stolen.\n>>>>\n>>>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>> >\n>>>> > Is this the kind of proof of burn you're talking about?\n>>>> >\n>>>> > >   if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n>>>> >\n>>>> > What prevents you from attempting to mine block 553 on both chains?\n>>>> >\n>>>> > > miners have a very strong, long-term, investment in the stability of the chain.\n>>>> >\n>>>> > Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n>>>> >\n>>>> > > you burn them to be used at a future particular block height\n>>>> >\n>>>> > This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>> >\n>>>> > > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n>>>> >\n>>>> > Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n>>>> >\n>>>> >\n>>>> > On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>>> >>\n>>>> >> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>> >> > I'm fuzzy on how proof of burn works.\n>>>> >>\n>>>> >> when you burn coins, you burn them to be used at a future particular\n>>>> >> block height: so if i'm burning for block 553, i can only use them to\n>>>> >> mine block 553.   if i have a choice between two chains, one longer\n>>>> >> and one shorter, i can only choose one... deterministically, for that\n>>>> >> burn: the chain with the height 553.   if we fix the \"lead time\" for\n>>>> >> burned coins to be weeks or even months in advance, miners have a very\n>>>> >> strong, long-term, investment in the stability of the chain.\n>>>> >>\n>>>> >> therefore there is no \"nothing at stake\" problem.   it's\n>>>> >> deterministic, so miners have no choice.  they can *only* choose the\n>>>> >> transactions that go into the block.  they cannot choose which chain\n>>>> >> to mine, and it's time-locked, so rollbacks and instability always\n>>>> >> hurt miners the most.\n>>>> >>\n>>>> >> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>>>> >> unproven.   i can imagine scenarios where large stakeholders can\n>>>> >> collude to punish smaller stakeholders simply to drive them out of\n>>>> >> business, for example.   and then you have to put checks in place to\n>>>> >> prevent that, and more checks for those prevention system...\n>>>> >>\n>>>> >> in PoB, there is no complexity.  simpler systems like this are\n>>>> >> typically more secure.\n>>>> >>\n>>>> >> PoB also solves problems caused by \"energy dependence\", which could\n>>>> >> lead to state monopolies on mining (like the new Bitcoin Mining\n>>>> >> Council).   these consortiums, if state sanctioned, could become a\n>>>> >> source of censorship, for example.   Since PoB doesn't require you to\n>>>> >> have a live, well-connected node, it's harder to censor & harder to\n>>>> >> trace.\n>>>> >>\n>>>> >> Eliminating this weakness seems to be in the best interests of\n>>>> >> existing stakeholders\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >>\n>>>> >> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>> >> >\n>>>> >> > >  proof of burn clearly solves this, since nothing is held online\n>>>> >> >\n>>>> >> > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>>>> >> >\n>>>> >> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>> >> >\n>>>> >> > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>>>> >> >\n>>>> >> > > proof of burn can be more secure than proof-of-stake\n>>>> >> >\n>>>> >> > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>>>> >> >\n>>>> >> >\n>>>> >> >\n>>>> >> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>>> >> >>\n>>>> >> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>> >> >>\n>>>> >> >> proof of burn clearly solves this, since nothing is held online\n>>>> >> >>\n>>>> >> >> >  how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>>> >> >>\n>>>> >> >> definition of nothing at stake: in the event of a fork, whether the\n>>>> >> >> fork is accidental or a malicious, the optimal strategy for any miner\n>>>> >> >> is to mine on every chain, so that the miner gets their reward no\n>>>> >> >> matter which fork wins.   indeed in proof-of-stake, the proofs are\n>>>> >> >> published on the very chains mines, so the incentive is magnified.\n>>>> >> >>\n>>>> >> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>>>> >> >> redaction can result in a loss-of-burn, because burns can be tied,\n>>>> >> >> precisely, to block-heights\n>>>> >> >>\n>>>> >> >> as a result, miners no longer have an incentive to mine all chains\n>>>> >> >>\n>>>> >> >> in this way proof of burn can be more secure than proof-of-stake, and\n>>>> >> >> even more secure than proof of work\n>>>> >> >>\n>>>> >> >>\n>>>> >> >>\n>>>> >> >>\n>>>> >> >>\n>>>> >> >>\n>>>> >> >>\n>>>> >> >> >\n>>>> >> >>\n>>>> >> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>>>> >> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >> >\n>>>> >> >> > Hi Billy,\n>>>> >> >> >\n>>>> >> >> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>>>> >> >> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>>> >> >> >\n>>>> >> >> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>>>> >> >> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>>>> >> >> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>>>> >> >> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>>>> >> >> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>>>> >> >> > In PoS systems this clean separation of responsibilities does not exist.\n>>>> >> >> >\n>>>> >> >> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>>>> >> >> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>>>> >> >> > But the devil is in the detail.\n>>>> >> >> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>>>> >> >> >\n>>>> >> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>>>> >> >> >\n>>>> >> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>>>> >> >> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>>>> >> >> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>>>> >> >> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>>>> >> >> >\n>>>> >> >> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>>>> >> >> >\n>>>> >> >> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>>>> >> >> >\n>>>> >> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>>>> >> >> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>>>> >> >> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>>>> >> >> >\n>>>> >> >> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>>>> >> >> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>>>> >> >> > It also grows the size of the blockchain significantly.\n>>>> >> >> >\n>>>> >> >> > ### \"Pure\" proof of stake (Algorand)\n>>>> >> >> >\n>>>> >> >> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>>>> >> >> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>>>> >> >> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>>>> >> >> > Hopefully you've spotted the problem.\n>>>> >> >> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>>>> >> >> > Damn it's still Proof-of-SquareSpace!\n>>>> >> >> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>>>> >> >> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>>>> >> >> >\n>>>> >> >> > ### Conclusion\n>>>> >> >> >\n>>>> >> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>> >> >> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>>>> >> >> >\n>>>> >> >> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>>>> >> >> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>>>> >> >> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>>>> >> >> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>>>> >> >> >\n>>>> >> >> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>>>> >> >> >\n>>>> >> >> > Would be interested to know if you or others think differently on these points.\n>>>> >> >> >\n>>>> >> >> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>>> >> >> > [2]: https://staking.staked.us/algorand-staking\n>>>> >> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>>>> >> >> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>>> >> >> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>>> >> >> >\n>>>> >> >> > Cheers,\n>>>> >> >> >\n>>>> >> >> > LL\n>>>> >> >> >\n>>>> >> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >> >>\n>>>> >> >> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>>> >> >> >>\n>>>> >> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>>>> >> >> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>>>> >> >> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>>>> >> >> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>>>> >> >> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>>> >> >> >>\n>>>> >> >> >> > Proof-of-stake tends towards oligopolistic control\n>>>> >> >> >>\n>>>> >> >> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>>> >> >> >>\n>>>> >> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>>> >> >> >>\n>>>> >> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>>> >> >> >>\n>>>> >> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>>> >> >> >>\n>>>> >> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>>> >> >> >>\n>>>> >> >> >>  > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>>> >> >> >>\n>>>> >> >> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>>> >> >> >>\n>>>> >> >> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>>> >> >> >>\n>>>> >> >> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>>> >> >> >>\n>>>> >> >> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>>> >> >> >>\n>>>> >> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>>> >> >> >>\n>>>> >> >> >>\n>>>> >> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >> >>>\n>>>> >> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>> >> >> >>>\n>>>> >> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>> >> >> >>>>\n>>>> >> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>> >> >> >>>>\n>>>> >> >> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>> >> >> >>>>\n>>>> >> >> >>>> Cheers,\n>>>> >> >> >>>> Mike\n>>>> >> >> >>>>\n>>>> >> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>> >> >> >>>>>\n>>>> >> >> >>>>> 1. i never suggested vdf's to replace pow.\n>>>> >> >> >>>>>\n>>>> >> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n>>>> >> >> >>>>> proof-of-burn protocol\n>>>> >> >> >>>>>\n>>>> >> >> >>>>> - vdfs used only for timing (not block height)\n>>>> >> >> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>> >> >> >>>>> - the required \"work\" per block would simply be a competition to\n>>>> >> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>> >> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n>>>> >> >> >>>>> future\n>>>> >> >> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>> >> >> >>>>> value gained from proof of work... without some of the security\n>>>> >> >> >>>>> drawbacks\n>>>> >> >> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>> >> >> >>>>> losing their work in each block)\n>>>> >> >> >>>>> - new burns can't be used\n>>>> >> >> >>>>> - old burns age out (like ASICs do)\n>>>> >> >> >>>>> - other requirements on burns might be needed to properly mirror the\n>>>> >> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>> >> >> >>>>>\n>>>> >> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>> >> >> >>>>> might be more secure in the long run, and that if the entire space\n>>>> >> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>> >> >> >>>>> up, and a hard-fork could be initiated.\n>>>> >> >> >>>>>\n>>>> >> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>>>> >> >> >>>>> possible that consensus was possible.  so no, this is not an \"alt\n>>>> >> >> >>>>> coin\"\n>>>> >> >> >>>>>\n>>>> >> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>> >> >> >>>>> >\n>>>> >> >> >>>>> > Hi ZmnSCPxj,\n>>>> >> >> >>>>> >\n>>>> >> >> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>> >> >> >>>>> >\n>>>> >> >> >>>>> > Zac\n>>>> >> >> >>>>> >\n>>>> >> >> >>>>> >\n>>>> >> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>> >> >> >>>>> >>\n>>>> >> >> >>>>> >> Good morning Zac,\n>>>> >> >> >>>>> >>\n>>>> >> >> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>> >> >> >>>>> >> >\n>>>> >> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>> >> >> >>>>> >> >\n>>>> >> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>> >> >> >>>>> >> >\n>>>> >> >> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>> >> >> >>>>> >>\n>>>> >> >> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>> >> >> >>>>> >>\n>>>> >> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>> >> >> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>> >> >> >>>>> >>\n>>>> >> >> >>>>> >> Regards,\n>>>> >> >> >>>>> >> ZmnSCPxj\n>>>> >> >> >>>>> _______________________________________________\n>>>> >> >> >>>>> bitcoin-dev mailing list\n>>>> >> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> >> >> >>>>\n>>>> >> >> >>>>\n>>>> >> >> >>>>\n>>>> >> >> >>>> --\n>>>> >> >> >>>> Michael Dubrovsky\n>>>> >> >> >>>> Founder; PoWx\n>>>> >> >> >>>> www.PoWx.org\n>>>> >> >> >>>\n>>>> >> >> >>>\n>>>> >> >> >>>\n>>>> >> >> >>> --\n>>>> >> >> >>> Michael Dubrovsky\n>>>> >> >> >>> Founder; PoWx\n>>>> >> >> >>> www.PoWx.org\n>>>> >> >> >>> _______________________________________________\n>>>> >> >> >>> bitcoin-dev mailing list\n>>>> >> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> >> >> >>\n>>>> >> >> >> _______________________________________________\n>>>> >> >> >> bitcoin-dev mailing list\n>>>> >> >> >> bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>> >> >> >\n>>>> >> >> > _______________________________________________\n>>>> >> >> > bitcoin-dev mailing list\n>>>> >> >> > bitcoin-dev at lists.linuxfoundation.org\n>>>> >> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>>\n>>"
            },
            {
                "author": "befreeandopen",
                "date": "2021-05-28T14:36:12",
                "message_text_only": ">> using nothing at stake\n>\n> I see from the way you're using this term now that you mean something completely different by it than I usually understand the phrase. You seem to mean it as that minters can check whether they can mint a block without any cost. By contrast, I generally understand the phrase to mean the problem where there is no cost to broadcasting blocks on many different chains.\n\n\"Nothing at stake\" is a very good name of the problem we are talking about. It says that certain behavior is possible because there is ... nothing at stake. In PoW, significant energy has to be spent in order to create a valid block. In PoS, because there is minimal amount of energy involved, you can create blocks anywhere if you just follow the consensus rules for their structure. Call it whatever you want, but this is the very core of nothing at stake problem. You can do stuff that you can't do in PoW and it is because there is nothing at stake. If you want to make some arbitrary very narrow definitions of what nothing at stake is so that you can claim your false statement that it is a solved problem, that's I guess an end to our discussion as I am not interested in such nonsense.\n\n>> she gained an extra block over the honest strategy which would only give her block D\n>\n> I think I see what you're saying now. It actually sounds quite similar to the selfish mining attack in proof of work. However I do acknowledge that the ability to secretly mint on both your secret chain(s) and the public chain makes it worse in PoS. How much worse is something that should be quantified. This is also a solvable problem. Designing a secure system can be kind of like whack a mole. You fix the weakest link in the chain, and there is inevitably now a new weakest link that is stronger than the link you fixed. Bitcoin is no different, as development continues, more security improvements are implemented.\n>\n> In this case, there's a number of possible solutions, some of which can be combined. Eg you can program all honest clients to mint selfishly. You'd likely need to lengthen the number of blocks that constitute a finalized transaction, but you can probably reduce the block time to compensate, so finalization doesn't actually take longer. You could also require many additional signatures on each block from outside validators.\n\nHere you are just proving my case that \"typically, you fix something in PoS by creating a problem elsewhere\". This is exactly your \"whack a mole\" game you want to play, I don't. You've still misunderstood what I described it in my previous email. It has nothing to do with selfish mining. My attacker is not withholding the block from others, she just checks (almost instantly) if she can do better using different chain.\n\n>> How is that relevant to our discussion?\n>\n> It is relevant because the benefits of proof of stake must be compared to an alternative, and the alternative of reference here is clearly PoW. I'm pointing out that the vulnerability you're describing in the type of PoS you're talking about also exists in what its being compared against. To know whether PoS or PoW is better on this particular aspect, you need to compare the levels of advantage that can be obtained in each, and how this affects the cost of attacking the system. Its not as straight forward as saying \"PoS is bad because it has this vulnerability\" when the system you compare it to also has a very similar vulnerability. You need to quantify the difference at that point.\n\nSince you do not understand that the described attack has nothing to do with selfish mining, you are wrong here again. Bitcoin does not suffer from the problem of free block building on different parent blocks.\n\n>> the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system\n>\n> Known by public key, not by IP address.\n\nYou believe the analysis of the block origin is a hard problem, I believe contrary. Similar analyzes have been done on Bitcoin in the past. For me these quorum systems are thus not interesting because they are obviously vulnerable.\n\n> However, I do not agree that it is at all misleading to say \"nothing at stake is a solved problem\" just because solving that specific problem doesn't solve all the problems with proof of stake. Its unreasonable to expect that when someone claims problem X is solved, that it also implies all problems related to X are solved.\n\nNo one claimed that. I have described nothing at stake attack that you still don't understand and are unable to solve (without creating a huge problem elsewhere). You are, again, for unknown reason putting words into my mouth that I've not said.\n\n>> I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure.\n>\n> You were the one that claimed proof of stake cannot be made secure. The burden of proof is on you to support your own claims.\n\nLet me remind you the original text of yours where I entered the debate:\n\n> FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n\nAgain, you are putting words into my mouth that I have not said. This is either intentional deception from you or a great negligence. As you can see, I have entered the debate at the point where you falsely claimed \"nothing at stake problem is a solved problem\". That is the claim that you are supposed to prove. The burden of proof is on you. This is a very bold claim, contrary to general knowledge in the field, it claims that something that was not possible before is now possible. It is like if I said that \"cold fusion\" is a solved problem today. You'd say that it is not and I'd say - the burden of proof is on your side as you are claiming that \"cold fusion is impossible\".\n\nFortunately, this is not how it works.\n\n>> You have not described a system that would solve it\n>\n> I would be curious to hear a full critique from you about [this protocol](https://github.com/fresheneesz/ValidatedProofOfStake).\n\nI hope you can understand, that since I revealed great gaps in your technical knowledge, as well as problems in your ability to understand concepts related to PoS, as well as ability to discuss without fallacies (which is very annoying to be honest), I have no intention in spending my time on your creations anymore unless there is a significant community interest in your work, which I think is unlikely, but hey, prove me wrong.\n\nFor all above reasons, I will leave you here without further comments as the discussion can no longer be fruitful between us.\n\n> On Wed, May 26, 2021 at 3:12 AM befreeandopen <befreeandopen at protonmail.com> wrote:\n>\n>>> @befreeandopen I guess I misunderstood your selfish minting attack. Let me make sure I understand it. You're saying it would go as follows?:\n>>>\n>>> 1. The malicious actor comes across an opportunity to mint the next 3 blocks. But they hold off and don't release their blocks just yet.\n>>> 2. They receive a new block minted by someone else.\n>>> 3. The malicious actor then chooses to release their other 2 blocks on on the second from the top block if it gives them more blocks in the future than minting on the top block. And instead lets the top block proceed if it gives them more blocks in the future (also figuring in the 3 blocks they're missing out on minting).\n>>> 4. Profit!\n>>>\n>>> The problem with this attack is that any self respecting PoS system wouldn't have the information available for minters to know how blocks will affect their future prospects of minting. Otherwise this would introduce the problem of stake grinding. This can be done using collaborative randomness (where numbers from many parties are combined to create a random number that no individual party could predict). In fact, that's what the Casper protocol does to decide quorums. In a non quorum case, you can do something like record a hash of a number in the block header, and then have a second step to release that number later. Rewards can be given can be used to ensure minters act honestly here by minting messages that release these numbers and not releasing their secret numbers too early.\n>>\n>> Yes, you misunderstood it. First, let me say that the above thoughts of yours are incorrect, at least for non-quorum case. Since the transition in the blockchain system from S1 to S2 is only by adding new block, and since stakers always need to be able to decide whether or not they can add the next block, it follows that if a staker creates a new block locally, she can decide whether the new state allows her to add another block on top. As you mentioned, this COULD introduce problem of staking, that you are incorrect in that it is a necessity. Usual prevention of the grinding problem in this case is that an \"old enough\" source of randomness applies for the current block production process. Of course this, as it is typical for PoS, introduces other problems, but let's discard those.\n>>\n>> I will try to explain in detail what you misunderstood before. You start with a chain ending with blocks A-B-C, C being the top, the common feature of PoS system (non-quorum), roughly speaking, is that if N is the total amount of coins that participate in the staking process to create a new block on top of C (let's call that D), then a participant having K*N amount of stake has chance K to be the one who will create the next stake. In other words, the power of stakers is supposed to be linear in the system - you own 10 coins gives you 10x the chance of finding block over someone who has 1 coin.\n>>\n>> What i was claiming is that using the technique I have described, this linearity is violated. Why? Well, it works for honest stakers among the competition of honest stakers - they really do have the chance of K to find the next block. However, the attacker, using nothing at stake, checks her ability to build block D (at some timestamp). If she is successful, she does not propagate D immediately, but instead she also checks whether she can build on top of B and on top of A. Since with every new timestamp, usually, there is a new chance to build the block, it is not uncommon that she finds she is indeed able to build such block C' on top of B. Here it is likely t(C') > t(C) as the attacker has relatively low stake. Note that in order to produce such C', she not only could have tried the current timestamp t(D), but also all previous timestamps up to t(B) (usually that's the consensus rule, but it may depend on a specific consensus). So her chance to produce such C' is greater than her previous chance of producing C (which chance was limited by other stakers in the system and the discovery of block C by one of them). Now suppose that she found such C' and now she continues by trying to prolong this chain by finding D'. And again here, it is quite likely that her chance to find such D' is greater than was her chance of finding D because again there are likely multiple timestamps she could try. This all was possible just because nothing at stake allows you to just try if you can produce a block in certain state of block chain or not. Now if she actually was able to find D', she discards D and only publishes chain A-B-C'-D', which can not be punished despite the fact that she indeed produced two different forks. She can not be punished because this production was local and only the final result of A-B-C'-D' was published, in which case she gained an extra block over the honest strategy which would only give her block D.\n>>\n>>> Fun fact tho: there is an attack called the \"selfish mining attack\" for proof of work, and it reduces the security of PoW by [at least 1/3rd](https://bitcoinmagazine.com/technical/selfish-mining-a-25-attack-against-the-bitcoin-network-1383578440).\n>>\n>> How is that relevant to our discussion? This is known research that has nothing to do with PoS except that it is often worse on PoS.\n>>\n>>>> the problem is not as hard as you think\n>>>\n>>> I don't claim to know just how hard finding the IP address associated with a bitcoin address is. However, the DOS risk can be solved more completely by only allowing the owner of coins themselves to know whether they can mint a block. Eg by determining whether someone can mint a block based on their public key hidden behind hashes (as normal in addresses). Only when someone does in fact mint a block do they reveal their hidden public key in order to prove they are allowed to mint the block.\n>>\n>> This is true, but you are mixing quorum and non-quorum systems. My objection here was towards such system where I specifically said that the list of producers for next epoch is known up front and you confirmed that this is what you meant with \"quorum\" system. So in such system, I claimed, the known producer is the only target at any given point of time. This of course does not apply to any other type of system where future producers are not known. No need to dispute, again, something that was not claimed.\n>>\n>>>> I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message)\n>>>\n>>> I'm glad we agree there. Perhaps I misunderstood what you meant by \"you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere.\"\n>>\n>> Perhaps you should quote the full sentence and not just a part of it:\n>>\n>> \"Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\"\n>>\n>> You can parse this as: (CREATE PROBLEM ELSEWHERE) OR (NOT SOLVE IT COMPLETELY)\n>> In case of the punishment it was meant to be the not solve it completely part.\n>> Also \"typically\" does not imply always.\n>> But this parsing of English sentences for you seems very off topic here. My point is, in context of Bitcoin, reject such unsupported claims that PoS is a reasonable alternative to PoW, let's stick to that.\n>>\n>>>> As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake\n>>>\n>>> Well, if you're in the closed system of the cryptocurrency, sure. But we don't live in that closed system. Minters will earn some ROI from minting just like any other financial activity. Others may find more success spending their time doing things other than figuring out how to mint coins. In that case, they'll be able to earn more coin that they could later decide to use to mint blocks if they decide to.\n>>\n>> This only supports the point I was making. Since the optimal scenario with all existing coins participating is just theoretical, the attacker's position will ever so improve. It seems we are in agreement here, great.\n>>\n>>>> Just because of the above we must reject PoS as being critically insecure\n>>>\n>>> I think the only thing we can conclude from this is that you have come up with an insecure proof of stake protocol. I don't see how anything you've brought up amounts to substantial evidence that all possible PoS protocols are insecure.\n>>\n>> I have not come up with anything. I'm afraid you've not realized the burden of proof is on your side if you vouch for a design that is not believed and trusted to be secure. It is up to you to show that you know how to solve every problem that people throw at you. So far we have just demonstrated that your claim that nothing at stake is solved was unjustified. You have not described a system that would solve it (and not introduce critical DDOS attack vector as it is in quorum based systems - per the prior definition of such systems).\n>>\n>> Of course the list of problems of PoS systems do not end with just nothing at stake, but it is good enough example that by itself prevents its adoption in decentralized consensus. No need to go to other hard problems without solving nothing at stake.\n>>\n>>> On Tue, May 25, 2021 at 11:10 AM befreeandopen <befreeandopen at protonmail.com> wrote:\n>>>\n>>>>> @befreeandopen \" An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp.\"\n>>>>>\n>>>>> The scenario you describe would only be likely to happen at all if the malicious actor has a very large fraction of the stake - probably quite close to 50%. At that point, you're talking about a 51% attack, not the nothing at stake problem. The nothing at stake problem is the problem where anyone will mint on any chain. Its clear that if there's a substantial punishment for minting on chains other than the one that eventually wins, every minter without a significant fraction of the stake will be honest and not attempt to mint on old blocks or support someone else's attempt to mint on old blocks (until and if it becomes the heaviest chain). Because the attacker would need probably >45% of the active stake (take a look at the [reasoning here](https://github.com/fresheneesz/ValidatedProofOfStake#security-the-minimum-cost-of-attack) for a deeper analysis of that statement), I don't agree that punishment is not a sufficient mitigation of the nothing at stake problem. To exploit the nothing at stake problem, you basically need to 51% attack, at which point you've exceeded the operating conditions of the system, so of course its gonna have problems, just like a 51% attack would cause with PoW.\n>>>>\n>>>> This is not at all the case. The attacker benefits using the described technique at any size of the stake and significantly so with just 5% of the stake. By significantly, I do not mean that the attacker is able to completely take control the network (in short term), but rather that the attacker has significant advantage in the number of blocks she creates compared to what she \"should be able to create\". This means the attacker's stake increases significantly faster than of the honest nodes, which in long term is very serious in PoS system. If you believe close to 50% is needed for that, you need to redo your math. So no, you are wrong stating that \"to exploit nothing at stake problem you basically need to 51% attack\". It is rather the opposite - eventually, nothing at stake attack leads to ability to perform 51% attack.\n>>>>\n>>>>>> I am not sure if this is what you call quorum-based PoS\n>>>>>\n>>>>> Yes, pre-selected minters is exactly what I mean by that.\n>>>>>\n>>>>>> it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system\n>>>>>\n>>>>> Just like in bitcoin, associating keys with IP addresses isn't generally an easy thing to do on the fly like that. If you know someone's IP address, you can target them. But if you only know their address or public key, the reverse isn't as easy. With a quorum-based PoS system, you can see their public key and address, but finding out their IP to DOS would be a huge challenge I think.\n>>>>\n>>>> I do not dispute that the problem is not trivial, but the problem is not as hard as you think. The network graph analysis is a known technique and it is not trivial, but not very hard either. Introducing a large number of nodes to the system to achieve very good success rate of analysis of area of origin of blocks is doable and has been done in past. So again, I very much disagree with your conclusion that this is somehow secure. It is absolutely insecure.\n>>>>\n>>>>> Note, tho, that quorum-based PoS generally also have punishments as part of the protocol. The introduction of punishments do indeed handily solve the nothing at stake problem. And you didn't mention a single problem that the punishments introduce that weren't already there before punishments. There are tradeoffs with introducing punishments (eg in some cases you might punish honest actors), but they are minor in comparison to solving the nothing at stake problem.\n>>>>\n>>>> While I agree that introduction of punishment itself does not imply introducing a problem elsewhere (which I did not claim if you reread my previous message), it does introduce additional complexity which may introduce problem, but more importantly, while it slightly improves resistance against the nothing at stake attack, it solves absolutely nothing. Your claim is based on wrong claim of needed close to 50% stake, but that could not be farther from the truth. It is not true even in optimal conditions when all participants of the network stake or delegate their stake. These optimal conditions rarely, if ever, occur. And that's another thing that we have not mention in our debate, so please allow me to introduce another problem to PoS.\n>>>>\n>>>> Consider what is needed for such optimal conditions to occur - all coins are always part of the stake, which means that they need to somehow automatically part of the staking process even when they are moved. But in many PoS systems you usually require some age (in terms of confirmations) of the coin before you allow it to be used for participation in staking process and that is for a good reason - to prevent various grinding attacks. In some systems the coin must be specifically registered before it can be staked, in others, simply waiting for enough confirmations enables you to stake with the coin. I am not sure if there is a system which does not have this cooling period for a coin that has been moved. Maybe it is possible though, but AFAIK it is not common and not battle tested feature.\n>>>>\n>>>> Then if we admit that achieving the optimal condition is rather theoretical. Then if we do not have the optimal condition, it means that a staker with K% of the total available supply increases it's percentage over time to some amounts >K%. As long as the staker makes sure (which is not that hard) that she does not miss a chance to create a block, her significance in the system will always increase in time. It will increase relative to all normal users who do not stake (if there are any) and relative to all other stakers who make mistakes or who are not wealthy enough to afford not selling any position ever. But powerful attacker is exactly in such position and thus she will gain significance in such a system. The technique I have described, and that you mistakenly think is viable only with huge amounts of stake, only puts the attacker to even greater advantage. But even without the described attack (which exploits nothing at stake), the PoS system converges to a system more and more controlled by powerful entity, which we can assume is the attacker.\n>>>>\n>>>>> So I don't think it is at all misleading to claim that \"nothing at stake\" is a solved problem. I do in fact mean that the solutions to that problem don't introduce any other problems with anywhere near the same level of significance.\n>>>>\n>>>> It still stands as truly misleading claim. I disagree that introducing DDOS opportunity with medium level of difficulty for the attacker to implement it, in case of \"quorum-based PoS\" is not a problem anywhere near the same level of significance. Such an attack vector allows you to turn off the network if you spend some time and money. That is hardly acceptable.\n>>>>\n>>>> Just because of the above we must reject PoS as being critically insecure until someone invents and demonstrates an actual way of solving these issues.\n>>>>\n>>>>> On Tue, May 25, 2021 at 3:00 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>>\n>>>>>>> > you burn them to be used at a future particular block height\n>>>>>>\n>>>>>>> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>>>>\n>>>>>> could be right. the original idea was to have burns decay over time,\n>>>>>> like ASIC's.\n>>>>>>\n>>>>>> anyway the point was not that \"i had a magic formula\"\n>>>>>>\n>>>>>> the point was that proof of burn is almost always better than proof of\n>>>>>> stake - simply because the \"proof\" is on-chain, not sitting on a node\n>>>>>> somewhere waiting to be stolen.\n>>>>>>\n>>>>>> On Mon, May 24, 2021 at 9:53 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>>>>>\n>>>>>>> Is this the kind of proof of burn you're talking about?\n>>>>>>>\n>>>>>>> > if i have a choice between two chains, one longer and one shorter, i can only choose one... deterministically\n>>>>>>>\n>>>>>>> What prevents you from attempting to mine block 553 on both chains?\n>>>>>>>\n>>>>>>> > miners have a very strong, long-term, investment in the stability of the chain.\n>>>>>>>\n>>>>>>> Yes, but the same can be said of any coin, even ones that do have the nothing at stake problem. This isn't sufficient tho because the chain is a common good, and the tragedy of the commons holds for it.\n>>>>>>>\n>>>>>>> > you burn them to be used at a future particular block height\n>>>>>>>\n>>>>>>> This sounds exploitable. It seems like an attacker could simply focus all their burns on a particular set of 6 blocks to double spend, minimizing their cost of attack.\n>>>>>>>\n>>>>>>> > i can imagine scenarios where large stakeholders can collude to punish smaller stakeholders simply to drive them out of business, for example\n>>>>>>>\n>>>>>>> Are you talking about a 51% attack? This is possible in any decentralized cryptocurrency.\n>>>>>>>\n>>>>>>>\n>>>>>>> On Mon, May 24, 2021 at 11:49 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>>>>>\n>>>>>>>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>>>>>> > I'm fuzzy on how proof of burn works.\n>>>>>>>>\n>>>>>>>> when you burn coins, you burn them to be used at a future particular\n>>>>>>>> block height: so if i'm burning for block 553, i can only use them to\n>>>>>>>> mine block 553. if i have a choice between two chains, one longer\n>>>>>>>> and one shorter, i can only choose one... deterministically, for that\n>>>>>>>> burn: the chain with the height 553. if we fix the \"lead time\" for\n>>>>>>>> burned coins to be weeks or even months in advance, miners have a very\n>>>>>>>> strong, long-term, investment in the stability of the chain.\n>>>>>>>>\n>>>>>>>> therefore there is no \"nothing at stake\" problem. it's\n>>>>>>>> deterministic, so miners have no choice. they can *only* choose the\n>>>>>>>> transactions that go into the block. they cannot choose which chain\n>>>>>>>> to mine, and it's time-locked, so rollbacks and instability always\n>>>>>>>> hurt miners the most.\n>>>>>>>>\n>>>>>>>> the \"punishment\" systems of PoS are \"weird at best\", certainly\n>>>>>>>> unproven. i can imagine scenarios where large stakeholders can\n>>>>>>>> collude to punish smaller stakeholders simply to drive them out of\n>>>>>>>> business, for example. and then you have to put checks in place to\n>>>>>>>> prevent that, and more checks for those prevention system...\n>>>>>>>>\n>>>>>>>> in PoB, there is no complexity. simpler systems like this are\n>>>>>>>> typically more secure.\n>>>>>>>>\n>>>>>>>> PoB also solves problems caused by \"energy dependence\", which could\n>>>>>>>> lead to state monopolies on mining (like the new Bitcoin Mining\n>>>>>>>> Council). these consortiums, if state sanctioned, could become a\n>>>>>>>> source of censorship, for example. Since PoB doesn't require you to\n>>>>>>>> have a live, well-connected node, it's harder to censor & harder to\n>>>>>>>> trace.\n>>>>>>>>\n>>>>>>>> Eliminating this weakness seems to be in the best interests of\n>>>>>>>> existing stakeholders\n>>>>>>>>\n>>>>>>>>\n>>>>>>>>\n>>>>>>>>\n>>>>>>>> On Mon, May 24, 2021 at 4:44 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>>>>>>>> >\n>>>>>>>> > > proof of burn clearly solves this, since nothing is held online\n>>>>>>>> >\n>>>>>>>> > Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>>>>>>>> >\n>>>>>>>> > > your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>>>>>>>> >\n>>>>>>>> > So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>>>>>>>> >\n>>>>>>>> > > proof of burn can be more secure than proof-of-stake\n>>>>>>>> >\n>>>>>>>> > FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>>>>>>>> >\n>>>>>>>> >\n>>>>>>>> >\n>>>>>>>> > On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>>>>>>>> >>\n>>>>>>>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>>>>>> >>\n>>>>>>>> >> proof of burn clearly solves this, since nothing is held online\n>>>>>>>> >>\n>>>>>>>> >> > how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>>>>>>> >>\n>>>>>>>> >> definition of nothing at stake: in the event of a fork, whether the\n>>>>>>>> >> fork is accidental or a malicious, the optimal strategy for any miner\n>>>>>>>> >> is to mine on every chain, so that the miner gets their reward no\n>>>>>>>> >> matter which fork wins. indeed in proof-of-stake, the proofs are\n>>>>>>>> >> published on the very chains mines, so the incentive is magnified.\n>>>>>>>> >>\n>>>>>>>> >> in proof-of-burn, your burn investment is always \"at stake\", any\n>>>>>>>> >> redaction can result in a loss-of-burn, because burns can be tied,\n>>>>>>>> >> precisely, to block-heights\n>>>>>>>> >>\n>>>>>>>> >> as a result, miners no longer have an incentive to mine all chains\n>>>>>>>> >>\n>>>>>>>> >> in this way proof of burn can be more secure than proof-of-stake, and\n>>>>>>>> >> even more secure than proof of work\n>>>>>>>> >>\n>>>>>>>> >>\n>>>>>>>> >>\n>>>>>>>> >>\n>>>>>>>> >>\n>>>>>>>> >>\n>>>>>>>> >>\n>>>>>>>> >> >\n>>>>>>>> >>\n>>>>>>>> >> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>>>>>>>> >> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>>>> >> >\n>>>>>>>> >> > Hi Billy,\n>>>>>>>> >> >\n>>>>>>>> >> > I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>>>>>>>> >> > Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>>>>>>> >> >\n>>>>>>>> >> > Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>>>>>>>> >> > PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>>>>>>>> >> > In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>>>>>>>> >> > As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>>>>>>>> >> > At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>>>>>>>> >> > In PoS systems this clean separation of responsibilities does not exist.\n>>>>>>>> >> >\n>>>>>>>> >> > I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>>>>>>>> >> > People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>>>>>>>> >> > But the devil is in the detail.\n>>>>>>>> >> > Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>>>>>>>> >> >\n>>>>>>>> >> > ### Proof of SquareSpace (Cardano, Polkdadot)\n>>>>>>>> >> >\n>>>>>>>> >> > Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>>>>>>>> >> > In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>>>>>>>> >> > I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>>>>>>>> >> > On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>>>>>>>> >> >\n>>>>>>>> >> > 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>>>>>>>> >> >\n>>>>>>>> >> > 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>>>>>>>> >> >\n>>>>>>>> >> > 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>>>>>>>> >> > I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>>>>>>>> >> > In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>>>>>>>> >> >\n>>>>>>>> >> > There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>>>>>>>> >> > Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>>>>>>>> >> > It also grows the size of the blockchain significantly.\n>>>>>>>> >> >\n>>>>>>>> >> > ### \"Pure\" proof of stake (Algorand)\n>>>>>>>> >> >\n>>>>>>>> >> > Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>>>>>>>> >> > Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>>>>>>>> >> > Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>>>>>>>> >> > Hopefully you've spotted the problem.\n>>>>>>>> >> > You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>>>>>>>> >> > Damn it's still Proof-of-SquareSpace!\n>>>>>>>> >> > The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>>>>>>>> >> > Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>>>>>>>> >> >\n>>>>>>>> >> > ### Conclusion\n>>>>>>>> >> >\n>>>>>>>> >> > I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>>>>>>> >> > If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>>>>>>>> >> >\n>>>>>>>> >> > For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>>>>>>>> >> > After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>>>>>>>> >> > Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>>>>>>>> >> > For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>>>>>>>> >> >\n>>>>>>>> >> > I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>>>>>>>> >> >\n>>>>>>>> >> > Would be interested to know if you or others think differently on these points.\n>>>>>>>> >> >\n>>>>>>>> >> > [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>>>>>>> >> > [2]: https://staking.staked.us/algorand-staking\n>>>>>>>> >> > [3]: https://eprint.iacr.org/2017/573.pdf\n>>>>>>>> >> > [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>>>>>>> >> > [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>>>>>>> >> >\n>>>>>>>> >> > Cheers,\n>>>>>>>> >> >\n>>>>>>>> >> > LL\n>>>>>>>> >> >\n>>>>>>>> >> > On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>>>> >> >>\n>>>>>>>> >> >> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>>>>>>> >> >>\n>>>>>>>> >> >> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>>>>>>>> >> >> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>>>>>>>> >> >> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>>>>>>>> >> >> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>>>>>>>> >> >> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>>>>>>> >> >>\n>>>>>>>> >> >> > Proof-of-stake tends towards oligopolistic control\n>>>>>>>> >> >>\n>>>>>>>> >> >> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>>>>>>> >> >>\n>>>>>>>> >> >> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>>>>>>> >> >>\n>>>>>>>> >> >> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>>>>>>> >> >>\n>>>>>>>> >> >> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>>>>>>> >> >>\n>>>>>>>> >> >> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>>>>>>> >> >>\n>>>>>>>> >> >> > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>>>>>>> >> >>\n>>>>>>>> >> >> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>>>>>>> >> >>\n>>>>>>>> >> >> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>>>>>>> >> >>\n>>>>>>>> >> >> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>>>>>>> >> >>\n>>>>>>>> >> >> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>>>>>>> >> >>\n>>>>>>>> >> >> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>>>>>>> >> >>\n>>>>>>>> >> >>\n>>>>>>>> >> >> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>>>> >> >>>\n>>>>>>>> >> >>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>>>>>> >> >>>\n>>>>>>>> >> >>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>> Cheers,\n>>>>>>>> >> >>>> Mike\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>>>> >> >>>>>\n>>>>>>>> >> >>>>> 1. i never suggested vdf's to replace pow.\n>>>>>>>> >> >>>>>\n>>>>>>>> >> >>>>> 2. my suggestion was specifically *in the context of* a working\n>>>>>>>> >> >>>>> proof-of-burn protocol\n>>>>>>>> >> >>>>>\n>>>>>>>> >> >>>>> - vdfs used only for timing (not block height)\n>>>>>>>> >> >>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>>>>>> >> >>>>> - the required \"work\" per block would simply be a competition to\n>>>>>>>> >> >>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>>>>>> >> >>>>> advance, and hope that their burned coins got rewarded in some far\n>>>>>>>> >> >>>>> future\n>>>>>>>> >> >>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>>>>>> >> >>>>> value gained from proof of work... without some of the security\n>>>>>>>> >> >>>>> drawbacks\n>>>>>>>> >> >>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>>>>>> >> >>>>> losing their work in each block)\n>>>>>>>> >> >>>>> - new burns can't be used\n>>>>>>>> >> >>>>> - old burns age out (like ASICs do)\n>>>>>>>> >> >>>>> - other requirements on burns might be needed to properly mirror the\n>>>>>>>> >> >>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>>>>> >> >>>>>\n>>>>>>>> >> >>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>>>>>> >> >>>>> might be more secure in the long run, and that if the entire space\n>>>>>>>> >> >>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>>>>>> >> >>>>> up, and a hard-fork could be initiated.\n>>>>>>>> >> >>>>>\n>>>>>>>> >> >>>>> 4. i would never suggest such a thing unless i believed it was\n>>>>>>>> >> >>>>> possible that consensus was possible. so no, this is not an \"alt\n>>>>>>>> >> >>>>> coin\"\n>>>>>>>> >> >>>>>\n>>>>>>>> >> >>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>>>>>> >> >>>>> >\n>>>>>>>> >> >>>>> > Hi ZmnSCPxj,\n>>>>>>>> >> >>>>> >\n>>>>>>>> >> >>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>>>>>> >> >>>>> >\n>>>>>>>> >> >>>>> > Zac\n>>>>>>>> >> >>>>> >\n>>>>>>>> >> >>>>> >\n>>>>>>>> >> >>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>>>>>> >> >>>>> >>\n>>>>>>>> >> >>>>> >> Good morning Zac,\n>>>>>>>> >> >>>>> >>\n>>>>>>>> >> >>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>>>>>> >> >>>>> >> >\n>>>>>>>> >> >>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>>>>>> >> >>>>> >> >\n>>>>>>>> >> >>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>>>>>> >> >>>>> >> >\n>>>>>>>> >> >>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>>>>>> >> >>>>> >>\n>>>>>>>> >> >>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>>>>>> >> >>>>> >>\n>>>>>>>> >> >>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>>>>>> >> >>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>>>>>> >> >>>>> >>\n>>>>>>>> >> >>>>> >> Regards,\n>>>>>>>> >> >>>>> >> ZmnSCPxj\n>>>>>>>> >> >>>>> _______________________________________________\n>>>>>>>> >> >>>>> bitcoin-dev mailing list\n>>>>>>>> >> >>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>>>> >> >>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>>\n>>>>>>>> >> >>>> --\n>>>>>>>> >> >>>> Michael Dubrovsky\n>>>>>>>> >> >>>> Founder; PoWx\n>>>>>>>> >> >>>> www.PoWx.org\n>>>>>>>> >> >>>\n>>>>>>>> >> >>>\n>>>>>>>> >> >>>\n>>>>>>>> >> >>> --\n>>>>>>>> >> >>> Michael Dubrovsky\n>>>>>>>> >> >>> Founder; PoWx\n>>>>>>>> >> >>> www.PoWx.org\n>>>>>>>> >> >>> _______________________________________________\n>>>>>>>> >> >>> bitcoin-dev mailing list\n>>>>>>>> >> >>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>>>> >> >>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>>>> >> >>\n>>>>>>>> >> >> _______________________________________________\n>>>>>>>> >> >> bitcoin-dev mailing list\n>>>>>>>> >> >> bitcoin-dev at lists.linuxfoundation.org\n>>>>>>>> >> >> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>>>> >> >\n>>>>>>>> >> > _______________________________________________\n>>>>>>>> >> > bitcoin-dev mailing list\n>>>>>>>> >> > bitcoin-dev at lists.linuxfoundation.org\n>>>>>>>> >> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210528/e372e14d/attachment-0001.html>"
            },
            {
                "author": "befreeandopen",
                "date": "2021-05-25T08:22:42",
                "message_text_only": "> FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n\nThis misleading statement. Nothing at stake problem is just about as solved for PoS as scaling. Of course you can always change the rules in a way that a certain specific attack is not doable, but you should not omit to mention that by doing so, typically, you have introduced another problem elsewhere, or you have not solved it completely.\n\nIn case of punishment, it is the latter case - it does not solve nothing at stake problem, it only reduces some instances of it, but the core problem persists. It does because the minter (the one who stakes) is not forced to publish his block and can stake selfishly. This matters because such an attacker can stake selfishly on any prior history of the chain. Imagine there is a new block coming from what is called main chain. An attacker can calculate whether or not she can prolong this chain or not and if so with what timestamp. Usually she can perform this calculation for not just one block ahead, but two, three ... So she knows the time schedule for the chain she can built on the top. But not only she can do that on the top of the main chain, but on the top of the second block from the top on the main chain. Should she find that building on shorter chain gives her more blocks in the nearest future, she will avoid to prolong the longest chain - and this is where she avoids the punishment - and instead she creates two or more blocks on a historic block and thus she successfully executes nothing at stake attack.\n\nThis shows that while the punishment requires the attack to be slightly modified, and this modification does slightly lower the expected profit of it, it is still a viable attack that is profitable and is not at all prevented by punishment logic. On the downside of punishment logic you have the complexity of implementation of such code, which is non-trivial. So it is an open question whether the punishment mechanism is even worth implementing at all. If it is, the benefit is small and does not mitigate nothing at stake attack.\n\nAnother way to \"prevent\" nothing at stake attack is to have \"rounds\" or \"epochs\" for which minters are pre-selected, usually in random order and so it is obvious who can mine at which time upfront and no one else can. I am not sure if this is what you call quorum-based PoS. Anyway, this setup mitigates nothing at stake, but - as per my claim above - it introduces a problem elsewhere. Here it allows the attacker to know who to attack at which point with powerful DDOS in order to hurt liveness of such system. In systems where anyone can come up with the next block, it is difficult to perform such DDOS because you need to perform it against everyone. In this setup, however, you have one target at the time. Moreover, when it is your turn to act, you can delay your block creation up to the end of the slot, creating a race condition in the consensus that is hard to solve. Again, this is not trivial to get right and is often vulnerable to attacks.\n\nSo while you can claim that the \"naive nothing at stake attack\" is solved today, in general, it is not solved and claiming it is very misleading. It is a natural problem to PoS that each system that exists today tries to tackle somehow and I am not aware of any system that would actually solve it without not introducing a problem elsewhere (this could include DoS, centralization, and other kinds). It is all about choosing your tradeoffs but there is no solution to nothing at stake I am aware of that would be without critical tradeoffs.\n\n\u2010\u2010\u2010\u2010\u2010\u2010\u2010 Original Message \u2010\u2010\u2010\u2010\u2010\u2010\u2010\nOn Monday, May 24, 2021 9:43 PM, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n\n>> proof of burn clearly solves this, since nothing is held online\n>\n> Well.. the coins to be burned need to be online when they're burned. But yes, only a small fraction of the total coins need to be online.\n>\n>> your burn investment is always \"at stake\", any redaction can result in a loss-of-burn, because burns can be tied, precisely, to block-heights\n>\n> So you're saying that if say someone tries to mine a block on a shorter chain, that requires them to send a transaction burning their coins, and that transaction could also be spent on the longest chain, which means their coins are burned even if the chain they tried to mine on doesn't win? I'm fuzzy on how proof of burn works.\n>\n>> proof of burn can be more secure than proof-of-stake\n>\n> FYI, proof of stake can be done without the \"nothing at stake\" problem. You can simply punish people who mint on shorter chains (by rewarding people who publish proofs of this happening on the main chain). In quorum-based PoS, you can punish people in the quorum that propose or sign multiple blocks for the same height. The \"nothing at stake\" problem is a solved problem at this point for PoS.\n>\n> On Mon, May 24, 2021 at 3:47 AM Erik Aronesty <erik at q32.com> wrote:\n>\n>>> I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>\n>> proof of burn clearly solves this, since nothing is held online\n>>\n>>> how does proof of burn solve the \"nothing at stake\" problem in your view?\n>>\n>> definition of nothing at stake: in the event of a fork, whether the\n>> fork is accidental or a malicious, the optimal strategy for any miner\n>> is to mine on every chain, so that the miner gets their reward no\n>> matter which fork wins. indeed in proof-of-stake, the proofs are\n>> published on the very chains mines, so the incentive is magnified.\n>>\n>> in proof-of-burn, your burn investment is always \"at stake\", any\n>> redaction can result in a loss-of-burn, because burns can be tied,\n>> precisely, to block-heights\n>>\n>> as a result, miners no longer have an incentive to mine all chains\n>>\n>> in this way proof of burn can be more secure than proof-of-stake, and\n>> even more secure than proof of work\n>>\n>>>\n>>\n>> On Sun, May 23, 2021 at 3:52 AM Lloyd Fournier via bitcoin-dev\n>> <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>\n>>> Hi Billy,\n>>>\n>>> I was going to write a post which started by dismissing many of the weak arguments that are made against PoS made in this thread and elsewhere.\n>>> Although I don't agree with all your points you have done a decent job here so I'll focus on the second part: why I think Proof-of-Stake is inappropriate for a Bitcoin-like system.\n>>>\n>>> Proof of stake is not fit for purpose for a global settlement layer in a pure digital asset (i.e. \"digital gold\") which is what Bitcoin is trying to be.\n>>> PoS necessarily gives responsibilities to the holders of coins that they do not want and cannot handle.\n>>> In Bitcoin, large unsophisticated coin holders can put their coins in cold storage without a second thought given to the health of the underlying ledger.\n>>> As much as hardcore Bitcoiners try to convince them to run their own node, most don't, and that's perfectly acceptable.\n>>> At no point do their personal decisions affect the underlying consensus -- it only affects their personal security assurance (not that of the system itself).\n>>> In PoS systems this clean separation of responsibilities does not exist.\n>>>\n>>> I think that the more rigorously studied PoS protocols will work fine within the security claims made in their papers.\n>>> People who believe that these protocols are destined for catastrophic consensus failure are certainly in for a surprise.\n>>> But the devil is in the detail.\n>>> Let's look at what the implications of using the leading proof of stake protocols would have on Bitcoin:\n>>>\n>>> ### Proof of SquareSpace (Cardano, Polkdadot)\n>>>\n>>> Cardano is a UTXO based PoS coin based on Ouroboros Praos[3] with an inbuilt on-chain delegation system[5].\n>>> In these protocols, coin holders who do not want to run their node with their hot keys in it delegate it to a \"Stake Pool\".\n>>> I call the resulting system Proof-of-SquareSpace since most will choose a pool by looking around for one with a nice website and offering the largest share of the block reward.\n>>> On the surface this might sound no different than someone with an mining rig shopping around for a good mining pool but there are crucial differences:\n>>>\n>>> 1. The person making the decision is forced into it just because they own the currency -- someone with a mining rig has purchased it with the intent to make profit by participating in consensus.\n>>>\n>>> 2. When you join a mining pool your systems are very much still online. You are just partaking in a pool to reduce your profit variance. You still see every block that you help create and *you never help create a block without seeing it first*.\n>>>\n>>> 3. If by SquareSpace sybil attack you gain a dishonest majority and start censoring transactions how are the users meant to redelegate their stake to honest pools?\n>>> I guess they can just send a transaction delegating to another pool...oh wait I guess that might be censored too! This seems really really bad.\n>>> In Bitcoin, miners can just join a different pool at a whim. There is nothing the attacker can do to stop them. A temporary dishonest majority heals relatively well.\n>>>\n>>> There is another severe disadvantage to this on-chain delegation system: every UTXO must indicate which staking account this UTXO belongs to so the appropriate share of block rewards can be transferred there.\n>>> Being able to associate every UTXO to an account ruins one of the main privacy advantages of the UTXO model.\n>>> It also grows the size of the blockchain significantly.\n>>>\n>>> ### \"Pure\" proof of stake (Algorand)\n>>>\n>>> Algorand's[4] approach is to only allow online stake to participate in the protocol.\n>>> Theoretically, This means that keys holding funds have to be online in order for them to author blocks when they are chosen.\n>>> Of course in reality no one wants to keep their coin holding keys online so in Alogorand you can authorize a set of \"participation keys\"[1] that will be used to create blocks on your coin holding key's behalf.\n>>> Hopefully you've spotted the problem.\n>>> You can send your participation keys to any malicious party with a nice website (see random example [2]) offering you a good return.\n>>> Damn it's still Proof-of-SquareSpace!\n>>> The minor advantage is that at least the participation keys expire after a certain amount of time so eventually the SquareSpace attacker will lose their hold on consensus.\n>>> Importantly there is also less junk on the blockchain because the participation keys are delegated off-chain and so are not making as much of a mess.\n>>>\n>>> ### Conclusion\n>>>\n>>> I don't see a way to get around the conflicting requirement that the keys for large amounts of coins should be kept offline but those are exactly the coins we need online to make the scheme secure.\n>>> If we allow delegation then we open up a new social attack surface and it degenerates to Proof-of-SquareSpace.\n>>>\n>>> For a \"digital gold\" like system like Bitcoin we optimize for simplicity and desperately want to avoid extraneous responsibilities for the holder of the coin.\n>>> After all, gold is an inert element on the periodic table that doesn't confer responsibilities on the holder to maintain the quality of all the other bars of gold out there.\n>>> Bitcoin feels like this too and in many ways is more inert and beautifully boring than gold.\n>>> For Bitcoin to succeed I think we need to keep it that way and Proof-of-Stake makes everything a bit too exciting.\n>>>\n>>> I suppose in the end the market will decide what is real digital gold and whether these bad technical trade offs are worth being able to say it uses less electricity. It goes without saying that making bad technical decisions to appease the current political climate is an anathema to Bitcoin.\n>>>\n>>> Would be interested to know if you or others think differently on these points.\n>>>\n>>> [1]: https://developer.algorand.org/docs/run-a-node/participate/generate_keys/\n>>> [2]: https://staking.staked.us/algorand-staking\n>>> [3]: https://eprint.iacr.org/2017/573.pdf\n>>> [4]: https://algorandcom.cdn.prismic.io/algorandcom%2Fece77f38-75b3-44de-bc7f-805f0e53a8d9_theoretical.pdf\n>>> [5]: https://hydra.iohk.io/build/790053/download/1/delegation_design_spec.pdf\n>>>\n>>> Cheers,\n>>>\n>>> LL\n>>>\n>>> On Fri, 21 May 2021 at 19:21, Billy Tetrud via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>\n>>>> I think there is a lot of misinformation and bias against Proof of Stake. Yes there have been lots of shady coins that use insecure PoS mechanisms. Yes there have been massive issues with distribution of PoS coins (of course there have also been massive issues with PoW coins as well). However, I want to remind everyone that there is a difference between \"proved to be impossible\" and \"have not achieved recognized success yet\". Most of the arguments levied against PoS are out of date or rely on unproven assumptions or extrapolation from the analysis of a particular PoS system. I certainly don't think we should experiment with bitcoin by switching to PoS, but from my research, it seems very likely that there is a proof of stake consensus protocol we could build that has substantially higher security (cost / capital required to execute an attack) while at the same time costing far less resources (which do translate to fees on the network) *without* compromising any of the critical security properties bitcoin relies on. I think the critical piece of this is the disagreements around hardcoded checkpoints, which is a critical piece solving attacks that could be levied on a PoS chain, and how that does (or doesn't) affect the security model.\n>>>>\n>>>> @Eric Your proof of stake fallacy seems to be saying that PoS is worse when a 51% attack happens. While I agree, I think that line of thinking omits important facts:\n>>>> * The capital required to 51% attack a PoS chain can be made substantially greater than on a PoS chain.\n>>>> * The capital the attacker stands to lose can be substantially greater as well if the attack is successful.\n>>>> * The effectiveness of paying miners to raise the honest fraction of miners above 50% may be quite bad.\n>>>> * Allowing a 51% attack is already unacceptable. It should be considered whether what happens in the case of a 51% may not be significantly different. The currency would likely be critically damaged in a 51% attack regardless of consensus mechanism.\n>>>>\n>>>> > Proof-of-stake tends towards oligopolistic control\n>>>>\n>>>> People repeat this often, but the facts support this. There is no centralization pressure in any proof of stake mechanism that I'm aware of. IE if you have 10 times as much coin that you use to mint blocks, you should expect to earn 10x as much minting revenue - not more than 10x. By contrast, proof of work does in fact have clear centralization pressure - this is not disputed. Our goal in relation to that is to ensure that the centralization pressure remains insignifiant. Proof of work also clearly has a lot more barriers to entry than any proof of stake system does. Both of these mean the tendency towards oligopolistic control is worse for PoW.\n>>>>\n>>>> > Energy usage, in-and-of-itself, is nothing to be ashamed of!!\n>>>>\n>>>> I certainly agree. Bitcoin's energy usage at the moment is I think quite warranted. However, the question is: can we do substantially better. I think if we can, we probably should... eventually.\n>>>>\n>>>> > Proof of Stake is only resilient to \u2153 of the network demonstrating a Byzantine Fault, whilst Proof of Work is resilient up to the \u00bd threshold\n>>>>\n>>>> I see no mention of this in the pos.pdf you linked to. I'm not aware of any proof that all PoS systems have a failure threshold of 1/3. I know that staking systems like Casper do in fact have that 1/3 requirement. However there are PoS designs that should exceed that up to nearly 50% as far as I'm aware. Proof of work is not in fact resilient up to the 1/2 threshold in the way you would think. IE, if 100% of miners are currently honest and have a collective 100 exahashes/s hashpower, an attacker does not need to obtain 100 exahashes/s, but actually only needs to accumulate 50 exahashes/s. This is because as the attacker accumulates hashpower, it drives honest miners out of the market as the difficulty increases to beyond what is economically sustainable. Also, its been shown that the best proof of work can do is require an attacker to obtain 33% of the hashpower because of the selfish mining attack discussed in depth in this paper: https://arxiv.org/abs/1311.0243. Together, both of these things reduce PoW's security by a factor of about 83% (1 - 50%*33%).\n>>>>\n>>>> > Proof of Stake requires other trade-offs which are incompatible with Bitcoin's objective (to be a trustless digital cash) \u2014 specifically the famous \"security vs. liveness\" guarantee\n>>>>\n>>>> Do you have a good source that talks about why you think proof of stake cannot be used for a trustless digital cash?\n>>>>\n>>>> > You cannot gain tokens without someone choosing to give up those coins - a form of permission.\n>>>>\n>>>> This is not a practical constraint. Just like in mining, some nodes may reject you, but there will likely be more that will accept you, some sellers may reject you, but most would accept your money as payment for bitcoins. I don't think requiring the \"permission\" of one of millions of people in the market can be reasonably considered a \"permissioned currency\".\n>>>>\n>>>> > 2. Proof of stake must have a trusted means of timestamping to regulate overproduction of blocks\n>>>>\n>>>> Both PoW and PoS could mine/mint blocks twice as fast if everyone agreed to double their clock speeds. Both systems rely on an honest majority sticking to standard time.\n>>>>\n>>>>\n>>>> On Wed, May 19, 2021 at 5:32 AM Michael Dubrovsky via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>\n>>>>> Ah sorry, I didn't realize this was, in fact, a different thread! :)\n>>>>>\n>>>>> On Wed, May 19, 2021 at 10:07 AM Michael Dubrovsky <mike at powx.org> wrote:\n>>>>>>\n>>>>>> Folks, I suggest we keep the discussion to PoW, oPoW, and the BIP itself. PoS, VDFs, and so on are interesting but I guess there are other threads going on these topics already where they would be relevant.\n>>>>>>\n>>>>>> Also, it's important to distinguish between oPoW and these other \"alternatives\" to Hashcash. oPoW is a true Proof of Work that doesn't alter the core game theory or security assumptions of Hashcash and actually contains SHA (can be SHA3, SHA256, etc hash is interchangeable).\n>>>>>>\n>>>>>> Cheers,\n>>>>>> Mike\n>>>>>>\n>>>>>> On Tue, May 18, 2021 at 4:55 PM Erik Aronesty via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>>>>>\n>>>>>>> 1. i never suggested vdf's to replace pow.\n>>>>>>>\n>>>>>>> 2. my suggestion was specifically *in the context of* a working\n>>>>>>> proof-of-burn protocol\n>>>>>>>\n>>>>>>> - vdfs used only for timing (not block height)\n>>>>>>> - blind-burned coins of a specific age used to replace proof of work\n>>>>>>> - the required \"work\" per block would simply be a competition to\n>>>>>>> acquire rewards, and so miners would have to burn coins, well in\n>>>>>>> advance, and hope that their burned coins got rewarded in some far\n>>>>>>> future\n>>>>>>> - the point of burned coins is to mimic, in every meaningful way, the\n>>>>>>> value gained from proof of work... without some of the security\n>>>>>>> drawbacks\n>>>>>>> - the miner risks losing all of his burned coins (like all miners risk\n>>>>>>> losing their work in each block)\n>>>>>>> - new burns can't be used\n>>>>>>> - old burns age out (like ASICs do)\n>>>>>>> - other requirements on burns might be needed to properly mirror the\n>>>>>>> properties of PoW and the incentives Bitcoin uses to mine honestly.\n>>>>>>>\n>>>>>>> 3. i do believe it is *possible* that a \"burned coin + vdf system\"\n>>>>>>> might be more secure in the long run, and that if the entire space\n>>>>>>> agreed that such an endeavor was worthwhile, a test net could be spun\n>>>>>>> up, and a hard-fork could be initiated.\n>>>>>>>\n>>>>>>> 4. i would never suggest such a thing unless i believed it was\n>>>>>>> possible that consensus was possible. so no, this is not an \"alt\n>>>>>>> coin\"\n>>>>>>>\n>>>>>>> On Tue, May 18, 2021 at 10:02 AM Zac Greenwood <zachgrw at gmail.com> wrote:\n>>>>>>> >\n>>>>>>> > Hi ZmnSCPxj,\n>>>>>>> >\n>>>>>>> > Please note that I am not suggesting VDFs as a means to save energy, but solely as a means to make the time between blocks more constant.\n>>>>>>> >\n>>>>>>> > Zac\n>>>>>>> >\n>>>>>>> >\n>>>>>>> > On Tue, 18 May 2021 at 12:42, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n>>>>>>> >>\n>>>>>>> >> Good morning Zac,\n>>>>>>> >>\n>>>>>>> >> > VDFs might enable more constant block times, for instance by having a two-step PoW:\n>>>>>>> >> >\n>>>>>>> >> > 1. Use a VDF that takes say 9 minutes to resolve (VDF being subject to difficulty adjustments similar to the as-is). As per the property of VDFs, miners are able show proof of work.\n>>>>>>> >> >\n>>>>>>> >> > 2. Use current PoW mechanism with lower difficulty so finding a block takes 1 minute on average, again subject to as-is difficulty adjustments.\n>>>>>>> >> >\n>>>>>>> >> > As a result, variation in block times will be greatly reduced.\n>>>>>>> >>\n>>>>>>> >> As I understand it, another weakness of VDFs is that they are not inherently progress-free (their sequential nature prevents that; they are inherently progress-requiring).\n>>>>>>> >>\n>>>>>>> >> Thus, a miner which focuses on improving the amount of energy that it can pump into the VDF circuitry (by overclocking and freezing the circuitry), could potentially get into a winner-takes-all situation, possibly leading to even *worse* competition and even *more* energy consumption.\n>>>>>>> >> After all, if you can start mining 0.1s faster than the competition, that is a 0.1s advantage where *only you* can mine *in the entire world*.\n>>>>>>> >>\n>>>>>>> >> Regards,\n>>>>>>> >> ZmnSCPxj\n>>>>>>> _______________________________________________\n>>>>>>> bitcoin-dev mailing list\n>>>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>>>\n>>>>>>\n>>>>>>\n>>>>>> --\n>>>>>> Michael Dubrovsky\n>>>>>> Founder; PoWx\n>>>>>> www.PoWx.org\n>>>>>\n>>>>>\n>>>>>\n>>>>> --\n>>>>> Michael Dubrovsky\n>>>>> Founder; PoWx\n>>>>> www.PoWx.org\n>>>>> _______________________________________________\n>>>>> bitcoin-dev mailing list\n>>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/8ef07166/attachment-0001.html>"
            }
        ],
        "thread_summary": {
            "title": "Opinion on proof of stake in future",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Karl",
                "Eric Martindale",
                "honest69abe",
                "Michael Dubrovsky",
                "Keagan McClelland",
                "befreeandopen",
                "Lloyd Fournier",
                "Cloud Strife",
                "Erik Aronesty",
                "vizeet srivastava",
                "Eric Voskuil",
                "Jeremy",
                "SatoshiSingh",
                "ZmnSCPxj",
                "Zac Greenwood",
                "Prayank",
                "R E Broadley",
                "LORD HIS EXCELLENCY JAMES HRMH",
                "Billy Tetrud"
            ],
            "messages_count": 48,
            "total_messages_chars_count": 755244
        }
    },
    {
        "title": "[bitcoin-dev] Proposal for an Informational BIP",
        "thread_messages": [
            {
                "author": "BitPLATES\u00ae (Chris)",
                "date": "2021-05-08T15:21:51",
                "message_text_only": "Hi,\n\nI'd like to submit an idea for review, as a potential informational BIP\n(Bitcoin Improvement Proposal), describing an optional method of producing\na BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n\nThe idea specifically refers to a method of introducing two-factor\nauthentication, to protect a Bitcoin wallet using only 24 seed words, and\ntherefore, providing plausible deniability about the existence of this\nseparate 2nd layer passphrase.\n\nI've suggested the name 'quantum' passphrase to be used casually as a\nunique identifier.\n\nThe data stored within a 'quantum' passphrase, is simultaneously the\nminimum required data for reproducing a BIP39-compatible 24-word seed\nmnemonic... hence, the name 'quantum' seems fitting, to reflect the\nmultiple simultaneous states of data.\n\nAbstract...\n\nThis improvement proposal describes the use of twenty four, newly generated\nBIP39 seed words, to produce a '25th-word' BIP39-compatible 'quantum'\npassphrase.\n\nTwo-factor authentication (2FA) or (2 of 2 multi-signature) can be\nimplemented with a two-wallet setup:\n\nThe 1st Bitcoin wallet is protected by the seed words of the 2nd Bitcoin\nwallet; inversely, the 2nd Bitcoin wallet is protected by the seed words of\nthe 1st Bitcoin wallet.\n\nThe 'quantum' passphrase offers an exponential increase in the level of\nprotection, as that offered by the original BIP39 mnemonic seed words\n(\u22482048^23 possible combinations).\n\nie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected by\n2048^23 to the power of 2048^23 possible combinations.\n\nWith existing computer capabilities, this level of protection is far\ngreater than required; however, this does provide a sufficient level of\nprotection for each separate layer of a two-factor Bitcoin wallet, should\nany one layer be accidentally exposed.\n\nThis method of passphrase generation, consists of two parts:\n\n1st - generating the BIP39 mnemonic seed words, using a BIP39-compatible\nhardware wallet.\n\n2nd - Converting these seed words into the 'quantum' passphrase, following\nfour simple rules, which most importantly, do not destroy the integrity of\nthe initial data.\n\nMotivation...\n\nThe well established practice of preserving up to 24 seed words for the\npurpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\nExposure of these mnemonic seed words can cause catastrophic loss of funds\nwithout adequate multi-factor protection.\n\nWhilst it is recognised that a number of multi-factor solutions are\navailable (including the standard BIP39 passphrase, and hardware wallet\nmulti-signature functionality), this proposal aims to provide an extremely\nsafe and secure 'low-tech' option, that requires minimal (non-destructive)\nadjustments to the seed words.\n\nFurthermore, the 'quantum' passphrase offers a number advantages over the\nexisting methods of multi-factor protection:\n\nFirstly, this method of creating a passphrase leaves no evidence of its\nexistence on any backup devices, providing plausible deniability in case of\ncoercion.\n\nThis is because the passphrase is easily created from a genuine 24 seed\nword mnemonic; therefore, the physical backup of the passphrase can be\ndisguised as a simple Bitcoin wallet on a metal backup plate.\n\nIt presents a way of discouraging user-created words or sentences (also\nknown as 'brain-wallets'), which often provide a drastically reduced level\nof passphrase security, unbeknown to many users.\n\nThe large amount of data required to produce a 'quantum' passphrase (up to\n96 characters long), encourages the physical backup of the passphrase.\n\nFurthermore, the use of BIP39-only words provides a higher degree of\nstandardization, which can help to avoid potential mistakes made by\ncreating unnecessarily complicated combinations of letters, numbers and\nsymbols. Increased complication (disorderly, and non-human-friendly), does\nnot always equal increased complexity (orderly, and more human-friendly),\nor increased security.\n\nAs previously mentioned, a two-wallet configuration provides the user an\nopportunity to safely split the two factors of protection (equivalent to a\n2 of 2 'multi-sig' setup).\n\nIf a BIP39-compatible passphrase is created using a new set of 24 seed\nwords, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n10\u2077\u2076 possible combinations of words).\n\nThe strength of this 2nd factor solution, provides adequate\nrisk-management, when considering the production of multiple backup\ndevices, strategically stored in multiple geographical locations.\n\nGenerating the 'quantum' passphrase...\n\nFollowing just four (non-destructive) BIP39-compatible rules, the 24 seed\nwords can also function as a 'quantum' passphrase:\n\n1 . Only BIP39 words\n(Standard list of 2048 English words - other languages should be compatible)\n\n2 . Only the first four letters of each word\n(BIP39 words require only this data for reproduction)\n\n3 . Only upper case letters\n(All alphabet references use this standard format)\n\n4 . No spaces between words\n(Spaces represent an additional unit of data, that is not recorded)\n\nIn essence, the 'quantum' passphrase is simply a single string of all 24\nseed words, set out using the above rules.\n\nI welcome a productive technical discussion.\n\nThanks,\n\nChris Johnston\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210508/1e640f69/attachment-0001.html>"
            },
            {
                "author": "Tobias Kaupat",
                "date": "2021-05-09T07:24:28",
                "message_text_only": "Hello Chris,\nIsn't your suggestion already covered by BIP39 since there is not\nrestriction in how you choose your passphrase?\n\nIt's up to any user to choose his password like you propose. I see your\nproposal more like a way to choose my password rather than anything that\nneeds to be implemented somewhere.\n\nDon't I have plausible deniability already with any other password that I\nkeep in mind, since the seed without the password is already a valid\naddress?\n\nOne issue might be, that the passphrase is part of the mnemonic. A hardware\nwallet needs the passphrase to generate the complete mnemonic (changing the\npassword does change the resulting seed). Thus you get a chicken-egg\nproblem, at least for some implementations. Probably you could use the\nrestore feature to work around this - but it's one step more that should be\nmentioned.\n\n\nKind regards\nTobias\n\n\n\n\nBitPLATES\u00ae (Chris) via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>\nschrieb am Sa., 8. Mai 2021, 17:21:\n\n> Hi,\n>\n> I'd like to submit an idea for review, as a potential informational BIP\n> (Bitcoin Improvement Proposal), describing an optional method of producing\n> a BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n>\n> The idea specifically refers to a method of introducing two-factor\n> authentication, to protect a Bitcoin wallet using only 24 seed words, and\n> therefore, providing plausible deniability about the existence of this\n> separate 2nd layer passphrase.\n>\n> I've suggested the name 'quantum' passphrase to be used casually as a\n> unique identifier.\n>\n> The data stored within a 'quantum' passphrase, is simultaneously the\n> minimum required data for reproducing a BIP39-compatible 24-word seed\n> mnemonic... hence, the name 'quantum' seems fitting, to reflect the\n> multiple simultaneous states of data.\n>\n> Abstract...\n>\n> This improvement proposal describes the use of twenty four, newly\n> generated BIP39 seed words, to produce a '25th-word' BIP39-compatible\n> 'quantum' passphrase.\n>\n> Two-factor authentication (2FA) or (2 of 2 multi-signature) can be\n> implemented with a two-wallet setup:\n>\n> The 1st Bitcoin wallet is protected by the seed words of the 2nd Bitcoin\n> wallet; inversely, the 2nd Bitcoin wallet is protected by the seed words of\n> the 1st Bitcoin wallet.\n>\n> The 'quantum' passphrase offers an exponential increase in the level of\n> protection, as that offered by the original BIP39 mnemonic seed words\n> (\u22482048^23 possible combinations).\n>\n> ie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected by\n> 2048^23 to the power of 2048^23 possible combinations.\n>\n> With existing computer capabilities, this level of protection is far\n> greater than required; however, this does provide a sufficient level of\n> protection for each separate layer of a two-factor Bitcoin wallet, should\n> any one layer be accidentally exposed.\n>\n> This method of passphrase generation, consists of two parts:\n>\n> 1st - generating the BIP39 mnemonic seed words, using a BIP39-compatible\n> hardware wallet.\n>\n> 2nd - Converting these seed words into the 'quantum' passphrase, following\n> four simple rules, which most importantly, do not destroy the integrity of\n> the initial data.\n>\n> Motivation...\n>\n> The well established practice of preserving up to 24 seed words for the\n> purpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\n> Exposure of these mnemonic seed words can cause catastrophic loss of funds\n> without adequate multi-factor protection.\n>\n> Whilst it is recognised that a number of multi-factor solutions are\n> available (including the standard BIP39 passphrase, and hardware wallet\n> multi-signature functionality), this proposal aims to provide an extremely\n> safe and secure 'low-tech' option, that requires minimal (non-destructive)\n> adjustments to the seed words.\n>\n> Furthermore, the 'quantum' passphrase offers a number advantages over the\n> existing methods of multi-factor protection:\n>\n> Firstly, this method of creating a passphrase leaves no evidence of its\n> existence on any backup devices, providing plausible deniability in case of\n> coercion.\n>\n> This is because the passphrase is easily created from a genuine 24 seed\n> word mnemonic; therefore, the physical backup of the passphrase can be\n> disguised as a simple Bitcoin wallet on a metal backup plate.\n>\n> It presents a way of discouraging user-created words or sentences (also\n> known as 'brain-wallets'), which often provide a drastically reduced level\n> of passphrase security, unbeknown to many users.\n>\n> The large amount of data required to produce a 'quantum' passphrase (up to\n> 96 characters long), encourages the physical backup of the passphrase.\n>\n> Furthermore, the use of BIP39-only words provides a higher degree of\n> standardization, which can help to avoid potential mistakes made by\n> creating unnecessarily complicated combinations of letters, numbers and\n> symbols. Increased complication (disorderly, and non-human-friendly), does\n> not always equal increased complexity (orderly, and more human-friendly),\n> or increased security.\n>\n> As previously mentioned, a two-wallet configuration provides the user an\n> opportunity to safely split the two factors of protection (equivalent to a\n> 2 of 2 'multi-sig' setup).\n>\n> If a BIP39-compatible passphrase is created using a new set of 24 seed\n> words, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n> 10\u2077\u2076 possible combinations of words).\n>\n> The strength of this 2nd factor solution, provides adequate\n> risk-management, when considering the production of multiple backup\n> devices, strategically stored in multiple geographical locations.\n>\n> Generating the 'quantum' passphrase...\n>\n> Following just four (non-destructive) BIP39-compatible rules, the 24 seed\n> words can also function as a 'quantum' passphrase:\n>\n> 1 . Only BIP39 words\n> (Standard list of 2048 English words - other languages should be\n> compatible)\n>\n> 2 . Only the first four letters of each word\n> (BIP39 words require only this data for reproduction)\n>\n> 3 . Only upper case letters\n> (All alphabet references use this standard format)\n>\n> 4 . No spaces between words\n> (Spaces represent an additional unit of data, that is not recorded)\n>\n> In essence, the 'quantum' passphrase is simply a single string of all 24\n> seed words, set out using the above rules.\n>\n> I welcome a productive technical discussion.\n>\n> Thanks,\n>\n> Chris Johnston\n>\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210509/cea893d5/attachment-0001.html>"
            },
            {
                "author": "BitPLATES (Chris)",
                "date": "2021-05-09T08:29:05",
                "message_text_only": "Hi Tobias,\n\nIn answer to your questions...\n\n\"Isn't your suggestion already covered by BIP39 since there is not\nrestriction in how you choose your passphrase?\"\n\n- Correct, my idea is covered by BIP39, and therefore compatible with\nBIP39... I see the 'quantum' passphrase as an optional 'soft fork' leading\ntowards a more restricted choice of characters, rather than the fuller,\nless restrictive choice of characters.\n\n\"It's up to any user to choose his password like you propose. I see your\nproposal more like a way to choose my password rather than anything that\nneeds to be implemented somewhere.\"\n\n- Correct also, my proposal is for an Informational BIP to educate users\nhow to create a 'quantum' passphrase, which provides the same high degree\nof protection (2048^23 combinations) as the original 1st layer mnemonic\nseed words. Should their 24 seed words be compromised (or posted on the\ninternet), this extreme level of protection would make it impossible to\nbrute-force the wallet without the 'quantum' passphrase.\n\n\"Don't I have plausible deniability already with any other password that I\nkeep in mind, since the seed without the password is already a valid\naddress?\"\n\n- No, because an unrestricted passphrase may contain characters different\nto those allowed by the 'quantum' passphrase. Memorisation of the 2nd layer\npassphrase is very dangerous, whereby, an unfortunate accident could leave\nyour family without access to their inherence. The 'quantum' passphrase\nencourages the use of multiple metal backup storage devices, but anything\nmore that A-Z (upper case only), would not be disguised as a 24 word seed.\nTherefore, discovery of a backup device with the extra, unrestricted\ncharacters that don't also open a (sacrificial) wallet, will be recognised\nas a 2nd layer passphrase... This is when the $5 wrench is brought to the\ntable to extract the 1st layer seed words.\n\n\"One issue might be, that the passphrase is part of the mnemonic. A\nhardware wallet needs the passphrase to generate the complete mnemonic\n(changing the password does change the resulting seed). Thus you get a\nchicken-egg problem, at least for some implementations. Probably you could\nuse the restore feature to work around this - but it's one step more that\nshould be mentioned.\"\n\n- I'm not sure that I fully understand this last paragraph of your email,\nbut just to be clear, the 'quantum' passphrase is made from the 24 seed\nwords of a separate wallet. This is essentially the 2nd layer (or 2nd\nsigning key) to add to the 1st layer (or 1st signing key) required to\ncomplete the full mnemonic, which then provides access to the\npassphrase-protected wallet.\n\neg. The 1st Bitcoin wallet is protected by a 'quantum' passphrase,\ncontaining the seed words of the 2nd Bitcoin wallet; inversely, the 2nd\nBitcoin wallet is protected by a 'quantum' passphrase, containing the seed\nwords of the 1st Bitcoin wallet.\n\nThank you for your thoughts.\n\nRegards,\n\nChris\n\n\nOn Sun, 9 May 2021, 08:24 Tobias Kaupat, <Tobias at kaupat-hh.de> wrote:\n\n> Hello Chris,\n> Isn't your suggestion already covered by BIP39 since there is not\n> restriction in how you choose your passphrase?\n>\n> It's up to any user to choose his password like you propose. I see your\n> proposal more like a way to choose my password rather than anything that\n> needs to be implemented somewhere.\n>\n> Don't I have plausible deniability already with any other password that I\n> keep in mind, since the seed without the password is already a valid\n> address?\n>\n> One issue might be, that the passphrase is part of the mnemonic. A\n> hardware wallet needs the passphrase to generate the complete mnemonic\n> (changing the password does change the resulting seed). Thus you get a\n> chicken-egg problem, at least for some implementations. Probably you could\n> use the restore feature to work around this - but it's one step more that\n> should be mentioned.\n>\n>\n> Kind regards\n> Tobias\n>\n>\n>\n>\n> BitPLATES\u00ae (Chris) via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>\n> schrieb am Sa., 8. Mai 2021, 17:21:\n>\n>> Hi,\n>>\n>> I'd like to submit an idea for review, as a potential informational BIP\n>> (Bitcoin Improvement Proposal), describing an optional method of producing\n>> a BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n>>\n>> The idea specifically refers to a method of introducing two-factor\n>> authentication, to protect a Bitcoin wallet using only 24 seed words, and\n>> therefore, providing plausible deniability about the existence of this\n>> separate 2nd layer passphrase.\n>>\n>> I've suggested the name 'quantum' passphrase to be used casually as a\n>> unique identifier.\n>>\n>> The data stored within a 'quantum' passphrase, is simultaneously the\n>> minimum required data for reproducing a BIP39-compatible 24-word seed\n>> mnemonic... hence, the name 'quantum' seems fitting, to reflect the\n>> multiple simultaneous states of data.\n>>\n>> Abstract...\n>>\n>> This improvement proposal describes the use of twenty four, newly\n>> generated BIP39 seed words, to produce a '25th-word' BIP39-compatible\n>> 'quantum' passphrase.\n>>\n>> Two-factor authentication (2FA) or (2 of 2 multi-signature) can be\n>> implemented with a two-wallet setup:\n>>\n>> The 1st Bitcoin wallet is protected by the seed words of the 2nd Bitcoin\n>> wallet; inversely, the 2nd Bitcoin wallet is protected by the seed words of\n>> the 1st Bitcoin wallet.\n>>\n>> The 'quantum' passphrase offers an exponential increase in the level of\n>> protection, as that offered by the original BIP39 mnemonic seed words\n>> (\u22482048^23 possible combinations).\n>>\n>> ie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected by\n>> 2048^23 to the power of 2048^23 possible combinations.\n>>\n>> With existing computer capabilities, this level of protection is far\n>> greater than required; however, this does provide a sufficient level of\n>> protection for each separate layer of a two-factor Bitcoin wallet, should\n>> any one layer be accidentally exposed.\n>>\n>> This method of passphrase generation, consists of two parts:\n>>\n>> 1st - generating the BIP39 mnemonic seed words, using a BIP39-compatible\n>> hardware wallet.\n>>\n>> 2nd - Converting these seed words into the 'quantum' passphrase,\n>> following four simple rules, which most importantly, do not destroy the\n>> integrity of the initial data.\n>>\n>> Motivation...\n>>\n>> The well established practice of preserving up to 24 seed words for the\n>> purpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\n>> Exposure of these mnemonic seed words can cause catastrophic loss of funds\n>> without adequate multi-factor protection.\n>>\n>> Whilst it is recognised that a number of multi-factor solutions are\n>> available (including the standard BIP39 passphrase, and hardware wallet\n>> multi-signature functionality), this proposal aims to provide an extremely\n>> safe and secure 'low-tech' option, that requires minimal (non-destructive)\n>> adjustments to the seed words.\n>>\n>> Furthermore, the 'quantum' passphrase offers a number advantages over the\n>> existing methods of multi-factor protection:\n>>\n>> Firstly, this method of creating a passphrase leaves no evidence of its\n>> existence on any backup devices, providing plausible deniability in case of\n>> coercion.\n>>\n>> This is because the passphrase is easily created from a genuine 24 seed\n>> word mnemonic; therefore, the physical backup of the passphrase can be\n>> disguised as a simple Bitcoin wallet on a metal backup plate.\n>>\n>> It presents a way of discouraging user-created words or sentences (also\n>> known as 'brain-wallets'), which often provide a drastically reduced level\n>> of passphrase security, unbeknown to many users.\n>>\n>> The large amount of data required to produce a 'quantum' passphrase (up\n>> to 96 characters long), encourages the physical backup of the passphrase.\n>>\n>> Furthermore, the use of BIP39-only words provides a higher degree of\n>> standardization, which can help to avoid potential mistakes made by\n>> creating unnecessarily complicated combinations of letters, numbers and\n>> symbols. Increased complication (disorderly, and non-human-friendly), does\n>> not always equal increased complexity (orderly, and more human-friendly),\n>> or increased security.\n>>\n>> As previously mentioned, a two-wallet configuration provides the user an\n>> opportunity to safely split the two factors of protection (equivalent to a\n>> 2 of 2 'multi-sig' setup).\n>>\n>> If a BIP39-compatible passphrase is created using a new set of 24 seed\n>> words, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n>> 10\u2077\u2076 possible combinations of words).\n>>\n>> The strength of this 2nd factor solution, provides adequate\n>> risk-management, when considering the production of multiple backup\n>> devices, strategically stored in multiple geographical locations.\n>>\n>> Generating the 'quantum' passphrase...\n>>\n>> Following just four (non-destructive) BIP39-compatible rules, the 24 seed\n>> words can also function as a 'quantum' passphrase:\n>>\n>> 1 . Only BIP39 words\n>> (Standard list of 2048 English words - other languages should be\n>> compatible)\n>>\n>> 2 . Only the first four letters of each word\n>> (BIP39 words require only this data for reproduction)\n>>\n>> 3 . Only upper case letters\n>> (All alphabet references use this standard format)\n>>\n>> 4 . No spaces between words\n>> (Spaces represent an additional unit of data, that is not recorded)\n>>\n>> In essence, the 'quantum' passphrase is simply a single string of all 24\n>> seed words, set out using the above rules.\n>>\n>> I welcome a productive technical discussion.\n>>\n>> Thanks,\n>>\n>> Chris Johnston\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210509/25d3791a/attachment.html>"
            },
            {
                "author": "Tobias Kaupat",
                "date": "2021-05-09T22:53:51",
                "message_text_only": "Hi Chris,\nthanks for the clarification. It makes sense so far.\n\nAbout the \"chicken - egg\" problem:\nWhen you generate a BIP39 mnemonic \"A\" without password, you get a Seed\n\"As\" from which you derive your private key.\nUsing the same mnemonic with a passphrase will give you a different seed\n\"As*\" with a different private and public key.\nNow your process must look like:\n- Generate mnemonic A without password (will never be used)\n- Generate mnemonic B* using words from A as password\n- Generate mnemonic A* using words from B* as password\n\nThat's just an implementation detail but might have impact on the actual\nprocess, depending on the wallet you are using.\n\nHope it's clear.\n\nKind regards\nTobias\n\n\n\nBitPLATES (Chris) <bitplates at marketnetworks.co.uk> schrieb am So., 9. Mai\n2021, 10:29:\n\n> Hi Tobias,\n>\n> In answer to your questions...\n>\n> \"Isn't your suggestion already covered by BIP39 since there is not\n> restriction in how you choose your passphrase?\"\n>\n> - Correct, my idea is covered by BIP39, and therefore compatible with\n> BIP39... I see the 'quantum' passphrase as an optional 'soft fork' leading\n> towards a more restricted choice of characters, rather than the fuller,\n> less restrictive choice of characters.\n>\n> \"It's up to any user to choose his password like you propose. I see your\n> proposal more like a way to choose my password rather than anything that\n> needs to be implemented somewhere.\"\n>\n> - Correct also, my proposal is for an Informational BIP to educate users\n> how to create a 'quantum' passphrase, which provides the same high degree\n> of protection (2048^23 combinations) as the original 1st layer mnemonic\n> seed words. Should their 24 seed words be compromised (or posted on the\n> internet), this extreme level of protection would make it impossible to\n> brute-force the wallet without the 'quantum' passphrase.\n>\n> \"Don't I have plausible deniability already with any other password that I\n> keep in mind, since the seed without the password is already a valid\n> address?\"\n>\n> - No, because an unrestricted passphrase may contain characters different\n> to those allowed by the 'quantum' passphrase. Memorisation of the 2nd layer\n> passphrase is very dangerous, whereby, an unfortunate accident could leave\n> your family without access to their inherence. The 'quantum' passphrase\n> encourages the use of multiple metal backup storage devices, but anything\n> more that A-Z (upper case only), would not be disguised as a 24 word seed.\n> Therefore, discovery of a backup device with the extra, unrestricted\n> characters that don't also open a (sacrificial) wallet, will be recognised\n> as a 2nd layer passphrase... This is when the $5 wrench is brought to the\n> table to extract the 1st layer seed words.\n>\n> \"One issue might be, that the passphrase is part of the mnemonic. A\n> hardware wallet needs the passphrase to generate the complete mnemonic\n> (changing the password does change the resulting seed). Thus you get a\n> chicken-egg problem, at least for some implementations. Probably you could\n> use the restore feature to work around this - but it's one step more that\n> should be mentioned.\"\n>\n> - I'm not sure that I fully understand this last paragraph of your email,\n> but just to be clear, the 'quantum' passphrase is made from the 24 seed\n> words of a separate wallet. This is essentially the 2nd layer (or 2nd\n> signing key) to add to the 1st layer (or 1st signing key) required to\n> complete the full mnemonic, which then provides access to the\n> passphrase-protected wallet.\n>\n> eg. The 1st Bitcoin wallet is protected by a 'quantum' passphrase,\n> containing the seed words of the 2nd Bitcoin wallet; inversely, the 2nd\n> Bitcoin wallet is protected by a 'quantum' passphrase, containing the seed\n> words of the 1st Bitcoin wallet.\n>\n> Thank you for your thoughts.\n>\n> Regards,\n>\n> Chris\n>\n>\n> On Sun, 9 May 2021, 08:24 Tobias Kaupat, <Tobias at kaupat-hh.de> wrote:\n>\n>> Hello Chris,\n>> Isn't your suggestion already covered by BIP39 since there is not\n>> restriction in how you choose your passphrase?\n>>\n>> It's up to any user to choose his password like you propose. I see your\n>> proposal more like a way to choose my password rather than anything that\n>> needs to be implemented somewhere.\n>>\n>> Don't I have plausible deniability already with any other password that I\n>> keep in mind, since the seed without the password is already a valid\n>> address?\n>>\n>> One issue might be, that the passphrase is part of the mnemonic. A\n>> hardware wallet needs the passphrase to generate the complete mnemonic\n>> (changing the password does change the resulting seed). Thus you get a\n>> chicken-egg problem, at least for some implementations. Probably you could\n>> use the restore feature to work around this - but it's one step more that\n>> should be mentioned.\n>>\n>>\n>> Kind regards\n>> Tobias\n>>\n>>\n>>\n>>\n>> BitPLATES\u00ae (Chris) via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>\n>> schrieb am Sa., 8. Mai 2021, 17:21:\n>>\n>>> Hi,\n>>>\n>>> I'd like to submit an idea for review, as a potential informational BIP\n>>> (Bitcoin Improvement Proposal), describing an optional method of producing\n>>> a BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n>>>\n>>> The idea specifically refers to a method of introducing two-factor\n>>> authentication, to protect a Bitcoin wallet using only 24 seed words, and\n>>> therefore, providing plausible deniability about the existence of this\n>>> separate 2nd layer passphrase.\n>>>\n>>> I've suggested the name 'quantum' passphrase to be used casually as a\n>>> unique identifier.\n>>>\n>>> The data stored within a 'quantum' passphrase, is simultaneously the\n>>> minimum required data for reproducing a BIP39-compatible 24-word seed\n>>> mnemonic... hence, the name 'quantum' seems fitting, to reflect the\n>>> multiple simultaneous states of data.\n>>>\n>>> Abstract...\n>>>\n>>> This improvement proposal describes the use of twenty four, newly\n>>> generated BIP39 seed words, to produce a '25th-word' BIP39-compatible\n>>> 'quantum' passphrase.\n>>>\n>>> Two-factor authentication (2FA) or (2 of 2 multi-signature) can be\n>>> implemented with a two-wallet setup:\n>>>\n>>> The 1st Bitcoin wallet is protected by the seed words of the 2nd Bitcoin\n>>> wallet; inversely, the 2nd Bitcoin wallet is protected by the seed words of\n>>> the 1st Bitcoin wallet.\n>>>\n>>> The 'quantum' passphrase offers an exponential increase in the level of\n>>> protection, as that offered by the original BIP39 mnemonic seed words\n>>> (\u22482048^23 possible combinations).\n>>>\n>>> ie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected\n>>> by 2048^23 to the power of 2048^23 possible combinations.\n>>>\n>>> With existing computer capabilities, this level of protection is far\n>>> greater than required; however, this does provide a sufficient level of\n>>> protection for each separate layer of a two-factor Bitcoin wallet, should\n>>> any one layer be accidentally exposed.\n>>>\n>>> This method of passphrase generation, consists of two parts:\n>>>\n>>> 1st - generating the BIP39 mnemonic seed words, using a BIP39-compatible\n>>> hardware wallet.\n>>>\n>>> 2nd - Converting these seed words into the 'quantum' passphrase,\n>>> following four simple rules, which most importantly, do not destroy the\n>>> integrity of the initial data.\n>>>\n>>> Motivation...\n>>>\n>>> The well established practice of preserving up to 24 seed words for the\n>>> purpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\n>>> Exposure of these mnemonic seed words can cause catastrophic loss of funds\n>>> without adequate multi-factor protection.\n>>>\n>>> Whilst it is recognised that a number of multi-factor solutions are\n>>> available (including the standard BIP39 passphrase, and hardware wallet\n>>> multi-signature functionality), this proposal aims to provide an extremely\n>>> safe and secure 'low-tech' option, that requires minimal (non-destructive)\n>>> adjustments to the seed words.\n>>>\n>>> Furthermore, the 'quantum' passphrase offers a number advantages over\n>>> the existing methods of multi-factor protection:\n>>>\n>>> Firstly, this method of creating a passphrase leaves no evidence of its\n>>> existence on any backup devices, providing plausible deniability in case of\n>>> coercion.\n>>>\n>>> This is because the passphrase is easily created from a genuine 24 seed\n>>> word mnemonic; therefore, the physical backup of the passphrase can be\n>>> disguised as a simple Bitcoin wallet on a metal backup plate.\n>>>\n>>> It presents a way of discouraging user-created words or sentences (also\n>>> known as 'brain-wallets'), which often provide a drastically reduced level\n>>> of passphrase security, unbeknown to many users.\n>>>\n>>> The large amount of data required to produce a 'quantum' passphrase (up\n>>> to 96 characters long), encourages the physical backup of the passphrase.\n>>>\n>>> Furthermore, the use of BIP39-only words provides a higher degree of\n>>> standardization, which can help to avoid potential mistakes made by\n>>> creating unnecessarily complicated combinations of letters, numbers and\n>>> symbols. Increased complication (disorderly, and non-human-friendly), does\n>>> not always equal increased complexity (orderly, and more human-friendly),\n>>> or increased security.\n>>>\n>>> As previously mentioned, a two-wallet configuration provides the user an\n>>> opportunity to safely split the two factors of protection (equivalent to a\n>>> 2 of 2 'multi-sig' setup).\n>>>\n>>> If a BIP39-compatible passphrase is created using a new set of 24 seed\n>>> words, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n>>> 10\u2077\u2076 possible combinations of words).\n>>>\n>>> The strength of this 2nd factor solution, provides adequate\n>>> risk-management, when considering the production of multiple backup\n>>> devices, strategically stored in multiple geographical locations.\n>>>\n>>> Generating the 'quantum' passphrase...\n>>>\n>>> Following just four (non-destructive) BIP39-compatible rules, the 24\n>>> seed words can also function as a 'quantum' passphrase:\n>>>\n>>> 1 . Only BIP39 words\n>>> (Standard list of 2048 English words - other languages should be\n>>> compatible)\n>>>\n>>> 2 . Only the first four letters of each word\n>>> (BIP39 words require only this data for reproduction)\n>>>\n>>> 3 . Only upper case letters\n>>> (All alphabet references use this standard format)\n>>>\n>>> 4 . No spaces between words\n>>> (Spaces represent an additional unit of data, that is not recorded)\n>>>\n>>> In essence, the 'quantum' passphrase is simply a single string of all 24\n>>> seed words, set out using the above rules.\n>>>\n>>> I welcome a productive technical discussion.\n>>>\n>>> Thanks,\n>>>\n>>> Chris Johnston\n>>>\n>>>\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210510/592b529e/attachment-0001.html>"
            },
            {
                "author": "BitPLATES (Chris)",
                "date": "2021-05-10T06:30:22",
                "message_text_only": "Thank you for your reply Tobias,\n\nI don't think that the chicken-egg scenario is relevant, but please let me\nexplain why:\n\nWallet A = seed words (A) - add minimal funds as a canary/sacrificial wallet\n\nWallet B = seed words (B) - add minimal funds as a canary/sacrificial wallet\n\nWallet AB = seed words (A) + 'quantum' passphrase using seed words (B) -\nadd 1/2 of main funds\n\nWallet BA = seed words (B) + 'quantum' passphrase using seed words (A) -\nadd 1/2 of main funds\n\nIf the backup plate containing seed words (A) is compromised, then minimal\nfunds are taken.\n\nIf the backup plate containing seed words (B) is compromised, then minimal\nfunds are taken.\n\nBoth backup plates must remain geographically separated.\n\nFurthermore, backup plate (A) could be held by a 1st party, whilst backup\nplate (B) could be held by a 2nd party, as part of a 2 of 2 multi-factor\n(or multi-sig) setup.\n\nI hope this clarifies everything.\n\nRegards,\n\nChris\n\nOn Sun, 9 May 2021, 23:54 Tobias Kaupat, <Tobias at kaupat-hh.de> wrote:\n\n> Hi Chris,\n> thanks for the clarification. It makes sense so far.\n>\n> About the \"chicken - egg\" problem:\n> When you generate a BIP39 mnemonic \"A\" without password, you get a Seed\n> \"As\" from which you derive your private key.\n> Using the same mnemonic with a passphrase will give you a different seed\n> \"As*\" with a different private and public key.\n> Now your process must look like:\n> - Generate mnemonic A without password (will never be used)\n> - Generate mnemonic B* using words from A as password\n> - Generate mnemonic A* using words from B* as password\n>\n> That's just an implementation detail but might have impact on the actual\n> process, depending on the wallet you are using.\n>\n> Hope it's clear.\n>\n> Kind regards\n> Tobias\n>\n>\n>\n> BitPLATES (Chris) <bitplates at marketnetworks.co.uk> schrieb am So., 9. Mai\n> 2021, 10:29:\n>\n>> Hi Tobias,\n>>\n>> In answer to your questions...\n>>\n>> \"Isn't your suggestion already covered by BIP39 since there is not\n>> restriction in how you choose your passphrase?\"\n>>\n>> - Correct, my idea is covered by BIP39, and therefore compatible with\n>> BIP39... I see the 'quantum' passphrase as an optional 'soft fork' leading\n>> towards a more restricted choice of characters, rather than the fuller,\n>> less restrictive choice of characters.\n>>\n>> \"It's up to any user to choose his password like you propose. I see your\n>> proposal more like a way to choose my password rather than anything that\n>> needs to be implemented somewhere.\"\n>>\n>> - Correct also, my proposal is for an Informational BIP to educate users\n>> how to create a 'quantum' passphrase, which provides the same high degree\n>> of protection (2048^23 combinations) as the original 1st layer mnemonic\n>> seed words. Should their 24 seed words be compromised (or posted on the\n>> internet), this extreme level of protection would make it impossible to\n>> brute-force the wallet without the 'quantum' passphrase.\n>>\n>> \"Don't I have plausible deniability already with any other password that\n>> I keep in mind, since the seed without the password is already a valid\n>> address?\"\n>>\n>> - No, because an unrestricted passphrase may contain characters different\n>> to those allowed by the 'quantum' passphrase. Memorisation of the 2nd layer\n>> passphrase is very dangerous, whereby, an unfortunate accident could leave\n>> your family without access to their inherence. The 'quantum' passphrase\n>> encourages the use of multiple metal backup storage devices, but anything\n>> more that A-Z (upper case only), would not be disguised as a 24 word seed.\n>> Therefore, discovery of a backup device with the extra, unrestricted\n>> characters that don't also open a (sacrificial) wallet, will be recognised\n>> as a 2nd layer passphrase... This is when the $5 wrench is brought to the\n>> table to extract the 1st layer seed words.\n>>\n>> \"One issue might be, that the passphrase is part of the mnemonic. A\n>> hardware wallet needs the passphrase to generate the complete mnemonic\n>> (changing the password does change the resulting seed). Thus you get a\n>> chicken-egg problem, at least for some implementations. Probably you could\n>> use the restore feature to work around this - but it's one step more that\n>> should be mentioned.\"\n>>\n>> - I'm not sure that I fully understand this last paragraph of your email,\n>> but just to be clear, the 'quantum' passphrase is made from the 24 seed\n>> words of a separate wallet. This is essentially the 2nd layer (or 2nd\n>> signing key) to add to the 1st layer (or 1st signing key) required to\n>> complete the full mnemonic, which then provides access to the\n>> passphrase-protected wallet.\n>>\n>> eg. The 1st Bitcoin wallet is protected by a 'quantum' passphrase,\n>> containing the seed words of the 2nd Bitcoin wallet; inversely, the 2nd\n>> Bitcoin wallet is protected by a 'quantum' passphrase, containing the seed\n>> words of the 1st Bitcoin wallet.\n>>\n>> Thank you for your thoughts.\n>>\n>> Regards,\n>>\n>> Chris\n>>\n>>\n>> On Sun, 9 May 2021, 08:24 Tobias Kaupat, <Tobias at kaupat-hh.de> wrote:\n>>\n>>> Hello Chris,\n>>> Isn't your suggestion already covered by BIP39 since there is not\n>>> restriction in how you choose your passphrase?\n>>>\n>>> It's up to any user to choose his password like you propose. I see your\n>>> proposal more like a way to choose my password rather than anything that\n>>> needs to be implemented somewhere.\n>>>\n>>> Don't I have plausible deniability already with any other password that\n>>> I keep in mind, since the seed without the password is already a valid\n>>> address?\n>>>\n>>> One issue might be, that the passphrase is part of the mnemonic. A\n>>> hardware wallet needs the passphrase to generate the complete mnemonic\n>>> (changing the password does change the resulting seed). Thus you get a\n>>> chicken-egg problem, at least for some implementations. Probably you could\n>>> use the restore feature to work around this - but it's one step more that\n>>> should be mentioned.\n>>>\n>>>\n>>> Kind regards\n>>> Tobias\n>>>\n>>>\n>>>\n>>>\n>>> BitPLATES\u00ae (Chris) via bitcoin-dev <\n>>> bitcoin-dev at lists.linuxfoundation.org> schrieb am Sa., 8. Mai 2021,\n>>> 17:21:\n>>>\n>>>> Hi,\n>>>>\n>>>> I'd like to submit an idea for review, as a potential informational BIP\n>>>> (Bitcoin Improvement Proposal), describing an optional method of producing\n>>>> a BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n>>>>\n>>>> The idea specifically refers to a method of introducing two-factor\n>>>> authentication, to protect a Bitcoin wallet using only 24 seed words, and\n>>>> therefore, providing plausible deniability about the existence of this\n>>>> separate 2nd layer passphrase.\n>>>>\n>>>> I've suggested the name 'quantum' passphrase to be used casually as a\n>>>> unique identifier.\n>>>>\n>>>> The data stored within a 'quantum' passphrase, is simultaneously the\n>>>> minimum required data for reproducing a BIP39-compatible 24-word seed\n>>>> mnemonic... hence, the name 'quantum' seems fitting, to reflect the\n>>>> multiple simultaneous states of data.\n>>>>\n>>>> Abstract...\n>>>>\n>>>> This improvement proposal describes the use of twenty four, newly\n>>>> generated BIP39 seed words, to produce a '25th-word' BIP39-compatible\n>>>> 'quantum' passphrase.\n>>>>\n>>>> Two-factor authentication (2FA) or (2 of 2 multi-signature) can be\n>>>> implemented with a two-wallet setup:\n>>>>\n>>>> The 1st Bitcoin wallet is protected by the seed words of the 2nd\n>>>> Bitcoin wallet; inversely, the 2nd Bitcoin wallet is protected by the seed\n>>>> words of the 1st Bitcoin wallet.\n>>>>\n>>>> The 'quantum' passphrase offers an exponential increase in the level of\n>>>> protection, as that offered by the original BIP39 mnemonic seed words\n>>>> (\u22482048^23 possible combinations).\n>>>>\n>>>> ie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected\n>>>> by 2048^23 to the power of 2048^23 possible combinations.\n>>>>\n>>>> With existing computer capabilities, this level of protection is far\n>>>> greater than required; however, this does provide a sufficient level of\n>>>> protection for each separate layer of a two-factor Bitcoin wallet, should\n>>>> any one layer be accidentally exposed.\n>>>>\n>>>> This method of passphrase generation, consists of two parts:\n>>>>\n>>>> 1st - generating the BIP39 mnemonic seed words, using a\n>>>> BIP39-compatible hardware wallet.\n>>>>\n>>>> 2nd - Converting these seed words into the 'quantum' passphrase,\n>>>> following four simple rules, which most importantly, do not destroy the\n>>>> integrity of the initial data.\n>>>>\n>>>> Motivation...\n>>>>\n>>>> The well established practice of preserving up to 24 seed words for the\n>>>> purpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\n>>>> Exposure of these mnemonic seed words can cause catastrophic loss of funds\n>>>> without adequate multi-factor protection.\n>>>>\n>>>> Whilst it is recognised that a number of multi-factor solutions are\n>>>> available (including the standard BIP39 passphrase, and hardware wallet\n>>>> multi-signature functionality), this proposal aims to provide an extremely\n>>>> safe and secure 'low-tech' option, that requires minimal (non-destructive)\n>>>> adjustments to the seed words.\n>>>>\n>>>> Furthermore, the 'quantum' passphrase offers a number advantages over\n>>>> the existing methods of multi-factor protection:\n>>>>\n>>>> Firstly, this method of creating a passphrase leaves no evidence of its\n>>>> existence on any backup devices, providing plausible deniability in case of\n>>>> coercion.\n>>>>\n>>>> This is because the passphrase is easily created from a genuine 24 seed\n>>>> word mnemonic; therefore, the physical backup of the passphrase can be\n>>>> disguised as a simple Bitcoin wallet on a metal backup plate.\n>>>>\n>>>> It presents a way of discouraging user-created words or sentences (also\n>>>> known as 'brain-wallets'), which often provide a drastically reduced level\n>>>> of passphrase security, unbeknown to many users.\n>>>>\n>>>> The large amount of data required to produce a 'quantum' passphrase (up\n>>>> to 96 characters long), encourages the physical backup of the passphrase.\n>>>>\n>>>> Furthermore, the use of BIP39-only words provides a higher degree of\n>>>> standardization, which can help to avoid potential mistakes made by\n>>>> creating unnecessarily complicated combinations of letters, numbers and\n>>>> symbols. Increased complication (disorderly, and non-human-friendly), does\n>>>> not always equal increased complexity (orderly, and more human-friendly),\n>>>> or increased security.\n>>>>\n>>>> As previously mentioned, a two-wallet configuration provides the user\n>>>> an opportunity to safely split the two factors of protection (equivalent to\n>>>> a 2 of 2 'multi-sig' setup).\n>>>>\n>>>> If a BIP39-compatible passphrase is created using a new set of 24 seed\n>>>> words, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n>>>> 10\u2077\u2076 possible combinations of words).\n>>>>\n>>>> The strength of this 2nd factor solution, provides adequate\n>>>> risk-management, when considering the production of multiple backup\n>>>> devices, strategically stored in multiple geographical locations.\n>>>>\n>>>> Generating the 'quantum' passphrase...\n>>>>\n>>>> Following just four (non-destructive) BIP39-compatible rules, the 24\n>>>> seed words can also function as a 'quantum' passphrase:\n>>>>\n>>>> 1 . Only BIP39 words\n>>>> (Standard list of 2048 English words - other languages should be\n>>>> compatible)\n>>>>\n>>>> 2 . Only the first four letters of each word\n>>>> (BIP39 words require only this data for reproduction)\n>>>>\n>>>> 3 . Only upper case letters\n>>>> (All alphabet references use this standard format)\n>>>>\n>>>> 4 . No spaces between words\n>>>> (Spaces represent an additional unit of data, that is not recorded)\n>>>>\n>>>> In essence, the 'quantum' passphrase is simply a single string of all\n>>>> 24 seed words, set out using the above rules.\n>>>>\n>>>> I welcome a productive technical discussion.\n>>>>\n>>>> Thanks,\n>>>>\n>>>> Chris Johnston\n>>>>\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210510/4412fe5d/attachment-0001.html>"
            },
            {
                "author": "BitPLATES (Chris)",
                "date": "2021-05-11T08:48:44",
                "message_text_only": "Hi Chris,\n\nThank you for your thoughts.\n\nUnfortunately, your analysis is incorrect.\n\nThis is a non-destructive adaptation of the BIP39 standard, and is\ncertainly not \"rolling your own security\".\n\nThe 'quantum' passphrase is relying on the well established security of the\nexisting BIP39 standard.\n\nThere are 2048 possible words that can be chosen from the BIP39 word list.\nTherefore, to derive a seed from a string of 24 BIP39 words, is exactly the\nsame as deriving a seed from the full 24 words:\n\n2048 to the power of 23 combinations of security (not the power of 24\nbecause of the checksum), or 10 to the power of 76 combinations.\n\nIf you created your own combinations of words to make up a passphrase, this\nsame degree of security would require 15 random words from the English\ndictionary (assuming 100,000 English words):\n\n100,000 to the power of 15 = 10 to the power of 75 combinations.\n\nThe other problem with this, is that you could not plausibly deny that it\nwas a passphrase, whereas, using a 'quantum' passphrase allows you to\nbackup your passphrase disguised as a 24 seed mnemonic.\n\nI hope this alleviates your concerns.\n\nAll the best,\n\nChris\n\n\nOn Tue, 11 May 2021, 09:12 Chris D'Costa, <chrisjdcosta at gmail.com> wrote:\n\n> I think the biggest problem you have with this proposal is \"rolling your\n> own security\".\n>\n> Are you aware that the dictionary is designed such that the first four\n> letters are unique to each word? Taking those four letters and\n> concatenating them to a string basically means that I can derive your seed\n> from your supposedly secure \"quantum\" passphrase. It does not add to the\n> security - if anything it makes it worse. It would be orders of magnitude\n> worse than using a random password and encryption as most wallets have been\n> using for years.\n>\n> C\n>\n> On Sat, 8 May 2021 at 17:21, BitPLATES\u00ae (Chris) via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Hi,\n>>\n>> I'd like to submit an idea for review, as a potential informational BIP\n>> (Bitcoin Improvement Proposal), describing an optional method of producing\n>> a BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n>>\n>> The idea specifically refers to a method of introducing two-factor\n>> authentication, to protect a Bitcoin wallet using only 24 seed words, and\n>> therefore, providing plausible deniability about the existence of this\n>> separate 2nd layer passphrase.\n>>\n>> I've suggested the name 'quantum' passphrase to be used casually as a\n>> unique identifier.\n>>\n>> The data stored within a 'quantum' passphrase, is simultaneously the\n>> minimum required data for reproducing a BIP39-compatible 24-word seed\n>> mnemonic... hence, the name 'quantum' seems fitting, to reflect the\n>> multiple simultaneous states of data.\n>>\n>> Abstract...\n>>\n>> This improvement proposal describes the use of twenty four, newly\n>> generated BIP39 seed words, to produce a '25th-word' BIP39-compatible\n>> 'quantum' passphrase.\n>>\n>> Two-factor authentication (2FA) or (2 of 2 multi-signature) can be\n>> implemented with a two-wallet setup:\n>>\n>> The 1st Bitcoin wallet is protected by the seed words of the 2nd Bitcoin\n>> wallet; inversely, the 2nd Bitcoin wallet is protected by the seed words of\n>> the 1st Bitcoin wallet.\n>>\n>> The 'quantum' passphrase offers an exponential increase in the level of\n>> protection, as that offered by the original BIP39 mnemonic seed words\n>> (\u22482048^23 possible combinations).\n>>\n>> ie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected by\n>> 2048^23 to the power of 2048^23 possible combinations.\n>>\n>> With existing computer capabilities, this level of protection is far\n>> greater than required; however, this does provide a sufficient level of\n>> protection for each separate layer of a two-factor Bitcoin wallet, should\n>> any one layer be accidentally exposed.\n>>\n>> This method of passphrase generation, consists of two parts:\n>>\n>> 1st - generating the BIP39 mnemonic seed words, using a BIP39-compatible\n>> hardware wallet.\n>>\n>> 2nd - Converting these seed words into the 'quantum' passphrase,\n>> following four simple rules, which most importantly, do not destroy the\n>> integrity of the initial data.\n>>\n>> Motivation...\n>>\n>> The well established practice of preserving up to 24 seed words for the\n>> purpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\n>> Exposure of these mnemonic seed words can cause catastrophic loss of funds\n>> without adequate multi-factor protection.\n>>\n>> Whilst it is recognised that a number of multi-factor solutions are\n>> available (including the standard BIP39 passphrase, and hardware wallet\n>> multi-signature functionality), this proposal aims to provide an extremely\n>> safe and secure 'low-tech' option, that requires minimal (non-destructive)\n>> adjustments to the seed words.\n>>\n>> Furthermore, the 'quantum' passphrase offers a number advantages over the\n>> existing methods of multi-factor protection:\n>>\n>> Firstly, this method of creating a passphrase leaves no evidence of its\n>> existence on any backup devices, providing plausible deniability in case of\n>> coercion.\n>>\n>> This is because the passphrase is easily created from a genuine 24 seed\n>> word mnemonic; therefore, the physical backup of the passphrase can be\n>> disguised as a simple Bitcoin wallet on a metal backup plate.\n>>\n>> It presents a way of discouraging user-created words or sentences (also\n>> known as 'brain-wallets'), which often provide a drastically reduced level\n>> of passphrase security, unbeknown to many users.\n>>\n>> The large amount of data required to produce a 'quantum' passphrase (up\n>> to 96 characters long), encourages the physical backup of the passphrase.\n>>\n>> Furthermore, the use of BIP39-only words provides a higher degree of\n>> standardization, which can help to avoid potential mistakes made by\n>> creating unnecessarily complicated combinations of letters, numbers and\n>> symbols. Increased complication (disorderly, and non-human-friendly), does\n>> not always equal increased complexity (orderly, and more human-friendly),\n>> or increased security.\n>>\n>> As previously mentioned, a two-wallet configuration provides the user an\n>> opportunity to safely split the two factors of protection (equivalent to a\n>> 2 of 2 'multi-sig' setup).\n>>\n>> If a BIP39-compatible passphrase is created using a new set of 24 seed\n>> words, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n>> 10\u2077\u2076 possible combinations of words).\n>>\n>> The strength of this 2nd factor solution, provides adequate\n>> risk-management, when considering the production of multiple backup\n>> devices, strategically stored in multiple geographical locations.\n>>\n>> Generating the 'quantum' passphrase...\n>>\n>> Following just four (non-destructive) BIP39-compatible rules, the 24 seed\n>> words can also function as a 'quantum' passphrase:\n>>\n>> 1 . Only BIP39 words\n>> (Standard list of 2048 English words - other languages should be\n>> compatible)\n>>\n>> 2 . Only the first four letters of each word\n>> (BIP39 words require only this data for reproduction)\n>>\n>> 3 . Only upper case letters\n>> (All alphabet references use this standard format)\n>>\n>> 4 . No spaces between words\n>> (Spaces represent an additional unit of data, that is not recorded)\n>>\n>> In essence, the 'quantum' passphrase is simply a single string of all 24\n>> seed words, set out using the above rules.\n>>\n>> I welcome a productive technical discussion.\n>>\n>> Thanks,\n>>\n>> Chris Johnston\n>>\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210511/ff8686e6/attachment.html>"
            },
            {
                "author": "BitPLATES (Chris)",
                "date": "2021-05-11T17:45:13",
                "message_text_only": "Hi Chris,\n\nI apologise if I did not make it clear enough, but the 24 seed words used\nto make the quantum passphrase are separate, newly generated 24 seed words,\nand not the same as those for the main wallet.\n\nWith both layers (seed words + quantum passphrase) the security provided is\n(2048^23)^(2048^23).\n\nie. 2048 to the power of 23, to the power of 2048 to the power of 23\npossible combinations of words.\n\nThe BIP39 passphrase is designed to prevent catastrophic loss of funds in\nthe case of accidental seed word exposure.\n\nIf both, seed words and quantum passphrase, are stored on two separate\nmetal backup storage plates, in two separate locations, then the accidental\ndisclosure of either one provides 2048^23 (or 10^76) possible combinations\nof words to decrypt.\n\nie. The quantum passphrase provides the same degree of security, as the\noriginal 24 seed words.\n\nI hope this helps.\n\nBest regards,\n\nChris\n\n\nOn Tue, 11 May 2021, 17:54 Chris D'Costa, <chrisjdcosta at gmail.com> wrote:\n\n> \"well established security of the existing BIP39 standard\"\n>\n> You are basing your entire proposal on this basic misunderstanding.\n>\n> There is no inherent (or \"existing\") security in BIP39. All it does is\n> provide a standardised and convenient way to record, and recover a\n> private key from a readable seed phrase. In fact there are many language\n> versions of BIP39 dictionary. But really the worst part of the idea from a\n> security perspective is that it reveals the seed phrase. Even a simple\n> password to encrypt (whilst possibly weak) would still never so this!\n>\n> C\n>\n>\n> On Tue, 11 May 2021 at 10:48, BitPLATES (Chris) <\n> bitplates at marketnetworks.co.uk> wrote:\n>\n>> Hi Chris,\n>>\n>> Thank you for your thoughts.\n>>\n>> Unfortunately, your analysis is incorrect.\n>>\n>> This is a non-destructive adaptation of the BIP39 standard, and is\n>> certainly not \"rolling your own security\".\n>>\n>> The 'quantum' passphrase is relying on the well established security of\n>> the existing BIP39 standard.\n>>\n>> There are 2048 possible words that can be chosen from the BIP39 word\n>> list. Therefore, to derive a seed from a string of 24 BIP39 words, is\n>> exactly the same as deriving a seed from the full 24 words:\n>>\n>> 2048 to the power of 23 combinations of security (not the power of 24\n>> because of the checksum), or 10 to the power of 76 combinations.\n>>\n>> If you created your own combinations of words to make up a passphrase,\n>> this same degree of security would require 15 random words from the English\n>> dictionary (assuming 100,000 English words):\n>>\n>> 100,000 to the power of 15 = 10 to the power of 75 combinations.\n>>\n>> The other problem with this, is that you could not plausibly deny that it\n>> was a passphrase, whereas, using a 'quantum' passphrase allows you to\n>> backup your passphrase disguised as a 24 seed mnemonic.\n>>\n>> I hope this alleviates your concerns.\n>>\n>> All the best,\n>>\n>> Chris\n>>\n>>\n>> On Tue, 11 May 2021, 09:12 Chris D'Costa, <chrisjdcosta at gmail.com> wrote:\n>>\n>>> I think the biggest problem you have with this proposal is \"rolling your\n>>> own security\".\n>>>\n>>> Are you aware that the dictionary is designed such that the first four\n>>> letters are unique to each word? Taking those four letters and\n>>> concatenating them to a string basically means that I can derive your seed\n>>> from your supposedly secure \"quantum\" passphrase. It does not add to the\n>>> security - if anything it makes it worse. It would be orders of magnitude\n>>> worse than using a random password and encryption as most wallets have been\n>>> using for years.\n>>>\n>>> C\n>>>\n>>> On Sat, 8 May 2021 at 17:21, BitPLATES\u00ae (Chris) via bitcoin-dev <\n>>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>>\n>>>> Hi,\n>>>>\n>>>> I'd like to submit an idea for review, as a potential informational BIP\n>>>> (Bitcoin Improvement Proposal), describing an optional method of producing\n>>>> a BIP39 passphrase, using only BIP39 'mnemonic' seed words.\n>>>>\n>>>> The idea specifically refers to a method of introducing two-factor\n>>>> authentication, to protect a Bitcoin wallet using only 24 seed words, and\n>>>> therefore, providing plausible deniability about the existence of this\n>>>> separate 2nd layer passphrase.\n>>>>\n>>>> I've suggested the name 'quantum' passphrase to be used casually as a\n>>>> unique identifier.\n>>>>\n>>>> The data stored within a 'quantum' passphrase, is simultaneously the\n>>>> minimum required data for reproducing a BIP39-compatible 24-word seed\n>>>> mnemonic... hence, the name 'quantum' seems fitting, to reflect the\n>>>> multiple simultaneous states of data.\n>>>>\n>>>> Abstract...\n>>>>\n>>>> This improvement proposal describes the use of twenty four, newly\n>>>> generated BIP39 seed words, to produce a '25th-word' BIP39-compatible\n>>>> 'quantum' passphrase.\n>>>>\n>>>> Two-factor authentication (2FA) or (2 of 2 multi-signature) can be\n>>>> implemented with a two-wallet setup:\n>>>>\n>>>> The 1st Bitcoin wallet is protected by the seed words of the 2nd\n>>>> Bitcoin wallet; inversely, the 2nd Bitcoin wallet is protected by the seed\n>>>> words of the 1st Bitcoin wallet.\n>>>>\n>>>> The 'quantum' passphrase offers an exponential increase in the level of\n>>>> protection, as that offered by the original BIP39 mnemonic seed words\n>>>> (\u22482048^23 possible combinations).\n>>>>\n>>>> ie. A Bitcoin wallet with a 2nd layer 'quantum'passphrase is protected\n>>>> by 2048^23 to the power of 2048^23 possible combinations.\n>>>>\n>>>> With existing computer capabilities, this level of protection is far\n>>>> greater than required; however, this does provide a sufficient level of\n>>>> protection for each separate layer of a two-factor Bitcoin wallet, should\n>>>> any one layer be accidentally exposed.\n>>>>\n>>>> This method of passphrase generation, consists of two parts:\n>>>>\n>>>> 1st - generating the BIP39 mnemonic seed words, using a\n>>>> BIP39-compatible hardware wallet.\n>>>>\n>>>> 2nd - Converting these seed words into the 'quantum' passphrase,\n>>>> following four simple rules, which most importantly, do not destroy the\n>>>> integrity of the initial data.\n>>>>\n>>>> Motivation...\n>>>>\n>>>> The well established practice of preserving up to 24 seed words for the\n>>>> purpose of reproduction of a Bitcoin wallet, suffers from a major flaw...\n>>>> Exposure of these mnemonic seed words can cause catastrophic loss of funds\n>>>> without adequate multi-factor protection.\n>>>>\n>>>> Whilst it is recognised that a number of multi-factor solutions are\n>>>> available (including the standard BIP39 passphrase, and hardware wallet\n>>>> multi-signature functionality), this proposal aims to provide an extremely\n>>>> safe and secure 'low-tech' option, that requires minimal (non-destructive)\n>>>> adjustments to the seed words.\n>>>>\n>>>> Furthermore, the 'quantum' passphrase offers a number advantages over\n>>>> the existing methods of multi-factor protection:\n>>>>\n>>>> Firstly, this method of creating a passphrase leaves no evidence of its\n>>>> existence on any backup devices, providing plausible deniability in case of\n>>>> coercion.\n>>>>\n>>>> This is because the passphrase is easily created from a genuine 24 seed\n>>>> word mnemonic; therefore, the physical backup of the passphrase can be\n>>>> disguised as a simple Bitcoin wallet on a metal backup plate.\n>>>>\n>>>> It presents a way of discouraging user-created words or sentences (also\n>>>> known as 'brain-wallets'), which often provide a drastically reduced level\n>>>> of passphrase security, unbeknown to many users.\n>>>>\n>>>> The large amount of data required to produce a 'quantum' passphrase (up\n>>>> to 96 characters long), encourages the physical backup of the passphrase.\n>>>>\n>>>> Furthermore, the use of BIP39-only words provides a higher degree of\n>>>> standardization, which can help to avoid potential mistakes made by\n>>>> creating unnecessarily complicated combinations of letters, numbers and\n>>>> symbols. Increased complication (disorderly, and non-human-friendly), does\n>>>> not always equal increased complexity (orderly, and more human-friendly),\n>>>> or increased security.\n>>>>\n>>>> As previously mentioned, a two-wallet configuration provides the user\n>>>> an opportunity to safely split the two factors of protection (equivalent to\n>>>> a 2 of 2 'multi-sig' setup).\n>>>>\n>>>> If a BIP39-compatible passphrase is created using a new set of 24 seed\n>>>> words, it provides 76 degrees of extra complexity (ie. 1 with 76 zeros, or\n>>>> 10\u2077\u2076 possible combinations of words).\n>>>>\n>>>> The strength of this 2nd factor solution, provides adequate\n>>>> risk-management, when considering the production of multiple backup\n>>>> devices, strategically stored in multiple geographical locations.\n>>>>\n>>>> Generating the 'quantum' passphrase...\n>>>>\n>>>> Following just four (non-destructive) BIP39-compatible rules, the 24\n>>>> seed words can also function as a 'quantum' passphrase:\n>>>>\n>>>> 1 . Only BIP39 words\n>>>> (Standard list of 2048 English words - other languages should be\n>>>> compatible)\n>>>>\n>>>> 2 . Only the first four letters of each word\n>>>> (BIP39 words require only this data for reproduction)\n>>>>\n>>>> 3 . Only upper case letters\n>>>> (All alphabet references use this standard format)\n>>>>\n>>>> 4 . No spaces between words\n>>>> (Spaces represent an additional unit of data, that is not recorded)\n>>>>\n>>>> In essence, the 'quantum' passphrase is simply a single string of all\n>>>> 24 seed words, set out using the above rules.\n>>>>\n>>>> I welcome a productive technical discussion.\n>>>>\n>>>> Thanks,\n>>>>\n>>>> Chris Johnston\n>>>>\n>>>>\n>>>> _______________________________________________\n>>>> bitcoin-dev mailing list\n>>>> bitcoin-dev at lists.linuxfoundation.org\n>>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>>\n>>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210511/b77ce05f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Proposal for an Informational BIP",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Tobias Kaupat",
                "BitPLATES (Chris)",
                "BitPLATES\u00ae (Chris)"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 63505
        }
    },
    {
        "title": "[bitcoin-dev] Prediction Markets and Bitcoin",
        "thread_messages": [
            {
                "author": "Prayank",
                "date": "2021-05-11T09:05:40",
                "message_text_only": "Good morning\u00a0ZmnSCPxj,\n\nThis will be a long email because I want to cover all the things and difficult to express them in few sentences or respond to the tweets about use of futures markets in Bitcoin.\n\nTL;DR: Prediction markets or futures markets can be helpful in collecting more information and hedging however, if used incorrectly can become a reason for failure of Bitcoin.\n\n===============================================================\n\n>\u00a0Of course development must be free to do what is best technically, and to experiment and see what other techniques are possible or workable. Thus the market must follow development.\n\nAgree.\n\n>\u00a0Of course the people ultimately funding the development must impose what direction that development goes to, after all, it is their money that is being modified. Thus development must follow the market.\n\nDisagree.\u00a0\n\n1.A position in a futures market about possible outcomes of an event is not equivalent to funding Bitcoin development.\n\n2.People or organizations funding Bitcoin developers or projects can always have some opinion, influence and disagreements. They can never impose or force something at least in Bitcoin protocol.\n\n> what is unclear is what the market wants, thus I think prediction markets are something that are needed in order for the negotiation\n\nPartially agree. Yes, its not clear what the market wants and sometimes its unclear even after expiry of futures contract because two people can look at the same data and share different analysis. Prediction markets are not needed for negotiation but can be helpful sometimes.\n\n===============================================================\n\n3 things I mentioned in TL;DR: Hedging, Collecting information and Incorrect usage\n\n1.Hedging:\nFutures market can be useful in hedging few things in Bitcoin. Jack Mallers had shared the idea of using futures markets for 'fees' in Lightning Conference:\u00a0https://www.youtube.com/watch?v=rBCG0btUlTw\n\nSummary of the presentation(Hedging the chain): Derivatives contracts are used to hedge financial exposure.\u00a0 Projects and businesses that use bitcoin transactions regularly prefer paying less transaction fees. Miners revenue increases if transaction fees goes up and subsidy is reduced after every 210,000 blocks so miners prefer high transaction fees or more fees per block.\n\nExamples:\n\nA)Zap expects $1000/month on-chain operating costs. Longs(1x) on-chain fee futures. If bitcoin transaction fees for the month costs more than $1000, the loss will be covered with profits from long position. If long position is in loss because fees are low, it will be covered by paying less than $1000 for the month in transaction fees.\n\nMiner expects $1000/month on-chain fee profits. Shorts(1x) on-chain fee futures. If short position is in loss because fees go up, loss will be covered with more profits from mining. If profits are less from mining because fees was low, loss will be covered with profits in short position,\n\nB)Hashrate Derivatives:\u00a0https://onthebrink-podcast.com/tim-kelly-bitooda/\n\nC)Consider there is a futures contract for Taproot soft fork. Alice has done enough research and thinks Taproot will be activated. She opens a long position. Bob thinks miners signaling will not reach the required threshold, so Taproot will not be activated with MASF. Bob opens a short position. Carol is working on a project that will work better with taproot activated. She is not interested in speculating but wants to hedge the financial exposure. Carol expects her project will receive $10000 funding and make $1000 profits per month. She opens a short position (1x) which will cover the loss incase taproot is not activated. If taproot is not activated, UASF can take another year which will delay her funding and profits but she can cover this loss with the profits from short position. This futures contract will expire on\u00a02021-08-11 00:00 UTC and settlement is based on multiple oracles that broadcast results for `getblockchaininfo` regularly for their nodes. Start date can be before or after signaling. Trade-offs: If the futures contract starts before signaling, miners are likely to follow the market (not necessary). If the futures contract starts after a week of signaling, traders can use this information while opening a position. In this example, futures contract starts from\u00a02021-05-01 00:00 UTC.\n\nSimilarly if we improve privacy in Bitcoin with a soft fork that includes confidential transactions, Chainalysis can use such futures contract to open a long position because it affects their business. If CT-SF is activated, they can cover some loss with the profits from long position.\u00a0\n\n2.Collecting more information:\na - Bitcoin Dev Mailing List\nb - Different PRs: GitHub repository for Bitcoin Core and other implementations\nc - IRC channels\nd - Bitcoin Stackexchange (If not sure about some technical things involved in a soft fork)\ne - Reddit posts\nf - Twitter (Not the best place to discuss anything important but used a lot so consider it as a source)\ng- Opinion of mining pools: 2nd column in the table\u00a0https://taprootactivation.com/\nh- Bitcoin meetups\ni - Bitcoin podcasts\nk- Interacting with different people involved in exchanges(centralized and DEX), wallets, merchants, layer 2 projects, darknet forums, journalists and activists that use bitcoin for censorship resistant payments, people in countries where local currency cannot be used to store value long term, new developers interested to build Bitcoin projects, people and organizations funding different Bitcoin projects or devs etc.\nl - Miners signaling:\u00a0https://taproot.watch/\u00a0(This is not voting, it represents \"readiness\")\nm-Futures market using P2P derivatives:\u00a0https://github.com/p2pderivatives/p2pderivatives-client\n\nI don't think futures market in this case will be able to aggregate and reflect all available information so everything mentioned above has its own importance which should be considered. Maybe I missed few things.\n\n3.Incorrect usage of futures markets in Bitcoin and other issues:\n\nIssues and few examples:\n\nIncentives: If you create a futures market to predict if someone is alive or not, there can always be someone trying to exploit it by betting on death and kill the person before expiry of futures contract. Similarly, miners can manipulate fees in short term and affect the futures market suggested by Jack Mallers.\n\nLegality: It may not be possible for everyone to participate in such markets or some people may avoid because of laws in their country.\n\nKnowledge: You need more than just money and click on a button to understand changes proposed in a BIP. Not everyone can understand the technical things involved. Due to this lack of knowledge, the crowd can sometimes be wrong.\n\nVolume and Liquidity: Thin orderbooks and low trading volumes can be manipulated easily.\n\nPrediction market inaccuracies:\n\n-Brexit\n-2016 US Presidential Elections\n-In 2004 presidential markets a single trader made a series of large investments in an apparent attempt to make one candidate appear stronger (This manipulation was for short term but\u00a0markets can remain irrational longer than you can remain solvent)\n-Finding weapons of mass destruction in Iraq in 2003\n-Nomination of John Roberts to the U.S. Supreme Court in 2005\n\nA)We don't have enough sample size to conclude anything about use of futures markets for Bitcoin soft forks in past.\n\nB)Futures markets cannot be used alone to 'decide' 'things in Bitcoin by ignoring everything else. Example: A soft fork is proposed as BIP. Code to implement is reviewed. Most users agree with the improvements. Mining pools, exchanges, merchants, different projects, other businesses have no issues. Miners signaling in first week looks positive. Futures market is uncertain and this uncertainty is reflected in signaling for sometime. People who are against UASF think Bitcoin doesn't need any improvements. Miners signaling was more than 70% but never reach the threshold and soft fork is not activated. Any discussions about UASF are termed as anti-Bitcoin by few devs because \"markets\".\u00a0 This soft fork could have improved privacy and add more features. However, we ignore everything and respond with \"ossification\" meme or something else on Twitter when someone asks for basic improvements in Bitcoin.\n\nFutures markets should exist and nobody can stop people from participating in such markets however we should be careful in using them for Bitcoin.\n\n-- \n Prayank\n\nApr 16, 2021, 09:09 by ZmnSCPxj at protonmail.com:\n\n> Good morning Prayank,\n>\n>\n>> I think prediction markets or such tokens might help in adding to the information we already have however they don't decide or replace anything. Bitcoin development should impact such markets and not the other way around.\u00a0\n>>\n>\n> \"Human behavior is economic behavior. The particulars may vary, but competition for limited resources remains a constant. Need as well as greed have followed us to the stars, and the rewards of wealth still await those wise enough to recognize this deep thrumming of our common pulse. \" -- CEO Nwabudike Morgan, \"The Centauri Monopoly\", *Sid Meier's Alpha Centauri*\n>\n> This is the tension between the necessary freedom of discovering strange new techniques, and the exigencies of life, where every joule of negentropy is a carefully measured resource.\n>\n> Of course development must be free to do what is best technically, and to experiment and see what other techniques are possible or workable.\n> Thus the market must follow development.\n>\n> Of course the people ultimately funding the development must impose what direction that development goes to, after all, it is their money that is being modified.\n> Thus development must follow the market.\n>\n> It is the negotiation of the two that is difficult.\n>\n> Overall, I think a lot of the developer arguments are reasonably clear --- what is unclear is what the market wants, thus I think prediction markets are something that are needed in order for the negotiation between these two aspects to advance.\n>\n> Regards,\n> ZmnSCPxj\n>\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210511/5b2cc360/attachment-0001.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T12:15:58",
                "message_text_only": "Good morning Prayank,\n\n>\n> >\u00a0Of course the people ultimately funding the development must impose what direction that development goes to, after all, it is their money that is being modified. Thus development must follow the market.\n>\n> Disagree.\u00a0\n>\n> 1.A position in a futures market about possible outcomes of an event is not equivalent to funding Bitcoin development.\n>\n> 2.People or organizations funding Bitcoin developers or projects can always have some opinion, influence and disagreements. They can never impose or force something at least in Bitcoin protocol.\n\nSorry for the late reply.\n\nI expect that many Bitcoin developers have a nontrivial amount of their life savings in Bitcoin.\n\nAny change in Bitcoin price represents a significant change in the value of these life savings.\n\nA position in a futures market represents a prediction by the one taking the position that they expect the price of Bitcoin to change in a particular direction, possibly based on some condition, including the direction where development goes.\n\nThis signal then represents an implicit threat (\"if Bitcoin goes against this position, I will liquidate my Bitcoin and drop the Bitcoin price\") which can be sufficient to \"fund\" or \"de-fund\" developers who have a significant stake in Bitcoin.\n\n\n\n\n> I don't think futures market in this case will be able to aggregate and reflect all available information so everything mentioned above has its own importance which should be considered. Maybe I missed few things.\n\n*Some* information > *No* information\n\n>\n> 3.Incorrect usage of futures markets in Bitcoin and other issues:\n\nWell, yes, this is the hard part, sigh.\n\n\nRegards,\nZmnSCPxj"
            }
        ],
        "thread_summary": {
            "title": "Prediction Markets and Bitcoin",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "ZmnSCPxj",
                "Prayank"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 11912
        }
    },
    {
        "title": "[bitcoin-dev] L2s Onchain Support IRC Workshop : Agenda & Schedule",
        "thread_messages": [
            {
                "author": "Antoine Riard",
                "date": "2021-05-12T14:35:34",
                "message_text_only": "Hi,\n\nFollowing-up on the workshop announcement [0], I'm proposing today's early\nagenda and schedule.\n\nDates have been picked up 2 weeks after the end of the Miami's conference\nas the american crowd will travel around and won't be necessary on their\nkeyboards. Also, if folks from Asia/Pacific timezones want to join or\nparticipate, I'm all good to set up additional, more-friendly sessions.\n\n* 1st meeting: Tuesday 15th June 19:00 - 20:30  UTC\n\nTopics will be \"Guidelines about L2 protocols onchain security design\",\n\"Coordinated cross-layers security disclosures\", \"Full-RBF proposal\".\n\n* 2nd meeting: Tuesday 22th June 19:00 - 20:30 UTC\n\nTopics will be \"Package relay design and/or generic L2 fee-bumping\nprimitive\".\n\nI hope to address most of the issues in two sessions. If it doesn't fit, we\ncan still do a third one on the 29th June.\n\nDiscussions will happen on the new chan #l2-onchain-support freenode.\n\nMeanwhile, I'll prepare a series of open questions and resource pointers\nfor each topic. Also, coming up with weaponized pinning attacks against LN\nnodes and proposals on how you can improve double-spend protection\nhopefully with package relay or p2p extensions if we move towards full-rbf.\n\nIf any L2 protocol dev/designer have specific transaction relay\nrequirements for their projects, especially ones far different from\nLightning, I'm really interested if you want to share them in the\nL2-zoology repo (https://github.com/ariard/L2-zoology/tree/master/protocols)\nor anywhere else. I'm doing my best to keep up with most L2 security\nmodels, that said the space is growing fast :)\n\nCheers,\nAntoine\n\n[0]\nhttps://lists.linuxfoundation.org/pipermail/lightning-dev/2021-April/003002.html\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210512/9d9de823/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "L2s Onchain Support IRC Workshop : Agenda & Schedule",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Antoine Riard"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1879
        }
    },
    {
        "title": "[bitcoin-dev] Introductory Video on Blockchain Commons UR/QR Tech Now Available",
        "thread_messages": [
            {
                "author": "Christopher Allen",
                "date": "2021-05-13T14:52:19",
                "message_text_only": "Over the last few years, Blockchain Commons\n<https://www.BlockchainCommons.com/> has been working with our Airgapped\nWallet Community\n<https://github.com/BlockchainCommons/Airgapped-Wallet-Community> to\nproduce interoperability specifications to improve Bitcoin wallet usage \u2014\nand in the future, other cryptocurrency applications, such as Ethereum\nwallets, and other cryptography aps, such as chat systems, key-management\nprograms, and more. Our goal is to improve the independence, security, and\nresilience of cryptographic systems.\n\nWe recently put together an introductory video to talk about our\ninitiatives:\n\n* https://www.youtube.com/watch?v=RYgOFSdUqWY\n\nWe've been working on encoding methods, improved sharding methods, better\nuser interfaces, partitioned architectures, multisig patterns and more.\nIt's all in there!\n\nWe've also begun work on new documentation for developers, to help\nintroduce some of our specifications. That begins with a look at Uniform\nReferences, our typed method for encoding binary data in plain-text strings\nthat are also well-formed URIs suitable for QR.\n\n* UR Overview \u2014\nhttps://github.com/BlockchainCommons/crypto-commons/blob/master/Docs/ur-1-overview.md\n* A Guide to Using UR for Key Material \u2014\nhttps://github.com/BlockchainCommons/crypto-commons/blob/master/Docs/ur-2-keys.md\n\n(We've got a few more docs coming soon on using URs interactively and for\nanimated PSBTs and shamir seed shares.)\n\nIf anyone is interested in talking about these specifications and other\ntechnologies more, I'm always enthusiastic to do so, here or in the Airgapped\nWallet Community Discussions\n<https://github.com/BlockchainCommons/Airgapped-Wallet-Community/discussions>.\nI'm also enthusiastic to get more developers on board in using these\ntechnologies, joining folks like Fully Noded, AirGap Vault, BlueWallet,\nCobo Wallet, and Sparrow Wallet \u2014 interoperability takes a community!\n\nFor further details, I've included a set of links for the topics covered in\nthe video.\n\nChristopher Allen\nPresident, Blockchain Commons\n\nCOMMUNITY LINKS\n\n* Blockchain Commons Website \u2014 https://www.blockchaincommons.com/\n* Blockchain Commons Repos \u2014 https://github.com/BlockchainCommons\n* Airgapped Wallet Community \u2014\nhttps://github.com/BlockchainCommons/Airgapped-Wallet-Community\n\nBLOCKCHAIN COMMONS TECHNOLOGIES\n\n* ByteWords \u2014\nhttps://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-012-bytewords.md\n* LifeHash \u2014 https://github.com/BlockchainCommons/bc-lifehash\n* SSKR \u2014\nhttps://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-011-sskr.md\n* Uniform Resources (URs) \u2014\nhttps://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-005-ur.md\n   * Registry of UR Types \u2014\nhttps://github.com/BlockchainCommons/Research/blob/master/papers/bcr-2020-006-urtypes.md\n\nRELATED LIBRARIES\n\n* ByteWords \u2014\nhttps://github.com/BlockchainCommons/crypto-commons#bc-bytewords\n* LifeHash \u2014 https://github.com/BlockchainCommons/crypto-commons#lifehash\n* SSKR \u2014 https://github.com/BlockchainCommons/crypto-commons#bc-sskr\n* UR \u2014 https://github.com/BlockchainCommons/crypto-commons#bc-ur\n\nSECURITY ARCHITECTURES & METHODS\n\n* #SmartCustody \u2014 https://www.smartcustody.com/\n* TorGap \u2014 https://github.com/BlockchainCommons/torgap\n* Designing Multisigs for Independence & Resilience -\nhttps://github.com/BlockchainCommons/Gordian/blob/master/Docs/Multisig.md\n\nEDUCATION\n* Learning Bitcoin from the Command Line 2.0 -\nhttps://github.com/BlockchainCommons/Learning-Bitcoin-from-the-Command-Line\n\nAPPLICATIONS MENTIONED\n\n* Gordian Guardian \u2014\nhttps://github.com/BlockchainCommons/GordianGuardian-iOS\n* Gordian Server \u2014 https://github.com/BlockchainCommons/GordianServer-macOS\n* Gordian Wallet \u2014 https://github.com/BlockchainCommons/GordianWallet-iOS\n* Keytool \u2014 https://github.com/BlockchainCommons/keytool-cli\n* LetheKit \u2014 https://github.com/BlockchainCommons/lethekit\n* Seedtool \u2014 https://github.com/BlockchainCommons/seedtool-cli\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210513/016fd47e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Introductory Video on Blockchain Commons UR/QR Tech Now Available",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Christopher Allen"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 4134
        }
    },
    {
        "title": "[bitcoin-dev] Proposal: Force to do nothing for first 9 minutes to save 90% of mining energy",
        "thread_messages": [
            {
                "author": "Michael Fuhrmann",
                "date": "2021-05-14T21:41:23",
                "message_text_only": "Hello,\n\nBitcoin should create blocks every 10 minutes in average. So why do\nminers need to mine the 9 minutes after the last block was found? It's\nnot necessary.\n\nProblem: How to prevent \"pre-mining\" in the 9 minutes time window?\n\nPossible ideas for discussion:\n\n- (maybe most difficult) global network timer sending a salted hash time\ncode after 9 minutes. this enables validation by nodes.\n\n- (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\nhigh enough) times higher difficulty. so everyone can mine any time but\nbefore to 9 minutes are up there will be a too high downside. It is more\nefficient to wait then paying high bills. The bitcoin will get a \"puls\".\n\n\nI dont think I see all problems behind these ideas but if there is a\nworking solution to do so then the energy fud will find it's end. Saving\nenergy without loosing rosbustness.\n\n\n\n:)"
            },
            {
                "author": "Ren\u00e9 Pickhardt",
                "date": "2021-05-15T22:14:13",
                "message_text_only": "Hey Michael,\n\nFirst I think the idea of \"do nothing in the first 9 minutes\" will\nunfortunately not be useful as the computed work is mainly there to prevent\nminers from altering the history of previous blocks. Thus following your\nsuggesting would probably drastically decease the security of the network\nas less work protects previously mined blocks allowing for lower cost to\ncompute a reorg.\n\n\nLet us assume the aforementioned point could somehow be resolved there\nwould be another practical issue. It is hard / impossible to sync clocks in\na distributed network which I think would be necessary for a system that\nyou propose. (actually Bitcoin is one way of introducing a temporal\nordering of events in a distributed network)\n\nFinally even if that was also resolved: How would you prevent miners to\nalready compute the simpler difficulty problem directly after the block was\nfound and publish their solution directly after minute 9? We would always\nhave many people with a finished / competing solution.\n\nSo while I appreciate the idea I have the feeling it would be impractical\nbut maybe I missed something.\n\nBest Rene\n\nMichael Fuhrmann via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>\nschrieb am Sa., 15. Mai 2021, 23:57:\n\n> Hello,\n>\n> Bitcoin should create blocks every 10 minutes in average. So why do\n> miners need to mine the 9 minutes after the last block was found? It's\n> not necessary.\n>\n> Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n>\n> Possible ideas for discussion:\n>\n> - (maybe most difficult) global network timer sending a salted hash time\n> code after 9 minutes. this enables validation by nodes.\n>\n> - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n> high enough) times higher difficulty. so everyone can mine any time but\n> before to 9 minutes are up there will be a too high downside. It is more\n> efficient to wait then paying high bills. The bitcoin will get a \"puls\".\n>\n>\n> I dont think I see all problems behind these ideas but if there is a\n> working solution to do so then the energy fud will find it's end. Saving\n> energy without loosing rosbustness.\n>\n>\n>\n> :)\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210516/eac0b836/attachment.html>"
            },
            {
                "author": "Pavol Rusnak",
                "date": "2021-05-15T22:19:31",
                "message_text_only": "Please read the Bitcoin whitepaper. It's a very interesting read.\n\n--\nBest Regards / S pozdravom,\n\nPavol \"stick\" Rusnak\nCo-founder and CTO, SatoshiLabs\n\nOn Sat, May 15, 2021, 23:57 Michael Fuhrmann via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hello,\n>\n> Bitcoin should create blocks every 10 minutes in average. So why do\n> miners need to mine the 9 minutes after the last block was found? It's\n> not necessary.\n>\n> Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n>\n> Possible ideas for discussion:\n>\n> - (maybe most difficult) global network timer sending a salted hash time\n> code after 9 minutes. this enables validation by nodes.\n>\n> - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n> high enough) times higher difficulty. so everyone can mine any time but\n> before to 9 minutes are up there will be a too high downside. It is more\n> efficient to wait then paying high bills. The bitcoin will get a \"puls\".\n>\n>\n> I dont think I see all problems behind these ideas but if there is a\n> working solution to do so then the energy fud will find it's end. Saving\n> energy without loosing rosbustness.\n>\n>\n>\n> :)\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210516/48aac0b2/attachment-0001.html>"
            },
            {
                "author": "Zac Greenwood",
                "date": "2021-05-16T15:30:22",
                "message_text_only": "Hi Michael,\n\nYour proposal won\u2019t save any energy because it does nothing to decrease the\nbudget available to mine a block (being the block reward).\n\nEven if it were technically possible to find a way for nodes to somehow\nreach consensus on a hash that gets generated after 9 minutes, all it\nachieves is that miners will be expending the entire budget given to them\nin the form of the block reward within a single minute on average.\n\nAlso please realize that the energy expenditure of Bitcoin is a fundamental\npart of its design. An attacker has no other option than to expend as much\nas half of all the miners together do in order for a sustained 51% attack\nto be successful, making such attack uneconomical.\n\nZac\n\nOn Sat, 15 May 2021 at 23:57, Michael Fuhrmann via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hello,\n>\n> Bitcoin should create blocks every 10 minutes in average. So why do\n> miners need to mine the 9 minutes after the last block was found? It's\n> not necessary.\n>\n> Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n>\n> Possible ideas for discussion:\n>\n> - (maybe most difficult) global network timer sending a salted hash time\n> code after 9 minutes. this enables validation by nodes.\n>\n> - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n> high enough) times higher difficulty. so everyone can mine any time but\n> before to 9 minutes are up there will be a too high downside. It is more\n> efficient to wait then paying high bills. The bitcoin will get a \"puls\".\n>\n>\n> I dont think I see all problems behind these ideas but if there is a\n> working solution to do so then the energy fud will find it's end. Saving\n> energy without loosing rosbustness.\n>\n>\n>\n> :)\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210516/2c39b6a2/attachment.html>"
            },
            {
                "author": "Karl",
                "date": "2021-05-16T18:10:12",
                "message_text_only": "[sorry if I haven't replied to the other thread on this, I get swamped\nby email and don't catch them all]\n\nThis solution is workable but it seems somewhat difficult to me at this time.\n\nThe clock might be implementable on a peer network level by requiring\ninclusion of a transaction that was broadcast after a 9 minute delay.\n\nUsually a 50% hashrate attack is needed to reverse a transaction in\nbitcoin.  With this change, this naively appears to become a 5%\nhashrate attack, unless a second source of truth around time and order\nis added, to verify proposed histories with.\n\nA 5% hashrate attack is much harder here, because the users of mining\npools would be mining only 10% of the time, so compromising mining\npools would not be as useful.\n\nHistorically, hashrate has increased exponentially.  This means that\nthe difficulty of performing an attack, whether it is 5% or 50%, is\nstill culturally infeasible because it is a multiplicative, rather\nthan an exponential, change.\n\nIf this approach were to be implemented, it could be important to\nconsider how many block confirmations people wait for to trust their\ntransaction is on the chain.  A lone powerful miner could\nintentionally fork the chain more easily by a factor of 10.  They\nwould need to have hashrate that competes with a major pool to do so.\n\n> How would you prevent miners to already compute the simpler difficulty problem directly after the block was found and publish their solution directly after minute 9? We would always have many people with a finished / competing solution.\n\nSuch a chain would have to wait a longer time to add further blocks\nand would permanently be shorter.\n\n> Your proposal won\u2019t save any energy because it does nothing to decrease the budget available to mine a block (being the block reward).\n\nYou are assuming this budget is directly related to energy\nexpenditure, but if energy is only expended for 10% of the same\nduration, this money must now be spent on hardware.  The supply of\nbitcoin hardware is limited.\n\nIn the long term, it won't be, so a 10% decrease is a stop-gap\nmeasure.  Additionally, in the long term, we will have quantum\ncomputers and AI-designed cryptography algorithms, so things will be\ndifferent in a lot of other ways too."
            },
            {
                "author": "Anton Ragin",
                "date": "2021-05-16T20:31:47",
                "message_text_only": "1. Has anyone considered that it might be technically not possible to\ncompletely 'power down' mining rigs during this 'cool-down' period of time?\nWhile modern CPUs have power-saving modes, I am not sure about ASICs used\nfor mining.\n\n2. I am not a huge data-center specialist, but it was my understanding that\nthey charge per unit of installed (maximum) electricity consumption. It\nwould mean that if the miner needs X kilowatts-hour within that 1 minute\nwhen they are allowed to mine, he/she will have to pay for the same X for\nthe remaining 9 minutes - and as such would have no economic incentive not\nto draw that power when idling.\n\n3. Not really a criticism of the idea to reduce Bitcoin energy consumption,\nbut rather a couple of observations:\n\n(a) Environmental concerns cause Bitcoin to be less popular and thus push\nthe price lower, which in turn lowers miner's power consumption (lower\nBitcoin price => less they can afford to spend on electricity). So it is a\nself-stabilizing system to begin with.\n(b) Crazy power consumption may be a temporary problem, after the number of\nhalving events economic attractiveness of mining will decrease and power\nconsumption with it.\n\n4. My counter-proposal to the community to address energy consumption\nproblems would be *to encourage users to allow only 'green miners' process\ntheir transaction.* In particular:\n\n(a) According to this source (\nhttps://www.blockchain.com/charts/transaction-fees-usd), fees represent\napproximately 12.5% of total miner reward. Not a lot, but not insignificant\neither.\n\n(b) Based on the method used in this source (\nhttps://digiconomist.net/bitcoin-energy-consumption/) to offset CO2\nemissions of bitcoin mining the miner would need to spend approx ~3.6% -\n7.2% (depending how 'dirty' is his power source) x 87.5% (mined portion of\nits rewards) of its fees (assuming 50k Bitcoin price and 15$ / tonne of CO2\nprice of carbon offset).\n\n(b) Should there be some non-profit organization(s) certifying green miners\nand giving them cryptographic certificates of conformity (either usage of\ngreen energy or purchase of offsets), users could encrypt their\ntransactions and submit to mempool in such a format that *only green miners\nwould be able to decrypt and process them*.\n\nUsers routing transactions specifically to 'green miners' (and posting\npotentially higher fees) would create economic incentives for miners to use\ngreen energy and/or buy CO2 offsets, as described above with ~3.1% - 6.8%\nof total revenue cost to offset CO2 vs.12.5% of fees component in mining,\nif majority of users would use the routing to green miners method - there\nis a chance that Bitcoin network will become significantly greener.\n\nAnton.\n\nOn Sun, May 16, 2021 at 8:02 PM Karl via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> [sorry if I haven't replied to the other thread on this, I get swamped\n> by email and don't catch them all]\n>\n> This solution is workable but it seems somewhat difficult to me at this\n> time.\n>\n> The clock might be implementable on a peer network level by requiring\n> inclusion of a transaction that was broadcast after a 9 minute delay.\n>\n> Usually a 50% hashrate attack is needed to reverse a transaction in\n> bitcoin.  With this change, this naively appears to become a 5%\n> hashrate attack, unless a second source of truth around time and order\n> is added, to verify proposed histories with.\n>\n> A 5% hashrate attack is much harder here, because the users of mining\n> pools would be mining only 10% of the time, so compromising mining\n> pools would not be as useful.\n>\n> Historically, hashrate has increased exponentially.  This means that\n> the difficulty of performing an attack, whether it is 5% or 50%, is\n> still culturally infeasible because it is a multiplicative, rather\n> than an exponential, change.\n>\n> If this approach were to be implemented, it could be important to\n> consider how many block confirmations people wait for to trust their\n> transaction is on the chain.  A lone powerful miner could\n> intentionally fork the chain more easily by a factor of 10.  They\n> would need to have hashrate that competes with a major pool to do so.\n>\n> > How would you prevent miners to already compute the simpler difficulty\n> problem directly after the block was found and publish their solution\n> directly after minute 9? We would always have many people with a finished /\n> competing solution.\n>\n> Such a chain would have to wait a longer time to add further blocks\n> and would permanently be shorter.\n>\n> > Your proposal won\u2019t save any energy because it does nothing to decrease\n> the budget available to mine a block (being the block reward).\n>\n> You are assuming this budget is directly related to energy\n> expenditure, but if energy is only expended for 10% of the same\n> duration, this money must now be spent on hardware.  The supply of\n> bitcoin hardware is limited.\n>\n> In the long term, it won't be, so a 10% decrease is a stop-gap\n> measure.  Additionally, in the long term, we will have quantum\n> computers and AI-designed cryptography algorithms, so things will be\n> different in a lot of other ways too.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210516/7089b3eb/attachment-0001.html>"
            },
            {
                "author": "Eric Voskuil",
                "date": "2021-05-16T22:06:14",
                "message_text_only": "https://github.com/libbitcoin/libbitcoin-system/wiki/Efficiency-Paradox\n\nhttps://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Memory-Fallacy\n\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210516/d8707941/attachment.html>"
            },
            {
                "author": "Karl",
                "date": "2021-05-16T23:29:47",
                "message_text_only": "On 5/16/21, Eric Voskuil via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n> https://github.com/libbitcoin/libbitcoin-system/wiki/Efficiency-Paradox\n> https://github.com/libbitcoin/libbitcoin-system/wiki/Proof-of-Memory-Fallacy\n\nThe chain security actually reduces by 10% in this proposal.  So the\nefficiency paradox is not violated, it is just the real cost of\nconfirming a transaction is reduced, because there is actually less\nsecurity. This eventually reduces the price of bitcoin and reduces the\namount of electricity the block reward can eventually buy."
            },
            {
                "author": "Zac Greenwood",
                "date": "2021-05-16T21:15:21",
                "message_text_only": "> if energy is only expended for 10% of the same duration, this money must\nnow be spent on hardware.\n\nMore equipment obviously increases the total energy usage.\n\nYou correctly point out that the total expenses of a miner are not just\nenergy but include capital expenses for equipment and operational cost for\nstaff, rent etc.\n\nActually, non-energy expenses are perhaps a much larger fraction of the\ntotal cost than you might expect. Miners using excess waste energy such as\nChinese miners close to hydropower stations pay a near zero price for\nenergy and are unlikely to be bound by the price of electricity.\n\nUnsurprisingly, miners having access to near-free electricity are\nresponsible for a significant share of the total energy usage of Bitcoin.\nSince such energy is often waste energy from renewable sources such as\nhydropower, the carbon footprint of Bitcoin is not nearly as alarming as\nits energy usage implies. In fact, since mining is a race to the bottom in\nterms of cost, these large miners drive out competing miners that employ\nmore expensive, often non-renewable sources of energy. It\u2019s for instance\nimpossible to mine profitably using household-priced electricity. Looking\nat it from that angle, access to renewable, near-free waste energy helps\nkeeping Bitcoin more green than it would otherwise be. To put it another\nway: the high energy usage of the Bitcoin network indicates cheap,\notherwise wasted energy is employed.\n\nFor your proposal again this means that energy usage would not be likely to\ndecrease appreciably, because large miners having access to near-free\nenergy use the block-reward sized budget fully on equipment and other\noperational expenses.\n\nOn the other hand, roughly every four years the coinbase reward halves,\nwhich does significantly lower the miner budget, at least in terms of BTC.\n\nZac\n\n\n\nOn Sun, 16 May 2021 at 21:02, Karl via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> [sorry if I haven't replied to the other thread on this, I get swamped\n> by email and don't catch them all]\n>\n> This solution is workable but it seems somewhat difficult to me at this\n> time.\n>\n> The clock might be implementable on a peer network level by requiring\n> inclusion of a transaction that was broadcast after a 9 minute delay.\n>\n> Usually a 50% hashrate attack is needed to reverse a transaction in\n> bitcoin.  With this change, this naively appears to become a 5%\n> hashrate attack, unless a second source of truth around time and order\n> is added, to verify proposed histories with.\n>\n> A 5% hashrate attack is much harder here, because the users of mining\n> pools would be mining only 10% of the time, so compromising mining\n> pools would not be as useful.\n>\n> Historically, hashrate has increased exponentially.  This means that\n> the difficulty of performing an attack, whether it is 5% or 50%, is\n> still culturally infeasible because it is a multiplicative, rather\n> than an exponential, change.\n>\n> If this approach were to be implemented, it could be important to\n> consider how many block confirmations people wait for to trust their\n> transaction is on the chain.  A lone powerful miner could\n> intentionally fork the chain more easily by a factor of 10.  They\n> would need to have hashrate that competes with a major pool to do so.\n>\n> > How would you prevent miners to already compute the simpler difficulty\n> problem directly after the block was found and publish their solution\n> directly after minute 9? We would always have many people with a finished /\n> competing solution.\n>\n> Such a chain would have to wait a longer time to add further blocks\n> and would permanently be shorter.\n>\n> > Your proposal won\u2019t save any energy because it does nothing to decrease\n> the budget available to mine a block (being the block reward).\n>\n> You are assuming this budget is directly related to energy\n> expenditure, but if energy is only expended for 10% of the same\n> duration, this money must now be spent on hardware.  The supply of\n> bitcoin hardware is limited.\n>\n> In the long term, it won't be, so a 10% decrease is a stop-gap\n> measure.  Additionally, in the long term, we will have quantum\n> computers and AI-designed cryptography algorithms, so things will be\n> different in a lot of other ways too.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210516/e9275902/attachment.html>"
            },
            {
                "author": "Karl",
                "date": "2021-05-16T22:05:44",
                "message_text_only": "> 1. Has anyone considered that it might be technically not possible to completely 'power down' mining rigs during this 'cool-down' period of time? While modern CPUs have power-saving modes, I am not sure about ASICs used for mining.\n\nSounds like a point to consider, note the economic pressure of course\nso most people will find a way to power down.\n\n> 2. I am not a huge data-center specialist, but it was my understanding that they charge per unit of installed (maximum) electricity consumption. It would mean that if the miner needs X kilowatts-hour within that 1 minute when they are allowed to mine, he/she will have to pay for the same X for the remaining 9 minutes - and as such would have no economic incentive not to draw that power when idling.\n\nThat sounds kind of exotic, could you take charge of checking to see\nhow true it is?\n\n> (a) Environmental concerns cause Bitcoin to be less popular and thus push the price lower, which in turn lowers miner's power consumption (lower Bitcoin price => less they can afford to spend on electricity). So it is a self-stabilizing system to begin with.\n\nI like the idea but history shows that money outcompetes cute animals.\n\n> (b) Crazy power consumption may be a temporary problem, after the number of halving events economic attractiveness of mining will decrease and power consumption with it.\n\nIf hashrate flattens, the chain security situation changes too.\n\n> 4. My counter-proposal to the community to address energy consumption problems would be to encourage users to allow only 'green miners' process their transaction. In particular:\n\nThis cool idea of providing a way for users to support different\nminers with their transactions is not in conflict with reducing mining\ntime.  Both of these ideas are great ones; they are very different.\n\nOn 5/16/21, Zac Greenwood <zachgrw at gmail.com> wrote:\n>> if energy is only expended for 10% of the same duration, this money must\n> now be spent on hardware.\n>\n> More equipment obviously increases the total energy usage.\n\nAre there people who can freely produce new mining equipment to an\narbitrary degree?  As I mentioned already and you didn't address, I\nthought the supply was limited.\n\n> For your proposal again this means that energy usage would not be likely to decrease appreciably, because large miners having access to near-free energy use the block-reward sized budget fully on equipment and other operational expenses.\n\nPurchasing equipment with the same funds is unrelated to whether or\nnot the machines are running full blast during a theoretical 90%\ndowntime when a hash cannot succeed.  If their electricity is free,\nthey have no new funds to buy equipment with.\n\nAdditionally, you claim that all these people use renewable energy so\nI don't know why they are being discussed at all.\n\n> On the other hand, roughly every four years the coinbase reward halves, which does significantly lower the miner budget, at least in terms of BTC.\n\nAdjusting that could be another good approach to influencing\nproperties of the chain.  I think there's another thread around it,\nrather than this one."
            },
            {
                "author": "Zac Greenwood",
                "date": "2021-05-17T09:34:38",
                "message_text_only": ">\n>\n> Are there people who can freely produce new mining equipment to an\n> arbitrary degree?\n>\n\nClose. Bitmain for example produces their own ASICs and rigs which they\nmine with. Antpool is controlled by Bitmain and has a significant amount of\nthe hash power. The marginal cost of an ASIC chip or mining rig is low\ncompared to R&D and setting up of the production lines etc. For Bitmain\nit\u2019s relatively cheap to produce an additional mining rig.\n\nUnfortunately I failed to make sense of your other remarks which looked\nrather confused so I take the liberty to disregard them.\n\nZac\n\n\n_______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210517/dd803ec5/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2021-05-17T02:58:12",
                "message_text_only": "On Friday 14 May 2021 21:41:23 Michael Fuhrmann via bitcoin-dev wrote:\n> Bitcoin should create blocks every 10 minutes in average. So why do\n> miners need to mine the 9 minutes after the last block was found? It's\n> not necessary.\n\nIt increases security, and is unavoidable anyway.\n\n> Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n\nYou can't.\n\n> Possible ideas for discussion:\n>\n> - (maybe most difficult) global network timer sending a salted hash time\n> code after 9 minutes. this enables validation by nodes.\n\nPoW *is* the global network timer.\n\n> - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n> high enough) times higher difficulty. so everyone can mine any time but\n> before to 9 minutes are up there will be a too high downside. It is more\n> efficient to wait then paying high bills. The bitcoin will get a \"puls\".\n\nThere's no timestamp at this stage of consensus.\n\nOn Sunday 16 May 2021 18:10:12 Karl via bitcoin-dev wrote:\n> The clock might be implementable on a peer network level by requiring\n> inclusion of a transaction that was broadcast after a 9 minute delay.\n\nThat requires a centralised authority.\n\nOn Sunday 16 May 2021 20:31:47 Anton Ragin via bitcoin-dev wrote:\n> 1. Has anyone considered that it might be technically not possible to\n> completely 'power down' mining rigs during this 'cool-down' period of time?\n> While modern CPUs have power-saving modes, I am not sure about ASICs used\n> for mining.\n\nThat would be miners' problem, not the network's... New ASICs would no doubt \nbe made to work more efficiently.\n\n> 2. I am not a huge data-center specialist, but it was my understanding that\n> they charge per unit of installed (maximum) electricity consumption. It\n> would mean that if the miner needs X kilowatts-hour within that 1 minute\n> when they are allowed to mine, he/she will have to pay for the same X for\n> the remaining 9 minutes - and as such would have no economic incentive not\n> to draw that power when idling.\n\nActually, this would be a good thing: it would heavily discourage datacentre \nuse (which is very harmful to mining decentralisation).\n\n> 4. My counter-proposal to the community to address energy consumption\n> problems would be *to encourage users to allow only 'green miners' process\n> their transaction.* In particular:\n>...\n> (b) Should there be some non-profit organization(s) certifying green miners \n> and giving them cryptographic certificates of conformity (either usage of\n> green energy or purchase of offsets), users could encrypt their\n> transactions and submit to mempool in such a format that *only green miners\n> would be able to decrypt and process them*.\n\nHello centralisation. Might as well just have someone sign miner keys, and get \nrid of PoW entirely..."
            },
            {
                "author": "Anton Ragin",
                "date": "2021-05-17T12:39:02",
                "message_text_only": ">> 2. I am not a huge data-center specialist, but it was my understanding\nthat they charge per unit of installed (maximum) electricity consumption.\nIt would mean that if the miner needs X kilowatts-hour within that 1 minute\nwhen they are allowed to mine, he/she will have to pay for the same X for\nthe remaining 9 minutes - and as such would have no economic incentive not\nto draw that power when idling.\n\n>That sounds kind of exotic, could you take charge of checking to see\n>how true it is?\n\nI am pretty sure that is how it works in data centers absent 'special\ndeal', as we use some DCs in our business. However, after reading some\ndiscussion on this thread it is pretty clear that some (maybe even\nmajority?) of miners have some sort of special deal on electricity - some\nuse 'spill over' electricity which would otherwise be wasted etc. This kind\nof disproves my point, but not entirely - even 'special deal' electricity\nis very unlikely to be available like water in the tap - you open it when\nyou need it, and pay for what you use only.\n\nVariations in power consumption in the grid are very difficult to\ncompensate for:\n\n(a) there is no efficient way to store electricity;\n(b) some (majority?) power-generating assets are notoriously difficult to\nthrottle up and down - it takes almost a day in some cases to throttle down\npower production on the nuclear power plant for example.\n\n(did you know that sometimes the spot price for electricity goes below\nzero, and consumers are being paid to consume - exactly because it is\ncheaper to pay somebody to consume electricity than to switch off the\nreactor?)\n\nBecause of this, an enormous spike in energy consumption every 1 minute in\n10 is the worst possible load profile to any power grid, and would most\nlikely result in either miners or power grid infrastructure itself just\nburning off peak energy during the 9 minutes 'cool-down' period.\n\n>> 4. My counter-proposal to the community to address energy consumption\n>> problems would be *to encourage users to allow only 'green miners'\nprocess\n>> their transaction.* In particular:\n>>...\n>> (b) Should there be some non-profit organization(s) certifying green\nminers\n>> and giving them cryptographic certificates of conformity (either usage of\n>> green energy or purchase of offsets), users could encrypt their\n>> transactions and submit to mempool in such a format that *only green\nminers\n>> would be able to decrypt and process them*.\n\n>Hello centralisation. Might as well just have someone sign miner keys, and\nget\n>rid of PoW entirely...\n>No, it is not centralization -\n\nNo, it is not centralization, as:\n\n(a) different miners could use different standards / certifications for\n'green' status, there are many already;\n(b) it does not affect stability of the network in a material way, rather\ncreates small (12.5% of revenue max) incentive to move to green sources of\nenergy (or buy carbon credits) and get certified - miners who would choose\nto run dirty energy will still be able to do so.\nand\n(c) nothing is being proposed beyond what is already possible - Antpool can\ngo green today, and solicit users to send them signed transactions directly\ninstead of adding them to a public mempool, under the pretext that it would\nmake the transfer 'greener'. What is being proposed is some community\neffort to standardize & promote this approach, because if we manage to make\nBitcoin green(er) - we will remove what many commentators see as the last\nbarrier / biggest risk to even wider Bitcoin adoption.\n\nNot to mention the fact that some aspects of the Bitcoin community are\npretty centralized already - 'www.bitcoin.org', GitHub repo, certain global\ninternet cables / protocols / providers. Centralization is evil only when\nit enables (or makes significantly easier) a threatening attack on the\nnetwork, which does not appear to be the case. It is my personal opinion\nonly, though, I would respect it if someone disagrees.\n\nOn a separate note, I just want to draw everyone's attention to the fact\nthat - assuming if my calculations are correct - carbon credits to offset\ndirty energy burned by miners would cost only *approx 5%* of block rewards\nin USD terms max. On the other hand, BTC price has just collapsed 20%\nbecause Tesla dropped their adoption citing environmental concerns. If\nevery miner on the planet agrees to go green or buy carbon credits, it will\nactually be commercially beneficial to everybody, as the price will likely\nskyrocket - the problem is that such situation absent community\ncoordination is not a Pareto-equilibrium state, which means that every\nsingle miner is incentivised to break away from the commitment to the green\nenergy.\n\nMaybe there is another solution to the problem, and huge mining pools need\nto establish a 'green cartel' like OPEC and all start buying carbon credits\nin order to make Bitcoin greener and more widely adopted for their own\nbenefit.\n\nOn Mon, May 17, 2021 at 3:58 AM Luke Dashjr <luke at dashjr.org> wrote:\n\n> On Friday 14 May 2021 21:41:23 Michael Fuhrmann via bitcoin-dev wrote:\n> > Bitcoin should create blocks every 10 minutes in average. So why do\n> > miners need to mine the 9 minutes after the last block was found? It's\n> > not necessary.\n>\n> It increases security, and is unavoidable anyway.\n>\n> > Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n>\n> You can't.\n>\n> > Possible ideas for discussion:\n> >\n> > - (maybe most difficult) global network timer sending a salted hash time\n> > code after 9 minutes. this enables validation by nodes.\n>\n> PoW *is* the global network timer.\n>\n> > - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n> > high enough) times higher difficulty. so everyone can mine any time but\n> > before to 9 minutes are up there will be a too high downside. It is more\n> > efficient to wait then paying high bills. The bitcoin will get a \"puls\".\n>\n> There's no timestamp at this stage of consensus.\n>\n> On Sunday 16 May 2021 18:10:12 Karl via bitcoin-dev wrote:\n> > The clock might be implementable on a peer network level by requiring\n> > inclusion of a transaction that was broadcast after a 9 minute delay.\n>\n> That requires a centralised authority.\n>\n> On Sunday 16 May 2021 20:31:47 Anton Ragin via bitcoin-dev wrote:\n> > 1. Has anyone considered that it might be technically not possible to\n> > completely 'power down' mining rigs during this 'cool-down' period of\n> time?\n> > While modern CPUs have power-saving modes, I am not sure about ASICs used\n> > for mining.\n>\n> That would be miners' problem, not the network's... New ASICs would no\n> doubt\n> be made to work more efficiently.\n>\n> > 2. I am not a huge data-center specialist, but it was my understanding\n> that\n> > they charge per unit of installed (maximum) electricity consumption. It\n> > would mean that if the miner needs X kilowatts-hour within that 1 minute\n> > when they are allowed to mine, he/she will have to pay for the same X for\n> > the remaining 9 minutes - and as such would have no economic incentive\n> not\n> > to draw that power when idling.\n>\n> Actually, this would be a good thing: it would heavily discourage\n> datacentre\n> use (which is very harmful to mining decentralisation).\n>\n> > 4. My counter-proposal to the community to address energy consumption\n> > problems would be *to encourage users to allow only 'green miners'\n> process\n> > their transaction.* In particular:\n> >...\n> > (b) Should there be some non-profit organization(s) certifying green\n> miners\n> > and giving them cryptographic certificates of conformity (either usage of\n> > green energy or purchase of offsets), users could encrypt their\n> > transactions and submit to mempool in such a format that *only green\n> miners\n> > would be able to decrypt and process them*.\n>\n> Hello centralisation. Might as well just have someone sign miner keys, and\n> get\n> rid of PoW entirely...\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210517/015c76fc/attachment.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T07:46:21",
                "message_text_only": "Good morning Anton,\n\n> >> 4. My counter-proposal to the community to address energy consumption\n> >> problems would be *to encourage users to allow only 'green miners' process>> their transaction.* In particular:\n> >>...\n> >> (b) Should there be some non-profit organization(s) certifying green miners\n> >> and giving them cryptographic certificates of conformity (either usage of\n> >> green energy or purchase of offsets), users could encrypt their\n> >> transactions and submit to mempool in such a format that *only green miners>> would be able to decrypt and process them*.\n>\n> >Hello centralisation. Might as well just have someone sign miner keys, and get\n> >rid of PoW entirely...\n> >No, it is not centralization -\u00a0\n>\n> No, it is not centralization, as:\n>\n> (a) different miners could use different standards / certifications for 'green' status, there are many already;\n> (b) it does not affect stability of the network in a material way, rather creates small (12.5% of revenue max) incentive to move to green sources of energy (or buy carbon credits) and get certified - miners who would choose to run dirty energy will still be able to do so.\n> and\n>\n> (c) nothing is being proposed beyond\u00a0what is already possible - Antpool can go green today, and solicit users to send them signed transactions directly instead of adding them to a public mempool, under the pretext that it would make the transfer 'greener'. What is being proposed is some community effort to standardize\u00a0& promote this approach, because if we manage to make Bitcoin green(er) - we will remove what many commentators\u00a0see as the last barrier / biggest risk to even wider Bitcoin adoption.\n\n\nThe point of avoiding centralization is to avoid authorities --- who can end up being bribeable or hackable single points-of-failure, and which would potentially be able to kill Bitcoin as a whole from a single attack point.\n\nAdding an authority which filters miners works directly against this goal, regardless of however you define \"centralization\" --- centralization is not the root issue here, the authority *is*.\n\nOne can observe that \"more renewable\" energy sources will, economically, be cheaper (in the long run) anyway, and you do not have to add anything to go towards \"more green\" energy resources.\n\nAfter all, a \"non-renewable\" resource is simply a resource that has a lower supply (it cannot be renewed) than a \"more renewable\" energy source.\nThere is only so much energy that is stored in coal and oil on Earth, but the sun has a much larger total mass than Earth itself, thus it is a \"more renewable\" energy resource than coal and oil.\nEconomically, this implies that \"greener\" energy resources will be cheaper in the long run, simply by price being a function of supply.\n\nIn short: trust the invisible hand.\n\nWe already know that lots of miners already operate in places where energy prices have bottomed due to oversupply due to technological improvements in capturing energy that used to be dissipated as waste heat.\nWhat is needed is to spread this knowledge to others, not mess with the design of Bitcoin at a fundamental level and risk introducing unexpected side effects (bugs).\n\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Michael Fuhrmann",
                "date": "2021-05-17T19:17:32",
                "message_text_only": "Am 17.05.2021 um 04:58 schrieb Luke Dashjr:\n\n> It increases security, and is unavoidable anyway.\n>\n> You can't.\n\nThere must be a way. dRNG + universal clock + cryptographical magic?!\nI'll think about more. Because if there is a safe way of knowing when a\nblock was mined then this can work and no security is lost. The run f\u00fcr\nthe next coinbase starts now at 0 seconds and should end after 600\nseconds. There is no real change if you start (proofable) 540 seconds\nlater und must finish in 60 seconds. I see this 10 times harder than 10\ntimes softer.\n\nIt is just a blocktime of 60 seconds with 9 minutes of idle time.\n\nBut for this time thank you for all your great answers :D\n\n\n:)\n\nps: it wasnt a pointing fingers musk move. it was the opposite. more\nlike \"we try hard to be more efficient than everything else before even\nif we still are\"."
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T08:04:56",
                "message_text_only": "Good morning Michael,\n\n> Am 17.05.2021 um 04:58 schrieb Luke Dashjr:\n>\n> > It increases security, and is unavoidable anyway.\n> > You can't.\n>\n> There must be a way. dRNG + universal clock + cryptographical magic?!\n\n\nProof-of-work **is** the cryptographic magic that creates a universal clock.\n\nIn physics, the Arrow of Time is defined as the direction in which entropy increases.\n\nSuppose you were shown a video of a particle in a low-gravity environment hitting a wall and bouncing away.\nThis video can be played forwards or backwards, and you would not be able to determine whether it is played forwards or backwards.\n\nIn short, in many physical interactions, there is ***no*** notion of a direction in time, i.e. no past or future.\nNearly every physical interaction, at the small scale, is reversible, thus there is no (apparent) inherent direction of time.\n\nHowever, suppose you were instead shown a video where a group of ceramic shards on a floor comes together to form a vase, which then rises off the floor and then floats onto a table.\nObviously, this is a video played backwards.\nA group of shards on the floor is a higher-entropy state than a vase on a table, thus it is obvious what the Arrow of Time here *actually* is.\n\nOr suppose you were shown this video: https://www.youtube.com/watch?v=zePA3uIbB5I\nObviously, this is a video played backwards (except for the introduction, of course --- pay attention how there is a scene cut from the introduction to the main part of the video).\nA Rubik cube that is in a disordered state is a higher-entropy state than a Rubik cube that is in an ordered state where each side has a specific single color, thus it is obvious that the Mythbusters did not actually do any work and just ran a time-reversed video of them disordering a newly-opened Rubik cube.\n\n\nAll of our clocks are ultimately derived from the *measurable* increase of entropy:\n\n* The current definition of 1 second is measured in terms of the decay of [Caesium atoms](https://en.wikipedia.org/wiki/Isotopes_of_caesium#Caesium-133).\n  This decay represents the reduction of energy of the atoms and thus an increase in universal entropy.\n* Wind-up clockwork watches are powered by the controlled release of the energy stored in a spring, a consumption of stored energy and thus an increase in universal entropy.\n* Wind-up clockwork watches are powered by the controlled release of the energy stored in a spring, a consumption of stored energy and thus an increase in universal entropy.\n\n\n\nNow, a low-entropy state is simply one where energy is available for consumption.\nAnd as we know, proof-of-work requires energy consumption.\n\nThus, the existence of a proof-of-work is a proof that time has passed.\nIf time did not pass, then it would not have been possible to create the proof-of-work, because it would not be possible to consume energy (i.e. increase universal entropy) and thus create an Arrow of Time.\n\n>From this proof-of-time-passing, we can then build a universal clock, one that is deeply tied to the physical world, due to the energy consumption.\nIt is by this method that Bitcoin is anchored to reality.\n\n\nThere is already a universal clock available using cryptographic magic.\nIt is called proof-of-work.\n\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "yanmaani at cock.li",
                "date": "2021-05-17T05:17:54",
                "message_text_only": "This is silly, but I'll add my take:\n\nThis would create the incentive to have chips that are idle 50% of the \ntime and work harder 50% of the time. This means miners would buy twice \nthe chips to use the same amount of power, for example.\n\nThis in turn means a greater portion of your operational costs are spent \non chips, and a smaller portion on electricity, reducing the incentive \nto use cheaper power and turn off when it's expensive, because you need \nto recoup your investment. That seems like a bad thing.\n\nHere's my proposal: if you want a PoW algorithm that's better for the \nenvironment, make one where the chips are easier to manufacture, so \npower costs become a greater portion of miner expenditures. Maybe \nSIMON/SPECK would do it. It could also incentivize someone to find that \nNSA backdoor...\n\nOn 2021-05-14 21:41, Michael Fuhrmann via bitcoin-dev wrote:\n> Hello,\n> \n> Bitcoin should create blocks every 10 minutes in average. So why do\n> miners need to mine the 9 minutes after the last block was found? It's\n> not necessary.\n> \n> Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n> \n> Possible ideas for discussion:\n> \n> - (maybe most difficult) global network timer sending a salted hash \n> time\n> code after 9 minutes. this enables validation by nodes.\n> \n> - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n> high enough) times higher difficulty. so everyone can mine any time but\n> before to 9 minutes are up there will be a too high downside. It is \n> more\n> efficient to wait then paying high bills. The bitcoin will get a \n> \"puls\".\n> \n> \n> I dont think I see all problems behind these ideas but if there is a\n> working solution to do so then the energy fud will find it's end. \n> Saving\n> energy without loosing rosbustness.\n> \n> \n> \n> :)\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "befreeandopen",
                "date": "2021-05-17T13:14:18",
                "message_text_only": "Hello list,\n\n>>Hello centralisation. Might as well just have someone sign miner keys, and get\n>>rid of PoW entirely...\n>>No, it is not centralization -\n>\n> No, it is not centralization, as:\n>\n> (a) different miners could use different standards / certifications for 'green' status, there are many already;\n\nThat does not refute the claim at all. Just because you can choose from multiple centralized authorities, which are well known and can collude, it does not mean it is decentralized by any reasonable definition of the term.\n\n> (b) it does not affect stability of the network in a material way, rather creates small (12.5% of revenue max) incentive to move to green sources of energy (or buy carbon credits) and get certified - miners who would choose to run dirty energy will still be able to do so.\n> and\n\nWho is to issue these credits? A centralized entity I guess ... There is no place for such in Bitcoin.\n\n> (c) nothing is being proposed beyond what is already possible - Antpool can go green today, and solicit users to send them signed transactions directly instead of adding them to a public mempool, under the pretext that it would make the transfer 'greener'.\n\nAnd if there was an economic advantage in doing so, miners would quite likely already implement that. Yet, somehow, they are not doing that.\n\n> What is being proposed is some community effort to standardize & promote this approach, because if we manage to make Bitcoin green(er) - we will remove what many commentators see as the last barrier / biggest risk to even wider Bitcoin adoption.\n\nAnd you listen to those \"many commentators\" why exactly? Because they have many followers or they are trained to speak nicely? This is not how Bitcoin works. Bitcoin does not favor number of followers, popularity, or beauty, it is based on merit and these ideas have none. The only risk here is that too many people will fall for such false narratives and FUD (which is what the energy consumption \"issue\" really is) because other people, like yourself, who do not understand Bitcoin comment on it and present it as an actual issue.\n\n> Not to mention the fact that some aspects of the Bitcoin community are pretty centralized already - 'www.bitcoin.org', GitHub repo, certain global internet cables / protocols / providers. Centralization is evil only when it enables (or makes significantly easier) a threatening attack on the network, which does not appear to be the case. It is my personal opinion only, though, I would respect it if someone disagrees.\n\nI disagree. You are making false claims here and above and spreading FUD. For example, www.bitcoin.org is by no means an official website of Bitcoin. There is no such thing as an official website of Bitcoin. Anyone can buy bitcoin.TLD and put whatever content they want and it may or may not be relevant to Bitcoin, but it will absolutely not represent Bitcoin.\n\nAs for GitHub repo - learn about https://en.wikipedia.org/wiki/Focal_point_(game_theory) which is what this repo is. In no way it is an ultimate and fixed point of Bitcoin and it can change at any time - for example if GitHub project turned to be malicious. So again, you are wrong.\n\n> On a separate note, I just want to draw everyone's attention to the fact that - assuming if my calculations are correct - carbon credits to offset dirty energy burned by miners would cost only approx 5% of block rewards in USD terms max.\n\nPlease stop with the carbon credit nonsense. There is likely no such thing to exist on a free market and no one is interested in these state regulations.\n\n> On the other hand, BTC price has just collapsed 20% because Tesla dropped their adoption citing environmental concerns.\n\nJust because a big company is controlled by people who do not understand Bitcoin, it does not make the issue valid. There are no such environmental concerns once you understand how Bitcoin and free market work. Don't help to spread the FUD.\n\n> If every miner on the planet agrees to go green or buy carbon credits, it will actually be commercially beneficial to everybody, as the price will likely skyrocket - the problem is that such situation absent community coordination is not a Pareto-equilibrium state, which means that every single miner is incentivised to break away from the commitment to the green energy.\n\nOnce people stop spreading FUD, the price will likely skyrocket. Start with yourself please.\n\n> Maybe there is another solution to the problem, and huge mining pools need to establish a 'green cartel' like OPEC and all start buying carbon credits in order to make Bitcoin greener and more widely adopted for their own benefit.\n\nMaybe not.\n\n> On Mon, May 17, 2021 at 3:58 AM Luke Dashjr <luke at dashjr.org> wrote:\n>\n>> On Friday 14 May 2021 21:41:23 Michael Fuhrmann via bitcoin-dev wrote:\n>>> Bitcoin should create blocks every 10 minutes in average. So why do\n>>> miners need to mine the 9 minutes after the last block was found? It's\n>>> not necessary.\n>>\n>> It increases security, and is unavoidable anyway.\n>>\n>>> Problem: How to prevent \"pre-mining\" in the 9 minutes time window?\n>>\n>> You can't.\n>>\n>>> Possible ideas for discussion:\n>>>\n>>> - (maybe most difficult) global network timer sending a salted hash time\n>>> code after 9 minutes. this enables validation by nodes.\n>>\n>> PoW *is* the global network timer.\n>>\n>>> - (easy attempt) mining jobs before 9 minutes have a 10 (or 100 or just\n>>> high enough) times higher difficulty. so everyone can mine any time but\n>>> before to 9 minutes are up there will be a too high downside. It is more\n>>> efficient to wait then paying high bills. The bitcoin will get a \"puls\".\n>>\n>> There's no timestamp at this stage of consensus.\n>>\n>> On Sunday 16 May 2021 18:10:12 Karl via bitcoin-dev wrote:\n>>> The clock might be implementable on a peer network level by requiring\n>>> inclusion of a transaction that was broadcast after a 9 minute delay.\n>>\n>> That requires a centralised authority.\n>>\n>> On Sunday 16 May 2021 20:31:47 Anton Ragin via bitcoin-dev wrote:\n>>> 1. Has anyone considered that it might be technically not possible to\n>>> completely 'power down' mining rigs during this 'cool-down' period of time?\n>>> While modern CPUs have power-saving modes, I am not sure about ASICs used\n>>> for mining.\n>>\n>> That would be miners' problem, not the network's... New ASICs would no doubt\n>> be made to work more efficiently.\n>>\n>>> 2. I am not a huge data-center specialist, but it was my understanding that\n>>> they charge per unit of installed (maximum) electricity consumption. It\n>>> would mean that if the miner needs X kilowatts-hour within that 1 minute\n>>> when they are allowed to mine, he/she will have to pay for the same X for\n>>> the remaining 9 minutes - and as such would have no economic incentive not\n>>> to draw that power when idling.\n>>\n>> Actually, this would be a good thing: it would heavily discourage datacentre\n>> use (which is very harmful to mining decentralisation).\n>>\n>>> 4. My counter-proposal to the community to address energy consumption\n>>> problems would be *to encourage users to allow only 'green miners' process\n>>> their transaction.* In particular:\n>>>...\n>>> (b) Should there be some non-profit organization(s) certifying green miners\n>>> and giving them cryptographic certificates of conformity (either usage of\n>>> green energy or purchase of offsets), users could encrypt their\n>>> transactions and submit to mempool in such a format that *only green miners\n>>> would be able to decrypt and process them*.\n>>\n>> Hello centralisation. Might as well just have someone sign miner keys, and get\n>> rid of PoW entirely...\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n>\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210517/edc74b13/attachment-0001.html>"
            },
            {
                "author": "Anton Ragin",
                "date": "2021-05-17T13:53:24",
                "message_text_only": "Hello, list\n\n>Hello centralisation. Might as well just have someone sign miner keys, and\nget\n>rid of PoW entirely...\n>No, it is not centralization -\n\nNo, it is not centralization, as:\n\n(a) different miners could use different standards / certifications for\n'green' status, there are many already;\n\n\n>> That does not refute the claim at all. Just because you can choose from\nmultiple centralized authorities, which are well known and can collude, it\ndoes not mean it is decentralized by any reasonable definition of the term.\n\n(b) it does not affect stability of the network in a material way, rather\ncreates small (12.5% of revenue max) incentive to move to green sources of\nenergy (or buy carbon credits) and get certified - miners who would choose\nto run dirty energy will still be able to do so.\nand\n\n\n>> Who is to issue these credits? A centralized entity I guess ... There is\nno place for such in Bitcoin.\n\nIf I am to concede on the point that *voluntarily* green-status miner\ncertification is 'centralization', can you please explain *in detail* why\naren't 'bitcoin.org' and GitHub repo similar examples of 'centralization'?\nYou make a correct point that bitcoin.org and the GitHub repo are not\n'official' things of Bitcoin network, however nowhere in my proposals on\ngreen miner certification I was suggesting to introduce an 'official'\ncertificate for such a thing. May be I mis-formulated my ideas, in that\ncase I apologize:\n\nThe only thing which I suggested was to introduce an option to have some\ntransactions encrypted in the mempool to allow Bitcoin users some control\nover who mines their transaction - full stop. Users could then decide how\nto use this functionality themselves, and such functionality could have\nuses way beyond 'green miners' - for example, some users might prefer to\nsend their transactions *directly to trusted miners* to prevent certain\nquantum computer enabled attacks (e.g. when there is a window of\nopportunity to steal coins if you have fast QC when you spend even from\np2phk address). Another example - if users are given some flexibility whom\nto send the transactions, they might actually want to steer them away from\nhuge mining pools such as Antpool to support small independent miners, smth\nof this sort - which actually would boost diversity in the network.\n\nYou may or may not agree that climate change is real, or may or may not\nagree that Bitcoin energy consumption is a problem - I respectfully submit\nit is not the right forum to find truth on these topics. We are discussing\nideas which *might *make Bitcoin a better solution for users who care about\ncertain things, *without *making it worse for somebody else (like you, for\nexample - who don't like centralization in any form).\n\n>> (c) nothing is being proposed beyond what is already possible - Antpool\ncan go green today, and solicit users to send them signed transactions\ndirectly instead of adding them to a public mempool, under the pretext that\nit would make the transfer 'greener'.\n\n>> And if there was an economic advantage in doing so, miners would quite\nlikely already implement that. Yet, somehow, they are not doing that.\n\nArguments of the sort 'if something could be done or should have been done\n- it would be done already' are flawed, in my opinion, as following the\nsame logic nothing (including Bitcoin itself) should have been done ever.\nAs a matter of fact, we are working on a green miner initiative with\ncertain miners, having a call with Hut8 in 20 minutes myself - and I know\nthat we are not the only ones. Green crypto initiatives are actually\nwidespread, and the solutions will be popping up soon.\n\n>>  Please stop with the carbon credit nonsense. There is likely no such\nthing to exist on a free market and no one is interested in these state\nregulations.\n\nPlease read this Wikipedia Article:\nhttps://en.wikipedia.org/wiki/Carbon_offset\n\n\"There are two types of markets for carbon offsets, compliance and\n*voluntary*\" [emphasis added].\n\nVoluntary carbon offset markets are actually growing really fast.\n\n>> Just because a big company is controlled by people who do not understand\nBitcoin, it does not make the issue valid. There are no such environmental\nconcerns once you understand how Bitcoin and free market work. Don't help\nto spread the FUD.\n\nI respectfully submit that people who know how to launch rockets to the sky\nand beam high-speed internet from the satellites to every place on earth\nare at least capable of understanding how Bitcoin works. There is even an\nenglish expression which reads 'it is not a rocket science' which I think\nfits especially nicely in this particular case :)\n\n>>  Once people stop spreading FUD, the price will likely skyrocket. Start\nwith yourself please.\n\nI guess you misinterpret my intentions, I think it doesn't matter what\nBitcoin price is - my personal interest is the widest possible adoption of\nblockchain as a peer-to-peer way to transfer value between consenting\nindividuals free from government control or intervention. Environmental\nconcerns are real and at least some parts of the community are clearly\ninterested to at least discuss this matter (e.g. I am not the one who\nstarted this thread).\n\nPlease don't be dismissive, it is an open forum and everybody is entitled\nto his/her/its own opinion.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210517/6b6bd8ba/attachment.html>"
            },
            {
                "author": "Keagan McClelland",
                "date": "2021-05-17T17:28:39",
                "message_text_only": "In principle the idea of making your transactions not mineable except by\nminers who follow some particular practice is something that can and should\nbe discussed. For instance, it could help give economic signals for future\nsoft forks such that users can declare preference in a costly, sybil\nresistant way.\n\nAs I understand what you are asking, you want users to be able to issue\ntransactions that can only be included in blocks that are signed by miners\nwhose certificates can be traced back to some set of certificates that the\nsender has \"whitelisted\". The trouble here is that in order for this to be\nan open system, the user would need to be able to include an unbounded\nnumber of optional certificates in the transaction itself, otherwise the\nrest of the network would be unable to validate whether or not the\ntransaction, when included in the block fit the consensus rules or not.\n\nThis is not possible for rather obvious reasons:\n1. transaction sizes cannot be allowed to be unbounded because this creates\ndenial of service attacks for the broader network\n2. if the valid certificate set is not unbounded, then centralization\npressure will mount on the bound between the Nth and N+1th certifier.\n\nFinally, all of this would require a rather large consensus change to even\nimplement. Given how contentious the proposal of a \"choose your\nminer/certifier\" is, it is unlikely to gain the necessary support in the\nform of code, review, miner signaling, or user uptake for a UASF.\n\nThat said, not all is lost. If you truly care about only having your\ntransactions mined by \"green\" miners or whatever other qualification you\nare going after, then this can likely be implemented in upper layers as you\nsuggested. You can submit your transaction via an overlay network directly\nto any miners that fit your criteria. Since miners operate in a selfish\nway, it is not in their interest to share your transaction with other\nminers, and the probable case is that your transaction will only be\nincluded in a block that is signed by your preferred authority.\n\nI should note though, that you may be waiting forever for your transactions\nto be mined and your business partners might choose not to do business with\nyou in the future due to delays caused by virtue signaling to nocoiners.\n\n> Please don't be dismissive, it is an open forum and everybody is entitled\nto his/her/its own opinion.\n\nIt is, in fact, an open forum and everyone is entitled to their view,\nincluding being dismissive of yours.\n\n> I respectfully submit that people who know how to launch rockets to the\nsky and beam high-speed internet from the satellites to every place on\nearth are at least capable of understanding how Bitcoin works. There is\neven an english expression which reads 'it is not a rocket science' which I\nthink fits especially nicely in this particular case :)\n\nNo one is contesting that Elon and the rest of the technical staff at Tesla\nare *capable* of understanding Bitcoin. We are just asserting that, at\npresent, they do not understand the underlying mechanics well enough to\ngive consistent rationale for their choices, and because their public\nstatements reveal either a deep hypocrisy, or deep ignorance in their\nunderstanding of Bitcoin.\n\nKeagan\n\nOn Mon, May 17, 2021 at 8:11 AM Anton Ragin via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hello, list\n>\n> >Hello centralisation. Might as well just have someone sign miner keys,\n> and get\n> >rid of PoW entirely...\n> >No, it is not centralization -\n>\n> No, it is not centralization, as:\n>\n> (a) different miners could use different standards / certifications for\n> 'green' status, there are many already;\n>\n>\n> >> That does not refute the claim at all. Just because you can choose from\n> multiple centralized authorities, which are well known and can collude, it\n> does not mean it is decentralized by any reasonable definition of the term.\n>\n> (b) it does not affect stability of the network in a material way, rather\n> creates small (12.5% of revenue max) incentive to move to green sources of\n> energy (or buy carbon credits) and get certified - miners who would choose\n> to run dirty energy will still be able to do so.\n> and\n>\n>\n> >> Who is to issue these credits? A centralized entity I guess ... There\n> is no place for such in Bitcoin.\n>\n> If I am to concede on the point that *voluntarily* green-status miner\n> certification is 'centralization', can you please explain *in detail* why\n> aren't 'bitcoin.org' and GitHub repo similar examples of\n> 'centralization'? You make a correct point that bitcoin.org and the\n> GitHub repo are not 'official' things of Bitcoin network, however nowhere\n> in my proposals on green miner certification I was suggesting to introduce\n> an 'official' certificate for such a thing. May be I mis-formulated my\n> ideas, in that case I apologize:\n>\n> The only thing which I suggested was to introduce an option to have some\n> transactions encrypted in the mempool to allow Bitcoin users some control\n> over who mines their transaction - full stop. Users could then decide how\n> to use this functionality themselves, and such functionality could have\n> uses way beyond 'green miners' - for example, some users might prefer to\n> send their transactions *directly to trusted miners* to prevent certain\n> quantum computer enabled attacks (e.g. when there is a window of\n> opportunity to steal coins if you have fast QC when you spend even from\n> p2phk address). Another example - if users are given some flexibility whom\n> to send the transactions, they might actually want to steer them away from\n> huge mining pools such as Antpool to support small independent miners, smth\n> of this sort - which actually would boost diversity in the network.\n>\n> You may or may not agree that climate change is real, or may or may not\n> agree that Bitcoin energy consumption is a problem - I respectfully submit\n> it is not the right forum to find truth on these topics. We are discussing\n> ideas which *might *make Bitcoin a better solution for users who care\n> about certain things, *without *making it worse for somebody else (like\n> you, for example - who don't like centralization in any form).\n>\n> >> (c) nothing is being proposed beyond what is already possible - Antpool\n> can go green today, and solicit users to send them signed transactions\n> directly instead of adding them to a public mempool, under the pretext that\n> it would make the transfer 'greener'.\n>\n> >> And if there was an economic advantage in doing so, miners would quite\n> likely already implement that. Yet, somehow, they are not doing that.\n>\n> Arguments of the sort 'if something could be done or should have been done\n> - it would be done already' are flawed, in my opinion, as following the\n> same logic nothing (including Bitcoin itself) should have been done ever.\n> As a matter of fact, we are working on a green miner initiative with\n> certain miners, having a call with Hut8 in 20 minutes myself - and I know\n> that we are not the only ones. Green crypto initiatives are actually\n> widespread, and the solutions will be popping up soon.\n>\n> >>  Please stop with the carbon credit nonsense. There is likely no such\n> thing to exist on a free market and no one is interested in these state\n> regulations.\n>\n> Please read this Wikipedia Article:\n> https://en.wikipedia.org/wiki/Carbon_offset\n>\n> \"There are two types of markets for carbon offsets, compliance and\n> *voluntary*\" [emphasis added].\n>\n> Voluntary carbon offset markets are actually growing really fast.\n>\n> >> Just because a big company is controlled by people who do not\n> understand Bitcoin, it does not make the issue valid. There are no such\n> environmental concerns once you understand how Bitcoin and free market\n> work. Don't help to spread the FUD.\n>\n> I respectfully submit that people who know how to launch rockets to the\n> sky and beam high-speed internet from the satellites to every place on\n> earth are at least capable of understanding how Bitcoin works. There is\n> even an english expression which reads 'it is not a rocket science' which I\n> think fits especially nicely in this particular case :)\n>\n> >>  Once people stop spreading FUD, the price will likely skyrocket. Start\n> with yourself please.\n>\n> I guess you misinterpret my intentions, I think it doesn't matter what\n> Bitcoin price is - my personal interest is the widest possible adoption of\n> blockchain as a peer-to-peer way to transfer value between consenting\n> individuals free from government control or intervention. Environmental\n> concerns are real and at least some parts of the community are clearly\n> interested to at least discuss this matter (e.g. I am not the one who\n> started this thread).\n>\n> Please don't be dismissive, it is an open forum and everybody is entitled\n> to his/her/its own opinion.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210517/961c4aaa/attachment-0001.html>"
            },
            {
                "author": "Anton Ragin",
                "date": "2021-05-17T23:02:07",
                "message_text_only": ">> This is not possible for rather obvious reasons:\n>> 1. transaction sizes cannot be allowed to be unbounded because this\ncreates denial of service attacks for the broader network\n>> 2. if the valid certificate set is not unbounded, then centralization\npressure will mount on the bound between the Nth and N+1th certifier.\n\n>> Finally, all of this would require a rather large consensus change to\neven implement. Given how contentious the proposal of a \"choose your\nminer/certifier\" is, it is unlikely to gain the necessary support in the\nform of code, review, miner signaling, or user uptake for a UASF.\n\nMy original suggestion was to hold an unbounded number of copies of\nasymmetrically-encrypted transactions in the mempool, each of them could be\ndecrypted with the key which is owned by a particular miner. Once one of\nthem get mined, all other copies are discarded (this can be done by holding\nhashes of transactions in the mempool unencrypted, so once the node sees\nthe transaction matching the hash mined - it can discard the other copies\nsharing the same hash).\n\nI agree that that opens the door to potential DoS attack - people can start\ntransmitting invalid transactions to perform a DoS attack on the network.\n\nHowever, the following adaptation of the idea might work: the transaction\nis duly signed and communicated to the mempool, but have an unbonded list\nof certificates of 'preferred' miners. If for within M blocks a preferred\nminer manages to mine the block - fine, if within M blocks it does not\nhappen, transaction can be mined by any miner. Additionally, full nodes can\ndemand a minimum fee which is dependant on the number of attached\ncertificates (e.g. if attaching N certificates makes the transaction\nmessage 2x the size of normal message, the minimum fee is twice bigger). It\nappears to me, that such M-block delay + list of preferred miners which can\nbe arbitrary long, but user pays higher fees if it is unreasonably long,\ndoes not raise DoS concerns as it does not materially affect the dynamics\nof things how they are right now.\n\n>>  If you truly care about only having your transactions mined by \"green\"\nminers or whatever other qualification you are going after, then this can\nlikely be implemented in upper layers as you suggested. You can submit your\ntransaction via an overlay network directly to any miners that fit your\ncriteria. Since miners operate in a selfish way, it is not in their\ninterest to share your transaction with other miners, and the probable case\nis that your transaction will only be included in a block that is signed by\nyour preferred authority.\n\nOverlay network is one of the solutions, however community-supported\nfunctionality of giving some miners a priority as suggested above will\n\n>>  It is, in fact, an open forum and everyone is entitled to their view,\nincluding being dismissive of yours.\n\nAccepted :)\n\nOn Mon, May 17, 2021 at 6:28 PM Keagan McClelland <\nkeagan.mcclelland at gmail.com> wrote:\n\n> In principle the idea of making your transactions not mineable except by\n> miners who follow some particular practice is something that can and should\n> be discussed. For instance, it could help give economic signals for future\n> soft forks such that users can declare preference in a costly, sybil\n> resistant way.\n>\n> As I understand what you are asking, you want users to be able to issue\n> transactions that can only be included in blocks that are signed by miners\n> whose certificates can be traced back to some set of certificates that the\n> sender has \"whitelisted\". The trouble here is that in order for this to be\n> an open system, the user would need to be able to include an unbounded\n> number of optional certificates in the transaction itself, otherwise the\n> rest of the network would be unable to validate whether or not the\n> transaction, when included in the block fit the consensus rules or not.\n>\n> This is not possible for rather obvious reasons:\n> 1. transaction sizes cannot be allowed to be unbounded because this\n> creates denial of service attacks for the broader network\n> 2. if the valid certificate set is not unbounded, then centralization\n> pressure will mount on the bound between the Nth and N+1th certifier.\n>\n> Finally, all of this would require a rather large consensus change to even\n> implement. Given how contentious the proposal of a \"choose your\n> miner/certifier\" is, it is unlikely to gain the necessary support in the\n> form of code, review, miner signaling, or user uptake for a UASF.\n>\n> That said, not all is lost. If you truly care about only having your\n> transactions mined by \"green\" miners or whatever other qualification you\n> are going after, then this can likely be implemented in upper layers as you\n> suggested. You can submit your transaction via an overlay network directly\n> to any miners that fit your criteria. Since miners operate in a selfish\n> way, it is not in their interest to share your transaction with other\n> miners, and the probable case is that your transaction will only be\n> included in a block that is signed by your preferred authority.\n>\n> I should note though, that you may be waiting forever for your\n> transactions to be mined and your business partners might choose not to do\n> business with you in the future due to delays caused by virtue signaling to\n> nocoiners.\n>\n> > Please don't be dismissive, it is an open forum and everybody is\n> entitled to his/her/its own opinion.\n>\n> It is, in fact, an open forum and everyone is entitled to their view,\n> including being dismissive of yours.\n>\n> > I respectfully submit that people who know how to launch rockets to the\n> sky and beam high-speed internet from the satellites to every place on\n> earth are at least capable of understanding how Bitcoin works. There is\n> even an english expression which reads 'it is not a rocket science' which I\n> think fits especially nicely in this particular case :)\n>\n> No one is contesting that Elon and the rest of the technical staff at\n> Tesla are *capable* of understanding Bitcoin. We are just asserting that,\n> at present, they do not understand the underlying mechanics well enough to\n> give consistent rationale for their choices, and because their public\n> statements reveal either a deep hypocrisy, or deep ignorance in their\n> understanding of Bitcoin.\n>\n> Keagan\n>\n> On Mon, May 17, 2021 at 8:11 AM Anton Ragin via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Hello, list\n>>\n>> >Hello centralisation. Might as well just have someone sign miner keys,\n>> and get\n>> >rid of PoW entirely...\n>> >No, it is not centralization -\n>>\n>> No, it is not centralization, as:\n>>\n>> (a) different miners could use different standards / certifications for\n>> 'green' status, there are many already;\n>>\n>>\n>> >> That does not refute the claim at all. Just because you can choose\n>> from multiple centralized authorities, which are well known and can\n>> collude, it does not mean it is decentralized by any reasonable definition\n>> of the term.\n>>\n>> (b) it does not affect stability of the network in a material way, rather\n>> creates small (12.5% of revenue max) incentive to move to green sources of\n>> energy (or buy carbon credits) and get certified - miners who would choose\n>> to run dirty energy will still be able to do so.\n>> and\n>>\n>>\n>> >> Who is to issue these credits? A centralized entity I guess ... There\n>> is no place for such in Bitcoin.\n>>\n>> If I am to concede on the point that *voluntarily* green-status miner\n>> certification is 'centralization', can you please explain *in detail* why\n>> aren't 'bitcoin.org' and GitHub repo similar examples of\n>> 'centralization'? You make a correct point that bitcoin.org and the\n>> GitHub repo are not 'official' things of Bitcoin network, however nowhere\n>> in my proposals on green miner certification I was suggesting to introduce\n>> an 'official' certificate for such a thing. May be I mis-formulated my\n>> ideas, in that case I apologize:\n>>\n>> The only thing which I suggested was to introduce an option to have some\n>> transactions encrypted in the mempool to allow Bitcoin users some control\n>> over who mines their transaction - full stop. Users could then decide how\n>> to use this functionality themselves, and such functionality could have\n>> uses way beyond 'green miners' - for example, some users might prefer to\n>> send their transactions *directly to trusted miners* to prevent certain\n>> quantum computer enabled attacks (e.g. when there is a window of\n>> opportunity to steal coins if you have fast QC when you spend even from\n>> p2phk address). Another example - if users are given some flexibility whom\n>> to send the transactions, they might actually want to steer them away from\n>> huge mining pools such as Antpool to support small independent miners, smth\n>> of this sort - which actually would boost diversity in the network.\n>>\n>> You may or may not agree that climate change is real, or may or may not\n>> agree that Bitcoin energy consumption is a problem - I respectfully submit\n>> it is not the right forum to find truth on these topics. We are discussing\n>> ideas which *might *make Bitcoin a better solution for users who care\n>> about certain things, *without *making it worse for somebody else (like\n>> you, for example - who don't like centralization in any form).\n>>\n>> >> (c) nothing is being proposed beyond what is already possible -\n>> Antpool can go green today, and solicit users to send them signed\n>> transactions directly instead of adding them to a public mempool, under the\n>> pretext that it would make the transfer 'greener'.\n>>\n>> >> And if there was an economic advantage in doing so, miners would quite\n>> likely already implement that. Yet, somehow, they are not doing that.\n>>\n>> Arguments of the sort 'if something could be done or should have been\n>> done - it would be done already' are flawed, in my opinion, as following\n>> the same logic nothing (including Bitcoin itself) should have been done\n>> ever. As a matter of fact, we are working on a green miner initiative with\n>> certain miners, having a call with Hut8 in 20 minutes myself - and I know\n>> that we are not the only ones. Green crypto initiatives are actually\n>> widespread, and the solutions will be popping up soon.\n>>\n>> >>  Please stop with the carbon credit nonsense. There is likely no such\n>> thing to exist on a free market and no one is interested in these state\n>> regulations.\n>>\n>> Please read this Wikipedia Article:\n>> https://en.wikipedia.org/wiki/Carbon_offset\n>>\n>> \"There are two types of markets for carbon offsets, compliance and\n>> *voluntary*\" [emphasis added].\n>>\n>> Voluntary carbon offset markets are actually growing really fast.\n>>\n>> >> Just because a big company is controlled by people who do not\n>> understand Bitcoin, it does not make the issue valid. There are no such\n>> environmental concerns once you understand how Bitcoin and free market\n>> work. Don't help to spread the FUD.\n>>\n>> I respectfully submit that people who know how to launch rockets to the\n>> sky and beam high-speed internet from the satellites to every place on\n>> earth are at least capable of understanding how Bitcoin works. There is\n>> even an english expression which reads 'it is not a rocket science' which I\n>> think fits especially nicely in this particular case :)\n>>\n>> >>  Once people stop spreading FUD, the price will likely skyrocket.\n>> Start with yourself please.\n>>\n>> I guess you misinterpret my intentions, I think it doesn't matter what\n>> Bitcoin price is - my personal interest is the widest possible adoption of\n>> blockchain as a peer-to-peer way to transfer value between consenting\n>> individuals free from government control or intervention. Environmental\n>> concerns are real and at least some parts of the community are clearly\n>> interested to at least discuss this matter (e.g. I am not the one who\n>> started this thread).\n>>\n>> Please don't be dismissive, it is an open forum and everybody is entitled\n>> to his/her/its own opinion.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/cfd5bae3/attachment-0001.html>"
            }
        ],
        "thread_summary": {
            "title": "Proposal: Force to do nothing for first 9 minutes to save 90% of mining energy",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Anton Ragin",
                "Eric Voskuil",
                "Karl",
                "Pavol Rusnak",
                "befreeandopen",
                "Keagan McClelland",
                "ZmnSCPxj",
                "yanmaani at cock.li",
                "Ren\u00e9 Pickhardt",
                "Luke Dashjr",
                "Zac Greenwood",
                "Michael Fuhrmann"
            ],
            "messages_count": 21,
            "total_messages_chars_count": 79532
        }
    },
    {
        "title": "[bitcoin-dev] Sum of the keys attack on taproot",
        "thread_messages": [
            {
                "author": "vjudeu",
                "date": "2021-05-15T10:21:00",
                "message_text_only": "We have some taproot address with private key \"a\" and public key \"a*G\", owned by Alice. Bob wants to take Alice's coins without her permission. He owns taproot address with private key \"b\" and public key \"b*G\". He knows \"a*G\" by exploring the chain and looking for P2TR outputs. To grab Alice's funds, he creates \"(b-a)*G\" taproot address and send some small amount to this address. Then, Bob can create a transaction with two inputs, taking coins from \"a*G\" and \"(b-a)*G\" addresses. All that is needed is producing a signature matching the sum of the public keys used in taproot, which is \"(a+b-a)*G\", reduced to \"b*G\", so Bob uses his \"b\" private key to produce Schnorr signature. Is there any protection from this attack?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210515/9b58f6eb/attachment.html>"
            },
            {
                "author": "Tim Ruffing",
                "date": "2021-05-15T20:25:23",
                "message_text_only": "On Sat, 2021-05-15 at 12:21 +0200, vjudeu via bitcoin-dev wrote:\n\n\n>  All that is needed is producing a signature matching the sum of the\n> public keys used in taproot, which is \"(a+b-a)*G\",\u00a0\n\nThis is simply not true.\n\nTaproot does not enable this, or any other form of \"cross-input\naggregation\", i.e., spending multiple UTXOs with a single signature.\u00a0\n\n\nTim"
            },
            {
                "author": "Ruben Somsen",
                "date": "2021-05-15T20:35:37",
                "message_text_only": "What Tim said is right. To add to that, you may also wish to read about\nMuSig:\nhttps://blockstream.com/2018/01/23/en-musig-key-aggregation-schnorr-signatures/\n\nCheers,\nRuben\n\nOn Sat, May 15, 2021 at 10:32 PM Tim Ruffing via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> On Sat, 2021-05-15 at 12:21 +0200, vjudeu via bitcoin-dev wrote:\n>\n>\n> >  All that is needed is producing a signature matching the sum of the\n> > public keys used in taproot, which is \"(a+b-a)*G\",\n>\n> This is simply not true.\n>\n> Taproot does not enable this, or any other form of \"cross-input\n> aggregation\", i.e., spending multiple UTXOs with a single signature.\n>\n>\n> Tim\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210515/f39c21ba/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Sum of the keys attack on taproot",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Tim Ruffing",
                "vjudeu",
                "Ruben Somsen"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 2301
        }
    },
    {
        "title": "[bitcoin-dev] Proposal: Low Energy Bitcoin PoW",
        "thread_messages": [
            {
                "author": "Bogdan Penkovsky",
                "date": "2021-05-17T19:32:08",
                "message_text_only": "Hi Bitcoin Devs,\n\nWe would like to share with you a draft proposal for a durable, low\nenergy Bitcoin proof of work.\n\n----\n\n<pre>\n  BIP: ?\n  Title: Durable, Low Energy Bitcoin PoW\n  Author: Michael Dubrovsky <mike+bip[at]powx.org>, Bogdan Penkovsky\n<bogdan+bip[at]powx.org>\n  Discussions-To: <mike+bip[at]powx.org>\n  Comments-Summary: No comments yet.\n  Comments-URI: https://github.com/PoWx-Org/obtc/wiki/BIP\n  Status: Draft\n  Type: Standards Track\n  Created: 2021-05-13\n  License: BSD-2-Clause\n           OPL\n</pre>\n\n\n== Simple Summary ==\n\nBitcoin's energy consumption is growing with its value (see Figure below).\nAlthough scaling PoW is necessary to maintain the security of the network,\nreliance on massive energy consumption has scaling drawbacks and leads to mining\ncentralization. A major consequence of the central role of local electricity\ncost in mining is that today, most existing and potential participants in the\nBitcoin network cannot profitably mine Bitcoin even if they have the capital to\ninvest in mining hardware. From a practical perspective, Bitcoin adoption by\ncompanies like Tesla (which recently rescinded its acceptance of Bitcoin as\npayment) has been hampered by its massive energy consumption and perceived\nenvironmental impact.\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/btc_energy-small.png]]\n\nFigure. Bitcoin price and estimated Bitcoin energy consumption.\nData sources: [https://cbeci.org Cambridge Bitcoin Electricity\nConsumption Index], [https://www.coindesk.com CoinDesk].\n\nWe propose a novel proof-of-work paradigm for Bitcoin--Optical proof-of-work. It\nis designed to decouple Bitcoin mining from energy and make it feasible outside\nof regions with low electricity costs. ''Optical proof-of-work'' (oPoW) is a\nmodification of Hashcash that is most efficiently computed using a new class of\nphotonic processors. Without compromising the cryptographic or game-theoretical\nsecurity of Hashcash, oPoW shifts the operating expenses of mining (OPEX), to\ncapital expenses (CAPEX)--i.e. electricity to hardware. oPoW makes it possible\nfor billions of new miners to enter the market simply by investing in a\nlow-energy photonic miner. Shifting to a high-CAPEX PoW has the added benefit of\nmaking the hashrate resilient to Bitcoin's price fluctuations - once low-OPEX\nhardware is operating there is no reason to shut it down even if the value of\nmining rewards diminishes. oPoW is backward compatible with GPUs, FPGAs, and\nASICs meaning that a transitional period of optical and traditional hardware\nmining in parallel on the network is feasible\n\nMore information is available here: [https://www.powx.org/opow].\n\n== Abstract ==\n\nAs Bitcoin gained utility and value over the preceding decade, the\nnetwork incentivized the purchase of billions of dollars in mining\nequipment and electricity. With the growth of competition, home mining\nbecame unprofitable. Even the most sophisticated special-purpose\nhardware (ASIC miners) doesn\u2019t cover its energy costs unless the miner\nalso has direct access to very cheap electricity. This heavy reliance\non energy makes it difficult for new miners to enter the market and\nleads to hashrate instability as miners shut off their machines when\nthe price of Bitcoin falls. Additionally as the network stores ever\nmore value, the percentage of world energy consumption that is\nassociated with Bitcoin continues to grow, creating the potential for\nscaling failure and a general backlash. To ensure that Bitcoin can\ncontinue scaling and reach its full potential as a world currency and\nstore of value, we propose a low-energy proof-of-work paradigm for\nBitcoin. ''Optical proof of work (oPoW)'' is designed to decouple\nBitcoin\u2019s security from massive energy use and make bitcoin mining\nfeasible outside of regions with low electricity costs. ''Optical\nproof-of-work'' is a modification of Hashcash that is most efficiently\ncomputed using a new class of photonic processors that has emerged as\na leading solution for ultra-low energy computing over the last 5\nyears. oPoW shifts the operating expenses of mining (OPEX), to capital\nexpenses (CAPEX)\u2013i.e. electricity to hardware, without compromising\nthe cryptographic or game-theoretical security of Hashcash. We provide\nan example implementation of oPoW, briefly discuss its cryptographic\nconstruction as well as the working principle of photonic processors.\nAdditionally, we outline the potential benefits of oPoW to the bitcoin\nnetwork, including geographic decentralization and democratization of\nmining as well as hashrate resilience to price fluctuations.\n\n== Copyright ==\n\nThis BIP is dual-licensed under the Open Publication License and BSD\n2-clause license.\n\n== Motivation ==\n\nAs Bitcoin has grown over the past decade from a small network run by\nhobbyists to a global currency, the underlying Proof of Work protocol\nhas not been updated. Initially pitched as a global decentralized\nnetwork (\u201cone CPU-one vote\u201d), Bitcoin transactions today are secured\nby a small group of corporate entities. In practice, it is only\nfeasible for [http://archive.is/YeDwh entities that can secure access\nto abundant, inexpensive energy]. The economics of mining limit\nprofitability to places like Iceland, Texas, or Western China. Besides\nthe negative environmental externalities, which may be significant,\nmining today is performed primarily with the consent (and in many\ncases, partnership) of large public utilities and the governments that\ncontrol them. Although this may not be a problem in the short term, in\nthe long term it stands to erode the censorship resistance and\nsecurity of Bitcoin and other public blockchains through potential\nregulation or [https://arxiv.org/pdf/1605.07524.pdf partitioning\nattacks].\n\nRecent events, such as the\n[https://twitter.com/MustafaYilham/status/1384278267067203590 ~25%\nhashrate crash due to coal-powered grid failure in china] and Tesla\u2019s\nrescinding of its acceptance of Bitcoin as a form of payment, show\nthat there are practical real-world downsides to Proof of Works\u2019s\nmassive reliance on energy.\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/emusk_tweet.png]]\n\nWhether on not the Bitcoin community accepts this common criticism as\nentirely valid, it has real-world effects which will only get worse\nover time. Eliminating the exponentially growing energy use currently\nbuilt into Bitcoin without eliminating the security of PoW would be\nideal and should not be a partisan issue.\n\nNew consensus mechanisms have been proposed as a means of securing\ncryptocurrencies whilst reducing energy cost, such as various forms of\nProof of Stake and Proof of Space-Time. While many of these\nalternative mechanisms offer compelling guarantees, they generally\nrequire new security assumptions, which have not been stress-tested by\nlive deployments at any adequate scale. Consequently, we still have\nrelatively little empirical understanding of their safety. Completely\nchanging the Bitcoin paradigm is likely to introduce new unforeseen\nproblems. We believe that the major issues discussed above can be\nresolved by improving rather than eliminating Bitcoin\u2019s fundamental\nsecurity layer\u2014Proof of Work. Instead of devising a new consensus\narchitecture to fix these issues, it is sufficient to shift the\neconomics of PoW. The financial cost imposed on miners need not be\nprimarily composed of electricity. The situation can be significantly\nimproved by reducing the operating expense (OPEX)\u2014energy\u2014as a major\nmining component. Then, by shifting the cost towards capital expense\n(CAPEX)\u2014mining hardware\u2014the dynamics of the mining ecosystem becomes\nmuch less dependent on electricity prices, and much less electricity\nis consumed as a whole.\n\nMoreover, a reduction in energy consumption automatically leads to\ngeographically distributed mining, as mining becomes profitable even\nin regions with expensive electricity. Additionally, lower energy\nconsumption will eliminate heating issues experienced by today\u2019s\nmining operations, which will further decrease operating cost as well\nas noise associated with fans and cooling systems. All of this means\nthat individuals and smaller entities would be able to enter the\nmining ecosystem simply for the cost of a miner, without first gaining\naccess to cheap energy or a dedicated, temperature-controlled data\ncenter. To a degree, memory-hard PoW schemes like\n[https://github.com/tromp/cuckoo Cuckoo Cycle], which increase the use\nof SRAM in lieu of pure computation, push the CAPEX/OPEX ratio in the\nright direction by occupying ASIC chip area with memory. To maximize\nthe CAPEX to OPEX ratio of the Optical Proof of Work algorithm, we\ndeveloped [https://assets.pubpub.org/xi9h9rps/01581688887859.pdf\n''HeavyHash''] [1]. HeavyHash is a cryptographic construction that\ntakes the place of SHA256 in Hashcash. Our algorithm is compatible\nwith ultra-energy-efficient photonic co-processors that have been\ndeveloped for machine learning hardware accelerators.\n\nHeavyHash uses a proven digital hash (SHA3) packaged with a large\namount of MAC (Multiply-and-Accumulate) computation into a Proof of\nWork puzzle. Although HeavyHash can be computed on any standard\ndigital hardware, it becomes hardware efficient only when a small\ndigital core is combined with a low-power photonic co-processor for\nperforming MAC operations. oPoW mining machines will have a small\ndigital core flip-chipped onto a large, low-power photonic chip. This\ncore will be bottlenecked by the throughput of the digital to analog\nand analog to digital converters. A prototype of such analogue optical\nmatrix multiplier can be seen in the figure below.\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/optical_chip.png]]\n\nFigure. TOP: Photonic Circuit Diagram, A. Laser input (1550nm, common\ntelecom wavelength) B. Metal pads for controlling modulators to\ntransduce electrical data to optical C. Metal pads for tuning mesh of\ndirectional couplers D. Optical signal exits here containing the\nresults of the computation and is output to fibers via a grating\ncoupler the terminus of each waveguide. E. Alignment circuit for\naligning fiber coupling stage. Bottom: a photograph of a bare oPoW\nminer prototype chip before wire and fiber bonding. On the right side\nof the die are test structures (F).\n\nThe ''HeavyHash'' derives its name from the fact that it is bloated or\nweighted with additional computation. This means that a cost\ncomparable oPoW miner will have a much lower nominal hashrate compared\nto a Bitcoin ASIC (HeavyHashes/second vs. SHA256 Hashes/second in\nequivalent ASIC). We provide the cryptographic security argument of\nthe HeavyHash function in Section 3 in\n[https://assets.pubpub.org/xi9h9rps/01581688887859.pdf Towards Optical\nProof of Work] [1]. In the article, we also provide a game-theoretic\nsecurity argument for CAPEX-heavy PoW. For additional information, we\nrecommend reading\n[https://uncommoncore.co/wp-content/uploads/2019/10/A-model-for-Bitcoins-security-and-the-declining-block-subsidy-v1.02.pdf\nthis article].\n\nWhile traditional digital hardware relies on electrical currents,\noptical computing uses light as the basis for some of or all of its\noperations. Building on the development and commercialization of\nsilicon photonic chips for telecom and datacom applications, modern\nphotonic co-processors are silicon chips made using well-established\nand highly scalable silicon CMOS processes. However, unlike cutting\nedge electronics which require ever-smaller features (e.g. 5 nm),\nfabricated by exponentially more complex and expensive machinery,\nsilicon photonics uses old fabrication nodes (90 nm). Due to the large\nde Broglie wavelength of photons, as compared to electrons, there is\nno benefit to using the small feature sizes. The result is that access\nto silicon photonic wafer fabrication is readily available, in\ncontrast to the notoriously difficult process of accessing advanced\nnodes. Moreover, the overall cost of entry is lower as lithography\nmasks for silicon photonics processes are an order of magnitude\ncheaper ($500k vs. $5M). Examples of companies developing optical\nprocessors for AI, which will be compatible with oPoW include\n[https://lightmatter.co/ Lightmatter], [https://www.lightelligence.ai/\nLightelligence], [https://luminous.co/ Luminous],\n[https://www.intel.com/content/www/us/en/architecture-and-technology/silicon-photonics/silicon-photonics-overview.html\nIntel], and other more recent entrants.\n\n== Specification ==\n\n=== HeavyHash ===\n\nThe HeavyHash is performed in three stages:\n\n# Keccak hash\n# Matrix-vector multiplication\n# Keccak of the result xorred with the hashed input\n\nNote that the most efficiently matrix-vector multiplication is\nperformed on a photonic miner. However, this linear algebra operation\ncan be performed on any conventional computing hardware (CPU, GPU,\netc.), therefore making the HeavyHash compatible with any digital\ndevice.\n\nThe algorithm\u2019s pseudo-code:\n\n<pre>// M is a Matrix 64 x 64 of Unsigned 4 values\n\n// 256-bitVector\nx1 <- keccak(input)\n\n// Reshape the obtained bitvector\n// into a 64-vector of unsigned 4-bit values\nx2 <- reshape(x1, 64)\n\n// Perform a matrix-vector multiplication.\n// The result is 64-vector of 14-bit unsigned.\nx3 <- vector_matrix_mult(x2, M)\n\n// Truncate all values to 4 most significant bits.\n// This is due to the specifics of analog\n// computing by the photonic accelerator.\n// Obtain a 64-vector of 4-bit unsigned.\nx4 <- truncate_to_msb(x3, 4)\n\n// Interpret as a 256-bitvector\nx5 <- flatten(x4)\n\n// 256-bitVector\nresult <- keccak(xor(x5, x1))</pre>\n\nWhich in C can be implemented as:\n\n<pre>\nstatic void heavyhash(const uint16_t matrix[64][64], void* pdata,\nsize_t pdata_len, void* output)\n{\n    uint8_t hash_first[32] __attribute__((aligned(32)));\n    uint8_t hash_second[32] __attribute__((aligned(32)));\n    uint8_t hash_xored[32] __attribute__((aligned(32)));\n\n    uint16_t vector[64] __attribute__((aligned(64)));\n    uint16_t product[64] __attribute__((aligned(64)));\n\n    sha3_256((uint8_t*) hash_first, 32, (const uint8_t*)pdata, pdata_len);\n\n    for (int i = 0; i < 32; ++i) {\n        vector[2*i] = (hash_first[i] >> 4);\n        vector[2*i+1] = hash_first[i] & 0xF;\n    }\n\n    for (int i = 0; i < 64; ++i) {\n        uint16_t sum = 0;\n        for (int j = 0; j < 64; ++j) {\n            sum += matrix[i][j] * vector[j];\n        }\n        product[i] = (sum >> 10);\n    }\n\n    for (int i = 0; i < 32; ++i) {\n        hash_second[i] = (product[2*i] << 4) | (product[2*i+1]);\n    }\n\n    for (int i = 0; i < 32; ++i) {\n        hash_xored[i] = hash_first[i] ^ hash_second[i];\n    }\n    sha3_256((uint8_t*)output, 32, (const uint8_t*)hash_xored, 32);\n}\n</pre>\n\n=== Random matrix generation ===\n\nThe random matrix M (which is a HeavyHash parameter) is obtained in a\ndeterministic way and is changed every block. Matrix M coefficients\nare generated using a pseudo-random number generation algorithm\n(xoshiro) from the previous block header. If the matrix is not full\nrank, it is repeatedly generated again.\n\nAn example code to obtain the matrix M:\n\n<pre>\nvoid generate_matrix(uint16_t matrix[64][64], struct xoshiro_state *state) {\n    do {\n        for (int i = 0; i < 64; ++i) {\n            for (int j = 0; j < 64; j += 16) {\n                uint64_t value = xoshiro_gen(state);\n                for (int shift = 0; shift < 16; ++shift) {\n                    matrix[i][j + shift] = (value >> (4*shift)) & 0xF;\n                }\n            }\n        }\n    } while (!is_full_rank(matrix));\n}\n\nstatic inline uint64_t xoshiro_gen(struct xoshiro_state *state) {\n    const uint64_t result = rotl64(state->s[0] + state->s[3], 23) + state->s[0];\n\n    const uint64_t t = state->s[1] << 17;\n\n    state->s[2] ^= state->s[0];\n    state->s[3] ^= state->s[1];\n    state->s[1] ^= state->s[2];\n    state->s[0] ^= state->s[3];\n\n    state->s[2] ^= t;\n\n    state->s[3] = rotl64(state->s[3], 45);\n\n    return result;\n}\n</pre>\n\n== Discussion ==\n\n=== Geographic Distribution of Mining Relative to CAPEX-OPEX Ratio of\nMining Costs ===\n\nBelow is a simple model showing several scenarios for the geographic\ndistribution of mining activity relative to the CAPEX/OPEX ratio of\nthe cost of operating a single piece of mining hardware. As the ratio\nof energy consumption to hardware cost decreases, geographic\nvariations in energy cost cease to be a determining factor in miner\ndistribution.\n\nUnderlying assumptions: 1. Electricity price y is fixed in time but\nvaries geographically. 2. Every miner has access to the same hardware.\n3. Each miner\u2019s budget is limited by both the cost of mining equipment\nas well as the local cost of the electricity they consume\n\nbudget = a(p+ey),\n\nwhere a is the number of mining machines, p is the machine price, e is\nthe total energy consumption over machine lifetime, and y is\nelectricity price.\n\nNote that in locations where mining is not profitable, hashrate is zero.\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/sim1.png]]\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/sim2.png]]\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/sim3.png]]\n\n\nAn interactive version of this diagram can be found\n[https://www.powx.org/opow here].\n\n=== Why does CAPEX to OPEX shift lead to lower energy consumption? ===\n\nA common misconception about oPoW is that it makes mining \u201ccheaper\u201d by\nenabling energy-efficient hardware. There is no impact on the dollar\ncost of mining a block, rather the mix of energy vs. hardware\ninvestment changes from about 50/50 to 10/90 or better. We discuss\nthis at length and rigorously in our paper[1].\n\n=== Working Principles of Photonic Processors ===\n\nPhotonics accelerators are made by fabricating waveguides in silicon\nusing standard lithography processes. Silicon is transparent to\ninfrared light and can act as a tiny on-chip fiber optical cable.\nSilicon photonics found its first use during the 2000s in transceivers\nfor sending and receiving optical signals via fiber and has advanced\ntremendously over the last decade.\n\nBy encoding a vector into optical intensities passing through a series\nof parallel waveguides, interfering these signals in a mesh of tunable\ninterferometers (acting as matrix coefficients), and then detecting\nthe output using on-chip Germanium photodetectors, a matrix-vector\nmultiplication is achieved. A generalized discussion of matrix\nmultiplication setups using photonics/interference can be found in\n[https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.73.58 Reck\net al.] and [https://arxiv.org/abs/1506.06220 Russell et al.] A\ndetailed discussion of several integrated photonic architectures for\nmatrix multiplication and corresponding tuning algorithms can be found\nin [https://arxiv.org/pdf/1909.06179.pdf Pai et al.]\n\nBelow is a conceptual representation of a 3D-packaged oPoW mining\nchip. Note that the majority of the real estate and cost comes from\nthe photonic die and the laser, with only a small digital SHA3 die\nneeded (as opposed to a conventional miner of the same cost, which\nwould have many copies of this die running in parallel).\n\n[[https://github.com/PoWx-Org/obtc/raw/main/img/optminer.png]]\n\n=== Block Reward Considerations ===\n\nAlthough it is out of the scope of this proposal, the authors strongly\nrecommend the consideration of a change in the block reward schedule\ncurrently implemented in Bitcoin. There is no clear way to incentivize\nminers with transaction fees only, as has been successfully shown in\n[https://www.cs.princeton.edu/~smattw/CKWN-CCS16.pdf On the\nInstability of Bitcoin Without the Block Reward] and other\npublications, therefore looking a decade or two ahead it will be\nimportant to implement a fixed block reward or to slow the decay of\nthe block reward to maintain the security of the network. Given that\noPoW miners have low operating costs, once a large number of machines\nare running the reward level sufficient to keep them in operation and\nproviding robust security can potentially be significantly smaller\nthan in the case of the current SHA256 ASICs securing Bitcoin.\n\n=== Implementation on the Bitcoin Network ===\n\nA hard fork is not necessarily required for the Bitcoin network to\ntest and eventually implement oPoW. It\u2019s possible to add oPoW as a\ndual PoW to Bitcoin as a soft fork. Tuning the parameters to ensure\nthat, for example, 99.9% of the security budget would be earned by\nminers via the SHA256 Hashcash PoW and 0.1% via oPoW would create\nsufficient incentive for oPoW to be stress-tested and to incentivize\nthe manufacture of dedicated oPoW miners. If this test is successful,\nthe parameters can be tuned continuously over time, e.g. oPoW share\ndoubling at every halving, such that oPoW accounts for some target\npercentage (up to 100% in a complete SHA256 phase-out).\n\n== Endnotes ==\n\nWith significant progress in optical and analog\nmatrix-vector-multiplication chipsets over the last year, we hope to\ndemonstrate commercial low-energy mining on our network in the next 6\nmonths. The current generation of optical matrix processors under\ndevelopment is expected to have 10x better energy consumption per MAC\noperation than digital implementations, and we expect this to improve\nby another order of magnitude in future generations.\n\nPoWx will also be publishing the designs of the current optical miner\nprototypes in the near term under an open-source hardware license.\n\n== Acknowledgments ==\n\nWe thank all the members of the Bitcoin community who have already\ngiven us feedback over the last several years as well as others in the\noptical computing community and beyond that have given their input.\n\n\n\n\n[1] M. Dubrovsky et al. Towards Optical Proof of Work, CES conference\n(2020) https://assets.pubpub.org/xi9h9rps/01581688887859.pdf\n\n[2] https://sciencex.com/news/2020-05-powering-bitcoin-silicon-photonics-power.html\n\n[3] KISS random number generator http://www.cse.yorku.ca/~oz/marsaglia-rng.html\n\n\n\n\n----\nWe have taken into account the moderator's comments we received previously.\n\n\n\nBogdan and Mike,\n\nPoWx"
            },
            {
                "author": "Keagan McClelland",
                "date": "2021-05-17T21:13:42",
                "message_text_only": "A few things jump out at me as I read this proposal\n\nFirst, deriving the hardness from capex as opposed to opex switches the\nprivilege from those who have cheap electricity to those who have access to\nchip manufacturers/foundries. While this is similarly the case for Bitcoin\nASICS today, the longevity of the PoW algorithm has led to a better\ndistribution of knowledge and capital goods required to create ASICS. The\ncreation of a new PoW of any kind, hurts this dimension of decentralization\nas we would have to start over from scratch on the best way to build,\ndistribute, and operate these new pieces of hardware at scale. While I have\nnot combed over the PoW proposed here in fine detail, the more complicated\nthe algorithm is, the more it privileges those with specific knowledge\nabout it and the manufacturing process.\n\nThe competitive nature of Bitcoin mining is such that miners will be\nwilling to spend up to their expected mining reward in their operating\ncosts to continue to mine. Let's suppose that this new PoW was adopted,\nminers will continue to buy these chips in ever increasing quantities,\nturning the aforementioned CAPEX into a de facto OPEX. This has a few\nconsequences. First it just pushes the energy consumption upstream to the\nchip manufacturing process, rather than eliminating it. And it may trade\nsome marginal amount of the energy consumption for the set of resources it\ntakes to educate and create chip manufacturers. The only way to avoid that\ncost being funneled back into more energy consumption is to make the\nbarrier to understanding of the manufacturing process sufficiently\ndifficult so as to limit the proliferation of these chips. Again, this\nprivileges the chip manufacturers as well as those with close access to the\nchip manufacturers.\n\nAs far as I can tell, the only thing this proposal actually does is create\na very lucrative business model for those who sell this variety of chips.\nAny other effects of it are transient, and in all likelihood the transient\neffects create serious centralization pressure.\n\nAt the end of the day, the energy consumption is foundational to the\nsystem. The only way to do away with authorities, is to require\ncompetition. This competition will employ ever more resources until it is\nunprofitable to do so. At the base of all resources of society is energy.\nYou get high energy expenditure, or a privileged class of bitcoin\nadministrators: pick one. I suspect you'll find the vast majority of\nBitcoin users to be in the camp of the energy expenditure, since if we pick\nthe latter, we might as well just pack it in and give up on the Bitcoin\nexperiment.\n\nKeagan\n\nOn Mon, May 17, 2021 at 2:33 PM Bogdan Penkovsky via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hi Bitcoin Devs,\n>\n> We would like to share with you a draft proposal for a durable, low\n> energy Bitcoin proof of work.\n>\n> ----\n>\n> <pre>\n>   BIP: ?\n>   Title: Durable, Low Energy Bitcoin PoW\n>   Author: Michael Dubrovsky <mike+bip[at]powx.org>, Bogdan Penkovsky\n> <bogdan+bip[at]powx.org>\n>   Discussions-To: <mike+bip[at]powx.org>\n>   Comments-Summary: No comments yet.\n>   Comments-URI: https://github.com/PoWx-Org/obtc/wiki/BIP\n>   Status: Draft\n>   Type: Standards Track\n>   Created: 2021-05-13\n>   License: BSD-2-Clause\n>            OPL\n> </pre>\n>\n>\n> == Simple Summary ==\n>\n> Bitcoin's energy consumption is growing with its value (see Figure below).\n> Although scaling PoW is necessary to maintain the security of the network,\n> reliance on massive energy consumption has scaling drawbacks and leads to\n> mining\n> centralization. A major consequence of the central role of local\n> electricity\n> cost in mining is that today, most existing and potential participants in\n> the\n> Bitcoin network cannot profitably mine Bitcoin even if they have the\n> capital to\n> invest in mining hardware. From a practical perspective, Bitcoin adoption\n> by\n> companies like Tesla (which recently rescinded its acceptance of Bitcoin as\n> payment) has been hampered by its massive energy consumption and perceived\n> environmental impact.\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/btc_energy-small.png]]\n>\n> Figure. Bitcoin price and estimated Bitcoin energy consumption.\n> Data sources: [https://cbeci.org Cambridge Bitcoin Electricity\n> Consumption Index], [https://www.coindesk.com CoinDesk].\n>\n> We propose a novel proof-of-work paradigm for Bitcoin--Optical\n> proof-of-work. It\n> is designed to decouple Bitcoin mining from energy and make it feasible\n> outside\n> of regions with low electricity costs. ''Optical proof-of-work'' (oPoW) is\n> a\n> modification of Hashcash that is most efficiently computed using a new\n> class of\n> photonic processors. Without compromising the cryptographic or\n> game-theoretical\n> security of Hashcash, oPoW shifts the operating expenses of mining (OPEX),\n> to\n> capital expenses (CAPEX)--i.e. electricity to hardware. oPoW makes it\n> possible\n> for billions of new miners to enter the market simply by investing in a\n> low-energy photonic miner. Shifting to a high-CAPEX PoW has the added\n> benefit of\n> making the hashrate resilient to Bitcoin's price fluctuations - once\n> low-OPEX\n> hardware is operating there is no reason to shut it down even if the value\n> of\n> mining rewards diminishes. oPoW is backward compatible with GPUs, FPGAs,\n> and\n> ASICs meaning that a transitional period of optical and traditional\n> hardware\n> mining in parallel on the network is feasible\n>\n> More information is available here: [https://www.powx.org/opow].\n>\n> == Abstract ==\n>\n> As Bitcoin gained utility and value over the preceding decade, the\n> network incentivized the purchase of billions of dollars in mining\n> equipment and electricity. With the growth of competition, home mining\n> became unprofitable. Even the most sophisticated special-purpose\n> hardware (ASIC miners) doesn\u2019t cover its energy costs unless the miner\n> also has direct access to very cheap electricity. This heavy reliance\n> on energy makes it difficult for new miners to enter the market and\n> leads to hashrate instability as miners shut off their machines when\n> the price of Bitcoin falls. Additionally as the network stores ever\n> more value, the percentage of world energy consumption that is\n> associated with Bitcoin continues to grow, creating the potential for\n> scaling failure and a general backlash. To ensure that Bitcoin can\n> continue scaling and reach its full potential as a world currency and\n> store of value, we propose a low-energy proof-of-work paradigm for\n> Bitcoin. ''Optical proof of work (oPoW)'' is designed to decouple\n> Bitcoin\u2019s security from massive energy use and make bitcoin mining\n> feasible outside of regions with low electricity costs. ''Optical\n> proof-of-work'' is a modification of Hashcash that is most efficiently\n> computed using a new class of photonic processors that has emerged as\n> a leading solution for ultra-low energy computing over the last 5\n> years. oPoW shifts the operating expenses of mining (OPEX), to capital\n> expenses (CAPEX)\u2013i.e. electricity to hardware, without compromising\n> the cryptographic or game-theoretical security of Hashcash. We provide\n> an example implementation of oPoW, briefly discuss its cryptographic\n> construction as well as the working principle of photonic processors.\n> Additionally, we outline the potential benefits of oPoW to the bitcoin\n> network, including geographic decentralization and democratization of\n> mining as well as hashrate resilience to price fluctuations.\n>\n> == Copyright ==\n>\n> This BIP is dual-licensed under the Open Publication License and BSD\n> 2-clause license.\n>\n> == Motivation ==\n>\n> As Bitcoin has grown over the past decade from a small network run by\n> hobbyists to a global currency, the underlying Proof of Work protocol\n> has not been updated. Initially pitched as a global decentralized\n> network (\u201cone CPU-one vote\u201d), Bitcoin transactions today are secured\n> by a small group of corporate entities. In practice, it is only\n> feasible for [http://archive.is/YeDwh entities that can secure access\n> to abundant, inexpensive energy]. The economics of mining limit\n> profitability to places like Iceland, Texas, or Western China. Besides\n> the negative environmental externalities, which may be significant,\n> mining today is performed primarily with the consent (and in many\n> cases, partnership) of large public utilities and the governments that\n> control them. Although this may not be a problem in the short term, in\n> the long term it stands to erode the censorship resistance and\n> security of Bitcoin and other public blockchains through potential\n> regulation or [https://arxiv.org/pdf/1605.07524.pdf partitioning\n> attacks].\n>\n> Recent events, such as the\n> [https://twitter.com/MustafaYilham/status/1384278267067203590 ~25%\n> hashrate crash due to coal-powered grid failure in china] and Tesla\u2019s\n> rescinding of its acceptance of Bitcoin as a form of payment, show\n> that there are practical real-world downsides to Proof of Works\u2019s\n> massive reliance on energy.\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/emusk_tweet.png]]\n>\n> Whether on not the Bitcoin community accepts this common criticism as\n> entirely valid, it has real-world effects which will only get worse\n> over time. Eliminating the exponentially growing energy use currently\n> built into Bitcoin without eliminating the security of PoW would be\n> ideal and should not be a partisan issue.\n>\n> New consensus mechanisms have been proposed as a means of securing\n> cryptocurrencies whilst reducing energy cost, such as various forms of\n> Proof of Stake and Proof of Space-Time. While many of these\n> alternative mechanisms offer compelling guarantees, they generally\n> require new security assumptions, which have not been stress-tested by\n> live deployments at any adequate scale. Consequently, we still have\n> relatively little empirical understanding of their safety. Completely\n> changing the Bitcoin paradigm is likely to introduce new unforeseen\n> problems. We believe that the major issues discussed above can be\n> resolved by improving rather than eliminating Bitcoin\u2019s fundamental\n> security layer\u2014Proof of Work. Instead of devising a new consensus\n> architecture to fix these issues, it is sufficient to shift the\n> economics of PoW. The financial cost imposed on miners need not be\n> primarily composed of electricity. The situation can be significantly\n> improved by reducing the operating expense (OPEX)\u2014energy\u2014as a major\n> mining component. Then, by shifting the cost towards capital expense\n> (CAPEX)\u2014mining hardware\u2014the dynamics of the mining ecosystem becomes\n> much less dependent on electricity prices, and much less electricity\n> is consumed as a whole.\n>\n> Moreover, a reduction in energy consumption automatically leads to\n> geographically distributed mining, as mining becomes profitable even\n> in regions with expensive electricity. Additionally, lower energy\n> consumption will eliminate heating issues experienced by today\u2019s\n> mining operations, which will further decrease operating cost as well\n> as noise associated with fans and cooling systems. All of this means\n> that individuals and smaller entities would be able to enter the\n> mining ecosystem simply for the cost of a miner, without first gaining\n> access to cheap energy or a dedicated, temperature-controlled data\n> center. To a degree, memory-hard PoW schemes like\n> [https://github.com/tromp/cuckoo Cuckoo Cycle], which increase the use\n> of SRAM in lieu of pure computation, push the CAPEX/OPEX ratio in the\n> right direction by occupying ASIC chip area with memory. To maximize\n> the CAPEX to OPEX ratio of the Optical Proof of Work algorithm, we\n> developed [https://assets.pubpub.org/xi9h9rps/01581688887859.pdf\n> ''HeavyHash''] [1]. HeavyHash is a cryptographic construction that\n> takes the place of SHA256 in Hashcash. Our algorithm is compatible\n> with ultra-energy-efficient photonic co-processors that have been\n> developed for machine learning hardware accelerators.\n>\n> HeavyHash uses a proven digital hash (SHA3) packaged with a large\n> amount of MAC (Multiply-and-Accumulate) computation into a Proof of\n> Work puzzle. Although HeavyHash can be computed on any standard\n> digital hardware, it becomes hardware efficient only when a small\n> digital core is combined with a low-power photonic co-processor for\n> performing MAC operations. oPoW mining machines will have a small\n> digital core flip-chipped onto a large, low-power photonic chip. This\n> core will be bottlenecked by the throughput of the digital to analog\n> and analog to digital converters. A prototype of such analogue optical\n> matrix multiplier can be seen in the figure below.\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/optical_chip.png]]\n>\n> Figure. TOP: Photonic Circuit Diagram, A. Laser input (1550nm, common\n> telecom wavelength) B. Metal pads for controlling modulators to\n> transduce electrical data to optical C. Metal pads for tuning mesh of\n> directional couplers D. Optical signal exits here containing the\n> results of the computation and is output to fibers via a grating\n> coupler the terminus of each waveguide. E. Alignment circuit for\n> aligning fiber coupling stage. Bottom: a photograph of a bare oPoW\n> miner prototype chip before wire and fiber bonding. On the right side\n> of the die are test structures (F).\n>\n> The ''HeavyHash'' derives its name from the fact that it is bloated or\n> weighted with additional computation. This means that a cost\n> comparable oPoW miner will have a much lower nominal hashrate compared\n> to a Bitcoin ASIC (HeavyHashes/second vs. SHA256 Hashes/second in\n> equivalent ASIC). We provide the cryptographic security argument of\n> the HeavyHash function in Section 3 in\n> [https://assets.pubpub.org/xi9h9rps/01581688887859.pdf Towards Optical\n> Proof of Work] [1]. In the article, we also provide a game-theoretic\n> security argument for CAPEX-heavy PoW. For additional information, we\n> recommend reading\n> [\n> https://uncommoncore.co/wp-content/uploads/2019/10/A-model-for-Bitcoins-security-and-the-declining-block-subsidy-v1.02.pdf\n> this article].\n>\n> While traditional digital hardware relies on electrical currents,\n> optical computing uses light as the basis for some of or all of its\n> operations. Building on the development and commercialization of\n> silicon photonic chips for telecom and datacom applications, modern\n> photonic co-processors are silicon chips made using well-established\n> and highly scalable silicon CMOS processes. However, unlike cutting\n> edge electronics which require ever-smaller features (e.g. 5 nm),\n> fabricated by exponentially more complex and expensive machinery,\n> silicon photonics uses old fabrication nodes (90 nm). Due to the large\n> de Broglie wavelength of photons, as compared to electrons, there is\n> no benefit to using the small feature sizes. The result is that access\n> to silicon photonic wafer fabrication is readily available, in\n> contrast to the notoriously difficult process of accessing advanced\n> nodes. Moreover, the overall cost of entry is lower as lithography\n> masks for silicon photonics processes are an order of magnitude\n> cheaper ($500k vs. $5M). Examples of companies developing optical\n> processors for AI, which will be compatible with oPoW include\n> [https://lightmatter.co/ Lightmatter], [https://www.lightelligence.ai/\n> Lightelligence], [https://luminous.co/ Luminous],\n> [\n> https://www.intel.com/content/www/us/en/architecture-and-technology/silicon-photonics/silicon-photonics-overview.html\n> Intel], and other more recent entrants.\n>\n> == Specification ==\n>\n> === HeavyHash ===\n>\n> The HeavyHash is performed in three stages:\n>\n> # Keccak hash\n> # Matrix-vector multiplication\n> # Keccak of the result xorred with the hashed input\n>\n> Note that the most efficiently matrix-vector multiplication is\n> performed on a photonic miner. However, this linear algebra operation\n> can be performed on any conventional computing hardware (CPU, GPU,\n> etc.), therefore making the HeavyHash compatible with any digital\n> device.\n>\n> The algorithm\u2019s pseudo-code:\n>\n> <pre>// M is a Matrix 64 x 64 of Unsigned 4 values\n>\n> // 256-bitVector\n> x1 <- keccak(input)\n>\n> // Reshape the obtained bitvector\n> // into a 64-vector of unsigned 4-bit values\n> x2 <- reshape(x1, 64)\n>\n> // Perform a matrix-vector multiplication.\n> // The result is 64-vector of 14-bit unsigned.\n> x3 <- vector_matrix_mult(x2, M)\n>\n> // Truncate all values to 4 most significant bits.\n> // This is due to the specifics of analog\n> // computing by the photonic accelerator.\n> // Obtain a 64-vector of 4-bit unsigned.\n> x4 <- truncate_to_msb(x3, 4)\n>\n> // Interpret as a 256-bitvector\n> x5 <- flatten(x4)\n>\n> // 256-bitVector\n> result <- keccak(xor(x5, x1))</pre>\n>\n> Which in C can be implemented as:\n>\n> <pre>\n> static void heavyhash(const uint16_t matrix[64][64], void* pdata,\n> size_t pdata_len, void* output)\n> {\n>     uint8_t hash_first[32] __attribute__((aligned(32)));\n>     uint8_t hash_second[32] __attribute__((aligned(32)));\n>     uint8_t hash_xored[32] __attribute__((aligned(32)));\n>\n>     uint16_t vector[64] __attribute__((aligned(64)));\n>     uint16_t product[64] __attribute__((aligned(64)));\n>\n>     sha3_256((uint8_t*) hash_first, 32, (const uint8_t*)pdata, pdata_len);\n>\n>     for (int i = 0; i < 32; ++i) {\n>         vector[2*i] = (hash_first[i] >> 4);\n>         vector[2*i+1] = hash_first[i] & 0xF;\n>     }\n>\n>     for (int i = 0; i < 64; ++i) {\n>         uint16_t sum = 0;\n>         for (int j = 0; j < 64; ++j) {\n>             sum += matrix[i][j] * vector[j];\n>         }\n>         product[i] = (sum >> 10);\n>     }\n>\n>     for (int i = 0; i < 32; ++i) {\n>         hash_second[i] = (product[2*i] << 4) | (product[2*i+1]);\n>     }\n>\n>     for (int i = 0; i < 32; ++i) {\n>         hash_xored[i] = hash_first[i] ^ hash_second[i];\n>     }\n>     sha3_256((uint8_t*)output, 32, (const uint8_t*)hash_xored, 32);\n> }\n> </pre>\n>\n> === Random matrix generation ===\n>\n> The random matrix M (which is a HeavyHash parameter) is obtained in a\n> deterministic way and is changed every block. Matrix M coefficients\n> are generated using a pseudo-random number generation algorithm\n> (xoshiro) from the previous block header. If the matrix is not full\n> rank, it is repeatedly generated again.\n>\n> An example code to obtain the matrix M:\n>\n> <pre>\n> void generate_matrix(uint16_t matrix[64][64], struct xoshiro_state *state)\n> {\n>     do {\n>         for (int i = 0; i < 64; ++i) {\n>             for (int j = 0; j < 64; j += 16) {\n>                 uint64_t value = xoshiro_gen(state);\n>                 for (int shift = 0; shift < 16; ++shift) {\n>                     matrix[i][j + shift] = (value >> (4*shift)) & 0xF;\n>                 }\n>             }\n>         }\n>     } while (!is_full_rank(matrix));\n> }\n>\n> static inline uint64_t xoshiro_gen(struct xoshiro_state *state) {\n>     const uint64_t result = rotl64(state->s[0] + state->s[3], 23) +\n> state->s[0];\n>\n>     const uint64_t t = state->s[1] << 17;\n>\n>     state->s[2] ^= state->s[0];\n>     state->s[3] ^= state->s[1];\n>     state->s[1] ^= state->s[2];\n>     state->s[0] ^= state->s[3];\n>\n>     state->s[2] ^= t;\n>\n>     state->s[3] = rotl64(state->s[3], 45);\n>\n>     return result;\n> }\n> </pre>\n>\n> == Discussion ==\n>\n> === Geographic Distribution of Mining Relative to CAPEX-OPEX Ratio of\n> Mining Costs ===\n>\n> Below is a simple model showing several scenarios for the geographic\n> distribution of mining activity relative to the CAPEX/OPEX ratio of\n> the cost of operating a single piece of mining hardware. As the ratio\n> of energy consumption to hardware cost decreases, geographic\n> variations in energy cost cease to be a determining factor in miner\n> distribution.\n>\n> Underlying assumptions: 1. Electricity price y is fixed in time but\n> varies geographically. 2. Every miner has access to the same hardware.\n> 3. Each miner\u2019s budget is limited by both the cost of mining equipment\n> as well as the local cost of the electricity they consume\n>\n> budget = a(p+ey),\n>\n> where a is the number of mining machines, p is the machine price, e is\n> the total energy consumption over machine lifetime, and y is\n> electricity price.\n>\n> Note that in locations where mining is not profitable, hashrate is zero.\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/sim1.png]]\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/sim2.png]]\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/sim3.png]]\n>\n>\n> An interactive version of this diagram can be found\n> [https://www.powx.org/opow here].\n>\n> === Why does CAPEX to OPEX shift lead to lower energy consumption? ===\n>\n> A common misconception about oPoW is that it makes mining \u201ccheaper\u201d by\n> enabling energy-efficient hardware. There is no impact on the dollar\n> cost of mining a block, rather the mix of energy vs. hardware\n> investment changes from about 50/50 to 10/90 or better. We discuss\n> this at length and rigorously in our paper[1].\n>\n> === Working Principles of Photonic Processors ===\n>\n> Photonics accelerators are made by fabricating waveguides in silicon\n> using standard lithography processes. Silicon is transparent to\n> infrared light and can act as a tiny on-chip fiber optical cable.\n> Silicon photonics found its first use during the 2000s in transceivers\n> for sending and receiving optical signals via fiber and has advanced\n> tremendously over the last decade.\n>\n> By encoding a vector into optical intensities passing through a series\n> of parallel waveguides, interfering these signals in a mesh of tunable\n> interferometers (acting as matrix coefficients), and then detecting\n> the output using on-chip Germanium photodetectors, a matrix-vector\n> multiplication is achieved. A generalized discussion of matrix\n> multiplication setups using photonics/interference can be found in\n> [https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.73.58 Reck\n> et al.] and [https://arxiv.org/abs/1506.06220 Russell et al.] A\n> detailed discussion of several integrated photonic architectures for\n> matrix multiplication and corresponding tuning algorithms can be found\n> in [https://arxiv.org/pdf/1909.06179.pdf Pai et al.]\n>\n> Below is a conceptual representation of a 3D-packaged oPoW mining\n> chip. Note that the majority of the real estate and cost comes from\n> the photonic die and the laser, with only a small digital SHA3 die\n> needed (as opposed to a conventional miner of the same cost, which\n> would have many copies of this die running in parallel).\n>\n> [[https://github.com/PoWx-Org/obtc/raw/main/img/optminer.png]]\n>\n> === Block Reward Considerations ===\n>\n> Although it is out of the scope of this proposal, the authors strongly\n> recommend the consideration of a change in the block reward schedule\n> currently implemented in Bitcoin. There is no clear way to incentivize\n> miners with transaction fees only, as has been successfully shown in\n> [https://www.cs.princeton.edu/~smattw/CKWN-CCS16.pdf On the\n> Instability of Bitcoin Without the Block Reward] and other\n> publications, therefore looking a decade or two ahead it will be\n> important to implement a fixed block reward or to slow the decay of\n> the block reward to maintain the security of the network. Given that\n> oPoW miners have low operating costs, once a large number of machines\n> are running the reward level sufficient to keep them in operation and\n> providing robust security can potentially be significantly smaller\n> than in the case of the current SHA256 ASICs securing Bitcoin.\n>\n> === Implementation on the Bitcoin Network ===\n>\n> A hard fork is not necessarily required for the Bitcoin network to\n> test and eventually implement oPoW. It\u2019s possible to add oPoW as a\n> dual PoW to Bitcoin as a soft fork. Tuning the parameters to ensure\n> that, for example, 99.9% of the security budget would be earned by\n> miners via the SHA256 Hashcash PoW and 0.1% via oPoW would create\n> sufficient incentive for oPoW to be stress-tested and to incentivize\n> the manufacture of dedicated oPoW miners. If this test is successful,\n> the parameters can be tuned continuously over time, e.g. oPoW share\n> doubling at every halving, such that oPoW accounts for some target\n> percentage (up to 100% in a complete SHA256 phase-out).\n>\n> == Endnotes ==\n>\n> With significant progress in optical and analog\n> matrix-vector-multiplication chipsets over the last year, we hope to\n> demonstrate commercial low-energy mining on our network in the next 6\n> months. The current generation of optical matrix processors under\n> development is expected to have 10x better energy consumption per MAC\n> operation than digital implementations, and we expect this to improve\n> by another order of magnitude in future generations.\n>\n> PoWx will also be publishing the designs of the current optical miner\n> prototypes in the near term under an open-source hardware license.\n>\n> == Acknowledgments ==\n>\n> We thank all the members of the Bitcoin community who have already\n> given us feedback over the last several years as well as others in the\n> optical computing community and beyond that have given their input.\n>\n>\n>\n>\n> [1] M. Dubrovsky et al. Towards Optical Proof of Work, CES conference\n> (2020) https://assets.pubpub.org/xi9h9rps/01581688887859.pdf\n>\n> [2]\n> https://sciencex.com/news/2020-05-powering-bitcoin-silicon-photonics-power.html\n>\n> [3] KISS random number generator\n> http://www.cse.yorku.ca/~oz/marsaglia-rng.html\n>\n>\n>\n>\n> ----\n> We have taken into account the moderator's comments we received previously.\n>\n>\n>\n> Bogdan and Mike,\n>\n> PoWx\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210517/666f63d9/attachment-0001.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T06:46:58",
                "message_text_only": "> A few things jump out at me as I read this proposal\n>\n> First, deriving the hardness from capex as opposed to opex switches the privilege from those who have cheap electricity to those who have access to chip manufacturers/foundries. While this is similarly the case for Bitcoin ASICS today, the longevity of the PoW algorithm has led to a better distribution of knowledge and capital goods required to create ASICS. The creation of a new PoW of any kind, hurts this dimension of decentralization as we would have to start over from scratch on the best way to build, distribute, and operate these new pieces of hardware at scale. While I have not combed over the PoW proposed here in fine detail, the more complicated the algorithm is, the more it privileges those with specific knowledge about it and the manufacturing process.\n>\n> The competitive nature of Bitcoin mining is such that miners will be willing to spend up to their expected mining reward in their operating costs to continue to mine. Let's suppose that this new PoW was adopted, miners will continue to buy these chips in ever increasing quantities, turning the aforementioned CAPEX into a de facto OPEX. This has a few consequences. First it just pushes the energy consumption upstream to the chip manufacturing process, rather than eliminating it. And it may trade some marginal amount of the energy consumption for the set of resources it takes to educate and create chip manufacturers. The only way to avoid that cost being funneled back into more energy consumption is to make the barrier to understanding of the manufacturing process sufficiently difficult so as to limit the proliferation of these chips. Again, this privileges the chip manufacturers as well as those with close access to the chip manufacturers.\n>\n> As far as I can tell, the only thing this proposal actually does is create a very lucrative business model for those who sell this variety of chips. Any other effects of it are transient, and in all likelihood the transient effects create serious centralization pressure.\n>\n> At the end of the day, the energy consumption is foundational to the system. The only way to do away with authorities, is to require competition. This competition will employ ever more resources until it is unprofitable to do so. At the base of all resources of society is energy. You get high energy expenditure, or a privileged class of bitcoin administrators: pick one. I suspect you'll find the vast majority of Bitcoin users to be in the camp of the energy expenditure, since if we pick the latter, we might as well just pack it in and give up on the Bitcoin experiment.\n\n\nKeagan is quite correct.\nUltimately all currency security derives from energy consumption.\nEverything eventually resolves down to proof-of-work.\n\n* Proof-of-space simply moves the work to the construction of more storage devices.\n* Proof-of-stake simply moves the work to stake-grinding attacks.\n* The optical proof-of-work simply moves the work to the construction of more miners.\n* Even government-enforced fiat is ultimately proof-of-work, as the operation and continued existence of any government is work.\n\nIt is far better to move towards a more *direct* proof-of-work, than to add more complexity and come up with something that is just proof-of-work, but with the work moved off to somewhere else and with additional moving parts that can be jammed or hacked into.\n\nWhen considering any new proof-of-foo, it is best to consider all effects until you reach the base physics of the arrow of time, at which point you will realize it is ultimately just another proof-of-work anyway.\n\nAt least, proof-of-work is honest about its consumption of resources.\n\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Devrandom",
                "date": "2021-05-18T09:18:24",
                "message_text_only": "On Mon, May 17, 2021 at 11:47 PM ZmnSCPxj:\n\n>\n> When considering any new proof-of-foo, it is best to consider all effects\n> until you reach the base physics of the arrow of time, at which point you\n> will realize it is ultimately just another proof-of-work anyway.\n>\n\nLet's not simplify away economic considerations, such as externalities.\nThe whole debate about the current PoW is about negative externalities\nrelated to energy production.\n\nDepending on the details, CAPEX (R&D, real-estate, construction,\nproduction) may have less externalities, and if that's the case, we should\nbe interested in adopting a PoW that is intensive in these types of CAPEX.\n\nOn Mon, May 17, 2021 at 2:20 PM Keagan McClelland wrote:\n\nFirst it just pushes the energy consumption upstream to the chip\n> manufacturing process, rather than eliminating it. And it may trade some\n> marginal amount of the energy consumption for the set of resources it takes\n> to educate and create chip manufacturers. The only way to avoid that cost\n> being funneled back into more energy consumption [...]\n>\n\nI challenge you to substantiate these assertions.  Real-estate and human\ncognitive work are not energy intensive and are a major factor in the\nexpected costs of some alternative PoWs.  The expected mining effort is\nsuch that the cost will reach the expected reward, no more, so there is\nevery reason to believe that energy consumption will be small compared to\nthe current PoW.\n\nTherefore, the total associated negative externalities for the alternative\nPoWs may well be much lower than the externalities of energy production.\nThis needs detailed analysis, not a knee-jerk reaction.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/15c18301/attachment.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T10:58:59",
                "message_text_only": "Good morning devrandom,\n\n> On Mon, May 17, 2021 at 11:47 PM ZmnSCPxj:\n>\n> > When considering any new proof-of-foo, it is best to consider all effects until you reach the base physics of the arrow of time, at which point you will realize it is ultimately just another proof-of-work anyway.\n>\n> Let's not simplify away economic considerations, such as externalities.\u00a0 The whole debate about the current PoW is about negative externalities related to energy production.\n>\n> Depending on the details, CAPEX (R&D, real-estate, construction, production) may have less externalities, and if that's the case, we should be interested in adopting a PoW that is intensive in these types of CAPEX.\n\nThen let us also not forget another important externality: possible optimizations of a new PoW algorithm that risk being put into some kind of exclusive patent.\n\nI think with high probability that SHA256d as used by Bitcoin will no longer have an optimization as large in effect as ASICBOOST in the future, simply because there is a huge incentive to find such optimizations and Bitcoin has been using SHA256d for 12 years already, and we have already found ASICBOOST (and while patented, as I understand it the patent owner has promised not to enforce the patent --- my understanding may be wrong).\n\nAny alternative PoW algorithm risks an ASICBOOST-like optimization that is currently unknown, but which will be discovered (and possibly patented by an owner that *will* enforce the patent, thus putting the entire ecosystem at direct conflict with legacy government structures) once there is a good incentive (i.e. use in Bitcoin) for it.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "mike at powx.org",
                "date": "2021-05-18T11:05:44",
                "message_text_only": "That\u2019s a fair point about patents. However, note that we were careful about this. oPoW only uses SHA3 (can be replaced with SHA256 in principle as well) and low precision linear matrix multiplication.  A whole industry is trying to accelerate 8-bit linear matrix mults for AI so there is already a massive incentive (and has been for decades). \n\nSee companies like Mythic, Groq, Tesla (FSD computer), google TPU and so on for electronic versions of this. Several of the optical ones are mentioned in the BIP (e.g. Lightmatter)\n\nSent from my iPhone\n\n> On May 18, 2021, at 6:59 AM, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n> \n> \ufeffGood morning devrandom,\n> \n>> On Mon, May 17, 2021 at 11:47 PM ZmnSCPxj:\n>> \n>>> When considering any new proof-of-foo, it is best to consider all effects until you reach the base physics of the arrow of time, at which point you will realize it is ultimately just another proof-of-work anyway.\n>> \n>> Let's not simplify away economic considerations, such as externalities.  The whole debate about the current PoW is about negative externalities related to energy production.\n>> \n>> Depending on the details, CAPEX (R&D, real-estate, construction, production) may have less externalities, and if that's the case, we should be interested in adopting a PoW that is intensive in these types of CAPEX.\n> \n> Then let us also not forget another important externality: possible optimizations of a new PoW algorithm that risk being put into some kind of exclusive patent.\n> \n> I think with high probability that SHA256d as used by Bitcoin will no longer have an optimization as large in effect as ASICBOOST in the future, simply because there is a huge incentive to find such optimizations and Bitcoin has been using SHA256d for 12 years already, and we have already found ASICBOOST (and while patented, as I understand it the patent owner has promised not to enforce the patent --- my understanding may be wrong).\n> \n> Any alternative PoW algorithm risks an ASICBOOST-like optimization that is currently unknown, but which will be discovered (and possibly patented by an owner that *will* enforce the patent, thus putting the entire ecosystem at direct conflict with legacy government structures) once there is a good incentive (i.e. use in Bitcoin) for it.\n> \n> Regards,\n> ZmnSCPxj"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T11:36:49",
                "message_text_only": "Good morning Michael,\n\n> That\u2019s a fair point about patents. However, note that we were careful about this. oPoW only uses SHA3 (can be replaced with SHA256 in principle as well) and low precision linear matrix multiplication. A whole industry is trying to accelerate 8-bit linear matrix mults for AI so there is already a massive incentive (and has been for decades).\n>\n> See companies like Mythic, Groq, Tesla (FSD computer), google TPU and so on for electronic versions of this. Several of the optical ones are mentioned in the BIP (e.g. Lightmatter)\n\n\nPlease note that ASICBOOST for SHA256d is based on a layer-crossing violation: SHA256 processes in blocks, and the Bitcoin block header is slightly larger than one SHA256 block.\n\nAdding more to a direct SHA3 (which, as a \"sponge\" construction, avoids blocks, but other layer-crossing violations may still exist) still risks layer violations that might introduce hidden optimizations.\n\nOr more succinctly;\n\n* Just because the components have (with high probability) no more possible optimizations, does not mean that the construction *as a whole* has no hidden optimizations.\n\nThus, even if linear matrix multiplication and SHA3 have no hidden optimizations, their combination, together with the Bitcoin block header format, *may* have hidden optimizations.\n\nAnd there are no *current* incentives to find such optimizations until Bitcoin moves to this, at which point we are already committed and it would be highly infeasible to revert to SHA256d --- i.e. too late.\n\nThis is why changes to PoW are highly discouraged.\n\n\nRemember, ASICBOOST was *not* an optimization of SHA256 *or* SHA256d, it was an optimizations of SHA256d-on-a-Bitcoin-block-header.\nASICBOOST cannot speed up general SHA256 or even general SHA256d, it only applies specifically to SHA256d-on-a-Bitcoin-block-header.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "mike at powx.org",
                "date": "2021-05-18T11:43:18",
                "message_text_only": "That\u2019s interesting. I didn\u2019t know the history of ASICBOOST.\n\nOur proposal (see Implementation) is to phase in oPoW slowly starting at a very low % of the rewards (say 1%). That should give a long testing period where there is real financial incentive for things like ASICBOOST\n\nDoes that resolve or partially resolve the issue in your eyes? \n\nSent from my iPhone\n\n> On May 18, 2021, at 7:36 AM, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n> \n> \ufeffGood morning Michael,\n> \n>> That\u2019s a fair point about patents. However, note that we were careful about this. oPoW only uses SHA3 (can be replaced with SHA256 in principle as well) and low precision linear matrix multiplication. A whole industry is trying to accelerate 8-bit linear matrix mults for AI so there is already a massive incentive (and has been for decades).\n>> \n>> See companies like Mythic, Groq, Tesla (FSD computer), google TPU and so on for electronic versions of this. Several of the optical ones are mentioned in the BIP (e.g. Lightmatter)\n> \n> \n> Please note that ASICBOOST for SHA256d is based on a layer-crossing violation: SHA256 processes in blocks, and the Bitcoin block header is slightly larger than one SHA256 block.\n> \n> Adding more to a direct SHA3 (which, as a \"sponge\" construction, avoids blocks, but other layer-crossing violations may still exist) still risks layer violations that might introduce hidden optimizations.\n> \n> Or more succinctly;\n> \n> * Just because the components have (with high probability) no more possible optimizations, does not mean that the construction *as a whole* has no hidden optimizations.\n> \n> Thus, even if linear matrix multiplication and SHA3 have no hidden optimizations, their combination, together with the Bitcoin block header format, *may* have hidden optimizations.\n> \n> And there are no *current* incentives to find such optimizations until Bitcoin moves to this, at which point we are already committed and it would be highly infeasible to revert to SHA256d --- i.e. too late.\n> \n> This is why changes to PoW are highly discouraged.\n> \n> \n> Remember, ASICBOOST was *not* an optimization of SHA256 *or* SHA256d, it was an optimizations of SHA256d-on-a-Bitcoin-block-header.\n> ASICBOOST cannot speed up general SHA256 or even general SHA256d, it only applies specifically to SHA256d-on-a-Bitcoin-block-header.\n> \n> Regards,\n> ZmnSCPxj"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T11:58:44",
                "message_text_only": "Good morning Michael,\n\n> That\u2019s interesting. I didn\u2019t know the history of ASICBOOST.\n\nHistory is immaterial, what is important is the technical description of ASICBOOST.\nBasically, by fixing the partial computation of the second block of SHA256, we could selectively vary bits in the first block of SHA256, while reusing the computation of the second block.\nThis allows a grinder to grind more candidate blocks without recomputing the second block output, reducing the needed power consumption for the same number of hashes attempted.\n\nHere is an important writeup: https://www.mit.edu/~jlrubin/public/pdfs/Asicboost.pdf\nIt should really be required reading for anyone who dreams of changing PoW algorithms to read and understand this document.\n\nThere may be similar layer-crossings in any combined construction --- or even just a simple hash function --- when it is applied to a specific Bitcoin block format.\n\n>\n> Our proposal (see Implementation) is to phase in oPoW slowly starting at a very low % of the rewards (say 1%). That should give a long testing period where there is real financial incentive for things like ASICBOOST\n>\n> Does that resolve or partially resolve the issue in your eyes?\n\nIt does mitigate this somewhat.\n\nHowever, such a mechanism is an additional complication and there may be further layer-crossing violations possible --- there may be an optimization to have a circuit that occasionally uses SHA256d and occasionally uses oPoW, that is not possible with a pure SHA256d or pure oPoW circuit.\nSo this mitigation is not as strong as it might appear at first glance; additional layers means additional possibility of layer-crossing violations like ASICBOOST.\n\n\n\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "mike at powx.org",
                "date": "2021-05-18T12:17:46",
                "message_text_only": "Nothing in a dynamic system like PoW mining can be 100% anticipated, for example there might be advanced in manufacturing of chips which are patented and so on. \n\nIt sounds like your take is that this means no improvements can ever be made by any mechanism, however conservative.\n\nWe do go into a fair amount of detail about Minimum Effective Hardness in our paper https://assets.pubpub.org/xi9h9rps/01581688887859.pdf , which is actually a special case of hardness that we invented for the context of adding an operation to a PoW, and how it applies to random matrix mults.   \n\nSent from my iPhone\n\n> On May 18, 2021, at 7:58 AM, ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n> \n> \ufeffGood morning Michael,\n> \n>> That\u2019s interesting. I didn\u2019t know the history of ASICBOOST.\n> \n> History is immaterial, what is important is the technical description of ASICBOOST.\n> Basically, by fixing the partial computation of the second block of SHA256, we could selectively vary bits in the first block of SHA256, while reusing the computation of the second block.\n> This allows a grinder to grind more candidate blocks without recomputing the second block output, reducing the needed power consumption for the same number of hashes attempted.\n> \n> Here is an important writeup: https://www.mit.edu/~jlrubin/public/pdfs/Asicboost.pdf\n> It should really be required reading for anyone who dreams of changing PoW algorithms to read and understand this document.\n> \n> There may be similar layer-crossings in any combined construction --- or even just a simple hash function --- when it is applied to a specific Bitcoin block format.\n> \n>> \n>> Our proposal (see Implementation) is to phase in oPoW slowly starting at a very low % of the rewards (say 1%). That should give a long testing period where there is real financial incentive for things like ASICBOOST\n>> \n>> Does that resolve or partially resolve the issue in your eyes?\n> \n> It does mitigate this somewhat.\n> \n> However, such a mechanism is an additional complication and there may be further layer-crossing violations possible --- there may be an optimization to have a circuit that occasionally uses SHA256d and occasionally uses oPoW, that is not possible with a pure SHA256d or pure oPoW circuit.\n> So this mitigation is not as strong as it might appear at first glance; additional layers means additional possibility of layer-crossing violations like ASICBOOST.\n> \n> \n> \n> \n> Regards,\n> ZmnSCPxj\n> \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/d8b1d62e/attachment-0001.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T12:22:09",
                "message_text_only": "Good morning Michael,\n\n> Nothing in a dynamic system like PoW mining can be 100% anticipated, for example there might be advanced in manufacturing of chips which are patented and so on.\u00a0\n>\n> It sounds like your take is that this means no improvements can ever be made by any mechanism, however conservative.\n\nNot at all.\n\nSmall-enough improvements over long-enough periods of time are expected and anticipated --- that is why there exists a difficulty adjustment mechanism.\nWhat is risky if a large-enough improvement over a short-enough time that overwhelms the difficulty adjustment mechanism.\nASICBOOST was a massive enough improvement that it could be argued to potentially overwhelm this mechanism if it was not openly allowed for all miners.\n\n>\n> We do go into a fair amount of detail about Minimum Effective Hardness in our paper\u00a0https://assets.pubpub.org/xi9h9rps/01581688887859.pdf\u00a0, which is actually a special case of hardness that we invented for the context of adding an operation to a PoW, and how it applies to random matrix mults. \u00a0\u00a0\n\nThis certainly helps as well.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-18T12:58:19",
                "message_text_only": "Good morning Michael,\n\n> Good morning Michael,\n>\n> > Nothing in a dynamic system like PoW mining can be 100% anticipated, for example there might be advanced in manufacturing of chips which are patented and so on.\n> > It sounds like your take is that this means no improvements can ever be made by any mechanism, however conservative.\n>\n> Not at all.\n>\n> Small-enough improvements over long-enough periods of time are expected and anticipated --- that is why there exists a difficulty adjustment mechanism.\n> What is risky if a large-enough improvement over a short-enough time that overwhelms the difficulty adjustment mechanism.\n> ASICBOOST was a massive enough improvement that it could be argued to potentially overwhelm this mechanism if it was not openly allowed for all miners.\n\nOr to put it in another perspective:\n\n* Small improvements to PoW mining are tolerated by Bitcoin.\n  * Such improvements are expected to be common.\n* Large improvements to PoW mining are potential extinction events for Bitcoin, due to massive centralization risk.\n  * Such improvements are expected to be *rare* but *not* nonexistent.\n* The number of possible circuit configurations is bounded by physical limits (matter is quantized, excssively-large chips are infeasible, etc.), thus the number of expected optimizations of a particular overall algorithm are bounded.\n\nSuppose two manufacturers find two different small improvements to PoW mining.\nIn all likelihood, \"the sum is better than its parts\" and if the two have a cross-licensing deal, they can outcompete their *other* competition.\nFurther, even if some small competitor violates the patent, the improvement may be small enough that the patent owner may decide the competitor is too small to bother with all the legal fees involved to enforce the patent.\nThus, small improvements to PoW mining are expected to eventually spread widely, and that is what the difficulty adjustment mechanism exists to modulate.\n\nBut suppose a third manufacturer develops an ASICBOOST-level optimization of whatever the PoW mining algorithm is.\nThat manufacturer has no incentive to cross-license, since it can dominate the competition without cross-licensing a bunch of smaller optimizations (that may not even add up to compete against the ASICBOOST-level optimization).\nAnd any small competitor that violates patent will be enforced against, due to the major improvement that the large optimization has and the massive monopolistic advantage the ASICBOOST-level optimization patent holder would have.\n\n\nSHA256d-on-Bitcoin-block-header has already uncovered ASICBOOST, and thus the number of possible other large optimizations is that much smaller --- the number of possible optimizations is bounded by physical constraints.\nThus, the risk of a black-swan event where a new optimization of SHA256d-on-Bitcoin-block-header is large enough to massively centralize mining is reduced, compared to every other alternative PoW algorithm, which is an important reason to avoid changing PoW as much as possible, without some really serious study (which you might be engaged in --- I am not enough of a mathist to follow your papers).\n\nWe are more likely to want to change SHA256 for SHA3 on the txid and Merkle trees than on the PoW.\n\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "mike at powx.org",
                "date": "2021-05-18T10:59:46",
                "message_text_only": "Devrandom is correct to point out that there is nuance to these things and it\u2019s better to look at the details rather than proclaiming that PoW is PoW. (I do agree though w the original point that other ideas often turn out to reduce to PoW despite their convoluted architecture)\n\nA note on the key difference between hardware and energy as it relates to centralization:\n\nHardware is easily transferable. If you have low electricity costs, Bitcoin ASICS need to be physically located in proximity to use it. You can\u2019t sell your low power costs on an open liquid market (you can sell your hash rate but that still requires all the miners next to the power plant). Hardware can be sold online freely to anyone anywhere in the world.\n\nIf a small number of foundries are producing low energy opow hardware (just as there are a small number producing SHA256 ASICS- in fact it would be the same set foundries, somewhat expanded because optical chips use larger, older nodes... for example Global Foundries has a great photonics process at 90nm), they can (and will) still sell the hardware to people all over the world. \n\nThere is a huge latent demand for BTC mining. Many people currently buying alt coins or even BTC would prefer to invest in mining if they could turn a profit despite their high energy cost.\n\nAnother clear benefit would be the difficulty of detecting and controlling low energy mining relative to the ASIC-warehouse-next-to-waterfall model used today. You can\u2019t move a waterfall if the local government decides to regulate you.\n\nJust some thoughts. \n\n\n\nSent from my iPhone\n\n> On May 18, 2021, at 5:18 AM, Devrandom <c1.bitcoin at niftybox.net> wrote:\n> \n> \ufeff\n> On Mon, May 17, 2021 at 11:47 PM ZmnSCPxj:\n>> \n>> When considering any new proof-of-foo, it is best to consider all effects until you reach the base physics of the arrow of time, at which point you will realize it is ultimately just another proof-of-work anyway.\n> \n> Let's not simplify away economic considerations, such as externalities.  The whole debate about the current PoW is about negative externalities related to energy production.\n> \n> Depending on the details, CAPEX (R&D, real-estate, construction, production) may have less externalities, and if that's the case, we should be interested in adopting a PoW that is intensive in these types of CAPEX.\n> \n> On Mon, May 17, 2021 at 2:20 PM Keagan McClelland wrote:\n> \n>> First it just pushes the energy consumption upstream to the chip manufacturing process, rather than eliminating it. And it may trade some marginal amount of the energy consumption for the set of resources it takes to educate and create chip manufacturers. The only way to avoid that cost being funneled back into more energy consumption [...]\n> \n> I challenge you to substantiate these assertions.  Real-estate and human cognitive work are not energy intensive and are a major factor in the expected costs of some alternative PoWs.  The expected mining effort is such that the cost will reach the expected reward, no more, so there is every reason to believe that energy consumption will be small compared to the current PoW.\n> \n> Therefore, the total associated negative externalities for the alternative PoWs may well be much lower than the externalities of energy production.  This needs detailed analysis, not a knee-jerk reaction.\n> \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/35df2a71/attachment-0001.html>"
            },
            {
                "author": "Claus Ehrenberg",
                "date": "2021-05-18T12:46:39",
                "message_text_only": "> Ultimately all currency security derives from energy consumption.\n> Everything eventually resolves down to proof-of-work.\nThis is ideology. Yes, without energy and work, not many things happen. But\nthe amounts of energy and work to achieve a goal vary widely. Detailed\nanalysis comparing one alternative with the other in depth  is required.\nAnd I would not look for order-of-magnitude improvements, 25% better is\nalso a big deal, if discovered.\n\n> * Proof-of-space simply moves the work to the construction of more\nstorage devices.\nOne needs a cost/benefit analysis, not just an account of the cost. For\nexample, if PoW could do calculations that are otherwise useful (maybe\nsolve a queue of standardized math-jobs, such as climate simulations) there\nwould be more benefit, or, let's say the data storage in proof-of-space is\nuseful.\n\n> * Proof-of-stake simply moves the work to stake-grinding attacks.\nSimply not true, there are PoS implementations that are immune to\nstake-grinding attacks, and even where not, the possible amount of\ncomputations is limited compared to PoW\n\n> * The optical proof-of-work simply moves the work to the construction of\nmore miners.\nThe idea was to shift from energy to cap-ex. We can get a financial penalty\nfor misbehavior from three sources:\n- cost of energy/labor (PoW)\n- cost of capital (PoS)\n- cost of cap-ex\nThere might be a better mix than PoW only. I have written code for mixed\nPoW/PoS systems and it works. Adding more cap-ex to the mix can make sense,\nbut the environmental impact needs to be analyzed, it could also make it\nworse than just the use of electricity. At least electricity as such does\nnot leave waste behind. Mining in orbit with solar power would be totally\nacceptable.\n\n> At least, proof-of-work is honest about its consumption of resources.\nAgreed, but we can't be satisfied with that. If we try hard enough we can\ndo better.\n\nCheers\nClaus\n\nOn Tue, May 18, 2021 at 8:47 AM ZmnSCPxj via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n>\n> > A few things jump out at me as I read this proposal\n> >\n> > First, deriving the hardness from capex as opposed to opex switches the\n> privilege from those who have cheap electricity to those who have access to\n> chip manufacturers/foundries. While this is similarly the case for Bitcoin\n> ASICS today, the longevity of the PoW algorithm has led to a better\n> distribution of knowledge and capital goods required to create ASICS. The\n> creation of a new PoW of any kind, hurts this dimension of decentralization\n> as we would have to start over from scratch on the best way to build,\n> distribute, and operate these new pieces of hardware at scale. While I have\n> not combed over the PoW proposed here in fine detail, the more complicated\n> the algorithm is, the more it privileges those with specific knowledge\n> about it and the manufacturing process.\n> >\n> > The competitive nature of Bitcoin mining is such that miners will be\n> willing to spend up to their expected mining reward in their operating\n> costs to continue to mine. Let's suppose that this new PoW was adopted,\n> miners will continue to buy these chips in ever increasing quantities,\n> turning the aforementioned CAPEX into a de facto OPEX. This has a few\n> consequences. First it just pushes the energy consumption upstream to the\n> chip manufacturing process, rather than eliminating it. And it may trade\n> some marginal amount of the energy consumption for the set of resources it\n> takes to educate and create chip manufacturers. The only way to avoid that\n> cost being funneled back into more energy consumption is to make the\n> barrier to understanding of the manufacturing process sufficiently\n> difficult so as to limit the proliferation of these chips. Again, this\n> privileges the chip manufacturers as well as those with close access to the\n> chip manufacturers.\n> >\n> > As far as I can tell, the only thing this proposal actually does is\n> create a very lucrative business model for those who sell this variety of\n> chips. Any other effects of it are transient, and in all likelihood the\n> transient effects create serious centralization pressure.\n> >\n> > At the end of the day, the energy consumption is foundational to the\n> system. The only way to do away with authorities, is to require\n> competition. This competition will employ ever more resources until it is\n> unprofitable to do so. At the base of all resources of society is energy.\n> You get high energy expenditure, or a privileged class of bitcoin\n> administrators: pick one. I suspect you'll find the vast majority of\n> Bitcoin users to be in the camp of the energy expenditure, since if we pick\n> the latter, we might as well just pack it in and give up on the Bitcoin\n> experiment.\n>\n>\n> Keagan is quite correct.\n> Ultimately all currency security derives from energy consumption.\n> Everything eventually resolves down to proof-of-work.\n>\n> * Proof-of-space simply moves the work to the construction of more storage\n> devices.\n> * Proof-of-stake simply moves the work to stake-grinding attacks.\n> * The optical proof-of-work simply moves the work to the construction of\n> more miners.\n> * Even government-enforced fiat is ultimately proof-of-work, as the\n> operation and continued existence of any government is work.\n>\n> It is far better to move towards a more *direct* proof-of-work, than to\n> add more complexity and come up with something that is just proof-of-work,\n> but with the work moved off to somewhere else and with additional moving\n> parts that can be jammed or hacked into.\n>\n> When considering any new proof-of-foo, it is best to consider all effects\n> until you reach the base physics of the arrow of time, at which point you\n> will realize it is ultimately just another proof-of-work anyway.\n>\n> At least, proof-of-work is honest about its consumption of resources.\n>\n>\n> Regards,\n> ZmnSCPxj\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/623830ce/attachment-0001.html>"
            },
            {
                "author": "Keagan McClelland",
                "date": "2021-05-18T16:47:29",
                "message_text_only": ">One needs a cost/benefit analysis, not just an account of the cost. For\nexample, if PoW could do calculations that are otherwise useful (maybe\nsolve a queue of standardized math-jobs, such as climate simulations) there\nwould be more benefit, or, let's say the data storage in proof-of-space is\nuseful.\n\nAny discussion on whether Proof of Work is suitable for the task needs to\nrecognize that the \"waste\" is what creates the security. If you manage to\nmake the proof of work useful for tasks external to the protocol, you\nreintroduce the \"nothing at stake\" problem in a roundabout way. Useful\ncomputation is something people will pay for. If they pay for it, miners\ncan be compensated in such a way that choosing to mine one of the\nNot-The-Heaviest-Chain's becomes costless. This erodes the security of the\nnetwork substantially. It is not a matter of coming up with the \"right\"\nkind of useful computation that is not subject to these problems. These\nproblems are a natural consequence of it being useful outside the protocol\n*at all*.\n\nKeagan\n\nOn Tue, May 18, 2021 at 8:24 AM Claus Ehrenberg via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> > Ultimately all currency security derives from energy consumption.\n> > Everything eventually resolves down to proof-of-work.\n> This is ideology. Yes, without energy and work, not many things happen.\n> But the amounts of energy and work to achieve a goal vary widely. Detailed\n> analysis comparing one alternative with the other in depth  is required.\n> And I would not look for order-of-magnitude improvements, 25% better is\n> also a big deal, if discovered.\n>\n> > * Proof-of-space simply moves the work to the construction of more\n> storage devices.\n> One needs a cost/benefit analysis, not just an account of the cost. For\n> example, if PoW could do calculations that are otherwise useful (maybe\n> solve a queue of standardized math-jobs, such as climate simulations) there\n> would be more benefit, or, let's say the data storage in proof-of-space is\n> useful.\n>\n> > * Proof-of-stake simply moves the work to stake-grinding attacks.\n> Simply not true, there are PoS implementations that are immune to\n> stake-grinding attacks, and even where not, the possible amount of\n> computations is limited compared to PoW\n>\n> > * The optical proof-of-work simply moves the work to the construction of\n> more miners.\n> The idea was to shift from energy to cap-ex. We can get a\n> financial penalty for misbehavior from three sources:\n> - cost of energy/labor (PoW)\n> - cost of capital (PoS)\n> - cost of cap-ex\n> There might be a better mix than PoW only. I have written code for mixed\n> PoW/PoS systems and it works. Adding more cap-ex to the mix can make sense,\n> but the environmental impact needs to be analyzed, it could also make it\n> worse than just the use of electricity. At least electricity as such does\n> not leave waste behind. Mining in orbit with solar power would be totally\n> acceptable.\n>\n> > At least, proof-of-work is honest about its consumption of resources.\n> Agreed, but we can't be satisfied with that. If we try hard enough we can\n> do better.\n>\n> Cheers\n> Claus\n>\n> On Tue, May 18, 2021 at 8:47 AM ZmnSCPxj via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>>\n>> > A few things jump out at me as I read this proposal\n>> >\n>> > First, deriving the hardness from capex as opposed to opex switches the\n>> privilege from those who have cheap electricity to those who have access to\n>> chip manufacturers/foundries. While this is similarly the case for Bitcoin\n>> ASICS today, the longevity of the PoW algorithm has led to a better\n>> distribution of knowledge and capital goods required to create ASICS. The\n>> creation of a new PoW of any kind, hurts this dimension of decentralization\n>> as we would have to start over from scratch on the best way to build,\n>> distribute, and operate these new pieces of hardware at scale. While I have\n>> not combed over the PoW proposed here in fine detail, the more complicated\n>> the algorithm is, the more it privileges those with specific knowledge\n>> about it and the manufacturing process.\n>> >\n>> > The competitive nature of Bitcoin mining is such that miners will be\n>> willing to spend up to their expected mining reward in their operating\n>> costs to continue to mine. Let's suppose that this new PoW was adopted,\n>> miners will continue to buy these chips in ever increasing quantities,\n>> turning the aforementioned CAPEX into a de facto OPEX. This has a few\n>> consequences. First it just pushes the energy consumption upstream to the\n>> chip manufacturing process, rather than eliminating it. And it may trade\n>> some marginal amount of the energy consumption for the set of resources it\n>> takes to educate and create chip manufacturers. The only way to avoid that\n>> cost being funneled back into more energy consumption is to make the\n>> barrier to understanding of the manufacturing process sufficiently\n>> difficult so as to limit the proliferation of these chips. Again, this\n>> privileges the chip manufacturers as well as those with close access to the\n>> chip manufacturers.\n>> >\n>> > As far as I can tell, the only thing this proposal actually does is\n>> create a very lucrative business model for those who sell this variety of\n>> chips. Any other effects of it are transient, and in all likelihood the\n>> transient effects create serious centralization pressure.\n>> >\n>> > At the end of the day, the energy consumption is foundational to the\n>> system. The only way to do away with authorities, is to require\n>> competition. This competition will employ ever more resources until it is\n>> unprofitable to do so. At the base of all resources of society is energy.\n>> You get high energy expenditure, or a privileged class of bitcoin\n>> administrators: pick one. I suspect you'll find the vast majority of\n>> Bitcoin users to be in the camp of the energy expenditure, since if we pick\n>> the latter, we might as well just pack it in and give up on the Bitcoin\n>> experiment.\n>>\n>>\n>> Keagan is quite correct.\n>> Ultimately all currency security derives from energy consumption.\n>> Everything eventually resolves down to proof-of-work.\n>>\n>> * Proof-of-space simply moves the work to the construction of more\n>> storage devices.\n>> * Proof-of-stake simply moves the work to stake-grinding attacks.\n>> * The optical proof-of-work simply moves the work to the construction of\n>> more miners.\n>> * Even government-enforced fiat is ultimately proof-of-work, as the\n>> operation and continued existence of any government is work.\n>>\n>> It is far better to move towards a more *direct* proof-of-work, than to\n>> add more complexity and come up with something that is just proof-of-work,\n>> but with the work moved off to somewhere else and with additional moving\n>> parts that can be jammed or hacked into.\n>>\n>> When considering any new proof-of-foo, it is best to consider all effects\n>> until you reach the base physics of the arrow of time, at which point you\n>> will realize it is ultimately just another proof-of-work anyway.\n>>\n>> At least, proof-of-work is honest about its consumption of resources.\n>>\n>>\n>> Regards,\n>> ZmnSCPxj\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210518/8db39423/attachment-0001.html>"
            }
        ],
        "thread_summary": {
            "title": "Proposal: Low Energy Bitcoin PoW",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Claus Ehrenberg",
                "Keagan McClelland",
                "mike at powx.org",
                "ZmnSCPxj",
                "Devrandom",
                "Bogdan Penkovsky"
            ],
            "messages_count": 15,
            "total_messages_chars_count": 87843
        }
    },
    {
        "title": "[bitcoin-dev] Additional BIPs related to other proposals",
        "thread_messages": [
            {
                "author": "Billy Tetrud",
                "date": "2021-05-21T07:56:51",
                "message_text_only": "These look like relatively well put together documents. However, they seem\nrelatively orthogonal to Bitcoin in that they look like protocols that\nbuild on top of the bitcoin platform but aren't directly related to\nchanging how bitcoin operates at its base layer. Am I miss reading these?\n\nOn Sat, Apr 24, 2021 at 12:08 AM Christopher Gilliard via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> I have created three additional BIPs that are associated with my recent\n> proposals. They can be found here:\n>\n> https://github.com/cgilliard/bips/blob/notification/bip-XXXX.mediawiki\n>\n> and here:\n>\n> https://github.com/cgilliard/bips/blob/moderation/bip-XXXX.mediawiki\n>\n> and here:\n>\n> https://github.com/cgilliard/bips/blob/wot/bip-XXXX.mediawiki\n>\n> Please reply with any feedback, questions, or comments.\n>\n> Regards,\n> Chris\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210520/27db7d91/attachment-0001.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2021-05-22T02:33:45",
                "message_text_only": "On Friday 21 May 2021 07:56:51 Billy Tetrud via bitcoin-dev wrote:\n> These look like relatively well put together documents. However, they seem\n> relatively orthogonal to Bitcoin in that they look like protocols that\n> build on top of the bitcoin platform but aren't directly related to\n> changing how bitcoin operates at its base layer. Am I miss reading these?\n\nBIPs are not limited to the base layer. Anything that coordinates between \nBitcoin software at any layer can use BIPs."
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-22T06:01:19",
                "message_text_only": "Fair enough!\n\nOn Fri, May 21, 2021 at 4:33 PM Luke Dashjr <luke at dashjr.org> wrote:\n\n> On Friday 21 May 2021 07:56:51 Billy Tetrud via bitcoin-dev wrote:\n> > These look like relatively well put together documents. However, they\n> seem\n> > relatively orthogonal to Bitcoin in that they look like protocols that\n> > build on top of the bitcoin platform but aren't directly related to\n> > changing how bitcoin operates at its base layer. Am I miss reading these?\n>\n> BIPs are not limited to the base layer. Anything that coordinates between\n> Bitcoin software at any layer can use BIPs.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210521/6f4905ec/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Additional BIPs related to other proposals",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Luke Dashjr",
                "Billy Tetrud"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 2471
        }
    },
    {
        "title": "[bitcoin-dev] Gradual transition to an alternate proof without a hard fork.",
        "thread_messages": [
            {
                "author": "Billy Tetrud",
                "date": "2021-05-21T20:11:27",
                "message_text_only": "The way I would think of doing this kind of thing (switching consensus\nprotocol), which includes switching to a different hash function for proof\nof work, is to have a transitionary period where both consensus mechanisms\nare used to mine. This transitionary period should be long (perhaps years)\nto give miners time to manage the logistics of switching over. However,\nbecause there would be no trustless mechanism to automatically relate the\namount of work (or burn, or whatever) done between the two consensus\nmechanisms, there would need to be some manually determined estimate of\nequivalence hard coded into the software. Eg, if we're talking about a\ndifferent hash function, we could define in software that 100 current\nhashes is about equal to 10 hashes using the new algorithm. This could even\nbe set such that its marginally (but significantly) favorable to use the\nnew hash function, to give additional incentive to miners to switch. The\nrisk with that is that hardware that processes that new hash function might\ninnovate arbitrarily more quickly than the old hash function (which is\nlikely to have somewhat plateaued), and this might make the manually\nestimated equivalence become inaccurate in a way that could significantly\nreduce the security of the network. a change like this could be fraught\nwith perils if the miners using each mechanism don't end up cooperating to\nensure that equivalence is set fairly, and instead make efforts to attempt\nto unfairly increase their share.\n\nIn any case, the idea is that you'd have a smooth switch over from (blocks\nthe old mechanism creates / blocks the new mechanism creates) 100%/0% ->\n75%/25% -> 50/50 -> eventually 0%/100%. Or at some fraction of total\nhashpower, (eg 95%) the old consensus mechanism could simply be shut off -\nwhich would give additional incentive for miners to switch sooner rather\nthan later. However, it would probably be best to make this cut off more\nlike 99% than 95%, since screwing over 5% of the hashpower for a few months\nis probably not necessary or ideal. It might actually just be better to\nhave a time-based cutoff. Or have the final switch over lock in at 95% with\na few months to give the other 5% time to switch over (and if they don't\nthen its on them).\n\nI would think this could work for switch between any consensus mechanism.\nHowever, how to do this in a soft fork is another story. It sounds like its\ndoable from other people's comments.\n\nOn Sat, Apr 17, 2021 at 1:47 AM Anthony Towns via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> On Fri, Apr 16, 2021 at 04:48:35PM -0400, Erik Aronesty via bitcoin-dev\n> wrote:\n> > The transition *could* look like this:\n> >  - validating nodes begin to require proof-of-burn, in addition to\n> > proof-of-work (soft fork)\n> >  - the extra expense makes it more expensive for miners, so POW slowly\n> drops\n> >  - on a predefined schedule, POB required is increased to 100% of the\n> > \"required work\" to mine\n> > Given all of that, am I correct in thinking that a hard fork would not\n> > be necessary?\n>\n> It depends what you mean by a \"hard fork\". By the definition that\n> \"the old software will consider the chain followed by new versions of\n> the software as valid\" it's a soft fork. But it doesn't maintain the\n> property \"old software continues to follow the same chain as new software,\n> provided the economic majority has adopted the new software\" -- because\n> after the PoW part has dropped its difficulty substantitally, people can\n> easily/cheaply make a new chain that doesn't include proof-of-burn, and\n> has weak proof-of-work that's nevertheless higher than the proof-of-burn\n> chain, so old nodes will switch to it, while new nodes will continue to\n> follow the proof-of-burn chain.\n>\n> So I think that means it needs to be treated as a hard fork: everyone\n> needs to be running the new software by some date to ensure they follow\n> the same chain.\n>\n> (The same argument applies to trying to switch to a different PoW\n> algorithm via a soft fork; I forget who explained this to me)\n>\n> Jeremy wrote:\n> > I think you need to hard deprecate the PoW for this to work, otherwise\n> > all old miners are like \"toxic waste\".\n> >\n> > Imagine one miner turns on a S9 and then ramps up difficulty for\n> > everyone else.\n>\n> If it's a soft-fork, you could only ramp up the PoW difficulty by mining\n> more than one block every ten minutes, but presumably the proof-of-burn\n> scheme would have its own way of preventing burners from mining blocks\n> too fast (it was assumption 2).\n>\n> Cheers,\n> aj\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210521/cc6d27d6/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-21T20:54:57",
                "message_text_only": "the original argument was correct: has to be a hard fork.\n\notherwise there's nothing to prevent a miner with leftover asics from\n\"tricking\" old nodes to following another chain.\n\na hard fork is a really, really high bar - there would have to be\nsomething very broken to justify it.\n\nquantum-hashing or whatever (proof-of burn of course is as\nquantum-safe as the underlying chain is... so it's nice to switch to,\nshould it be necessary)\n\nOn Fri, May 21, 2021 at 4:11 PM Billy Tetrud <billy.tetrud at gmail.com> wrote:\n>\n> The way I would think of doing this kind of thing (switching consensus protocol), which includes switching to a different hash function for proof of work, is to have a transitionary period where both consensus mechanisms are used to mine. This transitionary period should be long (perhaps years) to give miners time to manage the logistics of switching over. However, because there would be no trustless mechanism to automatically relate the amount of work (or burn, or whatever) done between the two consensus mechanisms, there would need to be some manually determined estimate of equivalence hard coded into the software. Eg, if we're talking about a different hash function, we could define in software that 100 current hashes is about equal to 10 hashes using the new algorithm. This could even be set such that its marginally (but significantly) favorable to use the new hash function, to give additional incentive to miners to switch. The risk with that is that hardware that processes that new hash function might innovate arbitrarily more quickly than the old hash function (which is likely to have somewhat plateaued), and this might make the manually estimated equivalence become inaccurate in a way that could significantly reduce the security of the network. a change like this could be fraught with perils if the miners using each mechanism don't end up cooperating to ensure that equivalence is set fairly, and instead make efforts to attempt to unfairly increase their share.\n>\n> In any case, the idea is that you'd have a smooth switch over from (blocks the old mechanism creates / blocks the new mechanism creates) 100%/0% -> 75%/25% -> 50/50 -> eventually 0%/100%. Or at some fraction of total hashpower, (eg 95%) the old consensus mechanism could simply be shut off - which would give additional incentive for miners to switch sooner rather than later. However, it would probably be best to make this cut off more like 99% than 95%, since screwing over 5% of the hashpower for a few months is probably not necessary or ideal. It might actually just be better to have a time-based cutoff. Or have the final switch over lock in at 95% with a few months to give the other 5% time to switch over (and if they don't then its on them).\n>\n> I would think this could work for switch between any consensus mechanism. However, how to do this in a soft fork is another story. It sounds like its doable from other people's comments.\n>\n> On Sat, Apr 17, 2021 at 1:47 AM Anthony Towns via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>> On Fri, Apr 16, 2021 at 04:48:35PM -0400, Erik Aronesty via bitcoin-dev wrote:\n>> > The transition *could* look like this:\n>> >  - validating nodes begin to require proof-of-burn, in addition to\n>> > proof-of-work (soft fork)\n>> >  - the extra expense makes it more expensive for miners, so POW slowly drops\n>> >  - on a predefined schedule, POB required is increased to 100% of the\n>> > \"required work\" to mine\n>> > Given all of that, am I correct in thinking that a hard fork would not\n>> > be necessary?\n>>\n>> It depends what you mean by a \"hard fork\". By the definition that\n>> \"the old software will consider the chain followed by new versions of\n>> the software as valid\" it's a soft fork. But it doesn't maintain the\n>> property \"old software continues to follow the same chain as new software,\n>> provided the economic majority has adopted the new software\" -- because\n>> after the PoW part has dropped its difficulty substantitally, people can\n>> easily/cheaply make a new chain that doesn't include proof-of-burn, and\n>> has weak proof-of-work that's nevertheless higher than the proof-of-burn\n>> chain, so old nodes will switch to it, while new nodes will continue to\n>> follow the proof-of-burn chain.\n>>\n>> So I think that means it needs to be treated as a hard fork: everyone\n>> needs to be running the new software by some date to ensure they follow\n>> the same chain.\n>>\n>> (The same argument applies to trying to switch to a different PoW\n>> algorithm via a soft fork; I forget who explained this to me)\n>>\n>> Jeremy wrote:\n>> > I think you need to hard deprecate the PoW for this to work, otherwise\n>> > all old miners are like \"toxic waste\".\n>> >\n>> > Imagine one miner turns on a S9 and then ramps up difficulty for\n>> > everyone else.\n>>\n>> If it's a soft-fork, you could only ramp up the PoW difficulty by mining\n>> more than one block every ten minutes, but presumably the proof-of-burn\n>> scheme would have its own way of preventing burners from mining blocks\n>> too fast (it was assumption 2).\n>>\n>> Cheers,\n>> aj\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            }
        ],
        "thread_summary": {
            "title": "Gradual transition to an alternate proof without a hard fork.",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Billy Tetrud",
                "Erik Aronesty"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 10244
        }
    },
    {
        "title": "[bitcoin-dev] Consensus protocol immutability is a feature",
        "thread_messages": [
            {
                "author": "Raystonn .",
                "date": "2021-05-21T22:41:30",
                "message_text_only": "Suggestions to make changes to Bitcoin's consensus protocol will only ever be entertained if Bitcoin is completely dead without such a change.  Any attempt to change consensus protocol without a clear and convincing demonstration to the entire network of participants that Bitcoin will die without that change is a waste of your own time.  Bitcoin's resistance to consensus changes is a feature that makes it resistant to being coopted and corrupted.  I recommend developers focus on making improvements that do not attempt to change the consensus protocol.  Otherwise, you are simply working on an altcoin, which is off-topic here.\n\nRaystonn\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210521/c4f8d8b0/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2021-05-22T14:55:25",
                "message_text_only": "That is clearly not true. People entretain making changes to the protocol\nall the time. Bitcoin is far from perfect and not improving it would be\nstupid in my opinion.\nSome improvements require changes to the consensus rules.\nRecent changes include relative lock time verify or segwit. These are\nimportant changes that made things like lightning much easier and efficient\nthan they could possibly be without them.\nTaproot, which is a recent proposal, could help simplify the lightning\nprotocol even further, and make it more efficient and its usage more\nprivate. And there are more use cases.\n\nThere have been consensus rule changes since bitcoin started, and with good\nreason. As a user, you can always oppose new changes. And if enough users\nagree with you, you will be able to maintain your own chain with the old\nrules. At the same time, there's nothing you can do to stop other users who\nwant those changes from coordinating with each other to adopt them.\n\nPerhaps you're interested in bip99, which discusses consensus rule changes\nin more detail.\n\n\n\nOn Sat, May 22, 2021, 13:09 Raystonn . via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Suggestions to make changes to Bitcoin's consensus protocol will only ever\n> be entertained if Bitcoin is completely dead without such a change.  Any\n> attempt to change consensus protocol without a clear and convincing\n> demonstration to the entire network of participants that Bitcoin will die\n> without that change is a waste of your own time.  Bitcoin's resistance to\n> consensus changes is a feature that makes it resistant to being coopted and\n> corrupted.  I recommend developers focus on making improvements that do not\n> attempt to change the consensus protocol.  Otherwise, you are simply\n> working on an altcoin, which is off-topic here.\n>\n> Raystonn\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210522/a08c6bcf/attachment.html>"
            },
            {
                "author": "Raystonn .",
                "date": "2021-05-22T19:55:53",
                "message_text_only": "None of these required a hard fork.  I should rephrase my previous email to clarify the intended topic as hard consensus changes, requiring a hard fork.  \"Soft\" forks can be useful.\n\nRaystonn\n\n________________________________\nFrom: Jorge Tim\u00f3n <jtimon at jtimon.cc>\nSent: Saturday, May 22, 2021 7:55 AM\nTo: Raystonn . <raystonn at hotmail.com>; Bitcoin Protocol Discussion <bitcoin-dev at lists.linuxfoundation.org>\nSubject: Re: [bitcoin-dev] Consensus protocol immutability is a feature\n\nThat is clearly not true. People entretain making changes to the protocol all the time. Bitcoin is far from perfect and not improving it would be stupid in my opinion.\nSome improvements require changes to the consensus rules.\nRecent changes include relative lock time verify or segwit. These are important changes that made things like lightning much easier and efficient than they could possibly be without them.\nTaproot, which is a recent proposal, could help simplify the lightning protocol even further, and make it more efficient and its usage more private. And there are more use cases.\n\nThere have been consensus rule changes since bitcoin started, and with good reason. As a user, you can always oppose new changes. And if enough users agree with you, you will be able to maintain your own chain with the old rules. At the same time, there's nothing you can do to stop other users who want those changes from coordinating with each other to adopt them.\n\nPerhaps you're interested in bip99, which discusses consensus rule changes in more detail.\n\n\n\nOn Sat, May 22, 2021, 13:09 Raystonn . via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:\nSuggestions to make changes to Bitcoin's consensus protocol will only ever be entertained if Bitcoin is completely dead without such a change.  Any attempt to change consensus protocol without a clear and convincing demonstration to the entire network of participants that Bitcoin will die without that change is a waste of your own time.  Bitcoin's resistance to consensus changes is a feature that makes it resistant to being coopted and corrupted.  I recommend developers focus on making improvements that do not attempt to change the consensus protocol.  Otherwise, you are simply working on an altcoin, which is off-topic here.\n\nRaystonn\n\n_______________________________________________\nbitcoin-dev mailing list\nbitcoin-dev at lists.linuxfoundation.org<mailto:bitcoin-dev at lists.linuxfoundation.org>\nhttps://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210522/2047b810/attachment-0001.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2021-05-22T20:35:03",
                "message_text_only": "Hardforks can be useful too.\nBut, yes, I agree softforks are preferable whenever possible.\n\nOn Sat, May 22, 2021, 20:55 Raystonn . <raystonn at hotmail.com> wrote:\n\n> None of these required a hard fork.  I should rephrase my previous email\n> to clarify the intended topic as hard consensus changes, requiring a hard\n> fork.  \"Soft\" forks can be useful.\n>\n> Raystonn\n>\n> ------------------------------\n> *From:* Jorge Tim\u00f3n <jtimon at jtimon.cc>\n> *Sent:* Saturday, May 22, 2021 7:55 AM\n> *To:* Raystonn . <raystonn at hotmail.com>; Bitcoin Protocol Discussion <\n> bitcoin-dev at lists.linuxfoundation.org>\n> *Subject:* Re: [bitcoin-dev] Consensus protocol immutability is a feature\n>\n> That is clearly not true. People entretain making changes to the protocol\n> all the time. Bitcoin is far from perfect and not improving it would be\n> stupid in my opinion.\n> Some improvements require changes to the consensus rules.\n> Recent changes include relative lock time verify or segwit. These are\n> important changes that made things like lightning much easier and efficient\n> than they could possibly be without them.\n> Taproot, which is a recent proposal, could help simplify the lightning\n> protocol even further, and make it more efficient and its usage more\n> private. And there are more use cases.\n>\n> There have been consensus rule changes since bitcoin started, and with\n> good reason. As a user, you can always oppose new changes. And if enough\n> users agree with you, you will be able to maintain your own chain with the\n> old rules. At the same time, there's nothing you can do to stop other users\n> who want those changes from coordinating with each other to adopt them.\n>\n> Perhaps you're interested in bip99, which discusses consensus rule changes\n> in more detail.\n>\n>\n>\n> On Sat, May 22, 2021, 13:09 Raystonn . via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n> Suggestions to make changes to Bitcoin's consensus protocol will only ever\n> be entertained if Bitcoin is completely dead without such a change.  Any\n> attempt to change consensus protocol without a clear and convincing\n> demonstration to the entire network of participants that Bitcoin will die\n> without that change is a waste of your own time.  Bitcoin's resistance to\n> consensus changes is a feature that makes it resistant to being coopted and\n> corrupted.  I recommend developers focus on making improvements that do not\n> attempt to change the consensus protocol.  Otherwise, you are simply\n> working on an altcoin, which is off-topic here.\n>\n> Raystonn\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210522/1aad77a4/attachment.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-23T11:01:32",
                "message_text_only": "Good morning Jorge, et al,\n\n> Hardforks can be useful too.\n> But, yes, I agree softforks are preferable whenever possible.\n\nI think in principle the space of possible softforks is very much wider than can be trivially expected.\n\nFor instance, maaku7 once proposed a softfork that could potentially change the block discovery rate as a softfork.\nAlthough this required exploiting a consensus bug that has since been closed.\n\nThe example of SegWit shows us that we can in fact create massive changes to the transaction and block formats with a softfork.\n\nFor example, it is possible to change the Merkle Tree to use SHA3 instead, in a softfork, by requiring that miners no longer use the \"normal\" existing Merkle Tree, but instead to require miners to embed a commitment to the SHA3-Merkle-Tree on the coinbase of the \"original\" block format, and to build \"empty\" SHA2-Merkle-Trees containing only the coinbase.\nTo unupgraded nodes it looks as if there is a denial-of-service attack permanently, while upgraded nodes will seek blocks that conform to the SHA3-Merkle-Tree embedded in the coinbase.\n\n(Do note that this definition of \"softfork\" is the \"> 50% of miners is enough to pull everyone to the fork\".\nSome thinkers have a stricter definition of \"softfork\" as \"non-upgraded nodes can still associate addresses to values in the UTXO set but might not be able to detect consensus rules violations in new address types\", which fits SegWit and Taproot.)\n\n(In addition, presumably the reason to switch to SHA3 is to avoid potential preimage attacks on SHA2, and the coinbase is still in a SHA2-Merkle-Tree, so... this is a bad example)\n\nPerhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\nBut the flexibility of the coinbase allows us to hook new commitments to new Merkle Trees to it, which allows transactions to be annotated with additional information that is invisible to unupgraded nodes (similar to the `witness` field of SegWit transactions).\n\n\n------------\n\n\nEven if you *do* have a softfork, we should be reminded to look at the histories of SegWit and Taproot.\n\nSegWit became controversial later on, which delayed its activation.\n\nOn the other hand, Taproot had no significant controversy and it was widely accepted as being a definite improvement to the network.\nYet its implementation and deployment still took a long time, and there was still controversy on how to properly implement the activation code.\n\nAny hardforks would not only have to go through the hurdles that Taproot and SegWit had to go through, but will *also* have to pass through the much higher hurdle of being a hardfork.\n\nThus, anyone contemplating a hardfork, for any reason, must be prepared to work on it for several **years** before anyone even frowns and says \"hmm maybe\" instead of everyone just outright dismissing it with a simple \"hardfork = hard pass\".\nAs a simple estimate, I would assume that any hardfork would require twice the average amount of engeineering-manpower involved in SegWit and Taproot.\n(this assumes that hardforks are only twice as hard as softforks --- this estimate may be wrong, and this might provide only a minimum rather than an expected average)\n\nThere are no quick solutions in this space.\nEither we work with what we have and figure out how to get around issues with no real capability to fix them at the base layer, or we have insight on future problems and start working on future solutions today.\nFor example, I know at least one individual was maintaining an \"emergency\" branch to add some kind of post-quantum signature scheme to Bitcoin, in case of a quantum break.\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "vjudeu",
                "date": "2021-05-23T16:27:47",
                "message_text_only": "> Perhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\n\nWhy not? I can imagine a soft fork where the block header would contain SHA-256 and SHA-3 hashes in the same place. The SHA-256 would be calculated as-is, but the SHA-3 would be truncated only to cover zero bits in SHA-256 hashes. In this way, if SHA-256 would be totally broken, old nodes would see zero hashes in the previous block hash and the merkle tree hash, but the new nodes would see correct SHA-3 hashes in the same place. So, for example if we have 1d00ffff difficulty, the first 32-bits would be zeroes for all old nodes, but all new nodes would see SHA-3 truncated to 32-bits in the same place. The difficulty could tell us how many zero bits we should truncate our SHA-3 result to. Also, in the same way we could introduce SHA-4 in the future as a soft-fork if SHA-3 would be broken and we would see many zero bits in our mixed SHA-256 plus SHA-3 consensus.\n\nOn 2021-05-23 13:01:32 user ZmnSCPxj via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:\n> Good morning Jorge, et al,\n> \n> > Hardforks can be useful too.\n> > But, yes, I agree softforks are preferable whenever possible.\n> \n> I think in principle the space of possible softforks is very much wider than can be trivially expected.\n> \n> For instance, maaku7 once proposed a softfork that could potentially change the block discovery rate as a softfork.\n> Although this required exploiting a consensus bug that has since been closed.\n> \n> The example of SegWit shows us that we can in fact create massive changes to the transaction and block formats with a softfork.\n> \n> For example, it is possible to change the Merkle Tree to use SHA3 instead, in a softfork, by requiring that miners no longer use the \"normal\" existing Merkle Tree, but instead to require miners to embed a commitment to the SHA3-Merkle-Tree on the coinbase of the \"original\" block format, and to build \"empty\" SHA2-Merkle-Trees containing only the coinbase.\n> To unupgraded nodes it looks as if there is a denial-of-service attack permanently, while upgraded nodes will seek blocks that conform to the SHA3-Merkle-Tree embedded in the coinbase.\n> \n> (Do note that this definition of \"softfork\" is the \"> 50% of miners is enough to pull everyone to the fork\".\n> Some thinkers have a stricter definition of \"softfork\" as \"non-upgraded nodes can still associate addresses to values in the UTXO set but might not be able to detect consensus rules violations in new address types\", which fits SegWit and Taproot.)\n> \n> (In addition, presumably the reason to switch to SHA3 is to avoid potential preimage attacks on SHA2, and the coinbase is still in a SHA2-Merkle-Tree, so... this is a bad example)\n> \n> Perhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\n> But the flexibility of the coinbase allows us to hook new commitments to new Merkle Trees to it, which allows transactions to be annotated with additional information that is invisible to unupgraded nodes (similar to the `witness` field of SegWit transactions).\n> \n> \n> ------------\n> \n> \n> Even if you *do* have a softfork, we should be reminded to look at the histories of SegWit and Taproot.\n> \n> SegWit became controversial later on, which delayed its activation.\n> \n> On the other hand, Taproot had no significant controversy and it was widely accepted as being a definite improvement to the network.\n> Yet its implementation and deployment still took a long time, and there was still controversy on how to properly implement the activation code.\n> \n> Any hardforks would not only have to go through the hurdles that Taproot and SegWit had to go through, but will *also* have to pass through the much higher hurdle of being a hardfork.\n> \n> Thus, anyone contemplating a hardfork, for any reason, must be prepared to work on it for several **years** before anyone even frowns and says \"hmm maybe\" instead of everyone just outright dismissing it with a simple \"hardfork = hard pass\".\n> As a simple estimate, I would assume that any hardfork would require twice the average amount of engeineering-manpower involved in SegWit and Taproot.\n> (this assumes that hardforks are only twice as hard as softforks --- this estimate may be wrong, and this might provide only a minimum rather than an expected average)\n> \n> There are no quick solutions in this space.\n> Either we work with what we have and figure out how to get around issues with no real capability to fix them at the base layer, or we have insight on future problems and start working on future solutions today.\n> For example, I know at least one individual was maintaining an \"emergency\" branch to add some kind of post-quantum signature scheme to Bitcoin, in case of a quantum break.\n> \n> Regards,\n> ZmnSCPxj\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-23T18:12:00",
                "message_text_only": "Good morning vjudeu,\n\n> > Perhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\n>\n> Why not? I can imagine a soft fork where the block header would contain SHA-256 and SHA-3 hashes in the same place. The SHA-256 would be calculated as-is, but the SHA-3 would be truncated only to cover zero bits in SHA-256 hashes. In this way, if SHA-256 would be totally broken, old nodes would see zero hashes in the previous block hash and the merkle tree hash, but the new nodes would see correct SHA-3 hashes in the same place. So, for example if we have 1d00ffff difficulty, the first 32-bits would be zeroes for all old nodes, but all new nodes would see SHA-3 truncated to 32-bits in the same place. The difficulty could tell us how many zero bits we should truncate our SHA-3 result to. Also, in the same way we could introduce SHA-4 in the future as a soft-fork if SHA-3 would be broken and we would see many zero bits in our mixed SHA-256 plus SHA-3 consensus.\n\nI do not think I follow.\n\nThe block header has a Merkle tree root that is a SHA-256 of some Merkle tree node, is that what you refer to?\nDo you mean the same Merkle tree node has to hash to some common value in both SHA-2 and SHA-3?\n\nOr do you refer to the `prevBlockHash`?\nDo you mean the same `prevBlockHash` has to somehow be the same, for some number of bits, in both SHA-2 and SHA-3?\n\nMore specifically:\n\n* `nVersion`: 4 bytes\n* `prevBlockHash`: 32 bytes, SHA2 of previous block.\n* `merkleTreeRoot`: 32 bytes, SHA2 of topmost Merkle tree node.\n* `nTime`: 4 bytes, miner-imagined time.\n* `nBits`: 4 bytes, encoded difficulty target\n* `nonce`: 4 bytes, random number with no other meaning.\n\nWhat do you refer to?\n\nBecause the above block header format is hashed to generate the `prevBlockHash` for the *next* block, it is almost impossible to change the format without a hardfork.\n\nRegaards,\nZmnSCPxj\n\n>\n> On 2021-05-23 13:01:32 user ZmnSCPxj via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n>\n> > Good morning Jorge, et al,\n> >\n> > > Hardforks can be useful too.\n> > > But, yes, I agree softforks are preferable whenever possible.\n> >\n> > I think in principle the space of possible softforks is very much wider than can be trivially expected.\n> > For instance, maaku7 once proposed a softfork that could potentially change the block discovery rate as a softfork.\n> > Although this required exploiting a consensus bug that has since been closed.\n> > The example of SegWit shows us that we can in fact create massive changes to the transaction and block formats with a softfork.\n> > For example, it is possible to change the Merkle Tree to use SHA3 instead, in a softfork, by requiring that miners no longer use the \"normal\" existing Merkle Tree, but instead to require miners to embed a commitment to the SHA3-Merkle-Tree on the coinbase of the \"original\" block format, and to build \"empty\" SHA2-Merkle-Trees containing only the coinbase.\n> > To unupgraded nodes it looks as if there is a denial-of-service attack permanently, while upgraded nodes will seek blocks that conform to the SHA3-Merkle-Tree embedded in the coinbase.\n> > (Do note that this definition of \"softfork\" is the \"> 50% of miners is enough to pull everyone to the fork\".\n> > Some thinkers have a stricter definition of \"softfork\" as \"non-upgraded nodes can still associate addresses to values in the UTXO set but might not be able to detect consensus rules violations in new address types\", which fits SegWit and Taproot.)\n> > (In addition, presumably the reason to switch to SHA3 is to avoid potential preimage attacks on SHA2, and the coinbase is still in a SHA2-Merkle-Tree, so... this is a bad example)\n> > Perhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\n> > But the flexibility of the coinbase allows us to hook new commitments to new Merkle Trees to it, which allows transactions to be annotated with additional information that is invisible to unupgraded nodes (similar to the `witness` field of SegWit transactions).\n> >\n> > Even if you do have a softfork, we should be reminded to look at the histories of SegWit and Taproot.\n> > SegWit became controversial later on, which delayed its activation.\n> > On the other hand, Taproot had no significant controversy and it was widely accepted as being a definite improvement to the network.\n> > Yet its implementation and deployment still took a long time, and there was still controversy on how to properly implement the activation code.\n> > Any hardforks would not only have to go through the hurdles that Taproot and SegWit had to go through, but will also have to pass through the much higher hurdle of being a hardfork.\n> > Thus, anyone contemplating a hardfork, for any reason, must be prepared to work on it for several years before anyone even frowns and says \"hmm maybe\" instead of everyone just outright dismissing it with a simple \"hardfork = hard pass\".\n> > As a simple estimate, I would assume that any hardfork would require twice the average amount of engeineering-manpower involved in SegWit and Taproot.\n> > (this assumes that hardforks are only twice as hard as softforks --- this estimate may be wrong, and this might provide only a minimum rather than an expected average)\n> > There are no quick solutions in this space.\n> > Either we work with what we have and figure out how to get around issues with no real capability to fix them at the base layer, or we have insight on future problems and start working on future solutions today.\n> > For example, I know at least one individual was maintaining an \"emergency\" branch to add some kind of post-quantum signature scheme to Bitcoin, in case of a quantum break.\n> > Regards,\n> > ZmnSCPxj\n> >\n> > bitcoin-dev mailing list\n> > bitcoin-dev at lists.linuxfoundation.org\n> > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev"
            },
            {
                "author": "vjudeu",
                "date": "2021-05-23T20:41:32",
                "message_text_only": "> Because the above block header format is hashed to generate the `prevBlockHash` for the *next* block, it is almost impossible to change the format without a hardfork.\n\nFirst, assume that everything should be validated as today to be backward-compatible. For that reason, removing SHA-256 is impossible. Then, notice that breaking SHA-256 would mean that there would be more and more leading zeroes in \"prevBlockHash\". Breaking SHA-256 fully would mean reaching all zeroes hash. So, the old client would see \"prevBlockHash\" with all zeroes.\n\nSoft-fork means that previously valid blocks could be invalid, so rules should be more strict. And that means we could have two headers, one for SHA-256 and one for SHA-3. Normally, it would mean that our 80-byte headers would take 160 bytes instead. But we could compress it a little bit if we share some data.\n\n> * `nVersion`: 4 bytes\n\nVersion would be some higher number than today and validated as today. It could be shared for both headers.\n\n> * `prevBlockHash`: 32 bytes, SHA2 of previous block.\n\nPrevious block hash in SHA-256 would have more and more leading zeroes, so we could reuse them and fill with SHA-3 truncated to N bits. In this way, after fully breaking SHA-256 it would be fully replaced by SHA-3. Until then, first N bits could refer to truncated SHA-3 and the rest to SHA-256. When passing that to old nodes, that bits could be zeroed, but all new nodes should see them and perform SHA-3 validation.\n\nExample:\n\nSHA-2 of some block: 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\nSHA-3 of the same data: 95587d55da5108290c46bac70b622715ae380ef7a313febcc27aeb1c51a28d90\n32 bytes stored for that block: 95587d550019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n\nOf course, we should perform SHA-3 on a different data than used for SHA-2, at least merkle root should be recalculated, but it is just an example showing how single 32-byte string could store data for both hash functions.\n\n> * `merkleTreeRoot`: 32 bytes, SHA2 of topmost Merkle tree node.\n\nIf SHA-256 would be broken, then we could use single coinbase transaction to prevent doing transactions in the old way. That transaction would contain SHA-3 of the new merkle root, as you mentioned. New nodes could treat that transaction as some kind of annex to the block header, but still doing SHA-2 is needed for backward compatibility. For that reason, storing 32 bytes for SHA-2 and 32 bytes for SHA-3 is needed, unless we have some fast way to get hash with all zeroes, then we can save that 32 bytes.\n\n> * `nTime`: 4 bytes, miner-imagined time.\n\nTime should be the same in both headers, so there is no need to duplicate it.\n\n> * `nBits`: 4 bytes, encoded difficulty target\n\nDifficulty should be different for SHA-2 and SHA-3. Finally when SHA-256 would be broken, we could reach 03000000 for SHA-256 and store only SHA-3 difficulty.\n\n> * `nonce`: 4 bytes, random number with no other meaning.\n\nNonce should be also different for SHA-2 and SHA-3. If SHA-256 would be fully broken, it could be set to zero for SHA-2 and stored only for SHA-3.\n\nOn 2021-05-23 20:12:00 user ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n> Good morning vjudeu,\n> \n> > > Perhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\n> >\n> > Why not? I can imagine a soft fork where the block header would contain SHA-256 and SHA-3 hashes in the same place. The SHA-256 would be calculated as-is, but the SHA-3 would be truncated only to cover zero bits in SHA-256 hashes. In this way, if SHA-256 would be totally broken, old nodes would see zero hashes in the previous block hash and the merkle tree hash, but the new nodes would see correct SHA-3 hashes in the same place. So, for example if we have 1d00ffff difficulty, the first 32-bits would be zeroes for all old nodes, but all new nodes would see SHA-3 truncated to 32-bits in the same place. The difficulty could tell us how many zero bits we should truncate our SHA-3 result to. Also, in the same way we could introduce SHA-4 in the future as a soft-fork if SHA-3 would be broken and we would see many zero bits in our mixed SHA-256 plus SHA-3 consensus.\n> \n> I do not think I follow.\n> \n> The block header has a Merkle tree root that is a SHA-256 of some Merkle tree node, is that what you refer to?\n> Do you mean the same Merkle tree node has to hash to some common value in both SHA-2 and SHA-3?\n> \n> Or do you refer to the `prevBlockHash`?\n> Do you mean the same `prevBlockHash` has to somehow be the same, for some number of bits, in both SHA-2 and SHA-3?\n> \n> More specifically:\n> \n> * `nVersion`: 4 bytes\n> * `prevBlockHash`: 32 bytes, SHA2 of previous block.\n> * `merkleTreeRoot`: 32 bytes, SHA2 of topmost Merkle tree node.\n> * `nTime`: 4 bytes, miner-imagined time.\n> * `nBits`: 4 bytes, encoded difficulty target\n> * `nonce`: 4 bytes, random number with no other meaning.\n> \n> What do you refer to?\n> \n> Because the above block header format is hashed to generate the `prevBlockHash` for the *next* block, it is almost impossible to change the format without a hardfork.\n> \n> Regaards,\n> ZmnSCPxj\n> \n> >\n> > On 2021-05-23 13:01:32 user ZmnSCPxj via bitcoin-dev bitcoin-dev at lists.linuxfoundation.org wrote:\n> >\n> > > Good morning Jorge, et al,\n> > >\n> > > > Hardforks can be useful too.\n> > > > But, yes, I agree softforks are preferable whenever possible.\n> > >\n> > > I think in principle the space of possible softforks is very much wider than can be trivially expected.\n> > > For instance, maaku7 once proposed a softfork that could potentially change the block discovery rate as a softfork.\n> > > Although this required exploiting a consensus bug that has since been closed.\n> > > The example of SegWit shows us that we can in fact create massive changes to the transaction and block formats with a softfork.\n> > > For example, it is possible to change the Merkle Tree to use SHA3 instead, in a softfork, by requiring that miners no longer use the \"normal\" existing Merkle Tree, but instead to require miners to embed a commitment to the SHA3-Merkle-Tree on the coinbase of the \"original\" block format, and to build \"empty\" SHA2-Merkle-Trees containing only the coinbase.\n> > > To unupgraded nodes it looks as if there is a denial-of-service attack permanently, while upgraded nodes will seek blocks that conform to the SHA3-Merkle-Tree embedded in the coinbase.\n> > > (Do note that this definition of \"softfork\" is the \"> 50% of miners is enough to pull everyone to the fork\".\n> > > Some thinkers have a stricter definition of \"softfork\" as \"non-upgraded nodes can still associate addresses to values in the UTXO set but might not be able to detect consensus rules violations in new address types\", which fits SegWit and Taproot.)\n> > > (In addition, presumably the reason to switch to SHA3 is to avoid potential preimage attacks on SHA2, and the coinbase is still in a SHA2-Merkle-Tree, so... this is a bad example)\n> > > Perhaps the only things that cannot be usefully changed in a softfork is the block header format and how proof-of-work is computed from the block header.\n> > > But the flexibility of the coinbase allows us to hook new commitments to new Merkle Trees to it, which allows transactions to be annotated with additional information that is invisible to unupgraded nodes (similar to the `witness` field of SegWit transactions).\n> > >\n> > > Even if you do have a softfork, we should be reminded to look at the histories of SegWit and Taproot.\n> > > SegWit became controversial later on, which delayed its activation.\n> > > On the other hand, Taproot had no significant controversy and it was widely accepted as being a definite improvement to the network.\n> > > Yet its implementation and deployment still took a long time, and there was still controversy on how to properly implement the activation code.\n> > > Any hardforks would not only have to go through the hurdles that Taproot and SegWit had to go through, but will also have to pass through the much higher hurdle of being a hardfork.\n> > > Thus, anyone contemplating a hardfork, for any reason, must be prepared to work on it for several years before anyone even frowns and says \"hmm maybe\" instead of everyone just outright dismissing it with a simple \"hardfork = hard pass\".\n> > > As a simple estimate, I would assume that any hardfork would require twice the average amount of engeineering-manpower involved in SegWit and Taproot.\n> > > (this assumes that hardforks are only twice as hard as softforks --- this estimate may be wrong, and this might provide only a minimum rather than an expected average)\n> > > There are no quick solutions in this space.\n> > > Either we work with what we have and figure out how to get around issues with no real capability to fix them at the base layer, or we have insight on future problems and start working on future solutions today.\n> > > For example, I know at least one individual was maintaining an \"emergency\" branch to add some kind of post-quantum signature scheme to Bitcoin, in case of a quantum break.\n> > > Regards,\n> > > ZmnSCPxj\n> > >\n> > > bitcoin-dev mailing list\n> > > bitcoin-dev at lists.linuxfoundation.org\n> > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> \n> \n>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2021-05-25T10:24:43",
                "message_text_only": "Sure, many things that were though only possible with hardforks initially\nwere later shown to be possible with softforks.\n\nThat doesn't mean hardforks should be taboo in my opinion though.\n\n\nOn Mon, May 24, 2021, 01:09 vjudeu via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> > Because the above block header format is hashed to generate the\n> `prevBlockHash` for the *next* block, it is almost impossible to change the\n> format without a hardfork.\n>\n> First, assume that everything should be validated as today to be\n> backward-compatible. For that reason, removing SHA-256 is impossible. Then,\n> notice that breaking SHA-256 would mean that there would be more and more\n> leading zeroes in \"prevBlockHash\". Breaking SHA-256 fully would mean\n> reaching all zeroes hash. So, the old client would see \"prevBlockHash\" with\n> all zeroes.\n>\n> Soft-fork means that previously valid blocks could be invalid, so rules\n> should be more strict. And that means we could have two headers, one for\n> SHA-256 and one for SHA-3. Normally, it would mean that our 80-byte headers\n> would take 160 bytes instead. But we could compress it a little bit if we\n> share some data.\n>\n> > * `nVersion`: 4 bytes\n>\n> Version would be some higher number than today and validated as today. It\n> could be shared for both headers.\n>\n> > * `prevBlockHash`: 32 bytes, SHA2 of previous block.\n>\n> Previous block hash in SHA-256 would have more and more leading zeroes, so\n> we could reuse them and fill with SHA-3 truncated to N bits. In this way,\n> after fully breaking SHA-256 it would be fully replaced by SHA-3. Until\n> then, first N bits could refer to truncated SHA-3 and the rest to SHA-256.\n> When passing that to old nodes, that bits could be zeroed, but all new\n> nodes should see them and perform SHA-3 validation.\n>\n> Example:\n>\n> SHA-2 of some block:\n> 000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n> SHA-3 of the same data:\n> 95587d55da5108290c46bac70b622715ae380ef7a313febcc27aeb1c51a28d90\n> 32 bytes stored for that block:\n> 95587d550019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n>\n> Of course, we should perform SHA-3 on a different data than used for\n> SHA-2, at least merkle root should be recalculated, but it is just an\n> example showing how single 32-byte string could store data for both hash\n> functions.\n>\n> > * `merkleTreeRoot`: 32 bytes, SHA2 of topmost Merkle tree node.\n>\n> If SHA-256 would be broken, then we could use single coinbase transaction\n> to prevent doing transactions in the old way. That transaction would\n> contain SHA-3 of the new merkle root, as you mentioned. New nodes could\n> treat that transaction as some kind of annex to the block header, but still\n> doing SHA-2 is needed for backward compatibility. For that reason, storing\n> 32 bytes for SHA-2 and 32 bytes for SHA-3 is needed, unless we have some\n> fast way to get hash with all zeroes, then we can save that 32 bytes.\n>\n> > * `nTime`: 4 bytes, miner-imagined time.\n>\n> Time should be the same in both headers, so there is no need to duplicate\n> it.\n>\n> > * `nBits`: 4 bytes, encoded difficulty target\n>\n> Difficulty should be different for SHA-2 and SHA-3. Finally when SHA-256\n> would be broken, we could reach 03000000 for SHA-256 and store only SHA-3\n> difficulty.\n>\n> > * `nonce`: 4 bytes, random number with no other meaning.\n>\n> Nonce should be also different for SHA-2 and SHA-3. If SHA-256 would be\n> fully broken, it could be set to zero for SHA-2 and stored only for SHA-3.\n>\n> On 2021-05-23 20:12:00 user ZmnSCPxj <ZmnSCPxj at protonmail.com> wrote:\n> > Good morning vjudeu,\n> >\n> > > > Perhaps the only things that cannot be usefully changed in a\n> softfork is the block header format and how proof-of-work is computed from\n> the block header.\n> > >\n> > > Why not? I can imagine a soft fork where the block header would\n> contain SHA-256 and SHA-3 hashes in the same place. The SHA-256 would be\n> calculated as-is, but the SHA-3 would be truncated only to cover zero bits\n> in SHA-256 hashes. In this way, if SHA-256 would be totally broken, old\n> nodes would see zero hashes in the previous block hash and the merkle tree\n> hash, but the new nodes would see correct SHA-3 hashes in the same place.\n> So, for example if we have 1d00ffff difficulty, the first 32-bits would be\n> zeroes for all old nodes, but all new nodes would see SHA-3 truncated to\n> 32-bits in the same place. The difficulty could tell us how many zero bits\n> we should truncate our SHA-3 result to. Also, in the same way we could\n> introduce SHA-4 in the future as a soft-fork if SHA-3 would be broken and\n> we would see many zero bits in our mixed SHA-256 plus SHA-3 consensus.\n> >\n> > I do not think I follow.\n> >\n> > The block header has a Merkle tree root that is a SHA-256 of some Merkle\n> tree node, is that what you refer to?\n> > Do you mean the same Merkle tree node has to hash to some common value\n> in both SHA-2 and SHA-3?\n> >\n> > Or do you refer to the `prevBlockHash`?\n> > Do you mean the same `prevBlockHash` has to somehow be the same, for\n> some number of bits, in both SHA-2 and SHA-3?\n> >\n> > More specifically:\n> >\n> > * `nVersion`: 4 bytes\n> > * `prevBlockHash`: 32 bytes, SHA2 of previous block.\n> > * `merkleTreeRoot`: 32 bytes, SHA2 of topmost Merkle tree node.\n> > * `nTime`: 4 bytes, miner-imagined time.\n> > * `nBits`: 4 bytes, encoded difficulty target\n> > * `nonce`: 4 bytes, random number with no other meaning.\n> >\n> > What do you refer to?\n> >\n> > Because the above block header format is hashed to generate the\n> `prevBlockHash` for the *next* block, it is almost impossible to change the\n> format without a hardfork.\n> >\n> > Regaards,\n> > ZmnSCPxj\n> >\n> > >\n> > > On 2021-05-23 13:01:32 user ZmnSCPxj via bitcoin-dev\n> bitcoin-dev at lists.linuxfoundation.org wrote:\n> > >\n> > > > Good morning Jorge, et al,\n> > > >\n> > > > > Hardforks can be useful too.\n> > > > > But, yes, I agree softforks are preferable whenever possible.\n> > > >\n> > > > I think in principle the space of possible softforks is very much\n> wider than can be trivially expected.\n> > > > For instance, maaku7 once proposed a softfork that could potentially\n> change the block discovery rate as a softfork.\n> > > > Although this required exploiting a consensus bug that has since\n> been closed.\n> > > > The example of SegWit shows us that we can in fact create massive\n> changes to the transaction and block formats with a softfork.\n> > > > For example, it is possible to change the Merkle Tree to use SHA3\n> instead, in a softfork, by requiring that miners no longer use the \"normal\"\n> existing Merkle Tree, but instead to require miners to embed a commitment\n> to the SHA3-Merkle-Tree on the coinbase of the \"original\" block format, and\n> to build \"empty\" SHA2-Merkle-Trees containing only the coinbase.\n> > > > To unupgraded nodes it looks as if there is a denial-of-service\n> attack permanently, while upgraded nodes will seek blocks that conform to\n> the SHA3-Merkle-Tree embedded in the coinbase.\n> > > > (Do note that this definition of \"softfork\" is the \"> 50% of miners\n> is enough to pull everyone to the fork\".\n> > > > Some thinkers have a stricter definition of \"softfork\" as\n> \"non-upgraded nodes can still associate addresses to values in the UTXO set\n> but might not be able to detect consensus rules violations in new address\n> types\", which fits SegWit and Taproot.)\n> > > > (In addition, presumably the reason to switch to SHA3 is to avoid\n> potential preimage attacks on SHA2, and the coinbase is still in a\n> SHA2-Merkle-Tree, so... this is a bad example)\n> > > > Perhaps the only things that cannot be usefully changed in a\n> softfork is the block header format and how proof-of-work is computed from\n> the block header.\n> > > > But the flexibility of the coinbase allows us to hook new\n> commitments to new Merkle Trees to it, which allows transactions to be\n> annotated with additional information that is invisible to unupgraded nodes\n> (similar to the `witness` field of SegWit transactions).\n> > > >\n> > > > Even if you do have a softfork, we should be reminded to look at the\n> histories of SegWit and Taproot.\n> > > > SegWit became controversial later on, which delayed its activation.\n> > > > On the other hand, Taproot had no significant controversy and it was\n> widely accepted as being a definite improvement to the network.\n> > > > Yet its implementation and deployment still took a long time, and\n> there was still controversy on how to properly implement the activation\n> code.\n> > > > Any hardforks would not only have to go through the hurdles that\n> Taproot and SegWit had to go through, but will also have to pass through\n> the much higher hurdle of being a hardfork.\n> > > > Thus, anyone contemplating a hardfork, for any reason, must be\n> prepared to work on it for several years before anyone even frowns and says\n> \"hmm maybe\" instead of everyone just outright dismissing it with a simple\n> \"hardfork = hard pass\".\n> > > > As a simple estimate, I would assume that any hardfork would require\n> twice the average amount of engeineering-manpower involved in SegWit and\n> Taproot.\n> > > > (this assumes that hardforks are only twice as hard as softforks ---\n> this estimate may be wrong, and this might provide only a minimum rather\n> than an expected average)\n> > > > There are no quick solutions in this space.\n> > > > Either we work with what we have and figure out how to get around\n> issues with no real capability to fix them at the base layer, or we have\n> insight on future problems and start working on future solutions today.\n> > > > For example, I know at least one individual was maintaining an\n> \"emergency\" branch to add some kind of post-quantum signature scheme to\n> Bitcoin, in case of a quantum break.\n> > > > Regards,\n> > > > ZmnSCPxj\n> > > >\n> > > > bitcoin-dev mailing list\n> > > > bitcoin-dev at lists.linuxfoundation.org\n> > > > https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n> >\n> >\n> >\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/82ae9a50/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Consensus protocol immutability is a feature",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "ZmnSCPxj",
                "Raystonn .",
                "Jorge Tim\u00f3n",
                "vjudeu"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 43202
        }
    },
    {
        "title": "[bitcoin-dev] Reducing block reward via soft fork",
        "thread_messages": [
            {
                "author": "James Lu",
                "date": "2021-05-23T01:00:19",
                "message_text_only": "Background\n===\nReducing the block reward reduces the incentive to mine. It reduces the\nmaximum energy price at which mining is profitable, reducing the energy use.\n\nBitcoins have value because they are accepted by full node users, from\nindividual node operators, to exchanges and custodians like Coinbase.\nAnything else and the Bitcoins don't exist and are worthless. Like all\ncurrencies, Bitcoin has value because others recognize that they have value.\n\nIdea\n===\nReduce the block reward by adding fewer coins to the UTXO set per block.\nThis should be done gradually\n\nConsensus layer\n===\nThis is a soft fork, because it tightens the\n\nSome Possible Weaknesses\n===\n- It will cost less than a nation-state of energy to reverse recent Bitcoin\ntransactions.\n- Some miners may protest and lobby exchanges.\n- By pushing mining towards the cheapest energy sources, centralization\nincreases towards Chinese miners.\n- The Bitcoin network may split if consensus is not built before flag day.\n\nHowever, given the current political headwinds and widespread public\ndiscussion around Bitcoin's energy use, it may be socially possible to ask\nindividual users and major exchanges to install a version of Bitcoin with a\nreduced block reward.\n\nAlternatives\n===\nInstead of outright rejecting transactions (and the blocks that contain\nthem) that attempt to spend increased block rewards, treat them as no-ops.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210522/d4bec4ce/attachment.html>"
            },
            {
                "author": "Anton Ragin",
                "date": "2021-05-23T10:42:49",
                "message_text_only": "Well, it is done automatically every 4 years :) It is a self-balancing\nsystem - more people shout about Bitcoin being dirty -> less adoption ->\nlower the price -> less energy consumption. Add on top the fact that in\n2024 block rewards will fall 50% anyway and someday it will be zero.\n\nI am all for making Bitcoin green(er), but IMHO there shall be no\nshort-termism of the sort \"Elon complained + price dropped 40% - lets go\nradically change things\".\n\nIMHO if we want to make BTC cleaner we can add functionality where users\ncan prioritise some miners over the others, with the view that users will\nprioritise \"green\" miners and they will get more TX fees, and there will be\neconomic incentive to go green.\n\nOn Sun, 23 May 2021, 09:49 James Lu via bitcoin-dev, <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Background\n> ===\n> Reducing the block reward reduces the incentive to mine. It reduces the\n> maximum energy price at which mining is profitable, reducing the energy use.\n>\n> Bitcoins have value because they are accepted by full node users, from\n> individual node operators, to exchanges and custodians like Coinbase.\n> Anything else and the Bitcoins don't exist and are worthless. Like all\n> currencies, Bitcoin has value because others recognize that they have value.\n>\n> Idea\n> ===\n> Reduce the block reward by adding fewer coins to the UTXO set per block.\n> This should be done gradually\n>\n> Consensus layer\n> ===\n> This is a soft fork, because it tightens the\n>\n> Some Possible Weaknesses\n> ===\n> - It will cost less than a nation-state of energy to reverse recent\n> Bitcoin transactions.\n> - Some miners may protest and lobby exchanges.\n> - By pushing mining towards the cheapest energy sources, centralization\n> increases towards Chinese miners.\n> - The Bitcoin network may split if consensus is not built before flag day.\n>\n> However, given the current political headwinds and widespread public\n> discussion around Bitcoin's energy use, it may be socially possible to\n> ask individual users and major exchanges to install a version of Bitcoin\n> with a reduced block reward.\n>\n> Alternatives\n> ===\n> Instead of outright rejecting transactions (and the blocks that contain\n> them) that attempt to spend increased block rewards, treat them as no-ops.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/a3c73dd7/attachment-0001.html>"
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-23T11:26:59",
                "message_text_only": "Good morning James,\n\n> Background\n> ===\n> Reducing the block reward reduces the incentive to mine. It reduces the maximum energy price at which mining is profitable, reducing the energy use.\n>\n\nIf people want to retain previous levels of security, they can offer to pay higher fees, which increases the miner reward and thereby increasing the energy use again.\nThe only difference is that the security is paid for directly by transactors rather than slowly extracted from HODLers.\n\nThus, I expect that the energy use of Bitcoin will fairly closely match its security usage, even with this change.\n\nReally, though:\n\n* The issue is not energy use.\n* The issue is the energy *efficiency*.\n\nEverything important requires energy.\nWhat is needed is to get the most amount of work for the least amount of entropy-increase.\n\nDeleterious environmental effects (pollution, temperature rise, and so on) are symptoms of entropy-increase in the local universe.\nThese have long-term negative effects from the simple fact that we are producing entropy and dumping it into our surroundings.\n\nIf these effects are properly charged to their instigators (e.g. carbon emissions fines), then the negative environmental effects will become economic disincentives, that miners will now naturally avoid in order to increase their profitability.\nThis holds no matter how much block rewards are, and how much comes from the block subsidy or from mining fees.\n\nThe trope that the \"free market\" is somehow opposed to \"environmentalism\" is about as accurate to real life as Hollywood hacking \"I can crack AES-256 in exactly 30 minutes\".\nProperly account for the entropy increase (energy usage) of all kinds of pollution, and the free market will naturally seek sustainable and renewable processes --- because that maximizes profitability in the long run.\nAnyone who pushes for environmentalism but refuses to use Bitcoin should be treated with suspicion of either hypocrisy or massive ignorance --- Bitcoin is the most honest currency in accounting for its energy usage and consumption, and I suspect most other currencies have far worse efficiencies, that happen to be hidden because they are not properly accounted for.\n\nWhat is needed is to enforce that pollution be paid for by those who cause it --- this can require significant political influence to do (a major world government is a major polluter, willing to pay for high fuel costs just to ship their soldiers globally, polluting the environments of foreign countries), and should be what true environmentalists would work towards, not rejecting Bitcoin as an environmental disaster (which is frankly laughable).\nRemember, the free market only works correctly if all its costs are accounted correctly --- otherwise it will treat costs subsidized by the community of human beings as a resource to pump.\n\n> Alternatives\n> ===\n> Instead of outright rejecting transactions (and the blocks that contain them) that attempt to spend increased block rewards, treat them as no-ops.\n\nThat is inefficient --- the \"no-op\" transactions reduce the available block space for operational transactions, thus this alternative is strictly inferior to a simple acceleration of block subsidy reduction.\n\nRegards,\nZmnSCPXj"
            },
            {
                "author": "Karl",
                "date": "2021-05-23T12:08:33",
                "message_text_only": "On 5/23/21, ZmnSCPxj via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n> Good morning James,\n>\n>> Background\n>> ===\n>> Reducing the block reward reduces the incentive to mine. It reduces the\n>> maximum energy price at which mining is profitable, reducing the energy\n>> use.\n>>\n>\n> If people want to retain previous levels of security, they can offer to pay\n> higher fees, which increases the miner reward and thereby increasing the\n> energy use again.\n\nThe turn-around time for that takes a population of both users and\nminers to cause.  Increasing popularity of bitcoin has a far bigger\nimpact here, and it is already raising fees and energy use at an\nestablished rate.\n\nIf it becomes an issue, as bandwidth increases block size could be\nraised to lower fees.\n\n> Properly account for the entropy increase (energy usage) of all kinds of\n> pollution, and the free market will naturally seek sustainable and renewable\n> processes --- because that maximizes profitability in the long run.\n\nThere is little economic incentive to fine carbon emissions because\nthere is no well-established quick path to gain profit from reducing\nthem.  The feedback paths you describe take decades if not hundreds of\nyears.\n\nBut it sounds like you are saying you would rather the energy issue\nstay a political one that does not involve bitcoin.  Your point is\nquite relevant because bitcoin is not the largest consumer of energy;\nthose who care about reducing energy use would be better put to look\nat other concerns.\n\nThe reason to reduce _bitcoin's_ energy use, would simply be to aid\nits popularity and quell public concern.  Without doing this, people\nmove to an altcoin, because increasing the value of bitcoin via\nspreading its use, increases the demand for mining.  That human\ndecision is part of the honesty you describe.\n\n> What is needed is to enforce that pollution be paid for by those who cause\n> it --- this can require significant political influence to do (a major world\n> government is a major polluter, willing to pay for high fuel costs just to\n> ship their soldiers globally, polluting the environments of foreign\n> countries), and should be what true environmentalists would work towards,\n> not rejecting Bitcoin as an environmental disaster (which is frankly\n> laughable).\n>\n> Remember, the free market only works correctly if all its costs are\n> accounted correctly --- otherwise it will treat costs subsidized by the\n> community of human beings as a resource to pump.\n\nIt sounds like you would prefer a proof-of-work function that directly\nproved carbon offsetting?  And an on-chain tax for environmental harm?\n\nOn 5/23/21, Anton Ragin via bitcoin-dev\n<bitcoin-dev at lists.linuxfoundation.org> wrote:\n> Well, it is done automatically every 4 years :) It is a self-balancing\n> system - more people shout about Bitcoin being dirty -> less adoption ->\n> lower the price -> less energy consumption. Add on top the fact that in\n> 2024 block rewards will fall 50% anyway and someday it will be zero.\n\nIs hashrate rising slower than the block reward is dropping, that you\nmention the 4 years halving?  Do you see a problem with dropping the\nblock reward to make faster change to the hashrate curve, that you\nmention the existing system's weaker approach?\n\nI personally wasn't aware that Elon had complained; I've been hearing\nthe complaint from scads of people for many years."
            },
            {
                "author": "ZmnSCPxj",
                "date": "2021-05-23T13:35:12",
                "message_text_only": "Good morning Karl,\n\n> On 5/23/21, ZmnSCPxj via bitcoin-dev\n> bitcoin-dev at lists.linuxfoundation.org wrote:\n>\n> > Good morning James,\n> >\n> > > Background\n> > >\n> > > ===========\n> > >\n> > > Reducing the block reward reduces the incentive to mine. It reduces the\n> > > maximum energy price at which mining is profitable, reducing the energy\n> > > use.\n> >\n> > If people want to retain previous levels of security, they can offer to pay\n> > higher fees, which increases the miner reward and thereby increasing the\n> > energy use again.\n>\n> The turn-around time for that takes a population of both users and\n> miners to cause. Increasing popularity of bitcoin has a far bigger\n> impact here, and it is already raising fees and energy use at an\n> established rate.\n>\n> If it becomes an issue, as bandwidth increases block size could be\n> raised to lower fees.\n>\n\nWhich increases block rewards somewhat (at least to some level that matches the overall security of the network) and you still have the same amount of energy consumed.\n\n> > Properly account for the entropy increase (energy usage) of all kinds of\n> > pollution, and the free market will naturally seek sustainable and renewable\n> > processes --- because that maximizes profitability in the long run.\n>\n> There is little economic incentive to fine carbon emissions because\n> there is no well-established quick path to gain profit from reducing\n> them. The feedback paths you describe take decades if not hundreds of\n> years.\n>\n> But it sounds like you are saying you would rather the energy issue\n> stay a political one that does not involve bitcoin. Your point is\n> quite relevant because bitcoin is not the largest consumer of energy;\n> those who care about reducing energy use would be better put to look\n> at other concerns.\n\nPrecisely.\n\n> > What is needed is to enforce that pollution be paid for by those who cause\n> > it --- this can require significant political influence to do (a major world\n> > government is a major polluter, willing to pay for high fuel costs just to\n> > ship their soldiers globally, polluting the environments of foreign\n> > countries), and should be what true environmentalists would work towards,\n> > not rejecting Bitcoin as an environmental disaster (which is frankly\n> > laughable).\n> > Remember, the free market only works correctly if all its costs are\n> > accounted correctly --- otherwise it will treat costs subsidized by the\n> > community of human beings as a resource to pump.\n>\n> It sounds like you would prefer a proof-of-work function that directly\n> proved carbon offsetting? And an on-chain tax for environmental harm?\n\n\nThe problem is that the only proof of efficiency here is implicit: any inefficiency will eventually be rooted out of the network, as any inefficiency will translate to reduced profitability.\nHowever, at short-term, a miner can pollute its locality, and then exit the business and leave its crap lying around for others to deal with and abscond with pure profit.\nThis translates to a theft in the profitability of others in the locality.\n\nHow to prove this is not happening?\nThe best you can do is to have some number of authorities sign off on whether or not they are doing this.\nThe problem is that authorities are bribeable.\n\nAlternately, other entities in the locality can use force to require the polluting entity to clean up or suffer significant consequences.\nThis at least is better incentive-wise, as they others in the same locality are the ones most affected, but the ability to enforce may be difficult due to various political constructions; the miners could be in such deep cahoots with the local government that the local government would willingly hurt other local entities in the vicinity of the polluting entity.\n\n\n\nRegards,\nZmnSCPxj"
            },
            {
                "author": "Karl",
                "date": "2021-05-23T19:44:18",
                "message_text_only": ">> The turn-around time for that takes a population of both users and\n>> miners to cause. Increasing popularity of bitcoin has a far bigger\n>> impact here, and it is already raising fees and energy use at an\n>> established rate.\n>>\n>> If it becomes an issue, as bandwidth increases block size could be\n>> raised to lower fees.\n>>\n>\n> Which increases block rewards somewhat (at least to some level that matches\n> the overall security of the network) and you still have the same amount of\n> energy consumed.\n\nIf you mean to implicitly propose that even if halved all the way with\nvery large blocks, block rewards would just increase to the same\nlevel, meaning that any attempt to decrease them has no effect, I\ndisagree.    I expect that if you raise the block size, eventually\nthere is so much supply for transactions that there are no fees at all\n(nor security).  The numbers are all things the devs, miners, and\nusers can together control.\n\n> How to prove this is not happening?\n> The best you can do is to have some number of authorities sign off on\n> whether or not they are doing this.\n> The problem is that authorities are bribeable.\n\nYou could make the proof of work be a proof of environmental kindness\nby coding incentives for people to place and verify proof on the\nchain, and then rewarding people for acting on it as desired.  You\ncould code the chain to pay people to investigate and prove miners'\nbusiness practices, for example.  You could define the main chain as\none where everyone consents the proofs are valid.  There are a lot of\nissues to resolve and it would be a very different chain.\n\nThere is not a single solution here.  There are innumerable possible\nsolutions, any one of which could be made to work with enough brains\nworking on it.  To use one, we need to agree on what kinds of\nsolutions are acceptable.\n\n> Alternately, other entities in the locality can use force to require the\n> polluting entity to clean up or suffer significant consequences.\n> This at least is better incentive-wise, as they others in the same locality\n> are the ones most affected, but the ability to enforce may be difficult due\n> to various political constructions; the miners could be in such deep cahoots\n> with the local government that the local government would willingly hurt\n> other local entities in the vicinity of the polluting entity.\n\nAs bitcoin grows, if people ask some locality to enforce behavior,\nthey may need to be willing to enforce it themselves, too, or they\nmight outcompete the locality."
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-24T20:28:41",
                "message_text_only": "Before we can decide on tradeoffs that reduce security in favor of less\nenergy usage, or less inflation, or whatever goal you might have for\nreducing (or delaying) coinbase rewards, we need to decide as a community\nhow much security bitcoin *needs*.\n\nDo we need to be secure against an attacker with a budget of $1\nbillion/year for an attack? $10 billion/year? More?\n\nAn upper limit would be the budget of the largest government: the US. The\nUS federal budget is almost $5 trillion/year. But they certainly couldn't\nspend all that budget attacking bitcoin. About $3 trillion of that is\nmandatory spending, which couldn't be allocated to such an attack. About\n$1.5 trillion is discretionary, which includes the military budget. It\nseems like an upper limit on the amount that could be siphoned from that\nbudget to attack bitcoin would be 5%. That would take massive political\ncooperation and wheeling and dealing. Likely spending that much would not\nbe politically feasible, but it seems possible, since a 5% reduction in\nother activities is something other departments would likely be able to\nsustain with just a bit of downsizing. Or that money could simply come from\nmore borrowing. 5% of $1.5 trillion is $75 billion. So that seems like a\npretty solid upper limit on the amount the US could allocate to an attack\nin a year, in that it seems incredibly unlikely that more money than that\ncould be allocated. Such an expenditure might be eventually seen as\njustified since the federal reserve has been inflating the supply of\ndollars by 17.5% on average every year, which would be $1 trillion next\nyear (and more the next, etc). A similar story is told if you calculate the\namount of seigniorage banks get access to by their ability to use\nfractional reserve to inflate the supply of M2 money.  It should be\nconsidered tho that this seigniorage doesn't give its beneficiaries that\nfull value, but rather some fraction of that value - say 5% earned by being\nfirst to buy with that new money and earning interest on it. So 5% of a\ntrillion is $50 billion. Still, over just two years, that's enough to pay\nfor an attack of at least that size ($75 billion).\n\nThe budget for the government of China is about $3.6 trillion, the second\nlargest in the world. And since they're an authoritarian country, they can\nbasically do whatever they want with that money. It still seems unlikely\nthey would spend more than 5% of that budget on doing something like\nattacking bitcoin. However, consider that China's M2 money supply has been\nincreasing at a rate of almost $3 trillion per year. Protecting the ability\nto do this is seems like something worth spending some (printed) money on.\nSo perhaps at some point, spending 10 or 20% of their budget for a year or\ntwo to attack bitcoin might seem like a good idea to some mickey mouse in\nthe government. That would be $720 billion/year.\n\nSo given the amount of seigniorage taken in every year by these central\nbanks, it would seem to justify large expenditures. I'm not sure how\nrealistic it would be, politically speaking, to gather $720 billion in a\nsingle year to attack bitcoin. It seems far fetched, even if the\nseigniorage they're protecting seems to justify it.\n\nSo is this the level of attack we want to be resilient to? Nearly a $1\ntrillion attack? I don't know. But we should figure that out as a\ncommunity. And keep in mind, the level of attack we need to defend against\ndepends on the size of bitcoin. The more valuable bitcoins are, the more\ndamaging, more lucrative, and more valuable an attack would be for\nattackers. Its seems reasonable to assume that this is a linear\nrelationship - that if bitcoins are worth twice as much, we need twice as\nmuch security (ie we want to make attacking bitcoin twice as costly).\n\nThe next step is figuring out a reasonable lower bound for how much it\ntakes to attack bitcoin. There are many attacks that can be done on\nbitcoin, but the one relevant to the discussion here is a 51% attack.\nBitcoin's PoW basically is attackable buy buying about 25% of the existing\nmining power (for reasons like the selfish economic attack\n<https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack>\nand\nthe economic mining monopoly attack\n<https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#economic-mining-monopoly-attack>),\nwhich is about 40 exahashes/second.\n\nIf you bought 400,000 WhatsMiner M30S+ rigs\n<https://www.buybitcoinworldwide.com/mining/hardware/> at current market\nprice, you'd need $1 billion to buy them all (which doesn't include the\ncost of setting up all that equipment, powering it, building the network\ninfrastructure for it, etc etc). Let's say all that infra doubles the price\nto $2 billion. Even then, you couldn't simply buy half a million mining\nrigs from the market. That many just aren't available. An attacker would\nhave to spend year and years building up their mining operation before they\ncould actually perform the attack. They'd basically have to mine at a\nslight (probably insignificant) loss for that time. Their demand would push\nup the price of these mining rigs for at least a year or two until supply\ncomes up to meet it. So lets say this doubles the price of the mining rigs\n(it could very well do significantly more than that). That makes for $3\nbillion to build up this malicious mining operation. China could seize a\nmining pool, but likely couldn't do it quietly. They'd have to seize the\npool and immediately use it to attack before miners stop using the pool\n(which might take a week or two). Maybe this would save them half the cost?\n\nSo, lower bound on cost of attack is $1.5 billion. Upper bound on US govt\nattack is $72 billion. Upper bound on China govt attack is $720 billion. So\nbased on this back-of-the-napkin line of thinking, its not super clear that\nreducing bitcoin's security is \"enough\" yet. There is also the question of:\ndoes a $1 trillion currency need to be secure against a $720 billion\nattack? Probably not. But should it be secure against a $10 billion attack?\nMaybe.\n\nHowever, the security will go up with price. If bitcoin goes up by 10x, as\nit is wont to do, that's nearly 10x the security (nearly, since coinbase\nrewards 10x, but the real value of fees almost certainly wouldn't go up as\nmuch). So that brings us to $15 billion of security. Still not clear\nwithout doing some more accurate analysis to determine more confidence in\ntighter bounds on cost of attack and likely attack budgets.\n\nBut it certainly seems likely that my attack cost bounds are an order of\nmagnitude too low, and its equally possible my estimates of potential\navailable attack budgets are an order of magnitude too high. It doesn't\nseem quite as likely the reverse is true (that my bounds aren't good\nbounds).\n\nIt seems possible that we currently have enough security, but seems\nlikelier that we don't. It just isn't clear to me. Maybe someone has done\nsome more accurate analysis that could help here.\n\nBut before we talk about whether we should reduce our security to save\ncosts, we need to determine how much security we need and how much security\nwe have. Without good estimates with confident bounds, we simply can't make\nan informed decision to reduce security.\n\n> I don't think 99% of transactions need that level of security\n\nWell you can't get security for the 1% of transactions that need it without\ngiving that security to all transactions on the chain. Also, the blockchain\nsecurity created by miners isn't really a per transaction thing anyway. An\nattack would affect all bitcoins regardless of what transactions they do or\ndo not take part in.\n\nOn Sun, May 23, 2021 at 9:52 AM Karl via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> >> The turn-around time for that takes a population of both users and\n> >> miners to cause. Increasing popularity of bitcoin has a far bigger\n> >> impact here, and it is already raising fees and energy use at an\n> >> established rate.\n> >>\n> >> If it becomes an issue, as bandwidth increases block size could be\n> >> raised to lower fees.\n> >>\n> >\n> > Which increases block rewards somewhat (at least to some level that\n> matches\n> > the overall security of the network) and you still have the same amount\n> of\n> > energy consumed.\n>\n> If you mean to implicitly propose that even if halved all the way with\n> very large blocks, block rewards would just increase to the same\n> level, meaning that any attempt to decrease them has no effect, I\n> disagree.    I expect that if you raise the block size, eventually\n> there is so much supply for transactions that there are no fees at all\n> (nor security).  The numbers are all things the devs, miners, and\n> users can together control.\n>\n> > How to prove this is not happening?\n> > The best you can do is to have some number of authorities sign off on\n> > whether or not they are doing this.\n> > The problem is that authorities are bribeable.\n>\n> You could make the proof of work be a proof of environmental kindness\n> by coding incentives for people to place and verify proof on the\n> chain, and then rewarding people for acting on it as desired.  You\n> could code the chain to pay people to investigate and prove miners'\n> business practices, for example.  You could define the main chain as\n> one where everyone consents the proofs are valid.  There are a lot of\n> issues to resolve and it would be a very different chain.\n>\n> There is not a single solution here.  There are innumerable possible\n> solutions, any one of which could be made to work with enough brains\n> working on it.  To use one, we need to agree on what kinds of\n> solutions are acceptable.\n>\n> > Alternately, other entities in the locality can use force to require the\n> > polluting entity to clean up or suffer significant consequences.\n> > This at least is better incentive-wise, as they others in the same\n> locality\n> > are the ones most affected, but the ability to enforce may be difficult\n> due\n> > to various political constructions; the miners could be in such deep\n> cahoots\n> > with the local government that the local government would willingly hurt\n> > other local entities in the vicinity of the polluting entity.\n>\n> As bitcoin grows, if people ask some locality to enforce behavior,\n> they may need to be willing to enforce it themselves, too, or they\n> might outcompete the locality.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210524/8be26505/attachment-0001.html>"
            },
            {
                "author": "Erik Aronesty",
                "date": "2021-05-24T21:55:14",
                "message_text_only": ">  > I don't think 99% of transactions need that level of security\n\n>  Well you can't get security for the 1% of transactions that need it without giving that security to all transactions on the chain. Also, the blockchain security created by miners isn't really a per transaction thing anyway. An attack would affect all bitcoins regardless of what transactions they do or do not take part in.\n\nyes, and this is what lightning is for.   to secure the 99% of\ntransactions that *don't* need billions of dollars and years in lead\ntime of security.\n\nat current prices, and even with the current known issues, lightning\nis perfectly acceptable for small transactions."
            },
            {
                "author": "Karl",
                "date": "2021-05-25T00:55:34",
                "message_text_only": "If bitcoin were to ever consider changing their PoW algorithm a\nlittle, it seems that would immediately make purchased ASIC mining\nequipment partially or wholly unusable to compromise the chain (and\ntemporarily reduce energy usage without necessarily reducing\nsecurity).  One possible plan to deter a multibillionaire attack.\n\nAlso regarding the word \"security\" here, a 51% attack impacts some\nparts of chain operations, but not others.\n\nIt seems to me bitcoin's biggest vulnerabilities are either covert\ncompromise of mining pool operations, or widespread compromise of\nnetworked mining systems and client nodes.  Far easier than\noutcompeting the mining network with hardware.\n\nI don't see why it would necessarily be made public if a government\ncompromised their nation's mining farms.  Governments have skilled\noperatives for things like that.  People would guess it happened, and\nthe government would cover up the guesses with more powerful stories."
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-25T08:01:07",
                "message_text_only": ">  It seems to me bitcoin's biggest vulnerabilities are either covert\ncompromise of mining pool operations, or widespread compromise of networked\nmining systems and client node\n\nStratum v2 will solve the mining pool problem. Widespread compromise of\nmining systems seems far fetched. That would involve compromising hundreds\nof thousands or perhaps millions of systems in disparate areas with\ndisparate operating systems and security procedures, run by people who\nprobably understand computer security better than most (given their\ninvolvement in bitcoin).\n\nI think the biggest vulnerability bitcoin has is a sybil attack draining\nthe resources of public full nodes. We only have like 10,000 public full\nnodes serving the whole network. It wouldn't take that much money to create\na sybil botnet of 100,000 or 1 million nodes that connect to the bitcoin\nnetwork and simply take up public node resources, denying service to most\npeople's full nodes.\n\n> I don't see why it would necessarily be made public if a government\ncompromised their nation's mining farms. Governments have skilled\noperatives for things like that.\n\nSkilled operatives have their limits. It could be kept secret if spies were\nhired as employees and then systematically infected all the machines in a\nmining operation's machines. But spies aren't magic, no matter how skilled.\nOne mistake and the jig is up. It would be more likely to be a backroom\ndeal, which would be harder to keep secret, especially in large operations.\nPropaganda has its limits too, sure you could convince some people things\nare fine, but sophisticated people like miners? I doubt it.\n\n\n\nOn Mon, May 24, 2021 at 2:55 PM Karl <gmkarl at gmail.com> wrote:\n\n> If bitcoin were to ever consider changing their PoW algorithm a\n> little, it seems that would immediately make purchased ASIC mining\n> equipment partially or wholly unusable to compromise the chain (and\n> temporarily reduce energy usage without necessarily reducing\n> security).  One possible plan to deter a multibillionaire attack.\n>\n> Also regarding the word \"security\" here, a 51% attack impacts some\n> parts of chain operations, but not others.\n>\n> It seems to me bitcoin's biggest vulnerabilities are either covert\n> compromise of mining pool operations, or widespread compromise of\n> networked mining systems and client nodes.  Far easier than\n> outcompeting the mining network with hardware.\n>\n> I don't see why it would necessarily be made public if a government\n> compromised their nation's mining farms.  Governments have skilled\n> operatives for things like that.  People would guess it happened, and\n> the government would cover up the guesses with more powerful stories.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210524/e1b2cfe8/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2021-05-25T08:35:56",
                "message_text_only": "Your analysis is correct.\nIn perfect competition, profits tend to zero, which means the costs of\nmining tend to equal the reward.\nSince the reward is fees plus subsidy, reducing the subsidy should reduce\nmining costs.\n\nI think convincing other users we need such a softfork to reeuce the\nsubsidy is going to be hard though.\nEven among developers, these proposals seem to be kind of taboo, because\npeople tene to perceive them as \"attacking miners\".\nSadly the notion that miners decide consensus rules is pretty extended even\namong developers. The recent bip8(true) vs bip8(false) discussions are\nanundant evidence that this is the case. Most devs perceive that not giving\nminers veto power over proposals somehow means that then developers become\ndictators who can unilaterally decide the rules.\nThey don't accept the fact that it's users who decide the consensus rules.\nFor them, if it's not miners who decide, then it must be devs. That's\nbecause they see users as a bunch of uninformed imbeciles who can't\nunderstand anything or decide anything. And yet this arrogant position is\ncoming from people who seemingly don't understand section 11 of the\nwhitepaper when it says \"even with a hashrate majority, that doesn't allow\none to arbitrarily change the rules or forge signatures\" which can be\nsummarized to \"miners DO NOT decide the rules.\n\nGiven these deeps misunderstandings, most devs (and who knows how many\nusers) will consider a softfork to reduce mining subsidy \"impossible, since\nminers will oppose it\".\nThis incredibly sad situation is where we're at.\n\nI personally would be in favor of a softfork to reduce the subsidy. That\nwould hopefully pacify some of the people concerned with bitcoin's energy\nconsumption. Bitcoin ecologists should defend this and not \"proof of stake\"\nand other technical nonsense.\n\n\n\n\n\n\n\nOn Mon, May 24, 2021, 21:32 Billy Tetrud via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Before we can decide on tradeoffs that reduce security in favor of less\n> energy usage, or less inflation, or whatever goal you might have for\n> reducing (or delaying) coinbase rewards, we need to decide as a community\n> how much security bitcoin *needs*.\n>\n> Do we need to be secure against an attacker with a budget of $1\n> billion/year for an attack? $10 billion/year? More?\n>\n> An upper limit would be the budget of the largest government: the US. The\n> US federal budget is almost $5 trillion/year. But they certainly couldn't\n> spend all that budget attacking bitcoin. About $3 trillion of that is\n> mandatory spending, which couldn't be allocated to such an attack. About\n> $1.5 trillion is discretionary, which includes the military budget. It\n> seems like an upper limit on the amount that could be siphoned from that\n> budget to attack bitcoin would be 5%. That would take massive political\n> cooperation and wheeling and dealing. Likely spending that much would not\n> be politically feasible, but it seems possible, since a 5% reduction in\n> other activities is something other departments would likely be able to\n> sustain with just a bit of downsizing. Or that money could simply come from\n> more borrowing. 5% of $1.5 trillion is $75 billion. So that seems like a\n> pretty solid upper limit on the amount the US could allocate to an attack\n> in a year, in that it seems incredibly unlikely that more money than that\n> could be allocated. Such an expenditure might be eventually seen as\n> justified since the federal reserve has been inflating the supply of\n> dollars by 17.5% on average every year, which would be $1 trillion next\n> year (and more the next, etc). A similar story is told if you calculate the\n> amount of seigniorage banks get access to by their ability to use\n> fractional reserve to inflate the supply of M2 money.  It should be\n> considered tho that this seigniorage doesn't give its beneficiaries that\n> full value, but rather some fraction of that value - say 5% earned by being\n> first to buy with that new money and earning interest on it. So 5% of a\n> trillion is $50 billion. Still, over just two years, that's enough to pay\n> for an attack of at least that size ($75 billion).\n>\n> The budget for the government of China is about $3.6 trillion, the second\n> largest in the world. And since they're an authoritarian country, they can\n> basically do whatever they want with that money. It still seems unlikely\n> they would spend more than 5% of that budget on doing something like\n> attacking bitcoin. However, consider that China's M2 money supply has been\n> increasing at a rate of almost $3 trillion per year. Protecting the ability\n> to do this is seems like something worth spending some (printed) money on.\n> So perhaps at some point, spending 10 or 20% of their budget for a year or\n> two to attack bitcoin might seem like a good idea to some mickey mouse in\n> the government. That would be $720 billion/year.\n>\n> So given the amount of seigniorage taken in every year by these central\n> banks, it would seem to justify large expenditures. I'm not sure how\n> realistic it would be, politically speaking, to gather $720 billion in a\n> single year to attack bitcoin. It seems far fetched, even if the\n> seigniorage they're protecting seems to justify it.\n>\n> So is this the level of attack we want to be resilient to? Nearly a $1\n> trillion attack? I don't know. But we should figure that out as a\n> community. And keep in mind, the level of attack we need to defend against\n> depends on the size of bitcoin. The more valuable bitcoins are, the more\n> damaging, more lucrative, and more valuable an attack would be for\n> attackers. Its seems reasonable to assume that this is a linear\n> relationship - that if bitcoins are worth twice as much, we need twice as\n> much security (ie we want to make attacking bitcoin twice as costly).\n>\n> The next step is figuring out a reasonable lower bound for how much it\n> takes to attack bitcoin. There are many attacks that can be done on\n> bitcoin, but the one relevant to the discussion here is a 51% attack.\n> Bitcoin's PoW basically is attackable buy buying about 25% of the existing\n> mining power (for reasons like the selfish economic attack\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> and\n> the economic mining monopoly attack\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#economic-mining-monopoly-attack>),\n> which is about 40 exahashes/second.\n>\n> If you bought 400,000 WhatsMiner M30S+ rigs\n> <https://www.buybitcoinworldwide.com/mining/hardware/> at current market\n> price, you'd need $1 billion to buy them all (which doesn't include the\n> cost of setting up all that equipment, powering it, building the network\n> infrastructure for it, etc etc). Let's say all that infra doubles the price\n> to $2 billion. Even then, you couldn't simply buy half a million mining\n> rigs from the market. That many just aren't available. An attacker would\n> have to spend year and years building up their mining operation before they\n> could actually perform the attack. They'd basically have to mine at a\n> slight (probably insignificant) loss for that time. Their demand would push\n> up the price of these mining rigs for at least a year or two until supply\n> comes up to meet it. So lets say this doubles the price of the mining rigs\n> (it could very well do significantly more than that). That makes for $3\n> billion to build up this malicious mining operation. China could seize a\n> mining pool, but likely couldn't do it quietly. They'd have to seize the\n> pool and immediately use it to attack before miners stop using the pool\n> (which might take a week or two). Maybe this would save them half the cost?\n>\n> So, lower bound on cost of attack is $1.5 billion. Upper bound on US govt\n> attack is $72 billion. Upper bound on China govt attack is $720 billion. So\n> based on this back-of-the-napkin line of thinking, its not super clear that\n> reducing bitcoin's security is \"enough\" yet. There is also the question of:\n> does a $1 trillion currency need to be secure against a $720 billion\n> attack? Probably not. But should it be secure against a $10 billion attack?\n> Maybe.\n>\n> However, the security will go up with price. If bitcoin goes up by 10x, as\n> it is wont to do, that's nearly 10x the security (nearly, since coinbase\n> rewards 10x, but the real value of fees almost certainly wouldn't go up as\n> much). So that brings us to $15 billion of security. Still not clear\n> without doing some more accurate analysis to determine more confidence in\n> tighter bounds on cost of attack and likely attack budgets.\n>\n> But it certainly seems likely that my attack cost bounds are an order of\n> magnitude too low, and its equally possible my estimates of potential\n> available attack budgets are an order of magnitude too high. It doesn't\n> seem quite as likely the reverse is true (that my bounds aren't good\n> bounds).\n>\n> It seems possible that we currently have enough security, but seems\n> likelier that we don't. It just isn't clear to me. Maybe someone has done\n> some more accurate analysis that could help here.\n>\n> But before we talk about whether we should reduce our security to save\n> costs, we need to determine how much security we need and how much security\n> we have. Without good estimates with confident bounds, we simply can't make\n> an informed decision to reduce security.\n>\n> > I don't think 99% of transactions need that level of security\n>\n> Well you can't get security for the 1% of transactions that need it\n> without giving that security to all transactions on the chain. Also, the\n> blockchain security created by miners isn't really a per transaction thing\n> anyway. An attack would affect all bitcoins regardless of what transactions\n> they do or do not take part in.\n>\n> On Sun, May 23, 2021 at 9:52 AM Karl via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> >> The turn-around time for that takes a population of both users and\n>> >> miners to cause. Increasing popularity of bitcoin has a far bigger\n>> >> impact here, and it is already raising fees and energy use at an\n>> >> established rate.\n>> >>\n>> >> If it becomes an issue, as bandwidth increases block size could be\n>> >> raised to lower fees.\n>> >>\n>> >\n>> > Which increases block rewards somewhat (at least to some level that\n>> matches\n>> > the overall security of the network) and you still have the same amount\n>> of\n>> > energy consumed.\n>>\n>> If you mean to implicitly propose that even if halved all the way with\n>> very large blocks, block rewards would just increase to the same\n>> level, meaning that any attempt to decrease them has no effect, I\n>> disagree.    I expect that if you raise the block size, eventually\n>> there is so much supply for transactions that there are no fees at all\n>> (nor security).  The numbers are all things the devs, miners, and\n>> users can together control.\n>>\n>> > How to prove this is not happening?\n>> > The best you can do is to have some number of authorities sign off on\n>> > whether or not they are doing this.\n>> > The problem is that authorities are bribeable.\n>>\n>> You could make the proof of work be a proof of environmental kindness\n>> by coding incentives for people to place and verify proof on the\n>> chain, and then rewarding people for acting on it as desired.  You\n>> could code the chain to pay people to investigate and prove miners'\n>> business practices, for example.  You could define the main chain as\n>> one where everyone consents the proofs are valid.  There are a lot of\n>> issues to resolve and it would be a very different chain.\n>>\n>> There is not a single solution here.  There are innumerable possible\n>> solutions, any one of which could be made to work with enough brains\n>> working on it.  To use one, we need to agree on what kinds of\n>> solutions are acceptable.\n>>\n>> > Alternately, other entities in the locality can use force to require the\n>> > polluting entity to clean up or suffer significant consequences.\n>> > This at least is better incentive-wise, as they others in the same\n>> locality\n>> > are the ones most affected, but the ability to enforce may be difficult\n>> due\n>> > to various political constructions; the miners could be in such deep\n>> cahoots\n>> > with the local government that the local government would willingly hurt\n>> > other local entities in the vicinity of the polluting entity.\n>>\n>> As bitcoin grows, if people ask some locality to enforce behavior,\n>> they may need to be willing to enforce it themselves, too, or they\n>> might outcompete the locality.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/66077f2b/attachment-0001.html>"
            },
            {
                "author": "Melvin Carvalho",
                "date": "2021-05-25T08:53:40",
                "message_text_only": "On Mon, 24 May 2021 at 22:32, Billy Tetrud via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Before we can decide on tradeoffs that reduce security in favor of less\n> energy usage, or less inflation, or whatever goal you might have for\n> reducing (or delaying) coinbase rewards, we need to decide as a community\n> how much security bitcoin *needs*.\n>\n> Do we need to be secure against an attacker with a budget of $1\n> billion/year for an attack? $10 billion/year? More?\n>\n> An upper limit would be the budget of the largest government: the US. The\n> US federal budget is almost $5 trillion/year. But they certainly couldn't\n> spend all that budget attacking bitcoin. About $3 trillion of that is\n> mandatory spending, which couldn't be allocated to such an attack. About\n> $1.5 trillion is discretionary, which includes the military budget. It\n> seems like an upper limit on the amount that could be siphoned from that\n> budget to attack bitcoin would be 5%. That would take massive political\n> cooperation and wheeling and dealing. Likely spending that much would not\n> be politically feasible, but it seems possible, since a 5% reduction in\n> other activities is something other departments would likely be able to\n> sustain with just a bit of downsizing. Or that money could simply come from\n> more borrowing. 5% of $1.5 trillion is $75 billion. So that seems like a\n> pretty solid upper limit on the amount the US could allocate to an attack\n> in a year, in that it seems incredibly unlikely that more money than that\n> could be allocated. Such an expenditure might be eventually seen as\n> justified since the federal reserve has been inflating the supply of\n> dollars by 17.5% on average every year, which would be $1 trillion next\n> year (and more the next, etc). A similar story is told if you calculate the\n> amount of seigniorage banks get access to by their ability to use\n> fractional reserve to inflate the supply of M2 money.  It should be\n> considered tho that this seigniorage doesn't give its beneficiaries that\n> full value, but rather some fraction of that value - say 5% earned by being\n> first to buy with that new money and earning interest on it. So 5% of a\n> trillion is $50 billion. Still, over just two years, that's enough to pay\n> for an attack of at least that size ($75 billion).\n>\n> The budget for the government of China is about $3.6 trillion, the second\n> largest in the world. And since they're an authoritarian country, they can\n> basically do whatever they want with that money. It still seems unlikely\n> they would spend more than 5% of that budget on doing something like\n> attacking bitcoin. However, consider that China's M2 money supply has been\n> increasing at a rate of almost $3 trillion per year. Protecting the ability\n> to do this is seems like something worth spending some (printed) money on.\n> So perhaps at some point, spending 10 or 20% of their budget for a year or\n> two to attack bitcoin might seem like a good idea to some mickey mouse in\n> the government. That would be $720 billion/year.\n>\n> So given the amount of seigniorage taken in every year by these central\n> banks, it would seem to justify large expenditures. I'm not sure how\n> realistic it would be, politically speaking, to gather $720 billion in a\n> single year to attack bitcoin. It seems far fetched, even if the\n> seigniorage they're protecting seems to justify it.\n>\n> So is this the level of attack we want to be resilient to? Nearly a $1\n> trillion attack? I don't know. But we should figure that out as a\n> community. And keep in mind, the level of attack we need to defend against\n> depends on the size of bitcoin. The more valuable bitcoins are, the more\n> damaging, more lucrative, and more valuable an attack would be for\n> attackers. Its seems reasonable to assume that this is a linear\n> relationship - that if bitcoins are worth twice as much, we need twice as\n> much security (ie we want to make attacking bitcoin twice as costly).\n>\n> The next step is figuring out a reasonable lower bound for how much it\n> takes to attack bitcoin. There are many attacks that can be done on\n> bitcoin, but the one relevant to the discussion here is a 51% attack.\n> Bitcoin's PoW basically is attackable buy buying about 25% of the existing\n> mining power (for reasons like the selfish economic attack\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> and\n> the economic mining monopoly attack\n> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#economic-mining-monopoly-attack>),\n> which is about 40 exahashes/second.\n>\n\nAgree that it is valuable to find a reasonable lower bound to how much it\ntake to 'attack' bitcoin\n\nTwo observations:\n\n1. The security model of bitcoin is dual and heterogeneous.  There is both\na block subsidy and a fee model.  These are not like for like.  One is\nsteady, and one fluctuates.  You might make the analogy with steady nuclear\npower, and intermittent wind power.  That means that an attack is more\neffective when fees are at their lowest.  We observe that fees tend to\nbuild up during the week and are cleared during the weekend, right now.\nLess of an issue right now, but in 3, 7, 11 years fees will make up a\nlarger proportion of the total block reward, so maybe something to factor in\n\n2. From the point of view of bitcoin an 'attack' is simply making the chain\nstronger (or longer) by increasing the accumulated proof of work.  From the\npoint of view of applications that rely on bitcoin blocks (layer2,\nexchanges, markets etc.) a reorg could be seen as disruptive, requiring\nmore confirmations for larger transactions.  We might want to take a view\non what a planned 'attack' or regorg might look like.  Satoshi when he put\nthe first checkpoint in used 200 blocks as a guide.  Straw polling the\ncommunity on this question has lead me to believe that there is a wide\nrange of views on how large a reorg would constitute an attack\n\nIMHO it's valuable to work out what the community feels an attack might\nlook like, and a lower bound to the cost. over time.  Bearing in mind\nthere's going to be a wide spectrum of opinion, on the topic\n\nBut, given that there's not been a successful attack in the last decade, we\nprobably have a decent amount of time to figure this out\n\n\n>\n> If you bought 400,000 WhatsMiner M30S+ rigs\n> <https://www.buybitcoinworldwide.com/mining/hardware/> at current market\n> price, you'd need $1 billion to buy them all (which doesn't include the\n> cost of setting up all that equipment, powering it, building the network\n> infrastructure for it, etc etc). Let's say all that infra doubles the price\n> to $2 billion. Even then, you couldn't simply buy half a million mining\n> rigs from the market. That many just aren't available. An attacker would\n> have to spend year and years building up their mining operation before they\n> could actually perform the attack. They'd basically have to mine at a\n> slight (probably insignificant) loss for that time. Their demand would push\n> up the price of these mining rigs for at least a year or two until supply\n> comes up to meet it. So lets say this doubles the price of the mining rigs\n> (it could very well do significantly more than that). That makes for $3\n> billion to build up this malicious mining operation. China could seize a\n> mining pool, but likely couldn't do it quietly. They'd have to seize the\n> pool and immediately use it to attack before miners stop using the pool\n> (which might take a week or two). Maybe this would save them half the cost?\n>\n> So, lower bound on cost of attack is $1.5 billion. Upper bound on US govt\n> attack is $72 billion. Upper bound on China govt attack is $720 billion. So\n> based on this back-of-the-napkin line of thinking, its not super clear that\n> reducing bitcoin's security is \"enough\" yet. There is also the question of:\n> does a $1 trillion currency need to be secure against a $720 billion\n> attack? Probably not. But should it be secure against a $10 billion attack?\n> Maybe.\n>\n> However, the security will go up with price. If bitcoin goes up by 10x, as\n> it is wont to do, that's nearly 10x the security (nearly, since coinbase\n> rewards 10x, but the real value of fees almost certainly wouldn't go up as\n> much). So that brings us to $15 billion of security. Still not clear\n> without doing some more accurate analysis to determine more confidence in\n> tighter bounds on cost of attack and likely attack budgets.\n>\n> But it certainly seems likely that my attack cost bounds are an order of\n> magnitude too low, and its equally possible my estimates of potential\n> available attack budgets are an order of magnitude too high. It doesn't\n> seem quite as likely the reverse is true (that my bounds aren't good\n> bounds).\n>\n> It seems possible that we currently have enough security, but seems\n> likelier that we don't. It just isn't clear to me. Maybe someone has done\n> some more accurate analysis that could help here.\n>\n> But before we talk about whether we should reduce our security to save\n> costs, we need to determine how much security we need and how much security\n> we have. Without good estimates with confident bounds, we simply can't make\n> an informed decision to reduce security.\n>\n> > I don't think 99% of transactions need that level of security\n>\n> Well you can't get security for the 1% of transactions that need it\n> without giving that security to all transactions on the chain. Also, the\n> blockchain security created by miners isn't really a per transaction thing\n> anyway. An attack would affect all bitcoins regardless of what transactions\n> they do or do not take part in.\n>\n> On Sun, May 23, 2021 at 9:52 AM Karl via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> >> The turn-around time for that takes a population of both users and\n>> >> miners to cause. Increasing popularity of bitcoin has a far bigger\n>> >> impact here, and it is already raising fees and energy use at an\n>> >> established rate.\n>> >>\n>> >> If it becomes an issue, as bandwidth increases block size could be\n>> >> raised to lower fees.\n>> >>\n>> >\n>> > Which increases block rewards somewhat (at least to some level that\n>> matches\n>> > the overall security of the network) and you still have the same amount\n>> of\n>> > energy consumed.\n>>\n>> If you mean to implicitly propose that even if halved all the way with\n>> very large blocks, block rewards would just increase to the same\n>> level, meaning that any attempt to decrease them has no effect, I\n>> disagree.    I expect that if you raise the block size, eventually\n>> there is so much supply for transactions that there are no fees at all\n>> (nor security).  The numbers are all things the devs, miners, and\n>> users can together control.\n>>\n>> > How to prove this is not happening?\n>> > The best you can do is to have some number of authorities sign off on\n>> > whether or not they are doing this.\n>> > The problem is that authorities are bribeable.\n>>\n>> You could make the proof of work be a proof of environmental kindness\n>> by coding incentives for people to place and verify proof on the\n>> chain, and then rewarding people for acting on it as desired.  You\n>> could code the chain to pay people to investigate and prove miners'\n>> business practices, for example.  You could define the main chain as\n>> one where everyone consents the proofs are valid.  There are a lot of\n>> issues to resolve and it would be a very different chain.\n>>\n>> There is not a single solution here.  There are innumerable possible\n>> solutions, any one of which could be made to work with enough brains\n>> working on it.  To use one, we need to agree on what kinds of\n>> solutions are acceptable.\n>>\n>> > Alternately, other entities in the locality can use force to require the\n>> > polluting entity to clean up or suffer significant consequences.\n>> > This at least is better incentive-wise, as they others in the same\n>> locality\n>> > are the ones most affected, but the ability to enforce may be difficult\n>> due\n>> > to various political constructions; the miners could be in such deep\n>> cahoots\n>> > with the local government that the local government would willingly hurt\n>> > other local entities in the vicinity of the polluting entity.\n>>\n>> As bitcoin grows, if people ask some locality to enforce behavior,\n>> they may need to be willing to enforce it themselves, too, or they\n>> might outcompete the locality.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/51ca7794/attachment-0001.html>"
            },
            {
                "author": "Billy Tetrud",
                "date": "2021-05-25T19:40:58",
                "message_text_only": "@Phuoc \"Bitcoin, for now, is heading for destruction when inflation stops.\nAs a self-contained system, this happens when the block reward (plus fee)\ndecreases faster than the price rise.\"\n\nWell, the block reward decreases less and less in comparison to fees every\nhalving. So it seems reasonably likely that will never happen because of\nhalvings, but might happen because of increased on-chain space. Block space\ndoesn't have a linear relationship with fees. I believe at any given point\nin time, there should be an amount of on-chain space that will maximize\ntotal fees collected per block, and either less space or more space will\nreduce the total collected fees. I think at some point in the future, we\nwill have to find a way to modulate the blocksize in order to target a\nparticular band of security. I would be very surprised if fees couldn't\nsupport enough security in the system by themselves in that future, at the\nblocksize where maximum block reward occurs. Fees already contribute over\n10% of the block rewards.\n\n@Jorge \"Sadly the notion that miners decide consensus rules is pretty\nextended even among developers.\"\n\nWe don't currently have a good mechanism to decide by users in a verifiably\ndecentralized way. Polls are exploitable because of the Sybil problem (the\nvery problem bitcoin was invented to solve). I think one solution would be\nto have the ability for users to sign an upgrade support petition with\ntheir keys, proving how much coin supports the upgrade. The problem is\ndoing that now exposes people's public keys, which a lot of bitcoin has\nbeen designed to keep safe until used to spend. It seems more recent things\n(like in taproot) might be relaxing that protection, so I'm not sure what\nthe consensus on how important keeping public keys hidden is. But even if\nkeeping them hidden is important, we could create a new address that\nencodes two public keys: one for spending and one for signing upgrade\npetitions. That way people could expose the key for signing petitions\nwithout exposing the public key for spending. Of course, that itself would\nrequire a soft fork ; ) But there are real technical issues here. Saying\nthe devs are simply arrogantly dismissing the unwashed masses from upgrade\nconsensus gathering I don't think is something I've seen any evidence of.\n\n@Melvin Its interesting that you point out that one kind of block reward is\nsteady and the other fluctuates. I think you're saying that fees fluctuate\nand the coinbase rewards are steady. At first tho, I thought you might have\nmeant it the other way around ; ) On longer time scales (eg months rather\nthan days), fees have generally a more steady market-value than coinbase\nrewards, since price fluctuates a lot, but people almost certainly set fees\nsomewhat based on the buying power of the fee rather than the absolute\nbitcoin amount.\n\nBut I wouldn't think attacks are likely to be easier to perform at certain\ntimes of the week that fees are lowest. Do miners actually mine less on\ndays when fees are lower? I wouldn't think they do. They already bought all\nthe hardware for mining, they might as well use it. It seems unlikely that\nthe cost of electricity and wear on the hardware would exceed the block\nrewards even on low fee days. And looking to the future when there's no\nsignificant coinbase subsidy, it seems rather likely that the daily/hourly\nvariance of the fee market will reduce, since there's an economic incentive\nto delay transactions in order to pay a lower fee.\n\n> how large a reorg would constitute an attack\n\nSince the standard is 6 blocks, isn't 6 blocks sufficient for an attack to\nbe very disruptive? However, if an attack happens, the attacker likely has\n>50% hashpower and can create much longer reorgs if they want, so I'm not\nsure the length of the reorg is significant actually.\n\n\n\n\nOn Mon, May 24, 2021 at 10:53 PM Melvin Carvalho <melvincarvalho at gmail.com>\nwrote:\n\n>\n>\n> On Mon, 24 May 2021 at 22:32, Billy Tetrud via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Before we can decide on tradeoffs that reduce security in favor of less\n>> energy usage, or less inflation, or whatever goal you might have for\n>> reducing (or delaying) coinbase rewards, we need to decide as a community\n>> how much security bitcoin *needs*.\n>>\n>> Do we need to be secure against an attacker with a budget of $1\n>> billion/year for an attack? $10 billion/year? More?\n>>\n>> An upper limit would be the budget of the largest government: the US. The\n>> US federal budget is almost $5 trillion/year. But they certainly couldn't\n>> spend all that budget attacking bitcoin. About $3 trillion of that is\n>> mandatory spending, which couldn't be allocated to such an attack. About\n>> $1.5 trillion is discretionary, which includes the military budget. It\n>> seems like an upper limit on the amount that could be siphoned from that\n>> budget to attack bitcoin would be 5%. That would take massive political\n>> cooperation and wheeling and dealing. Likely spending that much would not\n>> be politically feasible, but it seems possible, since a 5% reduction in\n>> other activities is something other departments would likely be able to\n>> sustain with just a bit of downsizing. Or that money could simply come from\n>> more borrowing. 5% of $1.5 trillion is $75 billion. So that seems like a\n>> pretty solid upper limit on the amount the US could allocate to an attack\n>> in a year, in that it seems incredibly unlikely that more money than that\n>> could be allocated. Such an expenditure might be eventually seen as\n>> justified since the federal reserve has been inflating the supply of\n>> dollars by 17.5% on average every year, which would be $1 trillion next\n>> year (and more the next, etc). A similar story is told if you calculate the\n>> amount of seigniorage banks get access to by their ability to use\n>> fractional reserve to inflate the supply of M2 money.  It should be\n>> considered tho that this seigniorage doesn't give its beneficiaries that\n>> full value, but rather some fraction of that value - say 5% earned by being\n>> first to buy with that new money and earning interest on it. So 5% of a\n>> trillion is $50 billion. Still, over just two years, that's enough to pay\n>> for an attack of at least that size ($75 billion).\n>>\n>> The budget for the government of China is about $3.6 trillion, the second\n>> largest in the world. And since they're an authoritarian country, they can\n>> basically do whatever they want with that money. It still seems unlikely\n>> they would spend more than 5% of that budget on doing something like\n>> attacking bitcoin. However, consider that China's M2 money supply has been\n>> increasing at a rate of almost $3 trillion per year. Protecting the ability\n>> to do this is seems like something worth spending some (printed) money on.\n>> So perhaps at some point, spending 10 or 20% of their budget for a year or\n>> two to attack bitcoin might seem like a good idea to some mickey mouse in\n>> the government. That would be $720 billion/year.\n>>\n>> So given the amount of seigniorage taken in every year by these central\n>> banks, it would seem to justify large expenditures. I'm not sure how\n>> realistic it would be, politically speaking, to gather $720 billion in a\n>> single year to attack bitcoin. It seems far fetched, even if the\n>> seigniorage they're protecting seems to justify it.\n>>\n>> So is this the level of attack we want to be resilient to? Nearly a $1\n>> trillion attack? I don't know. But we should figure that out as a\n>> community. And keep in mind, the level of attack we need to defend against\n>> depends on the size of bitcoin. The more valuable bitcoins are, the more\n>> damaging, more lucrative, and more valuable an attack would be for\n>> attackers. Its seems reasonable to assume that this is a linear\n>> relationship - that if bitcoins are worth twice as much, we need twice as\n>> much security (ie we want to make attacking bitcoin twice as costly).\n>>\n>> The next step is figuring out a reasonable lower bound for how much it\n>> takes to attack bitcoin. There are many attacks that can be done on\n>> bitcoin, but the one relevant to the discussion here is a 51% attack.\n>> Bitcoin's PoW basically is attackable buy buying about 25% of the existing\n>> mining power (for reasons like the selfish economic attack\n>> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#the-selfish-economic-attack> and\n>> the economic mining monopoly attack\n>> <https://github.com/fresheneesz/quantificationOfConsensusProtocolSecurity#economic-mining-monopoly-attack>),\n>> which is about 40 exahashes/second.\n>>\n>\n> Agree that it is valuable to find a reasonable lower bound to how much it\n> take to 'attack' bitcoin\n>\n> Two observations:\n>\n> 1. The security model of bitcoin is dual and heterogeneous.  There is both\n> a block subsidy and a fee model.  These are not like for like.  One is\n> steady, and one fluctuates.  You might make the analogy with steady nuclear\n> power, and intermittent wind power.  That means that an attack is more\n> effective when fees are at their lowest.  We observe that fees tend to\n> build up during the week and are cleared during the weekend, right now.\n> Less of an issue right now, but in 3, 7, 11 years fees will make up a\n> larger proportion of the total block reward, so maybe something to factor in\n>\n> 2. From the point of view of bitcoin an 'attack' is simply making the\n> chain stronger (or longer) by increasing the accumulated proof of work.\n> From the point of view of applications that rely on bitcoin blocks (layer2,\n> exchanges, markets etc.) a reorg could be seen as disruptive, requiring\n> more confirmations for larger transactions.  We might want to take a view\n> on what a planned 'attack' or regorg might look like.  Satoshi when he put\n> the first checkpoint in used 200 blocks as a guide.  Straw polling the\n> community on this question has lead me to believe that there is a wide\n> range of views on how large a reorg would constitute an attack\n>\n> IMHO it's valuable to work out what the community feels an attack might\n> look like, and a lower bound to the cost. over time.  Bearing in mind\n> there's going to be a wide spectrum of opinion, on the topic\n>\n> But, given that there's not been a successful attack in the last decade,\n> we probably have a decent amount of time to figure this out\n>\n>\n>>\n>> If you bought 400,000 WhatsMiner M30S+ rigs\n>> <https://www.buybitcoinworldwide.com/mining/hardware/> at current market\n>> price, you'd need $1 billion to buy them all (which doesn't include the\n>> cost of setting up all that equipment, powering it, building the network\n>> infrastructure for it, etc etc). Let's say all that infra doubles the price\n>> to $2 billion. Even then, you couldn't simply buy half a million mining\n>> rigs from the market. That many just aren't available. An attacker would\n>> have to spend year and years building up their mining operation before they\n>> could actually perform the attack. They'd basically have to mine at a\n>> slight (probably insignificant) loss for that time. Their demand would push\n>> up the price of these mining rigs for at least a year or two until supply\n>> comes up to meet it. So lets say this doubles the price of the mining rigs\n>> (it could very well do significantly more than that). That makes for $3\n>> billion to build up this malicious mining operation. China could seize a\n>> mining pool, but likely couldn't do it quietly. They'd have to seize the\n>> pool and immediately use it to attack before miners stop using the pool\n>> (which might take a week or two). Maybe this would save them half the cost?\n>>\n>> So, lower bound on cost of attack is $1.5 billion. Upper bound on US govt\n>> attack is $72 billion. Upper bound on China govt attack is $720 billion. So\n>> based on this back-of-the-napkin line of thinking, its not super clear that\n>> reducing bitcoin's security is \"enough\" yet. There is also the question of:\n>> does a $1 trillion currency need to be secure against a $720 billion\n>> attack? Probably not. But should it be secure against a $10 billion attack?\n>> Maybe.\n>>\n>> However, the security will go up with price. If bitcoin goes up by 10x,\n>> as it is wont to do, that's nearly 10x the security (nearly, since coinbase\n>> rewards 10x, but the real value of fees almost certainly wouldn't go up as\n>> much). So that brings us to $15 billion of security. Still not clear\n>> without doing some more accurate analysis to determine more confidence in\n>> tighter bounds on cost of attack and likely attack budgets.\n>>\n>> But it certainly seems likely that my attack cost bounds are an order of\n>> magnitude too low, and its equally possible my estimates of potential\n>> available attack budgets are an order of magnitude too high. It doesn't\n>> seem quite as likely the reverse is true (that my bounds aren't good\n>> bounds).\n>>\n>> It seems possible that we currently have enough security, but seems\n>> likelier that we don't. It just isn't clear to me. Maybe someone has done\n>> some more accurate analysis that could help here.\n>>\n>> But before we talk about whether we should reduce our security to save\n>> costs, we need to determine how much security we need and how much security\n>> we have. Without good estimates with confident bounds, we simply can't make\n>> an informed decision to reduce security.\n>>\n>> > I don't think 99% of transactions need that level of security\n>>\n>> Well you can't get security for the 1% of transactions that need it\n>> without giving that security to all transactions on the chain. Also, the\n>> blockchain security created by miners isn't really a per transaction thing\n>> anyway. An attack would affect all bitcoins regardless of what transactions\n>> they do or do not take part in.\n>>\n>> On Sun, May 23, 2021 at 9:52 AM Karl via bitcoin-dev <\n>> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>>\n>>> >> The turn-around time for that takes a population of both users and\n>>> >> miners to cause. Increasing popularity of bitcoin has a far bigger\n>>> >> impact here, and it is already raising fees and energy use at an\n>>> >> established rate.\n>>> >>\n>>> >> If it becomes an issue, as bandwidth increases block size could be\n>>> >> raised to lower fees.\n>>> >>\n>>> >\n>>> > Which increases block rewards somewhat (at least to some level that\n>>> matches\n>>> > the overall security of the network) and you still have the same\n>>> amount of\n>>> > energy consumed.\n>>>\n>>> If you mean to implicitly propose that even if halved all the way with\n>>> very large blocks, block rewards would just increase to the same\n>>> level, meaning that any attempt to decrease them has no effect, I\n>>> disagree.    I expect that if you raise the block size, eventually\n>>> there is so much supply for transactions that there are no fees at all\n>>> (nor security).  The numbers are all things the devs, miners, and\n>>> users can together control.\n>>>\n>>> > How to prove this is not happening?\n>>> > The best you can do is to have some number of authorities sign off on\n>>> > whether or not they are doing this.\n>>> > The problem is that authorities are bribeable.\n>>>\n>>> You could make the proof of work be a proof of environmental kindness\n>>> by coding incentives for people to place and verify proof on the\n>>> chain, and then rewarding people for acting on it as desired.  You\n>>> could code the chain to pay people to investigate and prove miners'\n>>> business practices, for example.  You could define the main chain as\n>>> one where everyone consents the proofs are valid.  There are a lot of\n>>> issues to resolve and it would be a very different chain.\n>>>\n>>> There is not a single solution here.  There are innumerable possible\n>>> solutions, any one of which could be made to work with enough brains\n>>> working on it.  To use one, we need to agree on what kinds of\n>>> solutions are acceptable.\n>>>\n>>> > Alternately, other entities in the locality can use force to require\n>>> the\n>>> > polluting entity to clean up or suffer significant consequences.\n>>> > This at least is better incentive-wise, as they others in the same\n>>> locality\n>>> > are the ones most affected, but the ability to enforce may be\n>>> difficult due\n>>> > to various political constructions; the miners could be in such deep\n>>> cahoots\n>>> > with the local government that the local government would willingly\n>>> hurt\n>>> > other local entities in the vicinity of the polluting entity.\n>>>\n>>> As bitcoin grows, if people ask some locality to enforce behavior,\n>>> they may need to be willing to enforce it themselves, too, or they\n>>> might outcompete the locality.\n>>> _______________________________________________\n>>> bitcoin-dev mailing list\n>>> bitcoin-dev at lists.linuxfoundation.org\n>>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/b56ca218/attachment-0001.html>"
            },
            {
                "author": "Phuoc Do",
                "date": "2021-05-24T22:03:32",
                "message_text_only": "I think security and inflation are intertwined aspects of a monetary system\n[1]. They are both necessary. Many Bitcoin articles discussed energy and\nsecurity. More energy translates to more security. The other dimension is\ninflation. Bitcoin block reward is constant and reduced every 4 years. But\nits price has increased exponentially. The price rise compensates for\nreduced inflation.\n\nI don't think a fee market is enough to sustain the system. Bitcoin, for\nnow, is heading for destruction when inflation stops. As a self-contained\nsystem, this happens when the block reward (plus fee) decreases faster than\nthe price rise. The Fed has an inflation target of 2% per year. This is\nconventional wisdom. The USD M2 money base historically grows at 7% per\nyear [2]. We didn't know why inflation is necessary. I think Bitcoin shows\nus that inflation and security are related. Inflation ensures there'll be\nsecurity.\n\nWithout inflation, the system will collapse. Cutting block rewards will\nreduce energy spend. But it likely will destroy the system. Instead, we\nneed to ask:\n\n1. How much energy we should spend on mining?\n2. How we can use renewable energy?\n\n[1] https://bitflate.org/post/2021/05/21/inflation-and-security.html\n[2] https://ycharts.com/indicators/us_m2_money_supply_yoy\n\nOn Sun, May 23, 2021 at 1:49 AM James Lu via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Background\n> ===\n> Reducing the block reward reduces the incentive to mine. It reduces the\n> maximum energy price at which mining is profitable, reducing the energy use.\n>\n> Bitcoins have value because they are accepted by full node users, from\n> individual node operators, to exchanges and custodians like Coinbase.\n> Anything else and the Bitcoins don't exist and are worthless. Like all\n> currencies, Bitcoin has value because others recognize that they have value.\n>\n> Idea\n> ===\n> Reduce the block reward by adding fewer coins to the UTXO set per block.\n> This should be done gradually\n>\n> Consensus layer\n> ===\n> This is a soft fork, because it tightens the\n>\n> Some Possible Weaknesses\n> ===\n> - It will cost less than a nation-state of energy to reverse recent\n> Bitcoin transactions.\n> - Some miners may protest and lobby exchanges.\n> - By pushing mining towards the cheapest energy sources, centralization\n> increases towards Chinese miners.\n> - The Bitcoin network may split if consensus is not built before flag day.\n>\n> However, given the current political headwinds and widespread public\n> discussion around Bitcoin's energy use, it may be socially possible to\n> ask individual users and major exchanges to install a version of Bitcoin\n> with a reduced block reward.\n>\n> Alternatives\n> ===\n> Instead of outright rejecting transactions (and the blocks that contain\n> them) that attempt to spend increased block rewards, treat them as no-ops.\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n\n\n-- \nPhuoc Do\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210524/c6acfbca/attachment-0001.html>"
            }
        ],
        "thread_summary": {
            "title": "Reducing block reward via soft fork",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "James Lu",
                "Anton Ragin",
                "Karl",
                "ZmnSCPxj",
                "Jorge Tim\u00f3n",
                "Erik Aronesty",
                "Melvin Carvalho",
                "Phuoc Do",
                "Billy Tetrud"
            ],
            "messages_count": 14,
            "total_messages_chars_count": 78996
        }
    },
    {
        "title": "[bitcoin-dev] Fwd:  Reducing block reward via soft fork",
        "thread_messages": [
            {
                "author": "James Lu",
                "date": "2021-05-23T14:40:31",
                "message_text_only": "> Well, it is done automatically every 4 years :)\nBitcoin's price has always been increasing exponentially faster than the\nblock size has been exponentially decreasing.\n\n> It is a self-balancing system - more people shout about Bitcoin being\ndirty -> less adoption -> lower the price -> less energy consumption.\nSurely we can strive for adoption and be environmentally friendly?\n\nBitcoin currently consumes as much power as a small nation-state, giving it\nnation-state security. A 51% attack can reverse recent transactions. I\ndon't think 99% of transactions need that level of security\u2013 and if we\ndon't improve environmental-friendliness, adoption will decrease, so the\nprice will decrease, so less mining will happen, so security will be hurt\nanyway.\n\n> I am all for making Bitcoin green(er), but IMHO there shall be no\nshort-termism of the sort \"Elon complained + price dropped 40% - lets go\nradically change things\".\nI agree, Bitcoin shouldn't do anything just because a celebrity said\nsomething. However, this would be the ideal time to make such a change,\nriding off the public attitude to build social consensus around such a\nchange.\n\nAlso, this reduces inflation, good for Bitcoin hodlers ;)\n\n> IMHO if we want to make BTC cleaner we can add functionality where users\ncan prioritise some miners over the others, with the view that users will\nprioritise \"green\" miners and they will get more TX fees, and there will be\neconomic incentive to go green.\nThis proposal would be great too.\n\nOn Sun, May 23, 2021 at 6:42 AM Anton Ragin <anton at etc-group.com> wrote:\n\n> Well, it is done automatically every 4 years :) It is a self-balancing\n> system - more people shout about Bitcoin being dirty -> less adoption ->\n> lower the price -> less energy consumption. Add on top the fact that in\n> 2024 block rewards will fall 50% anyway and someday it will be zero.\n>\n> I am all for making Bitcoin green(er), but IMHO there shall be no\n> short-termism of the sort \"Elon complained + price dropped 40% - lets go\n> radically change things\".\n>\n> IMHO if we want to make BTC cleaner we can add functionality where users\n> can prioritise some miners over the others, with the view that users will\n> prioritise \"green\" miners and they will get more TX fees, and there will be\n> economic incentive to go green.\n>\n> On Sun, 23 May 2021, 09:49 James Lu via bitcoin-dev, <\n> bitcoin-dev at lists.linuxfoundation.org> wrote:\n>\n>> Background\n>> ===\n>> Reducing the block reward reduces the incentive to mine. It reduces the\n>> maximum energy price at which mining is profitable, reducing the energy use.\n>>\n>> Bitcoins have value because they are accepted by full node users, from\n>> individual node operators, to exchanges and custodians like Coinbase.\n>> Anything else and the Bitcoins don't exist and are worthless. Like all\n>> currencies, Bitcoin has value because others recognize that they have value.\n>>\n>> Idea\n>> ===\n>> Reduce the block reward by adding fewer coins to the UTXO set per block.\n>> This should be done gradually\n>>\n>> Consensus layer\n>> ===\n>> This is a soft fork, because it tightens the\n>>\n>> Some Possible Weaknesses\n>> ===\n>> - It will cost less than a nation-state of energy to reverse recent\n>> Bitcoin transactions.\n>> - Some miners may protest and lobby exchanges.\n>> - By pushing mining towards the cheapest energy sources, centralization\n>> increases towards Chinese miners.\n>> - The Bitcoin network may split if consensus is not built before flag day.\n>>\n>> However, given the current political headwinds and widespread public\n>> discussion around Bitcoin's energy use, it may be socially possible to\n>> ask individual users and major exchanges to install a version of Bitcoin\n>> with a reduced block reward.\n>>\n>> Alternatives\n>> ===\n>> Instead of outright rejecting transactions (and the blocks that contain\n>> them) that attempt to spend increased block rewards, treat them as no-ops.\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/01f83735/attachment-0001.html>"
            }
        ],
        "thread_summary": {
            "title": "Fwd:  Reducing block reward via soft fork",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "James Lu"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 4288
        }
    },
    {
        "title": "[bitcoin-dev] Tweaking tapscript instead of public key",
        "thread_messages": [
            {
                "author": "vjudeu",
                "date": "2021-05-23T16:02:45",
                "message_text_only": "As far as I know, P2TR address contains 32-byte public key. It can be used directly by creating Schnorr signature or indirectly, by revealing tapscript. Does it mean that any taproot output could be modified on-the-fly after being confirmed without changing an address? I mean, if we have base point as the private key with P2TR address tb1p0xlxvlhemja6c4dqv22uapctqupfhlxm9h8z3k2e72q4k9hcz7vqqzj3dz, then the owner of that key can modify spending conditions without moving on-chain coins?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/ef943c18/attachment.html>"
            },
            {
                "author": "Ruben Somsen",
                "date": "2021-05-23T17:58:13",
                "message_text_only": "Hi,\n\nThat's an excellent question, but note that answering such questions is not\nthe primary function of this mailing list. Places like Bitcoin Stack\nExchange or even IRC are probably better for that!\n\nSpecific to your question: in Taproot Q = P + hash(P||m)*G. The fact that P\nis hashed together with the message, makes it a commitment. If you try to\nchange m to e.g. m2, then Q - hash(P||m2) will never result in P (unless\nthe hash function is broken).\n\nThe original Taproot thread can be found here:\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015614.html\n\nCheers,\nRuben\n\nOn Sun, May 23, 2021 at 7:10 PM vjudeu via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> As far as I know, P2TR address contains 32-byte public key. It can be used\n> directly by creating Schnorr signature or indirectly, by revealing\n> tapscript. Does it mean that any taproot output could be modified\n> on-the-fly after being confirmed without changing an address? I mean, if we\n> have base point as the private key with P2TR address\n> tb1p0xlxvlhemja6c4dqv22uapctqupfhlxm9h8z3k2e72q4k9hcz7vqqzj3dz, then the\n> owner of that key can modify spending conditions without moving on-chain\n> coins?\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210523/ad739d66/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Tweaking tapscript instead of public key",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "vjudeu",
                "Ruben Somsen"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 2254
        }
    },
    {
        "title": "[bitcoin-dev] Improvement on Blockbuilding",
        "thread_messages": [
            {
                "author": "Murch",
                "date": "2021-05-25T14:27:06",
                "message_text_only": "Hi Bitcoin Devs,\n\nWe are writing to share with you a suggested improvement to the current\nbitcoin core block building algorithm. In short, currently Bitcoin Core\nuses a straightforward greedy algorithm which evaluates each\ntransaction\u2019s effective fee rate in the context of its unconfirmed\nancestors. This overlooks situations in which multiple descendant\ntransactions could be grouped with their shared ancestors to form a more\nattractive transaction set for block inclusion.\n\nFor example, if we have 4 transactions A,B,C, and D, with fee rates and\nweights as follows\n\nTx Fee Weight\nA    5    1\nB   10    1\nC   15    1\nD   14    1\n\nAnd dependencies:\n\u2022 B is a descendant of A\n\u2022 C is a descendant of B\n\u2022 D is a descendant of A\nThe current algorithm will consider {A,B,C} best which has an effective\nfee rate of 10. Our suggested algorithm will also consider {A,B,C,D},\nwhich has an effective fee rate of 11.\n\nExperimental data shows that our suggested algorithm did better on more\nthan 94% of blocks (99% for times of high congestion). We have also\ncompared the results to CBC and SAT Linear Programming solvers. The LP\nsolvers did slightly better, at the price of longer running times. Greg\nMaxwell has also studied LP solvers in the past, and his results suggest\nthat better running times are possible.\n\nThe full details are given in this document, and we are happy to hear\nany comment, critic or suggestion!\n\nBest,\nMark and Clara\n\nFull details:\nhttps://gist.github.com/Xekyo/5cb413fe9f26dbce57abfd344ebbfaf2#file-candidate-set-based-block-building-md\n\nResearch Code:\nhttps://github.com/Xekyo/blockbuilding\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 833 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210525/6e8d2ba1/attachment.sig>"
            },
            {
                "author": "Antoine Riard",
                "date": "2021-05-29T06:32:53",
                "message_text_only": "Hi Mark and Clara,\n\nGreat research, thanks for it!\n\nFew questions out of mind after a first read.\n\n> This approach enables block building to consider Child Pays For Parent\n(CPFP) constellations.\n\nI think that's a really interesting point, it's likely that such\ntransaction graphs with multiple disjunctive branches become far more\nregular in the future. One can think about OP_CTV's style\ncongestion-tree, LN's splicing or chain of coinjoins. If this phenomenon\nhappens, can you expect CSB feerate perf to improve ?\n\n> CSB is more complex and requires more computation\n\nLet's say a malicious miner identifies and connects to its competitors'\nmempools then starts to broadcast to them hard-to-traverse CPFP\nconstellations. Doing so, this malicious miner would prevent them either\nfrom assembling block templates at all or slow down their assemblage\ncomputation enough to gain an advantage in fee collection. Following\ncurrent mempools limits, it would be relevant to know by how much CSB makes\nthat kind of DoS possible/efficient.\n\n> From the point of view of global blockspace demand, if miners generally\nbecame DPFA-sensitive,\nit could encourage creation of additional transactions for the sole purpose\nof bumping stuck ancestors.\n\nAs ASB's ancestor set and CSB's candidate set, a fee bidder, we'll have to\npay the feerate to cover the new transaction fields, high enough to catch\nup with the already-present feerate set ? Likely more feerate efficient to\nRBF the first child, though you have to swallow the replacement feerate\npenalty (default 1 sat/vbyte iirc)\n\nAntoine\n\nLe mar. 25 mai 2021 \u00e0 10:34, Murch via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> a \u00e9crit :\n\n> Hi Bitcoin Devs,\n>\n> We are writing to share with you a suggested improvement to the current\n> bitcoin core block building algorithm. In short, currently Bitcoin Core\n> uses a straightforward greedy algorithm which evaluates each\n> transaction\u2019s effective fee rate in the context of its unconfirmed\n> ancestors. This overlooks situations in which multiple descendant\n> transactions could be grouped with their shared ancestors to form a more\n> attractive transaction set for block inclusion.\n>\n> For example, if we have 4 transactions A,B,C, and D, with fee rates and\n> weights as follows\n>\n> Tx Fee Weight\n> A    5    1\n> B   10    1\n> C   15    1\n> D   14    1\n>\n> And dependencies:\n> \u2022 B is a descendant of A\n> \u2022 C is a descendant of B\n> \u2022 D is a descendant of A\n> The current algorithm will consider {A,B,C} best which has an effective\n> fee rate of 10. Our suggested algorithm will also consider {A,B,C,D},\n> which has an effective fee rate of 11.\n>\n> Experimental data shows that our suggested algorithm did better on more\n> than 94% of blocks (99% for times of high congestion). We have also\n> compared the results to CBC and SAT Linear Programming solvers. The LP\n> solvers did slightly better, at the price of longer running times. Greg\n> Maxwell has also studied LP solvers in the past, and his results suggest\n> that better running times are possible.\n>\n> The full details are given in this document, and we are happy to hear\n> any comment, critic or suggestion!\n>\n> Best,\n> Mark and Clara\n>\n> Full details:\n>\n> https://gist.github.com/Xekyo/5cb413fe9f26dbce57abfd344ebbfaf2#file-candidate-set-based-block-building-md\n>\n> Research Code:\n> https://github.com/Xekyo/blockbuilding\n>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210529/a2f7875d/attachment.html>"
            },
            {
                "author": "Jorge Tim\u00f3n",
                "date": "2021-05-29T15:04:57",
                "message_text_only": "Sounds really interesting, thanks. Making CPFP reliable would be very nice\nin my opinion.\n\nOn Sat, May 29, 2021, 14:24 Antoine Riard via bitcoin-dev <\nbitcoin-dev at lists.linuxfoundation.org> wrote:\n\n> Hi Mark and Clara,\n>\n> Great research, thanks for it!\n>\n> Few questions out of mind after a first read.\n>\n> > This approach enables block building to consider Child Pays For Parent\n> (CPFP) constellations.\n>\n> I think that's a really interesting point, it's likely that such\n> transaction graphs with multiple disjunctive branches become far more\n> regular in the future. One can think about OP_CTV's style\n> congestion-tree, LN's splicing or chain of coinjoins. If this phenomenon\n> happens, can you expect CSB feerate perf to improve ?\n>\n> > CSB is more complex and requires more computation\n>\n> Let's say a malicious miner identifies and connects to its competitors'\n> mempools then starts to broadcast to them hard-to-traverse CPFP\n> constellations. Doing so, this malicious miner would prevent them either\n> from assembling block templates at all or slow down their assemblage\n> computation enough to gain an advantage in fee collection. Following\n> current mempools limits, it would be relevant to know by how much CSB makes\n> that kind of DoS possible/efficient.\n>\n> > From the point of view of global blockspace demand, if miners generally\n> became DPFA-sensitive,\n> it could encourage creation of additional transactions for the sole\n> purpose of bumping stuck ancestors.\n>\n> As ASB's ancestor set and CSB's candidate set, a fee bidder, we'll have to\n> pay the feerate to cover the new transaction fields, high enough to catch\n> up with the already-present feerate set ? Likely more feerate efficient to\n> RBF the first child, though you have to swallow the replacement feerate\n> penalty (default 1 sat/vbyte iirc)\n>\n> Antoine\n>\n> Le mar. 25 mai 2021 \u00e0 10:34, Murch via bitcoin-dev <\n> bitcoin-dev at lists.linuxfoundation.org> a \u00e9crit :\n>\n>> Hi Bitcoin Devs,\n>>\n>> We are writing to share with you a suggested improvement to the current\n>> bitcoin core block building algorithm. In short, currently Bitcoin Core\n>> uses a straightforward greedy algorithm which evaluates each\n>> transaction\u2019s effective fee rate in the context of its unconfirmed\n>> ancestors. This overlooks situations in which multiple descendant\n>> transactions could be grouped with their shared ancestors to form a more\n>> attractive transaction set for block inclusion.\n>>\n>> For example, if we have 4 transactions A,B,C, and D, with fee rates and\n>> weights as follows\n>>\n>> Tx Fee Weight\n>> A    5    1\n>> B   10    1\n>> C   15    1\n>> D   14    1\n>>\n>> And dependencies:\n>> \u2022 B is a descendant of A\n>> \u2022 C is a descendant of B\n>> \u2022 D is a descendant of A\n>> The current algorithm will consider {A,B,C} best which has an effective\n>> fee rate of 10. Our suggested algorithm will also consider {A,B,C,D},\n>> which has an effective fee rate of 11.\n>>\n>> Experimental data shows that our suggested algorithm did better on more\n>> than 94% of blocks (99% for times of high congestion). We have also\n>> compared the results to CBC and SAT Linear Programming solvers. The LP\n>> solvers did slightly better, at the price of longer running times. Greg\n>> Maxwell has also studied LP solvers in the past, and his results suggest\n>> that better running times are possible.\n>>\n>> The full details are given in this document, and we are happy to hear\n>> any comment, critic or suggestion!\n>>\n>> Best,\n>> Mark and Clara\n>>\n>> Full details:\n>>\n>> https://gist.github.com/Xekyo/5cb413fe9f26dbce57abfd344ebbfaf2#file-candidate-set-based-block-building-md\n>>\n>> Research Code:\n>> https://github.com/Xekyo/blockbuilding\n>>\n>> _______________________________________________\n>> bitcoin-dev mailing list\n>> bitcoin-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>>\n> _______________________________________________\n> bitcoin-dev mailing list\n> bitcoin-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210529/e817c2eb/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Improvement on Blockbuilding",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Antoine Riard",
                "Jorge Tim\u00f3n",
                "Murch"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 9888
        }
    },
    {
        "title": "[bitcoin-dev] Wallet fingerprinting and other privacy issues in Bitcoin Core",
        "thread_messages": [
            {
                "author": "Prayank",
                "date": "2021-05-26T14:47:43",
                "message_text_only": "Hello World,\n\nThere are other privacy issues in Core (node and wallet) but recently I came across one which can be used to identify if someone is using Bitcoin Core with just the bitcoin address and couple of transactions. I think people have already given up and don't expect privacy in Core wallet especially developers. However, below information may help some users who are not aware of this specific issue and developers who are using Bitcoin Core wallet in their project.\n\nIssue is explained here:\u00a0https://github.com/bitcoin/bitcoin/issues/22018\n\nEven if there exists another wallet with similar behavior, it can affect privacy in some cases. Example: Alice is spying on Bob and collecting as much information as possible. She looks at social media accounts for Bob and thinks he might be using one of the wallets mentioned in PoC. She can confirm if Bob is using Bitcoin Core wallet by sending 2 small amounts to one of the address in different transactions. One transaction should have really low fee rate that it doesn't get confirmed.\u00a0\n\nI found this issue while reviewing PR:\u00a0https://github.com/bitcoin/bitcoin/pull/18418\n\nIt was also discussed in a 'Core Review PR club' meeting recently:\u00a0https://bitcoincore.reviews/18418\n\nAlso there are 2 things that helps identify wallet using address: 1. Can't spend unconfirmed UTXO 2.\u00a0OUTPUT_GROUP_MAX_ENTRIES\n\nOUTPUT_GROUP_MAX_ENTRIES was 10 earlier and 100 after PR #18418 got merged. This will help in confirming if someone is using latest Bitcoin Core once it is available in next release. Example: Alice is using Bitcoin Core v0.21.0 and Bob is using Bitcoin Core v0.22.0 Carol is the attacker and other two are victims. Carol sends small amounts to same address in 11 transactions to both and confirms Bob is using latest Bitcoin Core wallet while Alice is using an older version.\n\nI will try to fix both 1 and 2 which can take few days and maybe never get merged. IMO 1 can be fixed by locking all UTXOs associated with a scriptpubkey until all are confirmed. UTXO locks are stored in memory only so will have to change that first. 2 can be fixed by using an approach similar to Electrum (All or None)\n\n-- \n Prayank\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210526/77bb4f78/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Wallet fingerprinting and other privacy issues in Bitcoin Core",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "Prayank"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2356
        }
    },
    {
        "title": "[bitcoin-dev] A Stroll through Fee-Bumping Techniques : Input-Based vs Child-Pay-For-Parent",
        "thread_messages": [
            {
                "author": "Antoine Riard",
                "date": "2021-05-27T20:14:13",
                "message_text_only": "Hi,\n\nThis post is pursuing a wider discussion around better fee-bumping\nstrategies for second-layer protocols. It draws out a comparison between\ninput-based and CPFP fee-bumping techniques, and their apparent trade-offs\nin terms of onchain footprint, tx-relay bandwidth rebroadcast, batching\nopportunity and mempool flexibility.\n\nThanks to Darosior for reviews, ideas and discussions.\n\n## Child-Pay-For-Parent\n\nCPFP is a mature fee-bumping technique, known and used for a while in the\nBitcoin ecosystem. However, its usage in contract protocols with\ndistrusting counterparties raised some security issues. As mempool's chain\nof unconfirmed transactions are limited in size, if any output is spendable\nby any contract participant, it can be leveraged as a pinning vector to\ndowngrade odds of transaction confirmation [0].\n\nThat said, contract transactions interested to be protected under the\ncarve-out logic require to add a new output for any contract participant,\neven if ultimately only one of them serves as an anchor to attach a CPFP.\n\n## Input-Based\n\nI think input-based fee-bumping has been less studied as fee-bumping\nprimitive for L2s [1]. One variant of input-based fee-bumping usable today\nis the leverage of the SIGHASH_ANYONECANPAY/SIGHASH_SINGLE malleability\nflags. If the transaction is the latest stage of the contract, a bumping\ninput can be attached just-in-time, thus increasing the feerate of the\nwhole package.\n\nHowever, as of today, input-based fee-bumping doesn't work to bump first\nstages of contract transactions as it's destructive of the txid, and as\nsuch breaks chain of pre-signed transactions. A first improvement would be\nthe deployment of the SIGHASH_ANYPREVOUT softfork proposal. This new\nmalleability flag allows a transaction to be signed without reference to\nany specific previous output. That way,  spent transactions can be\nfee-bumped without altering validity of the chain of transactions.\n\nEven assuming SIGHASH_ANYPREVOUT, if the first stage contract transaction\nincludes multiple outputs (e.g the LN's commitment tx has multiple HTLC\noutputs), SIGHASH_SINGLE can't be used and the fee-bumping input value\nmight be wasted. This edge can be smoothed by broadcasting a preliminary\nfan-out transaction with a set of outputs providing a range of feerate\npoints for the bumped transaction.\n\nThis overhead could be smoothed even further in the future with more\nadvanced sighash malleability flags like SIGHASH_IOMAP, allowing\ntransaction signers to commit to a map of inputs/outputs [2]. In the\ncontext of input-based, the overflowed fee value could be redirected to an\noutgoing output.\n\n## Onchain Footprint\n\nCPFP: One anchor output per participant must be included in the commitment\ntransaction. To this anchor must be attached a child transaction with 2\ninputs (one for the commitment, one for the bumping utxo) and 1 output.\nOnchain footprint: 2 inputs + 3 outputs.\n\nInput-based (today): If the bumping utxo is offering an adequate feerate\npoint in function of network mempools congestion at time of broadcast, only\n1 input. If a preliminary fan-out transaction to adjust feerate point must\nbe broadcasted first, 1 input and 2 outputs more must be accounted for.\nOnchain footprint: 2 inputs + 3 outputs.\n\nInput-based (SIGHASH_ANYPREVOUT+SIGHASH_IOMAP): As long as the bumping\nutxo's value is wide enough to cover the worst-case of mempools congestion,\nthe bumped transaction can be attached 1 input and 1 output. Onchain\nfootprint: 1 input + 1 output.\n\n## Tx-Relay Bandwidth Rebroadcast\n\nCPFP: In the context of multi-party protocols, we should assume bounded\nrationality of the participants w.r.t to an unconfirmed spend of the\ncontract utxo across network mempools. Under this assumption, the bumped\ntransaction might have been replaced by a concurrent state. To guarantee\nefficiency of the CPFP the whole chain of transactions should be\nrebroadcast, perhaps wasting bandwidth consumption for a still-identical\nbumped transaction [3]. Rebroadcast footprint: the whole chain of\ntransactions.\n\nInput-based (today): In case of rebroadcast, the fee-bumping input is\nattached to the root of the chain of transactions and as such breaks the\nchain validity in itself. Beyond the rebroadcast of the updated root under\nreplacement policy, the remaining transactions must be updated and\nrebroadcast. Rebroadcast footprint: the whole chain of transactions.\n\nInput-based(SIGHASH_ANYPREVOUT+SIGHASH_IOMAP): In case of rebroadcast, the\nfee-bumping is attached to the root of the chain of transactions but it\ndoesn't break the chain validity in itself. Assuming a future mempool\nacceptance logic to authorize in-place substitution, the rest of the chain\ncould be preserved. Rebroadcast footprint: the root of the chain of\ntransactions.\n\n## Fee-Bumping Batching\n\nCPFP: In the context of multi-party protocols, in optimistic scenarios, we\ncan assume aggregation of multiple chains of transactions. For e.g, a LN\noperator is desirous to non-cooperatively close multiple channels at the\nsame time and would like to combine their fee-bumping. With CPFP, one\nanchor output and one bumping input must be consumed per aggregated chain,\neven if the child transaction fields can be shared. Batching perf: 1\ninput/1 output per aggregated chain.\n\nInput-based (today): Unless the contract allows interactivity, multiple\nchains of transactions cannot be aggregated. One bumping input must be\nattached per chain, though if a preliminary fan-out transaction is relied\non to offer multiple feerate points, transaction fields can be shared.\nBatching perf: 1 input/1 output per aggregated chain.\n\nInput-based (SIGHASH_ANYPREVOUT+SIGHASH_IOMAP): Multiple chains of\ntransactions might be aggregated together *non-interactively*. One bumping\ninput and outgoing output can be attached to the aggregated root. Batching\nperf: 1 input/1 output per aggregation.\n\n## Fee-Bumping Mempool Flexibility\n\nCPFP: In the context of multi-party protocols, one of your counterparties\nmight build a branch of transactions from one of the root outputs thus\nsaturating the in-mempool package limits. To avoid these shenanigans, LN\nchannels are relying on the carve-out mechanism. Though, the carve-out\nmechanism includes its own limitation and doesn't scale beyond 2 contract\nparticipants.\n\nInput-based: The root of the chain of transaction is the package's oldest\nancestor, so package limits don't restrain its acceptance and it works\nwhatever the number of contract participants.\n\nTo conclude, this post scores 2 fee-bumping primitives for multi-party\nprotocols on a range of factors. It hopes to unravel the ground for a real\nfeerate performance framework of second-layers protocols .\n\nBeyond that, few points can be highlighted a) future soft forks allow\nsignificant onchain footprint savings, especially in case of batching, b)\nfuture package relay bandwidth efficiency should account for rebroadcast\nfrequency of CPFPing multi-party protocols. On this latter point one\nfollow-up might be to evaluate differing package relay *announcement*\nschemes in function of odds of non-cooperative protocol broadcast/odds of\nconcurrent broadcast/rebroadcast frequencies.\n\nThoughts ?\n\nCheers,\nAntoine\n\n[0]\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html\n[1] Beyond the revault architecture :\nhttps://github.com/revault/practical-revault/blob/master/revault.pdf\n[2] Already proposed a while back :\nhttps://bitcointalk.org/index.php?topic=252960.0\n[3] In theory, an already-relayed transaction shouldn't pass Core's\n`filterInventoryKnown`. In practice, if the transaction is announced as\npart of a package_id, the child might have changed, not the parent, leading\nto a redundant relay of the latter.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210527/73916240/attachment.html>"
            },
            {
                "author": "darosior",
                "date": "2021-05-27T21:45:35",
                "message_text_only": "Hi,\n\n> ## Input-Based\n>\n> I think input-based fee-bumping has been less studied as fee-bumping primitive for L2s [1]. One variant of input-based fee-bumping usable today is the leverage of the SIGHASH_ANYONECANPAY/SIGHASH_SINGLE malleability flags. If the transaction is the latest stage of the contract, a bumping input can be attached just-in-time, thus increasing the feerate of the whole package.\n\nUnfortunately, ACP | SINGLE is trivially pinable [0] (TL;DR: i can just attach an output paying immediately to me, and construct a tx chain spending it). We are using ACP | ALL for Revault,\nwhich is the reason why we need a well laid-out pool of fee-bumping UTXOs (as you need to consume them entirely).\n\n> Input-based (today): If the bumping utxo is offering an adequate feerate point in function of network mempools congestion at time of broadcast, only 1 input. If a preliminary fan-out transaction to adjust feerate point must be broadcasted first, 1 input and 2 outputs more must be accounted for. Onchain footprint: 2 inputs + 3 outputs.\n\nI believe that it's better to broadcast a single fan-out transaction creating your entire UTXO pool in advance. You could create one coin per contract you are watching which value would be\nused to bump your transaction feerate from the presigned one to -say- the average feerate over the past month, and then have smaller coins that you could attach to any transaction to bump\nby a certain threshold (say, 10sat/vbyte). You would create as many small coin as your reserve algorithm tells you (which could be \"i need to be able, worst case, to close all my contracts\nwith the worst historical feerate.\" or (fractional reserve version) \"i need to be able, worst case, to close 10% of my contracts at the average feerate of the past year, the remaining ones sorry\nfor my loss\"). [1]\n\nThis method is both much more optimal (though you need to sometimes incur the cost of many small additional inputs) and also makes sure that your feebump does not depend on the confirmation\nof a first stage transaction (as you can only RBF with new inputs if they are confirmed).\n\n> Input-based (today): In case of rebroadcast, the fee-bumping input is attached to the root of the chain of transactions and as such breaks the chain validity in itself. Beyond the rebroadcast of the updated root under replacement policy, the remaining transactions must be updated and rebroadcast. Rebroadcast footprint: the whole chain of transactions.\n\nWhy not just attaching it at the tail of the chain? Bumping the last child with additional input would effectively be a CPFP for the entire chain in this case.\n\nThanks for starting this discussion :)\nAntoine\n\n[0] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017835.html\n[1] Credits to Jacob Swambo, who came up with the single fan-out transaction and with whom i'm discussing how to practically apply these ideas to Revault.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210527/a0939895/attachment-0001.html>"
            },
            {
                "author": "Antoine Riard",
                "date": "2021-05-28T04:13:44",
                "message_text_only": "> Unfortunately, ACP | SINGLE is trivially pinable [0] (TL;DR: i can just\nattach an output paying immediately to me, and construct a tx chain\nspending it). We are using ACP | ALL for Revault,\n> which is the reason why we need a well laid-out pool of fee-bumping UTXOs\n(as you need to consume them entirely).\n\nOh yes, I should have mentioned this pinning vector. The witnessScript I've\nin mind to make secure that type of chain of transactions would be one\nMuSig key for all contract participants, where signature are committed with\nSIGHASH_ANYPREVOUT | SIGHASH_IOMAP, one pubkey per participant to lockdown\nthe transaction with SIGHASH_ALL. I think it works and prevents malicious\nin-flight attachment of input/output to a multi-party transaction ?\n\n> I believe that it's better to broadcast a single fan-out transaction\ncreating your entire UTXO pool in advance. You could create one coin per\ncontract you are watching which value would be\n> used to bump your transaction feerate from the presigned one to -say- the\naverage feerate over the past month, and then have smaller coins that you\ncould attach to any transaction to bump\n> by a certain threshold (say, 10sat/vbyte). You would create as many small\ncoin as your reserve algorithm tells you (which could be \"i need to be\nable, worst case, to close all my contracts\n> with the worst historical feerate.\" or (fractional reserve version) \"i\nneed to be able, worst case, to close 10% of my contracts at the average\nfeerate of the past year, the remaining ones sorry\n> for my loss\"). [1]\n\n> This method is both much more optimal (though you need to sometimes incur\nthe cost of many small additional inputs) and also makes sure that your\nfeebump does not depend on the confirmation of a first stage transaction\n(as you can only RBF with new inputs if they are confirmed).\n\nI see, so you spread your bumping UTXO pool in two ranges : at least one\nbumping utxo per contract, and a subpool of emergency smaller coins, ready\nto be attached on any contract. I think this strategy makes sense for\nvaults as you can afford a bunch of small coins at different feerates,\nspending the ones not used afterwards. And higher cells of feerate reserve\nas the worst historical feerate are relatively not that much compared to\nlocked-in vaults value. That said, I'm more dubious about LN, where node\noperators might not keep the worst-case fee-bumping reserve, as the time\nvalue of the coins aren't worth the channel liquidity at stake.\n\n> Why not just attaching it at the tail of the chain? Bumping the last\nchild with additional input would effectively be a CPFP for the entire\nchain in this case.\n\nYes, input-based bumping targeting the tail of the chain works at the\ntransaction level. But if you assume bounded visibility of network\nmempools, one of your counterparties might have broadcast a concurrent\nstate, thus making your CPFP irrelevant for propagation. Though smarter\ntx-relay techniques such as \"attach-on-contract-utxo-root\" CPFP (or also\nknown as \"blinded CPFP\") might solve this issue.\n\nLe jeu. 27 mai 2021 \u00e0 17:45, darosior <darosior at protonmail.com> a \u00e9crit :\n\n> Hi,\n>\n> ## Input-Based\n>\n> I think input-based fee-bumping has been less studied as fee-bumping\n> primitive for L2s [1]. One variant of input-based fee-bumping usable today\n> is the leverage of the SIGHASH_ANYONECANPAY/SIGHASH_SINGLE malleability\n> flags. If the transaction is the latest stage of the contract, a bumping\n> input can be attached just-in-time, thus increasing the feerate of the\n> whole package.\n>\n>\n> Unfortunately, ACP | SINGLE is trivially pinable [0] (TL;DR: i can just\n> attach an output paying immediately to me, and construct a tx chain\n> spending it). We are using ACP | ALL for Revault,\n> which is the reason why we need a well laid-out pool of fee-bumping UTXOs\n> (as you need to consume them entirely).\n>\n> Input-based (today): If the bumping utxo is offering an adequate feerate\n> point in function of network mempools congestion at time of broadcast, only\n> 1 input. If a preliminary fan-out transaction to adjust feerate point must\n> be broadcasted first, 1 input and 2 outputs more must be accounted for.\n> Onchain footprint: 2 inputs + 3 outputs.\n>\n>\n> I believe that it's better to broadcast a single fan-out transaction\n> creating your entire UTXO pool in advance. You could create one coin per\n> contract you are watching which value would be\n> used to bump your transaction feerate from the presigned one to -say- the\n> average feerate over the past month, and then have smaller coins that you\n> could attach to any transaction to bump\n> by a certain threshold (say, 10sat/vbyte). You would create as many small\n> coin as your reserve algorithm tells you (which could be \"i need to be\n> able, worst case, to close all my contracts\n> with the worst historical feerate.\" or (fractional reserve version) \"i\n> need to be able, worst case, to close 10% of my contracts at the average\n> feerate of the past year, the remaining ones sorry\n> for my loss\"). [1]\n>\n> This method is both much more optimal (though you need to sometimes incur\n> the cost of many small additional inputs) and also makes sure that your\n> feebump does not depend on the confirmation\n> of a first stage transaction (as you can only RBF with new inputs if they\n> are confirmed).\n>\n> Input-based (today): In case of rebroadcast, the fee-bumping input is\n> attached to the root of the chain of transactions and as such breaks the\n> chain validity in itself. Beyond the rebroadcast of the updated root under\n> replacement policy, the remaining transactions must be updated and\n> rebroadcast. Rebroadcast footprint: the whole chain of transactions.\n>\n>\n> Why not just attaching it at the tail of the chain? Bumping the last child\n> with additional input would effectively be a CPFP for the entire chain in\n> this case.\n>\n>\n> Thanks for starting this discussion :)\n> Antoine\n>\n> [0]\n> https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017835.html\n> [1] Credits to Jacob Swambo, who came up with the single fan-out\n> transaction and with whom i'm discussing how to practically apply these\n> ideas to Revault.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210528/00cce027/attachment.html>"
            },
            {
                "author": "darosior",
                "date": "2021-05-28T22:25:16",
                "message_text_only": "> Oh yes, I should have mentioned this pinning vector. The witnessScript I've in mind to make secure that type of chain of transactions would be one MuSig key for all contract participants, where signature are committed with SIGHASH_ANYPREVOUT | SIGHASH_IOMAP, one pubkey per participant to lockdown the transaction with SIGHASH_ALL. I think it works and prevents malicious in-flight attachment of input/output to a multi-party transaction ?\n\nSo something like `or(and(pk(FB),pk(A)),and(pk(FB),pk(B)),and(pk(FB),pk(C)))` with each `or` in their own leaf? I think it works, but only if the keys `A`, `B`, `C` are \"hot\", as in available to the\nfee-bumper. For Revault it means introducing a key for each watchtower in the vaults descriptors, which is meh but technically feasible since they are identified. This kinda break our replication\nmodel though. On the other end for Lightning... You'd need to know what watchtower (or your node) is going to be willing to feebump? The descriptor can very quickly get very convoluted:\n`or(and(pk(FB),pk(A_NODE)),and(pk(FB),pk(A_WT1)),and(pk(FB),pk(A_WT2)),and(pk(FB),pk(B_NODE)),and(pk(FB),pk(B_WT1)),and(pk(FB),pk(B_WT2)))` for only 2 participants in a channel\nwhere one of either the node or two watchtowers (identified beforehand !!) can feebump.\n\n> I see, so you spread your bumping UTXO pool in two ranges : at least one bumping utxo per contract, and a subpool of emergency smaller coins, ready to be attached on any contract. I think this strategy makes sense for vaults as you can afford a bunch of small coins at different feerates, spending the ones not used afterwards. And higher cells of feerate reserve as the worst historical feerate are relatively not that much compared to locked-in vaults value. That said, I'm more dubious about LN, where node operators might not keep the worst-case fee-bumping reserve, as the time value of the coins aren't worth the channel liquidity at stake.\n\nYes. That's a bit concerning, but i guess it's a tradeoff. Amusingly the incentive is at odds with routing: you want to keep your channels unbalanced if you run on fractional fee-bumping reserves\nso that if things go south you can still salvage most of your funds by focusing your fee-bumping on the unbalanced (to you) channels :p .\n\n> Yes, input-based bumping targeting the tail of the chain works at the transaction level. But if you assume bounded visibility of network mempools, one of your counterparties might have broadcast a concurrent state, thus making your CPFP irrelevant for propagation. Though smarter tx-relay techniques such as \"attach-on-contract-utxo-root\" CPFP (or also known as \"blinded CPFP\") might solve this issue.\n\nOh, yes, good point.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20210528/e838d90f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "A Stroll through Fee-Bumping Techniques : Input-Based vs Child-Pay-For-Parent",
            "categories": [
                "bitcoin-dev"
            ],
            "authors": [
                "darosior",
                "Antoine Riard"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 20195
        }
    }
]