[
    {
        "title": "[Bitcoin-development] \"bits\": Unit of account",
        "thread_messages": [
            {
                "author": "Aaron Voisine",
                "date": "2014-05-01T22:35:14",
                "message_text_only": "I'm also a big fan of standardizing on microBTC as the standard unit.\nI didn't like the name \"bits\" at first, but the more I think about it,\nthe more I like it. The main thing going for it is the fact that it's\npart of the name bitcoin. If Bitcoin is the protocol and network, bits\nare an obvious choice for the currency unit.\n\nI would like to propose using Unicode character U+0180, lowercase b\nwith stroke, as the symbol to represent the microBTC denomination,\nwhether we call bits or something else:\n http://www.fileformat.info/info/unicode/char/0180/index.htm\n\nAnother candidate is Unicode character U+2422, the blank symbol, but I\nprefer stroke b.\nhttp://www.fileformat.info/info/unicode/char/2422/index.htm\n\nAaron\n\nThere's no trick to being a humorist when you have the whole\ngovernment working for you -- Will Rodgers\n\n> On Apr 21, 2014 5:41 AM, \"Pieter Wuille\" <pieter.wuille at gm...> wrote:\n>\n>>On Apr 21, 2014 3:37 AM, \"Un Ix\" <slashdevnull at ...> wrote:\n>>\n>> Something tells me this would be reduced to a single syllable in common\n>> usage I.e. bit.\n>\n> What units will be called colloquially is not something developers will\n> determine. It will vary, depend on language and culture, and is not\n> relevant to this discussion in my opinion.\n>\n> It may well be that people in some geographic or language area will end up\n> (or for a while) calling 1e-06 BTC \"bits\". That's fine, but using that as\n> \"official\" name in software would be very strange and potentially confusing\n> in my opinion. As mentioned by others, that would seem to me like calling\n> dollars \"bucks\" in bank software. Nobody seems to have a problem with\n> having colloquial names, but \"US dollar\" or \"euro\" are far less ambiguous\n> than \"bit\". I think we need a more distinctive name.\n>\n> --\n> Pieter"
            },
            {
                "author": "Gordon Mohr",
                "date": "2014-05-03T02:06:11",
                "message_text_only": "[resend - apologies if duplicate]\n\nMicrobitcoin is a good-sized unit, workable for everyday transaction \nvalues, with room-to-grow, and a nice relationship to satoshis as 'cents'.\n\nBut \"bits\" has problems as a unit name.\n\n\"Bits\" will be especially problematic whenever people try to graduate \nfrom informal use to understanding the system internals - that is, when \nthe real \"bits\" of key sizes, hash sizes, and storage/bandwidth needs \nbecome important. The \"bit\" as \"binary digit\" was important enough that \nSatoshi named the system after it; that homage gets lost if the word is \nmuddied with a new retconned meaning that's quite different.\n\nSome examples of possible problems:\n\n* If \"bit\" equals \"100 satoshis\", then the natural-language unpacking of \n\"bit-coin\" is \"100 satoshi coin\", which runs against all prior usage.\n\n* If people are informed that a \"256-bit private key\" is what ultimately \ncontrols their balances, it could prompt confusion like, \"if each key \nhas 256-bits, will I need 40 keys to hold 10,000.00 bits?\"\n\n* When people learn that there are 8 bits to a byte, they may think, \n\"OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes\".\n\n* When people naturally extend \"bit\" into \"kilobits\" to mean \"1000 \nbits\", then the new coinage \"kilobits\" will mean the exact same amount \n(100,000 satoshi) as many have already been calling \"millibits\".\n\nI believe it'd be best to pick a new made-up single-syllable word as a \nsynonym for \"microbitcoin\", and I've laid out the case for \"zib\" as that \nword at <http://zibcoin.org>.\n\n'Zib' also lends itself to an expressive unicode symbol, '\u01b5' \n(Z-with-stroke), that remains distinctive even if it loses its stroke or \ngets case-reversed. (Comparatively, all 'b'-derived symbols for \ndata-bits, bitcoins, or '100 satoshi bits' risk collision in contexts \nwhere subtleties of casing/stroking are lost.)\n\n(There's summary of more problems with \"bit\" in the zibcoin.org FAQ  at: \n<http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)\n\n- Gordon\n\nOn 5/1/14, 3:35 PM, Aaron Voisine wrote:\n> I'm also a big fan of standardizing on microBTC as the standard unit.\n> I didn't like the name \"bits\" at first, but the more I think about it,\n> the more I like it. The main thing going for it is the fact that it's\n> part of the name bitcoin. If Bitcoin is the protocol and network, bits\n> are an obvious choice for the currency unit.\n>\n> I would like to propose using Unicode character U+0180, lowercase b\n> with stroke, as the symbol to represent the microBTC denomination,\n> whether we call bits or something else:\n>   http://www.fileformat.info/info/unicode/char/0180/index.htm\n>\n> Another candidate is Unicode character U+2422, the blank symbol, but I\n> prefer stroke b.\n> http://www.fileformat.info/info/unicode/char/2422/index.htm\n>\n> Aaron\n>\n> There's no trick to being a humorist when you have the whole\n> government working for you -- Will Rodgers\n>\n>> On Apr 21, 2014 5:41 AM, \"Pieter Wuille\" <pieter.wuille at gm...> wrote:\n>>\n>>> On Apr 21, 2014 3:37 AM, \"Un Ix\" <slashdevnull at ...> wrote:\n>>>\n>>> Something tells me this would be reduced to a single syllable in common\n>>> usage I.e. bit.\n>>\n>> What units will be called colloquially is not something developers will\n>> determine. It will vary, depend on language and culture, and is not\n>> relevant to this discussion in my opinion.\n>>\n>> It may well be that people in some geographic or language area will end up\n>> (or for a while) calling 1e-06 BTC \"bits\". That's fine, but using that as\n>> \"official\" name in software would be very strange and potentially confusing\n>> in my opinion. As mentioned by others, that would seem to me like calling\n>> dollars \"bucks\" in bank software. Nobody seems to have a problem with\n>> having colloquial names, but \"US dollar\" or \"euro\" are far less ambiguous\n>> than \"bit\". I think we need a more distinctive name.\n>>\n>> --\n>> Pieter\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2014-05-03T05:41:23",
                "message_text_only": "I have to agree with Mike. Human language is surprisingly tolerant of\noverloading and inference from context. Neurotypical people have no\nproblem with it and perceive a software engineer's aversion to it as\nbeing pedantic and strange. Note that \"bits\" was a term for a unit of\nmoney long before the invention of digital computers.\n\nAaron\n\nThere's no trick to being a humorist when you have the whole\ngovernment working for you -- Will Rodgers\n\n\nOn Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:\n> [resend - apologies if duplicate]\n>\n> Microbitcoin is a good-sized unit, workable for everyday transaction\n> values, with room-to-grow, and a nice relationship to satoshis as 'cents'.\n>\n> But \"bits\" has problems as a unit name.\n>\n> \"Bits\" will be especially problematic whenever people try to graduate\n> from informal use to understanding the system internals - that is, when\n> the real \"bits\" of key sizes, hash sizes, and storage/bandwidth needs\n> become important. The \"bit\" as \"binary digit\" was important enough that\n> Satoshi named the system after it; that homage gets lost if the word is\n> muddied with a new retconned meaning that's quite different.\n>\n> Some examples of possible problems:\n>\n> * If \"bit\" equals \"100 satoshis\", then the natural-language unpacking of\n> \"bit-coin\" is \"100 satoshi coin\", which runs against all prior usage.\n>\n> * If people are informed that a \"256-bit private key\" is what ultimately\n> controls their balances, it could prompt confusion like, \"if each key\n> has 256-bits, will I need 40 keys to hold 10,000.00 bits?\"\n>\n> * When people learn that there are 8 bits to a byte, they may think,\n> \"OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes\".\n>\n> * When people naturally extend \"bit\" into \"kilobits\" to mean \"1000\n> bits\", then the new coinage \"kilobits\" will mean the exact same amount\n> (100,000 satoshi) as many have already been calling \"millibits\".\n>\n> I believe it'd be best to pick a new made-up single-syllable word as a\n> synonym for \"microbitcoin\", and I've laid out the case for \"zib\" as that\n> word at <http://zibcoin.org>.\n>\n> 'Zib' also lends itself to an expressive unicode symbol, '\u01b5'\n> (Z-with-stroke), that remains distinctive even if it loses its stroke or\n> gets case-reversed. (Comparatively, all 'b'-derived symbols for\n> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts\n> where subtleties of casing/stroking are lost.)\n>\n> (There's summary of more problems with \"bit\" in the zibcoin.org FAQ  at:\n> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)\n>\n> - Gordon\n>\n> On 5/1/14, 3:35 PM, Aaron Voisine wrote:\n>> I'm also a big fan of standardizing on microBTC as the standard unit.\n>> I didn't like the name \"bits\" at first, but the more I think about it,\n>> the more I like it. The main thing going for it is the fact that it's\n>> part of the name bitcoin. If Bitcoin is the protocol and network, bits\n>> are an obvious choice for the currency unit.\n>>\n>> I would like to propose using Unicode character U+0180, lowercase b\n>> with stroke, as the symbol to represent the microBTC denomination,\n>> whether we call bits or something else:\n>>   http://www.fileformat.info/info/unicode/char/0180/index.htm\n>>\n>> Another candidate is Unicode character U+2422, the blank symbol, but I\n>> prefer stroke b.\n>> http://www.fileformat.info/info/unicode/char/2422/index.htm\n>>\n>> Aaron\n>>\n>> There's no trick to being a humorist when you have the whole\n>> government working for you -- Will Rodgers\n>>\n>>> On Apr 21, 2014 5:41 AM, \"Pieter Wuille\" <pieter.wuille at gm...> wrote:\n>>>\n>>>> On Apr 21, 2014 3:37 AM, \"Un Ix\" <slashdevnull at ...> wrote:\n>>>>\n>>>> Something tells me this would be reduced to a single syllable in common\n>>>> usage I.e. bit.\n>>>\n>>> What units will be called colloquially is not something developers will\n>>> determine. It will vary, depend on language and culture, and is not\n>>> relevant to this discussion in my opinion.\n>>>\n>>> It may well be that people in some geographic or language area will end up\n>>> (or for a while) calling 1e-06 BTC \"bits\". That's fine, but using that as\n>>> \"official\" name in software would be very strange and potentially confusing\n>>> in my opinion. As mentioned by others, that would seem to me like calling\n>>> dollars \"bucks\" in bank software. Nobody seems to have a problem with\n>>> having colloquial names, but \"US dollar\" or \"euro\" are far less ambiguous\n>>> than \"bit\". I think we need a more distinctive name.\n>>>\n>>> --\n>>> Pieter\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Christophe Biocca",
                "date": "2014-05-03T15:48:06",
                "message_text_only": "Context as a disambiguator works fine when the interlocutors\nunderstand the topics they're talking about.\nNot a day goes by without me seeing \"neurotypical people\" get horribly\nconfused between RAM and Hard Drive sizes, because they share the same\nunits (not that that can be helped, as the units are supposed to be\nthe same, base 1000 vs 1024 notwithstanding).\n\nBit (as a unit) is already really confusing for anyone who doesn't\ndeal with it on a regular basis. I think people who don't see an issue\nare making an assumption based on their own lack of confusion. We\nunderstand computer science AND Bitcoin. Most people have zero\nunderstanding of either.\n\nBitcoin already has a ton of issues with terrible names for things:\n\n- Mining (for transaction validation).\n- Addresses (which are meant to be one-time use, and don't even really\nexist at the network level).\n- Wallets (which don't hold your bitcoins, can be copied, and all\nbackups can be stolen from equally).\n\nI end up having to make the distinctions obvious every time I explain\nBitcoin to someone new to it. There's an acceptable tradeoff here,\nbecause there were arguably no better words to assign to these\nconcepts (although I'd argue mining is a really awful metaphor, and is\nthe one that prompts the most questions from people). Then add to the\npile a bunch of third parties naming themselves after parts of the\nprotocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\ndefinitiely seen average people get confused between \"the blockchain\"\nand \"blockchain.info\" (not so much Coinbase, because that name doesn't\ncome up in beginner explanations).\n\nIt seems downright masochistic to add\nyet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\nfor no reason other than aesthetics. Are we actively trying to confuse\npeople?\n\nOn Sat, May 3, 2014 at 1:41 AM, Aaron Voisine <voisine at gmail.com> wrote:\n> I have to agree with Mike. Human language is surprisingly tolerant of\n> overloading and inference from context. Neurotypical people have no\n> problem with it and perceive a software engineer's aversion to it as\n> being pedantic and strange. Note that \"bits\" was a term for a unit of\n> money long before the invention of digital computers.\n>\n> Aaron\n>\n> There's no trick to being a humorist when you have the whole\n> government working for you -- Will Rodgers\n>\n>\n> On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:\n>> [resend - apologies if duplicate]\n>>\n>> Microbitcoin is a good-sized unit, workable for everyday transaction\n>> values, with room-to-grow, and a nice relationship to satoshis as 'cents'.\n>>\n>> But \"bits\" has problems as a unit name.\n>>\n>> \"Bits\" will be especially problematic whenever people try to graduate\n>> from informal use to understanding the system internals - that is, when\n>> the real \"bits\" of key sizes, hash sizes, and storage/bandwidth needs\n>> become important. The \"bit\" as \"binary digit\" was important enough that\n>> Satoshi named the system after it; that homage gets lost if the word is\n>> muddied with a new retconned meaning that's quite different.\n>>\n>> Some examples of possible problems:\n>>\n>> * If \"bit\" equals \"100 satoshis\", then the natural-language unpacking of\n>> \"bit-coin\" is \"100 satoshi coin\", which runs against all prior usage.\n>>\n>> * If people are informed that a \"256-bit private key\" is what ultimately\n>> controls their balances, it could prompt confusion like, \"if each key\n>> has 256-bits, will I need 40 keys to hold 10,000.00 bits?\"\n>>\n>> * When people learn that there are 8 bits to a byte, they may think,\n>> \"OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes\".\n>>\n>> * When people naturally extend \"bit\" into \"kilobits\" to mean \"1000\n>> bits\", then the new coinage \"kilobits\" will mean the exact same amount\n>> (100,000 satoshi) as many have already been calling \"millibits\".\n>>\n>> I believe it'd be best to pick a new made-up single-syllable word as a\n>> synonym for \"microbitcoin\", and I've laid out the case for \"zib\" as that\n>> word at <http://zibcoin.org>.\n>>\n>> 'Zib' also lends itself to an expressive unicode symbol, '\u01b5'\n>> (Z-with-stroke), that remains distinctive even if it loses its stroke or\n>> gets case-reversed. (Comparatively, all 'b'-derived symbols for\n>> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts\n>> where subtleties of casing/stroking are lost.)\n>>\n>> (There's summary of more problems with \"bit\" in the zibcoin.org FAQ  at:\n>> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)\n>>\n>> - Gordon\n>>\n>> On 5/1/14, 3:35 PM, Aaron Voisine wrote:\n>>> I'm also a big fan of standardizing on microBTC as the standard unit.\n>>> I didn't like the name \"bits\" at first, but the more I think about it,\n>>> the more I like it. The main thing going for it is the fact that it's\n>>> part of the name bitcoin. If Bitcoin is the protocol and network, bits\n>>> are an obvious choice for the currency unit.\n>>>\n>>> I would like to propose using Unicode character U+0180, lowercase b\n>>> with stroke, as the symbol to represent the microBTC denomination,\n>>> whether we call bits or something else:\n>>>   http://www.fileformat.info/info/unicode/char/0180/index.htm\n>>>\n>>> Another candidate is Unicode character U+2422, the blank symbol, but I\n>>> prefer stroke b.\n>>> http://www.fileformat.info/info/unicode/char/2422/index.htm\n>>>\n>>> Aaron\n>>>\n>>> There's no trick to being a humorist when you have the whole\n>>> government working for you -- Will Rodgers\n>>>\n>>>> On Apr 21, 2014 5:41 AM, \"Pieter Wuille\" <pieter.wuille at gm...> wrote:\n>>>>\n>>>>> On Apr 21, 2014 3:37 AM, \"Un Ix\" <slashdevnull at ...> wrote:\n>>>>>\n>>>>> Something tells me this would be reduced to a single syllable in common\n>>>>> usage I.e. bit.\n>>>>\n>>>> What units will be called colloquially is not something developers will\n>>>> determine. It will vary, depend on language and culture, and is not\n>>>> relevant to this discussion in my opinion.\n>>>>\n>>>> It may well be that people in some geographic or language area will end up\n>>>> (or for a while) calling 1e-06 BTC \"bits\". That's fine, but using that as\n>>>> \"official\" name in software would be very strange and potentially confusing\n>>>> in my opinion. As mentioned by others, that would seem to me like calling\n>>>> dollars \"bucks\" in bank software. Nobody seems to have a problem with\n>>>> having colloquial names, but \"US dollar\" or \"euro\" are far less ambiguous\n>>>> than \"bit\". I think we need a more distinctive name.\n>>>>\n>>>> --\n>>>> Pieter\n>>>\n>>> ------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>>> unparalleled scalability from the best Selenium testing platform available.\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "slush",
                "date": "2014-05-03T16:02:27",
                "message_text_only": "Excellent points Christophe!\n\nAlthough moving to 1e-6 units is fine for me and I see advantages of doing\nthis, I don't get that people on this mailing list are fine with calling\nsuch unit \"bit\". It's geeky as hell, ambiguous and confusing.\n\nslush\n\n\nOn Sat, May 3, 2014 at 5:48 PM, Christophe Biocca <\nchristophe.biocca at gmail.com> wrote:\n\n> Context as a disambiguator works fine when the interlocutors\n> understand the topics they're talking about.\n> Not a day goes by without me seeing \"neurotypical people\" get horribly\n> confused between RAM and Hard Drive sizes, because they share the same\n> units (not that that can be helped, as the units are supposed to be\n> the same, base 1000 vs 1024 notwithstanding).\n>\n> Bit (as a unit) is already really confusing for anyone who doesn't\n> deal with it on a regular basis. I think people who don't see an issue\n> are making an assumption based on their own lack of confusion. We\n> understand computer science AND Bitcoin. Most people have zero\n> understanding of either.\n>\n> Bitcoin already has a ton of issues with terrible names for things:\n>\n> - Mining (for transaction validation).\n> - Addresses (which are meant to be one-time use, and don't even really\n> exist at the network level).\n> - Wallets (which don't hold your bitcoins, can be copied, and all\n> backups can be stolen from equally).\n>\n> I end up having to make the distinctions obvious every time I explain\n> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n> because there were arguably no better words to assign to these\n> concepts (although I'd argue mining is a really awful metaphor, and is\n> the one that prompts the most questions from people). Then add to the\n> pile a bunch of third parties naming themselves after parts of the\n> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n> definitiely seen average people get confused between \"the blockchain\"\n> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n> come up in beginner explanations).\n>\n> It seems downright masochistic to add\n> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n> for no reason other than aesthetics. Are we actively trying to confuse\n> people?\n>\n> On Sat, May 3, 2014 at 1:41 AM, Aaron Voisine <voisine at gmail.com> wrote:\n> > I have to agree with Mike. Human language is surprisingly tolerant of\n> > overloading and inference from context. Neurotypical people have no\n> > problem with it and perceive a software engineer's aversion to it as\n> > being pedantic and strange. Note that \"bits\" was a term for a unit of\n> > money long before the invention of digital computers.\n> >\n> > Aaron\n> >\n> > There's no trick to being a humorist when you have the whole\n> > government working for you -- Will Rodgers\n> >\n> >\n> > On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:\n> >> [resend - apologies if duplicate]\n> >>\n> >> Microbitcoin is a good-sized unit, workable for everyday transaction\n> >> values, with room-to-grow, and a nice relationship to satoshis as\n> 'cents'.\n> >>\n> >> But \"bits\" has problems as a unit name.\n> >>\n> >> \"Bits\" will be especially problematic whenever people try to graduate\n> >> from informal use to understanding the system internals - that is, when\n> >> the real \"bits\" of key sizes, hash sizes, and storage/bandwidth needs\n> >> become important. The \"bit\" as \"binary digit\" was important enough that\n> >> Satoshi named the system after it; that homage gets lost if the word is\n> >> muddied with a new retconned meaning that's quite different.\n> >>\n> >> Some examples of possible problems:\n> >>\n> >> * If \"bit\" equals \"100 satoshis\", then the natural-language unpacking of\n> >> \"bit-coin\" is \"100 satoshi coin\", which runs against all prior usage.\n> >>\n> >> * If people are informed that a \"256-bit private key\" is what ultimately\n> >> controls their balances, it could prompt confusion like, \"if each key\n> >> has 256-bits, will I need 40 keys to hold 10,000.00 bits?\"\n> >>\n> >> * When people learn that there are 8 bits to a byte, they may think,\n> >> \"OK, my wallet holding my 80,000.00 bits will then take up 10\n> kilobytes\".\n> >>\n> >> * When people naturally extend \"bit\" into \"kilobits\" to mean \"1000\n> >> bits\", then the new coinage \"kilobits\" will mean the exact same amount\n> >> (100,000 satoshi) as many have already been calling \"millibits\".\n> >>\n> >> I believe it'd be best to pick a new made-up single-syllable word as a\n> >> synonym for \"microbitcoin\", and I've laid out the case for \"zib\" as that\n> >> word at <http://zibcoin.org>.\n> >>\n> >> 'Zib' also lends itself to an expressive unicode symbol, '\u01b5'\n> >> (Z-with-stroke), that remains distinctive even if it loses its stroke or\n> >> gets case-reversed. (Comparatively, all 'b'-derived symbols for\n> >> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts\n> >> where subtleties of casing/stroking are lost.)\n> >>\n> >> (There's summary of more problems with \"bit\" in the zibcoin.org FAQ\n>  at:\n> >> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)\n> >>\n> >> - Gordon\n> >>\n> >> On 5/1/14, 3:35 PM, Aaron Voisine wrote:\n> >>> I'm also a big fan of standardizing on microBTC as the standard unit.\n> >>> I didn't like the name \"bits\" at first, but the more I think about it,\n> >>> the more I like it. The main thing going for it is the fact that it's\n> >>> part of the name bitcoin. If Bitcoin is the protocol and network, bits\n> >>> are an obvious choice for the currency unit.\n> >>>\n> >>> I would like to propose using Unicode character U+0180, lowercase b\n> >>> with stroke, as the symbol to represent the microBTC denomination,\n> >>> whether we call bits or something else:\n> >>>   http://www.fileformat.info/info/unicode/char/0180/index.htm\n> >>>\n> >>> Another candidate is Unicode character U+2422, the blank symbol, but I\n> >>> prefer stroke b.\n> >>> http://www.fileformat.info/info/unicode/char/2422/index.htm\n> >>>\n> >>> Aaron\n> >>>\n> >>> There's no trick to being a humorist when you have the whole\n> >>> government working for you -- Will Rodgers\n> >>>\n> >>>> On Apr 21, 2014 5:41 AM, \"Pieter Wuille\" <pieter.wuille at gm...> wrote:\n> >>>>\n> >>>>> On Apr 21, 2014 3:37 AM, \"Un Ix\" <slashdevnull at ...> wrote:\n> >>>>>\n> >>>>> Something tells me this would be reduced to a single syllable in\n> common\n> >>>>> usage I.e. bit.\n> >>>>\n> >>>> What units will be called colloquially is not something developers\n> will\n> >>>> determine. It will vary, depend on language and culture, and is not\n> >>>> relevant to this discussion in my opinion.\n> >>>>\n> >>>> It may well be that people in some geographic or language area will\n> end up\n> >>>> (or for a while) calling 1e-06 BTC \"bits\". That's fine, but using\n> that as\n> >>>> \"official\" name in software would be very strange and potentially\n> confusing\n> >>>> in my opinion. As mentioned by others, that would seem to me like\n> calling\n> >>>> dollars \"bucks\" in bank software. Nobody seems to have a problem with\n> >>>> having colloquial names, but \"US dollar\" or \"euro\" are far less\n> ambiguous\n> >>>> than \"bit\". I think we need a more distinctive name.\n> >>>>\n> >>>> --\n> >>>> Pieter\n> >>>\n> >>>\n> ------------------------------------------------------------------------------\n> >>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> >>> unparalleled scalability from the best Selenium testing platform\n> available.\n> >>> Simple to use. Nothing to install. Get started now for free.\"\n> >>> http://p.sf.net/sfu/SauceLabs\n> >>> _______________________________________________\n> >>> Bitcoin-development mailing list\n> >>> Bitcoin-development at lists.sourceforge.net\n> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> >> unparalleled scalability from the best Selenium testing platform\n> available.\n> >> Simple to use. Nothing to install. Get started now for free.\"\n> >> http://p.sf.net/sfu/SauceLabs\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> > unparalleled scalability from the best Selenium testing platform\n> available.\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/0822abf5/attachment.html>"
            },
            {
                "author": "Tamas Blummer",
                "date": "2014-05-03T16:10:22",
                "message_text_only": "bit has a lot of meanings to geeks, so what.\n\nbit means for average people:\n- something very small, that 100 satoshi is. \n- part of the name Bitcoin\n- easy to get conversion 1 coin = 1 million bits = 1 Bitcoin\n\nRegards,\n\nTamas Blummer\nFounder, CEO\nhttp://bitsofproof.com\n\nOn 03.05.2014, at 18:02, slush <slush at centrum.cz> wrote:\n\n> Excellent points Christophe!\n> \n> Although moving to 1e-6 units is fine for me and I see advantages of doing this, I don't get that people on this mailing list are fine with calling such unit \"bit\". It's geeky as hell, ambiguous and confusing. \n> \n> slush\n> \n> \n> On Sat, May 3, 2014 at 5:48 PM, Christophe Biocca <christophe.biocca at gmail.com> wrote:\n> Context as a disambiguator works fine when the interlocutors\n> understand the topics they're talking about.\n> Not a day goes by without me seeing \"neurotypical people\" get horribly\n> confused between RAM and Hard Drive sizes, because they share the same\n> units (not that that can be helped, as the units are supposed to be\n> the same, base 1000 vs 1024 notwithstanding).\n> \n> Bit (as a unit) is already really confusing for anyone who doesn't\n> deal with it on a regular basis. I think people who don't see an issue\n> are making an assumption based on their own lack of confusion. We\n> understand computer science AND Bitcoin. Most people have zero\n> understanding of either.\n> \n> Bitcoin already has a ton of issues with terrible names for things:\n> \n> - Mining (for transaction validation).\n> - Addresses (which are meant to be one-time use, and don't even really\n> exist at the network level).\n> - Wallets (which don't hold your bitcoins, can be copied, and all\n> backups can be stolen from equally).\n> \n> I end up having to make the distinctions obvious every time I explain\n> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n> because there were arguably no better words to assign to these\n> concepts (although I'd argue mining is a really awful metaphor, and is\n> the one that prompts the most questions from people). Then add to the\n> pile a bunch of third parties naming themselves after parts of the\n> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n> definitiely seen average people get confused between \"the blockchain\"\n> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n> come up in beginner explanations).\n> \n> It seems downright masochistic to add\n> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n> for no reason other than aesthetics. Are we actively trying to confuse\n> people?\n> \n> On Sat, May 3, 2014 at 1:41 AM, Aaron Voisine <voisine at gmail.com> wrote:\n> > I have to agree with Mike. Human language is surprisingly tolerant of\n> > overloading and inference from context. Neurotypical people have no\n> > problem with it and perceive a software engineer's aversion to it as\n> > being pedantic and strange. Note that \"bits\" was a term for a unit of\n> > money long before the invention of digital computers.\n> >\n> > Aaron\n> >\n> > There's no trick to being a humorist when you have the whole\n> > government working for you -- Will Rodgers\n> >\n> >\n> > On Fri, May 2, 2014 at 7:06 PM, Gordon Mohr <gojomo at gmail.com> wrote:\n> >> [resend - apologies if duplicate]\n> >>\n> >> Microbitcoin is a good-sized unit, workable for everyday transaction\n> >> values, with room-to-grow, and a nice relationship to satoshis as 'cents'.\n> >>\n> >> But \"bits\" has problems as a unit name.\n> >>\n> >> \"Bits\" will be especially problematic whenever people try to graduate\n> >> from informal use to understanding the system internals - that is, when\n> >> the real \"bits\" of key sizes, hash sizes, and storage/bandwidth needs\n> >> become important. The \"bit\" as \"binary digit\" was important enough that\n> >> Satoshi named the system after it; that homage gets lost if the word is\n> >> muddied with a new retconned meaning that's quite different.\n> >>\n> >> Some examples of possible problems:\n> >>\n> >> * If \"bit\" equals \"100 satoshis\", then the natural-language unpacking of\n> >> \"bit-coin\" is \"100 satoshi coin\", which runs against all prior usage.\n> >>\n> >> * If people are informed that a \"256-bit private key\" is what ultimately\n> >> controls their balances, it could prompt confusion like, \"if each key\n> >> has 256-bits, will I need 40 keys to hold 10,000.00 bits?\"\n> >>\n> >> * When people learn that there are 8 bits to a byte, they may think,\n> >> \"OK, my wallet holding my 80,000.00 bits will then take up 10 kilobytes\".\n> >>\n> >> * When people naturally extend \"bit\" into \"kilobits\" to mean \"1000\n> >> bits\", then the new coinage \"kilobits\" will mean the exact same amount\n> >> (100,000 satoshi) as many have already been calling \"millibits\".\n> >>\n> >> I believe it'd be best to pick a new made-up single-syllable word as a\n> >> synonym for \"microbitcoin\", and I've laid out the case for \"zib\" as that\n> >> word at <http://zibcoin.org>.\n> >>\n> >> 'Zib' also lends itself to an expressive unicode symbol, '\u01b5'\n> >> (Z-with-stroke), that remains distinctive even if it loses its stroke or\n> >> gets case-reversed. (Comparatively, all 'b'-derived symbols for\n> >> data-bits, bitcoins, or '100 satoshi bits' risk collision in contexts\n> >> where subtleties of casing/stroking are lost.)\n> >>\n> >> (There's summary of more problems with \"bit\" in the zibcoin.org FAQ  at:\n> >> <http://zibcoin.org/faq#why-not-bits-to-mean-microbitcoins>.)\n> >>\n> >> - Gordon\n> >>\n> >> On 5/1/14, 3:35 PM, Aaron Voisine wrote:\n> >>> I'm also a big fan of standardizing on microBTC as the standard unit.\n> >>> I didn't like the name \"bits\" at first, but the more I think about it,\n> >>> the more I like it. The main thing going for it is the fact that it's\n> >>> part of the name bitcoin. If Bitcoin is the protocol and network, bits\n> >>> are an obvious choice for the currency unit.\n> >>>\n> >>> I would like to propose using Unicode character U+0180, lowercase b\n> >>> with stroke, as the symbol to represent the microBTC denomination,\n> >>> whether we call bits or something else:\n> >>>   http://www.fileformat.info/info/unicode/char/0180/index.htm\n> >>>\n> >>> Another candidate is Unicode character U+2422, the blank symbol, but I\n> >>> prefer stroke b.\n> >>> http://www.fileformat.info/info/unicode/char/2422/index.htm\n> >>>\n> >>> Aaron\n> >>>\n> >>> There's no trick to being a humorist when you have the whole\n> >>> government working for you -- Will Rodgers\n> >>>\n> >>>> On Apr 21, 2014 5:41 AM, \"Pieter Wuille\" <pieter.wuille at gm...> wrote:\n> >>>>\n> >>>>> On Apr 21, 2014 3:37 AM, \"Un Ix\" <slashdevnull at ...> wrote:\n> >>>>>\n> >>>>> Something tells me this would be reduced to a single syllable in common\n> >>>>> usage I.e. bit.\n> >>>>\n> >>>> What units will be called colloquially is not something developers will\n> >>>> determine. It will vary, depend on language and culture, and is not\n> >>>> relevant to this discussion in my opinion.\n> >>>>\n> >>>> It may well be that people in some geographic or language area will end up\n> >>>> (or for a while) calling 1e-06 BTC \"bits\". That's fine, but using that as\n> >>>> \"official\" name in software would be very strange and potentially confusing\n> >>>> in my opinion. As mentioned by others, that would seem to me like calling\n> >>>> dollars \"bucks\" in bank software. Nobody seems to have a problem with\n> >>>> having colloquial names, but \"US dollar\" or \"euro\" are far less ambiguous\n> >>>> than \"bit\". I think we need a more distinctive name.\n> >>>>\n> >>>> --\n> >>>> Pieter\n> >>>\n> >>> ------------------------------------------------------------------------------\n> >>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> >>> unparalleled scalability from the best Selenium testing platform available.\n> >>> Simple to use. Nothing to install. Get started now for free.\"\n> >>> http://p.sf.net/sfu/SauceLabs\n> >>> _______________________________________________\n> >>> Bitcoin-development mailing list\n> >>> Bitcoin-development at lists.sourceforge.net\n> >>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>>\n> >>\n> >> ------------------------------------------------------------------------------\n> >> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> >> unparalleled scalability from the best Selenium testing platform available.\n> >> Simple to use. Nothing to install. Get started now for free.\"\n> >> http://p.sf.net/sfu/SauceLabs\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> > ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> > unparalleled scalability from the best Selenium testing platform available.\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get \n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/b6c434e1/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 495 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/b6c434e1/attachment.sig>"
            },
            {
                "author": "Mike Caldwell",
                "date": "2014-05-03T16:27:18",
                "message_text_only": "I agree with the sentiment that most people don't understand either computer science or Bitcoin.  The goal of getting people to understand enough about Bitcoin to use it is achievable and a goal that is \"in scope\" of our efforts. Getting them to understand computer science at large at the same time, less so.\n\nThe fact that people routinely confuse RAM and hard drive sizes has much to do with the fact that the average lay person has little need to prioritize this as something to keep in the forefront.  They don't get \"horribly\" confused, they just simply don't get worked up over what looks to them like a rounding error, much to the dismay of anyone who believes that everyone should be an expert at computer science.  The average joe may assess (accurately from his perspective) that the distinction isn't important enough to merit significant mental resources and he is justified in not expending them that way even if someone else thinks he should.\n\nPoor understanding is precisely what a proper effort to name this would be to avoid.  It is not frill or aesthetics, it is a planned targeting of language to achieve the clearest communication to the widest possible target audience using the language most likely to be understood by them in light of our objectives.  It's marketing. \n\nMike\n\nSent from my iPhone\n\n> On May 3, 2014, at 9:49 AM, \"Christophe Biocca\" <christophe.biocca at gmail.com> wrote:\n> \n> Context as a disambiguator works fine when the interlocutors\n> understand the topics they're talking about.\n> Not a day goes by without me seeing \"neurotypical people\" get horribly\n> confused between RAM and Hard Drive sizes, because they share the same\n> units (not that that can be helped, as the units are supposed to be\n> the same, base 1000 vs 1024 notwithstanding).\n> \n> Bit (as a unit) is already really confusing for anyone who doesn't\n> deal with it on a regular basis. I think people who don't see an issue\n> are making an assumption based on their own lack of confusion. We\n> understand computer science AND Bitcoin. Most people have zero\n> understanding of either.\n> \n> Bitcoin already has a ton of issues with terrible names for things:\n> \n> - Mining (for transaction validation).\n> - Addresses (which are meant to be one-time use, and don't even really\n> exist at the network level).\n> - Wallets (which don't hold your bitcoins, can be copied, and all\n> backups can be stolen from equally).\n> \n> I end up having to make the distinctions obvious every time I explain\n> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n> because there were arguably no better words to assign to these\n> concepts (although I'd argue mining is a really awful metaphor, and is\n> the one that prompts the most questions from people). Then add to the\n> pile a bunch of third parties naming themselves after parts of the\n> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n> definitiely seen average people get confused between \"the blockchain\"\n> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n> come up in beginner explanations).\n> \n> It seems downright masochistic to add\n> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n> for no reason other than aesthetics. Are we actively trying to confuse\n> people?"
            },
            {
                "author": "Chris Pacia",
                "date": "2014-05-04T01:04:52",
                "message_text_only": "Absent a concerted effort to move to something else other than 'bits', I\nwould be willing to bet the nomenclature moves in that direction anyway.\n'Bits' is just a shorten word for 'millibits' (or microbits, if you\nwill). It's easier to say and my guess is people would tend to use it\nnaturally own their own. Kind of like 'bucks' for dollars.\n\nThe other synergies are:\n-bit is part of the word Bitcoin. The currency unit bit is part of a\nwhole bitcoin.\n-bit symbolically represents the tech nature of the bitcoin.\n-bit used to be a unit of money way back when. This largely reclaims it.\n-when used as money bit when in references to a precession metal coin.\nThe name 'bitcoin' references that as well as the mimicking of the gold\nstandard in the protocol rules.\n\nAll around I don't think there is a better fit. I doubt people will get\nconfused by it. The context it's used in will distinguish it from other\nuses of the word.\n\nOn 05/03/2014 12:27 PM, Mike Caldwell wrote:\n> I agree with the sentiment that most people don't understand either computer science or Bitcoin.  The goal of getting people to understand enough about Bitcoin to use it is achievable and a goal that is \"in scope\" of our efforts. Getting them to understand computer science at large at the same time, less so.\n>\n> The fact that people routinely confuse RAM and hard drive sizes has much to do with the fact that the average lay person has little need to prioritize this as something to keep in the forefront.  They don't get \"horribly\" confused, they just simply don't get worked up over what looks to them like a rounding error, much to the dismay of anyone who believes that everyone should be an expert at computer science.  The average joe may assess (accurately from his perspective) that the distinction isn't important enough to merit significant mental resources and he is justified in not expending them that way even if someone else thinks he should.\n>\n> Poor understanding is precisely what a proper effort to name this would be to avoid.  It is not frill or aesthetics, it is a planned targeting of language to achieve the clearest communication to the widest possible target audience using the language most likely to be understood by them in light of our objectives.  It's marketing. \n>\n> Mike\n>\n> Sent from my iPhone\n>\n>> On May 3, 2014, at 9:49 AM, \"Christophe Biocca\" <christophe.biocca at gmail.com> wrote:\n>>\n>> Context as a disambiguator works fine when the interlocutors\n>> understand the topics they're talking about.\n>> Not a day goes by without me seeing \"neurotypical people\" get horribly\n>> confused between RAM and Hard Drive sizes, because they share the same\n>> units (not that that can be helped, as the units are supposed to be\n>> the same, base 1000 vs 1024 notwithstanding).\n>>\n>> Bit (as a unit) is already really confusing for anyone who doesn't\n>> deal with it on a regular basis. I think people who don't see an issue\n>> are making an assumption based on their own lack of confusion. We\n>> understand computer science AND Bitcoin. Most people have zero\n>> understanding of either.\n>>\n>> Bitcoin already has a ton of issues with terrible names for things:\n>>\n>> - Mining (for transaction validation).\n>> - Addresses (which are meant to be one-time use, and don't even really\n>> exist at the network level).\n>> - Wallets (which don't hold your bitcoins, can be copied, and all\n>> backups can be stolen from equally).\n>>\n>> I end up having to make the distinctions obvious every time I explain\n>> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n>> because there were arguably no better words to assign to these\n>> concepts (although I'd argue mining is a really awful metaphor, and is\n>> the one that prompts the most questions from people). Then add to the\n>> pile a bunch of third parties naming themselves after parts of the\n>> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n>> definitiely seen average people get confused between \"the blockchain\"\n>> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n>> come up in beginner explanations).\n>>\n>> It seems downright masochistic to add\n>> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n>> for no reason other than aesthetics. Are we actively trying to confuse\n>> people?\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get \n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Drak",
                "date": "2014-05-04T05:18:32",
                "message_text_only": "+1\nOn 4 May 2014 02:06, \"Chris Pacia\" <ctpacia at gmail.com> wrote:\n\n> Absent a concerted effort to move to something else other than 'bits', I\n> would be willing to bet the nomenclature moves in that direction anyway.\n> 'Bits' is just a shorten word for 'millibits' (or microbits, if you\n> will). It's easier to say and my guess is people would tend to use it\n> naturally own their own. Kind of like 'bucks' for dollars.\n>\n> The other synergies are:\n> -bit is part of the word Bitcoin. The currency unit bit is part of a\n> whole bitcoin.\n> -bit symbolically represents the tech nature of the bitcoin.\n> -bit used to be a unit of money way back when. This largely reclaims it.\n> -when used as money bit when in references to a precession metal coin.\n> The name 'bitcoin' references that as well as the mimicking of the gold\n> standard in the protocol rules.\n>\n> All around I don't think there is a better fit. I doubt people will get\n> confused by it. The context it's used in will distinguish it from other\n> uses of the word.\n>\n> On 05/03/2014 12:27 PM, Mike Caldwell wrote:\n> > I agree with the sentiment that most people don't understand either\n> computer science or Bitcoin.  The goal of getting people to understand\n> enough about Bitcoin to use it is achievable and a goal that is \"in scope\"\n> of our efforts. Getting them to understand computer science at large at the\n> same time, less so.\n> >\n> > The fact that people routinely confuse RAM and hard drive sizes has much\n> to do with the fact that the average lay person has little need to\n> prioritize this as something to keep in the forefront.  They don't get\n> \"horribly\" confused, they just simply don't get worked up over what looks\n> to them like a rounding error, much to the dismay of anyone who believes\n> that everyone should be an expert at computer science.  The average joe may\n> assess (accurately from his perspective) that the distinction isn't\n> important enough to merit significant mental resources and he is justified\n> in not expending them that way even if someone else thinks he should.\n> >\n> > Poor understanding is precisely what a proper effort to name this would\n> be to avoid.  It is not frill or aesthetics, it is a planned targeting of\n> language to achieve the clearest communication to the widest possible\n> target audience using the language most likely to be understood by them in\n> light of our objectives.  It's marketing.\n> >\n> > Mike\n> >\n> > Sent from my iPhone\n> >\n> >> On May 3, 2014, at 9:49 AM, \"Christophe Biocca\" <\n> christophe.biocca at gmail.com> wrote:\n> >>\n> >> Context as a disambiguator works fine when the interlocutors\n> >> understand the topics they're talking about.\n> >> Not a day goes by without me seeing \"neurotypical people\" get horribly\n> >> confused between RAM and Hard Drive sizes, because they share the same\n> >> units (not that that can be helped, as the units are supposed to be\n> >> the same, base 1000 vs 1024 notwithstanding).\n> >>\n> >> Bit (as a unit) is already really confusing for anyone who doesn't\n> >> deal with it on a regular basis. I think people who don't see an issue\n> >> are making an assumption based on their own lack of confusion. We\n> >> understand computer science AND Bitcoin. Most people have zero\n> >> understanding of either.\n> >>\n> >> Bitcoin already has a ton of issues with terrible names for things:\n> >>\n> >> - Mining (for transaction validation).\n> >> - Addresses (which are meant to be one-time use, and don't even really\n> >> exist at the network level).\n> >> - Wallets (which don't hold your bitcoins, can be copied, and all\n> >> backups can be stolen from equally).\n> >>\n> >> I end up having to make the distinctions obvious every time I explain\n> >> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n> >> because there were arguably no better words to assign to these\n> >> concepts (although I'd argue mining is a really awful metaphor, and is\n> >> the one that prompts the most questions from people). Then add to the\n> >> pile a bunch of third parties naming themselves after parts of the\n> >> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n> >> definitiely seen average people get confused between \"the blockchain\"\n> >> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n> >> come up in beginner explanations).\n> >>\n> >> It seems downright masochistic to add\n> >> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n> >> for no reason other than aesthetics. Are we actively trying to confuse\n> >> people?\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> > unparalleled scalability from the best Selenium testing platform\n> available.\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/8203ed3c/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2014-05-04T06:15:55",
                "message_text_only": "Bit by bit, it's become clear that it's a bit much to worry even a\nlittle bit that overloading the word \"bit\" would be every bit as bad\nas a two bit horse with the bit between it's teeth that bit the hand\nthat feeds it, or a drill bit broken to bits after just a bit of use.\n\nAaron\n\nThere's no trick to being a humorist when you have the whole\ngovernment working for you -- Will Rodgers\n\n\nOn Sat, May 3, 2014 at 10:18 PM, Drak <drak at zikula.org> wrote:\n> +1\n>\n> On 4 May 2014 02:06, \"Chris Pacia\" <ctpacia at gmail.com> wrote:\n>>\n>> Absent a concerted effort to move to something else other than 'bits', I\n>> would be willing to bet the nomenclature moves in that direction anyway.\n>> 'Bits' is just a shorten word for 'millibits' (or microbits, if you\n>> will). It's easier to say and my guess is people would tend to use it\n>> naturally own their own. Kind of like 'bucks' for dollars.\n>>\n>> The other synergies are:\n>> -bit is part of the word Bitcoin. The currency unit bit is part of a\n>> whole bitcoin.\n>> -bit symbolically represents the tech nature of the bitcoin.\n>> -bit used to be a unit of money way back when. This largely reclaims it.\n>> -when used as money bit when in references to a precession metal coin.\n>> The name 'bitcoin' references that as well as the mimicking of the gold\n>> standard in the protocol rules.\n>>\n>> All around I don't think there is a better fit. I doubt people will get\n>> confused by it. The context it's used in will distinguish it from other\n>> uses of the word.\n>>\n>> On 05/03/2014 12:27 PM, Mike Caldwell wrote:\n>> > I agree with the sentiment that most people don't understand either\n>> > computer science or Bitcoin.  The goal of getting people to understand\n>> > enough about Bitcoin to use it is achievable and a goal that is \"in scope\"\n>> > of our efforts. Getting them to understand computer science at large at the\n>> > same time, less so.\n>> >\n>> > The fact that people routinely confuse RAM and hard drive sizes has much\n>> > to do with the fact that the average lay person has little need to\n>> > prioritize this as something to keep in the forefront.  They don't get\n>> > \"horribly\" confused, they just simply don't get worked up over what looks to\n>> > them like a rounding error, much to the dismay of anyone who believes that\n>> > everyone should be an expert at computer science.  The average joe may\n>> > assess (accurately from his perspective) that the distinction isn't\n>> > important enough to merit significant mental resources and he is justified\n>> > in not expending them that way even if someone else thinks he should.\n>> >\n>> > Poor understanding is precisely what a proper effort to name this would\n>> > be to avoid.  It is not frill or aesthetics, it is a planned targeting of\n>> > language to achieve the clearest communication to the widest possible target\n>> > audience using the language most likely to be understood by them in light of\n>> > our objectives.  It's marketing.\n>> >\n>> > Mike\n>> >\n>> > Sent from my iPhone\n>> >\n>> >> On May 3, 2014, at 9:49 AM, \"Christophe Biocca\"\n>> >> <christophe.biocca at gmail.com> wrote:\n>> >>\n>> >> Context as a disambiguator works fine when the interlocutors\n>> >> understand the topics they're talking about.\n>> >> Not a day goes by without me seeing \"neurotypical people\" get horribly\n>> >> confused between RAM and Hard Drive sizes, because they share the same\n>> >> units (not that that can be helped, as the units are supposed to be\n>> >> the same, base 1000 vs 1024 notwithstanding).\n>> >>\n>> >> Bit (as a unit) is already really confusing for anyone who doesn't\n>> >> deal with it on a regular basis. I think people who don't see an issue\n>> >> are making an assumption based on their own lack of confusion. We\n>> >> understand computer science AND Bitcoin. Most people have zero\n>> >> understanding of either.\n>> >>\n>> >> Bitcoin already has a ton of issues with terrible names for things:\n>> >>\n>> >> - Mining (for transaction validation).\n>> >> - Addresses (which are meant to be one-time use, and don't even really\n>> >> exist at the network level).\n>> >> - Wallets (which don't hold your bitcoins, can be copied, and all\n>> >> backups can be stolen from equally).\n>> >>\n>> >> I end up having to make the distinctions obvious every time I explain\n>> >> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n>> >> because there were arguably no better words to assign to these\n>> >> concepts (although I'd argue mining is a really awful metaphor, and is\n>> >> the one that prompts the most questions from people). Then add to the\n>> >> pile a bunch of third parties naming themselves after parts of the\n>> >> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n>> >> definitiely seen average people get confused between \"the blockchain\"\n>> >> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n>> >> come up in beginner explanations).\n>> >>\n>> >> It seems downright masochistic to add\n>> >> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n>> >> for no reason other than aesthetics. Are we actively trying to confuse\n>> >> people?\n>> >\n>> > ------------------------------------------------------------------------------\n>> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> > Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> > unparalleled scalability from the best Selenium testing platform\n>> > available.\n>> > Simple to use. Nothing to install. Get started now for free.\"\n>> > http://p.sf.net/sfu/SauceLabs\n>> > _______________________________________________\n>> > Bitcoin-development mailing list\n>> > Bitcoin-development at lists.sourceforge.net\n>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> >\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform\n>> available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Un Ix",
                "date": "2014-05-04T06:23:08",
                "message_text_only": "+1(bit) for your bit on bits.\n\n> On 4/05/2014, at 2:18 pm, \"Aaron Voisine\" <voisine at gmail.com> wrote:\n> \n> Bit by bit, it's become clear that it's a bit much to worry even a\n> little bit that overloading the word \"bit\" would be every bit as bad\n> as a two bit horse with the bit between it's teeth that bit the hand\n> that feeds it, or a drill bit broken to bits after just a bit of use.\n> \n> Aaron\n> \n> There's no trick to being a humorist when you have the whole\n> government working for you -- Will Rodgers\n> \n> \n>> On Sat, May 3, 2014 at 10:18 PM, Drak <drak at zikula.org> wrote:\n>> +1\n>> \n>>> On 4 May 2014 02:06, \"Chris Pacia\" <ctpacia at gmail.com> wrote:\n>>> \n>>> Absent a concerted effort to move to something else other than 'bits', I\n>>> would be willing to bet the nomenclature moves in that direction anyway.\n>>> 'Bits' is just a shorten word for 'millibits' (or microbits, if you\n>>> will). It's easier to say and my guess is people would tend to use it\n>>> naturally own their own. Kind of like 'bucks' for dollars.\n>>> \n>>> The other synergies are:\n>>> -bit is part of the word Bitcoin. The currency unit bit is part of a\n>>> whole bitcoin.\n>>> -bit symbolically represents the tech nature of the bitcoin.\n>>> -bit used to be a unit of money way back when. This largely reclaims it.\n>>> -when used as money bit when in references to a precession metal coin.\n>>> The name 'bitcoin' references that as well as the mimicking of the gold\n>>> standard in the protocol rules.\n>>> \n>>> All around I don't think there is a better fit. I doubt people will get\n>>> confused by it. The context it's used in will distinguish it from other\n>>> uses of the word.\n>>> \n>>>> On 05/03/2014 12:27 PM, Mike Caldwell wrote:\n>>>> I agree with the sentiment that most people don't understand either\n>>>> computer science or Bitcoin.  The goal of getting people to understand\n>>>> enough about Bitcoin to use it is achievable and a goal that is \"in scope\"\n>>>> of our efforts. Getting them to understand computer science at large at the\n>>>> same time, less so.\n>>>> \n>>>> The fact that people routinely confuse RAM and hard drive sizes has much\n>>>> to do with the fact that the average lay person has little need to\n>>>> prioritize this as something to keep in the forefront.  They don't get\n>>>> \"horribly\" confused, they just simply don't get worked up over what looks to\n>>>> them like a rounding error, much to the dismay of anyone who believes that\n>>>> everyone should be an expert at computer science.  The average joe may\n>>>> assess (accurately from his perspective) that the distinction isn't\n>>>> important enough to merit significant mental resources and he is justified\n>>>> in not expending them that way even if someone else thinks he should.\n>>>> \n>>>> Poor understanding is precisely what a proper effort to name this would\n>>>> be to avoid.  It is not frill or aesthetics, it is a planned targeting of\n>>>> language to achieve the clearest communication to the widest possible target\n>>>> audience using the language most likely to be understood by them in light of\n>>>> our objectives.  It's marketing.\n>>>> \n>>>> Mike\n>>>> \n>>>> Sent from my iPhone\n>>>> \n>>>>> On May 3, 2014, at 9:49 AM, \"Christophe Biocca\"\n>>>>> <christophe.biocca at gmail.com> wrote:\n>>>>> \n>>>>> Context as a disambiguator works fine when the interlocutors\n>>>>> understand the topics they're talking about.\n>>>>> Not a day goes by without me seeing \"neurotypical people\" get horribly\n>>>>> confused between RAM and Hard Drive sizes, because they share the same\n>>>>> units (not that that can be helped, as the units are supposed to be\n>>>>> the same, base 1000 vs 1024 notwithstanding).\n>>>>> \n>>>>> Bit (as a unit) is already really confusing for anyone who doesn't\n>>>>> deal with it on a regular basis. I think people who don't see an issue\n>>>>> are making an assumption based on their own lack of confusion. We\n>>>>> understand computer science AND Bitcoin. Most people have zero\n>>>>> understanding of either.\n>>>>> \n>>>>> Bitcoin already has a ton of issues with terrible names for things:\n>>>>> \n>>>>> - Mining (for transaction validation).\n>>>>> - Addresses (which are meant to be one-time use, and don't even really\n>>>>> exist at the network level).\n>>>>> - Wallets (which don't hold your bitcoins, can be copied, and all\n>>>>> backups can be stolen from equally).\n>>>>> \n>>>>> I end up having to make the distinctions obvious every time I explain\n>>>>> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n>>>>> because there were arguably no better words to assign to these\n>>>>> concepts (although I'd argue mining is a really awful metaphor, and is\n>>>>> the one that prompts the most questions from people). Then add to the\n>>>>> pile a bunch of third parties naming themselves after parts of the\n>>>>> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n>>>>> definitiely seen average people get confused between \"the blockchain\"\n>>>>> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n>>>>> come up in beginner explanations).\n>>>>> \n>>>>> It seems downright masochistic to add\n>>>>> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n>>>>> for no reason other than aesthetics. Are we actively trying to confuse\n>>>>> people?\n>>>> \n>>>> ------------------------------------------------------------------------------\n>>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>>>> unparalleled scalability from the best Selenium testing platform\n>>>> available.\n>>>> Simple to use. Nothing to install. Get started now for free.\"\n>>>> http://p.sf.net/sfu/SauceLabs\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>> \n>>> \n>>> \n>>> \n>>> ------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>>> unparalleled scalability from the best Selenium testing platform\n>>> available.\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n>> \n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get \n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-04T06:27:58",
                "message_text_only": "On Sun, May 4, 2014 at 8:15 AM, Aaron Voisine <voisine at gmail.com> wrote:\n> Bit by bit, it's become clear that it's a bit much to worry even a\n> little bit that overloading the word \"bit\" would be every bit as bad\n> as a two bit horse with the bit between it's teeth that bit the hand\n> that feeds it, or a drill bit broken to bits after just a bit of use.\n\n+1 good summary\n\nAnd I think that's a good conclusion to this discussion about unit\nnames on the development mailing list. Everything has been said now.\n\nWladimir"
            },
            {
                "author": "Tamas Blummer",
                "date": "2014-05-04T06:36:02",
                "message_text_only": "Wladimir,\n\nwhat is missing is a decision to pull for the reference client. \nOr did I missed that bit?\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 495 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/7a5232ca/attachment.sig>"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-04T06:59:52",
                "message_text_only": "On Sun, May 4, 2014 at 8:36 AM, Tamas Blummer <tamas at bitsofproof.com> wrote:\n> Wladimir,\n>\n> what is missing is a decision to pull for the reference client.\n> Or did I missed that bit?\n\nNo opinion - we'll follow whatever the rest does.\n\nWladimir"
            },
            {
                "author": "Mike Caldwell",
                "date": "2014-05-04T14:42:40",
                "message_text_only": "I will drink to that!\n\nBitte ein Bit! (A Bit please - aka Bitburger Beer)\n\nMike\n\nSent from my iPhone\n\n> On May 4, 2014, at 12:17 AM, \"Aaron Voisine\" <voisine at gmail.com> wrote:\n> \n> Bit by bit, it's become clear that it's a bit much to worry even a\n> little bit that overloading the word \"bit\" would be every bit as bad\n> as a two bit horse with the bit between it's teeth that bit the hand\n> that feeds it, or a drill bit broken to bits after just a bit of use.\n> \n> Aaron\n> \n> There's no trick to being a humorist when you have the whole\n> government working for you -- Will Rodgers\n> \n> \n>> On Sat, May 3, 2014 at 10:18 PM, Drak <drak at zikula.org> wrote:\n>> +1\n>> \n>>> On 4 May 2014 02:06, \"Chris Pacia\" <ctpacia at gmail.com> wrote:\n>>> \n>>> Absent a concerted effort to move to something else other than 'bits', I\n>>> would be willing to bet the nomenclature moves in that direction anyway.\n>>> 'Bits' is just a shorten word for 'millibits' (or microbits, if you\n>>> will). It's easier to say and my guess is people would tend to use it\n>>> naturally own their own. Kind of like 'bucks' for dollars.\n>>> \n>>> The other synergies are:\n>>> -bit is part of the word Bitcoin. The currency unit bit is part of a\n>>> whole bitcoin.\n>>> -bit symbolically represents the tech nature of the bitcoin.\n>>> -bit used to be a unit of money way back when. This largely reclaims it.\n>>> -when used as money bit when in references to a precession metal coin.\n>>> The name 'bitcoin' references that as well as the mimicking of the gold\n>>> standard in the protocol rules.\n>>> \n>>> All around I don't think there is a better fit. I doubt people will get\n>>> confused by it. The context it's used in will distinguish it from other\n>>> uses of the word.\n>>> \n>>>> On 05/03/2014 12:27 PM, Mike Caldwell wrote:\n>>>> I agree with the sentiment that most people don't understand either\n>>>> computer science or Bitcoin.  The goal of getting people to understand\n>>>> enough about Bitcoin to use it is achievable and a goal that is \"in scope\"\n>>>> of our efforts. Getting them to understand computer science at large at the\n>>>> same time, less so.\n>>>> \n>>>> The fact that people routinely confuse RAM and hard drive sizes has much\n>>>> to do with the fact that the average lay person has little need to\n>>>> prioritize this as something to keep in the forefront.  They don't get\n>>>> \"horribly\" confused, they just simply don't get worked up over what looks to\n>>>> them like a rounding error, much to the dismay of anyone who believes that\n>>>> everyone should be an expert at computer science.  The average joe may\n>>>> assess (accurately from his perspective) that the distinction isn't\n>>>> important enough to merit significant mental resources and he is justified\n>>>> in not expending them that way even if someone else thinks he should.\n>>>> \n>>>> Poor understanding is precisely what a proper effort to name this would\n>>>> be to avoid.  It is not frill or aesthetics, it is a planned targeting of\n>>>> language to achieve the clearest communication to the widest possible target\n>>>> audience using the language most likely to be understood by them in light of\n>>>> our objectives.  It's marketing.\n>>>> \n>>>> Mike\n>>>> \n>>>> Sent from my iPhone\n>>>> \n>>>>> On May 3, 2014, at 9:49 AM, \"Christophe Biocca\"\n>>>>> <christophe.biocca at gmail.com> wrote:\n>>>>> \n>>>>> Context as a disambiguator works fine when the interlocutors\n>>>>> understand the topics they're talking about.\n>>>>> Not a day goes by without me seeing \"neurotypical people\" get horribly\n>>>>> confused between RAM and Hard Drive sizes, because they share the same\n>>>>> units (not that that can be helped, as the units are supposed to be\n>>>>> the same, base 1000 vs 1024 notwithstanding).\n>>>>> \n>>>>> Bit (as a unit) is already really confusing for anyone who doesn't\n>>>>> deal with it on a regular basis. I think people who don't see an issue\n>>>>> are making an assumption based on their own lack of confusion. We\n>>>>> understand computer science AND Bitcoin. Most people have zero\n>>>>> understanding of either.\n>>>>> \n>>>>> Bitcoin already has a ton of issues with terrible names for things:\n>>>>> \n>>>>> - Mining (for transaction validation).\n>>>>> - Addresses (which are meant to be one-time use, and don't even really\n>>>>> exist at the network level).\n>>>>> - Wallets (which don't hold your bitcoins, can be copied, and all\n>>>>> backups can be stolen from equally).\n>>>>> \n>>>>> I end up having to make the distinctions obvious every time I explain\n>>>>> Bitcoin to someone new to it. There's an acceptable tradeoff here,\n>>>>> because there were arguably no better words to assign to these\n>>>>> concepts (although I'd argue mining is a really awful metaphor, and is\n>>>>> the one that prompts the most questions from people). Then add to the\n>>>>> pile a bunch of third parties naming themselves after parts of the\n>>>>> protocol (Coinbase,Blockchain.info). Not blaming them for it, but I've\n>>>>> definitiely seen average people get confused between \"the blockchain\"\n>>>>> and \"blockchain.info\" (not so much Coinbase, because that name doesn't\n>>>>> come up in beginner explanations).\n>>>>> \n>>>>> It seems downright masochistic to add\n>>>>> yet-another-word-that-doesn't-mean-what-you-think-it-means to the pile\n>>>>> for no reason other than aesthetics. Are we actively trying to confuse\n>>>>> people?\n>>>> \n>>>> ------------------------------------------------------------------------------\n>>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>>>> unparalleled scalability from the best Selenium testing platform\n>>>> available.\n>>>> Simple to use. Nothing to install. Get started now for free.\"\n>>>> http://p.sf.net/sfu/SauceLabs\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>> \n>>> \n>>> \n>>> ------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>>> unparalleled scalability from the best Selenium testing platform\n>>> available.\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> \n>> \n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Gordon Mohr",
                "date": "2014-05-05T22:33:37",
                "message_text_only": "On 5/2/14, 10:41 PM, Aaron Voisine wrote:\n> I have to agree with Mike. Human language is surprisingly tolerant of\n> overloading and inference from context. Neurotypical people have no\n> problem with it and perceive a software engineer's aversion to it as\n> being pedantic and strange. Note that \"bits\" was a term for a unit of\n> money long before the invention of digital computers.\n\nOf course people *can* manage, when they need to; natural language is \nfull of such overloading. But the clashes are not costless, they add \nmental load for first-time learners and low-context users.\n\nSo the concern is, when there's a free choice, why not bootstrap words \nthat are less fragile and context-dependent? Why add extra comprehension \ngotchas into what is already a challenging domain?\n\nAnd it's exactly the aspect that makes 'bit' attractive \u2013 \"it's right \nthere in the name _Bit_coin!\" \u2013 that equally presents the clash \u2013 \nbecause the sense of 'bit' honored in the \"Bitcoin\" name, and central to \nthe systems' essential properties, is the binary digit.\n\nIt's like intentionally introducing a 'false friend' word-correlation \nbetween the vernacular of the casual Bitcoin user, and the language of \nBitcoin experts. And the word pair is nearly auto-antonymic in some \nessential dimensions: indivisible vs. divisible, base-2 vs. base-10, \ncomposed-geometrically vs. composed-arithmetically.\n\nhttps://en.wikipedia.org/wiki/False_friend - interferes w/ lang learning\nhttps://en.wikipedia.org/wiki/Auto-antonym\n\nIn naming amounts, there's no desperate need to stay in the shallow \ncrowded pool of words just derived from \"bit\" and \"coin\". Real \ncurrencies have many names for their units, including subunits with \nhighly-unrelated sounds. The contrasting words help create more shades \nof meaning for different purposes. Some examples:\n\n  dollars/bucks - bits (1/8ths) - dimes (1/10ths) - cents (1/100ths)\n  pounds/quid - shillings (1/20ths) - pence (1/100th; formerly 1/240th)\n  yuan/kuai - jiao (1/10ths) - fen (1/100ths)\n\nRegarding the cute example of contextual disambiguation...\n\nOn 5/3/14, 11:15 PM, Aaron Voisine wrote:\n> Bit by bit, it's become clear that it's a bit much to worry even a\n> little bit that overloading the word \"bit\" would be every bit as bad\n> as a two bit horse with the bit between it's teeth that bit the hand\n> that feeds it, or a drill bit broken to bits after just a bit of use.\n\nThat there are many existing definitions doesn't reassure that one \n*extra* definition will still be costless, especially for \nlow-literacy/low-context/low-numeracy users or learners.\n\nNote that this example *doesn't* showcase the new proposed \n'100-satoshi-value' usage, nor activate the 'binary digit' meaning. (It \ndoes activate the \"part/quantity, usually small or imprecise\" sense of \n'bit', 7 times depending on how you classify the idioms.)\n\nTry instead this mash of concepts, which someone deciding whether to \ntrust 'bits' will face:\n\n\"Bitcoin uses the digital science of bits, the indivisible 1s and 0s of \ncomputer logic, to create a networked money measured in bits, which \nsplit into 100 indivisible cents called satoshis. Bit amounts are \nrepresented as 64-bit integer counts of 1/100th of a bit, so 64-bit \nintegers can represent any balance from the smallest positive bit total, \n0.01 bits (integer 1), up to a number over 92 quintillion bits (2^63-1, \ninteger 9,223,372,036,854,775,808).\n\nThat max value won't be needed, though, because a crucial bit of the \noriginal Satoshi design is a maximum issuance of 21,000,000,000,000.00 \nbits (21 trillion bits, 21 terabits). These new bits are awarded to \ncomputers racing to complete a digital verification task on an \nalgorithmic schedule: currently 25 million bits (25 megabits) arrive \nabout every 10 minutes. That is, the total number of Bitcoin bits is \nincreasing at 6.33 Kbps, though that arrival slows to 0 bps by around \nthe year 2140.\n\nThe most important bit to remember is that your ability to spend bits is \ncontrolled by secret 256-bit numbers, called private keys, bits of info \nthat only you know. The fact that these keys are 256-bits long is what \nmakes them practically unguessable, even if someone had a computing \nbudget of all the bits in the world, or built a computer out of all the \nbits in the universe. (That is, even though the network can create 25 \nmillion bits every 10 minutes, it can't guess your secret 256 bits in \nthe lifetime of the universe!)\n\nWatch out, though: human-chosen passwords and 4-8 word phrases typically \nprovide much less than 128 bits of security, far too little to create a \n256-bit key. And in the math of bits, having half as many bits doesn't \nmean half the security, it means the square-root as much security. (For \na 128-bit shortfall, that's 2^128 or 340 billion billion billion billion \ntimes less strength.)\n\nIf your secret has enough bits, though, you can be confident that you \ncan put millions of dollars into bits, because of the cryptographic \npower of hundreds of bits. The current value of a bit is 1/20th of a US \ncent, so 256 bits has the purchasing power of about 11\u00a2.\n\nIf you say you've got a bit of bitcoin in your wallet, I'll need you to \nbe a bit more specific. If you've got one bit of bitcoin, you've got \n1/20th of a cent worth, an insignificant bit. But if you've got one \nbitcoin, you've got about $440 worth, quite a bit! Now you know a bit \nabout Bitcoin, where your highly-valuable bits are protected by the \nscience of bits. Get some bits now, they're small and still cheap, what \nis there to lose?\"\n\nNow, most people may never need to understand binary digits and \ninformation science. But if a future of widespread cryptocurrency \nsuccess comes to pass, more people than ever before will want (and need) \nto understand the basics, and we can help them with clear terminology.\n\nI'd also point out to those who've built their brands around the word \n'bit' that while it may seem grand to have the currency's most-common \nunit in your name/logo, you might wind up snake-bit. How?\n\n*If* 'bit' is effectively bootstrapped to mean a tangible amount that \npeople understand intuitively for everyday commerce, that amount is \ncurrently tiny (1/20th of a USD cent) and would still be tiny (10\u00a2) if \nbitcoin appreciates in value over 200x to USD$100K per bitcoin.\n\nSo \"bitpay\" starts reading as \"penny-pay\" \u2013 and under an optimistic \nappreciation scenario might someday read as \"dime-pay\".\n\n\"bitsofproof\" reads as \"pennies-of-proof\" or someday \"dimes-of-proof\".\n\n- Gordon"
            }
        ],
        "thread_summary": {
            "title": "\"bits\": Unit of account",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Gordon Mohr",
                "Tamas Blummer",
                "slush",
                "Wladimir",
                "Un Ix",
                "Christophe Biocca",
                "Chris Pacia",
                "Mike Caldwell",
                "Drak",
                "Aaron Voisine"
            ],
            "messages_count": 16,
            "total_messages_chars_count": 85915
        }
    },
    {
        "title": "[Bitcoin-development] Block collision resolution using the DECOR protocol and Bonneau's Kickbacks problem",
        "thread_messages": [
            {
                "author": "Sergio Lerner",
                "date": "2014-05-02T11:48:38",
                "message_text_only": "The Bonneau's Kickbacks problem is interesting because it is a\ndestabilizing incentive.\nJust by luck yesterday I was working on the same problem. I found a way\nto prevent Kickbacks and provide a conflict resolution strategy that\nbenefits all member of the network.\nI will repost my blog post here, but the original has very nice diagrams\nand is full of hyperlinnk, so I recommend you see the original post...\n\nEven faster block-chains with DECOR protocol\n\nOne of the most interesting papers ever written about the Bitcoin\nblock-chain design is \u201cAccelerating Bitcoin\u2019s Transaction Processing\u201d by\nSompolinsky and Zohar. The paper presents the GHOST protocol which aims\nto achieve higher TPS securely by changing the way nodes decide which is\nthe best chain fork. One of the issues that is not considered by the\npaper is the existence of a selfish bias independent of the miner\u2019s\nhashing power. When a miner solves a block, and a competing block is\nalso received, the miner will mine on top of his own solved block. This\nis not only a consequence of the best-chain selection policy, there is a\nstrong incentive to do so. By mining on top of your own solved block,\nyou double the expected reward while keeping the same winning\nprobabilities. As a informal comparison, in Satoshi\u2019s security model,\nthe rogue miner is irrational and malicious. For example, the\nconfirmation interval computations assume a rogue miner having 10% of\nthe network hashing power will try to mine a selfish chain in order to\ntry to outperform the global best-chain even if the odds are against\nhim. In Sopolinky/Zohar security model, the miners are rational, but use\na sub-optimal strategy. For example when two blocks compete, all miners\nwill chose one of them arbitrarily (all choose the same block). Although\nthis may be optimal for a fully cooperative network it\u2019s not what miners\nwill optimally choose for themselves. In Eyal/Sirer security model, the\nrogue miner is rational and uses an strategy believed by the authors to\nbe optimal.\nIn this post we improve Sopolinky/Zohar model assuming the attacker uses\nEyal/Sirer selfish strategy and the standard double-betting strategy.\n\nDouble-betting Strategy by Default\n\nThe double-betting is a mining strategy pre-programmed in the in Satoshi\nreference miner. When a miner mines a block and a competing block is\nalso detected, the miner won\u2019t switch to the other chain because is has\nthe same length, so mining will continue on the \u201cselfish\u201d fork. Of\ncourse there is nothing inherently selfish with this strategy since the\nminer has not enough information about which of the two forks is the one\nwhich the majority of the miners are mining on top of. Nevertheless the\ndivision of hashing power in forks is against the common good and\nreduces both the network TPS and the network confirmation time.\n\nTit for Tat and identities\n\nIf the two competing miners could detect the other miners identity in\nblocks, they could apply a cooperative strategy like Tit for Tat.\nWhenever two competing blocks are found by two miners without having any\nprevious interaction, the conflict is resolved by both miners mining on\ntop of the block with lower hash digest. If the two miners have\ninteracted before, the conflict is resolved by both miners mining in the\nblock that was solved by the opposite miner chosen in the previous\ninteraction. If a miner acts selfishness and breaks the ties, then the\nother miner opts to apply an equivalent retaliation in the next block\nconflict. The retaliation is only considered successful if the miner who\nretaliates wins the ties. This strategy may in practice for at least\nfour reasons:\n\nSometimes a miner may solve two blocks in a row without noticing that\nthe first one had a conflicting sibling. Then the competing miner would\nretaliate.\nIf more than two miners are competing, it\u2019s more complex to decide which\nblock should be chosen as parent.\nAll miners must dynamically maintain information of all previous\ninteractions between all other miners.\nSome miners want to preserve anonymity and won\u2019t publish identifying\ninformation.\n\nThe first two reasons can be disregarded since the conflicting events\nmay have a very low probability. The third is only a minor technical\ndifficulty. But the last reason may be very strong.\n\nDECOR (DEterministic COnflict Resolution)\n\nI present here a reward strategy I called DECOR that incentives\nresolving conflicts in a deterministic way that benefits all conflicting\nminers at the same time. This strategy practically eliminates any\npossibly block-chain reversal when miners are rational. To make this\nexplanation clearer we\u2019ll assume that all block rewards and fees are\nequal so each miner receives exactly the same net payment for a block.\nAlso the reward percentages proposed can be varied as long as some\nrelations between are maintained. The idea is that whenever two miners\nAlice and Bob mine two competing blocks (a block conflict) both decide\nto mine on top of the block with the lower hash. First, all conflicting\nblocks headers that are not very old are forwarded to allow all peers to\ncompare block hashes. If a miner Carol (or Alice or Bob) solves a\nfollowing block, she includes in his block a reference to the uncle\nblock header that was left out of the main chain. This reference is\nstored either in the block header, the coinbase field or in a special\ntransaction. The uncle block owner will get automatically 50% of the\nreward of his main-chain sibling if uncle hash is higher than sibling\nhash or 35% if not. The sibling also pays a 10% to Carol. Also the\nsibling burns 10% if the uncle hash is higher than the sibling hash or\n35% if not. This strategy sets incentives for conflicting miners to\nchoose always the parent with the lowest hash and to always reference a\nlost uncle in the following blocks.\n\nMining strategy:\n\nIf there is no block Y having a sibling X in the main chain whose reward\nhas not matured then mine in the standard way and exit this procedure\nAdd a reference to Y in the new block that is being prepared.\nLet x := BlockRewardPlusFees(X)\nLet q := x*0.5\nLet z :=x*0.1\nIf Hash(X)>Hash(Y) then q :=q-(x*0.2) and z :=z+(x*0.2)\nAdd a transaction that has as input the coinbase output of X and has\nfour outputs: the first output pays q coins to the address specified in\nthe coinbase output of block Y, the second output pays (x*0.1) coins to\nan owned address, the third output burns z coins, and the forth output\npays the remaining coins to the same address as the input address. All\nusers accept this transaction as valid even if it\u2019s unsigned if a\ncorrect uncle is referenced.\n\nThe following diagrams show an example of how two miners Alice and Bob\nwill prefer mining on top of the same parent (A1) after a block A1\n(created by Alice) is in conflict with a block B1 created by Bob. Carol\nis a third miner that is not in conflict with neither Alice nor Bob. In\nthe diagrams the first letter indicates who created the block and the\nnumber following indicates the block height. The arrows point to each\nblock parent.Bob-op\n\n\nAlthough I\u2019m giving no formal proof, It\u2019s evident that the best strategy\nfor Alice and Bob is to choose the same parent for the following block.\n\nGHOST+DECOR\n\nThe DECOR strategy can be implemented along with the GHOST protocol. In\nfact both protocols have things in common, such as the need to forward\nblock headers that are siblings of blocks in the best chain. Using both\nprotocols together, along with route optimizations proposed here, maybe\n2000 TPS can be achieved today.\n\n\n\nBest regards,\nSergio."
            },
            {
                "author": "Sergio Lerner",
                "date": "2014-05-02T12:00:57",
                "message_text_only": "The original post is here: http://bitslog.wordpress.com/2014/05/02/decor/"
            },
            {
                "author": "Sergio Lerner",
                "date": "2014-05-05T19:45:07",
                "message_text_only": "On 02/05/2014 10:56 a.m., Joseph Bonneau wrote:\n> This is an interesting idea Sergio. I have two concerns:\n>\n> You mention \"50% of the block reward\" going to the uncle block. Does\n> this mean the parent gets 1, and the uncle 0.5, or both get 0.5? In\n> the first interpretation (which I assumed was the design), mining is\n> no longer a zero-sum game and this could have lots of unforeseen\n> implications. For example, selfish mining might be more profitable,\n> since you're less disincentivized to avoid conflicts.\nThe second interpretation is the correct one.\n> In the second interpretation, there's pressure to have the next miner\n> ignore the uncle to not share the reward. This would encourage\n> kickback-style attacks and advantage large mining pools because they\n> can mine on their own blocks and ignore colliding uncles.\nIncluding an uncle can be done at any time before a coinbase matures\n(100 blocks) (of course the term \"uncle\" is misleading in those cases) .\nSo, for example, the uncle can be included 50 blocks afterward. So it's\nvery difficult that a miner prevents other miners from including the\nuncle and taking the reward given by uncle inclusion.\n\nSame ineffective attack:\nA big miner could try to bribe all other miners not to include the\nuncle, but this would be terribly costly. Suppose that I mine a block\nignoring an uncle Z and then I publish this message: \"Every miner from\nblock number X to block number Y that does not include this uncle Z will\nbe given Q Bitcoins\". How much would Q be? Since by including the uncle\nthe miner gets 5 BTC of reward (in the example case where block reward\nis 50 BTC), then each bribery payment would have to be higher than 5\nBTC, totaling 500 BTC ! much more than the 25 BTC the miner will loose\nby including the uncle.\n\nJust by sending a transaction with a lot of fees that depends on my\nblock does not prevent subsequent miners from including the supposedly\nbanned uncle.\n\nThen, I think there are no kickback-style attacks.\n\n>\n> Also, I think this came up in the Princeton meet-up, but it's not\n> ideal to just hash the blocks to decide the \"winner\" because this lets\n> you know in advance your block's likelihood of winning a collision by\n> looking at how high or low its hash is, in which case you can publish\n> a weak block right away or withhold a strong one and do selfish\n> mining. A better approach to break ties between blocks A and B is to\n> see if H(A||B) < H(B||A). That way neither block holder can find out\n> in advance if their block is likely to win a collision.\n>\nIn the DECOR protocol, I think selfish miners cannot get any advantage,\nbecause the blocks that loose the latency race will come back as uncles\nand get their reward share anyway. Maybe Ittay Eyal and Emin Gun Sirer\ncan say more about this...\n\nBest regards, Sergio."
            },
            {
                "author": "Ittay",
                "date": "2014-05-05T20:27:08",
                "message_text_only": "As far as I understand, the incentives Sergio suggests would work. So\nwe can assume that the pruned uncle blocks would still win their creators\nat least partial revenue.\n\nAs for selfish mining - I'm not sure how GHOST affects it. I don't think it\ndoes. The selfish miners just care about heaviest subtree rather than\nlongest chain. DECOR changes revenue collection significantly, so it\ncertainly affects selfish mining. I believe it changes the threshold at\nwhich\nselfish mining is profitable, but doesn't deter selfish mining completely:\nSelfish miners can still cause others to reduce their revenue by having\nthem work on older blocks.\n\nIttay\n\n\n\nOn Mon, May 5, 2014 at 3:45 PM, Sergio Lerner <sergiolerner at certimix.com>wrote:\n\n>\n> On 02/05/2014 10:56 a.m., Joseph Bonneau wrote:\n> > This is an interesting idea Sergio. I have two concerns:\n> >\n> > You mention \"50% of the block reward\" going to the uncle block. Does\n> > this mean the parent gets 1, and the uncle 0.5, or both get 0.5? In\n> > the first interpretation (which I assumed was the design), mining is\n> > no longer a zero-sum game and this could have lots of unforeseen\n> > implications. For example, selfish mining might be more profitable,\n> > since you're less disincentivized to avoid conflicts.\n> The second interpretation is the correct one.\n> > In the second interpretation, there's pressure to have the next miner\n> > ignore the uncle to not share the reward. This would encourage\n> > kickback-style attacks and advantage large mining pools because they\n> > can mine on their own blocks and ignore colliding uncles.\n> Including an uncle can be done at any time before a coinbase matures\n> (100 blocks) (of course the term \"uncle\" is misleading in those cases) .\n> So, for example, the uncle can be included 50 blocks afterward. So it's\n> very difficult that a miner prevents other miners from including the\n> uncle and taking the reward given by uncle inclusion.\n>\n> Same ineffective attack:\n> A big miner could try to bribe all other miners not to include the\n> uncle, but this would be terribly costly. Suppose that I mine a block\n> ignoring an uncle Z and then I publish this message: \"Every miner from\n> block number X to block number Y that does not include this uncle Z will\n> be given Q Bitcoins\". How much would Q be? Since by including the uncle\n> the miner gets 5 BTC of reward (in the example case where block reward\n> is 50 BTC), then each bribery payment would have to be higher than 5\n> BTC, totaling 500 BTC ! much more than the 25 BTC the miner will loose\n> by including the uncle.\n>\n> Just by sending a transaction with a lot of fees that depends on my\n> block does not prevent subsequent miners from including the supposedly\n> banned uncle.\n>\n> Then, I think there are no kickback-style attacks.\n>\n> >\n> > Also, I think this came up in the Princeton meet-up, but it's not\n> > ideal to just hash the blocks to decide the \"winner\" because this lets\n> > you know in advance your block's likelihood of winning a collision by\n> > looking at how high or low its hash is, in which case you can publish\n> > a weak block right away or withhold a strong one and do selfish\n> > mining. A better approach to break ties between blocks A and B is to\n> > see if H(A||B) < H(B||A). That way neither block holder can find out\n> > in advance if their block is likely to win a collision.\n> >\n> In the DECOR protocol, I think selfish miners cannot get any advantage,\n> because the blocks that loose the latency race will come back as uncles\n> and get their reward share anyway. Maybe Ittay Eyal and Emin Gun Sirer\n> can say more about this...\n>\n> Best regards, Sergio.\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140505/4662568e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Block collision resolution using the DECOR protocol and Bonneau's Kickbacks problem",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Ittay",
                "Sergio Lerner"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 14246
        }
    },
    {
        "title": "[Bitcoin-development] moving the default display to mbtc",
        "thread_messages": [
            {
                "author": "Melvin Carvalho",
                "date": "2014-05-02T14:29:35",
                "message_text_only": "On 14 November 2013 12:45, Melvin Carvalho <melvincarvalho at gmail.com> wrote:\n\n> Rationale\n> =======\n>\n> Given the recent rise in value there seems to be anecdotal evidence that 1\n> bitcoin being so high is putting off a lot of normal buyers, because they\n> feel that putting down $400+ and only getting \"1 coin\", or having to buy in\n> multiples of 1 whole coin, is too much.. only after it being explained that\n> they can buy fractional amounts to they regain interest, apparently\n> happening increasingly.\n>\n>\n> Straw Poll\n> ========\n>\n> 6 months ago there was a straw poll on this\n>\n> https://bitcointalk.org/index.php?topic=220322.0\n>\n> Roughly 2/3 of respondents favoured switching\n>\n> A further 20% said to switch after it hits 1000\n>\n> Satoshi's comments:\n> ================\n>\n> Eventually at most only 21 million coins for 6.8 billion people in the\n> world if it really gets huge.\n>\n> But don't worry, there are another 6 decimal places that aren't shown, for\n> a total of 8 decimal places internally.  It shows 1.00 but internally it's\n> 1.00000000.  If there's massive deflation in the future, the software could\n> show more decimal places.\n>\n> If it gets tiresome working with small numbers, we could change where the\n> display shows the decimal point.  Same amount of money, just different\n> convention for where the \",\"'s and \".\"'s go.  e.g. moving the decimal place\n> 3 places would mean if you had 1.00000 before, now it shows it as 1,000.00.\n>\n> https://bitcointalk.org/index.php?topic=44.msg267#msg267\n>\n>\n> Would now be a good time to start thinking about changing the default\n> display in the software.  Perhaps initially it could be a dropdown display\n> option, then at some point mbtc becomes the default?\n>\n>\nJust a FYI on this topic.  In Gavin's recent interview he described the\nblock reward as 25,000 millibits (about 25 minutes in).\n\nhttps://www.youtube.com/watch?v=4pBd-OD9Rns\n\nDecide for yourself whether or not that's meaningful :)\n\nPS very enjoyable and accessible panel ...\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/aa705858/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-02T19:17:59",
                "message_text_only": "<vendor hat: on>\n\nRelated: http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Ben Davenport",
                "date": "2014-05-03T00:54:37",
                "message_text_only": "I fully support this (it's what I suggested over a year ago), but what it\ncomes down to is BitPay, Coinbase, Blockchain and Bitstamp getting\ntogether, agreeing what they're going to use, and doing a little joint\ncustomer education campaign around it. If there's community momentum around\n\"bits\", great.\n\nMy only addition is that I think we should all stop trying to attach SI\nprefixes to the currency unit. Name me another world currency that uses SI\nprefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at\nleast in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.\nThat may not be accepted form everywhere, but in any case it's an informal\nformat, not a formal one. The important point is there should be one base\nunit that is not modified with SI prefixes. And I think the arguments are\nstrong for that unit being = 100 satoshi.\n\nBen\n\n\n\n\nOn Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> <vendor hat: on>\n>\n> Related:\n> http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/3dded3a2/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2014-05-03T01:13:55",
                "message_text_only": "I've been a strong supporter of the 1e-6 unit switch since the beginning\nand ready to do whatever I can with Armory to help ease that\ntransition.  I'm happy to prioritize a release that updates the Armory\ninterface to make \"bits\" the default unit, when the time is right.  I\nthink it makes sense to get as many apps and services to upgrade nearly\nsimultaneously.\n\nMy plan is to have a popup on the first load of the new version that\nbriefly introduces the change, and mentions that they can go back to the\nold way in the settings, but make them work to do it.  For the transient\nperiod (6 months?) all input boxes will auto-update nearby labels with\nthe converted-to-BTC value as they type, so that they don't have to do\nany math in their head.  Similarly, all displayed BTC values will show\nboth.  But the 1e-6 unit will always be default or first unless they\nexplicitly change it in the interface.\n\n\n\n\nOn 5/2/2014 8:54 PM, Ben Davenport wrote:\n> I fully support this (it's what I suggested over a year ago), but what\n> it comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting\n> together, agreeing what they're going to use, and doing a little joint\n> customer education campaign around it. If there's community momentum\n> around \"bits\", great.\n>\n> My only addition is that I think we should all stop trying to attach\n> SI prefixes to the currency unit. Name me another world currency that\n> uses SI prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted\n> standard at least in the US is <currency-symbol><amount><modifier>,\n> i.e. $63k or $3M. That may not be accepted form everywhere, but in any\n> case it's an informal format, not a formal one. The important point is\n> there should be one base unit that is not modified with SI prefixes.\n> And I think the arguments are strong for that unit being = 100 satoshi.\n>\n> Ben\n>\n>\n>\n>\n> On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com\n> <mailto:jgarzik at bitpay.com>> wrote:\n>\n>     <vendor hat: on>\n>\n>     Related:\n>     http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html\n>\n>     --\n>     Jeff Garzik\n>     Bitcoin core developer and open source evangelist\n>     BitPay, Inc.      https://bitpay.com/\n>\n>     ------------------------------------------------------------------------------\n>     \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>     Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>     unparalleled scalability from the best Selenium testing platform\n>     available.\n>     Simple to use. Nothing to install. Get started now for free.\"\n>     http://p.sf.net/sfu/SauceLabs\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get \n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/44cb1298/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2014-05-03T01:50:15",
                "message_text_only": "It will also be important to chose the currency symbol for \"bits\" at the\nsame time. Lowercase stroke \"b\" I think is the obvious choice.\nUnicode U+0180\n\nAaron\n\nOn Friday, May 2, 2014, Alan Reiner <etotheipi at gmail.com> wrote:\n\n>  I've been a strong supporter of the 1e-6 unit switch since the beginning\n> and ready to do whatever I can with Armory to help ease that transition.\n> I'm happy to prioritize a release that updates the Armory interface to make\n> \"bits\" the default unit, when the time is right.  I think it makes sense to\n> get as many apps and services to upgrade nearly simultaneously.\n>\n> My plan is to have a popup on the first load of the new version that\n> briefly introduces the change, and mentions that they can go back to the\n> old way in the settings, but make them work to do it.  For the transient\n> period (6 months?) all input boxes will auto-update nearby labels with the\n> converted-to-BTC value as they type, so that they don't have to do any math\n> in their head.  Similarly, all displayed BTC values will show both.  But\n> the 1e-6 unit will always be default or first unless they explicitly change\n> it in the interface.\n>\n>\n>\n>\n> On 5/2/2014 8:54 PM, Ben Davenport wrote:\n>\n> I fully support this (it's what I suggested over a year ago), but what it\n> comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting\n> together, agreeing what they're going to use, and doing a little joint\n> customer education campaign around it. If there's community momentum around\n> \"bits\", great.\n>\n>  My only addition is that I think we should all stop trying to attach SI\n> prefixes to the currency unit. Name me another world currency that uses SI\n> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at\n> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.\n> That may not be accepted form everywhere, but in any case it's an informal\n> format, not a formal one. The important point is there should be one base\n> unit that is not modified with SI prefixes. And I think the arguments are\n> strong for that unit being = 100 satoshi.\n>\n>  Ben\n>\n>\n>\n>\n> On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com<javascript:_e(%7B%7D,'cvml','jgarzik at bitpay.com');>\n> > wrote:\n>\n>> <vendor hat: on>\n>>\n>> Related:\n>> http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html\n>>\n>> --\n>> Jeff Garzik\n>> Bitcoin core developer and open source evangelist\n>> BitPay, Inc.      https://bitpay.com/\n>>\n>>\n>> ------------------------------------------------------------------------------\n>>  \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform\n>> available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>>  _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net<javascript:_e(%7B%7D,'cvml','Bitcoin-development at lists.sourceforge.net');>\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"http://p.sf.net/sfu/SauceLabs\n>\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing listBitcoin-development at lists.sourceforge.net <javascript:_e(%7B%7D,'cvml','Bitcoin-development at lists.sourceforge.net');>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n\n-- \nThere's no trick to being a humorist when you have the whole government\nworking for you -- Will Rodgers\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/2e5065c9/attachment.html>"
            },
            {
                "author": "Matias Alejo Garcia",
                "date": "2014-05-03T02:10:26",
                "message_text_only": "I live in Argentina. Here, 1BTC is around half of a monthly average\nwage (net), so, as you\ncan imagine, the value of 1 BTC is *very* inconvenient  for everyday\ntransactions.\n\n Also it presents an important entry barrier for new adopters: It would be\neasier to accept buying thousands of \"bits\" than buying a tiny fraction\nof a Bitcoin, for the same amount of pesos.\n\nChanging to 1e-6 \"bits\" will solve both problems. Changing to 1e-6\n\"microbitcoins\" will\nsolve the first one, but not sure about the second one. Buying (or\nearning) mili or micro\nsomething  isn't that sexy either.\n\nFinally, against \"micro\" and in favor of \"bits\", micro is noted \"\u03bc\",\nwhich is also\n inconvenient (I had to copy and paste it from an other site). Many\ndifferent notations will be used like:  \u03bcBTC, uBTC,  \"microBTC\" and\neven \"mBTC\".\nPlease prevent that.\n\nThese arguments also applies to many places in the  world (Argentina\nis 40 out of 72 listed countries in\nhttp://en.wikipedia.org/wiki/List_of_countries_by_average_wage).\n\nmat\u00edas\n\n\n\n\nOn Fri, May 2, 2014 at 10:13 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n> I've been a strong supporter of the 1e-6 unit switch since the beginning and\n> ready to do whatever I can with Armory to help ease that transition.  I'm\n> happy to prioritize a release that updates the Armory interface to make\n> \"bits\" the default unit, when the time is right.  I think it makes sense to\n> get as many apps and services to upgrade nearly simultaneously.\n>\n> My plan is to have a popup on the first load of the new version that briefly\n> introduces the change, and mentions that they can go back to the old way in\n> the settings, but make them work to do it.  For the transient period (6\n> months?) all input boxes will auto-update nearby labels with the\n> converted-to-BTC value as they type, so that they don't have to do any math\n> in their head.  Similarly, all displayed BTC values will show both.  But the\n> 1e-6 unit will always be default or first unless they explicitly change it\n> in the interface.\n>\n>\n>\n>\n>\n> On 5/2/2014 8:54 PM, Ben Davenport wrote:\n>\n> I fully support this (it's what I suggested over a year ago), but what it\n> comes down to is BitPay, Coinbase, Blockchain and Bitstamp getting together,\n> agreeing what they're going to use, and doing a little joint customer\n> education campaign around it. If there's community momentum around \"bits\",\n> great.\n>\n> My only addition is that I think we should all stop trying to attach SI\n> prefixes to the currency unit. Name me another world currency that uses SI\n> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at\n> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.\n> That may not be accepted form everywhere, but in any case it's an informal\n> format, not a formal one. The important point is there should be one base\n> unit that is not modified with SI prefixes. And I think the arguments are\n> strong for that unit being = 100 satoshi.\n>\n> Ben\n>\n>\n>\n>\n> On Fri, May 2, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>>\n>> <vendor hat: on>\n>>\n>> Related:\n>> http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html\n>>\n>> --\n>> Jeff Garzik\n>> Bitcoin core developer and open source evangelist\n>> BitPay, Inc.      https://bitpay.com/\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>> unparalleled scalability from the best Selenium testing platform\n>> available.\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n>\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nMat\u00edas Alejo Garcia\nSkype/Twitter: @ematiu\nRoads? Where we're going, we don't need roads!"
            },
            {
                "author": "Luke Dashjr",
                "date": "2014-05-03T02:38:10",
                "message_text_only": "On Saturday, May 03, 2014 12:54:37 AM Ben Davenport wrote:\n> My only addition is that I think we should all stop trying to attach SI\n> prefixes to the currency unit. Name me another world currency that uses SI\n> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at\n> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.\n> That may not be accepted form everywhere, but in any case it's an informal\n> format, not a formal one. The important point is there should be one base\n> unit that is not modified with SI prefixes. And I think the arguments are\n> strong for that unit being = 100 satoshi.\n\nHuh? Your examples demonstrate the *opposite* of your point. 'k' and 'M' *are* \nthe SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first one \nto admit SI is terrible, but I don't understand your argument here.\n\nLuke\n\nP.S. Note that SI units haven't actually ever been adopted, except by force of \nlaw. \"Name me ... that uses SI\" is a silly thing to say, since virtually all \nnaturally-or-freely-adopted units of any measure have been based on a number \nthat factor to twos and threes (not fives, like decimal)."
            },
            {
                "author": "Ben Davenport",
                "date": "2014-05-03T02:41:38",
                "message_text_only": "Luke,\n\nMy point is that you never apply the prefixes to the currency unit itself.\nWe don't spend kilodollars or megadollars.\n\nBen\n\n\nOn Fri, May 2, 2014 at 7:38 PM, Luke Dashjr <luke at dashjr.org> wrote:\n\n> On Saturday, May 03, 2014 12:54:37 AM Ben Davenport wrote:\n> > My only addition is that I think we should all stop trying to attach SI\n> > prefixes to the currency unit. Name me another world currency that uses\n> SI\n> > prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard\n> at\n> > least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.\n> > That may not be accepted form everywhere, but in any case it's an\n> informal\n> > format, not a formal one. The important point is there should be one base\n> > unit that is not modified with SI prefixes. And I think the arguments are\n> > strong for that unit being = 100 satoshi.\n>\n> Huh? Your examples demonstrate the *opposite* of your point. 'k' and 'M'\n> *are*\n> the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first\n> one\n> to admit SI is terrible, but I don't understand your argument here.\n>\n> Luke\n>\n> P.S. Note that SI units haven't actually ever been adopted, except by\n> force of\n> law. \"Name me ... that uses SI\" is a silly thing to say, since virtually\n> all\n> naturally-or-freely-adopted units of any measure have been based on a\n> number\n> that factor to twos and threes (not fives, like decimal).\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/391c75c7/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-03T02:43:58",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\n>Huh? Your examples demonstrate the *opposite* of your point. 'k' and\n>'M' *are*\n>the SI prefixes. People *do* use 63k USD, $63k, and $3M.\n\nExcellent point.\n\nAlso, I frequently hear statements referring to mili-bitcoins, mBTC, pronounced as \"mili-bits\" or \"m-bits\"; the term \"bits\" is very much already in use and not to refer to uBTC.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTZFfuMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhRSfB/434bom68YyzgW0rPek\nwrkjBHtxK7BgrPvkpMsBpAIWQ+NbKZBNTIZfp78rbUlGdj+3mXc5e+QXSnKHJn6V\nazUtn4PsvL/iNAIZ91vdMYKRvFkAPfS+XBxR0J3JiAzQb6dshyUm9X6UQyJHGs8O\nEOS2sQ/c2ZY6hFVE5JfA3jH8ykQy36MNfehbT290kppkcRq24JAVLYz66444CHA1\niMHCfnlcR9hMUVQmzds4QLIPHLLjEqkMxJUe5yxFVeW0MFxu2sG3jfYcOwoqQbBY\nN+hLHOKuH5mOm6mfJ3/IHVj2dM9jok+JKG0GytZA1kKGbh/KGIhxIxE/06dNakfW\nQzfS\n=666/\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Un Ix",
                "date": "2014-05-03T03:35:16",
                "message_text_only": "Think your example is not quite valid ...\n\nPeople say or write $88M or $45k I.e. use SI prefix as a suffix, else it would be more, not less, clear on what amount is being referred to.\n\nFor me, \"bits\" are easy to say and one million as a factor is simple to understand.\n\nM-bits, kilobits, millibits, etc are never going to be used by folk in everyday transactions, IMHO \n\nGavin\n\n> On 3/05/2014, at 10:40 am, \"Luke Dashjr\" <luke at dashjr.org> wrote:\n> \n>> On Saturday, May 03, 2014 12:54:37 AM Ben Davenport wrote:\n>> My only addition is that I think we should all stop trying to attach SI\n>> prefixes to the currency unit. Name me another world currency that uses SI\n>> prefixes. No one quotes amounts as 63 k$ or 3 M$. The accepted standard at\n>> least in the US is <currency-symbol><amount><modifier>, i.e. $63k or $3M.\n>> That may not be accepted form everywhere, but in any case it's an informal\n>> format, not a formal one. The important point is there should be one base\n>> unit that is not modified with SI prefixes. And I think the arguments are\n>> strong for that unit being = 100 satoshi.\n> \n> Huh? Your examples demonstrate the *opposite* of your point. 'k' and 'M' *are* \n> the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first one \n> to admit SI is terrible, but I don't understand your argument here.\n> \n> Luke\n> \n> P.S. Note that SI units haven't actually ever been adopted, except by force of \n> law. \"Name me ... that uses SI\" is a silly thing to say, since virtually all \n> naturally-or-freely-adopted units of any measure have been based on a number \n> that factor to twos and threes (not fives, like decimal).\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get \n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Roy Badami",
                "date": "2014-05-03T12:32:45",
                "message_text_only": "> the SI prefixes. People *do* use 63k USD, $63k, and $3M. I'll be the first one \n\nAs a counter argument, many sources (including the BBC) abbreviate\nmillion to 'm' (and billion to 'bn'), e.g. $3m, $3bn.\n\nI think any similarity with SI units here is coincidental.\n\nroy"
            },
            {
                "author": "Tamas Blummer",
                "date": "2014-05-03T04:23:24",
                "message_text_only": "Excellent move Jeff.\n\nBest would now be to establish XBT as the ISO code for bits.\n\nRegards,\n\nTamas Blummer\nhttp://bitsofproof.com\n\nOn 02.05.2014, at 21:17, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> <vendor hat: on>\n> \n> Related: http://blog.bitpay.com/2014/05/02/bitpay-bitcoin-and-where-to-put-that-decimal-point.html\n> \n> -- \n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get \n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/277f101e/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 495 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/277f101e/attachment.sig>"
            },
            {
                "author": "Jannis Froese",
                "date": "2014-05-03T18:46:37",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\n\nOn 03.05.2014 02:54, Ben Davenport wrote:\n> No one quotes amounts as 63 k$ or 3 M$. The accepted standard at \n> least in the US is <currency-symbol><amount><modifier>, i.e. $63k \n> or $3M.\n\nAs you said, that's in the US, and I strongly suspect the sole reason\nis that in the US the currency symbol is written in front of the\namount. I often pronounce $10k as ten kilodollar, using it exactly\nlike a SI-prefix.\n\nThe much better argument against SI prefixes is that the prefixes for\nvalues less than 1 tend to be much less well known: Most people know\nthat kilo means 1000, many know that mega means 1,000,000, but few\nknow that micro means 0.0000001, and those that do tend to confuse\nmicro and nano.\n\nJannis\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.22 (MingW32)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQIbBAEBAgAGBQJTZTmNAAoJEBrvn3PsoRcmrzYP9R0cch42wV+I21MNVbWEEhfw\nGjuCqE2Vz7QtI4nhRZ0Eas+MOY6iZD1c2A7cr4BjWx+MdQQwJSMKg/UKruE3j9xs\n4QAFQtjvQ69Yd5ztq3ISWM/DpGfPXRvRdIf02ldz0Sf4HMxvqHCcYov3/laOrFnF\n3ECpd+JLrU/Wq/HWwuFFXbfyQnpn+9LHx5gcfhV/pW7PwAjwzeaKhY1neQRHhQWq\npD8iv2dikqs30nO6bhnrCv/u0N+2iwV4e+J0E+kpBwrCZLeG8MirRRdnLruJ5mnT\nnGyRNdfPKl5n0Gm4AFkBC3a4VIYwOxAzxdfA55Hn27yxll0GFEQNqR9OCNblGUbQ\nRWa3Nywa22aYHOTi7evmuP6dVFjF4T8dl8LzDBmeawBsbOeHAUYJgLoHezdwEoto\nDt01ML4CmCINnPIFiuab17gpUYg7OXKomOQPrdyaVnP2abgvQCV5bYhMnKKVa25U\nmW5PK02stxKcTEyHBsz0BG8zmdx5+7A5ySaUHrXs+l3YNBp3idlDUeYIsEBKFAtR\nvNEGLbV2ZvteOb+tflxuPSjgIaMHD9w6vX2l7+VgkRTms743s/wbQuLb2fXq7osM\nzws5D/L74zG1ZwsNM04Ygs2GJoJhkb1QXxY9EuoIeiuK3nVeJEWeRGHBEmqCXOPx\nFB/2U/d69fUTbvUzOXA=\n=Qo8z\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "moving the default display to mbtc",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Matias Alejo Garcia",
                "Tamas Blummer",
                "Roy Badami",
                "Peter Todd",
                "Un Ix",
                "Jannis Froese",
                "Alan Reiner",
                "Luke Dashjr",
                "Ben Davenport",
                "Melvin Carvalho",
                "Aaron Voisine"
            ],
            "messages_count": 13,
            "total_messages_chars_count": 26950
        }
    },
    {
        "title": "[Bitcoin-development] BIP70 implementation guidance",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2014-05-02T15:39:44",
                "message_text_only": "A bunch of different people either have implemented or are implementing\nBIP70 at the moment. Here's a bunch of things I've been telling people in\nresponse to questions. At some point I'll submit a pull req with this stuff\nin but for now it's just an email.\n\n*Error handling during signature checking*\n\nI've had queries around the right behaviour here. BIP 70 is underspecified\nand we should fix it IMO. If PKI checking fails you should just treat the\nrequest as if it's unsigned. The reason is that there is no incentive for\nan attacker to break the signature instead of just removing it entirely, so\nan attacker would never trigger any error flows you put in. However,\nsomeone who is signing their request with an unknown CA or using an\nupgraded version of the protocol that isn't entirely backwards compatible\n*could* trigger signature checking failure.\n\nTherefore, in order to make introducing new (possibly community run) CA's\nor new variations on signing possible, please treat any errors as if there\nwas no signature at all. This is not what browsers do,  but browsers have\nan advantage - they were already given an identity and told to expect a\nsecure protocol when the user typed in the web address with an\nhttps://prefix (or clicked a link). Unfortunately a Bitcoin wallet has\nno context\nlike this.\n\nOne person asked me whether this makes the whole scheme pointless because a\nMITM can just delete the signature. The answer is no - downgrade attacks\nare always possible on systems that start out insecure. The solution is to\ntrain users to expect the upgrade and refuse to go ahead if it's not there.\nTraining users to expect signed payment requests will be a big task similar\nto the way the browser industry trained users to look for the padlock when\ntyping in credit card details, but it must be done.\n\nBecause wallets lack context there's no equivalent to HSTS for us either.\nSo in your GUI's try to train the user - when showing a signed payment\nrequest, tell them to expect the recipient name to appear in future and\nthat they should not proceed if it doesn't. This gives us a kind of mental\nHSTS.\n\n*Extended validation certs*\n\nWhen a business is accepting payment, showing the name of the business is\nusually better than showing just the domain name, for a few reasons:\n\n   1. Unless your domain name *is* your business name like blockchain.info,\n   it looks better and gives more info.\n\n   2. Domain names are more phishable than EV names, e.g. is the right name\n   bitpay.com or bit-pay.com or bitpay.co.uk?\n\n   3. More important: Someone who hacks your web server or DNS provider can\n   silently get themselves a domain name SSL cert issued, probably without you\n   noticing. Certificate transparency will eventually fix that but it's years\n   away from full deployment. It's much harder for a hacker to get a bogus EV\n   cert issued to them because there's a lot more checking involved.\n\nEV certs still have the domain name in the CN field, but they also have the\nbusiness name in the OU field.\n\nIn theory we are supposed to have extra code to check that a certificate\nreally was subject to extended validation before showing the contents of\nthis field. In practice either bitcoinj nor Bitcoin Core actually do, they\njust always trust it. It'd be nice to fix that in future.\n\nYou should show the organisation data instead of the domain name if you\nfind it, for EV certs.\n\n*pki=none*\n\nSigning is optional in BIP 70 for good reasons. One implementor told me\nthey were considering rejecting unsigned payment requests. Do not do this!\nA MITM can easily rewrite the bitcoin URI to look as if BIP70 isn't in use\nat all.\n\nEven though today most (all?) payment requests you'll encounter are signed,\nit's important that signing is optional because in future we need\nindividual people to start generating payment requests too, and many of\nthem won't have any kind of memorisable digital identity. Plus other people\njust won't want to do it. BIP70 is about lots of features, signing is only\none.\n\n*S/MIME certs*\n\nEmail address certs look a bit different to SSL certs. You can get one for\nfree from here\n\n    https://comodo.com/home/email-security/free-email-certificate.php\n\nIn these certs the display name can be found in the Subject Alternative\nName field with a type code of 1. Example code:\n\n\nhttps://github.com/bitcoinj/bitcoinj/commit/feecc8f48641cd02cafc42150abba4e4841ea33d\n\nYou won't encounter many of these today except on Gavin's test site, but in\nfuture people may wish to start creating and signing their own payment\nrequests for individual purposes using these certs (especially as they are\nfree). So please try to handle them correctly.\n\n*Broadcast vs upload*\n\nPlease upload transactions and commit them to your wallet when the server\nresponds with 200 OK, but expect the merchant to broadcast them. Don't give\nthe user an option to pick - it's pointless as there's no obvious right\nanswer.\n\n*Testing*\n\nYou can find a test site here:\n\nhttp://bitcoincore.org/~gavin/createpaymentrequest.php\n\nIt's testnet only. For testing regular payment requests on the main\nnetwork, I use BitPay as they were the first seller-side implementation:\n\nhttp://bitgivefoundation.org/donate-now/\n\n*Memo contents*\n\nPlease put something useful here, ideally what is actually being sold but\nfailing that, the name of the merchant if you're a payment processor. Don't\nbe like BitPay and put large random numbers in the memo field but nothing\nabout what's actually purchased.\n\nThis is not particularly important today except for cosmetic reasons,\nbecause wallets don't store the payment requests they saw to disk. But in\nfuture they will and then a properly signed memo field + the transactions\nused for payment give us a digital receipt. Receipts are useful for things\nlike filing expense reports, proving a purchase when returning an item to a\nmerchant, etc.\n\n*Expiry times*\n\nDon't be too aggressive with these. Although today it doesn't matter much,\nsome users may be trying to pay from multi-party accounts that require\nmultiple humans to coordinate to make a payment.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140502/e56ae858/attachment.html>"
            },
            {
                "author": "Aaron Voisine",
                "date": "2014-05-02T19:21:41",
                "message_text_only": "At the moment BIP70 specifically requires that a request be rejected\nif validation fails, so that should be fixed that sooner rather than\nlater:\n\n\"The recipient must verify the certificate chain according to\n[RFC5280] and reject the PaymentRequest if any validation failure\noccurs.\"\n\nAaron\n\nThere's no trick to being a humorist when you have the whole\ngovernment working for you -- Will Rodgers\n\n\nOn Fri, May 2, 2014 at 8:39 AM, Mike Hearn <mike at plan99.net> wrote:\n> A bunch of different people either have implemented or are implementing\n> BIP70 at the moment. Here's a bunch of things I've been telling people in\n> response to questions. At some point I'll submit a pull req with this stuff\n> in but for now it's just an email.\n>\n> Error handling during signature checking\n>\n> I've had queries around the right behaviour here. BIP 70 is underspecified\n> and we should fix it IMO. If PKI checking fails you should just treat the\n> request as if it's unsigned. The reason is that there is no incentive for an\n> attacker to break the signature instead of just removing it entirely, so an\n> attacker would never trigger any error flows you put in. However, someone\n> who is signing their request with an unknown CA or using an upgraded version\n> of the protocol that isn't entirely backwards compatible could trigger\n> signature checking failure.\n>\n> Therefore, in order to make introducing new (possibly community run) CA's or\n> new variations on signing possible, please treat any errors as if there was\n> no signature at all. This is not what browsers do,  but browsers have an\n> advantage - they were already given an identity and told to expect a secure\n> protocol when the user typed in the web address with an https:// prefix (or\n> clicked a link). Unfortunately a Bitcoin wallet has no context like this.\n>\n> One person asked me whether this makes the whole scheme pointless because a\n> MITM can just delete the signature. The answer is no - downgrade attacks are\n> always possible on systems that start out insecure. The solution is to train\n> users to expect the upgrade and refuse to go ahead if it's not there.\n> Training users to expect signed payment requests will be a big task similar\n> to the way the browser industry trained users to look for the padlock when\n> typing in credit card details, but it must be done.\n>\n> Because wallets lack context there's no equivalent to HSTS for us either. So\n> in your GUI's try to train the user - when showing a signed payment request,\n> tell them to expect the recipient name to appear in future and that they\n> should not proceed if it doesn't. This gives us a kind of mental HSTS.\n>\n> Extended validation certs\n>\n> When a business is accepting payment, showing the name of the business is\n> usually better than showing just the domain name, for a few reasons:\n>\n> Unless your domain name is your business name like blockchain.info, it looks\n> better and gives more info.\n>\n> Domain names are more phishable than EV names, e.g. is the right name\n> bitpay.com or bit-pay.com or bitpay.co.uk?\n>\n> More important: Someone who hacks your web server or DNS provider can\n> silently get themselves a domain name SSL cert issued, probably without you\n> noticing. Certificate transparency will eventually fix that but it's years\n> away from full deployment. It's much harder for a hacker to get a bogus EV\n> cert issued to them because there's a lot more checking involved.\n>\n> EV certs still have the domain name in the CN field, but they also have the\n> business name in the OU field.\n>\n> In theory we are supposed to have extra code to check that a certificate\n> really was subject to extended validation before showing the contents of\n> this field. In practice either bitcoinj nor Bitcoin Core actually do, they\n> just always trust it. It'd be nice to fix that in future.\n>\n> You should show the organisation data instead of the domain name if you find\n> it, for EV certs.\n>\n> pki=none\n>\n> Signing is optional in BIP 70 for good reasons. One implementor told me they\n> were considering rejecting unsigned payment requests. Do not do this! A MITM\n> can easily rewrite the bitcoin URI to look as if BIP70 isn't in use at all.\n>\n> Even though today most (all?) payment requests you'll encounter are signed,\n> it's important that signing is optional because in future we need individual\n> people to start generating payment requests too, and many of them won't have\n> any kind of memorisable digital identity. Plus other people just won't want\n> to do it. BIP70 is about lots of features, signing is only one.\n>\n> S/MIME certs\n>\n> Email address certs look a bit different to SSL certs. You can get one for\n> free from here\n>\n>     https://comodo.com/home/email-security/free-email-certificate.php\n>\n> In these certs the display name can be found in the Subject Alternative Name\n> field with a type code of 1. Example code:\n>\n>\n> https://github.com/bitcoinj/bitcoinj/commit/feecc8f48641cd02cafc42150abba4e4841ea33d\n>\n> You won't encounter many of these today except on Gavin's test site, but in\n> future people may wish to start creating and signing their own payment\n> requests for individual purposes using these certs (especially as they are\n> free). So please try to handle them correctly.\n>\n> Broadcast vs upload\n>\n> Please upload transactions and commit them to your wallet when the server\n> responds with 200 OK, but expect the merchant to broadcast them. Don't give\n> the user an option to pick - it's pointless as there's no obvious right\n> answer.\n>\n> Testing\n>\n> You can find a test site here:\n>\n> http://bitcoincore.org/~gavin/createpaymentrequest.php\n>\n> It's testnet only. For testing regular payment requests on the main network,\n> I use BitPay as they were the first seller-side implementation:\n>\n> http://bitgivefoundation.org/donate-now/\n>\n> Memo contents\n>\n> Please put something useful here, ideally what is actually being sold but\n> failing that, the name of the merchant if you're a payment processor. Don't\n> be like BitPay and put large random numbers in the memo field but nothing\n> about what's actually purchased.\n>\n> This is not particularly important today except for cosmetic reasons,\n> because wallets don't store the payment requests they saw to disk. But in\n> future they will and then a properly signed memo field + the transactions\n> used for payment give us a digital receipt. Receipts are useful for things\n> like filing expense reports, proving a purchase when returning an item to a\n> merchant, etc.\n>\n> Expiry times\n>\n> Don't be too aggressive with these. Although today it doesn't matter much,\n> some users may be trying to pay from multi-party accounts that require\n> multiple humans to coordinate to make a payment.\n>\n>\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Roy Badami",
                "date": "2014-05-02T20:41:47",
                "message_text_only": "> *Extended validation certs*\n> \n> When a business is accepting payment, showing the name of the business is\n> usually better than showing just the domain name, for a few reasons:\n> \n>    1. Unless your domain name *is* your business name like blockchain.info,\n>    it looks better and gives more info.\n> \n>    2. Domain names are more phishable than EV names, e.g. is the right name\n>    bitpay.com or bit-pay.com or bitpay.co.uk?\n> \n>    3. More important: Someone who hacks your web server or DNS provider can\n>    silently get themselves a domain name SSL cert issued, probably without you\n>    noticing. Certificate transparency will eventually fix that but it's years\n>    away from full deployment. It's much harder for a hacker to get a bogus EV\n>    cert issued to them because there's a lot more checking involved.\n> \n> EV certs still have the domain name in the CN field, but they also have the\n> business name in the OU field.\n\nWell, many certs have something in the O field.  That has nothing to\ndo with EV - EV just mandates a particular set of validation\nrequirements.\n\n> \n> In theory we are supposed to have extra code to check that a certificate\n> really was subject to extended validation before showing the contents of\n> this field. In practice either bitcoinj nor Bitcoin Core actually do, they\n> just always trust it. It'd be nice to fix that in future.\n\nI agree that blindly showing the O field may not be ideal - there\n*may* conceivably be some CAs that include it without validation on\ntheir cheap certs (although most cheap certs simply don't include it).\nBut it's not clear that EV or not is the right criterion here - there\nare certainly non-EV certs out there that are organisation validated.\n \n> You should show the organisation data instead of the domain name if you\n> find it, for EV certs.\n\nI have really mixed feelings about giving this privileged treatment\nexclusively to EV certs, for the simple reason that the rules around\nEV certs are iniquitous and some businesses are excluded.\n\ne.g. in the UK sole traders (that is, unincorporated businesses) can't\nget EV certs because the UK doesn't maintain a trade register of such\nbusinesses and therefore such businesses are incapable of satisfying\nthe EV rules.\n\nThat said, EV certs are here, now, and (sadly) supporting them is\nbetter than doing nothing...\n\nroy"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-04T13:06:29",
                "message_text_only": ">\n> e.g. in the UK sole traders (that is, unincorporated businesses) can't\n> get EV certs because the UK doesn't maintain a trade register of such\n> businesses\n>\n\nSole traders can just trade under their own name, or their email address,\nor their domain name, heck even their telephone number if someone sets up\nan SMS verifying CA. I don't worry too much about such things - the point\nof the cert is just to disambiguate the payment so people can't get\nconfused into paying the wrong entity.\n\nCompanies that can't get EV certs cause us pain indirectly by making users\nless certain about what they're expecting to see when they pay a company,\nmaking confusion attacks a bit easier, but I bet it'll be a minor issue in\npractice.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/d83b00c5/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP70 implementation guidance",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Aaron Voisine",
                "Roy Badami"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 16822
        }
    },
    {
        "title": "[Bitcoin-development] Compatibility Bitcoin-Qt with Tails",
        "thread_messages": [
            {
                "author": "Kristov Atlas",
                "date": "2014-05-02T17:46:37",
                "message_text_only": "On 04/30/2014 03:02 AM, Wladimir wrote:\n> On Sat, Apr 26, 2014 at 7:29 PM, Kristov Atlas\n> <author at anonymousbitcoinbook.com> wrote:\n>> Hey Wladimir,\n>>\n>> Thanks for building this binary. The initial problem with Qt was\n>> resolved, and I was able to load the GUI that chooses my datadir. After\n>> choosing the default datadir, however, it segfaulted.\n> I've fixed the issue; at least on Debian 6 - which is a lot more\n> conductive to development than tails :-). See\n> https://github.com/bitcoin/bitcoin/pull/4094 for the gory details. New\n> test build available:\n>\n> https://download.visucore.com/bitcoin/linux-gitian-3cbabfa.tar.gz\n> (sigs: https://download.visucore.com/bitcoin/linux-gitian-3cbabfa.tar.gz.sig\n> )\n>\n> Wladimir\n\nNice work! I can confirm that this dev binary runs smoothly in the \nlatest version of Tails, v1.0. Screenshot proof here [1]. When this is \nincorporated into the next release of Bitcoin Core, will this make the \nusual Linux binary compatible, or will there be a special binary just \nfor systems running the older Qt?\n\n-Kristov\n\n[1] http://postimg.org/image/p3ycwai9d/"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-02T18:28:18",
                "message_text_only": "On Fri, May 2, 2014 at 7:46 PM, Kristov Atlas\n<author at anonymousbitcoinbook.com> wrote:\n> Nice work! I can confirm that this dev binary runs smoothly in the latest\n\nThanks for testing!\n\n> version of Tails, v1.0. Screenshot proof here [1]. When this is incorporated\n> into the next release of Bitcoin Core, will this make the usual Linux binary\n> compatible, or will there be a special binary just for systems running the\n> older Qt?\n\nThe normal binary will be compatible.\n\nAt some point we may add a binary that is linked to Qt 5.x as well for\nnewer distributions, but compatibility is most important.\n\nWladimir"
            }
        ],
        "thread_summary": {
            "title": "Compatibility Bitcoin-Qt with Tails",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Kristov Atlas",
                "Wladimir"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1714
        }
    },
    {
        "title": "[Bitcoin-development] Bug with handing of OP_RETURN?",
        "thread_messages": [
            {
                "author": "Flavien Charlon",
                "date": "2014-05-03T18:04:52",
                "message_text_only": "Can someone enlighten me on why the following transaction is being rejected\nby Bitcoind 0.9.1 with error code -22 on Mainnet.\n\n01000000015594a8c1f84b926e84d70c3a3d5e517e0c12dc07cb1a774b587121fef08f91b8000000006b48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cbffffffff0358020000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000000000000a6a054f4101000102753d60860000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000\n\n\nDebug.log shows the following:\n\nERROR: AcceptToMemoryPool : nonstandard transaction: scriptpubkey\n\n\nHere is the decoded transaction:\n\n{\n>    \"lock_time\":0,\n>    \"inputs\":[\n>       {\n>          \"prev_out\":{\n>             \"index\":0,\n>\n> \"hash\":\"b8918ff0fe2171584b771acb07dc120c7e515e3d3a0cd7846e924bf8c1a89455\"\n>          },\n>\n> \"script\":\"48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cb\"\n>       }\n>    ],\n>    \"vout_sz\":3,\n>\n> \"hash\":\"44130e812fa15f411c6accb739082eb81ecf074470cefb8e617ecf105690f6e1\",\n>    \"vin_sz\":1,\n>    \"out\":[\n>       {\n>          \"address\":\"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv\",\n>          \"script_string\":\"OP_DUP OP_HASH160\n> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG\",\n>          \"value\":600,\n>          \"script\":\"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac\"\n>       },\n>       {\n>          \"script_string\":\"OP_RETURN 4f41010001 753d\",\n>          \"value\":0,\n>          \"script\":\"6a054f4101000102753d\"\n>       },\n>       {\n>          \"address\":\"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv\",\n>          \"script_string\":\"OP_DUP OP_HASH160\n> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG\",\n>          \"value\":34400,\n>          \"script\":\"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac\"\n>       }\n>    ],\n>    \"size\":245,\n>    \"version\":1\n> }\n>\n\nOutputs are above dust, inputs are not spent. OP_RETURN is supposed to be\nstandard in 0.9.1 and the data is well below 40 bytes, so why is this being\nrejected?\n\nThanks,\nFlavien\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140503/e33b8a5a/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-03T18:39:40",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nThe standard format ended up being exactly:\n\n    OP_RETURN <0 to 40-byte PUSHDATA>\n\nYou've split the data across two PUSHDATA's. The standard should have let the data be split up like that; pull requests accepted.\n\nOn 3 May 2014 13:04:52 GMT-05:00, Flavien Charlon <flavien.charlon at coinprism.com> wrote:\n>Can someone enlighten me on why the following transaction is being\n>rejected\n>by Bitcoind 0.9.1 with error code -22 on Mainnet.\n>\n>01000000015594a8c1f84b926e84d70c3a3d5e517e0c12dc07cb1a774b587121fef08f91b8000000006b48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cbffffffff0358020000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000000000000a6a054f4101000102753d60860000000000001976a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac00000000\n>\n>\n>Debug.log shows the following:\n>\n>ERROR: AcceptToMemoryPool : nonstandard transaction: scriptpubkey\n>\n>\n>Here is the decoded transaction:\n>\n>{\n>>    \"lock_time\":0,\n>>    \"inputs\":[\n>>       {\n>>          \"prev_out\":{\n>>             \"index\":0,\n>>\n>>\n>\"hash\":\"b8918ff0fe2171584b771acb07dc120c7e515e3d3a0cd7846e924bf8c1a89455\"\n>>          },\n>>\n>>\n>\"script\":\"48304502202f534407f6dee4d8932ec22491cbc15a2d31af2bade4e8d417e4b1955de57f5902210086e2f0210c16ffff9b85074429b1b1c2f32e19509d7ed19f7804ab7212bd183a012102add59262e234c0045d1f6a3d40a144b47ea0b4214916f55fb6029a079cc0b3cb\"\n>>       }\n>>    ],\n>>    \"vout_sz\":3,\n>>\n>>\n>\"hash\":\"44130e812fa15f411c6accb739082eb81ecf074470cefb8e617ecf105690f6e1\",\n>>    \"vin_sz\":1,\n>>    \"out\":[\n>>       {\n>>          \"address\":\"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv\",\n>>          \"script_string\":\"OP_DUP OP_HASH160\n>> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG\",\n>>          \"value\":600,\n>>\n>\"script\":\"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac\"\n>>       },\n>>       {\n>>          \"script_string\":\"OP_RETURN 4f41010001 753d\",\n>>          \"value\":0,\n>>          \"script\":\"6a054f4101000102753d\"\n>>       },\n>>       {\n>>          \"address\":\"12QkihKUyE1hAkv7wmaMj6V3QiN8FfMvpv\",\n>>          \"script_string\":\"OP_DUP OP_HASH160\n>> 0f763005e063382f8f4138f75cdc64d14f8ec16f OP_EQUALVERIFY OP_CHECKSIG\",\n>>          \"value\":34400,\n>>\n>\"script\":\"76a9140f763005e063382f8f4138f75cdc64d14f8ec16f88ac\"\n>>       }\n>>    ],\n>>    \"size\":245,\n>>    \"version\":1\n>> }\n>>\n>\n>Outputs are above dust, inputs are not spent. OP_RETURN is supposed to\n>be\n>standard in 0.9.1 and the data is well below 40 bytes, so why is this\n>being\n>rejected?\n>\n>Thanks,\n>Flavien\n>\n>\n>------------------------------------------------------------------------\n>\n>------------------------------------------------------------------------------\n>\"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n>unparalleled scalability from the best Selenium testing platform\n>available.\n>Simple to use. Nothing to install. Get started now for free.\"\n>http://p.sf.net/sfu/SauceLabs\n>\n>------------------------------------------------------------------------\n>\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTZTfsMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQHmCADIcIs8w0FCDslGpbg1\naudI1fAg/XnZ2J/862egYLtV2P0ooQnQz6g4kA0YIQGJI5tqyr9NEB6q/FVeKT61\n3ecs3YsRtUkXmum6Wnq7QUGjvyMQo5nwLx2b3kDYEvb9v+aAKoBNKdz1xmp7jxE3\n6bCx9eBeRBmhDWp1Xrr3VQI7KEUx4BfUxaLioYnCvaSuPsU+QQfXPFc+9ypRRclc\nymAj0VRGRPe2LQMNjerG4DMH8MRd5LOXjUxYV3XO3LyKSKvM18Lte+16w/uU3uBV\nmsIMbWEgm/DXI5fLWL7MFuLIsFrPs9BzjZSSZA7zQvntLtlQWCMnGeXsozjK14ol\nlUl8\n=0kuQ\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2014-05-03T18:55:12",
                "message_text_only": "I don't think such a pull request would be accepted. The point was to\nminimize impact to the block chain. Each extras txout adds 9 bytes\nminimum, with zero benefit over serializing the data together in a\nsingle OP_RETURN.\n\nOn 05/03/2014 11:39 AM, Peter Todd wrote:\n> The standard format ended up being exactly:\n> \n>     OP_RETURN <0 to 40-byte PUSHDATA>\n> \n> You've split the data across two PUSHDATA's. The standard should have let the data be split up like that; pull requests accepted.\n>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-03T19:08:33",
                "message_text_only": "On Sat, May 3, 2014 at 11:55 AM, Mark Friedenbach <mark at monetize.io> wrote:\n> I don't think such a pull request would be accepted. The point was to\n> minimize impact to the block chain. Each extras txout adds 9 bytes\n> minimum, with zero benefit over serializing the data together in a\n> single OP_RETURN.\n\nIn this case it's not a question extra txouts, its a question of\nadditional pushes. Assuming you didn't get the push overhead for free,\nthe only issue I see with that off the cuff is extra complexity in the\nIsStandard rule... but really, why?  Your application already needs to\ndefine the meaning of the data\u2014 what point is there in making your\nhash commitment less uniform with the rest of the network?"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2014-05-03T19:15:35",
                "message_text_only": "Is it more complex? The current implementation using template matching\nseems more complex than `if script.vch[0] == OP_RETURN &&\nscript.vch.size() < 42`\n\nOn 05/03/2014 12:08 PM, Gregory Maxwell wrote:\n> On Sat, May 3, 2014 at 11:55 AM, Mark Friedenbach <mark at monetize.io> wrote:\n>> I don't think such a pull request would be accepted. The point was to\n>> minimize impact to the block chain. Each extras txout adds 9 bytes\n>> minimum, with zero benefit over serializing the data together in a\n>> single OP_RETURN.\n> \n> In this case it's not a question extra txouts, its a question of\n> additional pushes. Assuming you didn't get the push overhead for free,\n> the only issue I see with that off the cuff is extra complexity in the\n> IsStandard rule... but really, why?  Your application already needs to\n> define the meaning of the data\u2014 what point is there in making your\n> hash commitment less uniform with the rest of the network?\n>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-04T13:25:35",
                "message_text_only": "On Sat, May 3, 2014 at 3:15 PM, Mark Friedenbach <mark at monetize.io> wrote:\n> Is it more complex? The current implementation using template matching\n> seems more complex than `if script.vch[0] == OP_RETURN &&\n> script.vch.size() < 42`\n\nNot much more complex.\n\nThe template matches a two-chunk script with OP_RETURN + one pushdata\n(or just OP_RETURN with no push).  The pushdata is further limited to\nMAX_OP_RETURN_RELAY bytes.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Sergio Lerner",
                "date": "2014-05-04T12:07:37",
                "message_text_only": "El 03/05/2014 03:55 p.m., Mark Friedenbach escribi\u00f3:\n>\n> On 05/03/2014 11:39 AM, Peter Todd wrote:\n>> The standard format ended up being exactly:\n>>\n>>     OP_RETURN <0 to 40-byte PUSHDATA>\n>>\nPlease remember that the code actually does not implement the \"standard\nformat\" (at least the last time I checked it).  Any opcode after\nOP_RETURN is accepted:\n\nFor example: OP_RETURN OP_CHECKSIG\n\nis accepted."
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-05T17:30:02",
                "message_text_only": "Correct, though that was somewhat unintentional.  The pushed-data size\nis limited to <= 40 bytes, and as non-pushdata opcodes carry zero\npushed data, they are accepted.\n\nOn Sun, May 4, 2014 at 8:07 AM, Sergio Lerner <sergiolerner at certimix.com> wrote:\n> El 03/05/2014 03:55 p.m., Mark Friedenbach escribi\u00f3:\n>>\n>> On 05/03/2014 11:39 AM, Peter Todd wrote:\n>>> The standard format ended up being exactly:\n>>>\n>>>     OP_RETURN <0 to 40-byte PUSHDATA>\n>>>\n> Please remember that the code actually does not implement the \"standard\n> format\" (at least the last time I checked it).  Any opcode after\n> OP_RETURN is accepted:\n>\n> For example: OP_RETURN OP_CHECKSIG\n>\n> is accepted.\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-04T05:15:03",
                "message_text_only": "On Sat, May 3, 2014 at 2:04 PM, Flavien Charlon\n<flavien.charlon at coinprism.com> wrote:\n> Outputs are above dust, inputs are not spent. OP_RETURN is supposed to be\n> standard in 0.9.1 and the data is well below 40 bytes, so why is this being\n> rejected?\n\nThe carried data must all be contained within one pushdata.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Flavien Charlon",
                "date": "2014-05-04T10:05:36",
                "message_text_only": "Thanks, that makes sense, just wanted to make sure this what the problem\nwas.\n\n\nOn Sun, May 4, 2014 at 6:15 AM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> On Sat, May 3, 2014 at 2:04 PM, Flavien Charlon\n> <flavien.charlon at coinprism.com> wrote:\n> > Outputs are above dust, inputs are not spent. OP_RETURN is supposed to be\n> > standard in 0.9.1 and the data is well below 40 bytes, so why is this\n> being\n> > rejected?\n>\n> The carried data must all be contained within one pushdata.\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/1cfee0ec/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bug with handing of OP_RETURN?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Flavien Charlon",
                "Sergio Lerner",
                "Peter Todd",
                "Gregory Maxwell",
                "Mark Friedenbach"
            ],
            "messages_count": 10,
            "total_messages_chars_count": 12104
        }
    },
    {
        "title": "[Bitcoin-development] A statistical consensus rule for reducing 0-conf double-spend risk",
        "thread_messages": [
            {
                "author": "Tom Harding",
                "date": "2014-05-04T00:29:00",
                "message_text_only": "This idea was suggested by \"Joe\" on 2011-02-14 \nhttps://bitcointalk.org/index.php?topic=3441.msg48484#msg48484 .  It \ndeserves another look.\n\nNodes today make a judgment regarding which of several conflicting \nspends to accept, and which is a double-spend.  But there is no \nincorporation of these collective judgments into the blockchain.  So \ntoday, it's the wild west, right up until the next block.  To address this:\n\n  - Using its own clock, node associates a timestamp with every \ntransaction upon first seeing its tx hash (at inv, in a block, or when \ncreated)\n  - Node relays respend attempts (subject to anti-DOS rules, see github \nPR #3883)\n  - Eventually, node adds a consensus rule:\n     Do not accept blocks containing a transaction tx2 where\n         - tx2 respends an output spent by another locally accepted \ntransaction tx1, and\n         - timestamp(tx2) - timestamp(tx1) > T\n\nWhat is T?\n\nAccording to http://bitcoinstats.com/network/propagation/ recent tx \npropagation has a median of 1.3 seconds.  If double-spender introduces \nboth transactions from the same node, assuming propagation times \ndistributed exponentially with median 1.3 seconds, the above consensus \nrule with reject threshold T = 7.4 seconds would result in \nmis-identification of the second-spend by less than 1% of nodes.*\n\nIf tx1 and tx2 are introduced in mutually time-distant parts of the \nnetwork, a population of nodes in between would be able to accept either \ntransaction, as they can today.  But the attacker still has to introduce \nthem at close to the same time, or the majority of the network will \nconfirm the one introduced earlier.\n\nMerchant is watching also, and these dynamics mean he will not have to \nwatch for very long to gain confidence if he was going to get \ndouble-spent, he would have learned it by now.  The consensus rule also \nmakes mining a never-broadcast double-spend quite difficult, because the \nnetwork assigns it very late timestamps.  Miner has to get lucky and \nfind the block very quickly.  In other words, it converges to a Finney \nattack.\n\nThis would be the first consensus rule that anticipated less than 100% \nagreement.  But the parameters could be chosen so that it was still \nextremely conservative.  Joe also suggested a fail-safe condition: drop \nthis rule if block has 6 confirmations, to prevent a fork in unusual \nnetwork circumstances.\n\nWe can't move toward this, or any, solution without more data. Today, \nthe network is not transparent to double-spend attempts, so we mostly \nhave to guess what the quantitative effects would be.  The first step is \nto share the data broadly by relaying first double-spend attempts as in \ngithub PR #3883.\n\n\n*Calcs:\nFor Exp(lambda), median ln(2)/lambda = 1.3 ==> lambda = .533\nLaplace(0,1/lambda) < .01 ==> T = 7.34 seconds"
            },
            {
                "author": "Christophe Biocca",
                "date": "2014-05-04T02:54:26",
                "message_text_only": "Unfortunately this could fork the network permanently, which is much\nworse than a double spend. There's no magic way to have a consensus,\nso it becomes trivial with a few tries to split the network into two\nhalves: (tx1 before tx2, tx2 before tx1). Some nodes in the middle\nwill accept either block, but you've still forked off some non-zero\nnumber of nodes.\n\nAt a minimum, you'd need a way to reconcile the split (Accept the\noffending block once it's 2+ deep). The problem is that since the rule\nisn't enforceable, no miner will wait before mining on the longest\nchain (which is the rational move), and you're back to where we are\nnow.\n\nOn Sat, May 3, 2014 at 8:29 PM, Tom Harding <tomh at thinlink.com> wrote:\n> This idea was suggested by \"Joe\" on 2011-02-14\n> https://bitcointalk.org/index.php?topic=3441.msg48484#msg48484 .  It\n> deserves another look.\n>\n> Nodes today make a judgment regarding which of several conflicting\n> spends to accept, and which is a double-spend.  But there is no\n> incorporation of these collective judgments into the blockchain.  So\n> today, it's the wild west, right up until the next block.  To address this:\n>\n>   - Using its own clock, node associates a timestamp with every\n> transaction upon first seeing its tx hash (at inv, in a block, or when\n> created)\n>   - Node relays respend attempts (subject to anti-DOS rules, see github\n> PR #3883)\n>   - Eventually, node adds a consensus rule:\n>      Do not accept blocks containing a transaction tx2 where\n>          - tx2 respends an output spent by another locally accepted\n> transaction tx1, and\n>          - timestamp(tx2) - timestamp(tx1) > T\n>\n> What is T?\n>\n> According to http://bitcoinstats.com/network/propagation/ recent tx\n> propagation has a median of 1.3 seconds.  If double-spender introduces\n> both transactions from the same node, assuming propagation times\n> distributed exponentially with median 1.3 seconds, the above consensus\n> rule with reject threshold T = 7.4 seconds would result in\n> mis-identification of the second-spend by less than 1% of nodes.*\n>\n> If tx1 and tx2 are introduced in mutually time-distant parts of the\n> network, a population of nodes in between would be able to accept either\n> transaction, as they can today.  But the attacker still has to introduce\n> them at close to the same time, or the majority of the network will\n> confirm the one introduced earlier.\n>\n> Merchant is watching also, and these dynamics mean he will not have to\n> watch for very long to gain confidence if he was going to get\n> double-spent, he would have learned it by now.  The consensus rule also\n> makes mining a never-broadcast double-spend quite difficult, because the\n> network assigns it very late timestamps.  Miner has to get lucky and\n> find the block very quickly.  In other words, it converges to a Finney\n> attack.\n>\n> This would be the first consensus rule that anticipated less than 100%\n> agreement.  But the parameters could be chosen so that it was still\n> extremely conservative.  Joe also suggested a fail-safe condition: drop\n> this rule if block has 6 confirmations, to prevent a fork in unusual\n> network circumstances.\n>\n> We can't move toward this, or any, solution without more data. Today,\n> the network is not transparent to double-spend attempts, so we mostly\n> have to guess what the quantitative effects would be.  The first step is\n> to share the data broadly by relaying first double-spend attempts as in\n> github PR #3883.\n>\n>\n> *Calcs:\n> For Exp(lambda), median ln(2)/lambda = 1.3 ==> lambda = .533\n> Laplace(0,1/lambda) < .01 ==> T = 7.34 seconds\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Tom Harding",
                "date": "2014-05-06T17:49:05",
                "message_text_only": "Christophe Biocca wrote:\n\n> it becomes trivial with a few tries to split the network into two\n> halves: (tx1 before tx2, tx2 before tx1).\n\n\"before\" implies T=0.  That is a much too optimistic choice for T; 50% \nof nodes would misidentify the respend.\n\n\n> Tom Harding <tomh at thinlink.com> wrote:\n>>    - Eventually, node adds a consensus rule:\n>>       Do not accept blocks containing a transaction tx2 where\n>>           - tx2 respends an output spent by another locally accepted\n>> transaction tx1, and\n>>           - timestamp(tx2) - timestamp(tx1) > T"
            },
            {
                "author": "Tom Harding",
                "date": "2014-05-12T04:41:04",
                "message_text_only": "Christophe Biocca wrote:\n\n> The problem is that since the rule\n> isn't enforceable, no miner will wait before mining on the longest\n> chain (which is the rational move), and you're back to where we are\n> now.\n\nBack up to the miner who decided to include a \"seasoned\" double-spend in \nhis block.  Let's say he saw it 21 seconds after he saw an earlier \nspend, and included it, despite the rule.\n\nThe expected cost of including the respend is any revenue loss from \ndoing so: (total miner revenue of block)*(fraction of hashpower \nfollowing the rule).  So today, if only 1% of hashpower follows the rule \n(ie a near total failure of consensus implementation), he still loses at \nleast .25 BTC.\n\n.25 BTC is about 1000x the typical \"double-spend premium\" I'm seeing \nright now.  Wouldn't the greedy-rational miner just decide to include \nthe earlier spend instead?"
            },
            {
                "author": "Tom Harding",
                "date": "2014-05-12T13:04:47",
                "message_text_only": "Sorry to run on, a correction is needed.  A much better approximation \nrequires that the rule-following minority finds the next TWO blocks, so \nthe cost is\n\n(total miner revenue of block)*(fraction of hashpower following the rule)^2\n\nSo the lower bound cost in this very pessimistic scenario is .0025 BTC,  \nstill quite high for one transaction.  I guess miner could try to make a \nbusiness out of mining double-spends, to defray that cost.\n\n\nOn 5/11/2014 9:41 PM, Tom Harding wrote:\n> Back up to the miner who decided to include a \"seasoned\" double-spend \n> in his block.  Let's say he saw it 21 seconds after he saw an earlier \n> spend, and included it, despite the rule.\n>\n> The expected cost of including the respend is any revenue loss from \n> doing so: (total miner revenue of block)*(fraction of hashpower \n> following the rule).  So today, if only 1% of hashpower follows the \n> rule (ie a near total failure of consensus implementation), he still \n> loses at least .25 BTC.\n>\n> .25 BTC is about 1000x the typical \"double-spend premium\" I'm seeing \n> right now.  Wouldn't the greedy-rational miner just decide to include \n> the earlier spend instead"
            }
        ],
        "thread_summary": {
            "title": "A statistical consensus rule for reducing 0-conf double-spend risk",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Christophe Biocca",
                "Tom Harding"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 9562
        }
    },
    {
        "title": "[Bitcoin-development] (no subject)",
        "thread_messages": [
            {
                "author": "losewife at gmail.com",
                "date": "2014-05-04T01:47:39",
                "message_text_only": "losewife at gmail.com\n\n\nlosewife at gmail.com\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/dcd5909d/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "(no subject)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "losewife at gmail.com"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 229
        }
    },
    {
        "title": "[Bitcoin-development] Proposal for extra nonce in block header",
        "thread_messages": [
            {
                "author": "Timo Hanke",
                "date": "2014-05-04T15:14:51",
                "message_text_only": "> If changing the structure of the block header, wouldnt you also need to\n> increment the version number to 3?\n\nNo, in this case I don't think so. Incrementing the version number has\ntwo purposes:\n\n1. inform old clients that something new is going on\n2. be able to phase out old version numbers and block them once the new\nversion number becomes a supermajority.\n\nNone of these two is necessary here. Old clients already recognize the\nnew block headers as something new because they look like very high\nversion numbers to them. And there is no reason to ever phase out blocks\nthat have zero in the MSBs of the version.\n\nOn Sun, Apr 27, 2014 at 10:17:11AM +0200, Melvin Carvalho wrote:\n> On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:\n> \n>     I'd like to put the following draft of a BIP up for discussion.\n> \n>     Timo\n> \n>     # Abstract\n>     There are incentives for miners to find cheap, non-standard ways to\n>     generate new work, which are not necessarily in the best interest of the\n>     protocol.\n>     In order to reduce these incentives this proposal re-assigns 2 bytes from\n>     the version field of the block header to a new extra nonce field.\n>     # Copyright\n>     # Specification\n>     The block version number field in the block header is reduced in size from\n>     4 to 2 bytes.\n>     The third and fourth byte in the block header are assigned to the new extra\n>     nonce field inside the block header.\n>     # Motivation\n>     The motivation of this proposal is to provide miners with a cheap\n>     constant-complexity method to create new work that does not require\n>     altering the transaction tree.\n> \n>     Furthermore, the motivation is to protect the version and timestamp fields\n>     in the block header from abuse.\n>     # Rationale\n>     Traditionally, the extra nonce is part of the coinbase field of the\n>     generation transaction, which is always the very first transaction of a\n>     block.\n>     After incrementing the extra nonce the minimum amount of work a miner has\n>     to do to re-calculate the block header is a) to hash the coinbase\n>     transaction and b) to re-calculate the left-most branch of the merkle tree\n>     all the way to the merkle root.\n>     This is necessary overhead a miner has to do besides hashing the block\n>     header itself.\n>     We shall call the process that leads to a new block header from the same\n>     transaction set the _pre-hashing_.\n> \n>     First it should be noted that the relative cost of pre-hashing in its\n>     traditional form depends\n>     on the block size, which may create an unwanted incentive for miners\n>     to keep the block size small. However, this is not the main motivation for\n>     the current proposal.\n> \n>     While the block header is hashed by ASICs, pre-hashing typically happens on\n>     a CPU because of the greater flexibility required.\n>     Consequently, as ASIC cost per hash performance drops the relative cost of\n>     pre-hashing increases.\n> \n>     This creates an incentive for miners to find cheaper ways to create new\n>     work than by means of pre-hashing.\n>     An example of this currently happening is the on-device rolling of the\n>     timestamp into the future.\n>     These ways of creating new work are unlikely to be in the best interest of\n>     the protocol.\n>     For example, rolling the timestamp faster than the real time is unwanted\n>     (more so on faster blockchains).\n> \n>     The version number in the block header is a possible target for alteration\n>     with the goal of cheaply creating new work.\n>     Currently, blocks with arbitrarily large version numbers get relayed and\n>     accepted by the network.\n>     As this is unwanted behaviour, there should not exist any incentive for a\n>     miner to abuse the version number in this way.\n> \n>     The solution is to reduce the range of version numbers from 2^32 to 2^16\n>     and to declare the third and forth bytes of the block header as legitimate\n>     space for an extra nonce.\n>     This will reduce the incentive for a miner to abuse the shortened version\n>     number by a factor in the order of 2^16.\n> \n>     As a side effect, this proposal greatly reduces the bandwidth requirements\n>     of a blind pool protocol by only submitting the block header to the miner.\n>     # Backwards Compatibility\n>     Old versions of the client will accept blocks of this kind but will throw\n>     an alert at the user to upgrade.\n>     The only code change would be a cast of the version number to a short.\n>     Besides the upgrade alert, old and new versions of the client can co-exist\n>     and there is no need to introduce a new block version number or to\n>     phase-out old block versions.\n>     # Reference Implementation\n>     # Final implementation\n> \n> \n> If changing the structure of the block header, wouldnt you also need to\n> increment the version number to 3?"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-04T15:26:06",
                "message_text_only": "Although I agree 32 bits for a version is overkill, I really don't like the\nidea of you simply ignoring the protocol spec to try and reduce your own\ncosts. Especially because in future we should make unknown versions a\nvalidation rule, so we can easily trigger hard forks.\n\nIf this change was introduced through a proper process and software was\nproperly upgraded to understand the new header format, that'd be one thing.\nArbitrarily exploiting what is IMHO a missing rule in the rule set to shave\na bit more profit is something else.\n\n\nOn Sun, May 4, 2014 at 5:14 PM, Timo Hanke <timo.hanke at web.de> wrote:\n\n> > If changing the structure of the block header, wouldnt you also need to\n> > increment the version number to 3?\n>\n> No, in this case I don't think so. Incrementing the version number has\n> two purposes:\n>\n> 1. inform old clients that something new is going on\n> 2. be able to phase out old version numbers and block them once the new\n> version number becomes a supermajority.\n>\n> None of these two is necessary here. Old clients already recognize the\n> new block headers as something new because they look like very high\n> version numbers to them. And there is no reason to ever phase out blocks\n> that have zero in the MSBs of the version.\n>\n> On Sun, Apr 27, 2014 at 10:17:11AM +0200, Melvin Carvalho wrote:\n> > On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:\n> >\n> >     I'd like to put the following draft of a BIP up for discussion.\n> >\n> >     Timo\n> >\n> >     # Abstract\n> >     There are incentives for miners to find cheap, non-standard ways to\n> >     generate new work, which are not necessarily in the best interest of\n> the\n> >     protocol.\n> >     In order to reduce these incentives this proposal re-assigns 2 bytes\n> from\n> >     the version field of the block header to a new extra nonce field.\n> >     # Copyright\n> >     # Specification\n> >     The block version number field in the block header is reduced in\n> size from\n> >     4 to 2 bytes.\n> >     The third and fourth byte in the block header are assigned to the\n> new extra\n> >     nonce field inside the block header.\n> >     # Motivation\n> >     The motivation of this proposal is to provide miners with a cheap\n> >     constant-complexity method to create new work that does not require\n> >     altering the transaction tree.\n> >\n> >     Furthermore, the motivation is to protect the version and timestamp\n> fields\n> >     in the block header from abuse.\n> >     # Rationale\n> >     Traditionally, the extra nonce is part of the coinbase field of the\n> >     generation transaction, which is always the very first transaction\n> of a\n> >     block.\n> >     After incrementing the extra nonce the minimum amount of work a\n> miner has\n> >     to do to re-calculate the block header is a) to hash the coinbase\n> >     transaction and b) to re-calculate the left-most branch of the\n> merkle tree\n> >     all the way to the merkle root.\n> >     This is necessary overhead a miner has to do besides hashing the\n> block\n> >     header itself.\n> >     We shall call the process that leads to a new block header from the\n> same\n> >     transaction set the _pre-hashing_.\n> >\n> >     First it should be noted that the relative cost of pre-hashing in its\n> >     traditional form depends\n> >     on the block size, which may create an unwanted incentive for miners\n> >     to keep the block size small. However, this is not the main\n> motivation for\n> >     the current proposal.\n> >\n> >     While the block header is hashed by ASICs, pre-hashing typically\n> happens on\n> >     a CPU because of the greater flexibility required.\n> >     Consequently, as ASIC cost per hash performance drops the relative\n> cost of\n> >     pre-hashing increases.\n> >\n> >     This creates an incentive for miners to find cheaper ways to create\n> new\n> >     work than by means of pre-hashing.\n> >     An example of this currently happening is the on-device rolling of\n> the\n> >     timestamp into the future.\n> >     These ways of creating new work are unlikely to be in the best\n> interest of\n> >     the protocol.\n> >     For example, rolling the timestamp faster than the real time is\n> unwanted\n> >     (more so on faster blockchains).\n> >\n> >     The version number in the block header is a possible target for\n> alteration\n> >     with the goal of cheaply creating new work.\n> >     Currently, blocks with arbitrarily large version numbers get relayed\n> and\n> >     accepted by the network.\n> >     As this is unwanted behaviour, there should not exist any incentive\n> for a\n> >     miner to abuse the version number in this way.\n> >\n> >     The solution is to reduce the range of version numbers from 2^32 to\n> 2^16\n> >     and to declare the third and forth bytes of the block header as\n> legitimate\n> >     space for an extra nonce.\n> >     This will reduce the incentive for a miner to abuse the shortened\n> version\n> >     number by a factor in the order of 2^16.\n> >\n> >     As a side effect, this proposal greatly reduces the bandwidth\n> requirements\n> >     of a blind pool protocol by only submitting the block header to the\n> miner.\n> >     # Backwards Compatibility\n> >     Old versions of the client will accept blocks of this kind but will\n> throw\n> >     an alert at the user to upgrade.\n> >     The only code change would be a cast of the version number to a\n> short.\n> >     Besides the upgrade alert, old and new versions of the client can\n> co-exist\n> >     and there is no need to introduce a new block version number or to\n> >     phase-out old block versions.\n> >     # Reference Implementation\n> >     # Final implementation\n> >\n> >\n> > If changing the structure of the block header, wouldnt you also need to\n> > increment the version number to 3?\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.  Get\n> unparalleled scalability from the best Selenium testing platform available.\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/7ddf8b9a/attachment.html>"
            },
            {
                "author": "Timo Hanke",
                "date": "2014-05-04T16:08:22",
                "message_text_only": "On Sun, May 04, 2014 at 05:26:06PM +0200, Mike Hearn wrote:\n> Although I agree 32 bits for a version is overkill, I really don't like the\n> idea of you simply ignoring the protocol spec to try and reduce your own costs.\n\nThe purpose of the proposal is to change the protocol spec, not to\nignore it.\n\nThe argument for the proposal is explained in the Rationale section, and\nin abstracted form means precisely to make everybody follow the protocol\nspec by reducing incentives to ignore it. Specifically, it is about\nprotecting the timestamp field. \n\nI talked about relative costs involved in hashing, and how those will\nchange, and what incentives that creates. This development cannot be\nignored.\n\n> Especially because in future we should make unknown versions a validation rule,\n> so we can easily trigger hard forks.\n\nWhy does it require 32 bits?\n\n> If this change was introduced through a proper process and software was\n> properly upgraded to understand the new header format, that'd be one thing.\n> Arbitrarily exploiting what is IMHO a missing rule in the rule set to shave a\n> bit more profit is something else.\n\nAgain, this is a BIP. I am proposing a software upgrade, which is\nabsolutely required. When I said that version 3 is not required I meant\nthat the software upgrade (which basically just turns the nonce into a\nshort) does not have to be accompanied by a new version number for any\ntechnical reason. Is there another reason why it should be incremented?\n\n> On Sun, May 4, 2014 at 5:14 PM, Timo Hanke <timo.hanke at web.de> wrote:\n> \n>     > If changing the structure of the block header, wouldnt you also need to\n>     > increment the version number to 3?\n> \n>     No, in this case I don't think so. Incrementing the version number has\n>     two purposes:\n> \n>     1. inform old clients that something new is going on\n>     2. be able to phase out old version numbers and block them once the new\n>     version number becomes a supermajority.\n> \n>     None of these two is necessary here. Old clients already recognize the\n>     new block headers as something new because they look like very high\n>     version numbers to them. And there is no reason to ever phase out blocks\n>     that have zero in the MSBs of the version.\n> \n>     On Sun, Apr 27, 2014 at 10:17:11AM +0200, Melvin Carvalho wrote:\n>     > On 27 April 2014 09:07, Timo Hanke <timo.hanke at web.de> wrote:\n>     >\n>     > \u00a0 \u00a0 I'd like to put the following draft of a BIP up for discussion.\n>     >\n>     > \u00a0 \u00a0 Timo\n>     >\n>     > \u00a0 \u00a0 # Abstract\n>     > \u00a0 \u00a0 There are incentives for miners to find cheap, non-standard ways to\n>     > \u00a0 \u00a0 generate new work, which are not necessarily in the best interest of\n>     the\n>     > \u00a0 \u00a0 protocol.\n>     > \u00a0 \u00a0 In order to reduce these incentives this proposal re-assigns 2 bytes\n>     from\n>     > \u00a0 \u00a0 the version field of the block header to a new extra nonce field.\n>     > \u00a0 \u00a0 # Copyright\n>     > \u00a0 \u00a0 # Specification\n>     > \u00a0 \u00a0 The block version number field in the block header is reduced in size\n>     from\n>     > \u00a0 \u00a0 4 to 2 bytes.\n>     > \u00a0 \u00a0 The third and fourth byte in the block header are assigned to the new\n>     extra\n>     > \u00a0 \u00a0 nonce field inside the block header.\n>     > \u00a0 \u00a0 # Motivation\n>     > \u00a0 \u00a0 The motivation of this proposal is to provide miners with a cheap\n>     > \u00a0 \u00a0 constant-complexity method to create new work that does not require\n>     > \u00a0 \u00a0 altering the transaction tree.\n>     >\n>     > \u00a0 \u00a0 Furthermore, the motivation is to protect the version and timestamp\n>     fields\n>     > \u00a0 \u00a0 in the block header from abuse.\n>     > \u00a0 \u00a0 # Rationale\n>     > \u00a0 \u00a0 Traditionally, the extra nonce is part of the coinbase field of the\n>     > \u00a0 \u00a0 generation transaction, which is always the very first transaction of\n>     a\n>     > \u00a0 \u00a0 block.\n>     > \u00a0 \u00a0 After incrementing the extra nonce the minimum amount of work a miner\n>     has\n>     > \u00a0 \u00a0 to do to re-calculate the block header is a) to hash the coinbase\n>     > \u00a0 \u00a0 transaction and b) to re-calculate the left-most branch of the merkle\n>     tree\n>     > \u00a0 \u00a0 all the way to the merkle root.\n>     > \u00a0 \u00a0 This is necessary overhead a miner has to do besides hashing the\n>     block\n>     > \u00a0 \u00a0 header itself.\n>     > \u00a0 \u00a0 We shall call the process that leads to a new block header from the\n>     same\n>     > \u00a0 \u00a0 transaction set the _pre-hashing_.\n>     >\n>     > \u00a0 \u00a0 First it should be noted that the relative cost of pre-hashing in its\n>     > \u00a0 \u00a0 traditional form depends\n>     > \u00a0 \u00a0 on the block size, which may create an unwanted incentive for miners\n>     > \u00a0 \u00a0 to keep the block size small. However, this is not the main\n>     motivation for\n>     > \u00a0 \u00a0 the current proposal.\n>     >\n>     > \u00a0 \u00a0 While the block header is hashed by ASICs, pre-hashing typically\n>     happens on\n>     > \u00a0 \u00a0 a CPU because of the greater flexibility required.\n>     > \u00a0 \u00a0 Consequently, as ASIC cost per hash performance drops the relative\n>     cost of\n>     > \u00a0 \u00a0 pre-hashing increases.\n>     >\n>     > \u00a0 \u00a0 This creates an incentive for miners to find cheaper ways to create\n>     new\n>     > \u00a0 \u00a0 work than by means of pre-hashing.\n>     > \u00a0 \u00a0 An example of this currently happening is the on-device rolling of\n>     the\n>     > \u00a0 \u00a0 timestamp into the future.\n>     > \u00a0 \u00a0 These ways of creating new work are unlikely to be in the best\n>     interest of\n>     > \u00a0 \u00a0 the protocol.\n>     > \u00a0 \u00a0 For example, rolling the timestamp faster than the real time is\n>     unwanted\n>     > \u00a0 \u00a0 (more so on faster blockchains).\n>     >\n>     > \u00a0 \u00a0 The version number in the block header is a possible target for\n>     alteration\n>     > \u00a0 \u00a0 with the goal of cheaply creating new work.\n>     > \u00a0 \u00a0 Currently, blocks with arbitrarily large version numbers get relayed\n>     and\n>     > \u00a0 \u00a0 accepted by the network.\n>     > \u00a0 \u00a0 As this is unwanted behaviour, there should not exist any incentive\n>     for a\n>     > \u00a0 \u00a0 miner to abuse the version number in this way.\n>     >\n>     > \u00a0 \u00a0 The solution is to reduce the range of version numbers from 2^32 to 2\n>     ^16\n>     > \u00a0 \u00a0 and to declare the third and forth bytes of the block header as\n>     legitimate\n>     > \u00a0 \u00a0 space for an extra nonce.\n>     > \u00a0 \u00a0 This will reduce the incentive for a miner to abuse the shortened\n>     version\n>     > \u00a0 \u00a0 number by a factor in the order of 2^16.\n>     >\n>     > \u00a0 \u00a0 As a side effect, this proposal greatly reduces the bandwidth\n>     requirements\n>     > \u00a0 \u00a0 of a blind pool protocol by only submitting the block header to the\n>     miner.\n>     > \u00a0 \u00a0 # Backwards Compatibility\n>     > \u00a0 \u00a0 Old versions of the client will accept blocks of this kind but will\n>     throw\n>     > \u00a0 \u00a0 an alert at the user to upgrade.\n>     > \u00a0 \u00a0 The only code change would be a cast of the version number to a\n>     short.\n>     > \u00a0 \u00a0 Besides the upgrade alert, old and new versions of the client can\n>     co-exist\n>     > \u00a0 \u00a0 and there is no need to introduce a new block version number or to\n>     > \u00a0 \u00a0 phase-out old block versions.\n>     > \u00a0 \u00a0 # Reference Implementation\n>     > \u00a0 \u00a0 # Final implementation\n>     >\n>     >\n>     > If changing the structure of the block header, wouldnt you also need to\n>     > increment the version number to 3?\n> \n>     ------------------------------------------------------------------------------\n>     \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>     Instantly run your Selenium tests across 300+ browser/OS combos. \u00a0Get\n>     unparalleled scalability from the best Selenium testing platform available.\n>     Simple to use. Nothing to install. Get started now for free.\"\n>     http://p.sf.net/sfu/SauceLabs\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n\n-- \nTimo Hanke\nPGP 1EFF 69BC 6FB7 8744 14DB  631D 1BB5 D6E3 AB96 7DA8"
            },
            {
                "author": "Timo Hanke",
                "date": "2014-05-04T15:32:25",
                "message_text_only": "On Sun, Apr 27, 2014 at 02:38:06AM -0700, Mark Friedenbach wrote:\n> I'm not convinced of the necessity of this idea in general, but if it\n> were to be implemented I would recommend serializing the nVersion field\n> as a VarInt (Pieter Wuille's multi-byte serialization format) and using\n> the remaining space of the 4 bytes as your extra nonce.\n> \n> That would allow serialization of numbers up to 0x1020407f (slightly\n> over 28 bits) before the 4-byte field is exhausted. For version numbers\n> less than 0x204080 there will be at least one byte of padding space left\n> over for extra-nonce usage (two bytes if less than 0x4080, three bytes\n> if less than 0x80). For version values up to 127, the format is exactly\n> identical when the padding bytes are zero.\n\nNeat idea. It might somewhat reduce the flexibility in which the version\nfield can be used in the future, though. \n\nFor the sake of simplicity I lean towards a fixed length version field,\nbut would be ok with either. Keep in mind that version numbers can be\nrecycled after a couple of years. So there is effectively zero benefit\nin allowing varints to extend beyond 2 bytes. For that reason personally\nI think 1 byte of version number would be enough.\n\n> On 04/27/2014 12:07 AM, Timo Hanke wrote:\n> > I'd like to put the following draft of a BIP up for discussion.\n> > \n> > Timo\n> > \n> > # Abstract\n> > There are incentives for miners to find cheap, non-standard ways to generate new work, which are not necessarily in the best interest of the protocol.\n> > In order to reduce these incentives this proposal re-assigns 2 bytes from the version field of the block header to a new extra nonce field. \n> > # Copyright\n> > # Specification\n> > The block version number field in the block header is reduced in size from 4 to 2 bytes. \n> > The third and fourth byte in the block header are assigned to the new extra nonce field inside the block header.\n> > # Motivation\n> > The motivation of this proposal is to provide miners with a cheap constant-complexity method to create new work that does not require altering the transaction tree.\n> > \n> > Furthermore, the motivation is to protect the version and timestamp fields in the block header from abuse.\n> > # Rationale\n> > Traditionally, the extra nonce is part of the coinbase field of the generation transaction, which is always the very first transaction of a block.\n> > After incrementing the extra nonce the minimum amount of work a miner has to do to re-calculate the block header is a) to hash the coinbase transaction and b) to re-calculate the left-most branch of the merkle tree all the way to the merkle root.\n> > This is necessary overhead a miner has to do besides hashing the block header itself.\n> > We shall call the process that leads to a new block header from the same transaction set the _pre-hashing_.\n> > \n> > First it should be noted that the relative cost of pre-hashing in its traditional form depends\n> > on the block size, which may create an unwanted incentive for miners\n> > to keep the block size small. However, this is not the main motivation for\n> > the current proposal.\n> > \n> > While the block header is hashed by ASICs, pre-hashing typically happens on a CPU because of the greater flexibility required.\n> > Consequently, as ASIC cost per hash performance drops the relative cost of pre-hashing increases.\n> > \n> > This creates an incentive for miners to find cheaper ways to create new work than by means of pre-hashing.\n> > An example of this currently happening is the on-device rolling of the timestamp into the future.\n> > These ways of creating new work are unlikely to be in the best interest of the protocol.\n> > For example, rolling the timestamp faster than the real time is unwanted (more so on faster blockchains).\n> > \n> > The version number in the block header is a possible target for alteration with the goal of cheaply creating new work.\n> > Currently, blocks with arbitrarily large version numbers get relayed and accepted by the network.\n> > As this is unwanted behaviour, there should not exist any incentive for a miner to abuse the version number in this way. \n> > \n> > The solution is to reduce the range of version numbers from 2^32 to 2^16 and to declare the third and forth bytes of the block header as legitimate space for an extra nonce.\n> > This will reduce the incentive for a miner to abuse the shortened version number by a factor in the order of 2^16. \n> > \n> > As a side effect, this proposal greatly reduces the bandwidth requirements of a blind pool protocol by only submitting the block header to the miner.\n> > # Backwards Compatibility\n> > Old versions of the client will accept blocks of this kind but will throw an alert at the user to upgrade.\n> > The only code change would be a cast of the version number to a short.\n> > Besides the upgrade alert, old and new versions of the client can co-exist and there is no need to introduce a new block version number or to phase-out old block versions.\n> > # Reference Implementation\n> > # Final implementation\n> > \n> \n> \n\n-- \nTimo Hanke\nPGP 1EFF 69BC 6FB7 8744 14DB  631D 1BB5 D6E3 AB96 7DA8"
            }
        ],
        "thread_summary": {
            "title": "Proposal for extra nonce in block header",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Timo Hanke"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 24480
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoind-in-background mode for SPV wallets",
        "thread_messages": [
            {
                "author": "Tier Nolan",
                "date": "2014-05-04T21:11:27",
                "message_text_only": "On Fri, Apr 11, 2014 at 5:54 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n> For the non-error-coded case I believe nodes\n> with random spans of blocks works out asymptotically to the same\n> failure rates as random.\n>\n\nIf each \"block\" is really 512 blocks in sequence, then each \"slot\" is more\nlikely to be hit.  It effectively reduces the number of blocks by the\nminimum run lengths.\n\nECC seemed cooler though.\n\n\n> (The conversation Peter Todd was referring to was one where I was\n> pointing out that with suitable error coding you also get an\n> anti-censorship effect where its very difficult to provide part of the\n> data without potentially providing all of it)\n>\n\nInteresting too.\n\n>\n> I think in the network we have today and for the foreseeable future we\n> can reasonably count on there being a reasonable number of nodes that\n> store all the blocks... quite likely not enough to satisfy the\n> historical block demand from the network alone, but easily enough to\n> supply blocks that have otherwise gone missing.\n>\n\nThat's true.  Scaling up the transactions per second increases the chance\nof data lost.\n\nWith side/tree chains, the odds of data loss in the less important chains\nincreases (though they are by definition lower value chains)\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140504/bb84548b/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoind-in-background mode for SPV wallets",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Tier Nolan"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1435
        }
    },
    {
        "title": "[Bitcoin-development] Presenting a BIP for Shamir's Secret Sharing of Bitcoin private keys",
        "thread_messages": [
            {
                "author": "Nikita Schmidt",
                "date": "2014-05-05T19:36:54",
                "message_text_only": "A fork of Matt's proposal converted to GF(2^8) is here:\nhttps://github.com/cetuscetus/btctool/blob/bip/bip-xxxx.mediawiki\n\nOther changes include:\n- only six application/version bytes are allocated, which is the\nminimum to ensure that the encoded form starts with S in all cases;\n- encoded prefixes are SK/SL for a shared private key\n(mainnet/testnet) and SS/ST for a shared BIP32 seed;\n- the only hash function in use is SHA-256, which is the all-purpose\nhash function in the Bitcoin protocol;\n- double SHA is used for similarity with Bitcoin, although Jan and I\nbelieve single SHA is enough in this application;\n- bias-less encoding of M and x, because there can't be more than 255\nshares over GF(2^8).\n\n\nOn 23 April 2014 09:16, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> On Tue, Apr 22, 2014 at 10:33 PM, Tamas Blummer <tamas at bitsofproof.com> wrote:\n>> So you agree, that SSS should not contain specific flag for testnet?\n>>\n>> Or for that matter not even BIP32 needs them since it is not an address to\n>> send to.\n>\n> I think the convention we have so far is that addresses and address\n> relate thing we share normally contain an opaque 'version' identifier\n> which we use to identify the purpose for the data (E.g. network\n> meaning, etc.) and I think its a generally reasonable custom.\n>\n> ------------------------------------------------------------------------------\n> Start Your Social Network Today - Download eXo Platform\n> Build your Enterprise Intranet with eXo Platform Software\n> Java Based Open Source Intranet - Social, Extensible, Cloud Ready\n> Get Started Now And Turn Your Intranet Into A Collaboration Platform\n> http://p.sf.net/sfu/ExoPlatform\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jan M\u00f8ller",
                "date": "2014-05-12T12:09:53",
                "message_text_only": "A Java implementation of what is called BIPSS in lack of an official number\ncan be found here:\nhttps://github.com/mycelium-com/wallet/blob/master/public/bitlib/src/main/java/com/mrd/bitlib/crypto/BipSs.java\n(passing all test vectors)\n\nWhich is based on a GF2^8 implementation here:\nhttps://github.com/mycelium-com/wallet/blob/master/public/bitlib/src/main/java/com/mrd/bitlib/crypto/Gf256.java\n\nI think having 3 encoding formats (long/short/compact) is over engineered,\nand basically only makes implementing the standard a pain in the rear. From\na user experience point of view only the long format makes sense, and it is\nonly a few bytes longer than the short version.\n\n\n\n\nOn Mon, May 5, 2014 at 9:36 PM, Nikita Schmidt <\nnikita at megiontechnologies.com> wrote:\n\n> A fork of Matt's proposal converted to GF(2^8) is here:\n> https://github.com/cetuscetus/btctool/blob/bip/bip-xxxx.mediawiki\n>\n> Other changes include:\n> - only six application/version bytes are allocated, which is the\n> minimum to ensure that the encoded form starts with S in all cases;\n> - encoded prefixes are SK/SL for a shared private key\n> (mainnet/testnet) and SS/ST for a shared BIP32 seed;\n> - the only hash function in use is SHA-256, which is the all-purpose\n> hash function in the Bitcoin protocol;\n> - double SHA is used for similarity with Bitcoin, although Jan and I\n> believe single SHA is enough in this application;\n> - bias-less encoding of M and x, because there can't be more than 255\n> shares over GF(2^8).\n>\n>\n> On 23 April 2014 09:16, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> > On Tue, Apr 22, 2014 at 10:33 PM, Tamas Blummer <tamas at bitsofproof.com>\n> wrote:\n> >> So you agree, that SSS should not contain specific flag for testnet?\n> >>\n> >> Or for that matter not even BIP32 needs them since it is not an address\n> to\n> >> send to.\n> >\n> > I think the convention we have so far is that addresses and address\n> > relate thing we share normally contain an opaque 'version' identifier\n> > which we use to identify the purpose for the data (E.g. network\n> > meaning, etc.) and I think its a generally reasonable custom.\n> >\n> >\n> ------------------------------------------------------------------------------\n> > Start Your Social Network Today - Download eXo Platform\n> > Build your Enterprise Intranet with eXo Platform Software\n> > Java Based Open Source Intranet - Social, Extensible, Cloud Ready\n> > Get Started Now And Turn Your Intranet Into A Collaboration Platform\n> > http://p.sf.net/sfu/ExoPlatform\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/27fd18ec/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Presenting a BIP for Shamir's Secret Sharing of Bitcoin private keys",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jan M\u00f8ller",
                "Nikita Schmidt"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 5337
        }
    },
    {
        "title": "[Bitcoin-development] BIP70 proposed changes",
        "thread_messages": [
            {
                "author": "Odinn Cyberguerrilla",
                "date": "2014-05-06T02:35:14",
                "message_text_only": "I am curious if the Android developer who had been working on two factor\nauthentication and bitcoin had worked toward an open issue or pull\nrequest?  I had been looking around for some sign that this had occurred\nbut hadn't found it, I am interested to know what is the progress in this\narea (in a fully decentralized way that resides fully on one's device or\ndevices).\n\nFor some reason maidsafe keeps rising up in my brain, have bitcoin core\ndevelopers touched bases with maidsafe developers on these kind of fine\npoints?\n\nJust thoughts and questions.\n\n-Odinn\n\n> On Tue, Feb 18, 2014 at 4:40 PM, Andreas Schildbach\n> <andreas at schildbach.de> wrote:\n>> On 02/18/2014 08:14 PM, Ryan X. Charles wrote:\n>>> BitPay is working on a new standard\n>>> based on bitcoin-like addresses for authentication. It would be great\n>>> if\n>>> we could work with the community to establish a complete, decentralized\n>>> authentication protocol.\n>>\n>> Sounds interesting, let us know as soon as you have anything.\n>\n> SINs.  See https://en.bitcoin.it/wiki/Identity_protocol_v1\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n> ------------------------------------------------------------------------------\n> Managing the Performance of Cloud-Based Applications\n> Take advantage of what the Cloud has to offer - Avoid Common Pitfalls.\n> Read the Whitepaper.\n> http://pubads.g.doubleclick.net/gampad/clk?id=121054471&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Alon Muroch",
                "date": "2014-05-06T08:22:15",
                "message_text_only": "Hi Odinn,\nThere is a tromendous progress and we are working hard on the 2 factor\nauth.\nYou an follow our progress at :\nhttps://github.com/cpacia/BitcoinAuthenticator\n\nWe are still at development and there is a lot to be done :)\n\n\nOn Tue, May 6, 2014 at 4:35 AM, Odinn Cyberguerrilla <\nodinn.cyberguerrilla at riseup.net> wrote:\n\n> I am curious if the Android developer who had been working on two factor\n> authentication and bitcoin had worked toward an open issue or pull\n> request?  I had been looking around for some sign that this had occurred\n> but hadn't found it, I am interested to know what is the progress in this\n> area (in a fully decentralized way that resides fully on one's device or\n> devices).\n>\n> For some reason maidsafe keeps rising up in my brain, have bitcoin core\n> developers touched bases with maidsafe developers on these kind of fine\n> points?\n>\n> Just thoughts and questions.\n>\n> -Odinn\n>\n> > On Tue, Feb 18, 2014 at 4:40 PM, Andreas Schildbach\n> > <andreas at schildbach.de> wrote:\n> >> On 02/18/2014 08:14 PM, Ryan X. Charles wrote:\n> >>> BitPay is working on a new standard\n> >>> based on bitcoin-like addresses for authentication. It would be great\n> >>> if\n> >>> we could work with the community to establish a complete, decentralized\n> >>> authentication protocol.\n> >>\n> >> Sounds interesting, let us know as soon as you have anything.\n> >\n> > SINs.  See https://en.bitcoin.it/wiki/Identity_protocol_v1\n> >\n> > --\n> > Jeff Garzik\n> > Bitcoin core developer and open source evangelist\n> > BitPay, Inc.      https://bitpay.com/\n> >\n> >\n> ------------------------------------------------------------------------------\n> > Managing the Performance of Cloud-Based Applications\n> > Take advantage of what the Cloud has to offer - Avoid Common Pitfalls.\n> > Read the Whitepaper.\n> >\n> http://pubads.g.doubleclick.net/gampad/clk?id=121054471&iu=/4140/ostg.clktrk\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140506/7a6497eb/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "BIP70 proposed changes",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Alon Muroch",
                "Odinn Cyberguerrilla"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 4538
        }
    },
    {
        "title": "[Bitcoin-development] Bug in key.cpp",
        "thread_messages": [
            {
                "author": "Srintuar",
                "date": "2014-05-06T02:42:02",
                "message_text_only": "I think i see a bug:\n\nline 273 of key.cpp\n\n        if (rec<0 || rec>=3)\n            return false;\n\nAfaict, 3 is a perfectly valid value, meaning 25% of sig-> key recoveries\nwould fail erroneously...\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140505/730bd78c/attachment.html>"
            },
            {
                "author": "odinn.cyberguerrilla at riseup.net",
                "date": "2014-05-06T03:12:41",
                "message_text_only": "You are right there is a bug in there.\n\nBut the value is not 25% I think.  Tinker some more. :-)\n\n> I think i see a bug:\n>\n> line 273 of key.cpp\n>\n>         if (rec<0 || rec>=3)\n>             return false;\n>\n> Afaict, 3 is a perfectly valid value, meaning 25% of sig-> key recoveries\n> would fail erroneously...\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2014-05-06T08:25:06",
                "message_text_only": "On Tue, May 6, 2014 at 5:12 AM,  <odinn.cyberguerrilla at riseup.net> wrote:\n> You are right there is a bug in there.\n>\n> But the value is not 25% I think.  Tinker some more. :-)\n>\n>>\n>> Afaict, 3 is a perfectly valid value, meaning 25% of sig-> key recoveries\n>> would fail erroneously...\n\nValues 2 and 3 are only needed in theory. They together shouldn't\noccur more than once in 2**127 (when the signature value is between\nthe group size and the field size).\n\nThat said, this is indeed a bug.\n\n-- \nPieter"
            }
        ],
        "thread_summary": {
            "title": "Bug in key.cpp",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Srintuar",
                "odinn.cyberguerrilla at riseup.net",
                "Pieter Wuille"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 1757
        }
    },
    {
        "title": "[Bitcoin-development] DECOR+ Better block selection rule",
        "thread_messages": [
            {
                "author": "Sergio Lerner",
                "date": "2014-05-07T04:31:01",
                "message_text_only": "This e-mail is an extract of my post:\nhttp://bitslog.wordpress.com/2014/05/07/decor-2/\n\nSome posts ago I presented the DECOR protocol. One of the assumptions I\ndid was that the amount of coins each miner earned in competing blocks\nwas approximately the same. This could be true for cryptocurrencies with\nnever ending block subsidies (inflationary designs) because the block\nsubsidy may be an order of magnitude higher than the fees collected in\nthe block. In Bitcoin we don\u2019t really know what will happen with fees\nwhen the reward is halved. Less we know if in that case the number of\ntransactions per block (and fees collected) will be fairly constant or\nthere will be high variability. If Alice and Bob compete for a certain\nblock height with blocks A and B respectively, and Alice\u2019s block reward\n(subsidy+fees) is half of Bob\u2019s reward, then even if Hash(A) < Hash(B)\n(and the DECOR incentives are set to prefer A) it may be the case that\nboth Alice and Bob would prefer to mine on top of B since they both earn\nmuch more even paying the higher penalty d of burnt coins. In limit\ncases, Alice\u2019s optimal choice may not be the same as Bob\u2019s optimal\nchoice. I propose a slight modification of the protocol such that even\nwith different block rewards the optimal choice of parent is always the\nsame for all miners. Instead of choosing the block with less hash\ndigest, miners will choose the block with higher reward (subsidy+fees).\nSplitting the higher reward block would always be more profitable than\nsplitting lowest reward block. In the rare case both blocks have exactly\nthe same reward, then the block with lowest hash is chosen. Even if\nrewards are approximately equal, the change adds a new monetary\nincentive to cooperate. Compared with the DECOR protocol, the only\nmodification is in step 6.\n\n*DECOR+ Mining strategy*\n\n 1. If there is no block Y having a sibling X in the main chain whose\n    reward has not matured then mine in the standard way and exit this\n    procedure\n 2. Add a reference to Y in the new block that is being prepared.\n 3. Let x  := BlockReward(X)\n 4. Let q := x*a\n 5. Let z :=x*b\n 6. If (BlockReward(X)<BlockReward(Y)) OR\n    (BlockReward(X)=BlockReward(Y)) AND (Hash(X)>Hash(Y)) then\n    q :=q-(x*c)\n    z :=z+(x*d)\n 7. Let w :=x*e\n 8. Add a transaction that has as input the coinbase output of X and has\n    four outputs:\n          o pay q coins to the address specified in the coinbase output\n            of block Y\n          o pay w coins to an owned address\n          o burns z coins\n          o pay the remaining coins to the same address as the input\n            address.\n\n \n\nBlockReward() returns the block subsidy plus the transaction fees in the\nblock.\n\n*Conditions on constants*\n\nIf you want to choose different values of a,b,c,d,e that still force\nminers selections converge into a single parent then these conditions\nmust be satisfied:\n\n  * e > 0\n  * 1-a-e-b > a-c\n  * 1+e-a-e-b > a-c\n  * a > 1-a-c-e-b-d\n  * a+e > 1-a-c-e-b-d\n\nAnd all constants are between 0 and 1.\n\nIt's interesting that now it's much easier to prove that for two\ncompeting miners the DECOR+ protocol cannot be abused, since there is no\ndependence on the block content.\n\nBest regards,\n Sergio.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/a54bf7e6/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "DECOR+ Better block selection rule",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Sergio Lerner"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 3388
        }
    },
    {
        "title": "[Bitcoin-development] Announcing the Statoshi fork",
        "thread_messages": [
            {
                "author": "Jameson Lopp",
                "date": "2014-05-07T19:12:18",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nIn order to gain more insight into what messages and requests a node is processing, I've created a Bitcoin Core fork that outputs statistics to StatsD. I hope that some of you will find this interesting and potentially useful.\n\nhttp://coinchomp.com/2014/05/07/announcing-statoshi-realtime-bitcoin-node-statistics/\n\nhttps://jlopp.github.io/statoshi/\n\nFeedback is appreciated!\n\n- - Jameson\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.14 (GNU/Linux)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTaoWSAAoJEIch3FSFNiDclLoH/0CXPTum6B2cfoNsacihHuS9\n9wt50sOgghttS3J/kloP315ijY7p2HSmhvqL2G/DWYh5Vx0f6gTaUAokQ8H6x4EV\n3/pdZG+9a6eegpCtgr+IgphgPSEufzct/Mp7pKTAbH0G61toOM5ZfIgdL2X/2tpx\n4TjOmjhZRHuglzsM9934EjezIsR7l2vaRQB0r1LPGSgWmDSKTTb2uK7xvD1zg0tz\nQXb0hl7A6rw1xZwmw3i+PujshJCbjVh8QrFT55GYi05yYdBsS6BAG46F5D8Uvn+M\nFnCBLdRfWrTzQXIxoLrtBmM1JXOJKdMhmG0p2mwzwXEGR7MR2suS/+Bb7iHJTpA=\n=iNNR\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-07T19:46:42",
                "message_text_only": "On Wed, May 7, 2014 at 9:12 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> In order to gain more insight into what messages and requests a node is processing, I've created a Bitcoin Core fork that outputs statistics to StatsD. I hope that some of you will find this interesting and potentially useful.\n>\n> http://coinchomp.com/2014/05/07/announcing-statoshi-realtime-bitcoin-node-statistics/\n>\n> https://jlopp.github.io/statoshi/\n>\n> Feedback is appreciated!\n\nOoh nice graphs!\n\nWe were coincidentally talking about showing stats from a node on a\nlocal web site on the #bitcoin-dev IRC a few days ago.\n\nAt some point, if we're going to offer Bitcoin Core node-only\ninstallers, it'd be nice to include something like this so the user\ncan keep an eye on their node(s).\n\nWladimir"
            },
            {
                "author": "Jameson Lopp",
                "date": "2014-05-07T19:57:32",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nThe next logical step may be for us to offer a public instance of these graphs; I'd be happy to work with you to set one up.\n\nI agree that it would be awesome to offer these types of stats with the installer; unfortunately the route I've taken has dependencies on several other other pieces of software to do all the heavy lifting of stats aggregation and chart rendering. I'm assuming that you would not want to build any of that processing into Bitcoin Core itself; would you be opposed to packaging other software along with the installer?\n\n- - Jameson\n\nOn 05/07/2014 03:46 PM, Wladimir wrote:\n> On Wed, May 7, 2014 at 9:12 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n>> -----BEGIN PGP SIGNED MESSAGE-----\n>> Hash: SHA1\n>>\n>> In order to gain more insight into what messages and requests a node is processing, I've created a Bitcoin Core fork that outputs statistics to StatsD. I hope that some of you will find this interesting and potentially useful.\n>>\n>> http://coinchomp.com/2014/05/07/announcing-statoshi-realtime-bitcoin-node-statistics/\n>>\n>> https://jlopp.github.io/statoshi/\n>>\n>> Feedback is appreciated!\n> \n> Ooh nice graphs!\n> \n> We were coincidentally talking about showing stats from a node on a\n> local web site on the #bitcoin-dev IRC a few days ago.\n> \n> At some point, if we're going to offer Bitcoin Core node-only\n> installers, it'd be nice to include something like this so the user\n> can keep an eye on their node(s).\n> \n> Wladimir\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.14 (GNU/Linux)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTapAsAAoJEIch3FSFNiDcyMEIAIds0yo9zeWcqNqGZ+UNltoH\nhNt8NhYOgL/6WNeLVYdRmCrrdNn/KMSLcAZmOQ0U+W/qL3xh1RB59o3BcBnW05Yr\nZxY5ajKKq+oz70ShMNUkVnzFSStMhH9fKnolrF0mgSx4CU9e0YTx/LBc/u9ulypO\nQNZydiiegwvTFjMxHItgU5xo/wzySazmyxN9x3Gls98vDfSjE3Rt/DTqAwHleD3t\nSlIu4RU2iPpAW/6MgfWqAw+CrbZ2NNKp7a7+0gsUlbdDP1h6WEvoae5sUzRmvLB3\nrHMmRoRvTl4Hl1bG7CKyM4D3piBkpDf/nMqnAAFNYkocS5xVpHM1WrTMDAmkSLk=\n=/TPp\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-07T20:18:50",
                "message_text_only": "On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> I agree that it would be awesome to offer these types of stats with the installer; unfortunately the route I've taken has dependencies on several other other pieces of software to do all the heavy lifting of stats aggregation and chart rendering. I'm assuming that you would not want to build any of that processing into Bitcoin Core itself; would you be opposed to packaging other software along with the installer?\n\nDepends on just how much stuff it is. The idea is primarily to have an\ninstaller for running a (wallet-less) node as an OS background\nservice.\n\nHaving some statistics available would be worth some extra download\nsize, otherwise it would be pretty much invisible.\n\nWe'd already decided that we would need something like Python for the\nstats service. Implementing things like web services in C++ is just\nnot realistic given the time constraints and the great already-written\ncode that is out there. As an optional tool it should be external, not\npart of bitcoind itself.\n\nI suppose the chart rendering happens client-side? In that case the\nweb service just has to collect and provide the data, and serve static\nhtml/js files.\n\nWladimir"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-07T20:25:31",
                "message_text_only": "I think there a few different possible ways to go here.\n\nOne is to try and simplify the setup of all the components so it all gets\ninstalled together. That might be feasible in some quite restricted setups\nbut the installation instructions for Graphite look kind of terrifying.\n\nAnother is to export stats over regular TCP and make them public so\nliterally anyone can listen to the stats feed for any node. Then people who\ndig stats and graphs could work on stats aggregators that give global\nnetwork visibility independently, effectively crawling the p2p network for\ndata. It'd have the advantage of having zero setup for the node operators\nand not require much in the way of resources.\n\nFor what it's worth, although the environment is a bit different inside\nGoogle the latter approach is used. Monitoring servers locate servers of\ninterest via a discovery service, connect to them and start streaming stats\ndata into a database service that can then be queried later to get graphs.\n\nThe stats are also run through various rules to obtain alerts about\nproblematic conditions. For example, if a subset of the network splits it\nmight be hard to notice that if the node operators aren't paying attention\nand Matt's fork alert/emailing code isn't set up. But if there was a site\ncrawling nodes and aggregating chain heights by version, that could trigger\nan alert to people who *are* paying attention.\n\nI know from practical experience that monitoring and analysis tends to\nappeal more to certain types of people than others. So I quite like the\n\"let anyone monitor\" approach. However, it may not be appropriate in a P2P\nnetwork, I did not think about it much.\n\nObviously I'm assuming none of the stats expose privacy sensitive data.\n\n\n\nOn Wed, May 7, 2014 at 10:18 PM, Wladimir <laanwj at gmail.com> wrote:\n\n> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>\n> wrote:\n> > -----BEGIN PGP SIGNED MESSAGE-----\n> > Hash: SHA1\n> >\n> > I agree that it would be awesome to offer these types of stats with the\n> installer; unfortunately the route I've taken has dependencies on several\n> other other pieces of software to do all the heavy lifting of stats\n> aggregation and chart rendering. I'm assuming that you would not want to\n> build any of that processing into Bitcoin Core itself; would you be opposed\n> to packaging other software along with the installer?\n>\n> Depends on just how much stuff it is. The idea is primarily to have an\n> installer for running a (wallet-less) node as an OS background\n> service.\n>\n> Having some statistics available would be worth some extra download\n> size, otherwise it would be pretty much invisible.\n>\n> We'd already decided that we would need something like Python for the\n> stats service. Implementing things like web services in C++ is just\n> not realistic given the time constraints and the great already-written\n> code that is out there. As an optional tool it should be external, not\n> part of bitcoind itself.\n>\n> I suppose the chart rendering happens client-side? In that case the\n> web service just has to collect and provide the data, and serve static\n> html/js files.\n>\n> Wladimir\n>\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/2826ee4a/attachment.html>"
            },
            {
                "author": "Charlie 'Charles' Shrem",
                "date": "2014-05-07T20:31:04",
                "message_text_only": "I'm going to install this now on my full node, looks really cool!\n\nThis is my node page: http://199.58.210.124/\n\n\n\nThanks,\n\nCharlie\n\nCharlieShrem.com | *Please **encrypt messages with my PGP key\n<http://charlieshrem.com/contact/>*\n\n\nOn Wed, May 7, 2014 at 4:25 PM, Mike Hearn <mike at plan99.net> wrote:\n\n> I think there a few different possible ways to go here.\n>\n> One is to try and simplify the setup of all the components so it all gets\n> installed together. That might be feasible in some quite restricted setups\n> but the installation instructions for Graphite look kind of terrifying.\n>\n> Another is to export stats over regular TCP and make them public so\n> literally anyone can listen to the stats feed for any node. Then people who\n> dig stats and graphs could work on stats aggregators that give global\n> network visibility independently, effectively crawling the p2p network for\n> data. It'd have the advantage of having zero setup for the node operators\n> and not require much in the way of resources.\n>\n> For what it's worth, although the environment is a bit different inside\n> Google the latter approach is used. Monitoring servers locate servers of\n> interest via a discovery service, connect to them and start streaming stats\n> data into a database service that can then be queried later to get graphs.\n>\n> The stats are also run through various rules to obtain alerts about\n> problematic conditions. For example, if a subset of the network splits it\n> might be hard to notice that if the node operators aren't paying attention\n> and Matt's fork alert/emailing code isn't set up. But if there was a site\n> crawling nodes and aggregating chain heights by version, that could trigger\n> an alert to people who *are* paying attention.\n>\n> I know from practical experience that monitoring and analysis tends to\n> appeal more to certain types of people than others. So I quite like the\n> \"let anyone monitor\" approach. However, it may not be appropriate in a P2P\n> network, I did not think about it much.\n>\n> Obviously I'm assuming none of the stats expose privacy sensitive data.\n>\n>\n>\n> On Wed, May 7, 2014 at 10:18 PM, Wladimir <laanwj at gmail.com> wrote:\n>\n>> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>\n>> wrote:\n>> > -----BEGIN PGP SIGNED MESSAGE-----\n>> > Hash: SHA1\n>> >\n>> > I agree that it would be awesome to offer these types of stats with the\n>> installer; unfortunately the route I've taken has dependencies on several\n>> other other pieces of software to do all the heavy lifting of stats\n>> aggregation and chart rendering. I'm assuming that you would not want to\n>> build any of that processing into Bitcoin Core itself; would you be opposed\n>> to packaging other software along with the installer?\n>>\n>> Depends on just how much stuff it is. The idea is primarily to have an\n>> installer for running a (wallet-less) node as an OS background\n>> service.\n>>\n>> Having some statistics available would be worth some extra download\n>> size, otherwise it would be pretty much invisible.\n>>\n>> We'd already decided that we would need something like Python for the\n>> stats service. Implementing things like web services in C++ is just\n>> not realistic given the time constraints and the great already-written\n>> code that is out there. As an optional tool it should be external, not\n>> part of bitcoind itself.\n>>\n>> I suppose the chart rendering happens client-side? In that case the\n>> web service just has to collect and provide the data, and serve static\n>> html/js files.\n>>\n>> Wladimir\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n>> out:\n>> &#149; 3 signs your SCM is hindering your productivity\n>> &#149; Requirements for releasing software faster\n>> &#149; Expert tips and advice for migrating your SCM now\n>> http://p.sf.net/sfu/perforce\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/8915977a/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-07T21:07:21",
                "message_text_only": "On Wed, May 7, 2014 at 10:25 PM, Mike Hearn <mike at plan99.net> wrote:\n> Another is to export stats over regular TCP and make them public so\n> literally anyone can listen to the stats feed for any node.\n\nTOR does this as well: http://torstatus.blutmagie.de/\n\nNo idea what they use to submit/gather the statistics.\n\nWladimir"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-08T00:47:17",
                "message_text_only": "On Wed, May 7, 2014 at 2:07 PM, Wladimir <laanwj at gmail.com> wrote:\n> On Wed, May 7, 2014 at 10:25 PM, Mike Hearn <mike at plan99.net> wrote:\n>> Another is to export stats over regular TCP and make them public so\n>> literally anyone can listen to the stats feed for any node.\n>\n> TOR does this as well: http://torstatus.blutmagie.de/\n>\n> No idea what they use to submit/gather the statistics.\n\nThe tor network works based on a centralized (well, in theory,\nfederated) trusted directory service. (More info in\nhttps://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=dir-spec.txt).\n\nMuch of data that is not related to relay related is just generated by\nprobes, e.g. semi-trusted bandwidth authorities that measure node\nperformance back to the directory authorities.\n\nMore info on their monitoring work is available here:\nhttps://metrics.torproject.org/tools.html"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-08T07:45:02",
                "message_text_only": "On Thu, May 8, 2014 at 2:47 AM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n>\n> The tor network works based on a centralized (well, in theory,\n> federated) trusted directory service. (More info in\n> https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=dir-spec.txt).\n\nThanks!\n\n> Much of data that is not related to relay related is just generated by\n> probes, e.g. semi-trusted bandwidth authorities that measure node\n> performance back to the directory authorities.\n\nRight, so there is more involved than just adding having nodes provide\nmeasuring points, a third-party is also performing tests on the nodes.\n\nIn a way it looks similar to how the Bitcoin DNS seeds work, trying to\nfind good and stable nodes, although more extensive.\n\nWladimir"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-08T10:08:19",
                "message_text_only": ">\n> In a way it looks similar to how the Bitcoin DNS seeds work, trying to\n> find good and stable nodes, although more extensive.\n\n\nYeah, it's somewhat similar, except that Tor directory authorities are\nauthenticated (the public keys are in the source code), whereas DNS seeds\naren't. Also Bitcoin puts way more emphasis on decentralisation than Tor\ndoes. For Tor having a P2P network is just something that's needed in order\nto build an anonymity network, but it's not actually the goal. For us,\ndecentralisation is pretty much the end goal.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140508/d5ea5b94/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-08T10:32:59",
                "message_text_only": "On Thu, May 8, 2014 at 12:08 PM, Mike Hearn <mike at plan99.net> wrote:\n>> In a way it looks similar to how the Bitcoin DNS seeds work, trying to\n>> find good and stable nodes, although more extensive.\n>\n>\n> Yeah, it's somewhat similar, except that Tor directory authorities are\n> authenticated (the public keys are in the source code), whereas DNS seeds\n> aren't. Also Bitcoin puts way more emphasis on decentralisation than Tor\n> does.\n\nRight, having authenticated 'directory authorities' hardcoded in the\nsource code would be out of the question for bitcoin.\n\nEither the stats would have to be public, or private/authenticated to\nparties the owner of the node configures themselves.\n\nWladimir"
            },
            {
                "author": "Nelson Castillo",
                "date": "2014-05-07T20:28:28",
                "message_text_only": "On Wed, May 7, 2014 at 3:18 PM, Wladimir <laanwj at gmail.com> wrote:\n\n> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>\n> wrote:\n> > -----BEGIN PGP SIGNED MESSAGE-----\n> > Hash: SHA1\n> >\n> > I agree that it would be awesome to offer these types of stats with the\n> installer; unfortunately the route I've taken has dependencies on several\n> other other pieces of software to do all the heavy lifting of stats\n> aggregation and chart rendering. I'm assuming that you would not want to\n> build any of that processing into Bitcoin Core itself; would you be opposed\n> to packaging other software along with the installer?\n>\n> Depends on just how much stuff it is. The idea is primarily to have an\n> installer for running a (wallet-less) node as an OS background\n> service.\n>\n> Having some statistics available would be worth some extra download\n> size, otherwise it would be pretty much invisible.\n>\n> We'd already decided that we would need something like Python for the\n> stats service. Implementing things like web services in C++ is just\n> not realistic given the time constraints and the great already-written\n> code that is out there. As an optional tool it should be external, not\n> part of bitcoind itself.\n>\n> I suppose the chart rendering happens client-side? In that case the\n> web service just has to collect and provide the data, and serve static\n> html/js files.\n>\n\nIs SNMP an option? That way you do not need to implement clients and there\nare many tools written.\n\n\n> Wladimir\n>\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/9c16d25c/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-08T11:22:46",
                "message_text_only": "On Wed, May 7, 2014 at 10:28 PM, Nelson Castillo\n> Is SNMP an option? That way you do not need to implement clients and there\n> are many tools written.\n\nIt's always good to use an existing standard, but I remember SNMP,\neven on a client device/application is pretty complex in itself.\n\nAnd I suppose the registration for custom OIDs and such is kind of baroque.\n\nI'm not entirely convinced of what the added value in this case would\nbe. Yes, there are tools for monitoring SNMP, but in my experience\nthose tools usually support other ways of collecting statistics as\nwell.\n\nWladimir"
            },
            {
                "author": "Jameson Lopp",
                "date": "2014-05-07T20:35:06",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nThe charts are generated on-demand by Graphite, which is a Django app.\n\nI will note that one reason I chose StatsD is because it sends the stats via UDP rather than TCP, which is a non-blocking operation. I didn't want the sending of stats to affect the node's performance.\n\n- - Jameson\n\nOn 05/07/2014 04:18 PM, Wladimir wrote:\n> On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n>> -----BEGIN PGP SIGNED MESSAGE-----\n>> Hash: SHA1\n>>\n>> I agree that it would be awesome to offer these types of stats with the installer; unfortunately the route I've taken has dependencies on several other other pieces of software to do all the heavy lifting of stats aggregation and chart rendering. I'm assuming that you would not want to build any of that processing into Bitcoin Core itself; would you be opposed to packaging other software along with the installer?\n> \n> Depends on just how much stuff it is. The idea is primarily to have an\n> installer for running a (wallet-less) node as an OS background\n> service.\n> \n> Having some statistics available would be worth some extra download\n> size, otherwise it would be pretty much invisible.\n> \n> We'd already decided that we would need something like Python for the\n> stats service. Implementing things like web services in C++ is just\n> not realistic given the time constraints and the great already-written\n> code that is out there. As an optional tool it should be external, not\n> part of bitcoind itself.\n> \n> I suppose the chart rendering happens client-side? In that case the\n> web service just has to collect and provide the data, and serve static\n> html/js files.\n> \n> Wladimir\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.14 (GNU/Linux)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTapj5AAoJEIch3FSFNiDcofAIALHi7XgQi8pf75btujaeBsX3\nnniRD0yZIkoAvPlvFLiKQGE8TH+VR8Sb9fQACzmajYx1yjD0gN4xvkJXbI+pkeP5\nL8ZryhqxL5qCh/OI4+fkWlsp5Nwx89QvUepdXXdc/AQGQJIEMceiZOLDcjbk29Yb\nvCsyJL5yhzM9BM0cImuvrOBPtF3/L6DbgHP8OLD2LHRl4paJ1UDtfYCx3HVO9wp8\nZWq1oCaFyoYmUyx8GTUzbLjh9sOgaq43GKYec/kQSLmFxhhMF0dGNDMiwD/xz1i7\nLIswjlEKHZYOWWL3SMQg3pLlOTzGH4mHg++BAyrtzZ5CHlc1rjsPSk2d2Df/8Zc=\n=GFu9\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Charlie 'Charles' Shrem",
                "date": "2014-05-07T21:04:14",
                "message_text_only": "For those who are interested, here is my 9 step way to install a full node.\nI tried to make it as universal as possible.\n\nhttp://charlieshrem.com/node/\n\nThanks,\n\nCharlie\n\nCharlieShrem.com | *Please **encrypt messages with my PGP key\n<http://charlieshrem.com/contact/>*\n\n\nOn Wed, May 7, 2014 at 4:35 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> The charts are generated on-demand by Graphite, which is a Django app.\n>\n> I will note that one reason I chose StatsD is because it sends the stats\n> via UDP rather than TCP, which is a non-blocking operation. I didn't want\n> the sending of stats to affect the node's performance.\n>\n> - - Jameson\n>\n> On 05/07/2014 04:18 PM, Wladimir wrote:\n> > On Wed, May 7, 2014 at 9:57 PM, Jameson Lopp <jameson.lopp at gmail.com>\n> wrote:\n> >> -----BEGIN PGP SIGNED MESSAGE-----\n> >> Hash: SHA1\n> >>\n> >> I agree that it would be awesome to offer these types of stats with the\n> installer; unfortunately the route I've taken has dependencies on several\n> other other pieces of software to do all the heavy lifting of stats\n> aggregation and chart rendering. I'm assuming that you would not want to\n> build any of that processing into Bitcoin Core itself; would you be opposed\n> to packaging other software along with the installer?\n> >\n> > Depends on just how much stuff it is. The idea is primarily to have an\n> > installer for running a (wallet-less) node as an OS background\n> > service.\n> >\n> > Having some statistics available would be worth some extra download\n> > size, otherwise it would be pretty much invisible.\n> >\n> > We'd already decided that we would need something like Python for the\n> > stats service. Implementing things like web services in C++ is just\n> > not realistic given the time constraints and the great already-written\n> > code that is out there. As an optional tool it should be external, not\n> > part of bitcoind itself.\n> >\n> > I suppose the chart rendering happens client-side? In that case the\n> > web service just has to collect and provide the data, and serve static\n> > html/js files.\n> >\n> > Wladimir\n> >\n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1.4.14 (GNU/Linux)\n> Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n>\n> iQEcBAEBAgAGBQJTapj5AAoJEIch3FSFNiDcofAIALHi7XgQi8pf75btujaeBsX3\n> nniRD0yZIkoAvPlvFLiKQGE8TH+VR8Sb9fQACzmajYx1yjD0gN4xvkJXbI+pkeP5\n> L8ZryhqxL5qCh/OI4+fkWlsp5Nwx89QvUepdXXdc/AQGQJIEMceiZOLDcjbk29Yb\n> vCsyJL5yhzM9BM0cImuvrOBPtF3/L6DbgHP8OLD2LHRl4paJ1UDtfYCx3HVO9wp8\n> ZWq1oCaFyoYmUyx8GTUzbLjh9sOgaq43GKYec/kQSLmFxhhMF0dGNDMiwD/xz1i7\n> LIswjlEKHZYOWWL3SMQg3pLlOTzGH4mHg++BAyrtzZ5CHlc1rjsPSk2d2Df/8Zc=\n> =GFu9\n> -----END PGP SIGNATURE-----\n>\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find\n> out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/a3cd38d2/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-07T19:50:53",
                "message_text_only": "Really nice! We definitely need to put together a team who really cares\nabout the operations side of the network and this is a fantastic start.\n\nIt'd be nice if you didn't assume knowledge of what statsd is out of the\nbox. Given the name I'd assumed it was a small UNIX daemon but it seems\nit's actually a Javascript thingy?\n\nIt looks like putting together a monitored bitcoind setup can be quite a\nlot of work. I wonder if there are ways to simplify it. For example, would\nit make sense for someone to run a community statsd and graphite instance,\nso we can get aggregate statistics across many nodes and the node operators\ndon't have to set everything up themselves? Does that make any sense?\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/b28c294a/attachment.html>"
            },
            {
                "author": "Jameson Lopp",
                "date": "2014-05-07T20:00:44",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nI completely agree that this setup is far too difficult to reasonably expect anyone to implement it. You're correct that we could run a single StatsD daemon and have quite a few nodes sending statistics to it - this is really what StatsD was designed for - sampling small amounts of stats from high volume systems. There would be an issue of trust, however - StatsD was also only really designed to be run inside of highly secure infrastructure where you trust all of the machines that are talking to it.\n\n- - Jameson\n\nOn 05/07/2014 03:50 PM, Mike Hearn wrote:\n> Really nice! We definitely need to put together a team who really cares\n> about the operations side of the network and this is a fantastic start.\n> \n> It'd be nice if you didn't assume knowledge of what statsd is out of the\n> box. Given the name I'd assumed it was a small UNIX daemon but it seems\n> it's actually a Javascript thingy?\n> \n> It looks like putting together a monitored bitcoind setup can be quite a\n> lot of work. I wonder if there are ways to simplify it. For example, would\n> it make sense for someone to run a community statsd and graphite instance,\n> so we can get aggregate statistics across many nodes and the node operators\n> don't have to set everything up themselves? Does that make any sense?\n> \n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.14 (GNU/Linux)\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTapDsAAoJEIch3FSFNiDcqNMIAKbliLXVJ+CovCB+etqwCYfD\noTs0uxEIZvnGSzqn6i3z4tgzF7kbnpVThiHpG2MO2BytasGzfr+FsDLFpvkkvx0Q\nyffa1J5uB5QhY/POwg6GCN4DEmy8tbd+I5rSTKg1m/JuXZV2B4TFgr6GF+t+gBNT\nO2TTIngcl77XbGDF2XKOZSAHaIFx2KjdZNg5lfInVxDeA1dDzlU/vmEB37fx80EH\nIzD7FTllLp5qhlwYxaQTVxXmbjy+pXbtArYsVSRgoscgJI3DDKpxQj3uzjxouEHv\n27QkhuS2dzFioQhLPcnz/PtcCkE1l0aDNf6n7OiJ3lGygQ0+AKZHpyuvFujpSY8=\n=QCYI\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-07T20:12:13",
                "message_text_only": "It looks like the packet format statsd expects is rather simple - it should\nbe easy to experiment with.\n\nPerhaps a good next step would be to improve your patch so that someone can\nget a feed of the stats packets via TCP by e.g. ssh tunnelling to their\nhost. Once it's easy to get a feed of simple stats packets, people can\neasily experiment with different kinds of aggregation and monitoring\nsoftware from their desktop.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/6641da6e/attachment.html>"
            },
            {
                "author": "Pavol Rusnak",
                "date": "2014-05-07T19:55:21",
                "message_text_only": "On 05/07/2014 09:12 PM, Jameson Lopp wrote:\n> I've created a Bitcoin Core fork that outputs statistics to StatsD.\n\nHow complex is the patchset? Would it be possible to merge it into the\nmainline and enable compilation of this feature conditionally by some\nbuild-time option?\n\n-- \nBest Regards / S pozdravom,\n\nPavol Rusnak <stick at gk2.sk>\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 836 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140507/3e0fab77/attachment.sig>"
            }
        ],
        "thread_summary": {
            "title": "Announcing the Statoshi fork",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Charlie 'Charles' Shrem",
                "Wladimir",
                "Mike Hearn",
                "Pavol Rusnak",
                "Nelson Castillo",
                "Gregory Maxwell",
                "Jameson Lopp"
            ],
            "messages_count": 19,
            "total_messages_chars_count": 29884
        }
    },
    {
        "title": "[Bitcoin-development] ECDH in the payment protocol",
        "thread_messages": [
            {
                "author": "Mike Hearn",
                "date": "2014-05-09T12:05:24",
                "message_text_only": "I wrote an article about an ECDH extension for BIP 70:\n\n   https://medium.com/p/cb2f81962c1b\n\nThe article is meant for people who don't follow bitcoin-development so\nI'll summarise it here:\n\n   - The notion of being able to publish a piece of data once and use it to\n   receive lots of payments without any coordination is really useful. This is\n   the idea behind the stealth address proposal.\n\n   - Stealth addresses don't fit with the payment protocol, because they're\n   a new kind of address (obviously).\n\n   - Stealth addresses are not backwards compatible. If you give someone a\n   stealth address and their wallet doesn't support it, they can't pay you,\n   not even with worse privacy. Sometimes people may optionally want that\n   behaviour but stealth addresses have it all the time.\n\n   - The proposed stealth address design makes huge sacrifices to try and\n   keep everything within the block chain. It bloats the chain with OP_RETURN\n   stuff that isn't a part of the validation. But more seriously, the only way\n   to make it efficient enough for lightweight clients is to reduce the\n   \"stealthyness\". The more efficient you make your address the less private\n   it becomes. This is somewhat similar to the dilemma we have with Bloom\n   filtering, except Bloom filters are transient and can only be used to link\n   addresses by someone who observes them on the wire. Stealth addresses\n   record the relationship in the block chain forever.\n\n   - The design makes these sacrifices to avoid moving data around outside\n   the block chain. But with BIP 70 that's the direction we're heading in\n   anyway. So by adding ECDH to the payment protocol and putting our effort\n   into making BIP 70 work really well for everyone, we end up killing\n   multiple birds with one stone. The same work that resolves the privacy\n   problems inherent in the stealth address design also allows us to attach\n   messages to payments and other commonly requested features.\n\nThere's a straw man in the article that I recreate here:\n\nmessage Output {\n   optional uint64 amount = 1 [default = 0];\n   optional bytes script = 2;\n   *optional boolean accept_ecdh = 3;  // Requires script to be a\npay-to-pubkey output.*\n}\n\nmessage Payment {\n   optional bytes merchant_data = 1;\n   repeated bytes transactions = 2;\n   repeated Output refund_to = 3;\n   optional string memo = 4;\n   *repeated bytes ecdh_nonces = 5;*\n}\n\nThe way the nonces are combined to arrive at the address could be the same\nas in the current stealth address spec. A wallet that doesn't understand\nECDH but does understand raw BIP 70 would deliver the money to the base\naddress, which receiving wallets would look for too - so it's backwards\ncompatible. The nonces stay out of the block chain. The transactions are\ndelivered directly to the recipient so there's no problems with trying to\nmake it fit with Bloom/prefix filtering.\n\nTo make this work there obviously has to be a backchannel from payer to\npayee. BIP 70 is mostly used by web shops today so that back channel is\njust HTTPS to the website itself, but shops benefit less from ECDH than\nothers do. So we need a simple email-like store and forward network where\nHTTP POSTs to a server get queued up and delivered later (or possibly\nforwarded to another store-and-forward network like the Android push\nnetwork). Most of the article discusses how best to build such a thing.\n\nThe justification for the original stealth address design can be summed up\nas \"it's easier to [ab]use the Bitcoin network for delivery of short\nmessages than use a different system\". But there are just so many features\nwe may want to add into the Payment message in future it seems better to\ncrack the SaF problem earlier rather than continue trying to jam a square\npeg into a round hole. There are lots of very reliable SAF networks around\n(email, instant messaging, etc) so it doesn't seem infeasible.\n\nThoughts welcome!\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/05d1c2d1/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-09T15:03:25",
                "message_text_only": "On Fri, May 09, 2014 at 02:05:24PM +0200, Mike Hearn wrote:\n\nIt's always interesting to see the reinvention cycle happen in the\nBitcoin space as ideas get proposed over and over again; I'm sure Amir\nTaaki will be pleased to read this as it is a slightly less\nsophisticated version of what he originally proposed to me for the\ndesign of what became stealth addresses.\n\nOf course we quickly rejected the idea of depending solely on a\ncommunications backchannel to retrieve funds. Any communications medium\nthat isn't the blockchain makes the payment non-atomic, and thus creates\nopportunities for it to fail. Fortunately we already have the necessary\nephemeral keys in standard Bitcoin transactions in pay-to-pubkey-hash\nand pay-to-script-hash spending scriptSigs so you don't need to\ncompromise on reliability in exchange for transaction size as you're\nmistakingly assuming. You should re-read my original stealth address\ndiscussion with Gregory Maxwell on IRC if this is unclear.\n\nIn any case it's a mistake to argue that some times of data in the\nblockchain are \"bloat\" by virtue of whether or not they happen to be\nexecuted in a script. Multisig addresses use an extra ~107 bytes of data\nper signature per txout spend to make it less likely for the user to\nlose their funds under certain conditions; op-return-using stealth\naddresses use an extra ~50 bytes of data per txout spend to make the\nuser less likely to lose their funds and make their transactions more\nprivate under certain conditions.(1) Ultimately the resource being used\nis the same, making it silly to try to dictate the right trade-offs by\nbrushing certain solutions as anti-social \"bloat\" and others not based\non top-down edict; let the free market for fees do its job.\n\n\n1) Note that the recent advancements in ECDH multi-party signing are\n   limited in the cases they can cover; there still is a strong need for\n   discrete key multisig, e.g. for Greenaddress.it\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000003581a7e5d0e10205803803466240668215d178b216837386\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 685 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/ecab7668/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-09T15:15:52",
                "message_text_only": ">\n> Of course we quickly rejected the idea of depending solely on a\n> communications backchannel to retrieve funds. Any communications medium\n> that isn't the blockchain makes the payment non-atomic\n\n\nYes, I know you rejected this design, which is why I'm now proposing it\ninstead. I think you made the wrong design call, but at any rate, it's\nsomething reasonable people can disagree on.\n\nPayment messages are sent directly to the merchant, who takes\nresponsibility for broadcast. Once you delivered transactions to the\nmerchant successfully, from your perspective the payment is made. A good\nstore and forward network doesn't allow messages to go missing - email is\nan example of that (ignoring spam filters that explicitly want messages to\ngo missing). It either gets delivered or it doesn't. So I'm not worried\nabout atomicity.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/208f75e0/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-09T15:27:15",
                "message_text_only": "On Fri, May 09, 2014 at 05:15:52PM +0200, Mike Hearn wrote:\n> >\n> > Of course we quickly rejected the idea of depending solely on a\n> > communications backchannel to retrieve funds. Any communications medium\n> > that isn't the blockchain makes the payment non-atomic\n> \n> \n> Yes, I know you rejected this design, which is why I'm now proposing it\n> instead. I think you made the wrong design call, but at any rate, it's\n> something reasonable people can disagree on.\n> \n> Payment messages are sent directly to the merchant, who takes\n> responsibility for broadcast. Once you delivered transactions to the\n> merchant successfully, from your perspective the payment is made. A good\n> store and forward network doesn't allow messages to go missing - email is\n> an example of that (ignoring spam filters that explicitly want messages to\n> go missing). It either gets delivered or it doesn't. So I'm not worried\n> about atomicity.\n\nAh, you're still misunderstanding my point: You can get atomicity in the\nworst-case where the communications medium fails *and* stealth payments\nthat use up no extra space in the blockchain. This gives you the best of\nboth worlds.\n\nI haven't yet specified that mode of operation in the current draft\nstealth address standard, however I do plan on adding it. Notably the\nstandard is designed to allow exactly that feature to be added in a\nbackwards compatible way - senders who don't implement that feature, or\nchoose not to use it, simply fall back to op-return.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000004d25218420094fda0891fe1d734e1a8df581bd6de7f2d0cd\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 685 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/bdbc414c/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-09T15:34:07",
                "message_text_only": ">\n> Ah, you're still misunderstanding my point: You can get atomicity in the\n> worst-case where the communications medium fails *and* stealth payments\n> that use up no extra space in the blockchain. This gives you the best of\n> both worlds.\n\n\nSounds great! How does a lightweight client identify such transactions\nwithout any markers?\n\nRegardless, there are lots of other useful features that require BIP70 to\nwork well person to person, like messages, refund addresses, etc. So\nextending it with ECDH makes sense in the end anyway no matter what.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/3dbc2a30/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-09T15:43:13",
                "message_text_only": "On Fri, May 09, 2014 at 05:34:07PM +0200, Mike Hearn wrote:\n> >\n> > Ah, you're still misunderstanding my point: You can get atomicity in the\n> > worst-case where the communications medium fails *and* stealth payments\n> > that use up no extra space in the blockchain. This gives you the best of\n> > both worlds.\n> \n> \n> Sounds great! How does a lightweight client identify such transactions\n> without any markers?\n\nThe exact same way you're proposing: via the payment protocol.\n\nIf something goes wrong and a payment gets lost, that's where you\nimplement a last-ditch \"scan for stealth payments\" button or similar\nthat either just asks a semi-trusted server to scan the blockchain for\nyou, or accepts the bandwidth hit and does so itself. (note that the\nscan pubkey used to find payments is unable to spend those payments)\n\n-- \n'peter'[:-1]@petertodd.org\n000000000000000074d6fdc4442dae1b7273f77f2deec988daf63d3e1ec6eeea\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 685 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/d6f88ca3/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-09T16:12:46",
                "message_text_only": ">\n> The exact same way you're proposing: via the payment protocol.\n>\n\nAh, I see, that's what I was missing. So rather than have an explicit\nrepeated field for nonces, have an algorithm for extracting randomness from\none of the scriptSigs. I guess that makes sense.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/17707b03/attachment.html>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2014-05-09T15:50:33",
                "message_text_only": "I believe stealth addresses and the payment protocol both have their\nuse cases, and that they don't overlap.\n\nIf you do not want to communicate with the receiver, you typically do\nnot want them to know who is paying or for what (otherwise you're\nalready talking to them in some way, right?). That's perfect for\nthings like anonymous donations.\n\nIn pretty much every other case, communicating directly with the\nreceiver has benefits. Negotiation of the transaction details,\nmessages associated with the transaction, refund information, no need\nto scan the blockchain for incoming transaction... and the ability to\ncancel if either party doesn't agree.\n\nInstead of adding stealth functionality to the payment protocol as a\nlast resort, I'd rather see the payment protocol improve its\natomicity. Either you want the data channel sender->receiver, or you\ndon't. If it isn't available and you want it, things should fail. If\nyou don't want it, you shouldn't try to use it in the first place.\n\nOn Fri, May 9, 2014 at 5:34 PM, Mike Hearn <mike at plan99.net> wrote:\n>> Ah, you're still misunderstanding my point: You can get atomicity in the\n>> worst-case where the communications medium fails *and* stealth payments\n>> that use up no extra space in the blockchain. This gives you the best of\n>> both worlds.\n>\n>\n> Sounds great! How does a lightweight client identify such transactions\n> without any markers?\n>\n> Regardless, there are lots of other useful features that require BIP70 to\n> work well person to person, like messages, refund addresses, etc. So\n> extending it with ECDH makes sense in the end anyway no matter what.\n>\n> ------------------------------------------------------------------------------\n> Is your legacy SCM system holding you back? Join Perforce May 7 to find out:\n> &#149; 3 signs your SCM is hindering your productivity\n> &#149; Requirements for releasing software faster\n> &#149; Expert tips and advice for migrating your SCM now\n> http://p.sf.net/sfu/perforce\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-09T18:13:53",
                "message_text_only": "On Fri, May 09, 2014 at 05:50:33PM +0200, Pieter Wuille wrote:\n> I believe stealth addresses and the payment protocol both have their\n> use cases, and that they don't overlap.\n> \n> If you do not want to communicate with the receiver, you typically do\n> not want them to know who is paying or for what (otherwise you're\n> already talking to them in some way, right?). That's perfect for\n> things like anonymous donations.\n> \n> In pretty much every other case, communicating directly with the\n> receiver has benefits. Negotiation of the transaction details,\n> messages associated with the transaction, refund information, no need\n> to scan the blockchain for incoming transaction... and the ability to\n> cancel if either party doesn't agree.\n> \n> Instead of adding stealth functionality to the payment protocol as a\n> last resort, I'd rather see the payment protocol improve its\n> atomicity. Either you want the data channel sender->receiver, or you\n> don't. If it isn't available and you want it, things should fail. If\n> you don't want it, you shouldn't try to use it in the first place.\n\nI don't think we're going to find that's practical unfortunately due to\nchange. Every payment I make ties up txouts, so if we try to base the\natomicity of payments on whether or not the payee decides to broadcast\nthe transaction the payor is stuck with txouts that they can't use until\nthe payee makes up their mind. That leads to lots and lots of nasty edge\ncases.\n\nOTOH if we base the atomicity of payment on whether or not a specific\ntxout exists everything those edge cases don't exist. Yes, that might\nforce us to expose transaction fees to the user, but after all it's the\nuser who has control over those fees.\n\nA separate issue is IsStandard() rules, and a near-term project for me\nis to write a much relaxed version of them based on soft-fork safe\nwhitelisting/blacklisting of opcodes, version numbers, mutability etc.\nWe can definitely get to the point where those rules will change very\nlittle.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000006d5945d2dddece39487c36673e56a292b619b1929ff3b40f\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 685 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140509/4b1b5c33/attachment.sig>"
            },
            {
                "author": "Pieter Wuille",
                "date": "2014-05-09T18:38:22",
                "message_text_only": "On Fri, May 9, 2014 at 8:13 PM, Peter Todd <pete at petertodd.org> wrote:\n> I don't think we're going to find that's practical unfortunately due to\n> change. Every payment I make ties up txouts, so if we try to base the\n> atomicity of payments on whether or not the payee decides to broadcast\n> the transaction the payor is stuck with txouts that they can't use until\n> the payee makes up their mind. That leads to lots and lots of nasty edge\n> cases.\n\nI haven't talked much about it except for on IRC, but my idea was this:\n* PaymentACK messages become signed (with the same key as the payment\nrequest, or using some delegation mechanism, so that the same key\ndoesn't need to remain online).\n* Instead of a full Bitcoin transaction, a Payment message contains a\nscriptSig-less Bitcoin transaction + a limit on its byte size (and\nperhaps a limit on its sigop count).\n* The sender sends such a Payment to the receiver before actually\nsigning the transaction (or at least, before revealing the signed\nform).\n* The receiver only ACKs if the transaction satisfies the request, is\nwithin time limits, isn't unlikely to confirm.\n* If the sender likes the ACK (the refund and memo fields are intact,\nthe transaction isn't changed, the signature key is valid, ...), he\neither sends the full transaction (with receiver taking responsibility\nfor broadcasting) or broadcasts it himself.\n\nTogether, this means that a paymentACK + a confirmed matching Bitcoin\ntransaction can count as proof of payment. Both parties have a chance\nto disagree with the transaction, and are certain all communicated\ndata (apart from transaction signatures) in both directions happened\ncorrectly before committing. It would completely remove the chance\nthat the Bitcoin transaction gets broadcast without the receiver\nliking it (for legitimate or illegitimate reasons), or without the\nbackchannel functioning correctly.\n\nIt's also compatible with doing multiple payments in one Bitcoin\ntransaction - you can ask for ACKs from multiple parties before\nsigning the transaction.\n\nOf course, the sender can still withhold the signed transaction (in\nwhich case nothing happened, but we probably need a second timeout),\nor the receiver can always claim to have never received the\ntransaction. The sender can broadcast the transaction himself in order\nto prevent that, after obtaining an ACK.\n\n-- \nPieter"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-12T13:07:44",
                "message_text_only": "On Fri, May 09, 2014 at 08:38:22PM +0200, Pieter Wuille wrote:\n> On Fri, May 9, 2014 at 8:13 PM, Peter Todd <pete at petertodd.org> wrote:\n> > I don't think we're going to find that's practical unfortunately due to\n> > change. Every payment I make ties up txouts, so if we try to base the\n> > atomicity of payments on whether or not the payee decides to broadcast\n> > the transaction the payor is stuck with txouts that they can't use until\n> > the payee makes up their mind. That leads to lots and lots of nasty edge\n> > cases.\n> \n> I haven't talked much about it except for on IRC, but my idea was this:\n> * PaymentACK messages become signed (with the same key as the payment\n> request, or using some delegation mechanism, so that the same key\n> doesn't need to remain online).\n> * Instead of a full Bitcoin transaction, a Payment message contains a\n> scriptSig-less Bitcoin transaction + a limit on its byte size (and\n> perhaps a limit on its sigop count).\n> * The sender sends such a Payment to the receiver before actually\n> signing the transaction (or at least, before revealing the signed\n> form).\n> * The receiver only ACKs if the transaction satisfies the request, is\n> within time limits, isn't unlikely to confirm.\n> * If the sender likes the ACK (the refund and memo fields are intact,\n> the transaction isn't changed, the signature key is valid, ...), he\n> either sends the full transaction (with receiver taking responsibility\n> for broadcasting) or broadcasts it himself.\n> \n> Together, this means that a paymentACK + a confirmed matching Bitcoin\n> transaction can count as proof of payment. Both parties have a chance\n> to disagree with the transaction, and are certain all communicated\n> data (apart from transaction signatures) in both directions happened\n> correctly before committing. It would completely remove the chance\n> that the Bitcoin transaction gets broadcast without the receiver\n> liking it (for legitimate or illegitimate reasons), or without the\n> backchannel functioning correctly.\n> \n> It's also compatible with doing multiple payments in one Bitcoin\n> transaction - you can ask for ACKs from multiple parties before\n> signing the transaction.\n> \n> Of course, the sender can still withhold the signed transaction (in\n> which case nothing happened, but we probably need a second timeout),\n> or the receiver can always claim to have never received the\n> transaction. The sender can broadcast the transaction himself in order\n> to prevent that, after obtaining an ACK.\n\nYeah, with the receiver specifically signing off on the tx I think\nthat's fine. OTOH you still gotta ask if this process is really worth\nit; do you really need this level of signing off for payments that are\nonly going to be considered fully valid after a confirmation? That's\nalways going to be the case for a large proportion of Bitcoin\ntransactions, and sticking to that model makes upgrades easier and\nreduces the reasons why receivers would want to reimplement a bunch of\nBitcoin-related logic.\n\n-- \n'peter'[:-1]@petertodd.org\n00000000000000007cf5744be694eea2f20501e6db9d3362428aabd63dda4151\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 685 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/3d11d018/attachment.sig>"
            },
            {
                "author": "Chris Pacia",
                "date": "2014-05-12T22:40:14",
                "message_text_only": "Just a thought. Using the payment protocol for stealth would mean we\nwould likely have to return to backing up wallets all the time would it not?\n\nThe nonces cannot be derived from your wallet seed and, since they\naren't in the blockchain, would have to be stored in your wallet. I\nsuppose they could be stored on the server, but you would probably want\na backup for that anyway. So we would end up having to back up all the\ntime, something we're trying to get away from. Am I correct about this?\n\nOn 05/09/2014 02:38 PM, Pieter Wuille wrote:\n> On Fri, May 9, 2014 at 8:13 PM, Peter Todd <pete at petertodd.org> wrote:\n>> I don't think we're going to find that's practical unfortunately due to\n>> change. Every payment I make ties up txouts, so if we try to base the\n>> atomicity of payments on whether or not the payee decides to broadcast\n>> the transaction the payor is stuck with txouts that they can't use until\n>> the payee makes up their mind. That leads to lots and lots of nasty edge\n>> cases.\n> I haven't talked much about it except for on IRC, but my idea was this:\n> * PaymentACK messages become signed (with the same key as the payment\n> request, or using some delegation mechanism, so that the same key\n> doesn't need to remain online).\n> * Instead of a full Bitcoin transaction, a Payment message contains a\n> scriptSig-less Bitcoin transaction + a limit on its byte size (and\n> perhaps a limit on its sigop count).\n> * The sender sends such a Payment to the receiver before actually\n> signing the transaction (or at least, before revealing the signed\n> form).\n> * The receiver only ACKs if the transaction satisfies the request, is\n> within time limits, isn't unlikely to confirm.\n> * If the sender likes the ACK (the refund and memo fields are intact,\n> the transaction isn't changed, the signature key is valid, ...), he\n> either sends the full transaction (with receiver taking responsibility\n> for broadcasting) or broadcasts it himself.\n>\n> Together, this means that a paymentACK + a confirmed matching Bitcoin\n> transaction can count as proof of payment. Both parties have a chance\n> to disagree with the transaction, and are certain all communicated\n> data (apart from transaction signatures) in both directions happened\n> correctly before committing. It would completely remove the chance\n> that the Bitcoin transaction gets broadcast without the receiver\n> liking it (for legitimate or illegitimate reasons), or without the\n> backchannel functioning correctly.\n>\n> It's also compatible with doing multiple payments in one Bitcoin\n> transaction - you can ask for ACKs from multiple parties before\n> signing the transaction.\n>\n> Of course, the sender can still withhold the signed transaction (in\n> which case nothing happened, but we probably need a second timeout),\n> or the receiver can always claim to have never received the\n> transaction. The sender can broadcast the transaction himself in order\n> to prevent that, after obtaining an ACK.\n>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-13T10:29:43",
                "message_text_only": "On Tue, May 13, 2014 at 12:40 AM, Chris Pacia <ctpacia at gmail.com> wrote:\n\n> Just a thought. Using the payment protocol for stealth would mean we\n> would likely have to return to backing up wallets all the time would it\n> not?\n>\n\nI think you are right. Awkward.\n\nWallets could auto-respend transactions to a plain (private) HD derived key\nto make them findable again. But that gets us back to using block space\ninefficiently.\n\nOver time I think wallet backups will get more valuable anyway, as they\nwill start containing more and more essential data that isn't in the block\nchain: receipts, messages, exchange rate records for tax purposes etc. But\nbeing able to get access to your money with just the 12 words (+a date for\nSPV wallets) is a pretty desirable safety feature.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/4e1f8a4c/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-13T09:19:07",
                "message_text_only": "On Fri, May 9, 2014 at 11:03 AM, Peter Todd <pete at petertodd.org> wrote:\n> Of course we quickly rejected the idea of depending solely on a\n> communications backchannel to retrieve funds. Any communications medium\n> that isn't the blockchain makes the payment non-atomic, and thus creates\n> opportunities for it to fail.\n\nThis is extremely simple-minded logic that encourages ephemeral, junk\ndata in the blockchain.  Not a scalable approach.\n\nThe implication is to put the communications medium in the blockchain\nitself, which is wrong.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            }
        ],
        "thread_summary": {
            "title": "ECDH in the payment protocol",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Mike Hearn",
                "Peter Todd",
                "Chris Pacia",
                "Pieter Wuille"
            ],
            "messages_count": 14,
            "total_messages_chars_count": 26504
        }
    },
    {
        "title": "[Bitcoin-development] we can all relax now",
        "thread_messages": [
            {
                "author": "E willbefull",
                "date": "2014-05-10T11:05:29",
                "message_text_only": "I've created a simulation framework called simbit to simulate the selfish\nmining attack, though it is general enough to simulate any p2p network. I\neven put together a rough simulation of MinCen. The goal is to be fun/easy\nto rapidly prototype protocols and strategies, and visualize them. It's\nwritten in javascript, so it can be demoed in the web browser or run on\nNode.\n\nIt's still in early alpha and a lot of things are missing.\n\nhttps://github.com/ebfull/simbit\n\nhttps://bitcointalk.org/index.php?topic=603171.0\n\nFeedback is appreciated!\n\n\nOn Tue, Nov 5, 2013 at 10:33 PM, kjj <bitcoin-devel at jerviss.org> wrote:\n\n> One of the things that really gets me going is when someone devises a\n> model, tests it against itself, and then pretends that they've learned\n> something about the real world.\n>\n> Naturally, the Selfish Mining paper is exactly this sort of nonsense.\n> Their model is one with no latency, and one where the attacker has total\n> visibility across the network.  An iterated FSM is not a suitable\n> simulation of the bitcoin system.  The bitcoin network does not have\n> states, and to the extent that you can pretend that we do, you can't\n> simulate transitions between them with static probabilities.\n>\n> The authors understand this deep down inside, even though they didn't\n> work out the implications.  They handwave the issue by assuming a total\n> sybil attack, and in true academic spirit, they don't realize that the\n> condition necessary for the attack is far, far worse than the attack\n> itself.\n>\n> Greg said he'd like to run some simulations, and I'm thinking about it\n> too.  Unfortunately, he is busy all week, and I'm lazy (and also busy\n> for most of tomorrow).\n>\n> If neither of us get to it first, I'm willing to pitch in 1 BTC as a\n> bounty for building a general bitcoin network simulator framework. The\n> simulator should be able to account for latency between nodes, and\n> ideally within a node.  It needs to be able to simulate an attacker that\n> owns varying fractions of the network, and make decisions based only on\n> what the attacker actually knows.  It needs to be able to simulate this\n> \"attack\" and should be generic enough to be easily modified for other\n> crazy schemes.\n>\n> (Bounty offer is serious, but expires in one year [based on the earliest\n> timestamp that my mail server puts on this email], and /may/ be subject\n> to change if the price on any reputable exchange breaks 1000 USD per BTC\n> in that period.)\n>\n> Basically, the lack of a decent network simulator is what allowed this\n> paper to get press.  If the author had been able to see the importance\n> of the stuff he was ignoring, we wouldn't be wasting so much time\n> correcting him (and sadly the reporters that have no way to check his\n> claims).\n>\n> https://bitcointalk.org/index.php?topic=324413.msg3495663#msg3495663\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> November Webinars for C, C++, Fortran Developers\n> Accelerate application performance with scalable programming models.\n> Explore\n> techniques for threading, error checking, porting, and tuning. Get the most\n> from the latest Intel processors and coprocessors. See abstracts and\n> register\n> http://pubads.g.doubleclick.net/gampad/clk?id=60136231&iu=/4140/ostg.clktrk\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140510/70b79ae9/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "we can all relax now",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "E willbefull"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 3682
        }
    },
    {
        "title": "[Bitcoin-development] Developer documentation on bitcoin.org",
        "thread_messages": [
            {
                "author": "Sa\u00efvann Carignan",
                "date": "2014-05-11T02:08:37",
                "message_text_only": "A new \"Developer Documentation\" section should be soon merged on\nbitcoin.org .\n\nLive Preview:\nhttp://bitcoindev.us.to/en/developer-documentation\n\nGitHub Pull Request:\nhttps://github.com/bitcoin/bitcoin.org/pull/393\n\nBitcointalk Thread:\nhttps://bitcointalk.org/index.php?topic=511876.0\n\nWe've worked hard to come up with good quality documentation and general\nfeedback has been positive. Reviews from experienced Bitcoin developers\nwould now be much appreciated. You are cordially invited to help\nproofread the documentation so it can be published soon!\n\n*Please avoid commenting on the mailing list* to not spam everyone. See\nthe pull request for instructions. Comments should go on the pull\nrequest or bitcoin-documentation mailing list\nhttps://groups.google.com/forum/#!forum/bitcoin-documentation ."
            },
            {
                "author": "Wladimir",
                "date": "2014-05-12T06:15:04",
                "message_text_only": "On Sun, May 11, 2014 at 4:08 AM, Sa\u00efvann Carignan <saivann at gmail.com> wrote:\n> A new \"Developer Documentation\" section should be soon merged on\n> bitcoin.org .\n>\n> Live Preview:\n> http://bitcoindev.us.to/en/developer-documentation\n>\n> GitHub Pull Request:\n> https://github.com/bitcoin/bitcoin.org/pull/393\n>\n> Bitcointalk Thread:\n> https://bitcointalk.org/index.php?topic=511876.0\n\nGreat work!\n\nVery nice to see thorough developer documentation on bitcoin.org.\n\nI've already been reading it now and then and haven't found any\ntechnical issues yet, if I do, I'll let you know.\n\nWladimir"
            },
            {
                "author": "Sa\u00efvann Carignan",
                "date": "2014-05-19T22:22:48",
                "message_text_only": "A quick update on the project:\n\nMore reviews and feedback on the pull request are very welcome:\nhttps://github.com/bitcoin/bitcoin.org/pull/393\n\nThis pull request will be merged on May 24th and hopefully will be\naccurate as much as possible. Reporting any inaccuracy / mistake on the\npull request is very appreciated.\n\nSa\u00efvann\n\n\nLe 2014-05-10 22:08, Sa\u00efvann Carignan a \u00e9crit :\n> A new \"Developer Documentation\" section should be soon merged on\n> bitcoin.org .\n> \n> Live Preview:\n> http://bitcoindev.us.to/en/developer-documentation\n> \n> GitHub Pull Request:\n> https://github.com/bitcoin/bitcoin.org/pull/393\n> \n> Bitcointalk Thread:\n> https://bitcointalk.org/index.php?topic=511876.0\n> \n> We've worked hard to come up with good quality documentation and general\n> feedback has been positive. Reviews from experienced Bitcoin developers\n> would now be much appreciated. You are cordially invited to help\n> proofread the documentation so it can be published soon!\n> \n> *Please avoid commenting on the mailing list* to not spam everyone. See\n> the pull request for instructions. Comments should go on the pull\n> request or bitcoin-documentation mailing list\n> https://groups.google.com/forum/#!forum/bitcoin-documentation .\n>"
            }
        ],
        "thread_summary": {
            "title": "Developer documentation on bitcoin.org",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Wladimir",
                "Sa\u00efvann Carignan"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 2611
        }
    },
    {
        "title": "[Bitcoin-development] Translators Needed for Bitcoin Core",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2014-05-11T06:32:18",
                "message_text_only": "https://www.transifex.com/projects/p/bitcoin/\nThis is a reminder that many languages still require translation coverage.\n See this page to see the percentage of strings translated into a given\nlanguage.  The 0.9.2 release candidate is currently scheduled for May 13th\nwith translations accepted for the release for at least a week after that.\n\nEven if you do not speak other languages, you can help by pointing other\npeople who do at this page.\n\nWarren\n\n\nOn Wed, Apr 23, 2014 at 7:47 PM, Warren Togami Jr. <wtogami at gmail.com>wrote:\n\n> You do not need to be a developer to help in the improvement of Bitcoin.\n>\n> http://sourceforge.net/p/bitcoin/mailman/message/32255092/\n> Bitcoin Core 0.9.2 feature freeze is May 13th, 2014.  Now is the time for\n> native non-English speakers to join Transifex to clean up the translations\n> in all languages.  This is important for more than just Bitcoin because\n> Litecoin will use these same translations.\n>\n> *What should volunteer translators do?*\n> https://bitcointalk.org/index.php?topic=571414\n> Try the nightly builds of Bitcoin Core as it heads toward 0.9.2.  Not\n> recommended for your production wallet.\n>\n> https://www.transifex.com/projects/p/bitcoin/\n> Join Transifex as a translator and add your account to your language.\n>\n> https://groups.google.com/forum/#!forum/bitcoin-translators\n> Join the Translator mailing list to receive announcements when\n> translations are needed for Bitcoin.  You will also receive notifications\n> if other Bitcoin Project things in Transifex need translations (likely\n> bitcoin.org).\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140510/a59a192e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Translators Needed for Bitcoin Core",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1753
        }
    },
    {
        "title": "[Bitcoin-development] statoshi.info is now live",
        "thread_messages": [
            {
                "author": "Jameson Lopp",
                "date": "2014-05-11T17:14:18",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nSince it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.\n\nhttp://statoshi.info\n\nYou can also view the raw Graphite stats at http://statoshi.info:8080/\n\nIf there are any metrics that you think would be helpful for development or monitoring purposes, just let me know and I'll take a shot at adding them.\n\nJameson\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAEBAgAGBQJTb6/qAAoJEIch3FSFNiDceR4H/jHchii5offrnQRsRcA7o4bh\nEEeL7ln9ID2FtqpL5wEjFtYq7nXL/8+o1BY7MOULo4SMpQIi0aY3ehNkPUCX3XKh\nU0F1ZZpkjMpI8BbIqBFwspNAE7bFh8vmRW9/IhWXf3VY8TmgVhZnbMmzxvcw7DwI\nkb1pgXZOEKCwmMvxBoWdmwDogvZvNPIThoQ9InY+qaGQut3lvrrSQMR7jYXxTY/9\nRebnny5c15KUrM3xwRPJvFHlbFE8F5a6ue9uwGq/STK73/iDqXksJNFnpzk3fnGc\nAryWmleHFfttfsb1kb991BFn2RCaKWvGBNUnq5dD/cCZIBwu3F16j65JAxboF94=\n=Xe+e\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-13T11:43:14",
                "message_text_only": "Hello Jameson,\n\nOn Sun, May 11, 2014 at 7:14 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.\n>\n> http://statoshi.info\n\nMust say it looks very nice.\n\nOne comment about the graphs: in the 'connected peers' chart you\nvisualize some larger quantities (especially knownAddresses) and some\nvery small ones (peer.(dis)connect). This makes the latter invisible\ndue to scale.\n\nSome random stats may be useful as well:\n\n- Number of connected peers that are SPV clients or full nodes (NODE_NETWORK)\n- Current block height (so that it's possible to detect stuck nodes)\n- Number of transactions in mempool\n- Number of transactions in UTXO set\n- Maybe some fee statistics,\nhttps://github.com/bitcoin/bitcoin/pull/3959 would be useful here\n- Number of orphan blocks/orphan transactions\n\nWladimir"
            },
            {
                "author": "Josh Lehan",
                "date": "2014-05-13T17:48:19",
                "message_text_only": "I agree, it looks very slick.  Well done.\n\nWhile on the subject of connected peers, what about the idea of adding the ping time from this node to other peers?  The problem with fitting that information into the current design is that the graphs seem to be comprised of overall statistics for this node, not per-peer statistics that can vary between peers (such as ping time).  If a line were to be added to a graph to represent each peer's ping time, the number of lines (statistics) on the graph would have to vary in real time as peers are added or removed, which would be a challenge.\n\nI earlier added the \"ping\" feature to bitcoind, and it works to measure the ping time, however this feature is on-demand: it won't ping other nodes unless requested.  So, something would have to send the \"ping\" RPC command on a regular schedule, to ensure the graph is updated with new information.  Also, there is currently no support for overlapping pings (although that would be easy to add), so if a peer is slow enough to not respond at all to the first ping request, and a second ping request goes out in the meantime, any late response from the first ping request would then be discarded.\n\nGreat graphs, and these are just brainstorms for future ideas :)\n\nJosh Lehan\n\nSent from my iPad\n\n> On May 13, 2014, at 4:43, Wladimir <laanwj at gmail.com> wrote:\n> \n> Hello Jameson,\n> \n>> On Sun, May 11, 2014 at 7:14 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n>> -----BEGIN PGP SIGNED MESSAGE-----\n>> Hash: SHA1\n>> \n>> Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.\n>> \n>> http://statoshi.info\n> \n> Must say it looks very nice.\n> \n> One comment about the graphs: in the 'connected peers' chart you\n> visualize some larger quantities (especially knownAddresses) and some\n> very small ones (peer.(dis)connect). This makes the latter invisible\n> due to scale.\n> \n> Some random stats may be useful as well:\n> \n> - Number of connected peers that are SPV clients or full nodes (NODE_NETWORK)\n> - Current block height (so that it's possible to detect stuck nodes)\n> - Number of transactions in mempool\n> - Number of transactions in UTXO set\n> - Maybe some fee statistics,\n> https://github.com/bitcoin/bitcoin/pull/3959 would be useful here\n> - Number of orphan blocks/orphan transactions\n> \n> Wladimir\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Jameson Lopp",
                "date": "2014-05-14T11:38:48",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nThanks; I've received several suggestions for other metrics to collect that I hope to implement soon, but you're right in that tracking per-peer pings is a different type of metric than what I'm currently collecting. I actually noted the lack of pong messages in a post I made a few weeks ago: http://coinchomp.com/2014/04/27/peeking-hood-running-bitcoin-node/\n\nOnce I added metrics for sent messages, it validated my theory: my node has never sent a single ping request to a peer and thus has never received a pong message. I can't even add sent pings or received pongs to this chart because they don't exist in my graphite instance. http://statoshi.info:8080/render/?width=1548&height=883&_salt=1400066995.622&target=stats.message.received.ping&target=stats.message.sent.pong&lineMode=connected&bgcolor=000000&fgcolor=FFFFFF\n\nI guess my question regarding ping stats is how useful that information would be - it seems to me that if we are trying to quantify the cohesiveness of the network, we should instead be observing the message propagation times. Though that's outside the scope of my project; there are other people who are doing just that.\n\nhttp://bitcoinstats.com/network/propagation/\n\nJameson\n\nOn 05/13/2014 01:48 PM, Josh Lehan wrote:\n> I agree, it looks very slick.  Well done.\n> \n> While on the subject of connected peers, what about the idea of adding the ping time from this node to other peers?  The problem with fitting that information into the current design is that the graphs seem to be comprised of overall statistics for this node, not per-peer statistics that can vary between peers (such as ping time).  If a line were to be added to a graph to represent each peer's ping time, the number of lines (statistics) on the graph would have to vary in real time as peers are added or removed, which would be a challenge.\n> \n> I earlier added the \"ping\" feature to bitcoind, and it works to measure the ping time, however this feature is on-demand: it won't ping other nodes unless requested.  So, something would have to send the \"ping\" RPC command on a regular schedule, to ensure the graph is updated with new information.  Also, there is currently no support for overlapping pings (although that would be easy to add), so if a peer is slow enough to not respond at all to the first ping request, and a second ping request goes out in the meantime, any late response from the first ping request would then be discarded.\n> \n> Great graphs, and these are just brainstorms for future ideas :)\n> \n> Josh Lehan\n> \n> Sent from my iPad\n> \n>> On May 13, 2014, at 4:43, Wladimir <laanwj at gmail.com> wrote:\n>>\n>> Hello Jameson,\n>>\n>>> On Sun, May 11, 2014 at 7:14 PM, Jameson Lopp <jameson.lopp at gmail.com> wrote:\n>>> -----BEGIN PGP SIGNED MESSAGE-----\n>>> Hash: SHA1\n>>>\n>>> Since it seems unlikely that we'll be able to ship an integrated stats / monitoring feature in the short term, I went ahead and set up a public Statoshi instance and threw a nicer interface on top of it.\n>>>\n>>> http://statoshi.info\n>>\n>> Must say it looks very nice.\n>>\n>> One comment about the graphs: in the 'connected peers' chart you\n>> visualize some larger quantities (especially knownAddresses) and some\n>> very small ones (peer.(dis)connect). This makes the latter invisible\n>> due to scale.\n>>\n>> Some random stats may be useful as well:\n>>\n>> - Number of connected peers that are SPV clients or full nodes (NODE_NETWORK)\n>> - Current block height (so that it's possible to detect stuck nodes)\n>> - Number of transactions in mempool\n>> - Number of transactions in UTXO set\n>> - Maybe some fee statistics,\n>> https://github.com/bitcoin/bitcoin/pull/3959 would be useful here\n>> - Number of orphan blocks/orphan transactions\n>>\n>> Wladimir\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTc1XIAAoJEIch3FSFNiDcrygH/A+cDzLdNNwdiT2oGjpfYO/A\nfxlqSHqzGdTJQuTRgjxAOp9RrFGhGYT4Qz6TJ3qzSVAILyM3FYELxgm3B6TqDWi2\nhc0FTFbVO3ys1Otza9r5r/6W0xGIkJaDRghoFlxd1jUCmuPyqK541pHjvX8MPAfm\nzYWCb5U2dU0MAzkV8vClQNMy5lMN3RulCm3lZPvetjnQXfhf2e36Pl5MFOsuqzcp\nPeZnuXHhxGT6BbVOoEnPRQiH7h0jmDqBV66nJaeUaLVvsg6urfo/HaUmDXuto0tF\nr7O779o138mLTofVxCwFvxYxilYDhS9S8L2uZc8ILt+SAZA3XQIM5okJYLd6I6A=\n=cJCd\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Pieter Wuille",
                "date": "2014-05-14T13:10:52",
                "message_text_only": "On May 14, 2014 1:42 PM, \"Jameson Lopp\" <jameson.lopp at gmail.com> wrote:\n>\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA1\n>\n> Thanks; I've received several suggestions for other metrics to collect\nthat I hope to implement soon, but you're right in that tracking per-peer\npings is a different type of metric than what I'm currently collecting. I\nactually noted the lack of pong messages in a post I made a few weeks ago:\nhttp://coinchomp.com/2014/04/27/peeking-hood-running-bitcoin-node/\n\nSee pull request #2784.\n\n(Sent from my phone)\n\n-- \nPieter\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140514/115ad356/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "statoshi.info is now live",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jameson Lopp",
                "Pieter Wuille",
                "Josh Lehan",
                "Wladimir"
            ],
            "messages_count": 5,
            "total_messages_chars_count": 10735
        }
    },
    {
        "title": "[Bitcoin-development] Allow cross-site requests of payment requests",
        "thread_messages": [
            {
                "author": "Andy Alness",
                "date": "2014-05-12T01:05:20",
                "message_text_only": "Would it be a terrible idea to amend BIP 70 to suggest implementors include\na \"Access-Control-Allow-Origin: *\" response header for their payment\nrequest responses? I don't think this opens up any useful attack vectors.\n\nI ask because this would make it practical for pure HTML5 web wallets to\nuse the payment protocol entirely in-browser. Without this I think it would\nbe necessary for the server hosting the wallet's HTML to fetch payment\nrequests on the browser's behalf. This is somewhat inelegant and has\nsecurity/resource implications for the back-end.\n\n-Andy\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140511/0ad12a9d/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-12T10:28:29",
                "message_text_only": ">\n> Would it be a terrible idea to amend BIP 70 to suggest implementors\n> include a \"Access-Control-Allow-Origin: *\" response header for their\n> payment request responses? I don't think this opens up any useful attack\n> vectors.\n>\n\nIt sounds OK to me, although we should all sleep on it for a bit. The\nreason this header exists is exactly because mobile code fetching random\nweb resources can result in surprising security holes.\n\nFor this to be useful, someone would have to actually want to fully\nimplement the payment protocol (with its own root cert store, ASN.1\nparsing, RSA etc) in browser-sandboxed Javascript rather than just\nproviding a real app for people to download.\n\nIs that really going to be popular, though? I think it's unclear.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/1bd9b568/attachment.html>"
            },
            {
                "author": "Andy Alness",
                "date": "2014-05-12T17:21:33",
                "message_text_only": ">\n> It sounds OK to me, although we should all sleep on it for a bit. The\n> reason this header exists is exactly because mobile code fetching random\n> web resources can result in surprising security holes.\n>\n\nThat's fair. From the server perspective, I'd argue that payment requests /\npayments already need to be publicly accessible endpoints. Current\npractical use requires support for cross-app/cross-device requests for\nthem. It seems like a reasonable logical extension to explicitly allow for\nthem to be accessed cross-site as well.\n\nFor this to be useful, someone would have to actually want to fully\n> implement the payment protocol (with its own root cert store, ASN.1\n> parsing, RSA etc) in browser-sandboxed Javascript rather than just\n> providing a real app for people to download.\n>\n\nI think there is still value in fetching the payment request cross-site\neven if the request payload is validated by a 3rd party using a more\nconventional TLS/crypto suite. Exposing x.509/RSA/ASN.1/chain verification\nfunctionality strikes me as a useful thing browsers could easily offer but\nthat's another discussion entirely but sure it could be done all in JS. In\ncertain environments downloading a \"real app\" isn't possible/practical.\n\n\n> Is that really going to be popular, though? I think it's unclear.\n>\n\nIt certainly won't be if there is no ability :)\n\n-Andy\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/1e519cbe/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Allow cross-site requests of payment requests",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Andy Alness"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 3219
        }
    },
    {
        "title": "[Bitcoin-development] Prenumbered BIP naming",
        "thread_messages": [
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-12T16:53:42",
                "message_text_only": "I've noticed some folks struggling to attach labels to their yet to be\nnumbered BIPs.\n\nI'd recommend people call them \"draft-<main author name>-<what it\ndoes>\" like draft-maxwell-coinburning in the style of pre-WG IETF\ndrafts."
            },
            {
                "author": "Matt Whitlock",
                "date": "2014-05-12T17:01:43",
                "message_text_only": "On Monday, 12 May 2014, at 9:53 am, Gregory Maxwell wrote:\n> I've noticed some folks struggling to attach labels to their yet to be\n> numbered BIPs.\n> \n> I'd recommend people call them \"draft-<main author name>-<what it\n> does>\" like draft-maxwell-coinburning in the style of pre-WG IETF\n> drafts.\n\nWhy is there such a high bar to getting a number assigned to a BIP anyway? BIP 1 seems to suggest that getting a BIP number assigned is no big deal, but the reality seems to betray that casual notion. Even proposals with hours of work put into them are not getting BIP numbers. It's not exactly as though there's a shortage of integers. Are numbers assigned only to proposals that are well liked? Isn't the point of assigning numbers so that we can have organized discussions about all proposals, even ones we don't like?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-12T17:11:25",
                "message_text_only": "On Mon, May 12, 2014 at 10:01 AM, Matt Whitlock <bip at mattwhitlock.name> wrote:\n> Why is there such a high bar to getting a number assigned to a BIP anyway? BIP 1 seems to suggest that getting a BIP number assigned is no big deal, but the reality seems to betray that casual notion. Even proposals with hours of work put into them are not getting BIP numbers. It's not exactly as though there's a shortage of integers. Are numbers assigned only to proposals that are well liked? Isn't the point of assigning numbers so that we can have organized discussions about all proposals, even ones we don't like?\n\nIt isn't a big deal, but according to the process numbers shouldn't be\nassigned for things that haven't even been publically discussed. If\nsomeone wants to create specifications that are purely the product of\nthey own work and not a public discussion\u2014 they should feel free to do\nthat, but BIP isn't the process for that.  So, since things need to be\ndiscussed, it can be useful to have something to call a proposal\nbefore other things happen\u2014 thats all. The same kind of issue arises\nelsewhere."
            }
        ],
        "thread_summary": {
            "title": "Prenumbered BIP naming",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Matt Whitlock",
                "Gregory Maxwell"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 2148
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin Fee Formula Proposal",
        "thread_messages": [
            {
                "author": "Peter Grigor",
                "date": "2014-05-13T01:21:44",
                "message_text_only": "This was originally submitted to the bitcoin github issue manager. I'm\nre-posting here.\n\nI propose the transaction fee should be calculated from a percentage of the\ninput amount divided by the confirmations of the input multiplied by the\nnumber of inputs.\n\nBy using a percentage of the input amount the transaction fee will always\nmake sense no matter what the \"price\" of bitcoins may be in fiat; by\ndividing the fee by the number of confirmations we discourage hasty spends\nand reward savings (ie. old inputs); by multiplying the fee by the number\nof inputs we discourage \"payment fragmenting.\"\n\nLet me further explain payment fragmenting by way of an example: Let's say\nI get paid $2,500 in bitcoins per month from my job. If I then take that\n$2,500 and pay for a coffee (right away, 1 confirmation) I'll be charged a\nfee of $2.50 because I'm charged according to the *input amount*, not the\nactual transaction size. Because of this it would behove my employer to pay\nme the $2,500 as one transaction with, perhaps, 100 output addresses at $25\napiece so that when I pay for my coffee I use one of the $25 unspent\noutputs. By multiplying the transaction fee be the number of inputs this\nprovides a disincentive for payment fragmenting as multiple inputs will be\nrequired to pay for larger purchases.\n\nFurthermore this provides an incentive for wallet software to use the\noldest input(s) which most closely match the transaction amount. For the\nexample above: In real life a user's wallet would have a number of inputs\nto choose from and wouldn't use the newest \"paycheck\" input for the coffee\npurchase. Furthermore, even if the $2,500 input was the only input\navailable, by waiting for 100 confirmations (less than a day) the\ntransaction fee would be 2.5 cents.\n\nTransaction fees would then be calculated by the following formula:\n\n((INPUT_AMOUNT * BASE_PERCENT) / CONFIRMATIONS) * NUMBER_OF_INPUTS\n\nThe INPUT_AMOUNT, CONFIRMATIONS and NUMBER_OF_INPUTS would be determined by\nthe creator of the transaction and should be optimized for the transaction\namount -- the BASE_PERCENT would be hard-coded in the bitcoind software.\nThe special case of zero CONFIRMATIONS will be treated as 1 confirmation in\norder to avoid a divide by zero error.\n\nFor example: if I choose a BASE_PERCENT of 0.1% and one input it will cost:\n\n   - $1 to send $1,000,000 that has 100 confirmations;\n   - $0.10 (10 cents) to send $1,000,000 that has 1,000 confirmations\n   (approx. 1 week);\n   - $0.10 (10 cents) to send $100 which has 1 confirmation;\n   - $0.01 (1 cent) to send $100 which has 10 confirmations;\n   - $0.001 (1/10 cent) to send $100 which has 100 confirmations (less than\n   a day);\n\nI've put together a spreadsheet which shows the various fees by amount and\nconfirmations -- the spreadsheet assumes one input for a transaction:\n\nhttps://docs.google.com/spreadsheets/d/1ovAQfxksQmOq3zYf79qFEDPCrSx58SmyK3Uwpu8iTUs/edit?usp=sharing\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/34d187de/attachment.html>"
            },
            {
                "author": "Gmail",
                "date": "2014-05-13T01:46:24",
                "message_text_only": "What about 0 confirmation inputs?\n\nMightn't this make tiny \"spam\" transactions unsafely inexpensive?\n\n> On May 12, 2014, at 20:21, Peter Grigor <peter at grigor.ws> wrote:\n> \n> \n> I propose the transaction fee should be calculated from a percentage of the input amount divided by the confirmations of the input multiplied by the number of inputs.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/58f4b564/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: smime.p7s\nType: application/pkcs7-signature\nSize: 1593 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/58f4b564/attachment.p7s>"
            },
            {
                "author": "Bernd Jendrissek",
                "date": "2014-05-13T10:02:08",
                "message_text_only": "On Tue, May 13, 2014 at 3:21 AM, Peter Grigor <peter at grigor.ws> wrote:\n> This was originally submitted to the bitcoin github issue manager. I'm\n> re-posting here.\n>\n> I propose the transaction fee should be calculated from a percentage of the\n> input amount divided by the confirmations of the input multiplied by the\n> number of inputs.\n\nFor reference: https://github.com/bitcoin/bitcoin/issues/4171\n\nI think the responses in the issue tracker already adequately address\nwhy this doesn't belong in *Bit*coin. Your cure is worse than the\ndisease, IMHO."
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Fee Formula Proposal",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Bernd Jendrissek",
                "Gmail",
                "Peter Grigor"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 4459
        }
    },
    {
        "title": "[Bitcoin-development] Regtest Address Version Change Proposal",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2014-05-13T09:45:12",
                "message_text_only": "Hi folks,\n\nI propose changing all of the address versions in -regtest mode to be\nunique so they are no longer identical to testnet.\n\nhttps://en.bitcoin.it/wiki/List_of_address_prefixes\nFor example, regtest pubkey hash addresses could begin with r or R.\n\nWe need to know if any existing tools would need to be modified to support\nthis change to regtest.  Do existing tools outside of pull tester expect\nregtest to have testnet addresses?  If the quantity of tools that currently\nhandle regtest is small then we can modify them to the new address versions.\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140512/ca948ab1/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-13T10:30:34",
                "message_text_only": "Yes, bitcoinj supports and uses regtest mode. It would also have to be\nchanged.\n\nYou didn't provide a rationale for this. What's the cost of having them be\nthe same?\n\n\nOn Tue, May 13, 2014 at 11:45 AM, Warren Togami Jr. <wtogami at gmail.com>wrote:\n\n> Hi folks,\n>\n> I propose changing all of the address versions in -regtest mode to be\n> unique so they are no longer identical to testnet.\n>\n> https://en.bitcoin.it/wiki/List_of_address_prefixes\n> For example, regtest pubkey hash addresses could begin with r or R.\n>\n> We need to know if any existing tools would need to be modified to support\n> this change to regtest.  Do existing tools outside of pull tester expect\n> regtest to have testnet addresses?  If the quantity of tools that currently\n> handle regtest is small then we can modify them to the new address versions.\n>\n> Warren Togami\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/baf17532/attachment.html>"
            },
            {
                "author": "Warren Togami Jr.",
                "date": "2014-05-13T11:02:46",
                "message_text_only": "bitcore guesses the network from the address version in several places in\nits code.  They don't want to change that.  Perhaps it wasn't the wisest\napproach for them to use.  I thought it might be simple to change the\naddress version since its still relatively new and it isn't a real network.\n Would it be too much work to change?\n\n\nOn Tue, May 13, 2014 at 12:30 AM, Mike Hearn <mike at plan99.net> wrote:\n\n> Yes, bitcoinj supports and uses regtest mode. It would also have to be\n> changed.\n>\n> You didn't provide a rationale for this. What's the cost of having them be\n> the same?\n>\n>\n> On Tue, May 13, 2014 at 11:45 AM, Warren Togami Jr. <wtogami at gmail.com>wrote:\n>\n>> Hi folks,\n>>\n>> I propose changing all of the address versions in -regtest mode to be\n>> unique so they are no longer identical to testnet.\n>>\n>> https://en.bitcoin.it/wiki/List_of_address_prefixes\n>> For example, regtest pubkey hash addresses could begin with r or R.\n>>\n>> We need to know if any existing tools would need to be modified to\n>> support this change to regtest.  Do existing tools outside of pull tester\n>> expect regtest to have testnet addresses?  If the quantity of tools that\n>> currently handle regtest is small then we can modify them to the new\n>> address versions.\n>>\n>> Warren Togami\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform\n>> available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/bb49c804/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-13T11:28:44",
                "message_text_only": "And they can't just do\n\n  NetworkParams.TESTNET = NetworkParams.REGTEST\n\nat the start of a program that is connecting to regtest?\n\nIt's not like changing the address code is a huge problem or anything, but\nit would disrupt a bunch of people and seems kind of annoying. Surely\nthere's a simpler way to work around this issue on their side? I mean their\ncode already has to know what network is *expected*, right, otherwise what\nstops you accidentally trying to send coins cross chain?\n\n\n\nOn Tue, May 13, 2014 at 1:02 PM, Warren Togami Jr. <wtogami at gmail.com>wrote:\n\n> bitcore guesses the network from the address version in several places in\n> its code.  They don't want to change that.  Perhaps it wasn't the wisest\n> approach for them to use.  I thought it might be simple to change the\n> address version since its still relatively new and it isn't a real network.\n>  Would it be too much work to change?\n>\n>\n> On Tue, May 13, 2014 at 12:30 AM, Mike Hearn <mike at plan99.net> wrote:\n>\n>> Yes, bitcoinj supports and uses regtest mode. It would also have to be\n>> changed.\n>>\n>> You didn't provide a rationale for this. What's the cost of having them\n>> be the same?\n>>\n>>\n>> On Tue, May 13, 2014 at 11:45 AM, Warren Togami Jr. <wtogami at gmail.com>wrote:\n>>\n>>> Hi folks,\n>>>\n>>> I propose changing all of the address versions in -regtest mode to be\n>>> unique so they are no longer identical to testnet.\n>>>\n>>> https://en.bitcoin.it/wiki/List_of_address_prefixes\n>>> For example, regtest pubkey hash addresses could begin with r or R.\n>>>\n>>> We need to know if any existing tools would need to be modified to\n>>> support this change to regtest.  Do existing tools outside of pull tester\n>>> expect regtest to have testnet addresses?  If the quantity of tools that\n>>> currently handle regtest is small then we can modify them to the new\n>>> address versions.\n>>>\n>>> Warren Togami\n>>>\n>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>>> Get unparalleled scalability from the best Selenium testing platform\n>>> available\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>>\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/23cd68fb/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Regtest Address Version Change Proposal",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr.",
                "Mike Hearn"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 7195
        }
    },
    {
        "title": "[Bitcoin-development] 0.9.2 RC postponed for 7 days",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2014-05-13T22:05:55",
                "message_text_only": "The release candidate for 0.9.2 was previously scheduled for May 13th.\n Yesterday it was decided to postpone this for 7 days due to the Bitcoin\n2014 Amsterdam conference.  The string freeze is now in effect and it is a\nvery good time to contribute\ntranslations<https://bitcointalk.org/index.php?topic=582345.0>during\nthese next 7 days.\n\nIn Related News ...\nhttp://nightly.bitcoin.it now has separate builds for the master and 0.9.2\nbranch.  0.9.2 is what will soon become the release while master is\naccepting changes that may not be safe for a near-term release.  Read\ndetails <https://bitcointalk.org/index.php?topic=571414> about\ndeterministic reproducibility of the unofficial nightly builds.\n\nWarren Togami\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140513/658e2fdf/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "0.9.2 RC postponed for 7 days",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 894
        }
    },
    {
        "title": "[Bitcoin-development] DNS seeds unstable",
        "thread_messages": [
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-15T11:50:29",
                "message_text_only": "I'm bringing this issue up again. The current Bitcoin DNS seed\ninfrastructure is unstable. I assume this is because of we're using a\ncustom DNS implementation which is not 100% compatible. There have been\nbugs in the past, like a case sensitive match for the domain name.\n\nCurrent state (seeds taken from bitcoinj):\n\nmainnet:\n\nseed.bitcoin.sipa.be\t\t\tOK\ndnsseed.bluematt.me\t\t\tOK\ndnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\nseed.bitcoinstats.com\t\t\tOK\n\ntestnet:\n\ntestnet-seed.bitcoin.petertodd.org\tSERVFAIL, just from Telefonica\ntestnet-seed.bluematt.me\t\tOK (but only returns one node)\n\nNote: Telefonica is one of Europe's largest ISPs.\n\nI would try to improve DNS myself, but I'm not capable of writing C. My\n\"fix\" would be to reimplement everything in Java -- I doubt you guys\nwould be happy with that."
            },
            {
                "author": "Drak",
                "date": "2014-05-15T17:17:29",
                "message_text_only": "I am sure the failure here is probably more mundane like a a service not\nrestarted, or not on auto restart when server is rebooted and such like.\nThe dns seeder works pretty efficiently in my experience. Maybe we need\nmore seeders and to include the ability for zone transfers so existing\nseeders can spread their records to multiple servers running standard DNS\nservers like bind etc.\n\n\nOn 15 May 2014 12:50, Andreas Schildbach <andreas at schildbach.de> wrote:\n\n> I'm bringing this issue up again. The current Bitcoin DNS seed\n> infrastructure is unstable. I assume this is because of we're using a\n> custom DNS implementation which is not 100% compatible. There have been\n> bugs in the past, like a case sensitive match for the domain name.\n>\n> Current state (seeds taken from bitcoinj):\n>\n> mainnet:\n>\n> seed.bitcoin.sipa.be                    OK\n> dnsseed.bluematt.me                     OK\n> dnsseed.bitcoin.dashjr.org              SERVFAIL, tried multiple ISPs\n> seed.bitcoinstats.com                   OK\n>\n> testnet:\n>\n> testnet-seed.bitcoin.petertodd.org      SERVFAIL, just from Telefonica\n> testnet-seed.bluematt.me                OK (but only returns one node)\n>\n> Note: Telefonica is one of Europe's largest ISPs.\n>\n> I would try to improve DNS myself, but I'm not capable of writing C. My\n> \"fix\" would be to reimplement everything in Java -- I doubt you guys\n> would be happy with that.\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140515/d1fa22db/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-15T17:41:31",
                "message_text_only": "On Thu, May 15, 2014 at 7:50 AM, Andreas Schildbach\n<andreas at schildbach.de> wrote:\n> I'm bringing this issue up again. The current Bitcoin DNS seed\n> infrastructure is unstable. I assume this is because of we're using a\n> custom DNS implementation which is not 100% compatible. There have been\n> bugs in the past, like a case sensitive match for the domain name.\n\nWhile I agree that the problem seeds should be fixed, it also sounds\nlike a problem with bitcoinj / other layers, if a malfunctioning seed\nis a problem for your app.\n\nSeeds are fundamentally a backup for peer exchange.  You are going to\nrun into problems if you rely 100% on seeds, always.\n\nFurther, there are multiple seeds so that we are not impacted if a\ncouple seeds malfunction or die.  All bitcoin apps must take this into\naccount.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-15T17:48:52",
                "message_text_only": "On Thu, May 15, 2014 at 4:50 AM, Andreas Schildbach\n<andreas at schildbach.de> wrote:\n> I'm bringing this issue up again. The current Bitcoin DNS seed\n> infrastructure is unstable. I assume this is because of we're using a\n> custom DNS implementation which is not 100% compatible. There have been\n> bugs in the past, like a case sensitive match for the domain name.\n\nIf software is using the DNS seeds in a way where one or two being\nunavailable is problematic, then the software may be using them\npoorly.\n\nGenerally DNS seeds should only be used as fast connectivity hints,\nprimarily for initial connectivity. Relying on them exclusively\nincreases isolation vulnerabilities (e.g. because the dns seed\noperators or any ISP or network attacker on the path between you and\nthe seeds can replace the results with ones that isolate you on a\nbogus network)."
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-16T09:15:34",
                "message_text_only": "On 05/15/2014 07:48 PM, Gregory Maxwell wrote:\n> On Thu, May 15, 2014 at 4:50 AM, Andreas Schildbach\n> <andreas at schildbach.de> wrote:\n>> I'm bringing this issue up again. The current Bitcoin DNS seed\n>> infrastructure is unstable. I assume this is because of we're using a\n>> custom DNS implementation which is not 100% compatible. There have been\n>> bugs in the past, like a case sensitive match for the domain name.\n>\n> If software is using the DNS seeds in a way where one or two being\n> unavailable is problematic, then the software may be using them\n> poorly.\n>\n> Generally DNS seeds should only be used as fast connectivity hints,\n> primarily for initial connectivity. Relying on them exclusively\n> increases isolation vulnerabilities (e.g. because the dns seed\n> operators or any ISP or network attacker on the path between you and\n> the seeds can replace the results with ones that isolate you on a\n> bogus network).\n\nI just used \"nslookup\", after seeing the issues in bitcoinj.\n\nI agree that clients should be robust regarding DNS lookups (and\nbitcoinj isn't), but still I think the first step needs to be\nmaintaining a quality infrastructure."
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-16T14:09:28",
                "message_text_only": "My android wallet is working OK. Yes it isn't great when seeds have\ntemporary availability problems but things are still working.\n\nThere's a couple of pull reqs outstanding to include hard coded seed peers\nand getaddr sourced IPs. Once those are finished and merged in there'll be\nmore backup paths.\nOn 16 May 2014 11:16, \"Andreas Schildbach\" <andreas at schildbach.de> wrote:\n\n> On 05/15/2014 07:48 PM, Gregory Maxwell wrote:\n> > On Thu, May 15, 2014 at 4:50 AM, Andreas Schildbach\n> > <andreas at schildbach.de> wrote:\n> >> I'm bringing this issue up again. The current Bitcoin DNS seed\n> >> infrastructure is unstable. I assume this is because of we're using a\n> >> custom DNS implementation which is not 100% compatible. There have been\n> >> bugs in the past, like a case sensitive match for the domain name.\n> >\n> > If software is using the DNS seeds in a way where one or two being\n> > unavailable is problematic, then the software may be using them\n> > poorly.\n> >\n> > Generally DNS seeds should only be used as fast connectivity hints,\n> > primarily for initial connectivity. Relying on them exclusively\n> > increases isolation vulnerabilities (e.g. because the dns seed\n> > operators or any ISP or network attacker on the path between you and\n> > the seeds can replace the results with ones that isolate you on a\n> > bogus network).\n>\n> I just used \"nslookup\", after seeing the issues in bitcoinj.\n>\n> I agree that clients should be robust regarding DNS lookups (and\n> bitcoinj isn't), but still I think the first step needs to be\n> maintaining a quality infrastructure.\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/904fd554/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2014-05-15T18:05:29",
                "message_text_only": "On Thursday, May 15, 2014 11:50:29 AM Andreas Schildbach wrote:\n> dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n\nFWIW, this may be a routing issue: I notice various ISPs have been unable to \nroute to my server over IPv4 today. IPv6 seems to be fine.\n\nNot sure how important DNS seed reliability is anyway; it's just \nbootstrapping, and there are multiple servers listed.\n\nLuke"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-16T16:34:36",
                "message_text_only": "Apparently British Telecom also cannot speak to Peter Todd's server.\n\nThat another very large ISP in Europe.\n\n\nOn 05/15/2014 01:50 PM, Andreas Schildbach wrote:\n> I'm bringing this issue up again. The current Bitcoin DNS seed\n> infrastructure is unstable. I assume this is because of we're using a\n> custom DNS implementation which is not 100% compatible. There have been\n> bugs in the past, like a case sensitive match for the domain name.\n> \n> Current state (seeds taken from bitcoinj):\n> \n> mainnet:\n> \n> seed.bitcoin.sipa.be\t\t\tOK\n> dnsseed.bluematt.me\t\t\tOK\n> dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n> seed.bitcoinstats.com\t\t\tOK\n> \n> testnet:\n> \n> testnet-seed.bitcoin.petertodd.org\tSERVFAIL, just from Telefonica\n> testnet-seed.bluematt.me\t\tOK (but only returns one node)\n> \n> Note: Telefonica is one of Europe's largest ISPs.\n> \n> I would try to improve DNS myself, but I'm not capable of writing C. My\n> \"fix\" would be to reimplement everything in Java -- I doubt you guys\n> would be happy with that.\n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2014-05-16T16:46:14",
                "message_text_only": "Is Peter Todd's server actually up? The Google public DNS resolver at 8.8.8.8 can't resolve testnet-seed.bitcoin.petertodd.org either (SERVFAIL).\n\n\nOn Friday, 16 May 2014, at 6:34 pm, Andreas Schildbach wrote:\n> Apparently British Telecom also cannot speak to Peter Todd's server.\n> \n> That another very large ISP in Europe.\n> \n> \n> On 05/15/2014 01:50 PM, Andreas Schildbach wrote:\n> > I'm bringing this issue up again. The current Bitcoin DNS seed\n> > infrastructure is unstable. I assume this is because of we're using a\n> > custom DNS implementation which is not 100% compatible. There have been\n> > bugs in the past, like a case sensitive match for the domain name.\n> > \n> > Current state (seeds taken from bitcoinj):\n> > \n> > mainnet:\n> > \n> > seed.bitcoin.sipa.be\t\t\tOK\n> > dnsseed.bluematt.me\t\t\tOK\n> > dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n> > seed.bitcoinstats.com\t\t\tOK\n> > \n> > testnet:\n> > \n> > testnet-seed.bitcoin.petertodd.org\tSERVFAIL, just from Telefonica\n> > testnet-seed.bluematt.me\t\tOK (but only returns one node)\n> > \n> > Note: Telefonica is one of Europe's largest ISPs.\n> > \n> > I would try to improve DNS myself, but I'm not capable of writing C. My\n> > \"fix\" would be to reimplement everything in Java -- I doubt you guys\n> > would be happy with that.\n> > \n> > \n> > ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> > Get unparalleled scalability from the best Selenium testing platform available\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > \n> \n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Laszlo Hanyecz",
                "date": "2014-05-16T16:46:54",
                "message_text_only": "It looks like it might be firewalled, probably just need to fix the ACL in EC2.\n\n-Laszlo\n\nOn May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de> wrote:\n\n> Apparently British Telecom also cannot speak to Peter Todd's server.\n> \n> That another very large ISP in Europe.\n> \n> \n> On 05/15/2014 01:50 PM, Andreas Schildbach wrote:\n>> I'm bringing this issue up again. The current Bitcoin DNS seed\n>> infrastructure is unstable. I assume this is because of we're using a\n>> custom DNS implementation which is not 100% compatible. There have been\n>> bugs in the past, like a case sensitive match for the domain name.\n>> \n>> Current state (seeds taken from bitcoinj):\n>> \n>> mainnet:\n>> \n>> seed.bitcoin.sipa.be\t\t\tOK\n>> dnsseed.bluematt.me\t\t\tOK\n>> dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n>> seed.bitcoinstats.com\t\t\tOK\n>> \n>> testnet:\n>> \n>> testnet-seed.bitcoin.petertodd.org\tSERVFAIL, just from Telefonica\n>> testnet-seed.bluematt.me\t\tOK (but only returns one node)\n>> \n>> Note: Telefonica is one of Europe's largest ISPs.\n>> \n>> I would try to improve DNS myself, but I'm not capable of writing C. My\n>> \"fix\" would be to reimplement everything in Java -- I doubt you guys\n>> would be happy with that.\n>> \n>> \n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-16T17:07:57",
                "message_text_only": "Hi guys\n\n\nJust wanted to let you know that Andreas' testnet Bitcoin Wallet doesn't\nwork because of fail in the peer discovery, and this caused us problems as\nwe cannot properly demonstrate my XBTerminal POS on the Bitcoin Conference.\n\nRight now I'm booting up an own full node that I will set as trusted peer\nin the Wallet settings, hopefully this will work. However this DNS\ndiscovery problem is really a problem, even for testnet. Btw, I had\nproblems firing up the full bitcoind node also, of the same reason -\ndiscovery failed. I had to ask Andreas to paste me his node list to\nmanually seed the nodelist.\n\nSo I've set up and will run a well connected testnet node, as we need it\nfor the XBTerminal.\nPlease let me know if I can somehow help to fix the DNS discovery issue\nalso.\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-16 17:46 GMT+01:00 Laszlo Hanyecz <laszlo at heliacal.net>:\n\n> It looks like it might be firewalled, probably just need to fix the ACL in\n> EC2.\n>\n> -Laszlo\n>\n> On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de>\n> wrote:\n>\n> > Apparently British Telecom also cannot speak to Peter Todd's server.\n> >\n> > That another very large ISP in Europe.\n> >\n> >\n> > On 05/15/2014 01:50 PM, Andreas Schildbach wrote:\n> >> I'm bringing this issue up again. The current Bitcoin DNS seed\n> >> infrastructure is unstable. I assume this is because of we're using a\n> >> custom DNS implementation which is not 100% compatible. There have been\n> >> bugs in the past, like a case sensitive match for the domain name.\n> >>\n> >> Current state (seeds taken from bitcoinj):\n> >>\n> >> mainnet:\n> >>\n> >> seed.bitcoin.sipa.be                 OK\n> >> dnsseed.bluematt.me                  OK\n> >> dnsseed.bitcoin.dashjr.org           SERVFAIL, tried multiple ISPs\n> >> seed.bitcoinstats.com                        OK\n> >>\n> >> testnet:\n> >>\n> >> testnet-seed.bitcoin.petertodd.org   SERVFAIL, just from Telefonica\n> >> testnet-seed.bluematt.me             OK (but only returns one node)\n> >>\n> >> Note: Telefonica is one of Europe's largest ISPs.\n> >>\n> >> I would try to improve DNS myself, but I'm not capable of writing C. My\n> >> \"fix\" would be to reimplement everything in Java -- I doubt you guys\n> >> would be happy with that.\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >> Instantly run your Selenium tests across 300+ browser/OS combos.\n> >> Get unparalleled scalability from the best Selenium testing platform\n> available\n> >> Simple to use. Nothing to install. Get started now for free.\"\n> >> http://p.sf.net/sfu/SauceLabs\n> >>\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> > Get unparalleled scalability from the best Selenium testing platform\n> available\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/2f902475/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-16T22:02:46",
                "message_text_only": "There are only two testnet seeds listed in bitcoind, and one of them\nreturns SERVFAIL (testnet-seed.bitcoin.petertodd.org) and the other\njust returns one A record (testnet-seed.bluematt.me).  No idea what\nseeds bitcoinj uses.\n\nIf you are going to depend on testnet, especially for an important\ndemo... contribute to the infrastructure!  This stuff doesn't just fix\nitself for free.\n\n\n\n\nOn Fri, May 16, 2014 at 7:07 PM, Alex Kotenko <alexykot at gmail.com> wrote:\n> Hi guys\n>\n>\n> Just wanted to let you know that Andreas' testnet Bitcoin Wallet doesn't\n> work because of fail in the peer discovery, and this caused us problems as\n> we cannot properly demonstrate my XBTerminal POS on the Bitcoin Conference.\n>\n> Right now I'm booting up an own full node that I will set as trusted peer in\n> the Wallet settings, hopefully this will work. However this DNS discovery\n> problem is really a problem, even for testnet. Btw, I had problems firing up\n> the full bitcoind node also, of the same reason - discovery failed. I had to\n> ask Andreas to paste me his node list to manually seed the nodelist.\n>\n> So I've set up and will run a well connected testnet node, as we need it for\n> the XBTerminal.\n> Please let me know if I can somehow help to fix the DNS discovery issue\n> also.\n>\n>\n> Best regards,\n> Alex Kotenko\n>\n>\n> 2014-05-16 17:46 GMT+01:00 Laszlo Hanyecz <laszlo at heliacal.net>:\n>\n>> It looks like it might be firewalled, probably just need to fix the ACL in\n>> EC2.\n>>\n>> -Laszlo\n>>\n>> On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de>\n>> wrote:\n>>\n>> > Apparently British Telecom also cannot speak to Peter Todd's server.\n>> >\n>> > That another very large ISP in Europe.\n>> >\n>> >\n>> > On 05/15/2014 01:50 PM, Andreas Schildbach wrote:\n>> >> I'm bringing this issue up again. The current Bitcoin DNS seed\n>> >> infrastructure is unstable. I assume this is because of we're using a\n>> >> custom DNS implementation which is not 100% compatible. There have been\n>> >> bugs in the past, like a case sensitive match for the domain name.\n>> >>\n>> >> Current state (seeds taken from bitcoinj):\n>> >>\n>> >> mainnet:\n>> >>\n>> >> seed.bitcoin.sipa.be                 OK\n>> >> dnsseed.bluematt.me                  OK\n>> >> dnsseed.bitcoin.dashjr.org           SERVFAIL, tried multiple ISPs\n>> >> seed.bitcoinstats.com                        OK\n>> >>\n>> >> testnet:\n>> >>\n>> >> testnet-seed.bitcoin.petertodd.org   SERVFAIL, just from Telefonica\n>> >> testnet-seed.bluematt.me             OK (but only returns one node)\n>> >>\n>> >> Note: Telefonica is one of Europe's largest ISPs.\n>> >>\n>> >> I would try to improve DNS myself, but I'm not capable of writing C. My\n>> >> \"fix\" would be to reimplement everything in Java -- I doubt you guys\n>> >> would be happy with that.\n>> >>\n>> >>\n>> >>\n>> >> ------------------------------------------------------------------------------\n>> >> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> >> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> >> Get unparalleled scalability from the best Selenium testing platform\n>> >> available\n>> >> Simple to use. Nothing to install. Get started now for free.\"\n>> >> http://p.sf.net/sfu/SauceLabs\n>> >>\n>> >\n>> >\n>> >\n>> >\n>> > ------------------------------------------------------------------------------\n>> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> > Instantly run your Selenium tests across 300+ browser/OS combos.\n>> > Get unparalleled scalability from the best Selenium testing platform\n>> > available\n>> > Simple to use. Nothing to install. Get started now for free.\"\n>> > http://p.sf.net/sfu/SauceLabs\n>> > _______________________________________________\n>> > Bitcoin-development mailing list\n>> > Bitcoin-development at lists.sourceforge.net\n>> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform\n>> available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-17T00:58:20",
                "message_text_only": "Ok, what do I need to do? How do I host a testnet seed myself?\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-16 23:02 GMT+01:00 Jeff Garzik <jgarzik at bitpay.com>:\n\n> There are only two testnet seeds listed in bitcoind, and one of them\n> returns SERVFAIL (testnet-seed.bitcoin.petertodd.org) and the other\n> just returns one A record (testnet-seed.bluematt.me).  No idea what\n> seeds bitcoinj uses.\n>\n> If you are going to depend on testnet, especially for an important\n> demo... contribute to the infrastructure!  This stuff doesn't just fix\n> itself for free.\n>\n>\n>\n>\n> On Fri, May 16, 2014 at 7:07 PM, Alex Kotenko <alexykot at gmail.com> wrote:\n> > Hi guys\n> >\n> >\n> > Just wanted to let you know that Andreas' testnet Bitcoin Wallet doesn't\n> > work because of fail in the peer discovery, and this caused us problems\n> as\n> > we cannot properly demonstrate my XBTerminal POS on the Bitcoin\n> Conference.\n> >\n> > Right now I'm booting up an own full node that I will set as trusted\n> peer in\n> > the Wallet settings, hopefully this will work. However this DNS discovery\n> > problem is really a problem, even for testnet. Btw, I had problems\n> firing up\n> > the full bitcoind node also, of the same reason - discovery failed. I\n> had to\n> > ask Andreas to paste me his node list to manually seed the nodelist.\n> >\n> > So I've set up and will run a well connected testnet node, as we need it\n> for\n> > the XBTerminal.\n> > Please let me know if I can somehow help to fix the DNS discovery issue\n> > also.\n> >\n> >\n> > Best regards,\n> > Alex Kotenko\n> >\n> >\n> > 2014-05-16 17:46 GMT+01:00 Laszlo Hanyecz <laszlo at heliacal.net>:\n> >\n> >> It looks like it might be firewalled, probably just need to fix the ACL\n> in\n> >> EC2.\n> >>\n> >> -Laszlo\n> >>\n> >> On May 16, 2014, at 4:34 PM, Andreas Schildbach <andreas at schildbach.de>\n> >> wrote:\n> >>\n> >> > Apparently British Telecom also cannot speak to Peter Todd's server.\n> >> >\n> >> > That another very large ISP in Europe.\n> >> >\n> >> >\n> >> > On 05/15/2014 01:50 PM, Andreas Schildbach wrote:\n> >> >> I'm bringing this issue up again. The current Bitcoin DNS seed\n> >> >> infrastructure is unstable. I assume this is because of we're using a\n> >> >> custom DNS implementation which is not 100% compatible. There have\n> been\n> >> >> bugs in the past, like a case sensitive match for the domain name.\n> >> >>\n> >> >> Current state (seeds taken from bitcoinj):\n> >> >>\n> >> >> mainnet:\n> >> >>\n> >> >> seed.bitcoin.sipa.be                 OK\n> >> >> dnsseed.bluematt.me                  OK\n> >> >> dnsseed.bitcoin.dashjr.org           SERVFAIL, tried multiple ISPs\n> >> >> seed.bitcoinstats.com                        OK\n> >> >>\n> >> >> testnet:\n> >> >>\n> >> >> testnet-seed.bitcoin.petertodd.org   SERVFAIL, just from Telefonica\n> >> >> testnet-seed.bluematt.me             OK (but only returns one node)\n> >> >>\n> >> >> Note: Telefonica is one of Europe's largest ISPs.\n> >> >>\n> >> >> I would try to improve DNS myself, but I'm not capable of writing C.\n> My\n> >> >> \"fix\" would be to reimplement everything in Java -- I doubt you guys\n> >> >> would be happy with that.\n> >> >>\n> >> >>\n> >> >>\n> >> >>\n> ------------------------------------------------------------------------------\n> >> >> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For\n> FREE\n> >> >> Instantly run your Selenium tests across 300+ browser/OS combos.\n> >> >> Get unparalleled scalability from the best Selenium testing platform\n> >> >> available\n> >> >> Simple to use. Nothing to install. Get started now for free.\"\n> >> >> http://p.sf.net/sfu/SauceLabs\n> >> >>\n> >> >\n> >> >\n> >> >\n> >> >\n> >> >\n> ------------------------------------------------------------------------------\n> >> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> >> > Get unparalleled scalability from the best Selenium testing platform\n> >> > available\n> >> > Simple to use. Nothing to install. Get started now for free.\"\n> >> > http://p.sf.net/sfu/SauceLabs\n> >> > _______________________________________________\n> >> > Bitcoin-development mailing list\n> >> > Bitcoin-development at lists.sourceforge.net\n> >> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >>\n> >>\n> >>\n> >>\n> ------------------------------------------------------------------------------\n> >> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> >> Instantly run your Selenium tests across 300+ browser/OS combos.\n> >> Get unparalleled scalability from the best Selenium testing platform\n> >> available\n> >> Simple to use. Nothing to install. Get started now for free.\"\n> >> http://p.sf.net/sfu/SauceLabs\n> >> _______________________________________________\n> >> Bitcoin-development mailing list\n> >> Bitcoin-development at lists.sourceforge.net\n> >> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> > Get unparalleled scalability from the best Selenium testing platform\n> > available\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/4b719244/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-17T11:39:40",
                "message_text_only": "I think the best way to contribute to the infrastructure is actually\nwhat we're doing: Test the current infrastructure and point out where it\nis not working. Trying to find solutions for problems.\n\nThere is nothing gained by throwing additional hardware at a problem if\nthe problem itself isn't understood well.\n\n\nOn 05/17/2014 02:58 AM, Alex Kotenko wrote:\n> Ok, what do I need to do? How do I host a testnet seed myself? \n> \n> Best regards, \n> Alex Kotenko\n> \n> \n> 2014-05-16 23:02 GMT+01:00 Jeff Garzik <jgarzik at bitpay.com\n> <mailto:jgarzik at bitpay.com>>:\n> \n>     There are only two testnet seeds listed in bitcoind, and one of them\n>     returns SERVFAIL (testnet-seed.bitcoin.petertodd.org\n>     <http://testnet-seed.bitcoin.petertodd.org>) and the other\n>     just returns one A record (testnet-seed.bluematt.me\n>     <http://testnet-seed.bluematt.me>).  No idea what\n>     seeds bitcoinj uses.\n> \n>     If you are going to depend on testnet, especially for an important\n>     demo... contribute to the infrastructure!  This stuff doesn't just fix\n>     itself for free."
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-17T12:02:37",
                "message_text_only": "Agree.\n\nSo, my understanding is that atm we have no working DNS seeds at the\ntestnet3, right? There are two DNS seeds known, of which one is unreachable\natm, and another one is giving just one IP address, which is also a dead\nnode.\n\nIf I'll start a DNS seed of my own and make sure it works well, will this\nhelp?\nI've found this DNS seeder daemon <https://github.com/sipa/bitcoin-seeder>,\nand it seems to be exactly what I need to run a DNS seeder myself.\nSo if my understanding is correct, I'll setup a DNS seeds for mainnet and\nfor testnet at bitcoin-seed.alexykot.me and testnet-seed.alexykot.me, and\nalso a well connected nodes for mainnet and testnet on the same server.\nIs this a good plan? Will this all help?\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-17 12:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n\n> I think the best way to contribute to the infrastructure is actually\n> what we're doing: Test the current infrastructure and point out where it\n> is not working. Trying to find solutions for problems.\n>\n> There is nothing gained by throwing additional hardware at a problem if\n> the problem itself isn't understood well.\n>\n>\n> On 05/17/2014 02:58 AM, Alex Kotenko wrote:\n> > Ok, what do I need to do? How do I host a testnet seed myself?\n> >\n> > Best regards,\n> > Alex Kotenko\n> >\n> >\n> > 2014-05-16 23:02 GMT+01:00 Jeff Garzik <jgarzik at bitpay.com\n> > <mailto:jgarzik at bitpay.com>>:\n> >\n> >     There are only two testnet seeds listed in bitcoind, and one of them\n> >     returns SERVFAIL (testnet-seed.bitcoin.petertodd.org\n> >     <http://testnet-seed.bitcoin.petertodd.org>) and the other\n> >     just returns one A record (testnet-seed.bluematt.me\n> >     <http://testnet-seed.bluematt.me>).  No idea what\n> >     seeds bitcoinj uses.\n> >\n> >     If you are going to depend on testnet, especially for an important\n> >     demo... contribute to the infrastructure!  This stuff doesn't just\n> fix\n> >     itself for free.\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/381d1eda/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-17T12:39:25",
                "message_text_only": "On 05/17/2014 02:02 PM, Alex Kotenko wrote:\n\n> So, my understanding is that atm we have no working DNS seeds at the\n> testnet3, right? There are two DNS seeds known, of which one is\n> unreachable atm, and another one is giving just one IP address, which is\n> also a dead node. \n\nYes, that's my understanding too.\n\n> If I'll start a DNS seed of my own and make sure it works well, will\n> this help? \n\nYes, definately.\n\n> I've found this DNS seeder daemon\n> <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly\n> what I need to run a DNS seeder myself. \n\nAfaik this is what most of the other seeds are using, yes.\n\n> So if my understanding is correct, I'll setup a DNS seeds for mainnet\n> and for testnet at bitcoin-seed.alexykot.me\n> <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me\n> <http://testnet-seed.alexykot.me>, and also a well connected nodes for\n> mainnet and testnet on the same server. \n> Is this a good plan? Will this all help?\n\nSound great! Let me know if you've got something to test."
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-19T20:14:32",
                "message_text_only": "Hmm, I've mostly setup what's promised, testing DNS seeds now. There is one\nproblem I see that I can't really solve myself.\nThis dnsseed daemon cannot serve more than one name at once, which means\nthat I cannot serve testnet and mainnet seeds off one daemon instance which\nmeans I need to buy two IP addresses for it. That's unfortunate as it needs\nmuch more spendings from me to operate, second IP address will cost nearly\nas much as the server itself.\n\n\u200bCan anybody help with this? I cannot into C++ to fix that myself.   \u200b\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-17 13:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n\n> On 05/17/2014 02:02 PM, Alex Kotenko wrote:\n>\n> > So, my understanding is that atm we have no working DNS seeds at the\n> > testnet3, right? There are two DNS seeds known, of which one is\n> > unreachable atm, and another one is giving just one IP address, which is\n> > also a dead node.\n>\n> Yes, that's my understanding too.\n>\n> > If I'll start a DNS seed of my own and make sure it works well, will\n> > this help?\n>\n> Yes, definately.\n>\n> > I've found this DNS seeder daemon\n> > <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly\n> > what I need to run a DNS seeder myself.\n>\n> Afaik this is what most of the other seeds are using, yes.\n>\n> > So if my understanding is correct, I'll setup a DNS seeds for mainnet\n> > and for testnet at bitcoin-seed.alexykot.me\n> > <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me\n> > <http://testnet-seed.alexykot.me>, and also a well connected nodes for\n> > mainnet and testnet on the same server.\n> > Is this a good plan? Will this all help?\n>\n> Sound great! Let me know if you've got something to test.\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/5e7b4deb/attachment.html>"
            },
            {
                "author": "Michael Wozniak",
                "date": "2014-05-19T20:22:46",
                "message_text_only": "I\u2019m not familiar with how the daemon works, however could you set up two daemons listening local on different ports and with a separate daemon or normal dns server that proxies incoming queries to either domain? I don\u2019t know if standard DNS servers would support that, or if you would need a custom proxy application.\n\n-\nMichael Wozniak\n\n\nOn May 19, 2014, at 4:14 PM, Alex Kotenko <alexykot at gmail.com> wrote:\n\n> Hmm, I've mostly setup what's promised, testing DNS seeds now. There is one problem I see that I can't really solve myself. \n> This dnsseed daemon cannot serve more than one name at once, which means that I cannot serve testnet and mainnet seeds off one daemon instance which means I need to buy two IP addresses for it. That's unfortunate as it needs much more spendings from me to operate, second IP address will cost nearly as much as the server itself. \n> \n> \u200bCan anybody help with this? I cannot into C++ to fix that myself.   \u200b\n> \n> \n> Best regards, \n> Alex Kotenko\n> \n> \n> 2014-05-17 13:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n> On 05/17/2014 02:02 PM, Alex Kotenko wrote:\n> \n> > So, my understanding is that atm we have no working DNS seeds at the\n> > testnet3, right? There are two DNS seeds known, of which one is\n> > unreachable atm, and another one is giving just one IP address, which is\n> > also a dead node.\n> \n> Yes, that's my understanding too.\n> \n> > If I'll start a DNS seed of my own and make sure it works well, will\n> > this help?\n> \n> Yes, definately.\n> \n> > I've found this DNS seeder daemon\n> > <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly\n> > what I need to run a DNS seeder myself.\n> \n> Afaik this is what most of the other seeds are using, yes.\n> \n> > So if my understanding is correct, I'll setup a DNS seeds for mainnet\n> > and for testnet at bitcoin-seed.alexykot.me\n> > <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me\n> > <http://testnet-seed.alexykot.me>, and also a well connected nodes for\n> > mainnet and testnet on the same server.\n> > Is this a good plan? Will this all help?\n> \n> Sound great! Let me know if you've got something to test.\n> \n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Robert McKay",
                "date": "2014-05-19T20:36:19",
                "message_text_only": "It should be possible to configure bind as a DNS forwarder.. this can \nbe done in a zone context.. then you can forward the different zones to \ndifferent dnsseed daemons running on different non-public IPs or two \ndifferent ports on the same IP (or on one single non-public IP since \nthere's really no reason to expose the dnsseed directly daemon at all).\n\nRob\n\nOn Mon, 19 May 2014 21:14:32 +0100, Alex Kotenko wrote:\n> Hmm, Ive mostly setup whats promised, testing DNS seeds now. There is\n> one problem I see that I cant really solve myself.\u00a0\n> This dnsseed daemon cannot serve more than one name at once, which\n> means that I cannot serve testnet and mainnet seeds off one daemon\n> instance which means I need to buy two IP addresses for it. Thats\n> unfortunate as it needs much more spendings from me to operate, \n> second\n> IP address will cost nearly as much as the server itself.\u00a0\n>\n> \u200bCan anybody help with this? I cannot into C++ to fix that myself.\n> \u00a0 \u200b\n>\n> Best regards,\u00a0\n>\n> Alex Kotenko\n>\n> 2014-05-17 13:39 GMT+01:00 Andreas Schildbach :\n>\n>> On 05/17/2014 02:02 PM, Alex Kotenko wrote:\n>>\n>> > So, my understanding is that atm we have no working DNS seeds at\n>> the\n>> > testnet3, right? There are two DNS seeds known, of which one is\n>> > unreachable atm, and another one is giving just one IP address,\n>> which is\n>> > also a dead node.\n>>\n>> Yes, thats my understanding too.\n>>\n>> > If Ill start a DNS seed of my own and make sure it works well,\n>> will\n>> > this help?\n>>\n>> Yes, definately.\n>>\n>> > Ive found this DNS seeder daemon\n>> > , and it seems to be exactly\n>>\n>>> what I need to run a DNS seeder myself.\n>>\n>> Afaik this is what most of the other seeds are using, yes.\n>>\n>> > So if my understanding is correct, Ill setup a DNS seeds for\n>> mainnet\n>> > and for testnet at bitcoin-seed.alexykot.me [2]\n>> > and testnet-seed.alexykot.me [4]\n>> > , and also a well connected nodes for\n>>\n>>> mainnet and testnet on the same server.\n>> > Is this a good plan? Will this all help?\n>>\n>> Sound great! Let me know if youve got something to test.\n>>\n>>\n> \n> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For\n>> FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing\n>> platform available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs [6]\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net [7]\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> [8]\n>\n>\n>\n> Links:\n> ------\n> [1] https://github.com/sipa/bitcoin-seeder\n> [2] http://bitcoin-seed.alexykot.me\n> [3] http://bitcoin-seed.alexykot.me\n> [4] http://testnet-seed.alexykot.me\n> [5] http://testnet-seed.alexykot.me\n> [6] http://p.sf.net/sfu/SauceLabs\n> [7] mailto:Bitcoin-development at lists.sourceforge.net\n> [8] https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> [9] mailto:andreas at schildbach.de"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-19T23:49:52",
                "message_text_only": "On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com> wrote:\n> It should be possible to configure bind as a DNS forwarder.. this can\n> be done in a zone context.. then you can forward the different zones to\n> different dnsseed daemons running on different non-public IPs or two\n> different ports on the same IP (or on one single non-public IP since\n> there's really no reason to expose the dnsseed directly daemon at all).\n\nQuite the opposite.  dnsseed data rotates through a lot of addresses\nif available.  Using the bind/zone-xfer system would result in fewer\ntotal addresses going through to the clients, thanks to the addition\nof caching levels that the bind/zone-xfer system brings.\n\nThat said, if the choice is between no-service and bind, bind it is ;p\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Robert McKay",
                "date": "2014-05-20T00:44:29",
                "message_text_only": "On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:\n> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com> \n> wrote:\n>> It should be possible to configure bind as a DNS forwarder.. this \n>> can\n>> be done in a zone context.. then you can forward the different zones \n>> to\n>> different dnsseed daemons running on different non-public IPs or two\n>> different ports on the same IP (or on one single non-public IP since\n>> there's really no reason to expose the dnsseed directly daemon at \n>> all).\n>\n> Quite the opposite.  dnsseed data rotates through a lot of addresses\n> if available.  Using the bind/zone-xfer system would result in fewer\n> total addresses going through to the clients, thanks to the addition\n> of caching levels that the bind/zone-xfer system brings.\n>\n> That said, if the choice is between no-service and bind, bind it is \n> ;p\n\nSetting it up as a zone forwarder causes each request to go through to \nthe dnsseed backend for each request.\n\nRob"
            },
            {
                "author": "Robert McKay",
                "date": "2014-05-20T00:50:30",
                "message_text_only": "On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:\n> On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:\n>> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com>\n>> wrote:\n>>> It should be possible to configure bind as a DNS forwarder.. this\n>>> can\n>>> be done in a zone context.. then you can forward the different \n>>> zones\n>>> to\n>>> different dnsseed daemons running on different non-public IPs or \n>>> two\n>>> different ports on the same IP (or on one single non-public IP \n>>> since\n>>> there's really no reason to expose the dnsseed directly daemon at\n>>> all).\n>>\n>> Quite the opposite.  dnsseed data rotates through a lot of addresses\n>> if available.  Using the bind/zone-xfer system would result in fewer\n>> total addresses going through to the clients, thanks to the addition\n>> of caching levels that the bind/zone-xfer system brings.\n>>\n>> That said, if the choice is between no-service and bind, bind it is\n>> ;p\n>\n> Setting it up as a zone forwarder causes each request to go through \n> to\n> the dnsseed backend for each request.\n\nThis stackoverflow describes a similar situation;\n\nhttp://stackoverflow.com/questions/15338232/how-to-forward-a-subzone\n\nyou can additionally specify the port to forward too;\n\nhttp://www.zytrax.com/books/dns/ch7/queries.html#forwarders\n\nit should be possible to forward to different ports on 127.0.0.1 for \neach dnsseed instance.\n\nRob"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-21T09:23:08",
                "message_text_only": "okay, I've set it up with bind forwarding requests to two dnsseeds running\non separate ports. Though I see a problem with testnet DNS seed itself. It\nruns, but somehow it only returns one IP address. Exactly same DNS seeder\nlooking for mainnet nodes is working fine.\n\nYou can reach seeds through\nmainnet seed:\ndig @node.alexykot.me bitcoin-seed.alexykot.me A\nor directly\ndig -p 8353 @node.alexykot.me bitcoin-seed.alexykot.me A\n\ntestnet seed\ndig @node.alexykot.me testnet-seed.alexykot.me A\nor directly\ndig -p 18353 @node.alexykot.me testnet-seed.alexykot.me A\n\nSo what can be the problem with testnet DNS seeder?\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com>:\n\n> On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:\n> > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:\n> >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com>\n> >> wrote:\n> >>> It should be possible to configure bind as a DNS forwarder.. this\n> >>> can\n> >>> be done in a zone context.. then you can forward the different\n> >>> zones\n> >>> to\n> >>> different dnsseed daemons running on different non-public IPs or\n> >>> two\n> >>> different ports on the same IP (or on one single non-public IP\n> >>> since\n> >>> there's really no reason to expose the dnsseed directly daemon at\n> >>> all).\n> >>\n> >> Quite the opposite.  dnsseed data rotates through a lot of addresses\n> >> if available.  Using the bind/zone-xfer system would result in fewer\n> >> total addresses going through to the clients, thanks to the addition\n> >> of caching levels that the bind/zone-xfer system brings.\n> >>\n> >> That said, if the choice is between no-service and bind, bind it is\n> >> ;p\n> >\n> > Setting it up as a zone forwarder causes each request to go through\n> > to\n> > the dnsseed backend for each request.\n>\n> This stackoverflow describes a similar situation;\n>\n> http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone\n>\n> you can additionally specify the port to forward too;\n>\n> http://www.zytrax.com/books/dns/ch7/queries.html#forwarders\n>\n> it should be possible to forward to different ports on 127.0.0.1 for\n> each dnsseed instance.\n>\n> Rob\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/e7433ef3/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-21T11:03:29",
                "message_text_only": "Great, thanks for this contribution!\n\nDo you plan to have your seeds reachable on port 53 eventually?\nCurrently bitcoinj cannot deal with nonstandard ports I think.\n\n\nOn 05/21/2014 11:23 AM, Alex Kotenko wrote:\n> okay, I've set it up with bind forwarding requests to two dnsseeds\n> running on separate ports. Though I see a problem with testnet DNS seed\n> itself. It runs, but somehow it only returns one IP address. Exactly\n> same DNS seeder looking for mainnet nodes is working fine. \n> \n> You can reach seeds through\n> mainnet seed:\n> dig @node.alexykot.me <http://node.alexykot.me> bitcoin-seed.alexykot.me\n> <http://bitcoin-seed.alexykot.me> A\n> or directly\n> dig -p 8353 @node.alexykot.me <http://node.alexykot.me>\n> bitcoin-seed.alexykot.me <http://bitcoin-seed.alexykot.me> A\n> \n> testnet seed\n> dig @node.alexykot.me <http://node.alexykot.me> testnet-seed.alexykot.me\n> <http://testnet-seed.alexykot.me> A\n> or directly\n> dig -p 18353 @node.alexykot.me <http://node.alexykot.me>\n> testnet-seed.alexykot.me <http://testnet-seed.alexykot.me> A\n> \n> So what can be the problem with testnet DNS seeder?\n> \n> \n> Best regards, \n> Alex Kotenko\n> \n> \n> 2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com\n> <mailto:robert at mckay.com>>:\n> \n>     On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:\n>     > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:\n>     >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com\n>     <mailto:robert at mckay.com>>\n>     >> wrote:\n>     >>> It should be possible to configure bind as a DNS forwarder.. this\n>     >>> can\n>     >>> be done in a zone context.. then you can forward the different\n>     >>> zones\n>     >>> to\n>     >>> different dnsseed daemons running on different non-public IPs or\n>     >>> two\n>     >>> different ports on the same IP (or on one single non-public IP\n>     >>> since\n>     >>> there's really no reason to expose the dnsseed directly daemon at\n>     >>> all).\n>     >>\n>     >> Quite the opposite.  dnsseed data rotates through a lot of addresses\n>     >> if available.  Using the bind/zone-xfer system would result in fewer\n>     >> total addresses going through to the clients, thanks to the addition\n>     >> of caching levels that the bind/zone-xfer system brings.\n>     >>\n>     >> That said, if the choice is between no-service and bind, bind it is\n>     >> ;p\n>     >\n>     > Setting it up as a zone forwarder causes each request to go through\n>     > to\n>     > the dnsseed backend for each request.\n> \n>     This stackoverflow describes a similar situation;\n> \n>     http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone\n> \n>     you can additionally specify the port to forward too;\n> \n>     http://www.zytrax.com/books/dns/ch7/queries.html#forwarders\n> \n>     it should be possible to forward to different ports on 127.0.0.1 for\n>     each dnsseed instance.\n> \n>     Rob\n> \n>     ------------------------------------------------------------------------------\n>     \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>     Instantly run your Selenium tests across 300+ browser/OS combos.\n>     Get unparalleled scalability from the best Selenium testing platform\n>     available\n>     Simple to use. Nothing to install. Get started now for free.\"\n>     http://p.sf.net/sfu/SauceLabs\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-21T11:10:52",
                "message_text_only": "Misunderstanding. Both seeds are available on port 53 via BIND forwarding.\nJust also each DNS seed is available separately on it's own port.\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-21 12:03 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n\n> Great, thanks for this contribution!\n>\n> Do you plan to have your seeds reachable on port 53 eventually?\n> Currently bitcoinj cannot deal with nonstandard ports I think.\n>\n>\n> On 05/21/2014 11:23 AM, Alex Kotenko wrote:\n> > okay, I've set it up with bind forwarding requests to two dnsseeds\n> > running on separate ports. Though I see a problem with testnet DNS seed\n> > itself. It runs, but somehow it only returns one IP address. Exactly\n> > same DNS seeder looking for mainnet nodes is working fine.\n> >\n> > You can reach seeds through\n> > mainnet seed:\n> > dig @node.alexykot.me <http://node.alexykot.me> bitcoin-seed.alexykot.me\n> > <http://bitcoin-seed.alexykot.me> A\n> > or directly\n> > dig -p 8353 @node.alexykot.me <http://node.alexykot.me>\n> > bitcoin-seed.alexykot.me <http://bitcoin-seed.alexykot.me> A\n> >\n> > testnet seed\n> > dig @node.alexykot.me <http://node.alexykot.me> testnet-seed.alexykot.me\n> > <http://testnet-seed.alexykot.me> A\n> > or directly\n> > dig -p 18353 @node.alexykot.me <http://node.alexykot.me>\n> > testnet-seed.alexykot.me <http://testnet-seed.alexykot.me> A\n> >\n> > So what can be the problem with testnet DNS seeder?\n> >\n> >\n> > Best regards,\n> > Alex Kotenko\n> >\n> >\n> > 2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com\n> > <mailto:robert at mckay.com>>:\n> >\n> >     On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:\n> >     > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:\n> >     >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com\n> >     <mailto:robert at mckay.com>>\n> >     >> wrote:\n> >     >>> It should be possible to configure bind as a DNS forwarder.. this\n> >     >>> can\n> >     >>> be done in a zone context.. then you can forward the different\n> >     >>> zones\n> >     >>> to\n> >     >>> different dnsseed daemons running on different non-public IPs or\n> >     >>> two\n> >     >>> different ports on the same IP (or on one single non-public IP\n> >     >>> since\n> >     >>> there's really no reason to expose the dnsseed directly daemon at\n> >     >>> all).\n> >     >>\n> >     >> Quite the opposite.  dnsseed data rotates through a lot of\n> addresses\n> >     >> if available.  Using the bind/zone-xfer system would result in\n> fewer\n> >     >> total addresses going through to the clients, thanks to the\n> addition\n> >     >> of caching levels that the bind/zone-xfer system brings.\n> >     >>\n> >     >> That said, if the choice is between no-service and bind, bind it\n> is\n> >     >> ;p\n> >     >\n> >     > Setting it up as a zone forwarder causes each request to go through\n> >     > to\n> >     > the dnsseed backend for each request.\n> >\n> >     This stackoverflow describes a similar situation;\n> >\n> >     http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone\n> >\n> >     you can additionally specify the port to forward too;\n> >\n> >     http://www.zytrax.com/books/dns/ch7/queries.html#forwarders\n> >\n> >     it should be possible to forward to different ports on 127.0.0.1 for\n> >     each dnsseed instance.\n> >\n> >     Rob\n> >\n> >\n> ------------------------------------------------------------------------------\n> >     \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For\n> FREE\n> >     Instantly run your Selenium tests across 300+ browser/OS combos.\n> >     Get unparalleled scalability from the best Selenium testing platform\n> >     available\n> >     Simple to use. Nothing to install. Get started now for free.\"\n> >     http://p.sf.net/sfu/SauceLabs\n> >     _______________________________________________\n> >     Bitcoin-development mailing list\n> >     Bitcoin-development at lists.sourceforge.net\n> >     <mailto:Bitcoin-development at lists.sourceforge.net>\n> >     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> > Get unparalleled scalability from the best Selenium testing platform\n> available\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> >\n> >\n> >\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/aae8a29d/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-21T11:26:21",
                "message_text_only": "Hmmm, not for me:\n\n$ nslookup bitcoin-seed.alexykot.me\nServer:\t\t127.0.1.1\nAddress:\t127.0.1.1#53\n\n** server can't find bitcoin-seed.alexykot.me: SERVFAIL\n\n$ nslookup testnet-seed.alexykot.me\nServer:\t\t127.0.1.1\nAddress:\t127.0.1.1#53\n\n** server can't find testnet-seed.alexykot.me: SERVFAIL\n\n\nCan you look up in the logfile what requests I just made?\n\n\n\nOn 05/21/2014 01:10 PM, Alex Kotenko wrote:\n> Misunderstanding. Both seeds are available on port 53 via BIND forwarding.\n> Just also each DNS seed is available separately on it's own port.\n> \n> \n> Best regards, \n> Alex Kotenko\n> \n> \n> 2014-05-21 12:03 GMT+01:00 Andreas Schildbach <andreas at schildbach.de\n> <mailto:andreas at schildbach.de>>:\n> \n>     Great, thanks for this contribution!\n> \n>     Do you plan to have your seeds reachable on port 53 eventually?\n>     Currently bitcoinj cannot deal with nonstandard ports I think.\n> \n> \n>     On 05/21/2014 11:23 AM, Alex Kotenko wrote:\n>     > okay, I've set it up with bind forwarding requests to two dnsseeds\n>     > running on separate ports. Though I see a problem with testnet DNS\n>     seed\n>     > itself. It runs, but somehow it only returns one IP address. Exactly\n>     > same DNS seeder looking for mainnet nodes is working fine.\n>     >\n>     > You can reach seeds through\n>     > mainnet seed:\n>     > dig @node.alexykot.me <http://node.alexykot.me>\n>     <http://node.alexykot.me> bitcoin-seed.alexykot.me\n>     <http://bitcoin-seed.alexykot.me>\n>     > <http://bitcoin-seed.alexykot.me> A\n>     > or directly\n>     > dig -p 8353 @node.alexykot.me <http://node.alexykot.me>\n>     <http://node.alexykot.me>\n>     > bitcoin-seed.alexykot.me <http://bitcoin-seed.alexykot.me>\n>     <http://bitcoin-seed.alexykot.me> A\n>     >\n>     > testnet seed\n>     > dig @node.alexykot.me <http://node.alexykot.me>\n>     <http://node.alexykot.me> testnet-seed.alexykot.me\n>     <http://testnet-seed.alexykot.me>\n>     > <http://testnet-seed.alexykot.me> A\n>     > or directly\n>     > dig -p 18353 @node.alexykot.me <http://node.alexykot.me>\n>     <http://node.alexykot.me>\n>     > testnet-seed.alexykot.me <http://testnet-seed.alexykot.me>\n>     <http://testnet-seed.alexykot.me> A\n>     >\n>     > So what can be the problem with testnet DNS seeder?\n>     >\n>     >\n>     > Best regards,\n>     > Alex Kotenko\n>     >\n>     >\n>     > 2014-05-20 1:50 GMT+01:00 Robert McKay <robert at mckay.com\n>     <mailto:robert at mckay.com>\n>     > <mailto:robert at mckay.com <mailto:robert at mckay.com>>>:\n>     >\n>     >     On Tue, 20 May 2014 01:44:29 +0100, Robert McKay wrote:\n>     >     > On Mon, 19 May 2014 19:49:52 -0400, Jeff Garzik wrote:\n>     >     >> On Mon, May 19, 2014 at 4:36 PM, Robert McKay\n>     <robert at mckay.com <mailto:robert at mckay.com>\n>     >     <mailto:robert at mckay.com <mailto:robert at mckay.com>>>\n>     >     >> wrote:\n>     >     >>> It should be possible to configure bind as a DNS\n>     forwarder.. this\n>     >     >>> can\n>     >     >>> be done in a zone context.. then you can forward the different\n>     >     >>> zones\n>     >     >>> to\n>     >     >>> different dnsseed daemons running on different non-public\n>     IPs or\n>     >     >>> two\n>     >     >>> different ports on the same IP (or on one single non-public IP\n>     >     >>> since\n>     >     >>> there's really no reason to expose the dnsseed directly\n>     daemon at\n>     >     >>> all).\n>     >     >>\n>     >     >> Quite the opposite.  dnsseed data rotates through a lot of\n>     addresses\n>     >     >> if available.  Using the bind/zone-xfer system would result\n>     in fewer\n>     >     >> total addresses going through to the clients, thanks to the\n>     addition\n>     >     >> of caching levels that the bind/zone-xfer system brings.\n>     >     >>\n>     >     >> That said, if the choice is between no-service and bind,\n>     bind it is\n>     >     >> ;p\n>     >     >\n>     >     > Setting it up as a zone forwarder causes each request to go\n>     through\n>     >     > to\n>     >     > the dnsseed backend for each request.\n>     >\n>     >     This stackoverflow describes a similar situation;\n>     >\n>     >    \n>     http://stackoverflow.com/questions/15338232/how-to-forward-a-subzone\n>     >\n>     >     you can additionally specify the port to forward too;\n>     >\n>     >     http://www.zytrax.com/books/dns/ch7/queries.html#forwarders\n>     >\n>     >     it should be possible to forward to different ports on\n>     127.0.0.1 for\n>     >     each dnsseed instance.\n>     >\n>     >     Rob\n>     >\n>     >    \n>     ------------------------------------------------------------------------------\n>     >     \"Accelerate Dev Cycles with Automated Cross-Browser Testing -\n>     For FREE\n>     >     Instantly run your Selenium tests across 300+ browser/OS combos.\n>     >     Get unparalleled scalability from the best Selenium testing\n>     platform\n>     >     available\n>     >     Simple to use. Nothing to install. Get started now for free.\"\n>     >     http://p.sf.net/sfu/SauceLabs\n>     >     _______________________________________________\n>     >     Bitcoin-development mailing list\n>     >     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     >     <mailto:Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>>\n>     >     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>     >\n>     >\n>     >\n>     >\n>     >\n>     ------------------------------------------------------------------------------\n>     > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>     > Instantly run your Selenium tests across 300+ browser/OS combos.\n>     > Get unparalleled scalability from the best Selenium testing\n>     platform available\n>     > Simple to use. Nothing to install. Get started now for free.\"\n>     > http://p.sf.net/sfu/SauceLabs\n>     >\n>     >\n>     >\n>     > _______________________________________________\n>     > Bitcoin-development mailing list\n>     > Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>     >\n> \n> \n> \n>     ------------------------------------------------------------------------------\n>     \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>     Instantly run your Selenium tests across 300+ browser/OS combos.\n>     Get unparalleled scalability from the best Selenium testing platform\n>     available\n>     Simple to use. Nothing to install. Get started now for free.\"\n>     http://p.sf.net/sfu/SauceLabs\n>     _______________________________________________\n>     Bitcoin-development mailing list\n>     Bitcoin-development at lists.sourceforge.net\n>     <mailto:Bitcoin-development at lists.sourceforge.net>\n>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Michael Wozniak",
                "date": "2014-05-20T00:45:55",
                "message_text_only": "You would set it up as a forwarder, not as a zone transfer to bind.  That should proxy the request every time and only cache based on any TTL that\u2019s set in the response.\n\nHere\u2019s an example of how it could work:\nhttps://planet.jboss.org/post/setting_up_a_forwarding_dns_server_or_dns_proxy_with_isc_bind\n\n\nOn May 19, 2014, at 7:49 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n\n> On Mon, May 19, 2014 at 4:36 PM, Robert McKay <robert at mckay.com> wrote:\n>> It should be possible to configure bind as a DNS forwarder.. this can\n>> be done in a zone context.. then you can forward the different zones to\n>> different dnsseed daemons running on different non-public IPs or two\n>> different ports on the same IP (or on one single non-public IP since\n>> there's really no reason to expose the dnsseed directly daemon at all).\n> \n> Quite the opposite.  dnsseed data rotates through a lot of addresses\n> if available.  Using the bind/zone-xfer system would result in fewer\n> total addresses going through to the clients, thanks to the addition\n> of caching levels that the bind/zone-xfer system brings.\n> \n> That said, if the choice is between no-service and bind, bind it is ;p\n> \n> -- \n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Rob Golding",
                "date": "2014-05-16T17:17:17",
                "message_text_only": "> > dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n\ndnsseed.bitcoin.dashjr.org. 60  IN      NS      jun.dashjr.org.\nbut jun.dashjr.org isn't responding to dns queries (as at 18.10 GMT\n2014-05-16)\n\nthat would be a fundamental problem with the dns infrastructure for that\ndomain (and the sub-hosts/records) , with the authoritive server not\nreplying to the dns query\n\n> > testnet-seed.bitcoin.petertodd.org\tSERVFAIL, just from Telefonica\n\nSimilarly no response from the alias'd aws dns service on 23.21.243.183\n(testnet-seed-ns1.bitcoin.petertodd.org) from various test locations in\nEurope\n\nIf there's a requirement for a domain & highly redundant dns to hard-code\ninto something, and one of the dev's drops me an email, I can get that\norganised FoC, but these issues look like 'common'\nfirewall/transit/connectivity issues at first glance.\n\nRob"
            },
            {
                "author": "Nick Simpson",
                "date": "2014-05-16T17:34:02",
                "message_text_only": "Luke's server has been having issues with ipv4 routing lately anyway, even ignoring any DNS issues.\n\nNick\n\nOn May 16, 2014 12:17:17 PM CDT, Rob Golding <rob.golding at astutium.com> wrote:\n>> > dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n>\n>dnsseed.bitcoin.dashjr.org. 60  IN      NS      jun.dashjr.org.\n>but jun.dashjr.org isn't responding to dns queries (as at 18.10 GMT\n>2014-05-16)\n>\n>that would be a fundamental problem with the dns infrastructure for\n>that\n>domain (and the sub-hosts/records) , with the authoritive server not\n>replying to the dns query\n>\n>> > testnet-seed.bitcoin.petertodd.org\tSERVFAIL, just from Telefonica\n>\n>Similarly no response from the alias'd aws dns service on 23.21.243.183\n>(testnet-seed-ns1.bitcoin.petertodd.org) from various test locations in\n>Europe\n>\n>If there's a requirement for a domain & highly redundant dns to\n>hard-code\n>into something, and one of the dev's drops me an email, I can get that\n>organised FoC, but these issues look like 'common'\n>firewall/transit/connectivity issues at first glance.\n>\n>Rob\n>\n>\n>------------------------------------------------------------------------------\n>\"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>Instantly run your Selenium tests across 300+ browser/OS combos.\n>Get unparalleled scalability from the best Selenium testing platform\n>available\n>Simple to use. Nothing to install. Get started now for free.\"\n>http://p.sf.net/sfu/SauceLabs\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/f8042474/attachment.html>"
            },
            {
                "author": "Luke Dashjr",
                "date": "2014-05-16T21:46:00",
                "message_text_only": "On Friday, May 16, 2014 5:17:17 PM Rob Golding wrote:\n> > > dnsseed.bitcoin.dashjr.org\t\tSERVFAIL, tried multiple ISPs\n> \n> dnsseed.bitcoin.dashjr.org. 60  IN      NS      jun.dashjr.org.\n> but jun.dashjr.org isn't responding to dns queries (as at 18.10 GMT\n> 2014-05-16)\n> \n> that would be a fundamental problem with the dns infrastructure for that\n> domain (and the sub-hosts/records) , with the authoritive server not\n> replying to the dns query\n\njun.dashjr.org has resolved 130 requests in the past ~12 hours, and I can see \nit resolving more in tcpdump. I do observe two potential problems, however:\n\n- For the past 24-48 hours, there seem to be some significant routing problems \non the IPv4 internet, resulting in people using various diverse ISPs \n(including myself at home) being unable to route to any of my servers. This \nissue doesn't affect IPv6, however.\n\n- The DNS seeder seems to only be responding to requests received over IPv4. \nThis means IPv6 DNS servers get no response. :(\n\nLuke"
            },
            {
                "author": "Matt Corallo",
                "date": "2014-05-16T18:53:26",
                "message_text_only": "This is very strange...when did you run this test and can anyone else\nreproduce this?\n\nMatt\n\nOn 05/15/14 11:50, Andreas Schildbach wrote:\n> testnet-seed.bluematt.me\t\tOK (but only returns one node)"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-16T19:43:08",
                "message_text_only": "For example just now:\n\n$ nslookup testnet-seed.bluematt.me\nServer:\t\t127.0.1.1\nAddress:\t127.0.1.1#53\n\nNon-authoritative answer:\ntestnet-seed.bluematt.me\tcanonical name = bitcoin-seednode.bluematt.me.\nbitcoin-seednode.bluematt.me\tcanonical name = desktopv2.bluematt.me.\nName:\tdesktopv2.bluematt.me\nAddress: 152.23.202.18\n\nAnd that address doesn't connect on port 18333.\n\n\nOn 05/16/2014 08:53 PM, Matt Corallo wrote:\n> This is very strange...when did you run this test and can anyone else\n> reproduce this?\n> \n> Matt\n> \n> On 05/15/14 11:50, Andreas Schildbach wrote:\n>> testnet-seed.bluematt.me\t\tOK (but only returns one node)\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n>"
            },
            {
                "author": "Matt Corallo",
                "date": "2014-05-17T01:06:35",
                "message_text_only": "Oops, missed the lost\n\nOn May 16, 2014 3:04:40 PM EDT, Matt Corallo <bitcoin-list at bluematt.me> wrote:\n>Oh, I missed that this was the testnet seed. Yea, that one never got\n>set\n>up properly and was just pointing to a static seed node (that is now\n>down...). The mainnet seed actually works.\n>\n>On 05/16/14 19:01, Laszlo Hanyecz wrote:\n>> Matt,\n>> \n>> I get the same:\n>> \n>> $ host testnet-seed.bluematt.me\n>> testnet-seed.bluematt.me is an alias for\n>bitcoin-seednode.bluematt.me.\n>> bitcoin-seednode.bluematt.me is an alias for desktopv2.bluematt.me.\n>> desktopv2.bluematt.me has address 152.23.202.18\n>> \n>> \n>> $ dig +trace desktopv2.bluematt.me. any\n>> \n>> ; <<>> DiG 9.8.5-P1 <<>> +trace desktopv2.bluematt.me. any\n>> ;; global options: +cmd\n>> .\t\t\t451792\tIN\tNS\tl.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\td.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\te.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tc.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tj.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tb.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\th.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tf.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tg.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\ta.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\ti.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tm.root-servers.net.\n>> .\t\t\t451792\tIN\tNS\tk.root-servers.net.\n>> ;; Received 512 bytes from 2a00:5540:5014::1#53(2a00:5540:5014::1) in\n>2 ms\n>> \n>> me.\t\t\t172800\tIN\tNS\tb2.me.afilias-nst.org.\n>> me.\t\t\t172800\tIN\tNS\tns2.nic.me.\n>> me.\t\t\t172800\tIN\tNS\ta0.cctld.afilias-nst.info.\n>> me.\t\t\t172800\tIN\tNS\tb0.cctld.afilias-nst.org.\n>> me.\t\t\t172800\tIN\tNS\tc0.cctld.afilias-nst.info.\n>> me.\t\t\t172800\tIN\tNS\td0.cctld.afilias-nst.org.\n>> me.\t\t\t172800\tIN\tNS\ta2.me.afilias-nst.info.\n>> me.\t\t\t172800\tIN\tNS\tns.nic.me.\n>> ;; Received 509 bytes from 2001:7fe::53#53(i.root-servers.net) in\n>1807 ms\n>> \n>> bluematt.me.\t\t86400\tIN\tNS\tns.bluematt.me.\n>> bluematt.me.\t\t86400\tIN\tNS\tns3.he.net.\n>> bluematt.me.\t\t86400\tIN\tNS\tns4.he.net.\n>> bluematt.me.\t\t86400\tIN\tNS\tns1.rollernet.us.\n>> bluematt.me.\t\t86400\tIN\tNS\tns2.rollernet.us.\n>> ;; Received 162 bytes from\n>2001:500:26::1#53(b0.cctld.afilias-nst.org) in 118 ms\n>> \n>> desktopv2.bluematt.me.\t3600\tIN\tA\t152.23.202.18\n>> bluematt.me.\t\t86400\tIN\tNS\tns4.he.net.\n>> bluematt.me.\t\t86400\tIN\tNS\tns3.he.net.\n>> bluematt.me.\t\t86400\tIN\tNS\tns2.rollernet.us.\n>> bluematt.me.\t\t86400\tIN\tNS\tns1.rollernet.us.\n>> bluematt.me.\t\t86400\tIN\tNS\tns.bluematt.me.\n>> ;; Received 178 bytes from 2607:fe70:0:4::b#53(ns2.rollernet.us) in\n>126 ms\n>> \n>> \n>> \n>> \n>> Thanks,\n>> Laszlo\n>> \n>> \n>> On May 16, 2014, at 6:53 PM, Matt Corallo <bitcoin-list at bluematt.me>\n>wrote:\n>> \n>>> This is very strange...when did you run this test and can anyone\n>else\n>>> reproduce this?\n>>>\n>>> Matt\n>>>\n>>> On 05/15/14 11:50, Andreas Schildbach wrote:\n>>>> testnet-seed.bluematt.me\t\tOK (but only returns one node)\n>>>\n>>>\n>------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For\n>FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>>> Get unparalleled scalability from the best Selenium testing platform\n>available\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-19T20:38:45",
                "message_text_only": "Well, it's possible theoretically, but will need another piece of custom\nsoftware that will understand DNS protocol and proxy it correctly based on\nactual incoming DNS queries.\nOn 19 May 2014 21:22, \"Michael Wozniak\" <mw at osfda.org> wrote:\n\n> I\u2019m not familiar with how the daemon works, however could you set up two\n> daemons listening local on different ports and with a separate daemon or\n> normal dns server that proxies incoming queries to either domain? I don\u2019t\n> know if standard DNS servers would support that, or if you would need a\n> custom proxy application.\n>\n> -\n> Michael Wozniak\n>\n>\n> On May 19, 2014, at 4:14 PM, Alex Kotenko <alexykot at gmail.com> wrote:\n>\n> > Hmm, I've mostly setup what's promised, testing DNS seeds now. There is\n> one problem I see that I can't really solve myself.\n> > This dnsseed daemon cannot serve more than one name at once, which means\n> that I cannot serve testnet and mainnet seeds off one daemon instance which\n> means I need to buy two IP addresses for it. That's unfortunate as it needs\n> much more spendings from me to operate, second IP address will cost nearly\n> as much as the server itself.\n> >\n> > \u200bCan anybody help with this? I cannot into C++ to fix that myself.   \u200b\n> >\n> >\n> > Best regards,\n> > Alex Kotenko\n> >\n> >\n> > 2014-05-17 13:39 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n> > On 05/17/2014 02:02 PM, Alex Kotenko wrote:\n> >\n> > > So, my understanding is that atm we have no working DNS seeds at the\n> > > testnet3, right? There are two DNS seeds known, of which one is\n> > > unreachable atm, and another one is giving just one IP address, which\n> is\n> > > also a dead node.\n> >\n> > Yes, that's my understanding too.\n> >\n> > > If I'll start a DNS seed of my own and make sure it works well, will\n> > > this help?\n> >\n> > Yes, definately.\n> >\n> > > I've found this DNS seeder daemon\n> > > <https://github.com/sipa/bitcoin-seeder>, and it seems to be exactly\n> > > what I need to run a DNS seeder myself.\n> >\n> > Afaik this is what most of the other seeds are using, yes.\n> >\n> > > So if my understanding is correct, I'll setup a DNS seeds for mainnet\n> > > and for testnet at bitcoin-seed.alexykot.me\n> > > <http://bitcoin-seed.alexykot.me> and testnet-seed.alexykot.me\n> > > <http://testnet-seed.alexykot.me>, and also a well connected nodes for\n> > > mainnet and testnet on the same server.\n> > > Is this a good plan? Will this all help?\n> >\n> > Sound great! Let me know if you've got something to test.\n> >\n> >\n> >\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> > Get unparalleled scalability from the best Selenium testing platform\n> available\n> > Simple to use. Nothing to install. Get started now for free.\"\n> > http://p.sf.net/sfu/SauceLabs\n> > _______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> >\n> >\n> ------------------------------------------------------------------------------\n> > \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> > Instantly run your Selenium tests across 300+ browser/OS combos.\n> > Get unparalleled scalability from the best Selenium testing platform\n> available\n> > Simple to use. Nothing to install. Get started now for free.\"\n> >\n> http://p.sf.net/sfu/SauceLabs_______________________________________________\n> > Bitcoin-development mailing list\n> > Bitcoin-development at lists.sourceforge.net\n> > https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/cc158b63/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "DNS seeds unstable",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Laszlo Hanyecz",
                "Robert McKay",
                "Alex Kotenko",
                "Andreas Schildbach",
                "Nick Simpson",
                "Mike Hearn",
                "Matt Whitlock",
                "Gregory Maxwell",
                "Luke Dashjr",
                "Michael Wozniak",
                "Matt Corallo",
                "Rob Golding",
                "Drak"
            ],
            "messages_count": 34,
            "total_messages_chars_count": 81386
        }
    },
    {
        "title": "[Bitcoin-development] Someone put a virus signature into the blockchain",
        "thread_messages": [
            {
                "author": "David Shares",
                "date": "2014-05-16T14:22:46",
                "message_text_only": "http://www.reddit.com/r/Bitcoin/comments/25otbt/someone_put_a_virus_signature_in_the_bitcoin/ \n\nI just wanted to pass this into the dev list, in case it hasn't been seen yet. I haven't seen anything about it. Thanks, David. \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140516/4bb0d90c/attachment.html>"
            },
            {
                "author": "Christophe Biocca",
                "date": "2014-05-16T15:19:37",
                "message_text_only": "Here's the relevant github issue: https://github.com/bitcoin/bitcoin/issues/4069\n\nOn Fri, May 16, 2014 at 10:22 AM, David Shares <davidshares at outlook.com> wrote:\n> http://www.reddit.com/r/Bitcoin/comments/25otbt/someone_put_a_virus_signature_in_the_bitcoin/\n>\n> I just wanted to pass this into the dev list, in case it hasn't been seen\n> yet. I haven't seen anything about it. Thanks, David.\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "David Shares",
                "date": "2014-05-16T15:28:09",
                "message_text_only": "Thanks! \n\nSent from my iPhone\n\n> On May 16, 2014, at 11:21 AM, \"Christophe Biocca\" <christophe.biocca at gmail.com> wrote:\n> \n> Here's the relevant github issue: https://github.com/bitcoin/bitcoin/issues/4069\n> \n>> On Fri, May 16, 2014 at 10:22 AM, David Shares <davidshares at outlook.com> wrote:\n>> http://www.reddit.com/r/Bitcoin/comments/25otbt/someone_put_a_virus_signature_in_the_bitcoin/\n>> \n>> I just wanted to pass this into the dev list, in case it hasn't been seen\n>> yet. I haven't seen anything about it. Thanks, David.\n>> \n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform\n>> available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            }
        ],
        "thread_summary": {
            "title": "Someone put a virus signature into the blockchain",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "David Shares",
                "Christophe Biocca"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 3150
        }
    },
    {
        "title": "[Bitcoin-development] Paper Currency",
        "thread_messages": [
            {
                "author": "Jerry Felix",
                "date": "2014-05-17T15:31:02",
                "message_text_only": "It seems to me that there's a huge need for a paper currency that is counterfeit-resistant, inexpensive to print, internationally recognized (border-less), fits in a wallet, and machine readable.\n\nI pitched this idea at the Cincinnati Bitcoin meetup last week, and I didn't get thrown out, so I took the time to document a proposed standard to accomplish this.  I've put my ideas into BIP format, so that you can see what I have in mind, although I picked some \nBIP numbers myself that seem to be available.  Call them \"proposed proposals\", or \"provisional BIPs\".  I've numbered them provisionally BIP-80 to BIP-84.\n\nIf you guys think that this idea has some merit, let's discuss.\n\nhttps://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki\n\nSubmitted with humility and some fear of getting laughed out of here...\n- Jerry\n\n\n \t\t \t   \t\t  \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/bd4ac1c8/attachment.html>"
            },
            {
                "author": "Matt Whitlock",
                "date": "2014-05-17T15:45:03",
                "message_text_only": "On Saturday, 17 May 2014, at 11:31 am, Jerry Felix wrote:\n> I picked some BIP numbers myself that seem to be available.\n\nI'm quite certain you're explicitly *NOT* supposed to do this."
            },
            {
                "author": "Chris Pacia",
                "date": "2014-05-17T16:07:08",
                "message_text_only": "Since these notes have to be redeemed immediately the number of use\ncases seems limited. I can't really just hand someone the note and walk\naway because they have to scan it to see if it is actually valid.\nOtherwise someone could just pass fake notes if they felt the recipient\nwouldn't redeem them on the spot. This doesn't seem like an improvement\nover just sending the coins via phone.\n\nThe use case with poor internet connection wouldn't work as well since,\npresumably, the recipient would also have poor reception and couldn't\nverify the note was actually loaded with bitcoins.\n\nAlso, I REALLY don't like the name bit reserve.\n\n-Chris\n\nOn 05/17/2014 11:31 AM, Jerry Felix wrote:\n> It seems to me that there's a huge need for a paper currency that is\n> counterfeit-resistant, inexpensive to print, internationally\n> recognized (border-less), fits in a wallet, and machine readable.\n>\n> I pitched this idea at the Cincinnati Bitcoin meetup last week, and I\n> didn't get thrown out, so I took the time to document a proposed\n> standard to accomplish this.  I've put my ideas into BIP format, so\n> that you can see what I have in mind, although I picked some\n> BIP numbers myself that seem to be available.  Call them \"proposed\n> proposals\", or \"provisional BIPs\".  I've numbered them provisionally\n> BIP-80 to BIP-84.\n>\n> If you guys think that this idea has some merit, let's discuss.\n>\n> https://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki\n>\n> Submitted with humility and some fear of getting laughed out of here...\n> - Jerry\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n>\n>\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140517/50728eeb/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-17T16:40:17",
                "message_text_only": "On Sat, May 17, 2014 at 9:07 AM, Chris Pacia <ctpacia at gmail.com> wrote:\n> I can't really just hand someone the note and walk away\n> because they have to scan it to see if it is actually valid.\n\nNot just scan it, but they actually must successfully sweep it\u2014\notherwise they can be trivially double spent. This is especially bad\nsince any prior bearer can perform such an attack. E.g. record the\nprivate key of everyone that passes through your hands and then\ndoublespend race any redemption that happens >24 hours after you spend\nthem. The wrong person would likely be blamed and even if you were\nblamed you could plausibly deny it (\"Must have been the guy that gave\nit to me!\").\n\nOthercoin seems to have much better properties in the space of offline\ntransactions: https://bitcointalk.org/index.php?topic=319146.0\n\nSeparately, Cassius also ran into some regulatory issues selling\nphysical bitcoin artifacts. Especially printing things that seem to be\nredeemable for a named USD value sounds especially problematic.\n\nSome random comments\u2014 The base58 encoding is fairly human unfriendly.\nIt's fine for something being copy and pasted, but I've found typing\nor reading it works poorly due to mixed case.  I expect the A/B side\nto be difficult to educate users about. \"This side is private\" is more\neasily understood, you could just pick one of your sides and call it\nprivate.  I find it kind of odd that this design seems to have no\nfacility for checking its txouts without recovering the private key,\nthough considering no one should rely on such a measurement without\nsweeping perhaps thats for the best.\n\n(As far as the numbering goes, I think you should be calling these\ndraft-felix-paper-currency  etc. As a matter of hygienic practice I\nwill not assign a matching bip number for something that went public\nwith a number outside of the assignment.)"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-18T11:47:11",
                "message_text_only": "I had a long discussion recently with somebody who wants and has resources\nto do exactly this - paper currency representing bitcoins. Yet we've been\nthinking mostly about a centralized solution, where one party is producing\nand maintaining paper currency, with bitcoins tied to each note verifiable\nvia blockchain.\n\nThe points we've ended up is that it needs to be:\n- reloadable\n- NFC based\nSo anybody can verify any notes instantly by just touching it with his\nphone, and so merchants could redeem the notes at the moment of accepting\nit, convert it into fully online bitcoins and avoid costs of maintaining\npaper money turnover. Probably merchant would sell back redeemed\nempty notes to the issuer for a price of the note issue, and issuer will\nrecharge it and put back into circulation.\n\nOne problem we couldn't figure out here though - how to protect the notes\nfrom unauthorized redeem. Like if someone else tries to reach your wallet\nwith his own NFC - how can we distinguish between deliberate redeem by\nowner and fraudulent redeem by anybody else with custom built long\nrange NFC antenna? Any ideas?\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-17 17:40 GMT+01:00 Gregory Maxwell <gmaxwell at gmail.com>:\n\n> On Sat, May 17, 2014 at 9:07 AM, Chris Pacia <ctpacia at gmail.com> wrote:\n> > I can't really just hand someone the note and walk away\n> > because they have to scan it to see if it is actually valid.\n>\n> Not just scan it, but they actually must successfully sweep it\u2014\n> otherwise they can be trivially double spent. This is especially bad\n> since any prior bearer can perform such an attack. E.g. record the\n> private key of everyone that passes through your hands and then\n> doublespend race any redemption that happens >24 hours after you spend\n> them. The wrong person would likely be blamed and even if you were\n> blamed you could plausibly deny it (\"Must have been the guy that gave\n> it to me!\").\n>\n> Othercoin seems to have much better properties in the space of offline\n> transactions: https://bitcointalk.org/index.php?topic=319146.0\n>\n> Separately, Cassius also ran into some regulatory issues selling\n> physical bitcoin artifacts. Especially printing things that seem to be\n> redeemable for a named USD value sounds especially problematic.\n>\n> Some random comments\u2014 The base58 encoding is fairly human unfriendly.\n> It's fine for something being copy and pasted, but I've found typing\n> or reading it works poorly due to mixed case.  I expect the A/B side\n> to be difficult to educate users about. \"This side is private\" is more\n> easily understood, you could just pick one of your sides and call it\n> private.  I find it kind of odd that this design seems to have no\n> facility for checking its txouts without recovering the private key,\n> though considering no one should rely on such a measurement without\n> sweeping perhaps thats for the best.\n>\n> (As far as the numbering goes, I think you should be calling these\n> draft-felix-paper-currency  etc. As a matter of hygienic practice I\n> will not assign a matching bip number for something that went public\n> with a number outside of the assignment.)\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/ec456939/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-18T12:14:51",
                "message_text_only": "> One problem we couldn't figure out here though - how to protect the\n> notes from unauthorized redeem. Like if someone else tries to reach your\n> wallet with his own NFC - how can we distinguish between deliberate\n> redeem by owner and fraudulent redeem by anybody else with custom built\n> long range NFC antenna? Any ideas?\n\nI think you'd need multiple factors to protect against that attack. Like\nencrypting with a key that is printed on the note as an QR code."
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-18T12:51:57",
                "message_text_only": "Yes, but it must not sacrifice usability. It's paper money, people are used\nto it and they have rather high standard of expectations in this area. Any\nusbility sacrifices in this area result into failure of the whole thing.\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-18 13:14 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n\n> > One problem we couldn't figure out here though - how to protect the\n> > notes from unauthorized redeem. Like if someone else tries to reach your\n> > wallet with his own NFC - how can we distinguish between deliberate\n> > redeem by owner and fraudulent redeem by anybody else with custom built\n> > long range NFC antenna? Any ideas?\n>\n> I think you'd need multiple factors to protect against that attack. Like\n> encrypting with a key that is printed on the note as an QR code.\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/a79df162/attachment.html>"
            },
            {
                "author": "Brooks Boyd",
                "date": "2014-05-19T13:06:40",
                "message_text_only": ">> 2014-05-18 13:14 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n>> One problem we couldn't figure out here though - how to protect the\n>> notes from unauthorized redeem. Like if someone else tries to reach your\n>> wallet with his own NFC - how can we distinguish between deliberate\n>> redeem by owner and fraudulent redeem by anybody else with custom built\n>> long range NFC antenna? Any ideas?\n>>\n>> I think you'd need multiple factors to protect against that attack. Like\n>> encrypting with a key that is printed on the note as an QR code.\n>\n>On Sun, May 18, 2014 at 7:51 AM, Alex Kotenko <alexykot at gmail.com> wrote:\n>\n> Yes, but it must not sacrifice usability. It's paper money, people are used to it and they have rather high standard of expectations in this area. Any usbility sacrifices in this area result into failure of the whole thing.\n>\n> Best regards,\n> Alex Kotenko\n\nOne thought I had reading through this exchange: I think the general\npublic is becoming more aware of the \"hacker with a long range\nantenna\" sort of attack, since credit cards are getting microchips\nthat can be scanned. There's a few videos I've seen of white hat\nhackers demonstrating how a suitcase-sized apparatus carried by\nsomeone walking down the street can scan and make charges on cards in\npeople's pockets as the attacker brushes past. Hence RFID-blocking\nsleeves/wallets are on the market, such that your smart credit card\ncan't make a purchase while its in your wallet. Is a RFID-blocking\nwallet also NFC-blocking? Irregardless of whatever \"future cash\" you\nchoose to carry (be it credit card or bitcoin card/coin/cash), perhaps\nits the wallet/purse that needs an upgrade, to ensure your money\ndoesn't spend itself while its in your pocket, but you can easily\nremove it and spend it conveniently?\n\nBrooks"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-19T13:50:34",
                "message_text_only": "Asking random ignorant stranger to care to protect themselves never works.\nWe need solution that requires strictly zero effort.\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-19 14:06 GMT+01:00 Brooks Boyd <boydb at midnightdesign.ws>:\n\n> >> 2014-05-18 13:14 GMT+01:00 Andreas Schildbach <andreas at schildbach.de>:\n> >> One problem we couldn't figure out here though - how to protect the\n> >> notes from unauthorized redeem. Like if someone else tries to reach your\n> >> wallet with his own NFC - how can we distinguish between deliberate\n> >> redeem by owner and fraudulent redeem by anybody else with custom built\n> >> long range NFC antenna? Any ideas?\n> >>\n> >> I think you'd need multiple factors to protect against that attack. Like\n> >> encrypting with a key that is printed on the note as an QR code.\n> >\n> >On Sun, May 18, 2014 at 7:51 AM, Alex Kotenko <alexykot at gmail.com> wrote:\n> >\n> > Yes, but it must not sacrifice usability. It's paper money, people are\n> used to it and they have rather high standard of expectations in this area.\n> Any usbility sacrifices in this area result into failure of the whole thing.\n> >\n> > Best regards,\n> > Alex Kotenko\n>\n> One thought I had reading through this exchange: I think the general\n> public is becoming more aware of the \"hacker with a long range\n> antenna\" sort of attack, since credit cards are getting microchips\n> that can be scanned. There's a few videos I've seen of white hat\n> hackers demonstrating how a suitcase-sized apparatus carried by\n> someone walking down the street can scan and make charges on cards in\n> people's pockets as the attacker brushes past. Hence RFID-blocking\n> sleeves/wallets are on the market, such that your smart credit card\n> can't make a purchase while its in your wallet. Is a RFID-blocking\n> wallet also NFC-blocking? Irregardless of whatever \"future cash\" you\n> choose to carry (be it credit card or bitcoin card/coin/cash), perhaps\n> its the wallet/purse that needs an upgrade, to ensure your money\n> doesn't spend itself while its in your pocket, but you can easily\n> remove it and spend it conveniently?\n>\n> Brooks\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/66c3777d/attachment.html>"
            },
            {
                "author": "Natanael",
                "date": "2014-05-18T13:50:08",
                "message_text_only": "Now you are talking about Trusted Platform Modules. Like smartcards,\nactually. Devices that won't leak their keys but let the holder spend the\ncoins. It could even have it's own simple SPV wallet client to make it\neasier to handle. And they'd use the attestation features provided by the\nTPM to prove the software it's unmodified top the current holder.\n\nBut then you still have to trust the manufacturer of the device, and you\nhave to trust it has no exploitable side channels.\n\n- Sent from my phone\nDen 18 maj 2014 13:52 skrev \"Alex Kotenko\" <alexykot at gmail.com>:\n\n> I had a long discussion recently with somebody who wants and has resources\n> to do exactly this - paper currency representing bitcoins. Yet we've been\n> thinking mostly about a centralized solution, where one party is producing\n> and maintaining paper currency, with bitcoins tied to each note verifiable\n> via blockchain.\n>\n> The points we've ended up is that it needs to be:\n> - reloadable\n> - NFC based\n> So anybody can verify any notes instantly by just touching it with his\n> phone, and so merchants could redeem the notes at the moment of accepting\n> it, convert it into fully online bitcoins and avoid costs of maintaining\n> paper money turnover. Probably merchant would sell back redeemed\n> empty notes to the issuer for a price of the note issue, and issuer will\n> recharge it and put back into circulation.\n>\n> One problem we couldn't figure out here though - how to protect the notes\n> from unauthorized redeem. Like if someone else tries to reach your wallet\n> with his own NFC - how can we distinguish between deliberate redeem by\n> owner and fraudulent redeem by anybody else with custom built long\n> range NFC antenna? Any ideas?\n>\n>\n> Best regards,\n> Alex Kotenko\n>\n>\n> 2014-05-17 17:40 GMT+01:00 Gregory Maxwell <gmaxwell at gmail.com>:\n>\n>> On Sat, May 17, 2014 at 9:07 AM, Chris Pacia <ctpacia at gmail.com> wrote:\n>> > I can't really just hand someone the note and walk away\n>> > because they have to scan it to see if it is actually valid.\n>>\n>> Not just scan it, but they actually must successfully sweep it\u2014\n>> otherwise they can be trivially double spent. This is especially bad\n>> since any prior bearer can perform such an attack. E.g. record the\n>> private key of everyone that passes through your hands and then\n>> doublespend race any redemption that happens >24 hours after you spend\n>> them. The wrong person would likely be blamed and even if you were\n>> blamed you could plausibly deny it (\"Must have been the guy that gave\n>> it to me!\").\n>>\n>> Othercoin seems to have much better properties in the space of offline\n>> transactions: https://bitcointalk.org/index.php?topic=319146.0\n>>\n>> Separately, Cassius also ran into some regulatory issues selling\n>> physical bitcoin artifacts. Especially printing things that seem to be\n>> redeemable for a named USD value sounds especially problematic.\n>>\n>> Some random comments\u2014 The base58 encoding is fairly human unfriendly.\n>> It's fine for something being copy and pasted, but I've found typing\n>> or reading it works poorly due to mixed case.  I expect the A/B side\n>> to be difficult to educate users about. \"This side is private\" is more\n>> easily understood, you could just pick one of your sides and call it\n>> private.  I find it kind of odd that this design seems to have no\n>> facility for checking its txouts without recovering the private key,\n>> though considering no one should rely on such a measurement without\n>> sweeping perhaps thats for the best.\n>>\n>> (As far as the numbering goes, I think you should be calling these\n>> draft-felix-paper-currency  etc. As a matter of hygienic practice I\n>> will not assign a matching bip number for something that went public\n>> with a number outside of the assignment.)\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform\n>> available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/62c97e9d/attachment.html>"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-18T18:47:46",
                "message_text_only": "Erm, few things here.\n\u200b- I can't see really how to embed electronics capable to run an SPV\ncli\u200bent into printed paper. I know that passive NFC tags can be printed on\npaper, but not actual chips and/or power modules. So we are talking about a\ncompletely different things here.\n- even with paper notes printed proprietarily by some business the notes\nitself still can have routes for independent blockchain-based verification,\nand you won't need to trust anybody to test it. You will have to trust\nsecurity of the notes itself, but this is same as when you trust the phone\nmanufacturer when you're putting your bitcoin wallet on it.\n\n\u200bSo really I see \u200bonly issues of technical security in here, and this is\nthe problem I'm seeking solutions for.\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-18 14:50 GMT+01:00 Natanael <natanael.l at gmail.com>:\n\n> Now you are talking about Trusted Platform Modules. Like smartcards,\n> actually. Devices that won't leak their keys but let the holder spend the\n> coins. It could even have it's own simple SPV wallet client to make it\n> easier to handle. And they'd use the attestation features provided by the\n> TPM to prove the software it's unmodified top the current holder.\n>\n> But then you still have to trust the manufacturer of the device, and you\n> have to trust it has no exploitable side channels.\n>\n> - Sent from my phone\n> Den 18 maj 2014 13:52 skrev \"Alex Kotenko\" <alexykot at gmail.com>:\n> \u200b\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/5a1cb108/attachment.html>"
            },
            {
                "author": "Natanael",
                "date": "2014-05-18T20:10:03",
                "message_text_only": "The problem with not involving any electronics is that somebody needs to\ngenerate a recoverable private key that we have to trust haven't recovered\nthe private key.\n\nThe only plausible solution is multisignature P2SH addresses where you\ntrust several independent entities to not collude instead, where you\ncombine their paper notes into one piece. And then you still don't know if\nall the private keys are recoverable to you (failed print?).\n\n- Sent from my phone\nDen 18 maj 2014 20:48 skrev \"Alex Kotenko\" <alexykot at gmail.com>:\n\n> Erm, few things here.\n> \u200b- I can't see really how to embed electronics capable to run an SPV\n> cli\u200bent into printed paper. I know that passive NFC tags can be printed on\n> paper, but not actual chips and/or power modules. So we are talking about a\n> completely different things here.\n> - even with paper notes printed proprietarily by some business the notes\n> itself still can have routes for independent blockchain-based verification,\n> and you won't need to trust anybody to test it. You will have to trust\n> security of the notes itself, but this is same as when you trust the phone\n> manufacturer when you're putting your bitcoin wallet on it.\n>\n> \u200bSo really I see \u200bonly issues of technical security in here, and this is\n> the problem I'm seeking solutions for.\n>\n>\n> Best regards,\n> Alex Kotenko\n>\n>\n> 2014-05-18 14:50 GMT+01:00 Natanael <natanael.l at gmail.com>:\n>\n>> Now you are talking about Trusted Platform Modules. Like smartcards,\n>> actually. Devices that won't leak their keys but let the holder spend the\n>> coins. It could even have it's own simple SPV wallet client to make it\n>> easier to handle. And they'd use the attestation features provided by the\n>> TPM to prove the software it's unmodified top the current holder.\n>>\n>> But then you still have to trust the manufacturer of the device, and you\n>> have to trust it has no exploitable side channels.\n>>\n>> - Sent from my phone\n>> Den 18 maj 2014 13:52 skrev \"Alex Kotenko\" <alexykot at gmail.com>:\n>> \u200b\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/5b4cc866/attachment.html>"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-19T10:26:35",
                "message_text_only": "Practically I would approach it from a different angle. We need to make\nsure that notes we're accepting are still loaded, but assuming it's NFC\nenabled this is still quite easy for the user and is an acceptable\nusability drawback.\nThen what we need to make sure is that when someone is redeeming the notes\n- he has control over physical object itself, ideally for a period of time.\n\n\u200bWith some active powered electronics in place it would be easy, but how do\nwe do it without anything active in place? \u200b\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-18 21:10 GMT+01:00 Natanael <natanael.l at gmail.com>:\n\n> The problem with not involving any electronics is that somebody needs to\n> generate a recoverable private key that we have to trust haven't recovered\n> the private key.\n>\n> The only plausible solution is multisignature P2SH addresses where you\n> trust several independent entities to not collude instead, where you\n> combine their paper notes into one piece. And then you still don't know if\n> all the private keys are recoverable to you (failed print?).\n>\n> - Sent from my phone\n> Den 18 maj 2014 20:48 skrev \"Alex Kotenko\" <alexykot at gmail.com>:\n>\n> Erm, few things here.\n>> \u200b- I can't see really how to embed electronics capable to run an SPV\n>> cli\u200bent into printed paper. I know that passive NFC tags can be printed on\n>> paper, but not actual chips and/or power modules. So we are talking about a\n>> completely different things here.\n>> - even with paper notes printed proprietarily by some business the notes\n>> itself still can have routes for independent blockchain-based verification,\n>> and you won't need to trust anybody to test it. You will have to trust\n>> security of the notes itself, but this is same as when you trust the phone\n>> manufacturer when you're putting your bitcoin wallet on it.\n>>\n>> \u200bSo really I see \u200bonly issues of technical security in here, and this is\n>> the problem I'm seeking solutions for.\n>>\n>>\n>> Best regards,\n>> Alex Kotenko\n>>\n>>\n>> 2014-05-18 14:50 GMT+01:00 Natanael <natanael.l at gmail.com>:\n>>\n>>> Now you are talking about Trusted Platform Modules. Like smartcards,\n>>> actually. Devices that won't leak their keys but let the holder spend the\n>>> coins. It could even have it's own simple SPV wallet client to make it\n>>> easier to handle. And they'd use the attestation features provided by the\n>>> TPM to prove the software it's unmodified top the current holder.\n>>>\n>>> But then you still have to trust the manufacturer of the device, and you\n>>> have to trust it has no exploitable side channels.\n>>>\n>>> - Sent from my phone\n>>> Den 18 maj 2014 13:52 skrev \"Alex Kotenko\" <alexykot at gmail.com>:\n>>> \u200b\n>>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/d1363baf/attachment.html>"
            },
            {
                "author": "Sergio Lerner",
                "date": "2014-05-19T12:55:20",
                "message_text_only": "Alex,\n\n    I think that what you are talking about more or less something like\nthe Firmcoin\n\n    Check: http://firmcoin.com/?p=92\n\n\nOn 18/05/2014 08:47 a.m., Alex Kotenko wrote:\n>\n>\n> One problem we couldn't figure out here though - how to protect the\n> notes from unauthorized redeem. Like if someone else tries to reach\n> your wallet with his own NFC - how can we distinguish between\n> deliberate redeem by owner and fraudulent redeem by anybody else with\n> custom built long range NFC antenna? Any ideas?\n>\n>\nThe firmcoin has two capacitive buttons that you have to press in\nsequence to redeem to coins. No long range antenna can do that.\n\nBest regards,\n Sergio.\n\nPS:   the device has patents pending\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/705629fa/attachment.html>"
            },
            {
                "author": "Martin Sip",
                "date": "2014-05-19T13:34:05",
                "message_text_only": "Alex,\n\nI think the problem of making paper bitcoins is equivalent to the idea of\ncreating paper implementation of bitcoin sidechain. Hard one in my mind. If\nwe could resolve this one in secure and decentralized way it would be the\nsame breakthrough as bitcoin itself is.\n\nMartin Sip\n\n \n\n \n\nOn 18/05/2014 08:47 a.m., Alex Kotenko wrote:\n\n \n\n \n\nOne problem we couldn't figure out here though - how to protect the notes\nfrom unauthorized redeem. Like if someone else tries to reach your wallet\nwith his own NFC - how can we distinguish between deliberate redeem by owner\nand fraudulent redeem by anybody else with custom built long range NFC\nantenna? Any ideas?\n\n \n\n \n\nThe firmcoin has two capacitive buttons that you have to press in sequence\nto redeem to coins. No long range antenna can do that.\n\nBest regards,\n Sergio.\n\nPS:   the device has patents pending \n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/923bb13c/attachment.html>"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-19T13:53:04",
                "message_text_only": "Hmm, this is firmcoin thing looks like what I mean. They don't have a\nsolution yet, and prices they quote smartcards are unacceptable, but if\nthey will manage to get down in selfcost - that may work. Ok, I'll follow\nthem and see what it will come to.\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-19 13:55 GMT+01:00 Sergio Lerner <sergiolerner at certimix.com>:\n\n>  Alex,\n>\n>     I think that what you are talking about more or less something like\n> the Firmcoin\n>\n>     Check: http://firmcoin.com/?p=92\n>\n>\n>\n> On 18/05/2014 08:47 a.m., Alex Kotenko wrote:\n>\n>\n>\n>  One problem we couldn't figure out here though - how to protect the\n> notes from unauthorized redeem. Like if someone else tries to reach your\n> wallet with his own NFC - how can we distinguish between deliberate redeem\n> by owner and fraudulent redeem by anybody else with custom built long\n> range NFC antenna? Any ideas?\n>\n>\n>   The firmcoin has two capacitive buttons that you have to press in\n> sequence to redeem to coins. No long range antenna can do that.\n>\n> Best regards,\n>  Sergio.\n>\n> PS:   the device has patents pending\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/cd61a2fa/attachment.html>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-18T13:50:56",
                "message_text_only": "Jerry, some feedback on generating space-efficient QR codes. QR codes\nhave 4 possible encodings, see \"Storage\":\nhttp://en.wikipedia.org/wiki/QR_code\n\nThe encoding you're proposing in BIP81 switches you to binary mode\nwithout actually using all the bits. So you'll end up with bloaty QR\ncodes. One fix would be of course use all the available bits.\n\nHowever, binary QR codes cannot be used to auto-dispatch to apps on\nAndroid. If you want a wallet app to automatically open upon scan, you\nneed to encode your data as an URI. That pretty much locks you into\nusing alphanumeric mode QR codes.\n\nI've implemented that in Bitcoin Wallet for efficiently encoding\ntransactions and BIP70 payment requests into QR codes. Since the allowed\nalphabet is 43 chars, I've named the encoding Base43 (it uses the same\nalgorithm as Base58 or Base64). Tell me if you're interested in the details.\n\n\nOn 05/17/2014 05:31 PM, Jerry Felix wrote:\n> It seems to me that there's a huge need for a paper currency that is\n> counterfeit-resistant, inexpensive to print, internationally recognized\n> (border-less), fits in a wallet, and machine readable.\n> \n> I pitched this idea at the Cincinnati Bitcoin meetup last week, and I\n> didn't get thrown out, so I took the time to document a proposed\n> standard to accomplish this.  I've put my ideas into BIP format, so that\n> you can see what I have in mind, although I picked some\n> BIP numbers myself that seem to be available.  Call them \"proposed\n> proposals\", or \"provisional BIPs\".  I've numbered them provisionally\n> BIP-80 to BIP-84.\n> \n> If you guys think that this idea has some merit, let's discuss.\n> \n> https://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki\n> \n> Submitted with humility and some fear of getting laughed out of here...\n> - Jerry\n> \n> \n> \n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T12:21:47",
                "message_text_only": "> Submitted with humility and some fear of getting laughed out of here...\n>\n\nOff topic aside, a bunch of us have lately started to think about the\natmosphere on this list and how to improve it. Nobody should have to fear\ngetting flamed or laughed at for proposing ideas, even if they turn out to\nbe silly ones. Gavin talked about this in his Bitcoin 2014 keynote and\nasked for someone to solve the forum trolling problem.\n\nI don't know if there are any silver bullets per se, but:\n\n1) Please do keep ideas coming. It's easy to mute threads in any good mail\nclient for people who don't care. If anyone gets too aggressive, the rest\nof us will remind them that this is unacceptable.\n\n2) If you're willing to become a list moderator, please get in touch. Gavin\nand I are looking for neutral people who are willing to keep up with this\nlist and help ensure the debate is civilised. Ideally moderation is not\nnecessary, but that's what we tried so far and we keep getting consistent\nfeedback from lots of people that it's not working.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/fc7f6920/attachment.html>"
            },
            {
                "author": "Justus Ranvier",
                "date": "2014-05-19T18:20:40",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 05/19/2014 02:21 PM, Mike Hearn wrote:\n>> Submitted with humility and some fear of getting laughed out of\n>> here...\n>> \n> \n> Off topic aside, a bunch of us have lately started to think about\n> the atmosphere on this list and how to improve it. Nobody should\n> have to fear getting flamed or laughed at for proposing ideas, even\n> if they turn out to be silly ones. Gavin talked about this in his\n> Bitcoin 2014 keynote and asked for someone to solve the forum\n> trolling problem.\n\nYou and Gavin could do a lot better by working on a Bitcoin social\ncontract - a promise of what features will *never* be added (or taken\naway) from Bitcoin, because despite what you say it's not acceptable\nto propose anything at all.\n\nMaybe start with things like how the Bitcoin protocol will never be\nchanged to allow for confiscation of funds, regardless of who might\ndemand such a feature.\n\nYou are willing to promise all users of Bitcoin that you'll never\npropose to steal their coins, aren't you?\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTekt4AAoJEMP3uyY4RQ214QgIAM3DdtAUTG63FG/r9Yg4dWb+\nTXWoXRd9AYDg/SAirF6qV+r6K0vohMv8UJhCpX0OnNSOfxKcgVt2CnG8i3iWBRu1\nV+LRFmaHkJ+vJLaR2lEdFKMc2DVuZUIXGH6jEgVo/dzFJGZ/GcoUwTBrZztjCHDy\nWbpuuIfV2ya1bqkhMOn78pDgkDfXBD7qWQsz0MTzSkPitT0AnUEPxCl3KBWizkdH\nshGwE4YNhRSX+yTBaFHVMqFb9LzExEWgIgkgghddKfJzj9REcw6wiotD3DvYaDl7\nLPegCttg0vdG4YTVlTH0iMwFYC3qrw/Ab43uqLjTy7aWyFjhsPtKceTE3KpGDrk=\n=dRhy\n-----END PGP SIGNATURE-----\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: 0x38450DB5.asc\nType: application/pgp-keys\nSize: 13085 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/5fa20ce6/attachment.bin>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-19T18:39:21",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 19 May 2014 20:20:40 CEST, Justus Ranvier <justusranvier at gmail.com> wrote:\n\n>You and Gavin could do a lot better by working on a Bitcoin social\n>contract - a promise of what features will *never* be added (or taken\n>away) from Bitcoin, because despite what you say it's not acceptable\n>to propose anything at all.\n>\n>Maybe start with things like how the Bitcoin protocol will never be\n>changed to allow for confiscation of funds, regardless of who might\n>demand such a feature.\n\nMight be worth looking into the recent RFC\u00a07258: Pervasive Monitoring Is an Attack for some guidance on how to write such a social contract.\n\nRe: Gavin, note the language in the foundation bylaws:\n\nSection 2.2 The Corporation shall promote and protect both the decentralized, distributed and private nature of the Bitcoin distributed-digital currency and transaction system as well as individual choice, participation and financial privacy when using such systems.\n\nYou might want to do a pull-req to add fungibility and rejection of blacklists to that list; note Adam Back's comments on how fungibility and privacy are inherently linked.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTek/ZMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhYPIB/9/mhDOei8uMGHmzK41\nYdL2ezs4LMPLyCRbo9Eu7MDJAMBaMH4VUbomR0tJVPRS191ifa2F/xGYnbDvk/PG\nrLX86uPPMBxZqnVMgZLeKJkUHm3Zlkm1Ti58bMR8VVQuPazBBpkYtsvk+0+8j9su\nke7Xq+OqUGOC03bM4bxtKyBCy1FrCJuFgZEywKhOjr6boANLctDRBZerPqQ4AcjP\ntHSAAImcesMhjc/N9LJ4MeygszzblYpdsQeiw8jvvyZI7vCSHuKb+hur+kCszYjD\nygfY9QmoNye2yc0GLZd+kXSMwY6gLIvaAFhv2ElMTMiJ7btHtJJfyEaA9Ub4zEEY\nJKeO\n=DSjZ\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Jerry Felix",
                "date": "2014-05-18T19:54:18",
                "message_text_only": "Thanks for all the feedback, and for everyone who read through the docs.  \n\nMy BIP numbering was a blunder, and I have revised the numbering to be PCP-0 (Paper Currency Proposal Number 0) through PCP-4.   I think I was brain-dead on that, sorry, and I am now on PCP.\n\n\n\nPlease allow me to walk you through my thought process on Paper Currency, if you aren't sold that there's merit.\n\nAt present time, paper currency undeniably serves a major purpose in society and has a huge value.  Whether all-digital transfers can totally replace paper is still unknown.\n\nAnd we citizens currently pay a lot to create paper money that is hard to counterfeit.  That too has tons of value, and it can be measured by looking at how much is spent to design, print, and protect fiat currencies from counterfeiting.  And you can add to that cost the societal costs of successful counterfeiting.  US Numbers exceed $800M annually, and are a fraction of the worldwide numbers.\n\nAnd travelers routinely pay currency exchange fees, to acquire paper currency that is accepted in particular locales.  So a single internationally accepted, border-less paper currency would have high value, as it could potentially eliminate exchange fees for travelers.\n\nAdd all the above costs together, and you can see that this is a multi-billion dollar market that Bitcoin could disrupt.   We could actually eliminate all of those costs, while at the same time put Bitcoins into the hands of people in a form that is more familiar.\n\nThat's why this feels like a huge need that can be satisfied by creating a single standard for hard-to-counterfeit, cheap to print, paper currency.    I think the key is a \"single standard\" that the public recognizes.\n\n\n\nI think that there are things that you can do with paper now that can't be done with all-digital transfers.  Maybe my perspective is too US-centric due to tipping customs, but it seems much easier to rapidly leave money for someone without their involvement via paper than digital transfers ever will be.   \n\nA recent video showed a stripper/dancer stop dancing and pose to have her QR Tattoo scanned for payment.  (Not that this is all about strippers and PCP, but...) paper would be a much more practical medium than digital transfer in a lot of scenarios.  \nhttp://blogs-images.forbes.com/kashmirhill/files/2014/05/Bitcoin-stripper-QR-code.jpg \nIf you think about it, whether you slipped her a Bitcoin Paper note or digitally transferred payment to her QR code, in neither case is she able to verify receipt of payment until she steps off stage.  But remember, we're typically talking about a buck or ten or twenty, not 3 bitcoins as shown in the video!\n\n\n\nI saw a Reddit or bitcointalk comment, I believe credited to Mike Caldwell, saying that the author envisioned transactions where the buyer simply handed over private keys (paper wallets), and the merchant had all the electronics.  Reducing the electronics necessary for transfers seems to be desirable.  Should I have to carry a $300 cell phone to be able to carry and spend $20?  This would be moot if 100% of people had their electronic devices with them 100% of the time they need to spend money, and the device is 100% reliable.  I know for me that's not the case.\n\nSo, if the currency medium of paper has value, and Bitcoin can make paper currency more counterfeit-proof, and Bitcoin can eliminate costs, and it's a huge market, and the public is familiar with the paper paradigm, all that's left is for the community to come up with a standard.  That's why I took a crack at it, but I certainly welcome improvements!\n\nQuestions: \n1)  Is paper a valuable medium for currency?  I contend yes.  \n2)  What's the proper tradeoff between convenience and security for paper Bitcoin Notes?  I opted for splitting the private key over two QR codes on opposite sides of the page, as opposed to BIP-38, and I explained my rationale in the documents.\n\nThe rest of the technical details (the splitting algorithm, for instance) need to be resolved.  But I took a crack at it.\nAnd the marketing details (note size, shape, color, layout, text, do we call them \"Bits\", etc.) all need to be resolved.  again, I gave it my best effort, but I'm quite certain the community can do better than me!\n\n\nFirst step, though, is to determine whether there's consensus to define a standard for paper bitcoin currency.\n\n\n\nThanks for hearing me out! \nDocs are here:   \nhttps://github.com/jerfelix/provisional_bips/blob/master/README.mediawiki \n\n\n\n \t\t \t   \t\t  \n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/53cc225f/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Paper Currency",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Natanael",
                "Alex Kotenko",
                "Andreas Schildbach",
                "Martin Sip",
                "Mike Hearn",
                "Sergio Lerner",
                "Brooks Boyd",
                "Peter Todd",
                "Matt Whitlock",
                "Jerry Felix",
                "Gregory Maxwell",
                "Chris Pacia",
                "Justus Ranvier"
            ],
            "messages_count": 21,
            "total_messages_chars_count": 43042
        }
    },
    {
        "title": "[Bitcoin-development] patents...",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2014-05-19T14:47:09",
                "message_text_only": "someone recently wrote (not pointing fingers, nor demanding a spirited\ndefense from that person, its a generic comment):\n>   PS: the device has patents pending\n\nbtw about patents, I wonder if people who feel the need to do that, would\nyou consider putting those patents into like a linux foundation defensive\npool?\n\nI imagine a number of other bitcoin companies have patented things, but if\nyou think ahead a little bit, or look at prior ecash history, patents held\nby individuals or companies can be outright dangerous.  \n\nWe saw this in the past eg the digicash patents after the company went\nbankrupt were sold by the investor to some random large company that parked\nit in its huge pile of patents, didnt use it, and prevented anyone else from\nusing it - stalling Chaum dependent payment innovation for perhaps 5 years\nuntil the thing expired, and a Chaum patent expiry party was held.\n\nJust some food for thought.\n\nhmm Yes and this topic now is more than a bit non dev related.  Sorry about\nthat.  There seems to be no convenient mailing list format for non-dev stuff\nor I would Cc and set Reply-To for example?  (Web forums somewhat suck IMO). \n\nAdam"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T15:09:07",
                "message_text_only": "IMO this list is fine for discussing such topics.\n\nHere are some thoughts. I had to deal with patents at Google (my name is on\na few, not my choice unfortunately). Many aspects of patent law are deeply\nunintuitive, so here's the crash course as I was given it.\n\n\n\nThe first rule of patents is *you do not go looking for patents*. US law is\nwritten in a really stupid way, such that if you knowingly infringe,\ndamages triple. Because America uses the patent office as a revenue source,\nbasically everything you can possibly imagine is covered by some ridiculous\npatent so if you go looking you will always find applicable patents on\nevery idea and then you end up potentially much worse off.\n\nMost companies (Google certainly included) have therefore banned their\nstaff from reading patents, thus ensuring that the whole point of them, the\nsharing of knowledge, doesn't actually function! And it's much better I\nthink if we follow the same policy. So *please do not ever mention that\nsuchandsuch is patented on this list*! When it comes to patent law,\nignorance is bliss. Patents are written in a heavily obfuscated manner such\nthat actually trying to learn from them is hard work anyway.\n\n\nOne reason I wrote up the contracts stuff when I did is to get it out there\ninto the public domain, so people couldn't patent the basics of the Bitcoin\nprotocol. It'll be much better for everyone if new ideas are just put right\nout into the public domain. *Please do not patent Bitcoin related research\nyou do*, even if you think it's for the best:\n\n1) Defensive patenting doesn't work. The whole idea was mutually assured\ndestruction, you hit me I'll hit you type of logic, but the prevalence of\nshell/troll companies killed off that idea. Plus it turns out that big\ncompanies are quite willing to sue each other into oblivion anyway. Once a\npatent exists, it'll be used as a weapon by someone eventually, and\nattempting to \"fight back\" is probably not a workable strategy. Far better\nto ensure the material is simply unpatentable by anyone.\n\n2) Patenting with the intention to sue people using Bitcoin in the same\nway: well, if you plan to do this, there's not much to talk about .... you\nwon't make any friends this way.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/7fd3a88b/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-19T18:27:08",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 19 May 2014 17:09:07 CEST, Mike Hearn <mike at plan99.net> wrote:\n\n>The first rule of patents is *you do not go looking for patents*. US\n>law is\n>written in a really stupid way, such that if you knowingly infringe,\n>damages triple. Because America uses the patent office as a revenue\n>source,\n>basically everything you can possibly imagine is covered by some\n>ridiculous\n>patent so if you go looking you will always find applicable patents on\n>every idea and then you end up potentially much worse off.\n>\n>Most companies (Google certainly included) have therefore banned their\n>staff from reading patents, thus ensuring that the whole point of them,\n>the\n>sharing of knowledge, doesn't actually function! And it's much better I\n>think if we follow the same policy. So *please do not ever mention that\n>suchandsuch is patented on this list*! When it comes to patent law,\n>ignorance is bliss. Patents are written in a heavily obfuscated manner\n>such\n>that actually trying to learn from them is hard work anyway.\n\nMeh. The world is much bigger than the USA. Secondly that rule makes it difficult to educate people about why patents are as bad as they are.\n\nFeel free to continue censoring your own discussion within closed corporate environments. But to say keeping patent discussion off mailing lists is appropriate or wise when the tech news is full of such discussion is silly.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTekz8MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhX0TB/wNZoi5sWj6n3fM7O7T\nemVbrVpuBwOvUEJAFYGmXgb2KXGdheVRhXfcwteQybLG+M+Ra/HAqLq+1YrPmopE\nQeldiSc31KAkVLYXQMIfD6QO1PBlvKP7qPLqBEpCc9ocd8XLppTPQ2K8o5soV8VF\nz6Jt/Hh74xhkhhb/kEzsQ8YKkg+m26WY9Yggu0Qxtb0OTjL86IhEKpH9ijr08jvV\nTKs+PHwou5rt0dT3vqLd8ogb7xihTPx/7tciaXHCOfvxGsEgtqdTsjdHlCJ6cR9a\nDrZcrIQnX+s1+YbHs3P4kyBfzNHBwwVuwaf5W5pU6vFp276jhsgT/65J7PqoRmxK\nAkXg\n=dk4R\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T18:40:25",
                "message_text_only": ">\n> Meh. The world is much bigger than the USA. Secondly that rule makes it\n> difficult to educate people about why patents are as bad as they are.\n>\n\nYou can easily find examples that are not relevant to Bitcoin if you want\nto discuss the patent system in general.\n\n\n> Feel free to continue censoring your own discussion within closed\n> corporate environments. But to say keeping patent discussion off mailing\n> lists is appropriate or wise when the tech news is full of such discussion\n> is silly.\n\n\nIt is both appropriate and wise. Please keep discussion of Bitcoin-relevant\npatents elsewhere.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/ba29396d/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-19T18:43:15",
                "message_text_only": "On Mon, May 19, 2014 at 8:09 AM, Mike Hearn <mike at plan99.net> wrote:\n> The first rule of patents is you do not go looking for patents. US law is\n> written in a really stupid way, such that if you knowingly infringe, damages\n> triple. Because America uses the patent office as a revenue source,\n\nYou have received outdated advice on this point. In Re Seagate\n(http://patentlyo.com/patent/2007/08/in-re-seagate-t.html) this\nprecident was over-turned (and has subsequently been upheld in other\ncases). Avoiding willfull infringement no longer requires paying off a\npatent attorney to get a freedom to operate review.  This isn't to say\nthat reading patents is always productive now:  They're often nearly\ninscrutable (especially to people without substantial patent reading\nexperience), and you may discover potential infringement that creates\nmore work for you to sort out (especially since people without patent\nexperience tend to read patents much more broadly than they actually\nare).\n\nThere are other defensive approaches which are interesting than hoping\nto use patents as a counter attack: For one\u2014 filing a patent gets the\nwork entered in the only database that USPTO examiners are\n_guaranteed_ to consult when doing a prior art search, so it may have\na fighting chance of precluding someone else patenting the same\nmaterial later (they may also search the internet and use other\nresources, but they're guaranteed to consult the existing patents and\napplications). Patents can also be used defensively as leverage in a\nlicensing negotiation: Without your own patents you don't get invited\nto the negotiating table at all with someone else who may hold patents\nin a space that you're working on.  These are somewhat thin advantages\nso great care is required to make sure that things are setup so that\nbadness cannot happen later when inevitable changes of ownership\nhappen."
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-19T18:46:26",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 19 May 2014 20:43:15 CEST, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n\n>There are other defensive approaches which are interesting than hoping\n>to use patents as a counter attack: For one\u2014 filing a patent gets the\n>work entered in the only database that USPTO examiners are\n>_guaranteed_ to consult when doing a prior art search, so it may have\n>a fighting chance of precluding someone else patenting the same\n>material later (they may also search the internet and use other\n>resources, but they're guaranteed to consult the existing patents and\n>applications).\n\nInteresting. Is that to say a viable strategy would be to apply for patents and let the application lapse?\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTelGCMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQPlCACjJgJEyMYMtF+/dJJh\nTgWfVuE7E7QmwgWoQMBo7/5LgO1W5PQt9d3jfQ7gkrdCqTWs4HtA3lcgjdeEQ6ZW\nQvMFG5/xITVi85v2zlE9CteQZXLBTSI+J7VlkjqnJeftQkklvGjiDtNfaDDsTacV\nZNem06V4fmBxNgzqmit2Roilp+NMQb2iM9Ofkr5FbI0cT/kzD/IJd2+Crqsu/uDU\n8r2YQY0bbEf2wqxVdq5TSf1rFqqnWKHB3lD1GGRJ8n5BciBmysZL43jct8YABSgi\nBHFpJP2ii7gz076mRiBb+KwCo+1xKUYNpsJk1m7HND7PjqkXps+JHiNaWdr9vAxx\nraFO\n=L1oX\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T18:49:23",
                "message_text_only": ">\n> Avoiding willfull infringement no longer requires paying off a\n> patent attorney to get a freedom to operate review.  This isn't to say\n> that reading patents is always productive\n\n\nThat case raised the bar a bit, but the core problem remains - if you learn\nabout a patent you definitely violate (and there is very likely to be at\nleast one and possibly many), via whatever means, then by continuing\nbusiness you become a wilful violator. Which makes sense: how could it be\nany other way?\n\nIt still never makes sense to read patents. You can only lose.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/0c928bc1/attachment.html>"
            },
            {
                "author": "Bernd Jendrissek",
                "date": "2014-05-19T22:15:01",
                "message_text_only": "On Mon, May 19, 2014 at 5:09 PM, Mike Hearn <mike at plan99.net> wrote:\n> Most companies (Google certainly included) have therefore banned their staff\n> from reading patents,\n\nBitcoin is not Google though, and applying the same patent protocols\nto Bitcoin as in Google is drawing a false equivalence between the\ntwo. Google can survive single or triple damages, so it makes sense to\nhope that of those patents you necessarily violate due to the size of\nyour operations, they attract only single damages. Google has so many\nfingers in so many pies that violating some patents is a question of\nwhen, not if. Bitcoin has a far narrower scope than trying to take\nover the world (and moon).\n\nHappy reading: http://endsoftpatents.org/2010/03/transcript-tridgell-patents/\n\nTL;DR: If even single damages result in commercial death, you better\npay attention to patents, to reduce the chances of accidentally\nrunning into one.\n\n(But Bitcoin is not ccache either - it's all about money and it isn't\ninconceivable that a patent infringement suit might not result in\ncommercial death. The right answer here isn't as obvious as you make\nit out to be.)"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-20T10:30:37",
                "message_text_only": "On Mon, May 19, 2014 at 10:47 AM, Adam Back <adam at cypherspace.org> wrote:\n> hmm Yes and this topic now is more than a bit non dev related.  Sorry about\n> that.  There seems to be no convenient mailing list format for non-dev stuff\n> or I would Cc and set Reply-To for example?  (Web forums somewhat suck IMO).\n\nThere is the little-used \"bitcoin-list\" on SourceForge that claims a\nrubric of \"general discussion\":\nhttps://sourceforge.net/p/bitcoin/mailman/?source=navbar\n\nI just subscribed there.\n\nWe can \"reboot\" that list with a couple new rules such as\na) be good to each other.  consistent rude behavior gets the boot.\nb) anything related to decentralization, consensus, proven data\nstructures or crypto is on-topic\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            }
        ],
        "thread_summary": {
            "title": "patents...",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Adam Back",
                "Mike Hearn",
                "Peter Todd",
                "Bernd Jendrissek",
                "Gregory Maxwell"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 12160
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin Protocol Specification",
        "thread_messages": [
            {
                "author": "Krzysztof Okupski",
                "date": "2014-05-18T13:35:33",
                "message_text_only": "Dear all,\n\nI'd like to kindly ask, those of you that have a bit of spare time, to\ntake a look at a Bitcoin protocol specification I've written. It is still\nin development and, as some of you have already indicated, needs\nimprovement. I'd be very thankful if some of you could take the\ntime to review it. If there are any errors or suggestions from your\nside, I'd gladly hear them. My e-mail can be found on the front page\nof the document:\n\nhttp://enetium.com/resources/Bitcoin.pdf\n\nWarm greetings,\nChris"
            },
            {
                "author": "Adam Back",
                "date": "2014-05-18T14:38:53",
                "message_text_only": "Suggestion: maybe you want to write and post here a paragraph summarizing\nthe topic of your paper so people can know if they feel qualified and if\nthey need to review it from their interests.\n\nAdam\n\nOn Sun, May 18, 2014 at 03:35:33PM +0200, Krzysztof Okupski wrote:\n>Dear all,\n>\n>I'd like to kindly ask, those of you that have a bit of spare time, to\n>take a look at a Bitcoin protocol specification I've written. It is still\n>in development and, as some of you have already indicated, needs\n>improvement. I'd be very thankful if some of you could take the\n>time to review it. If there are any errors or suggestions from your\n>side, I'd gladly hear them. My e-mail can be found on the front page\n>of the document:\n>\n>http://enetium.com/resources/Bitcoin.pdf\n>\n>Warm greetings,\n>Chris\n>\n>\n>------------------------------------------------------------------------------\n>\"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>Instantly run your Selenium tests across 300+ browser/OS combos.\n>Get unparalleled scalability from the best Selenium testing platform available\n>Simple to use. Nothing to install. Get started now for free.\"\n>http://p.sf.net/sfu/SauceLabs\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Protocol Specification",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Adam Back",
                "Krzysztof Okupski"
            ],
            "messages_count": 2,
            "total_messages_chars_count": 1877
        }
    },
    {
        "title": "[Bitcoin-development] good bitcoin summary paper in more detail than Satoshi paper (Re: Bitcoin Protocol Specification)",
        "thread_messages": [
            {
                "author": "Adam Back",
                "date": "2014-05-20T17:48:38",
                "message_text_only": "Actually I read the paper now as it was linked somewhere else also, and its\nquite good.  So now I can summarize it:\n\nIts a writeup of bitcoin in 29 pages, which covers things in the original\nbitcoin paper but with more detail of formats, scripts with some examples,\nformats etc.  Quite nice paper, concise presentation of many bitcoin details\nthat are otherwise hard to put together, requiring examining source or\nasking people knowledgeable at algorithm/code level.\n\n>>http://enetium.com/resources/Bitcoin.pdf\n\nAdam\n\nOn Sun, May 18, 2014 at 04:38:53PM +0200, Adam Back wrote:\n>Suggestion: maybe you want to write and post here a paragraph summarizing\n>the topic of your paper so people can know if they feel qualified and if\n>they need to review it from their interests.\n>\n>Adam\n>\n>On Sun, May 18, 2014 at 03:35:33PM +0200, Krzysztof Okupski wrote:\n>>Dear all,\n>>\n>>I'd like to kindly ask, those of you that have a bit of spare time, to\n>>take a look at a Bitcoin protocol specification I've written. It is still\n>>in development and, as some of you have already indicated, needs\n>>improvement. I'd be very thankful if some of you could take the\n>>time to review it. If there are any errors or suggestions from your\n>>side, I'd gladly hear them. My e-mail can be found on the front page\n>>of the document:\n>>\n>>http://enetium.com/resources/Bitcoin.pdf\n>>\n>>Warm greetings,\n>>Chris\n>>\n>>\n>>------------------------------------------------------------------------------\n>>\"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>Instantly run your Selenium tests across 300+ browser/OS combos.\n>>Get unparalleled scalability from the best Selenium testing platform available\n>>Simple to use. Nothing to install. Get started now for free.\"\n>>http://p.sf.net/sfu/SauceLabs\n>>_______________________________________________\n>>Bitcoin-development mailing list\n>>Bitcoin-development at lists.sourceforge.net\n>>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>------------------------------------------------------------------------------\n>\"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>Instantly run your Selenium tests across 300+ browser/OS combos.\n>Get unparalleled scalability from the best Selenium testing platform available\n>Simple to use. Nothing to install. Get started now for free.\"\n>http://p.sf.net/sfu/SauceLabs\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            }
        ],
        "thread_summary": {
            "title": "good bitcoin summary paper in more detail than Satoshi paper (Re: Bitcoin Protocol Specification)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Adam Back"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 2573
        }
    },
    {
        "title": "[Bitcoin-development] About the small number of bitcoin nodes",
        "thread_messages": [
            {
                "author": "Ra\u00fal Mart\u00ednez",
                "date": "2014-05-18T17:43:44",
                "message_text_only": "About the small number of bitcoin nodes:\nHi, I read the message that Mike Hearn sent to this mailing list some days\nago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.\n\nAs an owner of two Bitcoin Nodes, one in my home computer and one in a\ndedicated server, I believe I can contribute with some of my thoughts and\nideas:\n\n- Allow users to view the bandwith used by Bitcoin Core:\nThis is available in the Bitcoin Core GUI (btw, when the computer is\nrestarted the data gets reseted) but I cant find it in the bitcoind\ncommandline, people that run nodes want to see the amount of GB that they\nhave \"donated\" to the network.\n\n- Educate users about the correct setup of a bitcoin node:\nAdd a page in the bitcoin.org website with a tutorial about running Bitcoin\nCore with the ports opened, about runing bitcoind, etc. This guide shoud\nnot be for regular users but for advanced ones.\n\n- bitcoind and Bitcoin Core should create a bitcoin.conf file on the first\nstart:\nThe first time the software should create a default config file with a\nrandom RCP password and username (user can change it later) and the config\nfile should be commented so the user can know how to change configurations.\nThis is very useful in setups without GUI, for example in Ubuntu Server.\n\n- bitcoind and Bitcoin Core should be in Linux repos:\nPeople want to type \"yum install bitcoind\" or \"apt-get install bitcoind\"\nand install bitcoin. No one wants to follow a tutorial made by somewho\nsaying that you have to add external repos to install bitcoin in your\nserver.\nFor example Electrum has been added to Ubuntu software center recently.\nBitcoin Core an bitcoind should be on CentOS, Debian, Ubuntu and Ubuntu\nServer repos.\n\n- Create a \"grafical interface\" for bitcoind on Linux servers:\nCreate a command, for example \"bitcoind show\" that shows a nice summary in\nyour Terminal (Console) with all the data that a node administrator wants\nto know.\nWhen I say \"grafical interface\" I mean like \"top\" command, an interface\nmade out of characters in ASCII.\n\n- Split Bitcoin Wallet from Bitcoin Node:\nI believe that this is planned, some people want to help the network and\nothers want to keep a wallet, someones want both.\nWith bitcoind you can use the option \"disablewallet=1\" that allows to save\nsome memory.\n\n- Inform users if 8333 port is closed:\nThat should be more visible, I dont mean an alert or warning but some icon.\n\n- Keep connections if bitcoind is restarted:\nI noticed that if I restart bitcoind (to apply new config) my reset to 0\nand take some hours to rise up to ~40. I believe that my peers should\nnotice that I am down for less than ~15 minutes and try to connect again\nfaster.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/d0f1a16a/attachment.html>"
            },
            {
                "author": "Ra\u00fal Mart\u00ednez",
                "date": "2014-05-18T20:15:10",
                "message_text_only": "About the small number of bitcoin nodes:\nHi, I read the message that Mike Hearn sent to this mailing list some days\nago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.\n\nAs an owner of two Bitcoin Nodes, one in my home computer and one in a\ndedicated server, I believe I can contribute with some of my thoughts and\nideas:\n\n- Allow users to view the bandwith used by Bitcoin Core:\nThis is available in the Bitcoin Core GUI (btw, when the computer is\nrestarted the data gets reseted) but I cant find it in the bitcoind\ncommandline, people that run nodes want to see the amount of GB that they\nhave \"donated\" to the network.\n\n- Educate users about the correct setup of a bitcoin node:\nAdd a page in the bitcoin.org website with a tutorial about running Bitcoin\nCore with the ports opened, about runing bitcoind, etc. This guide shoud\nnot be for regular users but for advanced ones.\n\n- bitcoind and Bitcoin Core should create a bitcoin.conf file on the first\nstart:\nThe first time the software should create a default config file with a\nrandom RCP password and username (user can change it later) and the config\nfile should be commented so the user can know how to change configurations.\nThis is very useful in setups without GUI, for example in Ubuntu Server.\n\n- bitcoind and Bitcoin Core should be in Linux repos:\nPeople want to type \"yum install bitcoind\" or \"apt-get install bitcoind\"\nand install bitcoin. No one wants to follow a tutorial made by somewho\nsaying that you have to add external repos to install bitcoin in your\nserver.\nFor example Electrum has been added to Ubuntu software center recently.\nBitcoin Core an bitcoind should be on CentOS, Debian, Ubuntu and Ubuntu\nServer repos.\n\n- Create a \"grafical interface\" for bitcoind on Linux servers:\nCreate a command, for example \"bitcoind show\" that shows a nice summary in\nyour Terminal (Console) with all the data that a node administrator wants\nto know.\nWhen I say \"grafical interface\" I mean like \"top\" command, an interface\nmade out of characters in ASCII.\n\n- Split Bitcoin Wallet from Bitcoin Node:\nI believe that this is planned, some people want to help the network and\nothers want to keep a wallet, someones want both.\nWith bitcoind you can use the option \"disablewallet=1\" that allows to save\nsome memory.\n\n- Inform users if 8333 port is closed:\nThat should be more visible, I dont mean an alert or warning but some icon.\n\n- Keep connections if bitcoind is restarted:\nI noticed that if I restart bitcoind (to apply new config) my reset to 0\nand take some hours to rise up to ~40. I believe that my peers should\nnotice that I am down for less than ~15 minutes and try to connect again\nfaster.\n\nThanks for reading\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140518/a18d3d02/attachment.html>"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-19T07:11:37",
                "message_text_only": "On Sun, May 18, 2014 at 1:43 PM, Ra\u00fal Mart\u00ednez <rme at i-rme.es> wrote:\n> - Allow users to view the bandwith used by Bitcoin Core:\n\n+1 for the sake of transparency\n\nHOWEVER, the impact on this feature RE user population is\nunpredictable.  Users may see bigger than expected numbers, and switch\noff their node.\n\n\n> - Educate users about the correct setup of a bitcoin node:\n\n+1\n\n> - bitcoind and Bitcoin Core should create a bitcoin.conf file on the first\n\nMeh.  I like example configs, perhaps tuned by the distro.  If the\ndistro (_not_ Bitcoin Core upstream) chooses to install a bitcoin.conf\nin the proper location, that's up to them.\n\n\n> - bitcoind and Bitcoin Core should be in Linux repos:\n\nAgreed with conditions:\n1) The distro MUST let bitcoin devs dictate which dependent libs are\nshipped with / built statically into the bitcoin binaries/libs.\n2) The distro MUST permit fresh updates even to older stable distros.\n2) The maintainer(s) MUST be active, and follow bitcoin development,\nrelease status, etc. on a near-daily basis, be able to respond quickly\nif security issues arise, etc.\n\nMatt C seems to do a good job of this in Ubuntu PPA, I'm told.\n\n\n> - Create a \"grafical interface\" for bitcoind on Linux servers:\n> When I say \"grafical interface\" I mean like \"top\" command, an interface made\n> out of characters in ASCII.\n\nThe best path for this is figure out what statistics you want to see,\nand have bitcoind export those raw numbers to any willing consumer.\nThen write your bitcoind-top on top of that.\n\n> - Split Bitcoin Wallet from Bitcoin Node:\n\n+1\n\nIn progress.  Disable-wallet support, at compile time or runtime, was\nthe first step.\n\n> - Inform users if 8333 port is closed:\n\n+1\n\n> - Keep connections if bitcoind is restarted:\n> I noticed that if I restart bitcoind (to apply new config) my reset to 0 and\n> take some hours to rise up to ~40. I believe that my peers should notice\n> that I am down for less than ~15 minutes and try to connect again faster.\n\nNo, you don't want this (and it's not possible in many cases anyway).\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Justus Ranvier",
                "date": "2014-05-19T07:25:07",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 05/19/2014 09:11 AM, Jeff Garzik wrote:\n> Meh.  I like example configs, perhaps tuned by the distro.  If the \n> distro (_not_ Bitcoin Core upstream) chooses to install a\n> bitcoin.conf in the proper location, that's up to them.\n> \n> \n>> - bitcoind and Bitcoin Core should be in Linux repos:\n> \n> Agreed with conditions: 1) The distro MUST let bitcoin devs dictate\n> which dependent libs are shipped with / built statically into the\n> bitcoin binaries/libs. 2) The distro MUST permit fresh updates even\n> to older stable distros. 2) The maintainer(s) MUST be active, and\n> follow bitcoin development, release status, etc. on a near-daily\n> basis, be able to respond quickly if security issues arise, etc.\n\nIf we're talking about making bitcoind behave like a proper daemon,\nthen syslog support should be on the list.\n\nAlso, the option to store things in FHS-compliant directories (not\nsomewhere/.bitcoin)\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTebHTAAoJEMP3uyY4RQ2170IIAMDcx5rj/ZlCTJTOJ2sFttFM\nmiK9t7oewJ73UpgvFniCUngfjk9Tt5knmskQYEMQ5C9Do/P3Deh1gF6MBBuuai5G\nkDNDv51zMEqhwGcqGrPYFMV3NEnBEjullTMgJFvKJf1kZRo7uplwp+eUhILjgSY5\nmZjLIUK8iKDNn+Pi8/2UetAvyaRibHAsAnkJnEeOoKAhxUbtzjgZsj08loCCmJrs\nRleOTLgArdc33e1bwTTwsS9DDvF18RNTACglsc75Oz0ohHyc5U1A1hBfaRuyu6Fv\n8BK+0KPg/zdBCnM1m3aueVukg9p3kIfB2VUVFBHBTo4CPMi91k6oldbfRHy8dXw=\n=SjxO\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Scott Howard",
                "date": "2014-05-19T14:02:22",
                "message_text_only": "On Mon, May 19, 2014 at 3:11 AM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> On Sun, May 18, 2014 at 1:43 PM, Ra\u00fal Mart\u00ednez <rme at i-rme.es> wrote:\n>> - bitcoind and Bitcoin Core should be in Linux repos:\n>\n> Agreed with conditions:\n> 1) The distro MUST let bitcoin devs dictate which dependent libs are\n> shipped with / built statically into the bitcoin binaries/libs.\n> 2) The distro MUST permit fresh updates even to older stable distros.\n> 2) The maintainer(s) MUST be active, and follow bitcoin development,\n> release status, etc. on a near-daily basis, be able to respond quickly\n> if security issues arise, etc.\n>\n> Matt C seems to do a good job of this in Ubuntu PPA, I'm told.\n\nUpdate:\n\n(1) and (3) are doable, however, Debian and Ubuntu policies make (2)\nvery difficult (with the exception of security patches). Micha Bailey\nand I worked to get bitcoin removed from Debian and Ubuntu stable\nreleases because they would not allow (2). There are other mechanisms\nthat could accomplish (2) (backports, volatile, and updates\nrepositories), however they are not enabled by default and require\nuser intervention.\n\nDebian unstable does allow (2) since there is no release, and there is\na package in Debian unstable. That package is blocked from\ntransitioning to a stable release. We've also blacklisted it from\nUbuntu so that Ubuntu doesn't just autoimport and release the Debian\nunstable package in an Ubuntu stable release.\n\nMicha is also working to have all old versions of bitcoin removed from\nprevious released Ubuntu versions.\n\nMatt C's PPA is the best way of getting (1-3) above on Ubuntu, and the\nDebian unstable package is probably the best way of getting (1-3)\nabove in Debian. Both require users to add a line to their apt sources\nlist; the Debian package would also require apt pinning.\n\nRegards,\nScott"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-19T08:48:52",
                "message_text_only": "On Sun, May 18, 2014 at 7:43 PM, Ra\u00fal Mart\u00ednez <rme at i-rme.es> wrote:\n> About the small number of bitcoin nodes:\n> Hi, I read the message that Mike Hearn sent to this mailing list some days\n> ago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.\n>\n> As an owner of two Bitcoin Nodes, one in my home computer and one in a\n> dedicated server, I believe I can contribute with some of my thoughts and\n> ideas:\n>\n> - Allow users to view the bandwith used by Bitcoin Core:\n> This is available in the Bitcoin Core GUI (btw, when the computer is\n> restarted the data gets reseted) but I cant find it in the bitcoind\n> commandline\n\nThat's also possible through the RPC. See \"getnettotals\". You can also\nget stats per peer in \"getpeerinfo\".\n\nI also suggest looking at Jameson Lopp's Statoshi work\n(http://statoshi.info) if you like graphs and more detailed stats.\n\n> - Educate users about the correct setup of a bitcoin node:\n> Add a page in the bitcoin.org website with a tutorial about running Bitcoin\n> Core with the ports opened, about runing bitcoind, etc. This guide shoud not\n> be for regular users but for advanced ones.\n\nYes, such a document would be very welcome.\n\nMaybe coordinate with Sa\u00efvann Carignan or David Harding, it could be\npart of their bitcoin documentation project.\n\n> - bitcoind and Bitcoin Core should create a bitcoin.conf file on the first\n> start:\n> The first time the software should create a default config file with a\n> random RCP password and username (user can change it later) and the config\n> file should be commented so the user can know how to change configurations.\n> This is very useful in setups without GUI, for example in Ubuntu Server.\n\nI agree with you that a default configuration file is useful,\n*however* this does not need to be created by the daemon.\n\nThe idea would be to make bitcoind and its data and configuration\nsystem-wide. See https://github.com/bitcoin/bitcoin/issues/4124\n\nA daemon should not even have write access to its own configuration\nfiles. To follow the example of apache, tor, and such the distribution\ninstalls a default configuration file which the user can adapt.\n\n> - bitcoind and Bitcoin Core should be in Linux repos:\n> People want to type \"yum install bitcoind\" or \"apt-get install bitcoind\" and\n> install bitcoin. No one wants to follow a tutorial made by somewho saying\n> that you have to add external repos to install bitcoin in your server.\n> For example Electrum has been added to Ubuntu software center recently.\n> Bitcoin Core an bitcoind should be on CentOS, Debian, Ubuntu and Ubuntu\n> Server repos.\n\nThis sounds good, but as usual the practice is much uglier.\n\nBitcoind was part of the Ubuntu default repos for a while, but they\ndon't upgrade versions as we need to. This resulted in Ubuntu 12.04\nstable being stuck with 0.3.xx forever. It would be even worse for\nDebian Stable, which has even older versions of packages.\n\nSo right now we need you to add the PPA to get the package for Ubuntu.\nThis is only a small extra step.\n\nThis has to be determined per distribution, though. In some distros\nthis may be perfectly possible. This is just another place where the\nproject is completely dependent on volunteers.\n\n> - Create a \"grafical interface\" for bitcoind on Linux servers:\n> Create a command, for example \"bitcoind show\" that shows a nice summary in\n> your Terminal (Console) with all the data that a node administrator wants to\n> know.\n> When I say \"grafical interface\" I mean like \"top\" command, an interface made\n> out of characters in ASCII.\n\nSounds like a fun project for someone in Python. Most of the\ninformation is already available through RPC (and if not, request\nit!).\n\nSome hacking with ncurses could quickly make a decent tool here. It\ncould be packaged with bitcoin itself but that's not necessary. For\nexample Tor has the tool 'arm' which is a separate package.\n\nYou may want to talk with Shawn Wilkinson he has some ideas in this\ndirection. See also the issue\nhttps://github.com/bitcoin/bitcoin/issues/3122 .\n\n> - Split Bitcoin Wallet from Bitcoin Node:\n> I believe that this is planned, some people want to help the network and\n> others want to keep a wallet, someones want both.\n> With bitcoind you can use the option \"disablewallet=1\" that allows to save\n> some memory.\n\nRunning the node without wallet is already possible since 0.9.0 in two ways:\n\n- ./configure --disable-wallet when compiling\n- run with -disablewallet  (as you say)\n\nThis works both for the GUI and the daemon. You can use the resulting\nnode-only instance (\"edge router\") with any existing SPV wallet.\n\nThere are plans to split off the wallet so that it can run separately,\nbut I wouldn't be holding my breath.\n\nIt feels to me that the general direction things are going in is that\nother wallet projects are advancing much faster than Bitcoin Core's\nwallet and people will likely switch to other wallet projects for\nwallet functionality. Bitcoin Core is moving to an edge router role.\n\nI'm happy to be proven wrong here and would like to see someone work\non bitcoind's wallet, but with the current development resources we\nhave to focus on a what is most urgent: maintaining and improving the\ninfrastructure.\n\n> - Inform users if 8333 port is closed:\n> That should be more visible, I dont mean an alert or warning but some icon.\n\nYes, it would be great of connectivity and proxy problems were\nsignaled in some way.\n\nDetecting whether your port is closed from the outside is an imprecise\nart at most, though, as it relies on information from others.\n\nA first step could be showing the number of incoming and outgoing\nconnections separately in getnetworkinfo. If you have no incoming\nconnections after a while you can be fairly sure that there is no\noutward connectivity.\n\n> - Keep connections if bitcoind is restarted:\n> I noticed that if I restart bitcoind (to apply new config) my reset to 0 and\n> take some hours to rise up to ~40. I believe that my peers should notice\n> that I am down for less than ~15 minutes and try to connect again faster.\n\nWhat incentive do peers have to reconnect to you specifically? The\nnature of a P2P network is that nodes are interchangeable. If a node\nfails or kicks them, they'll just try the next node in the list.\nSometimes that will be you, sometimes it will not.\n\nWladimir"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-19T10:39:48",
                "message_text_only": "On Mon, May 19, 2014 at 10:48 AM, Wladimir <laanwj at gmail.com> wrote:\n>\n> Some hacking with ncurses could quickly make a decent tool here. It\n> could be packaged with bitcoin itself but that's not necessary. For\n> example Tor has the tool 'arm' which is a separate package.\n\nRegarding tor-arm, here are some screenshots:\nhttps://www.atagar.com/arm/screenshots.php\n\nIt shows, among other things:\n- bandwidth up/down graphs\n- CPU usage\n- debug logging (in real time)\n- connected peers+statistics\n- currently active configuration\n\nWould be nice to have a similar tool for bitcoind.\n\nWladimir"
            },
            {
                "author": "Felipe Micaroni Lalli",
                "date": "2014-05-19T10:47:47",
                "message_text_only": "Is the small number of bitcoin nodes a concern? If yes, why? What kind of attack can the network suffer? And where can we find statistical information about the full nodes running?\n\nI guess the only effective incentive to keep a node running would be financial. A kind of proof of stake would be nice on bitcoin. But I have no idea how to begin with.\n\n\n\nFelipe Micaroni Lalli\n\nWalltime: https://walltime.info\nBitcoin Paranoid Android developer\nPGP ID: 0x4c0afccfed5cde14\nBTC: 1LipeR1AjHL6gwE7WQECW4a2H4tuqm768N\n\nOn 19/05/2014, at 07:39, Wladimir <laanwj at gmail.com> wrote:\n\n> On Mon, May 19, 2014 at 10:48 AM, Wladimir <laanwj at gmail.com> wrote:\n>> \n>> Some hacking with ncurses could quickly make a decent tool here. It\n>> could be packaged with bitcoin itself but that's not necessary. For\n>> example Tor has the tool 'arm' which is a separate package.\n> \n> Regarding tor-arm, here are some screenshots:\n> https://www.atagar.com/arm/screenshots.php\n> \n> It shows, among other things:\n> - bandwidth up/down graphs\n> - CPU usage\n> - debug logging (in real time)\n> - connected peers+statistics\n> - currently active configuration\n> \n> Would be nice to have a similar tool for bitcoind.\n> \n> Wladimir\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/430cddf7/attachment.sig>"
            },
            {
                "author": "Bj\u00f8rn \u00d8ivind Bj\u00f8rnsen",
                "date": "2014-05-19T09:26:37",
                "message_text_only": "On 18/05/14 19:43, Ra\u00fal Mart\u00ednez wrote:\n> About the small number of bitcoin nodes:\n> Hi, I read the message that Mike Hearn sent to this mailing list some\n> days ago (2014-04-07 11:34:43) related to the number of bitcoin full nodes.\n> \n> As an owner of two Bitcoin Nodes, one in my home computer and one in a\n> dedicated server, I believe I can contribute with some of my thoughts\n> and ideas:\n> \n> <snip some good ideas>\n\nAs an interested party not intimately familiar with the bitcoin codebase\nwho also spent some time setting up a node a while ago, I would like to\nadd one thing to the above list - network rate limiting.\nWhen I first set up my node, I did not consider this until it started\neating all of my upstream bandwith (on an ADSL line that isn't so fun),\nand I must admit I was a bit disappointed when I found that I would have\nto set this up separately. An option to limit the upstream and\ndownstream network usage (like what tor or most torrent clients does)\nwould be useful.\n\nOn the note of the distro packages, I've so far been pretty happy with\nthe packages provided by Arch Linux - I have no idea if they build it\ncorrectly (with the correct static libs and all), but it seems to work\nfine for the edge router case.\n\nBj\u00f8rn \u00d8ivind\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 901 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/6b7f5512/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T12:15:54",
                "message_text_only": ">\n> As an interested party not intimately familiar with the bitcoin codebase\n> who also spent some time setting up a node a while ago, I would like to\n> add one thing to the above list - network rate limiting.\n\n\nThe problem is that this is easier said than done. Bitcoin Core won't\nnotice a remote peer is working but slow and switch to a faster one, and\neven if it did, it'd just mean throttling your connection would cause all\nremote nodes to give up and hit the other unthrottled peers even more.\n\nThe best way to implement this is to do chain pruning, so your node will\nstill try and shovel bytes as fast as possible, but it's limited by how\nmany bytes it has to shovel. Remote nodes that are pulling down the block\nchain can then switch between nodes depending on what they have available\nin order to try and avoid hitting one node too hard. Nodes that were\noffline for a while and just catching up would prefer nodes that have less\nof the chain.\n\nIt'd be great if someone could experiment with this. The first step is\nextending the p2p protocol so addr broadcasts and version messages include\nhow much of the chain (counting blocks from the head?) the peer is willing\nto serve, and then updating the downloading code so it tries to be smarter\nabout peer selection. Unfortunately all this work is sort of backed up\nwaiting for sipa to finish merging in headers-first downloading.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/e5042642/attachment.html>"
            },
            {
                "author": "Bj\u00f8rn \u00d8ivind Bj\u00f8rnsen",
                "date": "2014-05-19T12:24:35",
                "message_text_only": "On 19/05/14 14:15, Mike Hearn wrote:\n>     As an interested party not intimately familiar with the bitcoin codebase\n>     who also spent some time setting up a node a while ago, I would like to\n>     add one thing to the above list - network rate limiting.\n> \n> \n> The problem is that this is easier said than done. Bitcoin Core won't\n> notice a remote peer is working but slow and switch to a faster one, and\n> even if it did, it'd just mean throttling your connection would cause\n> all remote nodes to give up and hit the other unthrottled peers even more.\n> \n\nDoes this mean that you can currently actively hurt the network by\nadding a node with a very slow upstream / downstream? If so, what is the\nrecommended minimum amount of bandwidth you should allocate for a node?\nI've already throttled mine with QoS based on the script in the contrib/\nfolder.\n\nBj\u00f8rn \u00d8ivind\n\n\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 901 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/9ea04427/attachment.sig>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T12:28:17",
                "message_text_only": ">\n> Does this mean that you can currently actively hurt the network by\n> adding a node with a very slow upstream / downstream?\n\n\nWell, I guess \"hurting\" the network is perhaps a bit dramatic. There are\nalready lots of ways the download process can go wrong and take days. Using\nthe torrent is much faster. But my understanding is that this will slow\ndown the bootstrap process for some people yes. Remote peers won't try and\ndownload in parallel or anything like that.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/8235930b/attachment.html>"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-19T12:44:24",
                "message_text_only": "On Mon, May 19, 2014 at 11:26 AM, Bj\u00f8rn \u00d8ivind Bj\u00f8rnsen\n<bo.bjornsen at gmail.com> wrote:\n> On 18/05/14 19:43, Ra\u00fal Mart\u00ednez wrote:\n>> <snip some good ideas>\n>\n> As an interested party not intimately familiar with the bitcoin codebase\n> who also spent some time setting up a node a while ago, I would like to\n> add one thing to the above list - network rate limiting.\n\nThere is already an (old) patch that implements that. It won't be\nmerged, though, until headers-first and parallel block download is in.\nOnly when the node can download blocks from multiple peers at once it\nis really safe to allow limiting rates.\n\n(sure - there are tricks to limit rates anyway, like the script in\ncontrib/qos, but to have it generally available the block download\nneeds to be more robust first)\n\nWladimir"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T12:53:57",
                "message_text_only": ">\n> (sure - there are tricks to limit rates anyway, like the script in\n> contrib/qos, but to have it generally available the block download\n> needs to be more robust first)\n\n\nOne thing we could consider as a short term solution (if headers\nfirst+parallel downloading will take a while, which seems plausible) is to\nadd a service bit that says \"I have chain data and am willing to Bloom\nfilter it for you, but I won't serve full block data\", and then just\nexclude all of those from the chain download logic. It should not be a deep\nchange to the code headers first is impacting, and would allow home users\nwho may have no tolerance for block chain uploads at all to still take part\nand offer useful services to the network.\n\nI know Pieter likes the idea of an \"archival node\" service bit, or\nsomething like that. I'd been thinking that the stored chain height value\nwould be better, but perhaps we need to divorce \"I have CPU and can filter\"\nfrom \"I have bandwidth and can serve\" more vigorously.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/1d5463ef/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "About the small number of bitcoin nodes",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Felipe Micaroni Lalli",
                "Wladimir",
                "Mike Hearn",
                "Bj\u00f8rn \u00d8ivind Bj\u00f8rnsen",
                "Ra\u00fal Mart\u00ednez",
                "Scott Howard",
                "Justus Ranvier"
            ],
            "messages_count": 14,
            "total_messages_chars_count": 27068
        }
    },
    {
        "title": "[Bitcoin-development] Working on social contracts (was: Paper Currency)",
        "thread_messages": [
            {
                "author": "Gavin Andresen",
                "date": "2014-05-19T19:41:15",
                "message_text_only": "On Mon, May 19, 2014 at 2:20 PM, Justus Ranvier <justusranvier at gmail.com>wrote:\n\n>\n> You and Gavin could do a lot better by working on a Bitcoin social\n> contract - a promise of what features will *never* be added (or taken\n> away) from Bitcoin, because despite what you say it's not acceptable\n> to propose anything at all.\n>\n\nNow I'm really confused.\n\nWhy would Mike or I have the authority to write a \"social contract\" to\npromise anything about future-Bitcoin?\n\nI thought the only \"social contract\" was the decentralized one we have\nalready-- if you don't like something about the code, then don't download\nand run it. Or fork it if you're able.\n\nAs the person who started this mailing list, I DO feel like I have the\nauthority to enforce a social contract of \"no trolling or flaming or\nname-calling\" here. I'd very much like to delegate that authority, though;\nideally to some software algorithm that automatically censors topics or\npeople who don't contribute to a productive discussion.\n\nPS: speaking of productive discussion...\n... please change the Subject line when the topic wanders.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/c3c3e1c9/attachment.html>"
            },
            {
                "author": "Justus Ranvier",
                "date": "2014-05-19T20:01:17",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 05/19/2014 09:41 PM, Gavin Andresen wrote:\n> Now I'm really confused.\n> \n> Why would Mike or I have the authority to write a \"social contract\"\n> to promise anything about future-Bitcoin?\n\nYOU can make promises about YOUR future behavior. So can everyone else.\n\nThe rest of the community can keep track of which developers will and\nwill not make promises about what changes they will and will not\nattempt to implement in Bitcoin, and they can use that information to\nmake informed decisions about which software they will choose to support.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTemMNAAoJEMP3uyY4RQ21KJMH/1MbnPxZ42sjVjEiGSQBkGfE\nE3jt8aAf2DTza8xtybSmT/pHVhx/VUT4UNj9oBZayqJ1eUNr6YMgGCP8J+DxBtN+\nmYH4lTnCiR4+hjO9aux0AWFV+hfZSq7A41QH6wymLa5CyywOtc+i7i3qU5ZGrbtX\n9yBrQpFilvMIlrAOBDlXUwb06FDK17ZHHX4V5sI8PSRYJvoiWCrk12Vqj1Z95UOy\nayzWGwbO30ky6lGirBXfpu2e2WJADE9sc43ecNCDplUMR4D4n9jwAUldEiMSBKg2\npwUNcfj1gaKkscj4QmGKMbq6yug+lrSa8qq/jFsbQq+2pqT4VjlQlrN52wz7Yeg=\n=Jafe\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Gavin Andresen",
                "date": "2014-05-19T20:06:33",
                "message_text_only": "Okey dokey:\n\nI hereby promise and solemnly swear on pain of atomic wedgie that I will\nnever ever work on or endorse any changes to the Bitcoin system that would\nenable any person or group to confiscate, blacklist, or devalue any other\nperson or group's bitcoin.\n\nRE: writing an RFC: go for it. I have much higher tasks on my TODO list.\n\n-- \n--\nGavin Andresen\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/bb54fff4/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-19T20:06:39",
                "message_text_only": "Sorry. I will never agree to the concept of a relevant idea so dangerous it\ncannot be discussed. That's medieval thinking. If you would like to create\na parallel development forum where people have to swear an oath not to\nthink bad thoughts, go right ahead and do so.\n\nBut I'm glad to see you correctly identified yourself as one of the people\ncausing problems on this list. Your vicious attacks are one of the reasons\nwe're now seeing threads that start with \"I hope I don't get flamed or\nlaughed at for this idea but ....\" which is totally unacceptable. I would\nprefer you just unsubscribe, in the hope we get a second chance from some\nof the potential developers we've lost.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140519/03d42df4/attachment.html>"
            },
            {
                "author": "Justus Ranvier",
                "date": "2014-05-19T20:13:01",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 05/19/2014 10:06 PM, Mike Hearn wrote:\n> Sorry. I will never agree to the concept of a relevant idea so\n> dangerous it cannot be discussed. That's medieval thinking. If you\n> would like to create a parallel development forum where people have\n> to swear an oath not to think bad thoughts, go right ahead and do\n> so.\n> \n> But I'm glad to see you correctly identified yourself as one of the\n> people causing problems on this list. Your vicious attacks are one\n> of the reasons we're now seeing threads that start with \"I hope I\n> don't get flamed or laughed at for this idea but ....\" which is\n> totally unacceptable. I would prefer you just unsubscribe, in the\n> hope we get a second chance from some of the potential developers\n> we've lost.\n> \n\nI'm glad to see you correctly identified yourself as well.\n\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTemXNAAoJEMP3uyY4RQ21KNUH/12vTPOPNjQQIunTkNCSqV6P\nhub7mrW/hS4NSlK7P3Laq5qj+qB9ou/uIRCPP6uIhk6scicbukn31nw1p/er0YoQ\nXGFE+SmF+Z5Ysz/5uA1OP9VdjBKggbI6rFVZKbt5DwrFK0gCDMtgcxO2y6CFGR+U\nmFhD9ORf/NdAozFanXSEk81p5OfZqhhnxaPPpPnwQeojtLwE20reLrEcCKy6XMEs\nMtfan+qgPJYTmWiWmDHsrFsz+5HwpkR5giDf4hzW5J1F8Vj+LTPXjGz9Txldk89t\n0dRmYFAtE74QgXsIRvWny9ho4YL/Nn+WHf0Qf3HKh31wrzSea0KFKpPaa32xpKA=\n=jIov\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-19T21:07:38",
                "message_text_only": "On Mon, May 19, 2014 at 1:01 PM, Justus Ranvier <justusranvier at gmail.com> wrote:\n> YOU can make promises about YOUR future behavior. So can everyone else.\n>\n> The rest of the community can keep track of which developers will and\n> will not make promises about what changes they will and will not\n> attempt to implement in Bitcoin, and they can use that information to\n> make informed decisions about which software they will choose to support.\n\nI promise that if bad people show up with a sufficient pointy gun that\nI'll do whatever they tell me to do. I'll make bad proposals, submit\nbackdoors, and argue with querulous folks on mailing lists, diverting\nthem from real development and review work, all as commanded. Maybe\nI'll try to sneak out a warning of some kind, maybe... but with my\nlife or my families or friends lives on the line\u2014 probably not.\n\n... and I think that anyone who tells you otherwise probably just\nhasn't really thought it through.  So what is the point of commitments\nlike that?  People change, people go crazy, people are coerced. Crap\nhappens, justifications are made, life goes on\u2014 or so we hope.\n\nWhat matters is building infrastructure\u2014 both social and technical\u2014\nthat is robust against those sorts of failures. If you're depending on\nindividual developers (including anonymous parties and volunteers) to\nbe somehow made more trustworthy by some promises on a mailing list\nyou've already lost.\n\nIf you care about this you could instead tell us about how much time\nyou promise to spend reviewing technical work to make sure such\nattacks cannot be successful, regardless of their origins. Where are\nyour gitian signatures? I think thats a lot more meaningful, and it\nalso improves security for everyone involved since knowing that such\nattacks can not succeeded removes the motivation for ever trying.\n\nA lot of what Bitcoin is about, for me at least, is building systems\nwhich are as trustless as possible\u2014 ruled by unbreakable rules\nembodied in the software people chose to use out of their own free\nwill and understanding. Or at least thats the ideal we should try to\napproximate. If we're successful the adhomenim you've thrown on this\nlist will be completely pointless\u2014 not because people are trusted to\nnot do evil but because Bitcoin users won't accept technology that\nmakes it possible.\n\nSo please go ahead and assume I'm constantly being evil and trying to\nsneak something in... the technology and security can only be better\nfor it, but please leave the overt attacks at the door. Think\ngentleman spies, not a street fighting death match. The rude attacks\nand characterizations just turn people off and don't uncover actual\nattacks.  Maybe the informal guideline should be one flame-out\npersonal attack per cryptosystem you break, serious bug you uncover,\nor impossible problem you solve. :)"
            },
            {
                "author": "Justus Ranvier",
                "date": "2014-05-19T21:18:54",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nOn 05/19/2014 11:07 PM, Gregory Maxwell wrote:\n> I promise that if bad people show up with a sufficient pointy gun\n> that I'll do whatever they tell me to do. I'll make bad proposals,\n> submit backdoors, and argue with querulous folks on mailing lists,\n> diverting them from real development and review work, all as\n> commanded. Maybe I'll try to sneak out a warning of some kind,\n> maybe... but with my life or my families or friends lives on the\n> line\u2014 probably not.\n> \n> ... and I think that anyone who tells you otherwise probably just \n> hasn't really thought it through.  So what is the point of\n> commitments like that?  People change, people go crazy, people are\n> coerced. Crap happens, justifications are made, life goes on\u2014 or so\n> we hope.\n\nI presume you're familiar with the concept of a warrant canary, so\npresumably you'd also see why public statements such as I was\ndiscussing would be similarly useful.\n\nSocial contracts make it more difficult to hide coercion, which serves\nno one except the attackers.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nComment: Using GnuPG with Thunderbird - http://www.enigmail.net/\n\niQEcBAEBAgAGBQJTenU+AAoJEMP3uyY4RQ21P1UH/2fvYa7Hfv53eXA0k9appRVI\n8KWpH2D95zCo/s6kIeKZtmEzhFWFkKxOHwiHZbD5JokG+U/vUeR8p+SxF1/xUc1X\n1tTNAjfAALz0/KzjPKmlMQCqM5vT4yumHsDusqPuzbPFnJnwFufrAW9vWu9OJacs\nJEv4yoRGNZhR+eM8hCUkDfTtj7D8J3gMYyYds7K4kppiHN2UPRgZT6TCVyCRlThe\n8w9MzYoTAf1WXPmzvSfPhzKMfNV9Y+tjt6ZV+KyLG1ZGLw2EDCxJR1O23QQE8IfK\n53I2RgeFnvcdceoExSfYJj+kNpbPQ/WDVszswO5esoMWJ/E3j5PCBsLdGt+8e7I=\n=BysA\n-----END PGP SIGNATURE-----"
            }
        ],
        "thread_summary": {
            "title": "Working on social contracts (was: Paper Currency)",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Mike Hearn",
                "Gregory Maxwell",
                "Justus Ranvier",
                "Gavin Andresen"
            ],
            "messages_count": 7,
            "total_messages_chars_count": 9661
        }
    },
    {
        "title": "[Bitcoin-development] Why are we bleeding nodes?",
        "thread_messages": [
            {
                "author": "bitcoingrant at gmx.com",
                "date": "2014-05-20T08:15:44",
                "message_text_only": "An HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/198cc1b1/attachment.html>"
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-20T08:42:28",
                "message_text_only": "Yeah I'm expecting port 8333 to go away in China at some point. Actually I\nwas expecting that years ago and was kind of surprised that the suppression\nwas being done via banks. Guess the GFW operators were just slow to catch\nup.\nOn 20 May 2014 10:16, <bitcoingrant at gmx.com> wrote:\n\n> Recently China has updated its firewall blocking bitcoin sites and pools.\n> Whether this is simple blacklist or more sophisticated packet targeting\n> is uncertain, however this update did spefically target VPN handshakes.\n>\n>  *Sent:* Monday, April 07, 2014 at 1:07 PM\n> *From:* Drak <drak at zikula.org>\n> *To:* \"Mike Hearn\" <mike at plan99.net>\n> *Cc:* \"Bitcoin Dev\" <bitcoin-development at lists.sourceforge.net>\n> *Subject:* Re: [Bitcoin-development] Why are we bleeding nodes?\n>  For what it's worth, the number of nodes rose dramatically during the\n> China bullrun (I recall 45k in China alone) and dropped as dramatically as\n> the price after the first PBOC announcement designed to cool down bitcoin\n> trading in China.\n>\n> On 7 April 2014 12:34, Mike Hearn <mike at plan99.net> wrote:\n>>\n>> At the start of February we had 10,000 bitcoin nodes. Now we have 8,500\n>> and still falling:\n>>\n>>    http://getaddr.bitnodes.io/dashboard/chart/?days=60\n>>\n>> I know all the reasons why people *might* stop running a node (uses too\n>> much disk space, bandwidth, lost interest etc). But does anyone have any\n>> idea how we might get more insight into what's really going on? It'd be\n>> convenient if the subVer contained the operating system, as then we could\n>> tell if the bleed was mostly from desktops/laptops (Windows/Mac), which\n>> would be expected, or from virtual servers (Linux), which would be more\n>> concerning.\n>>\n>> When you set up a Tor node, you can add your email address to the config\n>> file and the Tor project sends you emails from time to time about things\n>> you should know about. If we did the same, we could have a little exit\n>> survey: if your node disappears for long enough, we could email the\n>> operator and ask why they stopped.\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Put Bad Developers to Shame\n>> Dominate Development with Jenkins Continuous Integration\n>> Continuously Automate Build, Test & Deployment\n>> Start a new project now. Try Jenkins in the cloud.\n>> http://p.sf.net/sfu/13600_Cloudbees_APR\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>  ------------------------------------------------------------------------------\n> Put Bad Developers to Shame Dominate Development with Jenkins Continuous\n> Integration Continuously Automate Build, Test & Deployment Start a new\n> project now. Try Jenkins in the cloud.\n> http://p.sf.net/sfu/13600_Cloudbees_______________________________________________Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/994e0862/attachment.html>"
            },
            {
                "author": "Eugen Leitl",
                "date": "2014-05-20T14:37:10",
                "message_text_only": "On Tue, May 20, 2014 at 10:15:44AM +0200, bitcoingrant at gmx.com wrote:\n>    Recently China has updated its firewall blocking bitcoin sites and pools.\n>    Whether this is simple blacklist or more\u00a0sophisticated\u00a0packet targeting is\n>    uncertain, however this update did spefically target VPN handshakes.\n\nCould a blockchain fork due to network split happen?"
            },
            {
                "author": "Gmail",
                "date": "2014-05-20T14:52:40",
                "message_text_only": "Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually. \n\nMore likely is that mining interests in china will make special arrangements to circumvent the GFwOC.\n\nUsers who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects. \n\n> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org> \n> \n> Could a blockchain fork due to network split happen?\n>     \n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: smime.p7s\nType: application/pkcs7-signature\nSize: 1593 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/b680ca83/attachment.p7s>"
            },
            {
                "author": "Andy Alness",
                "date": "2014-05-20T18:46:33",
                "message_text_only": "Has there ever been serious discussion on extending the protocol to\nsupport UDP transport? That would allow for NAT traversal and for many\nmore people to run effective nodes. I'm also curious if it could be\nmade improve block propagation time.\n\nOn Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:\n> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.\n>\n> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.\n>\n> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.\n>\n>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>\n>>\n>> Could a blockchain fork due to network split happen?\n>>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n\n\n\n-- \nAndy Alness\nSoftware Engineer\nCoinbase\nSan Francisco, CA"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-20T19:17:46",
                "message_text_only": "Yes, i spec'd out the UDP traversal of the P2P protocol.  It seems\nreasonable especially for \"inv\" messages.\n\nOn Tue, May 20, 2014 at 2:46 PM, Andy Alness <andy at coinbase.com> wrote:\n> Has there ever been serious discussion on extending the protocol to\n> support UDP transport? That would allow for NAT traversal and for many\n> more people to run effective nodes. I'm also curious if it could be\n> made improve block propagation time.\n>\n> On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:\n>> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.\n>>\n>> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.\n>>\n>> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.\n>>\n>>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>\n>>>\n>>> Could a blockchain fork due to network split happen?\n>>>\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>\n>\n>\n> --\n> Andy Alness\n> Software Engineer\n> Coinbase\n> San Francisco, CA\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Andy Alness",
                "date": "2014-05-20T20:09:50",
                "message_text_only": "Awesome! I'm assuming this is it:\nhttps://bitcointalk.org/index.php?topic=156769.0\n\nIt would be interesting (at least to me) to take this a step further\nand offer UDP as a full TCP replacement capable of STUN-assisted NAT\ntraversal and possibly swarmed blockchain syncs. It would require open\nTCP nodes to facilitate \"connection\" establishment. It is obviously a\nnon-trivial amount of work but would be an interesting experiment.\nMaybe BitTorrent's \u00b5TP protocol could be leveraged.\n\nOn Tue, May 20, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> Yes, i spec'd out the UDP traversal of the P2P protocol.  It seems\n> reasonable especially for \"inv\" messages.\n>\n> On Tue, May 20, 2014 at 2:46 PM, Andy Alness <andy at coinbase.com> wrote:\n>> Has there ever been serious discussion on extending the protocol to\n>> support UDP transport? That would allow for NAT traversal and for many\n>> more people to run effective nodes. I'm also curious if it could be\n>> made improve block propagation time.\n>>\n>> On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:\n>>> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.\n>>>\n>>> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.\n>>>\n>>> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.\n>>>\n>>>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>\n>>>>\n>>>> Could a blockchain fork due to network split happen?\n>>>>\n>>>\n>>> ------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>>> Get unparalleled scalability from the best Selenium testing platform available\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>\n>>\n>>\n>>\n>> --\n>> Andy Alness\n>> Software Engineer\n>> Coinbase\n>> San Francisco, CA\n>>\n>> ------------------------------------------------------------------------------\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n>\n> --\n> Jeff Garzik\n> Bitcoin core developer and open source evangelist\n> BitPay, Inc.      https://bitpay.com/\n\n\n\n-- \nAndy Alness\nSoftware Engineer\nCoinbase\nSan Francisco, CA"
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-20T20:22:27",
                "message_text_only": "Indeed -- you must reinvent TCP over UDP, ultimately, to handle blocks\nand large TXs.\n\n\nOn Tue, May 20, 2014 at 4:09 PM, Andy Alness <andy at coinbase.com> wrote:\n> Awesome! I'm assuming this is it:\n> https://bitcointalk.org/index.php?topic=156769.0\n>\n> It would be interesting (at least to me) to take this a step further\n> and offer UDP as a full TCP replacement capable of STUN-assisted NAT\n> traversal and possibly swarmed blockchain syncs. It would require open\n> TCP nodes to facilitate \"connection\" establishment. It is obviously a\n> non-trivial amount of work but would be an interesting experiment.\n> Maybe BitTorrent's \u00b5TP protocol could be leveraged.\n>\n> On Tue, May 20, 2014 at 12:17 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>> Yes, i spec'd out the UDP traversal of the P2P protocol.  It seems\n>> reasonable especially for \"inv\" messages.\n>>\n>> On Tue, May 20, 2014 at 2:46 PM, Andy Alness <andy at coinbase.com> wrote:\n>>> Has there ever been serious discussion on extending the protocol to\n>>> support UDP transport? That would allow for NAT traversal and for many\n>>> more people to run effective nodes. I'm also curious if it could be\n>>> made improve block propagation time.\n>>>\n>>> On Tue, May 20, 2014 at 7:52 AM, Gmail <will.yager at gmail.com> wrote:\n>>>> Unlikely. I doubt any significant portion of miners in china will continue to mine on a china-specific chain, since it will certainly be outmined by non-Chinese miners, and will be orphaned eventually.\n>>>>\n>>>> More likely is that mining interests in china will make special arrangements to circumvent the GFwOC.\n>>>>\n>>>> Users who can't access the worldwide blockchain will notice horrendously slow confirmation times and other side effects.\n>>>>\n>>>>> On May 20, 2014, at 10:37, Eugen Leitl <eugen at leitl.org>\n>>>>>\n>>>>> Could a blockchain fork due to network split happen?\n>>>>>\n>>>>\n>>>> ------------------------------------------------------------------------------\n>>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>>>> Get unparalleled scalability from the best Selenium testing platform available\n>>>> Simple to use. Nothing to install. Get started now for free.\"\n>>>> http://p.sf.net/sfu/SauceLabs\n>>>> _______________________________________________\n>>>> Bitcoin-development mailing list\n>>>> Bitcoin-development at lists.sourceforge.net\n>>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>>>\n>>>\n>>>\n>>>\n>>> --\n>>> Andy Alness\n>>> Software Engineer\n>>> Coinbase\n>>> San Francisco, CA\n>>>\n>>> ------------------------------------------------------------------------------\n>>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>>> Get unparalleled scalability from the best Selenium testing platform available\n>>> Simple to use. Nothing to install. Get started now for free.\"\n>>> http://p.sf.net/sfu/SauceLabs\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>>\n>> --\n>> Jeff Garzik\n>> Bitcoin core developer and open source evangelist\n>> BitPay, Inc.      https://bitpay.com/\n>\n>\n>\n> --\n> Andy Alness\n> Software Engineer\n> Coinbase\n> San Francisco, CA\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Isidor Zeuner",
                "date": "2014-05-20T18:38:15",
                "message_text_only": "> >\n> > In my opinion, the number of full nodes doesn't matter (as long as\n> > it's enough to satisfy demand by other nodes).\n> >\n>\n> Correct. Still, a high number of nodes has a few other benefits:\n>\n> 1) The more nodes there are, the cheaper it should be to run each one,\n> given that the bandwidth and CPU for serving the chain will be spread over\n> more people.\n>\n> 2) It makes Bitcoin *seem* bigger, more robust and more decentralised,\n> because there are more people uniting to run it. So there's a psychological\n> benefit.\n>\n\nPsychological benefit vs. effective benefit involves the danger of\ndestroying trust in the Bitcoin network when there are hard facts for\nnon-robustness while the node number looks big. Therefore, it may make\nsense to establish better metrics.\n\n> Also, we don't have a good way to measure capacity vs demand at the moment.\n> Whether we have enough capacity is rather a shot in the dark right now.\n>\n>\n> > What matters is how hard it is to run one.\n> >\n>\n> Which is why I'm interested to learn the reason behind the drop. Is it\n> insufficient interest, or is running a node too painful?\n>\n> For this purpose I'd like to exclude people running Bitcoin Core on laptops\n> or non-dedicated desktops. I don't think full nodes will ever make sense\n> for consumer wallets again, and I see the bleeding off of those people as\n> natural and expected (as Satoshi did). But if someone feels it's too hard\n> to run on a cheap server then that'd concern me.\n>\n\nIn my opinion, the characteristic of being able to make use of\nnon-dedicated nodes should be regarded as an advantage of the Bitcoin\nprotocol, and not something to get rid of. Nodes being able to\ncontribute this way may lead to even more robustness than\ndecentralization alone, as they can do so without exposing a fixed\naddress which could be attacked.\n\nBest regards,\n\nIsidor"
            }
        ],
        "thread_summary": {
            "title": "Why are we bleeding nodes?",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "Isidor Zeuner",
                "Mike Hearn",
                "Eugen Leitl",
                "Andy Alness",
                "bitcoingrant at gmx.com",
                "Gmail"
            ],
            "messages_count": 9,
            "total_messages_chars_count": 17176
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin Cooperative Proof-of-Stake whitpaper",
        "thread_messages": [
            {
                "author": "Stephen Reed",
                "date": "2014-05-20T16:12:53",
                "message_text_only": "I completed a whitepaper for Bitcoin a proof-of-stake version which uses a single nomadic verifiable mint agent and distributed replication of a single blockchain by compensated full nodes to achieve 6-hop, sub-second transaction acknowledgement times. Plus it pays dividends to holders instead of wasting it on miners. Subsidized transaction fees are thus lower.\n\nhttps://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE\n\n\nBecause the code is not yet written, this idea is half-baked so to speak. Comments appreciated on my project thread, which will be a development diary. I plan a hard fork of the Bitcoin blockchain in early 2016, after a year of public system testing, and conditioned on wide approval.\n\nhttps://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403\n\n-Steve\n\nStephen L. Reed \nAustin, Texas, USA \n512.791.7860\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/a2e808e8/attachment.html>"
            },
            {
                "author": "Nick Simpson",
                "date": "2014-05-20T16:42:40",
                "message_text_only": "Referring to the subsidy for miners as \"wasting it on miners\" isn't going to garner you much favor. \n\n\nOn May 20, 2014 11:12:53 AM CDT, Stephen Reed <stephenreed at yahoo.com> wrote:\n>I completed a whitepaper for Bitcoin a proof-of-stake version which\n>uses a single nomadic verifiable mint agent and distributed replication\n>of a single blockchain by compensated full nodes to achieve 6-hop,\n>sub-second transaction acknowledgement times. Plus it pays dividends to\n>holders instead of wasting it on miners. Subsidized transaction fees\n>are thus lower.\n>\n>https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE\n>\n>\n>Because the code is not yet written, this idea is half-baked so to\n>speak. Comments appreciated on my project thread, which will be a\n>development diary. I plan a hard fork of the Bitcoin blockchain in\n>early 2016, after a year of public system testing, and conditioned on\n>wide approval.\n>\n>https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403\n>\n>-Steve\n>\n>Stephen L. Reed \n>Austin, Texas, USA \n>512.791.7860\n>\n>------------------------------------------------------------------------\n>\n>------------------------------------------------------------------------------\n>\"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>Instantly run your Selenium tests across 300+ browser/OS combos.\n>Get unparalleled scalability from the best Selenium testing platform\n>available\n>Simple to use. Nothing to install. Get started now for free.\"\n>http://p.sf.net/sfu/SauceLabs\n>\n>------------------------------------------------------------------------\n>\n>_______________________________________________\n>Bitcoin-development mailing list\n>Bitcoin-development at lists.sourceforge.net\n>https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140520/34da049b/attachment.html>"
            },
            {
                "author": "Benjamin Cordes",
                "date": "2014-05-21T15:52:45",
                "message_text_only": "I'm doing a hard fork, too. In my version 78% of the wealth will go to me,\nwhich I will redistribute on based on personal preferences. Come and join\nme into a new and obviously superior system.\n\nMore seriously though: the paper is not bad, but I can guarantee you that\nBitcoin will *never* change that drastically. That's the whole point. It\nhas an indestructible kernel (think DNA). Rather it will do a slow death,\nprobably in 5-10 years. If you care for PoS than just launch your own.\n\n\nOn Tue, May 20, 2014 at 6:42 PM, Nick Simpson <nick at mynicknet.com> wrote:\n\n> Referring to the subsidy for miners as \"wasting it on miners\" isn't going\n> to garner you much favor.\n>\n>\n> On May 20, 2014 11:12:53 AM CDT, Stephen Reed <stephenreed at yahoo.com>\n> wrote:\n>\n>> I completed a whitepaper for Bitcoin a proof-of-stake version which uses\n>> a single nomadic verifiable mint agent and distributed replication of a\n>> single blockchain by compensated full nodes to achieve 6-hop, sub-second\n>> transaction acknowledgement times. Plus it pays dividends to holders\n>> instead of wasting it on miners. Subsidized transaction fees are thus lower.\n>>\n>>\n>> https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE\n>>\n>> Because the code is not yet written, this idea is half-baked so to speak.\n>> Comments appreciated on my project thread, which will be a development\n>> diary. I plan a hard fork of the Bitcoin blockchain in early 2016, after a\n>> year of public system testing, and conditioned on wide approval.\n>>\n>> https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403\n>>\n>> -Steve\n>>\n>> Stephen L. Reed\n>> Austin, Texas, USA\n>> 512.791.7860\n>>\n>> ------------------------------\n>>\n>> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n>> Instantly run your Selenium tests across 300+ browser/OS combos.\n>> Get unparalleled scalability from the best Selenium testing platform available\n>> Simple to use. Nothing to install. Get started now for free.\"\n>> http://p.sf.net/sfu/SauceLabs\n>>\n>> ------------------------------\n>>\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/4ae8a65a/attachment.html>"
            },
            {
                "author": "Odinn Cyberguerrilla",
                "date": "2014-05-21T06:47:36",
                "message_text_only": "> I completed a whitepaper for Bitcoin a proof-of-stake version which uses a\n> single nomadic verifiable mint agent and distributed replication of a\n> single blockchain by compensated full nodes to achieve 6-hop, sub-second\n> transaction acknowledgement times. Plus it pays dividends to holders\n> instead of wasting it on miners. Subsidized transaction fees are thus\n> lower.\n\n\nI look at this and agree of course that the nodes are decreasing, see,\nhttps://getaddr.bitnodes.io/   But when I see stuff in the white paper\nlike \"misbehaving nodes\" in the context of an \"audit agent,\" a \"single\nnon-forking blockchain,\" the notion of \"Misbehaving nodes\" that would be\n\"banned from the network\" so as to \"motivat(e) honest behavior,\" ~ really,\nall of this does sound as though a sort of morality is being formulated\nrather than a mathematical solution.\n\nThis is not to say that the white paper hasn't addressed a problem that\nneeds to be addressed, namely... the problem of the nodes disappearing,\nand a few other things.  But to take that and then layer onto that the\nissues associated with proof of stake... There does seem to be a simpler\nway to address this and I think first without suggesting the complex issue\nof some kind of thing that would involve dividends for those in a\nproof-of-stake system, consensus achieved by stake-weighted voting, and so\nforth, one would be better off removing all references to voting and\nstake, and determining ways simply to incentivize more substantively those\nwho actually run a full node.  Additionally I am hesitant to characterize\nbehavior as has been described in the white paper, as it would seem that\n(in such a system) there would be an inclination or a tendency to exclude\ncertain patterns or groups of participants rather than determine ways in\nwhich all participants or potential peers can serve the network.\n\n\n\n>\n> https://docs.google.com/document/d/1C4m-MFnxw0JjDorzrKs_IRQRqD9ila79o0IDt6KsbcE\n>\n>\n> Because the code is not yet written, this idea is half-baked so to speak.\n> Comments appreciated on my project thread, which will be a development\n> diary. I plan a hard fork of the Bitcoin blockchain in early 2016, after a\n> year of public system testing, and conditioned on wide approval.\n>\n> https://bitcointalk.org/index.php?topic=584719.msg6397403#msg6397403\n>\n> -Steve\n>\n> Stephen L. Reed\n> Austin, Texas, USA\n> 512.791.7860------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs_______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Cooperative Proof-of-Stake whitpaper",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Nick Simpson",
                "Benjamin Cordes",
                "Odinn Cyberguerrilla",
                "Stephen Reed"
            ],
            "messages_count": 4,
            "total_messages_chars_count": 9034
        }
    },
    {
        "title": "[Bitcoin-development] PSA: Please sign your git commits",
        "thread_messages": [
            {
                "author": "Wladimir",
                "date": "2014-05-21T12:23:38",
                "message_text_only": "Hello all,\n\nWhen you're contributing to Bitcoin Core development please sign your\ngit commits. This is easy to do and will help in assuring the\nintegrity of the tree.\n\nHow to sign your commits?\n------------------------------------------\n\nProvide the `-S` flag (or `--gpg-sign`) to git commit when you commit\nyour changes, for example\n\n    git commit -m \"Commit message\" -S\n\nOptionally you can provide a key id after the -S option to sign with a\nspecific key.\n\nWhat if I forgot?\n-------------------------\n\nYou can retroactively sign your previous commit using --amend, for example\n\n    git commit -S --amend\n\nIf you need to go further back, you can use the interactive rebase\ncommand with 'edit'. Replace HEAD~3 with the base commit from which\nyou want to start.\n\n    git rebase -i HEAD~3\n\nReplace 'pick' by 'edit' for the commit that you want to sign and the\nrebasing will stop after that commit. Then you can amend the commit as\nabove. Afterwards, do\n\n    git rebase --continue\n\nAs this will rewrite history, you cannot do this when your commit is\nalready merged. In that case, too bad, better luck next time.\n\nIf you rewrite history for another reason - for example when squashing\ncommits - make sure that you re-sign as the signatures will be lost.\n\nHow to check if commits are signed?\n-------------------------------------------------------\n\nUse git log with show-signature,\n\n    git log --show-signature\n\n    commit 6fcdad787f1fb381a3a0fe6b1a1e45477426dccb\n    gpg: Signature made Wed 21 May 2014 12:27:55 PM CEST using RSA key\nID 2346C9A6\n    gpg: Good signature from \"Wladimir J. van der Laan <laanwj at gmail.com>\"\n    Author: Wladimir J. van der Laan <laanwj at gmail.com>\n    Date:   Wed May 21 12:27:37 2014 +0200\n\n        qt: Periodic language update\n    ...\n\nYou can also pass the --show-signature option to `git show` to check a\nsingle commit.\n\nIf you do this on the current repository you'll see that I'm almost\nthe only person signing commits. I would like more people to get into\nthis habit.\n\nHow to sign merges?\n--------------------------------\n\nWhen using the github interface to merge a pull request, the resulting\nmerge commit is not signed.\n\nPieter Wullie wrote a script that simplifies merging and signing. It\ncan be found in contrib/devtools. Setup instructions can be found in\nthe README.md in that directory. After setting it up for the\nrepository you can use the script in the following way:\n\n    contrib/devtools/github-merge.sh 1234\n\nReplace 1234 by the pull request number that you want to merge. It\nwill merge the pull request and drop you into a shell so you can\nverify changes and test. Once satisfied, exit the shell and answer the\nquestions to merge and sign it and push upstream automatically (or\nnot).\n\nPlease use this script when possible for merging instead of the github\ninterface.\n\n--------------------------\n\nWladimir"
            },
            {
                "author": "Chris Beams",
                "date": "2014-05-21T16:39:44",
                "message_text_only": "Hi Wladimir,\n\nI'm personally happy to comply with this for any future commits, but wonder if you've considered the arguments against commit signing [1]? Note especially the reference therein to Linus' original negative opinion on signed commits [2].\n\nI came across these when searching for a way to enable signing by default, e.g. a `git config` option that might allow for this. Unfortunately, there isn't one, meaning it's likely that most folks will forget to do this most of the time.\n\nIf you're really serious about it, you should probably reject pull requests without signed commits; otherwise, signing becomes meaningless because only honest authors do it, and forgetful or malicious ones can avoid it without penalty.\n\nThat said, I'm not sure that creating such a barrier to contribution is worth it.\n\n- Chris\n\n[1]: http://stackoverflow.com/a/10166916/622403\n[2]: http://git.661346.n2.nabble.com/GPG-signing-for-git-commit-td2582986.html\n\nOn May 21, 2014, at 2:23 PM, Wladimir <laanwj at gmail.com> wrote:\n\n> Hello all,\n> \n> When you're contributing to Bitcoin Core development please sign your\n> git commits. This is easy to do and will help in assuring the\n> integrity of the tree.\n> \n> How to sign your commits?\n> ------------------------------------------\n> \n> Provide the `-S` flag (or `--gpg-sign`) to git commit when you commit\n> your changes, for example\n> \n>    git commit -m \"Commit message\" -S\n> \n> Optionally you can provide a key id after the -S option to sign with a\n> specific key.\n> \n> What if I forgot?\n> -------------------------\n> \n> You can retroactively sign your previous commit using --amend, for example\n> \n>    git commit -S --amend\n> \n> If you need to go further back, you can use the interactive rebase\n> command with 'edit'. Replace HEAD~3 with the base commit from which\n> you want to start.\n> \n>    git rebase -i HEAD~3\n> \n> Replace 'pick' by 'edit' for the commit that you want to sign and the\n> rebasing will stop after that commit. Then you can amend the commit as\n> above. Afterwards, do\n> \n>    git rebase --continue\n> \n> As this will rewrite history, you cannot do this when your commit is\n> already merged. In that case, too bad, better luck next time.\n> \n> If you rewrite history for another reason - for example when squashing\n> commits - make sure that you re-sign as the signatures will be lost.\n> \n> How to check if commits are signed?\n> -------------------------------------------------------\n> \n> Use git log with show-signature,\n> \n>    git log --show-signature\n> \n>    commit 6fcdad787f1fb381a3a0fe6b1a1e45477426dccb\n>    gpg: Signature made Wed 21 May 2014 12:27:55 PM CEST using RSA key\n> ID 2346C9A6\n>    gpg: Good signature from \"Wladimir J. van der Laan <laanwj at gmail.com>\"\n>    Author: Wladimir J. van der Laan <laanwj at gmail.com>\n>    Date:   Wed May 21 12:27:37 2014 +0200\n> \n>        qt: Periodic language update\n>    ...\n> \n> You can also pass the --show-signature option to `git show` to check a\n> single commit.\n> \n> If you do this on the current repository you'll see that I'm almost\n> the only person signing commits. I would like more people to get into\n> this habit.\n> \n> How to sign merges?\n> --------------------------------\n> \n> When using the github interface to merge a pull request, the resulting\n> merge commit is not signed.\n> \n> Pieter Wullie wrote a script that simplifies merging and signing. It\n> can be found in contrib/devtools. Setup instructions can be found in\n> the README.md in that directory. After setting it up for the\n> repository you can use the script in the following way:\n> \n>    contrib/devtools/github-merge.sh 1234\n> \n> Replace 1234 by the pull request number that you want to merge. It\n> will merge the pull request and drop you into a shell so you can\n> verify changes and test. Once satisfied, exit the shell and answer the\n> questions to merge and sign it and push upstream automatically (or\n> not).\n> \n> Please use this script when possible for merging instead of the github\n> interface.\n> \n> --------------------------\n> \n> Wladimir\n> \n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/39a9fcfc/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/39a9fcfc/attachment.sig>"
            },
            {
                "author": "David A. Harding",
                "date": "2014-05-21T20:25:02",
                "message_text_only": "On Wed, May 21, 2014 at 06:39:44PM +0200, Chris Beams wrote:\n> I [was] searching for a way to enable signing by default [...]\n> Unfortunately, there isn't one, meaning it's likely that most folks\n> will forget to do this most of the time.\n\nFor all of my projects, I now I put this script in\n.git/hooks/post-commit and post-merge:\n\n    #!/bin/bash -eu\n\n    if ! git log -n1 --show-signature | grep -q 'gpg: Good signature'\n    then\n        yes \"FORGOT TO SIGN COMMIT MESSAGE\"\n        exit 1\n    fi\n\nSo anytime I forget to sign, I get an obvious error and can immediately\nrun git commit --amend -S.\n\nTo automatically add a script like the one above to all new projects (plus\nquickly add it old current projects), you can follow these instructions:\n\n    http://stackoverflow.com/questions/2293498/git-commit-hooks-global-settings\n\n> If you're really serious about it, you should probably reject pull\n> requests without signed commits; otherwise, signing becomes\n> meaningless because only honest authors do it\n\nI find signing my commits quite useful even on projects without a\ndefault signing policy because it lets me diff from the last time I\nprovably reviewed the code.  Here's my script for that:\n\n    #!/bin/bash -eu\n\n    KEY=F29EC4B7\n\n    last_signed_commit=$( git log --topo-order --show-signature --pretty=oneline \\\n        | grep -m1 \" gpg: Signature made.*RSA key ID $KEY\" \\\n        | sed 's/ .*//' \\\n        | grep .\n    ) || { echo \"No signed commit found.  Dying...\" ; exit 1 ; }\n\n    set -x\n    git diff $last_signed_commit\n\nBy diffing against the last signed commit I made, I also review any\ncommits that were made using my name but which I didn't actually make,\nsuch as squashes and rebases of my commits (and, of course, forgeries).\n\nFor anyone who's bored and wants to read a lot of text, I think the\ndefinitive work on git signing is this:\n\n    http://mikegerwitz.com/papers/git-horror-story.html\n\n-Dave\n-- \nDavid A. Harding"
            },
            {
                "author": "Chris Beams",
                "date": "2014-05-22T01:09:35",
                "message_text_only": "On May 21, 2014, at 10:25 PM, David A. Harding <dave at dtrt.org> wrote:\n\n> On Wed, May 21, 2014 at 06:39:44PM +0200, Chris Beams wrote:\n>> I [was] searching for a way to enable signing by default [...]\n>> Unfortunately, there isn't one, meaning it's likely that most folks\n>> will forget to do this most of the time.\n> \n> For all of my projects, I now I put this script in\n> .git/hooks/post-commit and post-merge:\n> \n>    #!/bin/bash -eu\n> \n>    if ! git log -n1 --show-signature | grep -q 'gpg: Good signature'\n>    then\n>        yes \"FORGOT TO SIGN COMMIT MESSAGE\"\n>        exit 1\n>    fi\n\nFunny, I was just in the middle of writing a pre-push hook to do something similar when I decided to check my email :) Your post-commit approach is indeed simpler, so I've gone with it for the moment [1]. Thanks.\n\nHowever, I noticed in the process of testing that this approach messes with rebase workflows. For example: if I make several commits (all of which are properly signed), and then rebase to reorder them, rebase ends up hanging because it delegates to `commit` and the use of `yes` in the post-commit hook blocks forever. I've changed `yes` to `echo` to avoid this, but it still means that one must be rather diligent to keep signatures in place when rebasing. Gerwitz does address rebasing in the presence of commit sigs in the \"horror story\" doc you linked to [2], but there's no magic: this makes the whole rebasing process considerably more tedious, and linearly so with however many commits you're modifying.\n\nThis may amount to a rationale for going with a pre-push hook after all, i.e. in order to defer the check for signatures until the last possible moment. This would allow for cheap iterative rebasing once again.\n\nI suppose the proper solution would be a `git config` option such as 'commit.sign', that if set to true would mean your commits are always signed, even if rebase is the one calling `commit`. This would obviate the need for the alias I mention below as well.\n\n\n> So anytime I forget to sign, I get an obvious error and can immediately\n> run git commit --amend -S.\n\nIf one is already in the habit of using an alias for `commit` (I've long used `ci` for concision), the -S can be included in the alias:\n\n    git config alias.ci 'commit -S'\n\n\n> To automatically add a script like the one above to all new projects (plus\n> quickly add it old current projects), you can follow these instructions:\n> \n>    http://stackoverflow.com/questions/2293498/git-commit-hooks-global-settings\n\nThis was a great tip, thanks!\n\n- Chris\n\n[1]: https://github.com/cbeams/dotfiles/commit/58d6942\n[2]: http://mikegerwitz.com/papers/git-horror-story.html#_option_3\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140522/16681d8b/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 842 bytes\nDesc: Message signed with OpenPGP using GPGMail\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140522/16681d8b/attachment.sig>"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-21T17:10:20",
                "message_text_only": "Hello Chris,\n\nOn Wed, May 21, 2014 at 6:39 PM, Chris Beams <chris at beams.io> wrote:\n> I'm personally happy to comply with this for any future commits, but wonder\n> if you've considered the arguments against commit signing [1]? Note\n> especially the reference therein to Linus' original negative opinion on\n> signed commits [2].\n\nYes, I've read it. But would his alternative, signing tags, really\nhelp us more here? How would that work? How would we have to structure\nthe process?\n\nAt least signed commits are easy to integrate into the current\ndevelopment process with github - only a different way of merging has\nto be used.\n\n> I came across these when searching for a way to enable signing by default,\n> e.g. a `git config` option that might allow for this. Unfortunately, there\n> isn't one, meaning it's likely that most folks will forget to do this most\n> of the time.\n\nI'll remind people if they forget to do it, but I won't require it. As\nyou say, that would be an extra barrier, and I'm not suggesting this\nbecause I to see people jumping through bureaucratic hoops.\nBut it is a pretty simple thing to do...\n\n> If you're really serious about it, you should probably reject pull requests\n> without signed commits; otherwise, signing becomes meaningless because only\n> honest authors do it, and forgetful or malicious ones can avoid it without\n> penalty.\n\nThis is not because I'm afraid of malicious authors, but because I\nwant to reduce the risk that github hacks would pose.\n\nSomething to watch for would be authors that normally sign pull\nrequests/merges and suddenly don't. Someone malicious may have gained\naccess to their github account. This just adds an extra layer of\nprotection.\n\nCheers,\nWladimir"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2014-05-21T20:30:25",
                "message_text_only": "On 05/21/2014 10:10 AM, Wladimir wrote:\n> On Wed, May 21, 2014 at 6:39 PM, Chris Beams <chris at beams.io> wrote:\n>> I'm personally happy to comply with this for any future commits, but wonder\n>> if you've considered the arguments against commit signing [1]? Note\n>> especially the reference therein to Linus' original negative opinion on\n>> signed commits [2].\n> \n> Yes, I've read it. But would his alternative, signing tags, really\n> help us more here?\n\nHonest question: what would signed commits do to help us here anyway?\nWhat's the problem being solved?\n\nUnfortunately git places signatures in the history itself, so it's not\nlike we could use easily use signatures to indicate acceptance after\ncode review, like we could if we were using monotone for example. Git\njust wasn't designed for a commit-signing workflow."
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-21T21:02:07",
                "message_text_only": "On Wed, May 21, 2014 at 1:30 PM, Mark Friedenbach <mark at monetize.io> wrote:\n> Honest question: what would signed commits do to help us here anyway?\n> What's the problem being solved?\n>\n> Unfortunately git places signatures in the history itself, so it's not\n> like we could use easily use signatures to indicate acceptance after\n> code review, like we could if we were using monotone for example. Git\n> just wasn't designed for a commit-signing workflow.\n\nJust makes it easier to sort out things like your git account (or the\ngit site) being compromised and used to submit commits."
            },
            {
                "author": "Jeff Garzik",
                "date": "2014-05-22T18:06:10",
                "message_text_only": "Related:  Current multi-sig wallet technology being rolled out now,\nwith 2FA and other fancy doodads, is now arguably more secure than my\nPGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig\nwallet (set of keys), with all the associated theft/data\ndestruction/backup risks.\n\nThe more improvements I see in bitcoin wallets, the more antiquated my\nPGP keyring appears.  Zero concept of multisig.  The PGP keyring\ncompromise process is rarely exercised.  2FA is lacking.  At least\noffline signing works well. Mostly.\n\n\n\nOn Wed, May 21, 2014 at 5:02 PM, Gregory Maxwell <gmaxwell at gmail.com> wrote:\n> On Wed, May 21, 2014 at 1:30 PM, Mark Friedenbach <mark at monetize.io> wrote:\n>> Honest question: what would signed commits do to help us here anyway?\n>> What's the problem being solved?\n>>\n>> Unfortunately git places signatures in the history itself, so it's not\n>> like we could use easily use signatures to indicate acceptance after\n>> code review, like we could if we were using monotone for example. Git\n>> just wasn't designed for a commit-signing workflow.\n>\n> Just makes it easier to sort out things like your git account (or the\n> git site) being compromised and used to submit commits.\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n\n\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-23T00:25:49",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nI've got a PGP smart card reader and card with a securely generated key and pin entered per signature.\n\nRe: multisig, that's precisely why we want more than just a single maintainer signing commits.\n\nPGP isn't perfect, but perfect is the enemy of good.\n\n\nOn 22 May 2014 21:06:10 GMT+03:00, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>Related:  Current multi-sig wallet technology being rolled out now,\n>with 2FA and other fancy doodads, is now arguably more secure than my\n>PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig\n>wallet (set of keys), with all the associated theft/data\n>destruction/backup risks.\n>\n>The more improvements I see in bitcoin wallets, the more antiquated my\n>PGP keyring appears.  Zero concept of multisig.  The PGP keyring\n>compromise process is rarely exercised.  2FA is lacking.  At least\n>offline signing works well. Mostly.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTfpWNMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhfVGB/448B6UvhN7bmFQxmLS\n9+wlhWGYioJKUPspz2Wtk0p8v1y1XlDt0UxC+5ODin4a/Zk0+0x4G4MWyaUP1TnA\nWq9FquY3MwTXDrwWzmeQR4QcRbC+EMMk6kXswzT4d/2clUwB1pLl2MYGnS9DjUK2\nof0kzZEbaQvxSKcFmvuqhz0QqGy84pkHAFBHfopS1j4WqIZpelUMzBGRYP8D1IQd\nH/M2YxdQ7T8peiNigqWSyllchKqGoLG+KEr3mvTYRLkxoYw5XTcFyc5AmuTRfzEC\nyhRc7CJwTZjHYahgZRPGJQM0qeopdIVAifCu9NoPgdkyuQL+X8XSidrU5Kbv/YeZ\nScv/\n=GdA4\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Wladimir",
                "date": "2014-05-23T07:12:46",
                "message_text_only": "On Thu, May 22, 2014 at 8:06 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n> Related:  Current multi-sig wallet technology being rolled out now,\n> with 2FA and other fancy doodads, is now arguably more secure than my\n> PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig\n> wallet (set of keys), with all the associated theft/data\n> destruction/backup risks.\n>\n> The more improvements I see in bitcoin wallets, the more antiquated my\n> PGP keyring appears.  Zero concept of multisig.  The PGP keyring\n> compromise process is rarely exercised.  2FA is lacking.  At least\n> offline signing works well. Mostly.\n\nWould be incredible to have multisig for git commits as well. I don't\nthink git supports multiple signers for one commit at this point -\namending the signature replaces the last one - but it would allow for\nsome interesting multi-factor designs in which the damage when a dev's\ncomputer is compromised would be reduced.\n\nSounds like a lot of work to get a good workflow there, though.\n\nMy mail about single-signing commits was already longer than I\nexpected when I started writing there. Even though the process is\nreally simple.\n\nThough if anyone's interest is piqued by this, please pick it up.\n\nWladimir"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2014-05-23T16:38:02",
                "message_text_only": "I know the likelihood of this happening is slim, but if these are the\ndesired features we should consider switching to monotone (monotone.ca)\nwhich has a much more flexible DAG structure and workflow built around\nprogrammable multi-sig signing of commits. We could still maintain the\ngithub account as a two-way repository interface, but acceptance of a\npull request would require some threshold signature sign-off in monotone.\n\nI would seriously suggest anybody on this list exploring monotone if you\nhaven't already, at least for your personal projects if it is too late\nto make that choice for bitcoin. Besides the benefits of using it, we\nshould be supporting build infrastructure that enables less trusted,\nless centralized development.\n\nhttp://www.monotone.ca/\n\nMark\n\nOn 05/23/2014 12:12 AM, Wladimir wrote:\n> On Thu, May 22, 2014 at 8:06 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>> Related:  Current multi-sig wallet technology being rolled out now,\n>> with 2FA and other fancy doodads, is now arguably more secure than my\n>> PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig\n>> wallet (set of keys), with all the associated theft/data\n>> destruction/backup risks.\n>>\n>> The more improvements I see in bitcoin wallets, the more antiquated my\n>> PGP keyring appears.  Zero concept of multisig.  The PGP keyring\n>> compromise process is rarely exercised.  2FA is lacking.  At least\n>> offline signing works well. Mostly.\n> \n> Would be incredible to have multisig for git commits as well. I don't\n> think git supports multiple signers for one commit at this point -\n> amending the signature replaces the last one - but it would allow for\n> some interesting multi-factor designs in which the damage when a dev's\n> computer is compromised would be reduced.\n> \n> Sounds like a lot of work to get a good workflow there, though.\n> \n> My mail about single-signing commits was already longer than I\n> expected when I started writing there. Even though the process is\n> really simple.\n> \n> Though if anyone's interest is piqued by this, please pick it up.\n> \n> Wladimir\n>"
            },
            {
                "author": "Kyle Jerviss",
                "date": "2014-05-23T16:48:34",
                "message_text_only": "Multisig is great for irreversible actions, but pointless most of the \ntime, which is why no PGP developer or user ever thought to implement it.\n\nIf you lose a key and an attacker signs a bogus email or commit with it, \nwe all roll back with no lasting harm done.\n\nWladimir wrote:\n> On Thu, May 22, 2014 at 8:06 PM, Jeff Garzik <jgarzik at bitpay.com> wrote:\n>> Related:  Current multi-sig wallet technology being rolled out now,\n>> with 2FA and other fancy doodads, is now arguably more secure than my\n>> PGP keyring.  My PGP keyring is, to draw an analogy, a non-multisig\n>> wallet (set of keys), with all the associated theft/data\n>> destruction/backup risks.\n>>\n>> The more improvements I see in bitcoin wallets, the more antiquated my\n>> PGP keyring appears.  Zero concept of multisig.  The PGP keyring\n>> compromise process is rarely exercised.  2FA is lacking.  At least\n>> offline signing works well. Mostly.\n> Would be incredible to have multisig for git commits as well. I don't\n> think git supports multiple signers for one commit at this point -\n> amending the signature replaces the last one - but it would allow for\n> some interesting multi-factor designs in which the damage when a dev's\n> computer is compromised would be reduced.\n>\n> Sounds like a lot of work to get a good workflow there, though.\n>\n> My mail about single-signing commits was already longer than I\n> expected when I started writing there. Even though the process is\n> really simple.\n>\n> Though if anyone's interest is piqued by this, please pick it up.\n>\n> Wladimir\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-23T17:32:34",
                "message_text_only": "On Fri, May 23, 2014 at 9:48 AM, Kyle Jerviss <bitcoin-devel at jerviss.org> wrote:\n> Multisig is great for irreversible actions, but pointless most of the\n> time, which is why no PGP developer or user ever thought to implement it.\n>\n> If you lose a key and an attacker signs a bogus email or commit with it,\n> we all roll back with no lasting harm done.\n\nPGP in general is not very thoughtful about security. There are a lot\nof things it does poorly. This is easily excusable considering the\nhistorical context it came from\u2014 it was the first real cryptographic\ntool I used, at the time its distribution had concerns about legality,\njust getting things into people's hands was an achievement enough.\n\n>From a cryptosystem perspective much more powerful things can be done\nnow, but there is a long way to go in figuring out how to many any\ncryptographic tool usable to people.\n\nPGP is a general purpose tool\u2014 which is the hardest kind to write\u2014 its\nalso used in a lot of irreversible contexts: If your key deploys a bad\nsoftware release and it steals everyone's data or wipes their disks\u2014\nthats not an irreversible action by any means.\n\nIf you want threshold pgp though\u2014 it's possible. The RSA cryptosystem\nis directly compatible with threshold cryptography. It's just that no\none has written the tools. There are implementations of the bare\ncryptosystem however.\n\nOne of my longer term would-be-nice goals for a upgrade bitcoin script\n2.0 would be being thoughtful enough in the design that it could be\nadopted as a signing cryptosystem in other applications (e.g. tools\nsimilar to GPG)\u2014 allowing for things like creating a public key which\ncan only issue trust level 0 certifications, only certifications for\ncertain organizations (e.g. *.debian.org) unless thresholded with an\noffline key, or only signing for messages meeting a certain\nprogrammatic predicate generally."
            },
            {
                "author": "Wladimir",
                "date": "2014-05-23T10:23:45",
                "message_text_only": "On Wed, May 21, 2014 at 7:10 PM, Wladimir <laanwj at gmail.com> wrote:\n> Hello Chris,\n>\n> On Wed, May 21, 2014 at 6:39 PM, Chris Beams <chris at beams.io> wrote:\n>> I'm personally happy to comply with this for any future commits, but wonder\n>> if you've considered the arguments against commit signing [1]? Note\n>> especially the reference therein to Linus' original negative opinion on\n>> signed commits [2].\n>\n> Yes, I've read it. But would his alternative, signing tags, really\n> help us more here? How would that work? How would we have to structure\n> the process?\n\nI think a compromise - that is similar to signing tags but would still\nwork with the github process, and leaves a trail after merge - would\nbe: if you submit a stack of commits, only sign the most recent one.\n\nAs each commit contains the cryptographic hash of the previous commit,\nwhich in turns contains the hash of that before it up to the root\ncommit, signing every commit if you have multiple in a row is\nredundant.\n\nI'll update the document and put it in the repository.\n\nWladimir"
            }
        ],
        "thread_summary": {
            "title": "PSA: Please sign your git commits",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik",
                "David A. Harding",
                "Wladimir",
                "Kyle Jerviss",
                "Peter Todd",
                "Gregory Maxwell",
                "Mark Friedenbach",
                "Chris Beams"
            ],
            "messages_count": 14,
            "total_messages_chars_count": 27975
        }
    },
    {
        "title": "[Bitcoin-development] PSA: Extending BIP 70 / payment protocol",
        "thread_messages": [
            {
                "author": "Jeff Garzik",
                "date": "2014-05-21T14:32:54",
                "message_text_only": "Please put any payment protocol extensions into a new draft BIP.  BIP\n70 should not be updated continuously.\n\nMimic the IETF, where new RFCs are produced as protocols are extended.\n Once published, an IETF RFC is considered static.\n\nThat said, I think it is OK to be smart, and break the \"static\" rule a\nbit for significant BIP bugs, or harmless maintenance of\nlinks-to-resources.\n\n-- \nJeff Garzik\nBitcoin core developer and open source evangelist\nBitPay, Inc.      https://bitpay.com/"
            }
        ],
        "thread_summary": {
            "title": "PSA: Extending BIP 70 / payment protocol",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jeff Garzik"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 485
        }
    },
    {
        "title": "[Bitcoin-development] Bitcoin Core Nightly Builds",
        "thread_messages": [
            {
                "author": "Warren Togami Jr.",
                "date": "2014-05-22T02:28:56",
                "message_text_only": "https://bitcointalk.org/index.php?topic=571414.0\nThanks to the efforts of Cory Fields, Bitcoin Core now has deterministic\nbuilds for MacOS X.  The nightly builder now has Windows, Linux and MacOS X\ntest builds available for download.\n\nWarren\n\n\nOn Wed, Apr 16, 2014 at 3:43 PM, Warren Togami Jr. <wtogami at gmail.com>wrote:\n\n> The Bitcoin Core developers have a desire to do a mostly bug-fix, cleanup\n> and translation update release in v0.9.2 a few weeks from now.  You do not\n> need to be a developer to help!  With these unofficial nightly builds,\n> power users can more easily aid in testing of the master branch which will\n> help to find bugs and polish things up faster.  Additionally translators\n> can more easily run the latest code and see what strings need to be\n> translated as we rapidly approach the next stable release.\n>\n> https://bitcointalk.org/index.php?topic=571414.0\n> Read more details here.\n>\n> Warren Togami\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140521/81190a0e/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Bitcoin Core Nightly Builds",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Warren Togami Jr."
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1115
        }
    },
    {
        "title": "[Bitcoin-development] testnet-seed.bitcoin.petertodd.org is up again",
        "thread_messages": [
            {
                "author": "Peter Todd",
                "date": "2014-05-23T22:17:26",
                "message_text_only": "FWIW\n\nThat said, keep in mind the github discussion(1) that was had: if all\nthe DNS seeds being down breaks your application, your application is\nbroken and insecure. The only exception is initial startup, and even\nthen you should have fallbacks such as hardcoded node lists and manual\npeer entry. If for some reason you really do need instant startup, run\nyour own centralized high-availability/low-latency nodes; either way\nyou're depending on a centralized resource.\n\n1) https://github.com/bitcoin/bitcoin/pull/4203\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140523/56ca2638/attachment.sig>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-25T19:12:10",
                "message_text_only": "Thanks for looking at the issue.\n\nUnfortunately, it still fails for me:\n\n$ nslookup testnet-seed.bitcoin.petertodd.org\nServer:\t\t127.0.1.1\nAddress:\t127.0.1.1#53\n\n** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL\n\nLike I said, can you look at the logfiles how the requests arrive?\n\nWhat particular thing did you fix? It would be good to know for future\noutages.\n\n\nOn 05/24/2014 12:17 AM, Peter Todd wrote:\n> FWIW\n> \n> That said, keep in mind the github discussion(1) that was had: if all\n> the DNS seeds being down breaks your application, your application is\n> broken and insecure. The only exception is initial startup, and even\n> then you should have fallbacks such as hardcoded node lists and manual\n> peer entry. If for some reason you really do need instant startup, run\n> your own centralized high-availability/low-latency nodes; either way\n> you're depending on a centralized resource.\n> \n> 1) https://github.com/bitcoin/bitcoin/pull/4203"
            },
            {
                "author": "Tim",
                "date": "2014-05-25T20:02:17",
                "message_text_only": "Works fine for me\n\n\n; <<>> DiG 9.8.1-P1 <<>> ANY testnet-seed.bitcoin.petertodd.org\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 40809\n;; flags: qr rd ra; QUERY: 1, ANSWER: 22, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;testnet-seed.bitcoin.petertodd.org. IN ANY\n\n;; ANSWER SECTION:\ntestnet-seed.bitcoin.petertodd.org. 40000 IN NS\ntestnet-seed-ns1.bitcoin.petertodd.org.\ntestnet-seed.bitcoin.petertodd.org. 40000 IN SOA\ntestnet-seed-ns1.bitcoin.petertodd.org. root. 1401048038 604800 86400\n2592000 604800\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     54.208.21.132\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     5.9.119.49\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     54.221.156.77\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     37.34.60.19\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     46.105.173.28\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     95.78.127.77\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     208.111.49.42\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     94.102.53.181\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     85.153.13.35\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     85.25.198.97\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     217.46.198.163\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     192.187.125.226\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     37.187.40.137\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     37.187.179.66\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     93.93.135.12\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     144.76.175.228\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     74.207.241.92\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     85.17.26.225\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     148.251.11.118\ntestnet-seed.bitcoin.petertodd.org. 60 IN A     137.117.202.26\n\n;; Query time: 569 msec\n;; SERVER: 109.74.194.20#53(109.74.194.20)\n;; WHEN: Sun May 25 21:00:35 2014\n;; MSG SIZE  rcvd: 443\n\n\n\nOn 25 May 2014 20:12, Andreas Schildbach <andreas at schildbach.de> wrote:\n\n> Thanks for looking at the issue.\n>\n> Unfortunately, it still fails for me:\n>\n> $ nslookup testnet-seed.bitcoin.petertodd.org\n> Server:         127.0.1.1\n> Address:        127.0.1.1#53\n>\n> ** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL\n>\n> Like I said, can you look at the logfiles how the requests arrive?\n>\n> What particular thing did you fix? It would be good to know for future\n> outages.\n>\n>\n> On 05/24/2014 12:17 AM, Peter Todd wrote:\n> > FWIW\n> >\n> > That said, keep in mind the github discussion(1) that was had: if all\n> > the DNS seeds being down breaks your application, your application is\n> > broken and insecure. The only exception is initial startup, and even\n> > then you should have fallbacks such as hardcoded node lists and manual\n> > peer entry. If for some reason you really do need instant startup, run\n> > your own centralized high-availability/low-latency nodes; either way\n> > you're depending on a centralized resource.\n> >\n> > 1) https://github.com/bitcoin/bitcoin/pull/4203\n>\n>\n>\n>\n> ------------------------------------------------------------------------------\n> \"Accelerate Dev Cycles with Automated Cross-Browser Testing - For FREE\n> Instantly run your Selenium tests across 300+ browser/OS combos.\n> Get unparalleled scalability from the best Selenium testing platform\n> available\n> Simple to use. Nothing to install. Get started now for free.\"\n> http://p.sf.net/sfu/SauceLabs\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140525/576866ed/attachment.html>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-26T16:37:53",
                "message_text_only": "On Sun, May 25, 2014 at 09:12:10PM +0200, Andreas Schildbach wrote:\n> Thanks for looking at the issue.\n> \n> Unfortunately, it still fails for me:\n> \n> $ nslookup testnet-seed.bitcoin.petertodd.org\n> Server:\t\t127.0.1.1\n> Address:\t127.0.1.1#53\n> \n> ** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL\n> \n> Like I said, can you look at the logfiles how the requests arrive?\n\nThere are no logfiles for DNS requests.\n\nI just checked on EC2 and my cellphone internet connection here in Tel\nAviv; both work fine. My best guess is that your DNS resolver locally or\nat your ISP is unable to deal with the fact that the second DNS seed\nserving the domain testnet-seed.bitcoin.petertodd.org happens to be down\nright now. Note that some ISP's appear to both run buggy DNS servers,\nand redirect traffic meant to go to Google's 8.8.8 and 8.8.4.4 DNS\nservers to their own servers.\n\nI'd suggest that someone setup an alternate HTTP(S) based DNS seed for\nprotocol redundency.\n\n> What particular thing did you fix? It would be good to know for future\n> outages.\n\nDunno exactly. It appeared to be running fine when I logged into the\nmachine, but for whatever reason DNS requests just weren't getting\nresolved. Restarted and it was ok again.\n\n-- \n'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 490 bytes\nDesc: Digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140526/c87df7ed/attachment.sig>"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-26T22:12:05",
                "message_text_only": "You're very quick to point at others. Especially since they run software\nthat had the time to mature for about 30 years, and the protocol didn't\nreally change since then...\n\nThe last time it didn't work, the bug -- non RFC-conformance -- was on\nthe bitcoin seeders side. ISPs do weird things with DNS, but usually\nthey stay within the RFC.\n\nAnyway, without logs we don't have a chance to debug this issue. Any\nchance you could add simple logging to the seeder?\n\nDNS via HTTP? Never heard of that, at least it sounds weird as well.\n\n\nOn 05/26/2014 06:37 PM, Peter Todd wrote:\n> On Sun, May 25, 2014 at 09:12:10PM +0200, Andreas Schildbach wrote:\n>> Thanks for looking at the issue.\n>>\n>> Unfortunately, it still fails for me:\n>>\n>> $ nslookup testnet-seed.bitcoin.petertodd.org\n>> Server:\t\t127.0.1.1\n>> Address:\t127.0.1.1#53\n>>\n>> ** server can't find testnet-seed.bitcoin.petertodd.org: SERVFAIL\n>>\n>> Like I said, can you look at the logfiles how the requests arrive?\n> \n> There are no logfiles for DNS requests.\n> \n> I just checked on EC2 and my cellphone internet connection here in Tel\n> Aviv; both work fine. My best guess is that your DNS resolver locally or\n> at your ISP is unable to deal with the fact that the second DNS seed\n> serving the domain testnet-seed.bitcoin.petertodd.org happens to be down\n> right now. Note that some ISP's appear to both run buggy DNS servers,\n> and redirect traffic meant to go to Google's 8.8.8 and 8.8.4.4 DNS\n> servers to their own servers.\n> \n> I'd suggest that someone setup an alternate HTTP(S) based DNS seed for\n> protocol redundency.\n> \n>> What particular thing did you fix? It would be good to know for future\n>> outages.\n> \n> Dunno exactly. It appeared to be running fine when I logged into the\n> machine, but for whatever reason DNS requests just weren't getting\n> resolved. Restarted and it was ok again.\n> \n> \n> \n> ------------------------------------------------------------------------------\n> The best possible search technologies are now affordable for all companies.\n> Download your FREE open source Enterprise Search Engine today!\n> Our experts will assist you in its installation for $59/mo, no commitment.\n> Test it for FREE on our Cloud platform anytime!\n> http://pubads.g.doubleclick.net/gampad/clk?id=145328191&iu=/4140/ostg.clktrk\n> \n> \n> \n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-26T22:39:54",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 27 May 2014 01:12:05 GMT+03:00, Andreas Schildbach <andreas at schildbach.de> wrote:\n>You're very quick to point at others. Especially since they run\n>software\n>that had the time to mature for about 30 years, and the protocol didn't\n>really change since then...\n>\n>The last time it didn't work, the bug -- non RFC-conformance -- was on\n>the bitcoin seeders side. ISPs do weird things with DNS, but usually\n>they stay within the RFC.\n>\n>Anyway, without logs we don't have a chance to debug this issue. Any\n>chance you could add simple logging to the seeder?\n>\n>DNS via HTTP? Never heard of that, at least it sounds weird as well.\n\nHey, really sorry I don't have the time to fix this issue, been travelling for a few weeks for my consulting job. If you want to step up and volunteer please feel free.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTg8K6MxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhUWgCADCNe4CjWondwDCovkv\n+Cq7Yl3gLixvsTt5L9nllYc63/wt3GYliSIkR9baJ1QdPhckEjsvJV51XtdXPmJ5\nEwTEbkJe6gflVwprvXB+w7eJtwMgZy5UoaWIYIZAIGsGKtJA8sngU1t638ywm68a\nUEAcq/xACU47l2wPK/WU3uPY8ctGutCtXW2XDlDlCZOugqSc/8yaA76S5ogBicXw\nxXvf95uMPVPCqit6B8FHCG/DH7akKGcnv6lIBTfx25KjgpyMwaroPt6EkPuz96MK\nYbkQin0T0iW+X5WvXblO1mgq4fDrLE6J5x8sULFx/QKC9lgGB+cOQNKdyhxKOzF9\njtX7\n=SUP4\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-26T23:19:39",
                "message_text_only": "On 05/27/2014 12:39 AM, Peter Todd wrote:\n\n> On 27 May 2014 01:12:05 GMT+03:00, Andreas Schildbach\n> <andreas at schildbach.de> wrote:\n>> You're very quick to point at others. Especially since they run \n>> software that had the time to mature for about 30 years, and the\n>> protocol didn't really change since then...\n> \n>> The last time it didn't work, the bug -- non RFC-conformance --\n>> was on the bitcoin seeders side. ISPs do weird things with DNS,\n>> but usually they stay within the RFC.\n> \n>> Anyway, without logs we don't have a chance to debug this issue.\n>> Any chance you could add simple logging to the seeder?\n> \n>> DNS via HTTP? Never heard of that, at least it sounds weird as\n>> well.\n> \n> Hey, really sorry I don't have the time to fix this issue, been\n> travelling for a few weeks for my consulting job. If you want to\n> step up and volunteer please feel free.\n\nI'm already volunteering. At least I don't get paid for my efforts in\ndebugging the seed infrastructure.\n\nCan you verify if your copy of the seeder contains the commit\n8dcc006e6256cb746c2b025daf3df41baa26353e ?\n\nIt fixed a bug that has exactly the symptoms we currently see.\n\nI wonder if the restart of your server actually changed/fixed\nanything. If you got a SERVFAIL this may be because you were traveling\nthrough parts of the world that can't reach your server. Did you\nactually try at home, before the restart?"
            },
            {
                "author": "Peter Todd",
                "date": "2014-05-30T09:43:12",
                "message_text_only": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n\n\nOn 27 May 2014 02:19:39 GMT+03:00, Andreas Schildbach <andreas at schildbach.de> wrote:\n>> Hey, really sorry I don't have the time to fix this issue, been\n>> travelling for a few weeks for my consulting job. If you want to\n>> step up and volunteer please feel free.\n>\n>I'm already volunteering. At least I don't get paid for my efforts in\n>debugging the seed infrastructure.\n\nI meant running a seed yourself. Note that I've only received funds to cover expenses and a trivial amount on top to cover some time - about one and a half hours at my usual rates.\n\nGavin: Speaking of, given it looks like my work will be frequently keeping me out of country and unable to provide any more than a \"best effort\" attempt at running a seed, I'd like to give back the grant funds for doing so. Email me privately with an address to send them too. I have no plans to take it down, however the expectations users have for it aren't something I can provide.\n\n>Can you verify if your copy of the seeder contains the commit\n>8dcc006e6256cb746c2b025daf3df41baa26353e ?\n>\n>It fixed a bug that has exactly the symptoms we currently see.\n>\n>I wonder if the restart of your server actually changed/fixed\n>anything. If you got a SERVFAIL this may be because you were traveling\n>through parts of the world that can't reach your server. Did you\n>actually try at home, before the restart?\n\nI checked via the same proxy both times; I believe the endpoint is located in Europe.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJTiFKwMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQFCB/4jypD+xzKVp6fqRUxu\nv22Rc6PeCbeaPYKmdNu0LbY1G5spB8C8ooaZX6z0Ib/CYobzDPJ+rJNB+c1Fna4N\n1IdH7ZsrX0GFaEn7Grnp7D2rtOXGZV+1XGFAateIA/caQ9+rJfqkHLuvOI0Fh+Ua\n/m857rxUNtA1kObLFS7gfhi2gwXGO6KQ3muS3462hXVVc9j7DhOWQQwJba5PL+Je\nEob4WtnF2gVFlCEWevxvflF7j4lW9I/S81yZQDnNW9ATF2mfZVqo26sB0yL6Tm4l\nKgdKx7+w3khv6QfW9Ilx0Ov3Ml2ZMRhBimpbnENbW4jfklsuRQcM0yx6vXS/lIMz\nLO5s\n=Up3N\n-----END PGP SIGNATURE-----"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-30T13:19:05",
                "message_text_only": "Hi Peter\n\n\nI've setup DNS seeds myself a week ago, at testnet-seed.alexykot.me and\nbitcoin-seed.alexykot.me, but there is a problem with DNS settings that we\nwith Andreas couldn't sort out quickly.\nThe problem itself is that I can reach my nameserver and get dnsseed\nresponse if I query it directly with\ndig @node.alexykot.me testnet-seed.alexykot.me\ndig @node.alexykot.me bitcoin-seed.alexykot.me\n\n\u200bBut when I try nslookup testnet-seed.alexykot.me\u200b - it fails.\nI guess the problem is in my DNS settings but I can't figure out what is it.\n\n\u200bS\no could you share\n\u200bhow you configured\nDNS\n\u200b for your seed\n\u200b\nto help me debug\n\u200bmine\n?\n\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-30 10:43 GMT+01:00 Peter Todd <pete at petertodd.org>:\n\n> -----BEGIN PGP SIGNED MESSAGE-----\n> Hash: SHA256\n>\n>\n>\n> On 27 May 2014 02:19:39 GMT+03:00, Andreas Schildbach <\n> andreas at schildbach.de> wrote:\n> >> Hey, really sorry I don't have the time to fix this issue, been\n> >> travelling for a few weeks for my consulting job. If you want to\n> >> step up and volunteer please feel free.\n> >\n> >I'm already volunteering. At least I don't get paid for my efforts in\n> >debugging the seed infrastructure.\n>\n> I meant running a seed yourself. Note that I've only received funds to\n> cover expenses and a trivial amount on top to cover some time - about one\n> and a half hours at my usual rates.\n>\n> Gavin: Speaking of, given it looks like my work will be frequently keeping\n> me out of country and unable to provide any more than a \"best effort\"\n> attempt at running a seed, I'd like to give back the grant funds for doing\n> so. Email me privately with an address to send them too. I have no plans to\n> take it down, however the expectations users have for it aren't something I\n> can provide.\n>\n> >Can you verify if your copy of the seeder contains the commit\n> >8dcc006e6256cb746c2b025daf3df41baa26353e ?\n> >\n> >It fixed a bug that has exactly the symptoms we currently see.\n> >\n> >I wonder if the restart of your server actually changed/fixed\n> >anything. If you got a SERVFAIL this may be because you were traveling\n> >through parts of the world that can't reach your server. Did you\n> >actually try at home, before the restart?\n>\n> I checked via the same proxy both times; I believe the endpoint is located\n> in Europe.\n> -----BEGIN PGP SIGNATURE-----\n> Version: APG v1.1.1\n>\n> iQFQBAEBCAA6BQJTiFKwMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\n> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQFCB/4jypD+xzKVp6fqRUxu\n> v22Rc6PeCbeaPYKmdNu0LbY1G5spB8C8ooaZX6z0Ib/CYobzDPJ+rJNB+c1Fna4N\n> 1IdH7ZsrX0GFaEn7Grnp7D2rtOXGZV+1XGFAateIA/caQ9+rJfqkHLuvOI0Fh+Ua\n> /m857rxUNtA1kObLFS7gfhi2gwXGO6KQ3muS3462hXVVc9j7DhOWQQwJba5PL+Je\n> Eob4WtnF2gVFlCEWevxvflF7j4lW9I/S81yZQDnNW9ATF2mfZVqo26sB0yL6Tm4l\n> KgdKx7+w3khv6QfW9Ilx0Ov3Ml2ZMRhBimpbnENbW4jfklsuRQcM0yx6vXS/lIMz\n> LO5s\n> =Up3N\n> -----END PGP SIGNATURE-----\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Time is money. Stop wasting it! Get your web API in 5 minutes.\n> www.restlet.com/download\n> http://p.sf.net/sfu/restlet\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/9fe8be01/attachment.html>"
            },
            {
                "author": "Robert McKay",
                "date": "2014-05-30T13:41:39",
                "message_text_only": "Hi Alex,\n\nI think the problem is with my suggestion to use bind forwarding.. \nbasically bind is stripping off the authorative answer bit in the \nreply.. this causes the recursor to go into a loop chasing the authority \nserver which again returns a non-authoritve answer with itself as the \nauthority again. I'm not sure if this can be fixed without hacking the \nbind src, so maybe it wasn't such a great suggestion in the first place. \nBasically I think if bind was returning authorative answers it would \nwork, but I can't see any way to make that happen in the bind \nconfiguration.\n\nRob\n\n\nOn Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:\n> Hi Peter\n>\n> Ive setup DNS seeds myself a week ago, at testnet-seed.alexykot.me \n> [6]\n> and bitcoin-seed.alexykot.me [7], but there is a problem with DNS\n> settings that we with Andreas couldnt sort out quickly.\n> The problem itself is that I can reach my nameserver and get dnsseed\n> response if I query it directly with\n>  dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]\n>\n>  dig @node.alexykot.me [10] bitcoin-seed.alexykot.me [11]\n>\n> \u200bBut when I try nslookup testnet-seed.alexykot.me [12]\u200b - it\n> fails.\u00a0\n> I guess the problem is in my DNS settings but I cant figure out what\n> is it.\n>\n> \u200bS o could you share\n> \u200bhow you configured\u00a0DNS\n>  \u200b for your seed\n> \u200b to help me debug\n>  \u200bmine\n> ?\u00a0\n>\n> Best regards,\u00a0\n>\n> Alex Kotenko\n>\n> 2014-05-30 10:43 GMT+01:00 Peter Todd :\n>\n>> -----BEGIN PGP SIGNED MESSAGE-----\n>> Hash: SHA256\n>>\n>> On 27 May 2014 02:19:39 GMT+03:00, Andreas Schildbach wrote:\n>> >> Hey, really sorry I dont have the time to fix this issue, been\n>> >> travelling for a few weeks for my consulting job. If you want to\n>> >> step up and volunteer please feel free.\n>> >\n>> >Im already volunteering. At least I dont get paid for my efforts\n>> in\n>> >debugging the seed infrastructure.\n>>\n>> I meant running a seed yourself. Note that Ive only received funds\n>> to cover expenses and a trivial amount on top to cover some time -\n>> about one and a half hours at my usual rates.\n>>\n>> Gavin: Speaking of, given it looks like my work will be frequently\n>> keeping me out of country and unable to provide any more than a\n>> \"best effort\" attempt at running a seed, Id like to give back the\n>> grant funds for doing so. Email me privately with an address to send\n>> them too. I have no plans to take it down, however the expectations\n>> users have for it arent something I can provide.\n>>\n>> >Can you verify if your copy of the seeder contains the commit\n>> >8dcc006e6256cb746c2b025daf3df41baa26353e ?\n>> >\n>> >It fixed a bug that has exactly the symptoms we currently see.\n>> >\n>> >I wonder if the restart of your server actually changed/fixed\n>> >anything. If you got a SERVFAIL this may be because you were\n>> traveling\n>> >through parts of the world that cant reach your server. Did you\n>> >actually try at home, before the restart?\n>>\n>> I checked via the same proxy both times; I believe the endpoint is\n>> located in Europe.\n>>\n>> -----BEGIN PGP SIGNATURE-----\n>> Version: APG v1.1.1\n>>\n>> iQFQBAEBCAA6BQJTiFKwMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\n>> cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhQFCB/4jypD+xzKVp6fqRUxu\n>> v22Rc6PeCbeaPYKmdNu0LbY1G5spB8C8ooaZX6z0Ib/CYobzDPJ+rJNB+c1Fna4N\n>> 1IdH7ZsrX0GFaEn7Grnp7D2rtOXGZV+1XGFAateIA/caQ9+rJfqkHLuvOI0Fh+Ua\n>> /m857rxUNtA1kObLFS7gfhi2gwXGO6KQ3muS3462hXVVc9j7DhOWQQwJba5PL+Je\n>> Eob4WtnF2gVFlCEWevxvflF7j4lW9I/S81yZQDnNW9ATF2mfZVqo26sB0yL6Tm4l\n>> KgdKx7+w3khv6QfW9Ilx0Ov3Ml2ZMRhBimpbnENbW4jfklsuRQcM0yx6vXS/lIMz\n>> LO5s\n>> =Up3N\n>> -----END PGP SIGNATURE-----\n>>\n>>\n> \n> ------------------------------------------------------------------------------\n>> Time is money. Stop wasting it! Get your web API in 5 minutes.\n>> www.restlet.com/download [2]\n>> http://p.sf.net/sfu/restlet [3]\n>>\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net [4]\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>> [5]\n>\n>\n>\n> Links:\n> ------\n> [1] mailto:andreas at schildbach.de\n> [2] http://www.restlet.com/download\n> [3] http://p.sf.net/sfu/restlet\n> [4] mailto:Bitcoin-development at lists.sourceforge.net\n> [5] https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> [6] http://testnet-seed.alexykot.me\n> [7] http://bitcoin-seed.alexykot.me\n> [8] http://node.alexykot.me\n> [9] http://testnet-seed.alexykot.me\n> [10] http://alexykot.me\n> [11] http://bitcoin-seed.alexykot.me\n> [12] http://testnet-seed.alexykot.me\n> [13] mailto:pete at petertodd.org"
            },
            {
                "author": "Alex Kotenko",
                "date": "2014-05-30T14:13:36",
                "message_text_only": "Hmm, you might be right, as queries\ndig @node.alexykot.me testnet-seed.alexykot.me\n\u200band\ndig @node.alexykot.me -p 18353 testnet-seed.alexykot.me\u200b\n\n\u200bare giving different authority sections.\n\nHmm, but if I setup custom SOA record for it - it should work, right?\nWhat SOA name should it be actually, assuming that NS record for\ntestnet-seed.alexykot.me is pointing at alexykot.me?\n\n\nBest regards,\nAlex Kotenko\n\n\n2014-05-30 14:41 GMT+01:00 Robert McKay <robert at mckay.com>:\n\n> Hi Alex,\n>\n> I think the problem is with my suggestion to use bind forwarding..\n> basically bind is stripping off the authorative answer bit in the reply..\n> this causes the recursor to go into a loop chasing the authority server\n> which again returns a non-authoritve answer with itself as the authority\n> again. I'm not sure if this can be fixed without hacking the bind src, so\n> maybe it wasn't such a great suggestion in the first place. Basically I\n> think if bind was returning authorative answers it would work, but I can't\n> see any way to make that happen in the bind configuration.\n>\n> Rob\n>\n>\n> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:\n>\n>> Hi Peter\n>>\n>> Ive setup DNS seeds myself a week ago, at testnet-seed.alexykot.me [6]\n>> and bitcoin-seed.alexykot.me [7], but there is a problem with DNS\n>> settings that we with Andreas couldnt sort out quickly.\n>>\n>> The problem itself is that I can reach my nameserver and get dnsseed\n>> response if I query it directly with\n>>  dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]\n>>\n>>  dig @node.alexykot.me [10] bitcoin-seed.alexykot.me [11]\n>>\n>> \u200bBut when I try nslookup testnet-seed.alexykot.me [12]\u200b - it\n>> fails.\n>> I guess the problem is in my DNS settings but I cant figure out what\n>> is it.\n>>\n>> \u200bS o could you share\n>> \u200bhow you configured DNS\n>>  \u200b for your seed\n>> \u200b to help me debug\n>>  \u200bmine\n>> ?\n>>\n>> Best regards,\n>>\n>> Alex Kotenko\n>> \u200b\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/a4fe95aa/attachment.html>"
            },
            {
                "author": "Robert McKay",
                "date": "2014-05-30T14:51:58",
                "message_text_only": "No, I don't think so. The problem is the 'aa' flag is missing (see the \n'flags' section in dig). Perhaps if you could suppress the authority \nrecords the recursor would give up and just accept the non-authorative \nanswer, but that isn't a good solution even if it might work for some \nresolvers.\n\nRob\n\nOn Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:\n> Hmm, you might be right, as queries\u00a0\n> dig @node.alexykot.me [8]\u00a0testnet-seed.alexykot.me [9]\n>\n> \u200band\u00a0\n>  dig @node.alexykot.me [10]\u00a0-p 18353\u00a0testnet-seed.alexykot.me\n> [11]\u200b\n>\n> \u200bare giving different authority sections.\n>\n> Hmm, but if I setup custom SOA record for it - it should work,\n> right?\u00a0\n>  What SOA name should it be actually, assuming that NS record for\n> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?\n>\n> Best regards,\u00a0\n>\n> Alex Kotenko\n>\n> 2014-05-30 14:41 GMT+01:00 Robert McKay :\n>\n>> Hi Alex,\n>>\n>> I think the problem is with my suggestion to use bind forwarding..\n>> basically bind is stripping off the authorative answer bit in the\n>> reply.. this causes the recursor to go into a loop chasing the\n>> authority server which again returns a non-authoritve answer with\n>> itself as the authority again. Im not sure if this can be fixed\n>> without hacking the bind src, so maybe it wasnt such a great\n>> suggestion in the first place. Basically I think if bind was\n>> returning authorative answers it would work, but I cant see any way\n>> to make that happen in the bind configuration.\n>>\n>> Rob\n>>\n>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:\n>>\n>>> Hi Peter\n>>>\n>>> Ive setup DNS seeds myself a week ago, at\n>>> testnet-seed.alexykot.me [1] [6]\n>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem with\n>>> DNS\n>>> settings that we with Andreas couldnt sort out quickly.\n>>>\n>>> The problem itself is that I can reach my nameserver and get\n>>> dnsseed\n>>> response if I query it directly with\n>>> \u00a0dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]\n>>>\n>>> \u00a0dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]\n>>> [11]\n>>>\n>>> \u200bBut when I try nslookup testnet-seed.alexykot.me [7] [12]\u200b -\n>>> it\n>>> fails.\u00a0\n>>> I guess the problem is in my DNS settings but I cant figure out\n>>> what\n>>> is it.\n>>>\n>>> \u200bS o could you share\n>>> \u200bhow you configured\u00a0DNS\n>>> \u00a0\u200b for your seed\n>>> \u200b to help me debug\n>>> \u00a0\u200bmine\n>>> ?\u00a0\n>>>\n>>> Best regards,\u00a0\n>>>\n>>> Alex Kotenko\n>>>\n>>> \u200b\n>\n>\n> Links:\n> ------\n> [1] http://testnet-seed.alexykot.me\n> [2] http://bitcoin-seed.alexykot.me\n> [3] http://node.alexykot.me\n> [4] http://testnet-seed.alexykot.me\n> [5] http://node.alexykot.me\n> [6] http://bitcoin-seed.alexykot.me\n> [7] http://testnet-seed.alexykot.me\n> [8] http://node.alexykot.me/\n> [9] http://testnet-seed.alexykot.me/\n> [10] http://node.alexykot.me/\n> [11] http://testnet-seed.alexykot.me/\n> [12] http://testnet-seed.alexykot.me\n> [13] http://alexykot.me\n> [14] mailto:robert at mckay.com"
            },
            {
                "author": "Pieter Wuille",
                "date": "2014-05-30T15:24:15",
                "message_text_only": "I don't think it would be too hard to add support for a option to the\nseeder \"for non-matching requests, forward to other DNS server at\nIP:PORT\", so you could cascade them.\n\nOn Fri, May 30, 2014 at 4:51 PM, Robert McKay <robert at mckay.com> wrote:\n> No, I don't think so. The problem is the 'aa' flag is missing (see the\n> 'flags' section in dig). Perhaps if you could suppress the authority\n> records the recursor would give up and just accept the non-authorative\n> answer, but that isn't a good solution even if it might work for some\n> resolvers.\n>\n> Rob\n>\n> On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:\n>> Hmm, you might be right, as queries\n>> dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]\n>>\n>> and\n>>  dig @node.alexykot.me [10] -p 18353 testnet-seed.alexykot.me\n>> [11]\n>>\n>> are giving different authority sections.\n>>\n>> Hmm, but if I setup custom SOA record for it - it should work,\n>> right?\n>>  What SOA name should it be actually, assuming that NS record for\n>> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?\n>>\n>> Best regards,\n>>\n>> Alex Kotenko\n>>\n>> 2014-05-30 14:41 GMT+01:00 Robert McKay :\n>>\n>>> Hi Alex,\n>>>\n>>> I think the problem is with my suggestion to use bind forwarding..\n>>> basically bind is stripping off the authorative answer bit in the\n>>> reply.. this causes the recursor to go into a loop chasing the\n>>> authority server which again returns a non-authoritve answer with\n>>> itself as the authority again. Im not sure if this can be fixed\n>>> without hacking the bind src, so maybe it wasnt such a great\n>>> suggestion in the first place. Basically I think if bind was\n>>> returning authorative answers it would work, but I cant see any way\n>>> to make that happen in the bind configuration.\n>>>\n>>> Rob\n>>>\n>>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:\n>>>\n>>>> Hi Peter\n>>>>\n>>>> Ive setup DNS seeds myself a week ago, at\n>>>> testnet-seed.alexykot.me [1] [6]\n>>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem with\n>>>> DNS\n>>>> settings that we with Andreas couldnt sort out quickly.\n>>>>\n>>>> The problem itself is that I can reach my nameserver and get\n>>>> dnsseed\n>>>> response if I query it directly with\n>>>>  dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]\n>>>>\n>>>>  dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]\n>>>> [11]\n>>>>\n>>>> But when I try nslookup testnet-seed.alexykot.me [7] [12] -\n>>>> it\n>>>> fails.\n>>>> I guess the problem is in my DNS settings but I cant figure out\n>>>> what\n>>>> is it.\n>>>>\n>>>> S o could you share\n>>>> how you configured DNS\n>>>>   for your seed\n>>>> to help me debug\n>>>>  mine\n>>>> ?\n>>>>\n>>>> Best regards,\n>>>>\n>>>> Alex Kotenko\n>>>>\n>>>>\n>>\n>>\n>> Links:\n>> ------\n>> [1] http://testnet-seed.alexykot.me\n>> [2] http://bitcoin-seed.alexykot.me\n>> [3] http://node.alexykot.me\n>> [4] http://testnet-seed.alexykot.me\n>> [5] http://node.alexykot.me\n>> [6] http://bitcoin-seed.alexykot.me\n>> [7] http://testnet-seed.alexykot.me\n>> [8] http://node.alexykot.me/\n>> [9] http://testnet-seed.alexykot.me/\n>> [10] http://node.alexykot.me/\n>> [11] http://testnet-seed.alexykot.me/\n>> [12] http://testnet-seed.alexykot.me\n>> [13] http://alexykot.me\n>> [14] mailto:robert at mckay.com\n>\n>\n> ------------------------------------------------------------------------------\n> Time is money. Stop wasting it! Get your web API in 5 minutes.\n> www.restlet.com/download\n> http://p.sf.net/sfu/restlet\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Andreas Schildbach",
                "date": "2014-05-30T15:40:06",
                "message_text_only": "I maybe have made this suggestion in the past, but why don't we teach\nthe seeder (or maybe even plain bitcoind) how to write a zone file and\nthen use matured DNS servers to serve this zone?\n\nI admit I never ran my own DNS so I'm not sure if that can work -- but\nto me it sounds like the easiest approach plus everyone can just use\nstock server software.\n\n\nOn 05/30/2014 05:24 PM, Pieter Wuille wrote:\n> I don't think it would be too hard to add support for a option to the\n> seeder \"for non-matching requests, forward to other DNS server at\n> IP:PORT\", so you could cascade them.\n> \n> On Fri, May 30, 2014 at 4:51 PM, Robert McKay <robert at mckay.com> wrote:\n>> No, I don't think so. The problem is the 'aa' flag is missing (see the\n>> 'flags' section in dig). Perhaps if you could suppress the authority\n>> records the recursor would give up and just accept the non-authorative\n>> answer, but that isn't a good solution even if it might work for some\n>> resolvers.\n>>\n>> Rob\n>>\n>> On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:\n>>> Hmm, you might be right, as queries\n>>> dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]\n>>>\n>>> and\n>>>  dig @node.alexykot.me [10] -p 18353 testnet-seed.alexykot.me\n>>> [11]\n>>>\n>>> are giving different authority sections.\n>>>\n>>> Hmm, but if I setup custom SOA record for it - it should work,\n>>> right?\n>>>  What SOA name should it be actually, assuming that NS record for\n>>> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?\n>>>\n>>> Best regards,\n>>>\n>>> Alex Kotenko\n>>>\n>>> 2014-05-30 14:41 GMT+01:00 Robert McKay :\n>>>\n>>>> Hi Alex,\n>>>>\n>>>> I think the problem is with my suggestion to use bind forwarding..\n>>>> basically bind is stripping off the authorative answer bit in the\n>>>> reply.. this causes the recursor to go into a loop chasing the\n>>>> authority server which again returns a non-authoritve answer with\n>>>> itself as the authority again. Im not sure if this can be fixed\n>>>> without hacking the bind src, so maybe it wasnt such a great\n>>>> suggestion in the first place. Basically I think if bind was\n>>>> returning authorative answers it would work, but I cant see any way\n>>>> to make that happen in the bind configuration.\n>>>>\n>>>> Rob\n>>>>\n>>>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:\n>>>>\n>>>>> Hi Peter\n>>>>>\n>>>>> Ive setup DNS seeds myself a week ago, at\n>>>>> testnet-seed.alexykot.me [1] [6]\n>>>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem with\n>>>>> DNS\n>>>>> settings that we with Andreas couldnt sort out quickly.\n>>>>>\n>>>>> The problem itself is that I can reach my nameserver and get\n>>>>> dnsseed\n>>>>> response if I query it directly with\n>>>>>  dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]\n>>>>>\n>>>>>  dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]\n>>>>> [11]\n>>>>>\n>>>>> But when I try nslookup testnet-seed.alexykot.me [7] [12] -\n>>>>> it\n>>>>> fails.\n>>>>> I guess the problem is in my DNS settings but I cant figure out\n>>>>> what\n>>>>> is it.\n>>>>>\n>>>>> S o could you share\n>>>>> how you configured DNS\n>>>>>   for your seed\n>>>>> to help me debug\n>>>>>  mine\n>>>>> ?\n>>>>>\n>>>>> Best regards,\n>>>>>\n>>>>> Alex Kotenko\n>>>>>\n>>>>>\n>>>\n>>>\n>>> Links:\n>>> ------\n>>> [1] http://testnet-seed.alexykot.me\n>>> [2] http://bitcoin-seed.alexykot.me\n>>> [3] http://node.alexykot.me\n>>> [4] http://testnet-seed.alexykot.me\n>>> [5] http://node.alexykot.me\n>>> [6] http://bitcoin-seed.alexykot.me\n>>> [7] http://testnet-seed.alexykot.me\n>>> [8] http://node.alexykot.me/\n>>> [9] http://testnet-seed.alexykot.me/\n>>> [10] http://node.alexykot.me/\n>>> [11] http://testnet-seed.alexykot.me/\n>>> [12] http://testnet-seed.alexykot.me\n>>> [13] http://alexykot.me\n>>> [14] mailto:robert at mckay.com\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Time is money. Stop wasting it! Get your web API in 5 minutes.\n>> www.restlet.com/download\n>> http://p.sf.net/sfu/restlet\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n> \n> ------------------------------------------------------------------------------\n> Time is money. Stop wasting it! Get your web API in 5 minutes.\n> www.restlet.com/download\n> http://p.sf.net/sfu/restlet\n>"
            },
            {
                "author": "Robert McKay",
                "date": "2014-05-30T15:54:38",
                "message_text_only": "A simple hack would be to crontab up a couple of dig scripts that every \nminute 'dig' (dig's output is in bind zonefile format) the bitcoin-seed \nand write the results to two zonefiles that bind can then serve.\n\nBasically\n\ndig @127.0.0.1 -p 5353 > zonefile1.zone\ndig @127.0.0.1 -p 5354 > zonefile2.zone\n\npkill -HUP named\n\nUgly, but should work.\n\nRob\n\nOn Fri, 30 May 2014 17:40:06 +0200, Andreas Schildbach wrote:\n> I maybe have made this suggestion in the past, but why don't we teach\n> the seeder (or maybe even plain bitcoind) how to write a zone file \n> and\n> then use matured DNS servers to serve this zone?\n>\n> I admit I never ran my own DNS so I'm not sure if that can work -- \n> but\n> to me it sounds like the easiest approach plus everyone can just use\n> stock server software.\n>\n>\n> On 05/30/2014 05:24 PM, Pieter Wuille wrote:\n>> I don't think it would be too hard to add support for a option to \n>> the\n>> seeder \"for non-matching requests, forward to other DNS server at\n>> IP:PORT\", so you could cascade them.\n>>\n>> On Fri, May 30, 2014 at 4:51 PM, Robert McKay <robert at mckay.com> \n>> wrote:\n>>> No, I don't think so. The problem is the 'aa' flag is missing (see \n>>> the\n>>> 'flags' section in dig). Perhaps if you could suppress the \n>>> authority\n>>> records the recursor would give up and just accept the \n>>> non-authorative\n>>> answer, but that isn't a good solution even if it might work for \n>>> some\n>>> resolvers.\n>>>\n>>> Rob\n>>>\n>>> On Fri, 30 May 2014 15:13:36 +0100, Alex Kotenko wrote:\n>>>> Hmm, you might be right, as queries\n>>>> dig @node.alexykot.me [8] testnet-seed.alexykot.me [9]\n>>>>\n>>>> and\n>>>>  dig @node.alexykot.me [10] -p 18353 testnet-seed.alexykot.me\n>>>> [11]\n>>>>\n>>>> are giving different authority sections.\n>>>>\n>>>> Hmm, but if I setup custom SOA record for it - it should work,\n>>>> right?\n>>>>  What SOA name should it be actually, assuming that NS record for\n>>>> testnet-seed.alexykot.me [12] is pointing at alexykot.me [13]?\n>>>>\n>>>> Best regards,\n>>>>\n>>>> Alex Kotenko\n>>>>\n>>>> 2014-05-30 14:41 GMT+01:00 Robert McKay :\n>>>>\n>>>>> Hi Alex,\n>>>>>\n>>>>> I think the problem is with my suggestion to use bind \n>>>>> forwarding..\n>>>>> basically bind is stripping off the authorative answer bit in the\n>>>>> reply.. this causes the recursor to go into a loop chasing the\n>>>>> authority server which again returns a non-authoritve answer with\n>>>>> itself as the authority again. Im not sure if this can be fixed\n>>>>> without hacking the bind src, so maybe it wasnt such a great\n>>>>> suggestion in the first place. Basically I think if bind was\n>>>>> returning authorative answers it would work, but I cant see any \n>>>>> way\n>>>>> to make that happen in the bind configuration.\n>>>>>\n>>>>> Rob\n>>>>>\n>>>>> On Fri, 30 May 2014 14:19:05 +0100, Alex Kotenko wrote:\n>>>>>\n>>>>>> Hi Peter\n>>>>>>\n>>>>>> Ive setup DNS seeds myself a week ago, at\n>>>>>> testnet-seed.alexykot.me [1] [6]\n>>>>>> and bitcoin-seed.alexykot.me [2] [7], but there is a problem \n>>>>>> with\n>>>>>> DNS\n>>>>>> settings that we with Andreas couldnt sort out quickly.\n>>>>>>\n>>>>>> The problem itself is that I can reach my nameserver and get\n>>>>>> dnsseed\n>>>>>> response if I query it directly with\n>>>>>>  dig @node.alexykot.me [3] [8] testnet-seed.alexykot.me [4] [9]\n>>>>>>\n>>>>>>  dig @node.alexykot.me [5] [10] bitcoin-seed.alexykot.me [6]\n>>>>>> [11]\n>>>>>>\n>>>>>> But when I try nslookup testnet-seed.alexykot.me [7] [12] -\n>>>>>> it\n>>>>>> fails.\n>>>>>> I guess the problem is in my DNS settings but I cant figure out\n>>>>>> what\n>>>>>> is it.\n>>>>>>\n>>>>>> S o could you share\n>>>>>> how you configured DNS\n>>>>>>   for your seed\n>>>>>> to help me debug\n>>>>>>  mine\n>>>>>> ?\n>>>>>>\n>>>>>> Best regards,\n>>>>>>\n>>>>>> Alex Kotenko\n>>>>>>\n>>>>>>\n>>>>\n>>>>\n>>>> Links:\n>>>> ------\n>>>> [1] http://testnet-seed.alexykot.me\n>>>> [2] http://bitcoin-seed.alexykot.me\n>>>> [3] http://node.alexykot.me\n>>>> [4] http://testnet-seed.alexykot.me\n>>>> [5] http://node.alexykot.me\n>>>> [6] http://bitcoin-seed.alexykot.me\n>>>> [7] http://testnet-seed.alexykot.me\n>>>> [8] http://node.alexykot.me/\n>>>> [9] http://testnet-seed.alexykot.me/\n>>>> [10] http://node.alexykot.me/\n>>>> [11] http://testnet-seed.alexykot.me/\n>>>> [12] http://testnet-seed.alexykot.me\n>>>> [13] http://alexykot.me\n>>>> [14] mailto:robert at mckay.com\n>>>\n>>>\n>>> \n>>> ------------------------------------------------------------------------------\n>>> Time is money. Stop wasting it! Get your web API in 5 minutes.\n>>> www.restlet.com/download\n>>> http://p.sf.net/sfu/restlet\n>>> _______________________________________________\n>>> Bitcoin-development mailing list\n>>> Bitcoin-development at lists.sourceforge.net\n>>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>> \n>> ------------------------------------------------------------------------------\n>> Time is money. Stop wasting it! Get your web API in 5 minutes.\n>> www.restlet.com/download\n>> http://p.sf.net/sfu/restlet\n>>\n>\n>\n>\n> \n> ------------------------------------------------------------------------------\n> Time is money. Stop wasting it! Get your web API in 5 minutes.\n> www.restlet.com/download\n> http://p.sf.net/sfu/restlet\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development"
            },
            {
                "author": "Pieter Wuille",
                "date": "2014-05-30T15:59:26",
                "message_text_only": "On Fri, May 30, 2014 at 5:40 PM, Andreas Schildbach\n<andreas at schildbach.de> wrote:\n> I maybe have made this suggestion in the past, but why don't we teach\n> the seeder (or maybe even plain bitcoind) how to write a zone file and\n> then use matured DNS servers to serve this zone?\n>\n> I admit I never ran my own DNS so I'm not sure if that can work -- but\n> to me it sounds like the easiest approach plus everyone can just use\n> stock server software.\n\nThat's what Matt's implementation is doing. You don't have to run mine :)\n\nI chose not to do so, as I wanted to be able to serve a different\nresponse to every query, but more diversity is a good thing.\n\n-- \nPieter"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-30T16:03:09",
                "message_text_only": "On Fri, May 30, 2014 at 8:40 AM, Andreas Schildbach\n<andreas at schildbach.de> wrote:\n> I maybe have made this suggestion in the past, but why don't we teach\n> the seeder (or maybe even plain bitcoind) how to write a zone file and\n> then use matured DNS servers to serve this zone?\n>\n> I admit I never ran my own DNS so I'm not sure if that can work -- but\n> to me it sounds like the easiest approach plus everyone can just use\n> stock server software.\n\nWe'd used an approach like that previously and I believe it produced\nfairly bad load imbalances, especially since some resolvers only pass\non a single result. And that was before there was a wide deployment of\nbroken client software that trusted the dnsseeds exclusively."
            }
        ],
        "thread_summary": {
            "title": "testnet-seed.bitcoin.petertodd.org is up again",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Robert McKay",
                "Alex Kotenko",
                "Andreas Schildbach",
                "Tim",
                "Peter Todd",
                "Gregory Maxwell",
                "Pieter Wuille"
            ],
            "messages_count": 17,
            "total_messages_chars_count": 42385
        }
    },
    {
        "title": "[Bitcoin-development] Cut-through propagation of blocks",
        "thread_messages": [
            {
                "author": "Ashley Holman",
                "date": "2014-05-24T03:57:05",
                "message_text_only": "Hi,\n\nOn this list there has been some discussion around techniques to speed up\nblock propagation, with a particular focus on reducing the extra orphan\nrisk carried by larger blocks.\n\nThe current store-and-forward method means that larger blocks will\npropagate with higher latency.  One proposed solution has been to broadcast\ntwo separate messages: a fast, fixed-size header message, and a 2nd, slower\nbody message containing the full block.  Whilst this allows larger blocks\nto compete equally with smaller blocks on the \"which came first\" rule, it\ncreates a new area of uncertain delay between receiving the header, and\nreceiving the body, where there may be perverse incentives to mine empty\nblocks on top of not-yet-valid headers.\n\nSo I would like to propose another method which is hopefully a less\nsignificant change to the existing protocol rules, but should help reduce\nthe latency gap between large and small blocks.\n\n* Skip the inv/getdata sequence for new blocks - just push them out\ndirectly to save 1 roundtrip per hop\n*  When receiving a new block from a peer, as soon as we have the first 80\nbytes (header) we can validate the PoW and, with only a low-level change to\nthe networking code, begin streaming that block to our peers (in the style\nof cut-through switching).\n* No other rules need to change.  Block primacy can still be determined as\nof the moment they are fully validated and accepted, but now the latency\ncaused by larger blocks is only (1 * BlockSize * BottleneckHopSpeed),\ninstead of (Sum[n=0 to NumHops](BlockSize * NodeBandwidth(n))).\n* As far as I can tell, this shouldn't change any game theory or incentives\nbecause nodes still receive blocks exactly as they do now, just sooner.\n The difference is, invalid blocks that meet the PoW will be broadcast to\neveryone, but this is nothing new since someone can peer with you and send\nyou an invalid block already.  Network DoS should not be a possibility\nsince it is very expensive to make invalid blocks that meet network PoW.\n\nThoughts?\n\nThanks\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/62e3e230/attachment.html>"
            },
            {
                "author": "Ashley Holman",
                "date": "2014-05-24T05:11:53",
                "message_text_only": "On Sat, May 24, 2014 at 1:27 PM, Ashley Holman <dscvlt at gmail.com> wrote:\n>\n> * Skip the inv/getdata sequence for new blocks - just push them out\n> directly to save 1 roundtrip per hop\n>\n\nUpon further reflection, I remove this from my proposal.  It's an unrelated\noptimisation that probably distracts from the main point which is the\ncut-through forwarding.  The rest of the proposal still works if the\ninv/getdata sequence is retained.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/ae751af3/attachment.html>"
            },
            {
                "author": "Bernd Jendrissek",
                "date": "2014-05-24T22:59:36",
                "message_text_only": "On Sat, May 24, 2014 at 5:57 AM, Ashley Holman <dscvlt at gmail.com> wrote:\n> * As far as I can tell, this shouldn't change any game theory or incentives\n> because nodes still receive blocks exactly as they do now, just sooner.  The\n> difference is, invalid blocks that meet the PoW will be broadcast to\n> everyone, but this is nothing new since someone can peer with you and send\n> you an invalid block already.  Network DoS should not be a possibility since\n> it is very expensive to make invalid blocks that meet network PoW.\n\nThe difference is that with cut-through forwarding of blocks, a\nsufficiently motivated attacker (being willing to blow 25BTC's worth\nof electricity on the effort) can subjugate the entire Bitcoin network\nto its DoS attack, rather than having to connect to every node\nindividually and then still have those individual nodes reject that\ninvalid block without relaying any knowledge of its existence.\n\nAn attack could also take the form of a block body that never arrives\n- a sort of teergrube attack, where the goal is to get the network\nmining empty block upon empty block on top of that valid-PoW header\nwhose body never arrives. It doesn't have to be with an explicitly\ninvalid block.\n\nCould one mitigate such attacks by allowing nodes to send a message to\nthe effect of, \"Oops, I know that header i just sent is valid PoW, but\nI'd like you to forget about it - I think its body is invalid\"?"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-24T23:16:43",
                "message_text_only": "On Fri, May 23, 2014 at 8:57 PM, Ashley Holman <dscvlt at gmail.com> wrote:\n> Hi,\n> On this list there has been some discussion around techniques to speed up\n> block propagation, with a particular focus on reducing the extra orphan risk\n> carried by larger blocks.\n> The current store-and-forward method means that larger blocks will propagate\n> with higher latency.\n\nFWIW, there are a lot of improvements which can be made before more\ncomplex changes like cut-through-forwarding that change the protocol.\n\nFor example, the reference software has a 100ms sleep in p2p message\nprocessing which could be replaced with a semaphore, this would\ndramatically lower latency for block relaying.\n\nLikewise nodes which are becoming bandwidth overloaded could adapt\ntheir concurrent connection counts down (and ones that are underloaded\ncould accept more connections).\n\nRelaying to multiple peers could be done in parallel instead of\nserialized, and the order in which peers are relayed to could be\nadapted to place more apparently useful and faster peers first, e.g.\nevery time a peer is the first to tell you about a block or\ntransaction you accept they move up the list, every time their socket\nsend queue fills they move down.\n\nLuke-Jr had implemented cut through behavior previously and had posted\na patch, but absent those other network processing improvements it\ndidn't appear to help.\n\n\nIf you want to go full out crazy in optimizing in this space, there\nare fancier things that can be done to further reduce latency and\nincrease efficiency:\nhttps://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding  ... but\nsome of this stuff really should be done as a seperate protocol. There\nis no need to have Bitcoin transport all using a single protocol, and\nwe can get better robustness and feature velocity if there are a\ncouple protocols in use (you could just run a block-transport-protocol\ndaemon that connects to your local node via the classic protocol)."
            },
            {
                "author": "Ashley Holman",
                "date": "2014-05-24T23:41:39",
                "message_text_only": "On Sun, May 25, 2014 at 8:29 AM, Bernd Jendrissek <bitcoin at bpj-code.co.za>\n wrote:\n>\n> The difference is that with cut-through forwarding of blocks, a\n> sufficiently motivated attacker (being willing to blow 25BTC's worth\n> of electricity on the effort) can subjugate the entire Bitcoin network\n> to its DoS attack, rather than having to connect to every node\n> individually and then still have those individual nodes reject that\n> invalid block without relaying any knowledge of its existence.\n>\n\nThat is true, but they could also apply the same hash power to mine valid\nblocks and would achieve the same outcome (their blocks would go to\neveryone), except they would get paid for it.  I wonder if it should even\nbe called DoS, due to the extreme and costly rate-limiting thats implied.\n\n\n\n> An attack could also take the form of a block body that never arrives\n> - a sort of teergrube attack, where the goal is to get the network\n> mining empty block upon empty block on top of that valid-PoW header\n> whose body never arrives. It doesn't have to be with an explicitly\n> invalid block.\n>\n\nThank you for raising this, as I share this concern.  There is another\nsimilar attack: if I send you a new block very slowly, I occupy all your\nupstream peer slots indefinitely until the block is complete, because there\nis no out-of-band messaging capability or ability to cancel a message.\n\nThere is also sub-optimal logic in choosing to download a block only from\nthe first person to offer it.  It means you are fetching it from the lowest\nlatency path, but what really matters is who can give it to you fastest.\n If there are multiple people who can send you a block at once, and you\nhave some idea of your spare upstream bandwidth capacity, why not let two\nor more peers compete to send you the block fastest?\n\nSo to implement this type of thing,  the p2p protocol should allow for\nmultiplexing of messages.  Something like HTTP chunked encoding.  It could\nbe in the form of:\n\n<msgid><chunksize><rawbytes>, <msgid><chunksize><rawbytes>,  etc etc\n\nYou only send a chunk once you've got the whole chunk in your buffer, so\nit's not possible to get hung up on a single slow message.   One block can\novertake another along the same hop path if it is being streamed faster.\n\nOn Sun, May 25, 2014 at 8:46 AM, Gregory Maxwell <gmaxwell at gmail.com>\n wrote:\n>\n> If you want to go full out crazy in optimizing in this space, there\n> are fancier things that can be done to further reduce latency and\n> increase efficiency:\n> https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding  ... but\n> some of this stuff really should be done as a seperate protocol. There\n> is no need to have Bitcoin transport all using a single protocol, and\n> we can get better robustness and feature velocity if there are a\n> couple protocols in use (you could just run a block-transport-protocol\n> daemon that connects to your local node via the classic protocol).\n\n\nWhat about a separate project which is a mesh router specifically designed\nfor low-latency transmission of blocks?  It could support things like a\nmore sophisticated/configurable routing table, and have some kind of\ndiscovery where it tries to optimise its topology.  There could even be\nsome way for nodes to prove their hash power, so pools can find each other\nand directly peer / prioritise sends.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140525/b81d24be/attachment.html>"
            },
            {
                "author": "Alan Reiner",
                "date": "2014-05-25T00:04:33",
                "message_text_only": "On 05/24/2014 07:41 PM, Ashley Holman wrote:\n> On Sun, May 25, 2014 at 8:29 AM, Bernd\n> Jendrissek <bitcoin at bpj-code.co.za\n> <mailto:bitcoin at bpj-code.co.za>> wrote:\n>\n>     The difference is that with cut-through forwarding of blocks, a\n>     sufficiently motivated attacker (being willing to blow 25BTC's worth\n>     of electricity on the effort) can subjugate the entire Bitcoin network\n>     to its DoS attack, rather than having to connect to every node\n>     individually and then still have those individual nodes reject that\n>     invalid block without relaying any knowledge of its existence.\n>\n>\n> That is true, but they could also apply the same hash power to mine\n> valid blocks and would achieve the same outcome (their blocks would go\n> to everyone), except they would get paid for it.  I wonder if it\n> should even be called DoS, due to the extreme and costly rate-limiting\n> thats implied.\n>\n>  \n>\n>     An attack could also take the form of a block body that never arrives\n>     - a sort of teergrube attack, where the goal is to get the network\n>     mining empty block upon empty block on top of that valid-PoW header\n>     whose body never arrives. It doesn't have to be with an explicitly\n>     invalid block.\n>\n>\n> Thank you for raising this, as I share this concern.  There is another\n> similar attack: if I send you a new block very slowly, I occupy all\n> your upstream peer slots indefinitely until the block is complete,\n> because there is no out-of-band messaging capability or ability to\n> cancel a message.\n>\n> There is also sub-optimal logic in choosing to download a block only\n> from the first person to offer it.  It means you are fetching it from\n> the lowest latency path, but what really matters is who can give it to\n> you fastest.  If there are multiple people who can send you a block at\n> once, and you have some idea of your spare upstream bandwidth\n> capacity, why not let two or more peers compete to send you the block\n> fastest?\n>\n> So to implement this type of thing,  the p2p protocol should allow for\n> multiplexing of messages.  Something like HTTP chunked encoding.  It\n> could be in the form of:\n>\n> <msgid><chunksize><rawbytes>, <msgid><chunksize><rawbytes>,  etc etc\n>\n> You only send a chunk once you've got the whole chunk in your buffer,\n> so it's not possible to get hung up on a single slow message.   One\n> block can overtake another along the same hop path if it is being\n> streamed faster.\n>\n> On Sun, May 25, 2014 at 8:46 AM, Gregory Maxwell <gmaxwell at gmail.com\n> <mailto:gmaxwell at gmail.com>> wrote: \n>\n>     If you want to go full out crazy in optimizing in this space, there\n>     are fancier things that can be done to further reduce latency and\n>     increase efficiency:\n>     https://en.bitcoin.it/wiki/User:Gmaxwell/block_network_coding  ... but\n>     some of this stuff really should be done as a seperate protocol. There\n>     is no need to have Bitcoin transport all using a single protocol, and\n>     we can get better robustness and feature velocity if there are a\n>     couple protocols in use (you could just run a block-transport-protocol\n>     daemon that connects to your local node via the classic protocol).\n>\n>\n> What about a separate project which is a mesh router specifically\n> designed for low-latency transmission of blocks?  It could support\n> things like a more sophisticated/configurable routing table, and have\n> some kind of discovery where it tries to optimise its topology.  There\n> could even be some way for nodes to prove their hash power, so pools\n> can find each other and directly peer / prioritise sends.\n>\n\nI think the most important change is modifying the way Bitcoin Core\nprioritizes blocks.  Right now it uses the first full block verified. \nInstead, it should consider the first valid header received as highest\npriority, but only mine on it once it has done full verification of the\nblock.  In other words, nodes will mine on whatever full/verified block\nthey have with the earliest header-received time.  If another header\ncomes in and the tx list is received before the first tx list is done,\nthen the node will mine the second block *until* it receives and\nverifies the first block, then it will switch to mining that first\nblock.  Most of the time there's no race, it will simply mine the block\nN-1 for an extra 1-3 seconds until it receives and verifies the full\nblock for the new header.\n\nThis at least solves part of the problem:  nodes are still only mining\non full blocks, but priority is given to *headers* that come first which\nis independent of block size.   As long as a block isn't found within\nthe 1-3 seconds, then each miner will switch when they finish receiving\nand verifying it.  If miners are concerned about that 1-3 second gap,\nthey should perhaps focus on making sure the tx they are mining are\nwell-propagated already, so that most of the network has most of the\ntransactions already in their memory pool by the time their block is mined.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/37cf72a1/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-25T00:14:59",
                "message_text_only": "On Sat, May 24, 2014 at 5:04 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n> I think the most important change is modifying the way Bitcoin Core\n> prioritizes blocks.  Right now it uses the first full block verified.\n> Instead, it should consider the first valid header received as highest\n> priority, but only mine on it once it has done full verification of the\n\nThis directly opens an attack where as soon as you find a block you\nannounce the header to the world and then you delay announcing the\nblock content.  You can continue to mine on the block but no one else\ncan (or alternatively they break their rule and risk extending an\ninvalid block\u2014 bad news for SPV wallets)\u2014 then when you find a\nsuccessor block or someone else finds a competing block you\nimmediately announce the content.\n\nIt basically means that you can always delay announcing a block and be\nsure that doing so doesn't deprive you of your winning position.\n\n> If miners are concerned about that 1-3 second gap, they\n> should perhaps focus on making sure the tx they are mining are\n> well-propagated already, so that most of the network has most of the\n> transactions already in their memory pool by the time their block is mined.\n\nWith an alternative transport protocol, assuming the content has\nalready been relayed a block could be sent in a couple back to back\nUDP packets.  (e.g. a few bytes per transaction to disambiguate the\ntransaction order out of the already sent transactions).  So I think\nvery similar latency could be achieved without doing any thing which\nmight increase the motivations for miners to misbehave."
            },
            {
                "author": "Alan Reiner",
                "date": "2014-05-25T00:38:41",
                "message_text_only": "On 05/24/2014 08:14 PM, Gregory Maxwell wrote:\n> On Sat, May 24, 2014 at 5:04 PM, Alan Reiner <etotheipi at gmail.com> wrote:\n>> I think the most important change is modifying the way Bitcoin Core\n>> prioritizes blocks.  Right now it uses the first full block verified.\n>> Instead, it should consider the first valid header received as highest\n>> priority, but only mine on it once it has done full verification of the\n> This directly opens an attack where as soon as you find a block you\n> announce the header to the world and then you delay announcing the\n> block content.  You can continue to mine on the block but no one else\n> can (or alternatively they break their rule and risk extending an\n> invalid block\u2014 bad news for SPV wallets)\u2014 then when you find a\n> successor block or someone else finds a competing block you\n> immediately announce the content.\n>\n> It basically means that you can always delay announcing a block and be\n> sure that doing so doesn't deprive you of your winning position.\n>\n>\n\nWould this not be solved by putting a expiration on application of this\nlogic?  For instance, if you haven't received the full new block within\n5-10 seconds (perhaps adjusted based on local bandwidth), then the\nheader-received time is ignored.  Or is this too hacky?   I suppose this\nis exactly what Ashley is trying to solve, she's just already made a few\nmore leaps forward in the design process than I have.  I'll stop\nderailing it."
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-25T09:36:40",
                "message_text_only": ">\n> There\n> is no need to have Bitcoin transport all using a single protocol, and\n> we can get better robustness and feature velocity if there are a\n> couple protocols in use (you could just run a block-transport-protocol\n> daemon that connects to your local node via the classic protocol).\n\n\nAlthough this is a somewhat appealing notion, would it really improve\nfeature velocity? I don't think the current p2p protocol is holding\nanything back, and having to implement features twice in two protocols\nwould slow things down quite a bit.\n\nProbably the lowest hanging fruit now is fixing the 100msec sleep and just\ngenerally having tools to measure latency and queuing inside the code.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140525/61868344/attachment.html>"
            },
            {
                "author": "Gregory Maxwell",
                "date": "2014-05-25T09:51:06",
                "message_text_only": "On Sun, May 25, 2014 at 2:36 AM, Mike Hearn <mike at plan99.net> wrote:\n> Although this is a somewhat appealing notion, would it really improve\n> feature velocity? I don't think the current p2p protocol is holding anything\n> back, and having to implement features twice in two protocols would slow\n> things down quite a bit.\n\nIf someone wanted to implement swanky UDP non-blocking transports or\ncomplex network coding schemes I'd probably want to see the proven in\nactual use before sticking them in the reference code, so yes.\n\nIt's also the case that the ~last addition we made to the P2P code\nadded a remotely exploitable crash bug.\n\nThere are some pretty distinct use cases out there\u2014 fast block\nrelaying, supporting thin clients, minimizing bandwidth (e.g. via\ncompression and tx/block redundancy elimination), etc. Some of them\nmay not be well handled by an external gateway, some of them (e.g.\nblock relaying) very much could be.\n\nThe nice thing with alternative protocols and gatewaying is that it\ncan proceed completely asynchronously with implementation development,\ne.g. revving versions as fast as the users of the protocol care, and\ncould potentially be used immediately with other bitcoin\nimplementations... and if its buggy it doesn't break the nodes using\nit: I'd be much more likely to run an experimental gateway in another\nprocess on a node than experimental p2p code inside my production\nbitcoinds themselves."
            },
            {
                "author": "Mike Hearn",
                "date": "2014-05-26T15:08:46",
                "message_text_only": ">\n> it: I'd be much more likely to run an experimental gateway in another\n> process on a node than experimental p2p code inside my production\n> bitcoinds themselves.\n>\n\nYes, it's certainly better to do that during the development phase. However\nif it does turn out to be good and valuable then it'd eventually need to be\nintegrated or rewritten into Core anyway, lest we accidentally increase the\nsetup cost of running a node and end up with a two-tier network. And if the\ncode will eventually want to be merged into Core anyway, it might as well\nbe implemented into it directly, perhaps behind a switch that can disable\nthose codepaths if something goes wrong.\n\nSo I think the tradeoffs here are rather complicated and subtle.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140526/8212a80b/attachment.html>"
            },
            {
                "author": "Jonathan Levin",
                "date": "2014-05-24T23:57:39",
                "message_text_only": "I have done some work on incentives arising from block propagation times and it turns out that Bitcoin is already quite good at establishing the primacy of blocks by time despite what people think. Part of the reason for this is the way that partitions on the network evolve as a block is propagated. Typically at the moment, blocks reach over 50% of the network in 5 seconds. Reach being defined as a node receiving and validating a block. If we make an assumption that the hashing power of the network is uniformly distributed over the nodes (I know it is not a good assumption but can discuss it off the list). Then 50% of the hashing power are already building a block that builds on top of the block that is already circulating. The probability that there is a collision on the network therefore falls fast and then the probability that the miner who propagated the first block wins given a collision occurs is rising. I think that block propagation times might actually be a bigger issue for miners who are less well connected to the network in the sense that they spend more time mining redundant problems and during that time may find blocks to compete with blocks that are already spreading throughout the network.\n\nI have a paper that models this more formally and has some numerical simulations but cannot publish it on the internet at present (University Regulations) but I am happy to share a version privately if anyone is interested.\n\nBest,\n\nJonathan\n\n--\nJonathan Levin\nCo-Founder Coinometrics\nhttp://www.coinometrics.com/\nPostgraduate Economist | St Antony's College | Oxford University\n@jony_levin\n@Coinometrics\n\n\n\n\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140524/835e5e86/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Cut-through propagation of blocks",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Jonathan Levin",
                "Ashley Holman",
                "Mike Hearn",
                "Bernd Jendrissek",
                "Alan Reiner",
                "Gregory Maxwell"
            ],
            "messages_count": 12,
            "total_messages_chars_count": 22957
        }
    },
    {
        "title": "[Bitcoin-development] Announce: Bitcoin.org Developer Documentation Now Live",
        "thread_messages": [
            {
                "author": "David A. Harding",
                "date": "2014-05-26T21:01:28",
                "message_text_only": "Hi all,\n\nThe first version of the Bitcoin.org Developer Documentation is now\nlive. The main URL (below) provides a portal to two main documents, an\noverview-level guide and a more detailed reference. The portal page also\nlinks to individual sections of the documentation and noteworthy\noff-site documentation:\n\n    https://bitcoin.org/en/developer-documentation\n\nIn printed pages, the current version is about 130 pages long in total.\nNotable parts include:\n\n* Technical, but still plain-English, descriptions of the block chain\n  and transactions, including several illustrations:\n\n    https://bitcoin.org/en/developer-guide#block-chain\n    https://bitcoin.org/en/developer-guide#transactions\n\n* A description of several different \"contracts\", including arbitration\n  contracts, micropayment channels, and coinjoin:\n\n    https://bitcoin.org/en/developer-guide#contracts\n\n* Information about wallet formats, including what we hope is a good\n  introduction to BIP32 HD wallets for people not already familiar with\n  ECDSA specifics:\n\n    https://bitcoin.org/en/developer-guide#wallets\n    https://bitcoin.org/en/developer-guide#hierarchical-deterministic-key-creation\n\n* A considerable amount of payment processing detail, currently aimed\n  primarily at developers writing payment-receiving applications for\n  merchants. It includes a step-by-step description of the BIP70 Payment\n  Protocol using an actual CGI script example.\n\n    https://bitcoin.org/en/developer-guide#payment-processing\n    https://bitcoin.org/en/developer-guide#payment-protocol\n\n* A description of every RPC included in Bitcoin Core 0.9\n  cross-referenced with the other sections of the documentation and\n  augmented with actual examples of the command in use.\n\n    https://bitcoin.org/en/developer-reference#remote-procedure-calls-rpcs\n\n* Not a section, but still notable are the over 2,000 cross-references\n  in the text---there are so many that we hide them by default. Hover\n  your mouse over a paragraph to see the cross references (in blue) and\n  hover your mouse over the link to see more information.\n\n\n\nAdditions and improvements to the text are being worked on right\nnow, with an average of 200 lines of text being added each day.\n\nWe are, however, in need of expert reviewers.  Issues can be opened on\nthe main Bitcoin.org repository:\n\n    https://github.com/bitcoin/bitcoin.org/issues/new\n\n(If you find an issue while reading the documentation, please click the\nReport An Issue link on the bottom left side---this will automatically\nadd the URL and nearest HTML anchor to your bug report so we know where\nto find what you're talking about.)\n\nWe also welcome suggestions about what to write next:\n\n    https://github.com/bitcoin/bitcoin.org/wiki/Documentation-TODO\n\nAll work has been done by volunteers---and we're always looking for more\ncontributors.  Please feel free to subscribe to our mailing list and say\nhello.\n\n    https://groups.google.com/forum/#!forum/bitcoin-documentation\n\nAnd, most importantly, thank you to everyone from the -dev mailing list\nwho has helped us produce this content over the last 80 days!\n\nSincerely,\n\n-Dave Harding on behalf of Sa\u00efvann Carignan, Greg Sanders, and all the\n documentation contributors\n-- \nDavid A. Harding"
            }
        ],
        "thread_summary": {
            "title": "Announce: Bitcoin.org Developer Documentation Now Live",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "David A. Harding"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 3236
        }
    },
    {
        "title": "[Bitcoin-development] Make links on 'About Bitcoin Core' into clickable #4211",
        "thread_messages": [
            {
                "author": "Tawanda Kembo",
                "date": "2014-05-28T16:37:40",
                "message_text_only": "Hello,\n\nI\u2019m new to bitcoin, I\u2019m a developer and I want to start contributing to the BitcoinQt project. My first contribution is to make the links on the \u2018About Bitcoin Core\u2019 clickable - personally I think it enhances the user experience. There is was some concern though of a tradeoff which makes it harder to translate that page. Here is the link to my pull request: https://github.com/bitcoin/bitcoin/pull/4211\n\nI\u2019m keen to hear what others think.\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140528/38789acf/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "Make links on 'About Bitcoin Core' into clickable #4211",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Tawanda Kembo"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 632
        }
    },
    {
        "title": "[Bitcoin-development] bitcoind minor bug in wallet and possible fix",
        "thread_messages": [
            {
                "author": "Toshi Morita",
                "date": "2014-05-30T00:01:23",
                "message_text_only": "I ran bitcoind under valgrind and found a place where it references an\nuninitialized variable in some cases:\n\ntm at tm-VirtualBox:~/bitcoind/bitcoin/src$ valgrind ./bitcoind\n==2337== Memcheck, a memory error detector\n==2337== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n==2337== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n==2337== Command: ./bitcoind\n==2337==\n==2337== Conditional jump or move depends on uninitialised value(s)\n==2337==    at 0x319176: CWallet::LoadKeyMetadata(CPubKey const&,\nCKeyMetadata const&) (wallet.cpp:110)\n==2337==    by 0x33645A: ReadKeyValue(CWallet*, CDataStream&, CDataStream&,\nCWalletScanState&, std::string&, std::string&) (walletdb.cpp:509)\n==2337==    by 0x3374F0: CWalletDB::LoadWallet(CWallet*) (walletdb.cpp:623)\n==2337==    by 0x3218FD: CWallet::LoadWallet(bool&) (wallet.cpp:1485)\n==2337==    by 0x157F16: AppInit2(boost::thread_group&) (init.cpp:958)\n==2337==    by 0x140142: AppInit(int, char**) (bitcoind.cpp:143)\n==2337==    by 0x13649E: main (bitcoind.cpp:180)\n==2337==\n\nThe bug occurs here because nTimeFirstKey is not initialized when the\nwallet is instantiated:\n\nwallet.cpp:63\n    if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n        nTimeFirstKey = nCreationTime;\n\n\nI fixed it in my fork:\n\ndiff --git a/src/wallet.h b/src/wallet.h\nindex 9607415..b78045f 100644\n--- a/src/wallet.h\n+++ b/src/wallet.h\n@@ -163,6 +163,7 @@ public:\n         nOrderPosNext = 0;\n         nNextResend = 0;\n         nLastResend = 0;\n+        nTimeFirstKey = 0;\n     }\n\nIf this fix is ok please pull from my GitHub fork; username on GitHub is\ntm314159.\n\nToshi\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140529/648eb59b/attachment.html>"
            },
            {
                "author": "Mark Friedenbach",
                "date": "2014-05-30T00:06:40",
                "message_text_only": "Please make a pull request on github. It'll likely get merged quickly.\nOn May 29, 2014 5:04 PM, \"Toshi Morita\" <toshi at peernova.com> wrote:\n\n> I ran bitcoind under valgrind and found a place where it references an\n> uninitialized variable in some cases:\n>\n> tm at tm-VirtualBox:~/bitcoind/bitcoin/src$ valgrind ./bitcoind\n> ==2337== Memcheck, a memory error detector\n> ==2337== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n> ==2337== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n> ==2337== Command: ./bitcoind\n> ==2337==\n> ==2337== Conditional jump or move depends on uninitialised value(s)\n> ==2337==    at 0x319176: CWallet::LoadKeyMetadata(CPubKey const&,\n> CKeyMetadata const&) (wallet.cpp:110)\n> ==2337==    by 0x33645A: ReadKeyValue(CWallet*, CDataStream&,\n> CDataStream&, CWalletScanState&, std::string&, std::string&)\n> (walletdb.cpp:509)\n> ==2337==    by 0x3374F0: CWalletDB::LoadWallet(CWallet*) (walletdb.cpp:623)\n> ==2337==    by 0x3218FD: CWallet::LoadWallet(bool&) (wallet.cpp:1485)\n> ==2337==    by 0x157F16: AppInit2(boost::thread_group&) (init.cpp:958)\n> ==2337==    by 0x140142: AppInit(int, char**) (bitcoind.cpp:143)\n> ==2337==    by 0x13649E: main (bitcoind.cpp:180)\n> ==2337==\n>\n> The bug occurs here because nTimeFirstKey is not initialized when the\n> wallet is instantiated:\n>\n> wallet.cpp:63\n>     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n>         nTimeFirstKey = nCreationTime;\n>\n>\n> I fixed it in my fork:\n>\n> diff --git a/src/wallet.h b/src/wallet.h\n> index 9607415..b78045f 100644\n> --- a/src/wallet.h\n> +++ b/src/wallet.h\n> @@ -163,6 +163,7 @@ public:\n>          nOrderPosNext = 0;\n>          nNextResend = 0;\n>          nLastResend = 0;\n> +        nTimeFirstKey = 0;\n>      }\n>\n> If this fix is ok please pull from my GitHub fork; username on GitHub is\n> tm314159.\n>\n> Toshi\n>\n>\n>\n> ------------------------------------------------------------------------------\n> Time is money. Stop wasting it! Get your web API in 5 minutes.\n> www.restlet.com/download\n> http://p.sf.net/sfu/restlet\n> _______________________________________________\n> Bitcoin-development mailing list\n> Bitcoin-development at lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140529/c9a1b6ce/attachment.html>"
            },
            {
                "author": "Toshi Morita",
                "date": "2014-05-30T00:10:36",
                "message_text_only": "Ok. Done.\n\nToshi\n\n\n\nOn Thu, May 29, 2014 at 5:06 PM, Mark Friedenbach <mark at monetize.io> wrote:\n\n> Please make a pull request on github. It'll likely get merged quickly.\n> On May 29, 2014 5:04 PM, \"Toshi Morita\" <toshi at peernova.com> wrote:\n>\n>> I ran bitcoind under valgrind and found a place where it references an\n>> uninitialized variable in some cases:\n>>\n>> tm at tm-VirtualBox:~/bitcoind/bitcoin/src$ valgrind ./bitcoind\n>> ==2337== Memcheck, a memory error detector\n>> ==2337== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.\n>> ==2337== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info\n>> ==2337== Command: ./bitcoind\n>> ==2337==\n>> ==2337== Conditional jump or move depends on uninitialised value(s)\n>> ==2337==    at 0x319176: CWallet::LoadKeyMetadata(CPubKey const&,\n>> CKeyMetadata const&) (wallet.cpp:110)\n>> ==2337==    by 0x33645A: ReadKeyValue(CWallet*, CDataStream&,\n>> CDataStream&, CWalletScanState&, std::string&, std::string&)\n>> (walletdb.cpp:509)\n>> ==2337==    by 0x3374F0: CWalletDB::LoadWallet(CWallet*)\n>> (walletdb.cpp:623)\n>> ==2337==    by 0x3218FD: CWallet::LoadWallet(bool&) (wallet.cpp:1485)\n>> ==2337==    by 0x157F16: AppInit2(boost::thread_group&) (init.cpp:958)\n>> ==2337==    by 0x140142: AppInit(int, char**) (bitcoind.cpp:143)\n>> ==2337==    by 0x13649E: main (bitcoind.cpp:180)\n>> ==2337==\n>>\n>> The bug occurs here because nTimeFirstKey is not initialized when the\n>> wallet is instantiated:\n>>\n>> wallet.cpp:63\n>>     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n>>         nTimeFirstKey = nCreationTime;\n>>\n>>\n>> I fixed it in my fork:\n>>\n>> diff --git a/src/wallet.h b/src/wallet.h\n>> index 9607415..b78045f 100644\n>> --- a/src/wallet.h\n>> +++ b/src/wallet.h\n>> @@ -163,6 +163,7 @@ public:\n>>          nOrderPosNext = 0;\n>>          nNextResend = 0;\n>>          nLastResend = 0;\n>> +        nTimeFirstKey = 0;\n>>      }\n>>\n>> If this fix is ok please pull from my GitHub fork; username on GitHub is\n>> tm314159.\n>>\n>> Toshi\n>>\n>>\n>>\n>> ------------------------------------------------------------------------------\n>> Time is money. Stop wasting it! Get your web API in 5 minutes.\n>> www.restlet.com/download\n>> http://p.sf.net/sfu/restlet\n>> _______________________________________________\n>> Bitcoin-development mailing list\n>> Bitcoin-development at lists.sourceforge.net\n>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development\n>>\n>>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140529/2a5c17ed/attachment.html>"
            }
        ],
        "thread_summary": {
            "title": "bitcoind minor bug in wallet and possible fix",
            "categories": [
                "Bitcoin-development"
            ],
            "authors": [
                "Toshi Morita",
                "Mark Friedenbach"
            ],
            "messages_count": 3,
            "total_messages_chars_count": 6892
        }
    },
    {
        "title": "[Bitcoin-development] [QT] Feature proposal: Displaying current Units/Changing Units with status bar control.",
        "thread_messages": [
            {
                "author": "Angel Leon",
                "date": "2014-05-30T16:39:40",
                "message_text_only": "There's been quite a lot of debate over the default unit of display to use,\nyou can read the conversation here, which was closed.\nhttps://github.com/bitcoin/bitcoin/issues/3862\n\nWhatever the side of the debate you're on, wether it should be BTC or mBTC,\nor other, regular users will probably take too long to find a way to change\nthe current unit of display, and if the unit of display were ever changed\nto something other than BTC, the current transaction tables\"Amount\" column\ndon't mention anywhere what Unit of Display is being used.\n\nSo last night I started playing with the idea of having a status bar\ncomponent that would:\n1. Show you what is the current unit of display at all times.\n2. Let you change the unit of display easily.\n\nHere's how it looks (see attachment), just wanted to get feedback, if this\nis something you also consider valuable in terms of user experience, or\nmaybe you don't want to allow any more controls on the status bar (because\nthen people will want to add more and more)\n\nJust want to get some feedback before I continue working on this to polish\nit and submit a pull request.\n\n\nCheers.\nAngel (@gubatron)\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/e28af0c5/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: Screen Shot 2014-05-30 at 12.27.38 PM.png\nType: image/png\nSize: 45646 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140530/e28af0c5/attachment.png>"
            }
        ],
        "thread_summary": {
            "title": "Feature proposal: Displaying current Units/Changing Units with status bar control.",
            "categories": [
                "Bitcoin-development",
                "QT"
            ],
            "authors": [
                "Angel Leon"
            ],
            "messages_count": 1,
            "total_messages_chars_count": 1608
        }
    }
]