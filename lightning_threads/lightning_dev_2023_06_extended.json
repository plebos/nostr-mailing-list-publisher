[{"title": "[Lightning-dev] Bitcoin mail list needs an explicit moderation policy", "thread_messages": [{"author": "Dr Maxim Orlovsky", "date": "2023-06-02T23:43:45", "message_text_only": "Dear community,\n\nI am writing this list to bitcoin-dev mail list, but to prevent potential censorship I am sending CC to lightning-dev mail list, in order to leave the current moderator(s) without an option not to publish the letter and not to leave the topic \u201cunder the cover\u201d (sorry Lightning friends for spamming your list with this off-topic).\n\nA day before yesterday I sent a post to bitcoin-dev referencing the publication of the new Bitcoin scalability and privacy protocol, which had already received a broad reaction across the bitcoin community with literally no critical/negative responses after ~25k of reads [1]. I am not the first-time writer to the mail list and had developed things like RGB smart contracts [2], rust lightning implementation named LNP [3], multiple bitcoin libraries and software [4], [5], during three years was a main contributor to rust-bitcoin [6] etc, etc. The post was clearly not spam and received support from known community members like Giacomo Zucco [7]. Bryan Bishop knows me since 2019 when I was presenting Storm protocol on the stage on Scaling Bitcoin in Tel Aviv - and he was writing a transcript of it [8]. Thus, I am not a random unknown guy or a known spammer - and the post can be easily checked for not containing any scam promotion.\n\nNevertheless, I next day I see other e-mails getting released to bitcoin-dev, while mine - was not. It is not a problem, but since we already had an incident in the past where Bryan reported the failure of his software, me and my colleagues from LNP/BP Standards Association started asking questions about whether this post ever got to Bryan.\n\nWhat happened next was very unexpected. I am giving the core of the conversation over Twitter after in Annex A - with the purpose to showcase the problem I\u2019d like to address in this e-mail. From the discussion, it is clear that bitcoin-dev mail list lacks clear explicit moderation (or peer-review) policies, which must be applied on a non-selective basis. Also, Bryan Bishop, as the current moderator, had abused his powers in achieving his agenda based on personal likes or dislikes. The conversation went nowhere, and the post got published only after a requirement from Peter Todd [9].\n\nIn this regard, I\u2019d like to propose the following:\n\n- The bitcoin-dev mail list must have a clear moderation (or pre-publication peer-review policy). It can be proposed and discussed in this mail list and, upon agreement, must become public and obligatory.\n- Bryan Bishop, who was acting for a long time as moderator, must be appreciated for many years of unpaid work, and replaced with the new moderator who should be selected from a list of potential candidates (again in this mail list) using the criteria \u201cleast votes against\u201d.\n- The role of the moderator(s) must be purely executive of the policies, without any personal preferences.\n- A dedicated mail list should be created (\u201cbitcoin-dev-unmoderated\u201d) which will publish all submissions without moderation. It may contain spam and only people interested in the auditing bitcoin-dev main mal list non-censorship will be reading it. However, if they will notice that some non-spam e-mails were censored, they can announce that publicly. In this case, the failing moderator(s) should be removed and replaced.\n- The incentive to work as a moderator should be reputation-based.\n\nWith that, I rest my case.\n\nKind regards,\n\nMaxim Orlovsky\n\n[1]:https://twitter.com/lnp_bp/status/1664329393131364353?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n\n[2]:https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021554.html\n\n[3]:https://github.com/LNP-WG\n\n[4]:https://github.com/BP-WG\n\n[5]:https://github.com/mycitadel\n\n[6]:https://github.com/rust-bitcoin/rust-bitcoin/graphs/contributors?from=2018-12-31&to=2022-04-12&type=c\n\n[7]:https://twitter.com/giacomozucco/status/1664515543154544645?s=61&t=9A8uvggqKVKV3sT4HPlQygandhttps://twitter.com/giacomozucco/status/1664731504923095041?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n\n[8]:https://scalingbitcoin.org/transcript/telaviv2019/wip-storm-layer-2-3-storage-and-messaging\n\n[9]:https://twitter.com/peterktodd/status/1664742651835367424?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n\nAnnex A:\n\n- @kanzure just like to check that our submission to bitcoin-dev hasn\u2019t got to spam <https://twitter.com/lnp_bp/status/1664649328349069320?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- A few mods are reviewing it <https://twitter.com/kanzure/status/1664680893548572677?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Oh, so a peer review is required to get to bitcoin-dev mail list? Never read about that requirement anywhere <https://twitter.com/lnp_bp/status/1664695061462777858?s=61&t=9A8uvggqKVKV3sT4HPlQyg>. Seems like bitcoin-dev mail list requirements are now specific to the author :) <https://twitter.com/dr_orlovsky/status/1664695668475142144?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Not the greatest email to pull this over. I'll double check but pretty sure the antagonization is boring me. <https://twitter.com/kanzure/status/1664705038315409420?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Not sure I understand what you are saying. Can you please clarify? <https://twitter.com/dr_orlovsky/status/1664705280393859103?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- You are boring me and these antics don't make me want to go click approve on your email. <https://twitter.com/kanzure/status/1664705509147004946?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Are you the person to approve emails for it? <https://twitter.com/phyrooo/status/1664732932068589568?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Yes <https://twitter.com/kanzure/status/1664733107096899585?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- It appears that people boring @kanzure is going through a dedicated review procedure on bitcoin-dev mail list. Good moderation! Very clear policy! <https://twitter.com/dr_orlovsky/status/1664706165790461959?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- What are you even doing. How does this behavior suppose to get people to help you? <https://twitter.com/kanzure/status/1664706931083329536?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- I am not expecting you to help me - and never asked. I expect you to openly declare moderation (or peer review) policy and follow it. <https://twitter.com/dr_orlovsky/status/1664719295123685381?s=61&t=9A8uvggqKVKV3sT4HPlQyg> Since \u201cif you get me bored I will not click an accept button\u201d is not a moderation policy which I expect from bitcoin-dev mail list. Probably not just me. <https://twitter.com/dr_orlovsky/status/1664719786633310209?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Yeah I mean I don't think these tweets are likely to get me to enthusiastically resolve your problem... I dunno man. What's even going on here. <https://twitter.com/kanzure/status/1664735139065208833?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n- Bitcoin mail list clearly lacks explicit moderation policy. The same mistake like with rust-bitcoin 1+ yrs ago. I am fine with peer review. Moderation. But only explicit - not just \u201cthe way I (dis)like this guy\u201d <https://twitter.com/dr_orlovsky/status/1664736404931321859?s=61&t=9A8uvggqKVKV3sT4HPlQyg>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230602/f0fd6794/attachment-0001.html>", "summary": "A proposal has been made for the bitcoin-dev mail list to have clear moderation policies and for the current moderator to be replaced, following allegations of abuse of power."}, {"author": "Bryan Bishop", "date": "2023-06-03T00:06:53", "message_text_only": "Hi Maxim,\n\nThis is exceedingly boring. This is not a good use of your time. There are\nthousands of developers subscribed to this mailing list, and we should not\nwaste their time, including this discussion.\n\nOn Fri, Jun 2, 2023 at 6:44\u202fPM Dr Maxim Orlovsky via Lightning-dev <\nlightning-dev at lists.linuxfoundation.org> wrote:\n\n> What happened next was very unexpected. I am giving the core of the\n> conversation over Twitter after in Annex A - with the purpose to showcase\n> the problem I\u2019d like to address in this e-mail. From the discussion, it is\n> clear that bitcoin-dev mail list lacks clear explicit moderation (or\n> peer-review) policies, which must be applied on a non-selective basis.\n> Also, Bryan Bishop, as the current moderator, had abused his powers in\n> achieving his agenda based on personal likes or dislikes. The conversation\n> went nowhere, and the post got published only after a requirement from\n> Peter Todd [9].\n>\n\nWhat exactly is the abuse being alleged here though? Why would it be\nsurprising that your tweets didn't get the behavior you wanted out of me?\nIn general mailing list moderators should not be sending items through\nbased on twitter mobbing, that's a policy you can consider if you want to\nthink about policies.\n\nAnnex A:\n>\n>    - @kanzure just like to check that our submission to bitcoin-dev\n>    hasn\u2019t got to spam <\n>    https://twitter.com/lnp_bp/status/1664649328349069320?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n>    >\n>    - A few mods are reviewing it <\n>    https://twitter.com/kanzure/status/1664680893548572677?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n>    >\n>    - Oh, so a peer review is required to get to bitcoin-dev mail list?\n>    Never read about that requirement anywhere <\n>    https://twitter.com/lnp_bp/status/1664695061462777858?s=61&t=9A8uvggqKVKV3sT4HPlQyg>.\n>    Seems like bitcoin-dev mail list requirements are now specific to the\n>    author :) <\n>    https://twitter.com/dr_orlovsky/status/1664695668475142144?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n>    >\n>    - Not the greatest email to pull this over. I'll double check but\n>    pretty sure the antagonization is boring me. <\n>    https://twitter.com/kanzure/status/1664705038315409420?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n>    >\n>    - Not sure I understand what you are saying. Can you please clarify? <\n>    https://twitter.com/dr_orlovsky/status/1664705280393859103?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n>    >\n>    - You are boring me and these antics don't make me want to go click\n>    approve on your email. <\n>    https://twitter.com/kanzure/status/1664705509147004946?s=61&t=9A8uvggqKVKV3sT4HPlQyg\n>    >\n>\n>\nExcluding your (and my) other tweets and any other collaborators' tweets\nfrom your report is kind of weird. I think you should include the other\ntweets that you were sending me because it provides context. Zooming out,\nthe entirety of your complaint seems to be about moderation queue latency\nand delay. Why would you, or anyone, allege that that moderator latency is\nindicative of me specifically not liking you? Wouldn't it be more likely\nthat the other moderators and I are looking at your email and talking with\neach other asynchronously about whether to suggest edits/reject/submit?\n\nI suspect you may be attributing malice to me because I recently asked you\nto stop tagging me on quantum woo and you might have taken that negatively\n- please keep in mind that not everyone believes in quantum consciousness\nor is interested in hearing about it, and it's okay for people like me to\nnot want to engage on each of your different interests. There is some\noverlap in our interests outside of crypto, but that isn't one of them. I\nnoticed some odd tweets from you to me after that, so that's why that\nincident came to my mind as a possible explanation for this.\n\nThank you.\n\n- Bryan\nhttps://twitter.com/kanzure\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230602/b8b5b953/attachment.html>", "summary": "A developer alleges that the bitcoin-dev mailing list lacks clear moderation policies and that the current moderator has abused their powers."}], "thread_summary": {"title": "Bitcoin mail list needs an explicit moderation policy", "categories": ["Lightning-dev"], "authors": ["Bryan Bishop", "Dr Maxim Orlovsky"], "messages_count": 2, "total_messages_chars_count": 11198, "convo_summary": "A proposal has been made to replace the current moderator of the bitcoin-dev mailing list due to allegations of abuse of power and a lack of clear moderation policies, according to developer Bryan Bishop."}}, {"title": "[Lightning-dev] Lightning Network", "thread_messages": [{"author": "Satoshi Nakamoto", "date": "2023-06-03T21:53:31", "message_text_only": "The Lightning Network is a great achievement. I have created satoshi at vistomail.com\u00a0as my lightning address. I feel comfortable now that humans have the ability to conduct global business and scale with fast, and secure lightning payments. Lightning can process more transactions per second than any financial instrument. You are light years ahead of the traditional banking system. Bitcoin is a huge success and will continue to scale.\n\nSatoshi Nakamoto\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230603/62fa2e14/attachment.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: publickey - satoshi at vistomail.com - 0xE21BDB6C.asc\nType: application/pgp-keys\nSize: 653 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230603/62fa2e14/attachment.bin>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 249 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230603/62fa2e14/attachment.sig>", "summary": "Satoshi Nakamoto praises the Lightning Network for its ability to conduct global business with fast and secure lightning payments, processing more transactions than any financial instrument."}, {"author": "Peter Todd", "date": "2023-06-03T22:48:35", "message_text_only": "On Sat, Jun 03, 2023 at 09:53:31PM +0000, Satoshi Nakamoto wrote:\n> The Lightning Network is a great achievement. I have created satoshi at vistomail.com\u00a0as my lightning address. I feel comfortable now that humans have the ability to conduct global business and scale with fast, and secure lightning payments. Lightning can process more transactions per second than any financial instrument. You are light years ahead of the traditional banking system. Bitcoin is a huge success and will continue to scale.\n> \n> Satoshi Nakamoto\n\nBTW Vistomail seems to have recently changed ownership based on the fact that\nthe whois records and website content were recently changed:\n\n    $ whois vistomail.com\n       Domain Name: VISTOMAIL.COM\n       Registry Domain ID: 534373285_DOMAIN_COM-VRSN\n       Registrar WHOIS Server: whois.godaddy.com\n       Registrar URL: http://www.godaddy.com\n       Updated Date: 2023-04-26T18:36:42Z\n       Creation Date: 2006-07-27T09:46:18Z\n       Registry Expiry Date: 2026-07-27T09:46:18Z\n\nObviously, we can assume this is yet another scammer pretending to be Satoshi.\nI would suggest we block this entire domain from the list.\n\n-- \nhttps://petertodd.org 'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 833 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230603/66d7329c/attachment.sig>", "summary": "Satoshi Nakamoto praises the Lightning Network for its ability to conduct global business and scale with fast, secure payments, and creates a lightning address."}, {"author": "Secure Anonymous Surfing", "date": "2023-06-04T01:29:35", "message_text_only": "I thought I would respond from my secureanonymoussurfing.com email address as well to give a little more validation to my account.\n\nPeter, before you make false statements about the domain, I want to clarify that the domain vistomail.com hasn't changed hands since I registered it. What you see is a purchase update (added years) on who.is. I thought you might know that as smart as you are. I added years to ownership recently because the domain was set to expire. You always know best though, with your smart ass comments and constant arguments you start on Twitter. I see everything. You have the greatest technology known to man and you argue over everything. Stop arguing and work harder. Even now you just dismiss and you are trying to start an argument and stopped my ability submit posts in bitcoin-dev, bitcoin-core-dev, but now in lightning-dev as of 5 mins ago. I understand and it is obvious the new developers no longer want me around I am totally fine with that.\n\nJust to clarify, I also added satoshin at vistomail.com and contact at vistomail.com as lightning addresses just so Craig Wright can stop tryin to sue everyone and pretend he is the creator of Bitcoin. (Cobra and Hodlonaut You held your own, nice work) I have many other ways to prove that I am the real Satoshi, but I never cared because I am the real Satoshi. I saw all the messages, everyones. Including yours peter. I added my lightning address to contact at secureanonymoussurfing.com. I was just giving a compliment to the Lightning team. Really nice work. It is a really great thing what you all did and thank you for making me feel so welcomed.\n\n\nSatoshi Nakamoto\n\n\n------- Original Message -------\nOn Saturday, June 3rd, 2023 at 5:37 PM, Satoshi Nakamoto <satoshi at vistomail.com> wrote:\n\n\n> Sure Peter, but the clarify the domain vistomail.com hasn't changed hands since I registered it. What you see is a purchase update on who.is. I added years to ownership recently. You humans always know best though, with your smart ass comments and constant arguments you start on Twitter. I have seen everything now. You have the greatest technology known to man and you argue over everything. Stop arguing and work harder. Even now you are trying to start an argument.\n> \n\n> Just to clarify, I also added satoshin at vistomail.com and contact at vistomail.com as lightning addresses just so Craig Wright can stop tryin to sue everyone and pretend he is the creator of Bitcoin. (Cobra and Hodlonaut You held your own, excellent work) I have many other ways to prove that I am the real Satoshi, but I never cared because I am the real Satoshi. I saw all the messages, everyones. Including yours peter. I was just giving a compliment to the Lightning team. Really nice work. It is a really great thing what you all did.\n> \n\n> \n\n> Satoshi Nakamoto\n> \n\n> \n\n> \n\n> \n\n> \n\n> \n\n> ------- Original Message -------\n> On Saturday, June 3rd, 2023 at 3:48 PM, Peter Todd pete at petertodd.org wrote:\n> \n\n> \n\n> \n\n> > On Sat, Jun 03, 2023 at 09:53:31PM +0000, Satoshi Nakamoto wrote:\n> > \n\n> > > The Lightning Network is a great achievement. I have created satoshi at vistomail.com as my lightning address. I feel comfortable now that humans have the ability to conduct global business and scale with fast, and secure lightning payments. Lightning can process more transactions per second than any financial instrument. You are light years ahead of the traditional banking system. Bitcoin is a huge success and will continue to scale.\n> > > \n\n> > > Satoshi Nakamoto\n> > \n\n> > BTW Vistomail seems to have recently changed ownership based on the fact that\n> > the whois records and website content were recently changed:\n> > \n\n> > $ whois vistomail.com\n> > Domain Name: VISTOMAIL.COM\n> > Registry Domain ID: 534373285_DOMAIN_COM-VRSN\n> > Registrar WHOIS Server: whois.godaddy.com\n> > Registrar URL: http://www.godaddy.com\n> > Updated Date: 2023-04-26T18:36:42Z\n> > Creation Date: 2006-07-27T09:46:18Z\n> > Registry Expiry Date: 2026-07-27T09:46:18Z\n> > \n\n> > Obviously, we can assume this is yet another scammer pretending to be Satoshi.\n> > I would suggest we block this entire domain from the list.\n> > \n\n> > --\n> > https://petertodd.org 'peter'[:-1]@petertodd.org\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: publickey - contact at secureanonymoussurfing.com - 0x6674D3A1.asc\nType: application/pgp-keys\nSize: 689 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230604/8f721ad3/attachment.bin>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 249 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230604/8f721ad3/attachment.sig>", "summary": "Satoshi Nakamoto, the creator of Bitcoin, responded to Peter Todd's false statements about the domain vistomail.com, clarifying that it hasn't changed hands since he registered it. He also added lightning addresses to stop Craig Wright from suing everyone and to prove that he is the real Satoshi."}], "thread_summary": {"title": "Lightning Network", "categories": ["Lightning-dev"], "authors": ["Secure Anonymous Surfing", "Satoshi Nakamoto", "Peter Todd"], "messages_count": 3, "total_messages_chars_count": 7554, "convo_summary": "Satoshi Nakamoto praises the Lightning Network for its ability to conduct global business with fast and secure lightning payments, processing more transactions than any financial instrument. He also responds to Peter Todd's false statements about a domain and adds lightning addresses to prove his identity and prevent lawsuits."}}, {"title": "[Lightning-dev] In Response to Peter Todd | secureanonymoussurfing.com", "thread_messages": [{"author": "Secure Anonymous Surfing", "date": "2023-06-04T01:26:56", "message_text_only": "I thought I would respond from my secureanonymoussurfing.com email address as well to give a little more validation to my account.\n\n\nPeter, before you make false statements about the domain, I want to clarify that the domain vistomail.com\u00a0hasn't changed hands since I registered it. What you see is a purchase update (added years) on who.is. I thought you might know that as smart as you are. I added years to ownership recently because the domain was set to expire. You always know best though, with your smart ass comments and constant arguments you start on Twitter. I see everything. You have the greatest technology known to man and you argue over everything. Stop arguing and work harder. Even now you just dismiss and you are trying to start an argument and stopped my ability submit posts in bitcoin-dev, bitcoin-core-dev, but now in lightning-dev as of 5 mins ago. I understand and it is obvious the new developers no longer want me around I am totally fine with that. Just to clarify, I also added satoshin at vistomail.com\u00a0and contact at vistomail.com\u00a0as lightning addresses just so Craig Wright can stop tryin to sue everyone and pretend he is the creator of Bitcoin. (Cobra and Hodlonaut You held your own, nice work) I have many other ways to prove that I am the real Satoshi, but I never cared because I am the real Satoshi. I saw all the messages, everyones. Including yours peter. I added my lightning address to contact at secureanonymoussurfing.com. I was just giving a compliment to the Lightning team. Really nice work. It is a really great thing what you all did and thank you for making me feel so welcomed. Satoshi Nakamoto\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230604/4938e89a/attachment-0001.html>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: publickey - contact at secureanonymoussurfing.com - 0x6674D3A1.asc\nType: application/pgp-keys\nSize: 689 bytes\nDesc: not available\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230604/4938e89a/attachment-0001.bin>\n-------------- next part --------------\nA non-text attachment was scrubbed...\nName: signature.asc\nType: application/pgp-signature\nSize: 249 bytes\nDesc: OpenPGP digital signature\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230604/4938e89a/attachment-0001.sig>", "summary": "The person claiming to be Satoshi Nakamoto has added a Lightning Network address to their email and clarified that the domain vistomail.com hasn't changed hands."}], "thread_summary": {"title": "In Response to Peter Todd | secureanonymoussurfing.com", "categories": ["Lightning-dev"], "authors": ["Secure Anonymous Surfing"], "messages_count": 1, "total_messages_chars_count": 2457}}, {"title": "[Lightning-dev] Today\u2019s Spam", "thread_messages": [{"author": "Matt Corallo", "date": "2023-06-04T08:06:02", "message_text_only": "It seems moderation needs to go back on to tamp down spam for a minute. See y\u2019all Monday.\n\nMatt", "summary": "Moderation is needed to control spam. See you on Monday."}], "thread_summary": {"title": "Today\u2019s Spam", "categories": ["Lightning-dev"], "authors": ["Matt Corallo"], "messages_count": 1, "total_messages_chars_count": 95}}, {"title": "[Lightning-dev] Liquidity griefing for 0-conf dual-funded txs", "thread_messages": [{"author": "Antoine Riard", "date": "2023-06-07T00:41:12", "message_text_only": "Hi Bastien,\n\n> This can be fixed by using a \"soft lock\" when selecting utxos for a non\n> 0-conf funding attempt. 0-conf funding attempts must ignore soft locked\n> utxos while non 0-conf funding attempts can (should) reuse soft locked\n> utxos.\n\nIf my understanding of the \"soft lock\" strategy is correct - Only locking\nUTXO when it's a non 0-conf funding attempt - I think you're still exposed\nto liquidity griefing with dual-funding or splicing.\n\nThe vector of griefing you're mentioning is the lack of signature release\nfor a shared input by your counterparty. However, in the context of\ndual-funding where the counterparty can add any output with\n`tx_add_output`, the transaction can be pinned in the mempool in a very\nsneaky way e.g abuse of replacement rule 3.\n\nThis latter pinning vector is advantageous to the malicious counterparty as\nI think you can batch your pinning against unrelated dual-funding, only\nlinked in the mempool by a malicious pinning CPFP.\n\nIt is left as an exercise to the reader to find other vectors of pinnings\nthat can be played out in the dual-funding flow.\n\nIn terms of (quick) solution to prevent liquidity griefing related to\nmempool vectors, the (honest) counterparty can enforce that any contributed\noutputs must be encumbered by a 1 CSV, unless being a 2-of-2 funding.\nStill, this mitigation can be limited as I think the initial commitment\ntransaction must have anchor outputs on each-side, for each party to\nrecover its contributed UTXOs in any case.\n\n> Then we immediately send `channel_ready` as well and start using that\n> channel (because we know we won't double spend ourselves). This is nice\n> because it lets us use 0-conf in a way where only one side of the\n> channel needs to trust the other side (instead of both sides trusting\n> each other).\n\n>From the 0-conf initiator viewpoint (the one contributing the UTXO(s)), it\ncan still be valuable to disable inbound payments, or requires a longer\n`cltv_expiry_delta` than usual, in case of mempool fee spikes delaying the\n0-conf chain confirmation.\n\nBeyond, it sounds liquidity griefing provoked by a lack of signature\nrelease or mempool funny games will always be there ? Even for the second\nwith package relay/nVersion deployment, there is still the duration between\nthe pinning happening among network mempools and your replacement broadcast\nkickstarts.\n\nAs a more long-term solution, we might reuse solutions worked out to\nmitigate channel jamming, as the abstract problem is the same, namely your\ncounterparty can lock up scarce resources without (on-chain/off-chain\nwhatever) fees paid.\n\nE.g the Staking Credentials framework could be deployed by dual-funding\nmarket-makers beyond routing hops [0]. The dual-funding initiator should\npay to the maker a fee scale up on the amount of UTXOs contributed, and\nsome worst-case liquidity griefing scenario. A privacy-preserving\ncredential can be introduced between the payment of the fee and the redeem\nof the service to unlink dual-funding initiators (if the maker has enough\nvolume to constitute a reasonable anonymity set).\n\nBest,\nAntoine\n\n[0]\nhttps://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003964.html\n\n\nLe sam. 6 mai 2023 \u00e0 04:15, Bastien TEINTURIER <bastien at acinq.fr> a \u00e9crit :\n\n> Good morning list,\n>\n> One of the challenges created by the introduction of dual funded\n> transactions [1] in lightning is how to protect against liquidity\n> griefing attacks from malicious peers [2].\n>\n> Let's start by reviewing this liquidity griefing issue. The dual funding\n> protocol starts by exchanging data about the utxos each peer adds to the\n> shared transaction, then exchange signatures and broadcast the resulting\n> transaction. If peers lock their utxos as soon as they've decided to add\n> them to the shared transaction, the remote node may go silent. If that\n> happens, the honest node has some liquidity that is locked and unusable.\n>\n> This cannot easily be fixed by simply unlocking utxos *after* detecting\n> that the remote node is fishy, because the remote node would still have\n> succeeded at locking your liquidity for a (small) duration, and could\n> start other instances of that attack with different node_ids.\n>\n> An elegant solution to this issue is to never lock utxos used in dual\n> funded transactions. If a remote node goes silent in the middle of an\n> instance of the protocol, your utxos will automatically be re-used in\n> another instance of the protocol. The only drawback with that approach\n> is that when you have multiple concurrent instances of dual funding with\n> honest peers, some of them may fail because they are double-spent by one\n> of the concurrent instances. This is acceptable, since the protocol\n> should complete fairly quickly when peers are honest, and at worst, it\n> can simply be restarted when failure is detected.\n>\n> But that solution falls short when using 0-conf, because accidentally\n> double-spending a 0-conf channel (because of concurrent instances) can\n> result in loss of funds for one of the peers (if payments were made on\n> that channel before detecting the double-spend). It seems like using\n> 0-conf forces us to lock utxos to avoid this issue, which means that\n> nodes offering 0-conf services expose themselves to liquidity griefing.\n>\n> Another related issue is that nodes that want to offer 0-conf channels\n> must ensure that the utxos they use for 0-conf are isolated from the\n> utxos they use for non 0-conf, otherwise it is not possible to properly\n> lock utxos, because of the following race scenario:\n>\n> - utxoA is selected for a non 0-conf funding attempt and not locked\n>   (to protect against liquidity griefing)\n> - utxoA is also selected for a 0-conf funding attempt (because it is\n>   found unlocked in the wallet) and then locked\n> - the funding transaction for the 0-conf channel is successfully\n>   published first and that channel is instantly used for payments\n> - the funding transaction for the non 0-conf channel is then published\n>   and confirms, accidentally double-spending the 0-conf channel\n>\n> This can be fixed by using a \"soft lock\" when selecting utxos for a non\n> 0-conf funding attempt. 0-conf funding attempts must ignore soft locked\n> utxos while non 0-conf funding attempts can (should) reuse soft locked\n> utxos.\n>\n> In eclair, we are currently doing \"opportunistic\" 0-conf:\n>\n> - if we receive `channel_ready` immediately (which means that our peer\n>   trusts us to use 0-conf)\n> - and we're the only contributor to the funding transaction (our peer\n>   doesn't have any input that they could use to double-spend)\n> - and the transaction hasn't been RBF-ed yet\n>\n> Then we immediately send `channel_ready` as well and start using that\n> channel (because we know we won't double spend ourselves). This is nice\n> because it lets us use 0-conf in a way where only one side of the\n> channel needs to trust the other side (instead of both sides trusting\n> each other).\n>\n> Unfortunately, we cannot do that anymore when mixing 0-conf and non\n> 0-conf funding attempts, because the utxos may be soft locked,\n> preventing us from \"upgrading\" to 0-conf.\n>\n> You have successfully reached the end of this quite technical post,\n> congrats! My goal with this post is to gather ideas on how we could\n> improve that situation and offer good enough protections against\n> liquidity griefing for nodes offering 0-conf services. Please share\n> your ideas! And yes, I know, 0-conf is a massive implementation pain\n> point that we would all like to remove from our codebases, but hey,\n> users like it \u00af\\_(\u30c4)_/\u00af\n>\n> Cheers,\n> Bastien\n>\n> [1] https://github.com/lightning/bolts/pull/851\n> [2] https://github.com/lightning/bolts/pull/851#discussion_r997537630\n> _______________________________________________\n> Lightning-dev mailing list\n> Lightning-dev at lists.linuxfoundation.org\n> https://lists.linuxfoundation.org/mailman/listinfo/lightning-dev\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230607/50378bc7/attachment.html>", "summary": "The Lightning Network may be vulnerable to liquidity griefing, where a counterparty locks up resources without paying fees. A \"soft lock\" strategy may not be enough to prevent this, and other solutions, such as the Staking Credentials framework, may need to be explored."}, {"author": "Bastien TEINTURIER", "date": "2023-06-07T09:46:36", "message_text_only": "Hey Antoine,\n\nSure, I agree with you, the usual mempool pinning issues still apply\nregardless of whether we use 0-conf or not. And we must solve them\nall at some point!\n\nI think a reasonable mid-term solution is to use v3 transactions for\nchannel funding and splicing, with the obvious caveat that it makes\nthem identifiable on-chain (unless in the longer term, everyone moves\nto v3 transactions for everything, which doesn't seem crazy to me?).\n\nIn the longer term, we know that some kind of anti-DoS token will need\nto be exchanged to avoid this whole class of issue, but as we've often\ndiscussed this isn't an easy thing to design and analyze...\n\n> it can still be valuable to disable inbound payments, or requires a\n> longer `cltv_expiry_delta` than usual, in case of mempool fee spikes\n> delaying the 0-conf chain confirmation.\n\nSure, that's a policy that nodes can decide to apply if they want to,\nand it should be simple enough to implement (no protocol changes are\nneeded).\n\nThanks,\nBastien\n\nLe mer. 7 juin 2023 \u00e0 02:41, Antoine Riard <antoine.riard at gmail.com> a\n\u00e9crit :\n\n> Hi Bastien,\n>\n> > This can be fixed by using a \"soft lock\" when selecting utxos for a non\n> > 0-conf funding attempt. 0-conf funding attempts must ignore soft locked\n> > utxos while non 0-conf funding attempts can (should) reuse soft locked\n> > utxos.\n>\n> If my understanding of the \"soft lock\" strategy is correct - Only locking\n> UTXO when it's a non 0-conf funding attempt - I think you're still exposed\n> to liquidity griefing with dual-funding or splicing.\n>\n> The vector of griefing you're mentioning is the lack of signature release\n> for a shared input by your counterparty. However, in the context of\n> dual-funding where the counterparty can add any output with\n> `tx_add_output`, the transaction can be pinned in the mempool in a very\n> sneaky way e.g abuse of replacement rule 3.\n>\n> This latter pinning vector is advantageous to the malicious counterparty\n> as I think you can batch your pinning against unrelated dual-funding, only\n> linked in the mempool by a malicious pinning CPFP.\n>\n> It is left as an exercise to the reader to find other vectors of pinnings\n> that can be played out in the dual-funding flow.\n>\n> In terms of (quick) solution to prevent liquidity griefing related to\n> mempool vectors, the (honest) counterparty can enforce that any contributed\n> outputs must be encumbered by a 1 CSV, unless being a 2-of-2 funding.\n> Still, this mitigation can be limited as I think the initial commitment\n> transaction must have anchor outputs on each-side, for each party to\n> recover its contributed UTXOs in any case.\n>\n> > Then we immediately send `channel_ready` as well and start using that\n> > channel (because we know we won't double spend ourselves). This is nice\n> > because it lets us use 0-conf in a way where only one side of the\n> > channel needs to trust the other side (instead of both sides trusting\n> > each other).\n>\n> From the 0-conf initiator viewpoint (the one contributing the UTXO(s)), it\n> can still be valuable to disable inbound payments, or requires a longer\n> `cltv_expiry_delta` than usual, in case of mempool fee spikes delaying the\n> 0-conf chain confirmation.\n>\n> Beyond, it sounds liquidity griefing provoked by a lack of signature\n> release or mempool funny games will always be there ? Even for the second\n> with package relay/nVersion deployment, there is still the duration between\n> the pinning happening among network mempools and your replacement broadcast\n> kickstarts.\n>\n> As a more long-term solution, we might reuse solutions worked out to\n> mitigate channel jamming, as the abstract problem is the same, namely your\n> counterparty can lock up scarce resources without (on-chain/off-chain\n> whatever) fees paid.\n>\n> E.g the Staking Credentials framework could be deployed by dual-funding\n> market-makers beyond routing hops [0]. The dual-funding initiator should\n> pay to the maker a fee scale up on the amount of UTXOs contributed, and\n> some worst-case liquidity griefing scenario. A privacy-preserving\n> credential can be introduced between the payment of the fee and the redeem\n> of the service to unlink dual-funding initiators (if the maker has enough\n> volume to constitute a reasonable anonymity set).\n>\n> Best,\n> Antoine\n>\n> [0]\n> https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003964.html\n>\n>\n> Le sam. 6 mai 2023 \u00e0 04:15, Bastien TEINTURIER <bastien at acinq.fr> a\n> \u00e9crit :\n>\n>> Good morning list,\n>>\n>> One of the challenges created by the introduction of dual funded\n>> transactions [1] in lightning is how to protect against liquidity\n>> griefing attacks from malicious peers [2].\n>>\n>> Let's start by reviewing this liquidity griefing issue. The dual funding\n>> protocol starts by exchanging data about the utxos each peer adds to the\n>> shared transaction, then exchange signatures and broadcast the resulting\n>> transaction. If peers lock their utxos as soon as they've decided to add\n>> them to the shared transaction, the remote node may go silent. If that\n>> happens, the honest node has some liquidity that is locked and unusable.\n>>\n>> This cannot easily be fixed by simply unlocking utxos *after* detecting\n>> that the remote node is fishy, because the remote node would still have\n>> succeeded at locking your liquidity for a (small) duration, and could\n>> start other instances of that attack with different node_ids.\n>>\n>> An elegant solution to this issue is to never lock utxos used in dual\n>> funded transactions. If a remote node goes silent in the middle of an\n>> instance of the protocol, your utxos will automatically be re-used in\n>> another instance of the protocol. The only drawback with that approach\n>> is that when you have multiple concurrent instances of dual funding with\n>> honest peers, some of them may fail because they are double-spent by one\n>> of the concurrent instances. This is acceptable, since the protocol\n>> should complete fairly quickly when peers are honest, and at worst, it\n>> can simply be restarted when failure is detected.\n>>\n>> But that solution falls short when using 0-conf, because accidentally\n>> double-spending a 0-conf channel (because of concurrent instances) can\n>> result in loss of funds for one of the peers (if payments were made on\n>> that channel before detecting the double-spend). It seems like using\n>> 0-conf forces us to lock utxos to avoid this issue, which means that\n>> nodes offering 0-conf services expose themselves to liquidity griefing.\n>>\n>> Another related issue is that nodes that want to offer 0-conf channels\n>> must ensure that the utxos they use for 0-conf are isolated from the\n>> utxos they use for non 0-conf, otherwise it is not possible to properly\n>> lock utxos, because of the following race scenario:\n>>\n>> - utxoA is selected for a non 0-conf funding attempt and not locked\n>>   (to protect against liquidity griefing)\n>> - utxoA is also selected for a 0-conf funding attempt (because it is\n>>   found unlocked in the wallet) and then locked\n>> - the funding transaction for the 0-conf channel is successfully\n>>   published first and that channel is instantly used for payments\n>> - the funding transaction for the non 0-conf channel is then published\n>>   and confirms, accidentally double-spending the 0-conf channel\n>>\n>> This can be fixed by using a \"soft lock\" when selecting utxos for a non\n>> 0-conf funding attempt. 0-conf funding attempts must ignore soft locked\n>> utxos while non 0-conf funding attempts can (should) reuse soft locked\n>> utxos.\n>>\n>> In eclair, we are currently doing \"opportunistic\" 0-conf:\n>>\n>> - if we receive `channel_ready` immediately (which means that our peer\n>>   trusts us to use 0-conf)\n>> - and we're the only contributor to the funding transaction (our peer\n>>   doesn't have any input that they could use to double-spend)\n>> - and the transaction hasn't been RBF-ed yet\n>>\n>> Then we immediately send `channel_ready` as well and start using that\n>> channel (because we know we won't double spend ourselves). This is nice\n>> because it lets us use 0-conf in a way where only one side of the\n>> channel needs to trust the other side (instead of both sides trusting\n>> each other).\n>>\n>> Unfortunately, we cannot do that anymore when mixing 0-conf and non\n>> 0-conf funding attempts, because the utxos may be soft locked,\n>> preventing us from \"upgrading\" to 0-conf.\n>>\n>> You have successfully reached the end of this quite technical post,\n>> congrats! My goal with this post is to gather ideas on how we could\n>> improve that situation and offer good enough protections against\n>> liquidity griefing for nodes offering 0-conf services. Please share\n>> your ideas! And yes, I know, 0-conf is a massive implementation pain\n>> point that we would all like to remove from our codebases, but hey,\n>> users like it \u00af\\_(\u30c4)_/\u00af\n>>\n>> Cheers,\n>> Bastien\n>>\n>> [1] https://github.com/lightning/bolts/pull/851\n>> [2] https://github.com/lightning/bolts/pull/851#discussion_r997537630\n>> _______________________________________________\n>> Lightning-dev mailing list\n>> Lightning-dev at lists.linuxfoundation.org\n>> https://lists.linuxfoundation.org/mailman/listinfo/lightning-dev\n>>\n>\n-------------- next part --------------\nAn HTML attachment was scrubbed...\nURL: <http://lists.linuxfoundation.org/pipermail/lightning-dev/attachments/20230607/e913019a/attachment.html>", "summary": "The use of v3 transactions for channel funding and splicing could be a mid-term solution to mempool pinning issues. In the longer term, an anti-DoS token may be needed. Disabling inbound payments or using longer `cltv_expiry_delta` can also be implemented as a policy."}], "thread_summary": {"title": "Liquidity griefing for 0-conf dual-funded txs", "categories": ["Lightning-dev"], "authors": ["Bastien TEINTURIER", "Antoine Riard"], "messages_count": 2, "total_messages_chars_count": 17462, "convo_summary": "Antoine Riard warns that the Lightning Network may be vulnerable to liquidity griefing, suggesting that other solutions like the Staking Credentials framework may need to be explored. Meanwhile, Bastien TEINTURIER proposes using v3 transactions for channel funding and splicing as a mid-term solution to mempool pinning issues, and suggests implementing policies like disabling inbound payments or using longer `cltv_expiry_delta`."}}]